var n7=Object.defineProperty;var N=(E,A)=>n7(E,"name",{value:A,configurable:!0});import{g as n,i as u,B as H6,I as I7,M as t,f as st,a as YR,r as d6,b as ce,c as R_,d as IE,e as k,h as TE,j as ve,t as Jn,N as Et,p as TO,k as DE,l as Dn,m as lO,n as vo,o as gl,q as O_,s as PM,u as _A,v as M1,w as a7,x as AA,y as dL,z as _1,A as Rr,C as P1,R as i7,D as n_,E as Vo,F as r7,G as Lt,H as _s,P as sE,J as cs,K as gL,L as L7,O as N7,Q as _r,S as Or,T as f6,U as _l,V as Ki,W as CO,X as Pr,Y as I_,Z as Kl,_ as YM,$ as T7,a0 as S7,a1 as o7,a2 as Pl,a3 as fL,a4 as l7,a5 as C7,a6 as U7,a7 as u7,a8 as D7,a9 as M7,aa as _7,ab as P7,ac as yt,ad as a_,ae as G7,af as c7,ag as bR,ah as kR,ai as h7,aj as B6,ak as jo,al as H7,am as d7,an as f7,ao as Dx,ap as B7,aq as g7,ar as K7}from"./index-DUU8oUJM.js";const ml=Object.freeze(Object.defineProperty({__proto__:null,get AddPokeballModifier(){return HD},get AddVoucherModifier(){return dD},get AttackTypeBoosterModifier(){return Pn},get BaseStatModifier(){return ro},get BerryModifier(){return CE},get BoostBugSpawnModifier(){return Ko},get BypassSpeedChanceModifier(){return Mi},get ConsumableModifier(){return Aa},get ConsumablePokemonModifier(){return VR},get ConsumablePokemonMoveModifier(){return Co},get ContactHeldItemTransferChanceModifier(){return Hi},get CritBoosterModifier(){return aL},get CriticalCatchChanceBoosterModifier(){return Bo},get DamageMoneyRewardModifier(){return Ia},get DoubleBattleChanceBoosterModifier(){return EL},get EnemyAttackStatusEffectChanceModifier(){return NL},get EnemyDamageBoosterModifier(){return Fo},get EnemyDamageReducerModifier(){return po},get EnemyEndureChanceModifier(){return yo},get EnemyFusionChanceModifier(){return wo},get EnemyPersistentModifier(){return hn},get EnemyStatusEffectHealChanceModifier(){return Yo},get EnemyTurnHealModifier(){return Wo},get EvoTrackerModifier(){return Lo},get EvolutionItemModifier(){return WD},get EvolutionStatBoosterModifier(){return fD},get ExpBalanceModifier(){return Go},get ExpBoosterModifier(){return LL},get ExpShareModifier(){return Po},get ExtraModifierModifier(){return ia},get FlinchChanceModifier(){return lo},get FusePokemonModifier(){return Do},get GigantamaxAccessModifier(){return OL},get HealShopCostModifier(){return aa},get HealingBoosterModifier(){return Gi},get HeldItemTransferModifier(){return mo},get HiddenAbilityRateBoosterModifier(){return Gn},get HitHealModifier(){return Ra},get IvScannerModifier(){return di},get LapsingPersistentModifier(){return Ea},get LapsingPokemonHeldItemModifier(){return nL},get LevelIncrementBoosterModifier(){return Oa},get LockModifierTiersModifier(){return go},get MapModifier(){return ao},get MegaEvolutionAccessModifier(){return RL},get Modifier(){return no},get ModifierBar(){return Oo},get MoneyInterestModifier(){return fo},get MoneyMultiplierModifier(){return IO},get MoneyRewardModifier(){return YD},get MultipleParticipantExpBonusModifier(){return Mo},get PersistentModifier(){return kA},get PokemonAllMovePpRestoreModifier(){return KD},get PokemonBaseStatFlatModifier(){return To},get PokemonBaseStatTotalModifier(){return No},get PokemonExpBoosterModifier(){return _o},get PokemonFormChangeItemModifier(){return UR},get PokemonFriendshipBoosterModifier(){return co},get PokemonHeldItemModifier(){return dt},get PokemonHpRestoreModifier(){return na},get PokemonIncrementingStatModifier(){return ui},get PokemonInstantReviveModifier(){return iL},get PokemonLevelIncrementModifier(){return Uo},get PokemonMoveAccuracyBoosterModifier(){return Ho},get PokemonMultiHitModifier(){return RI},get PokemonNatureChangeModifier(){return FD},get PokemonNatureWeightModifier(){return ho},get PokemonPpRestoreModifier(){return gD},get PokemonPpUpModifier(){return mD},get PokemonStatusHealModifier(){return BD},get PreserveBerryModifier(){return Pi},get RememberMoveModifier(){return uo},get ResetNegativeStatStageModifier(){return rL},get ShinyRateBoosterModifier(){return ci},get SpeciesCritBoosterModifier(){return So},get SpeciesStatBoosterModifier(){return Di},get StatBoosterModifier(){return IL},get SurviveDamageModifier(){return oo},get SwitchEffectTransferModifier(){return vI},get TempCritBoosterModifier(){return Io},get TempExtraModifierModifier(){return ra},get TempStatStageBoosterModifier(){return sL},get TerastallizeAccessModifier(){return io},get TerastallizeModifier(){return SR},get TmModifier(){return pD},get TurnHealModifier(){return _i},get TurnHeldItemTransferModifier(){return hi},get TurnStatusEffectModifier(){return sa},get modifierSortFunc(){return Ro},get overrideHeldItems(){return J1},get overrideModifiers(){return Q1}},Symbol.toStringTag,{value:"Module"}));var mn=(E=>(E[E.MOVE=0]="MOVE",E[E.LEGENDARY=1]="LEGENDARY",E[E.SHINY=2]="SHINY",E))(mn||{}),I=(E=>(E[E.UNKNOWN=-1]="UNKNOWN",E[E.NORMAL=0]="NORMAL",E[E.FIGHTING=1]="FIGHTING",E[E.FLYING=2]="FLYING",E[E.POISON=3]="POISON",E[E.GROUND=4]="GROUND",E[E.ROCK=5]="ROCK",E[E.BUG=6]="BUG",E[E.GHOST=7]="GHOST",E[E.STEEL=8]="STEEL",E[E.FIRE=9]="FIRE",E[E.WATER=10]="WATER",E[E.GRASS=11]="GRASS",E[E.ELECTRIC=12]="ELECTRIC",E[E.PSYCHIC=13]="PSYCHIC",E[E.ICE=14]="ICE",E[E.DRAGON=15]="DRAGON",E[E.DARK=16]="DARK",E[E.FAIRY=17]="FAIRY",E[E.STELLAR=18]="STELLAR",E))(I||{}),at=(E=>(E[E.GENDERLESS=-1]="GENDERLESS",E[E.MALE=0]="MALE",E[E.FEMALE=1]="FEMALE",E))(at||{});function SL(E){switch(E){case 0:return"♂";case 1:return"♀"}return""}N(SL,"getGenderSymbol");function $n(E,A){switch(E){case 0:return A?"#006090":"#40c8f8";case 1:return A?"#984038":"#f89890"}return"#ffffff"}N($n,"getGenderColor");var be=(E=>(E[E.POKEBALL=0]="POKEBALL",E[E.GREAT_BALL=1]="GREAT_BALL",E[E.ULTRA_BALL=2]="ULTRA_BALL",E[E.ROGUE_BALL=3]="ROGUE_BALL",E[E.MASTER_BALL=4]="MASTER_BALL",E[E.LUXURY_BALL=5]="LUXURY_BALL",E))(be||{}),Oe=(E=>(E[E.NONE=0]="NONE",E[E.SUNNY=1]="SUNNY",E[E.RAIN=2]="RAIN",E[E.SANDSTORM=3]="SANDSTORM",E[E.HAIL=4]="HAIL",E[E.SNOW=5]="SNOW",E[E.FOG=6]="FOG",E[E.HEAVY_RAIN=7]="HEAVY_RAIN",E[E.HARSH_SUN=8]="HARSH_SUN",E[E.STRONG_WINDS=9]="STRONG_WINDS",E))(Oe||{}),At=(E=>(E[E.HARDY=0]="HARDY",E[E.LONELY=1]="LONELY",E[E.BRAVE=2]="BRAVE",E[E.ADAMANT=3]="ADAMANT",E[E.NAUGHTY=4]="NAUGHTY",E[E.BOLD=5]="BOLD",E[E.DOCILE=6]="DOCILE",E[E.RELAXED=7]="RELAXED",E[E.IMPISH=8]="IMPISH",E[E.LAX=9]="LAX",E[E.TIMID=10]="TIMID",E[E.HASTY=11]="HASTY",E[E.SERIOUS=12]="SERIOUS",E[E.JOLLY=13]="JOLLY",E[E.NAIVE=14]="NAIVE",E[E.MODEST=15]="MODEST",E[E.MILD=16]="MILD",E[E.QUIET=17]="QUIET",E[E.BASHFUL=18]="BASHFUL",E[E.RASH=19]="RASH",E[E.CALM=20]="CALM",E[E.GENTLE=21]="GENTLE",E[E.SASSY=22]="SASSY",E[E.CAREFUL=23]="CAREFUL",E[E.QUIRKY=24]="QUIRKY",E))(At||{}),T=(E=>(E[E.TOWN=0]="TOWN",E[E.PLAINS=1]="PLAINS",E[E.GRASS=2]="GRASS",E[E.TALL_GRASS=3]="TALL_GRASS",E[E.METROPOLIS=4]="METROPOLIS",E[E.FOREST=5]="FOREST",E[E.SEA=6]="SEA",E[E.SWAMP=7]="SWAMP",E[E.BEACH=8]="BEACH",E[E.LAKE=9]="LAKE",E[E.SEABED=10]="SEABED",E[E.MOUNTAIN=11]="MOUNTAIN",E[E.BADLANDS=12]="BADLANDS",E[E.CAVE=13]="CAVE",E[E.DESERT=14]="DESERT",E[E.ICE_CAVE=15]="ICE_CAVE",E[E.MEADOW=16]="MEADOW",E[E.POWER_PLANT=17]="POWER_PLANT",E[E.VOLCANO=18]="VOLCANO",E[E.GRAVEYARD=19]="GRAVEYARD",E[E.DOJO=20]="DOJO",E[E.FACTORY=21]="FACTORY",E[E.RUINS=22]="RUINS",E[E.WASTELAND=23]="WASTELAND",E[E.ABYSS=24]="ABYSS",E[E.SPACE=25]="SPACE",E[E.CONSTRUCTION_SITE=26]="CONSTRUCTION_SITE",E[E.JUNGLE=27]="JUNGLE",E[E.FAIRY_CAVE=28]="FAIRY_CAVE",E[E.TEMPLE=29]="TEMPLE",E[E.SLUM=30]="SLUM",E[E.SNOWY_FOREST=31]="SNOWY_FOREST",E[E.ISLAND=40]="ISLAND",E[E.LABORATORY=41]="LABORATORY",E[E.END=50]="END",E))(T||{}),e=(E=>(E[E.BULBASAUR=1]="BULBASAUR",E[E.IVYSAUR=2]="IVYSAUR",E[E.VENUSAUR=3]="VENUSAUR",E[E.CHARMANDER=4]="CHARMANDER",E[E.CHARMELEON=5]="CHARMELEON",E[E.CHARIZARD=6]="CHARIZARD",E[E.SQUIRTLE=7]="SQUIRTLE",E[E.WARTORTLE=8]="WARTORTLE",E[E.BLASTOISE=9]="BLASTOISE",E[E.CATERPIE=10]="CATERPIE",E[E.METAPOD=11]="METAPOD",E[E.BUTTERFREE=12]="BUTTERFREE",E[E.WEEDLE=13]="WEEDLE",E[E.KAKUNA=14]="KAKUNA",E[E.BEEDRILL=15]="BEEDRILL",E[E.PIDGEY=16]="PIDGEY",E[E.PIDGEOTTO=17]="PIDGEOTTO",E[E.PIDGEOT=18]="PIDGEOT",E[E.RATTATA=19]="RATTATA",E[E.RATICATE=20]="RATICATE",E[E.SPEAROW=21]="SPEAROW",E[E.FEAROW=22]="FEAROW",E[E.EKANS=23]="EKANS",E[E.ARBOK=24]="ARBOK",E[E.PIKACHU=25]="PIKACHU",E[E.RAICHU=26]="RAICHU",E[E.SANDSHREW=27]="SANDSHREW",E[E.SANDSLASH=28]="SANDSLASH",E[E.NIDORAN_F=29]="NIDORAN_F",E[E.NIDORINA=30]="NIDORINA",E[E.NIDOQUEEN=31]="NIDOQUEEN",E[E.NIDORAN_M=32]="NIDORAN_M",E[E.NIDORINO=33]="NIDORINO",E[E.NIDOKING=34]="NIDOKING",E[E.CLEFAIRY=35]="CLEFAIRY",E[E.CLEFABLE=36]="CLEFABLE",E[E.VULPIX=37]="VULPIX",E[E.NINETALES=38]="NINETALES",E[E.JIGGLYPUFF=39]="JIGGLYPUFF",E[E.WIGGLYTUFF=40]="WIGGLYTUFF",E[E.ZUBAT=41]="ZUBAT",E[E.GOLBAT=42]="GOLBAT",E[E.ODDISH=43]="ODDISH",E[E.GLOOM=44]="GLOOM",E[E.VILEPLUME=45]="VILEPLUME",E[E.PARAS=46]="PARAS",E[E.PARASECT=47]="PARASECT",E[E.VENONAT=48]="VENONAT",E[E.VENOMOTH=49]="VENOMOTH",E[E.DIGLETT=50]="DIGLETT",E[E.DUGTRIO=51]="DUGTRIO",E[E.MEOWTH=52]="MEOWTH",E[E.PERSIAN=53]="PERSIAN",E[E.PSYDUCK=54]="PSYDUCK",E[E.GOLDUCK=55]="GOLDUCK",E[E.MANKEY=56]="MANKEY",E[E.PRIMEAPE=57]="PRIMEAPE",E[E.GROWLITHE=58]="GROWLITHE",E[E.ARCANINE=59]="ARCANINE",E[E.POLIWAG=60]="POLIWAG",E[E.POLIWHIRL=61]="POLIWHIRL",E[E.POLIWRATH=62]="POLIWRATH",E[E.ABRA=63]="ABRA",E[E.KADABRA=64]="KADABRA",E[E.ALAKAZAM=65]="ALAKAZAM",E[E.MACHOP=66]="MACHOP",E[E.MACHOKE=67]="MACHOKE",E[E.MACHAMP=68]="MACHAMP",E[E.BELLSPROUT=69]="BELLSPROUT",E[E.WEEPINBELL=70]="WEEPINBELL",E[E.VICTREEBEL=71]="VICTREEBEL",E[E.TENTACOOL=72]="TENTACOOL",E[E.TENTACRUEL=73]="TENTACRUEL",E[E.GEODUDE=74]="GEODUDE",E[E.GRAVELER=75]="GRAVELER",E[E.GOLEM=76]="GOLEM",E[E.PONYTA=77]="PONYTA",E[E.RAPIDASH=78]="RAPIDASH",E[E.SLOWPOKE=79]="SLOWPOKE",E[E.SLOWBRO=80]="SLOWBRO",E[E.MAGNEMITE=81]="MAGNEMITE",E[E.MAGNETON=82]="MAGNETON",E[E.FARFETCHD=83]="FARFETCHD",E[E.DODUO=84]="DODUO",E[E.DODRIO=85]="DODRIO",E[E.SEEL=86]="SEEL",E[E.DEWGONG=87]="DEWGONG",E[E.GRIMER=88]="GRIMER",E[E.MUK=89]="MUK",E[E.SHELLDER=90]="SHELLDER",E[E.CLOYSTER=91]="CLOYSTER",E[E.GASTLY=92]="GASTLY",E[E.HAUNTER=93]="HAUNTER",E[E.GENGAR=94]="GENGAR",E[E.ONIX=95]="ONIX",E[E.DROWZEE=96]="DROWZEE",E[E.HYPNO=97]="HYPNO",E[E.KRABBY=98]="KRABBY",E[E.KINGLER=99]="KINGLER",E[E.VOLTORB=100]="VOLTORB",E[E.ELECTRODE=101]="ELECTRODE",E[E.EXEGGCUTE=102]="EXEGGCUTE",E[E.EXEGGUTOR=103]="EXEGGUTOR",E[E.CUBONE=104]="CUBONE",E[E.MAROWAK=105]="MAROWAK",E[E.HITMONLEE=106]="HITMONLEE",E[E.HITMONCHAN=107]="HITMONCHAN",E[E.LICKITUNG=108]="LICKITUNG",E[E.KOFFING=109]="KOFFING",E[E.WEEZING=110]="WEEZING",E[E.RHYHORN=111]="RHYHORN",E[E.RHYDON=112]="RHYDON",E[E.CHANSEY=113]="CHANSEY",E[E.TANGELA=114]="TANGELA",E[E.KANGASKHAN=115]="KANGASKHAN",E[E.HORSEA=116]="HORSEA",E[E.SEADRA=117]="SEADRA",E[E.GOLDEEN=118]="GOLDEEN",E[E.SEAKING=119]="SEAKING",E[E.STARYU=120]="STARYU",E[E.STARMIE=121]="STARMIE",E[E.MR_MIME=122]="MR_MIME",E[E.SCYTHER=123]="SCYTHER",E[E.JYNX=124]="JYNX",E[E.ELECTABUZZ=125]="ELECTABUZZ",E[E.MAGMAR=126]="MAGMAR",E[E.PINSIR=127]="PINSIR",E[E.TAUROS=128]="TAUROS",E[E.MAGIKARP=129]="MAGIKARP",E[E.GYARADOS=130]="GYARADOS",E[E.LAPRAS=131]="LAPRAS",E[E.DITTO=132]="DITTO",E[E.EEVEE=133]="EEVEE",E[E.VAPOREON=134]="VAPOREON",E[E.JOLTEON=135]="JOLTEON",E[E.FLAREON=136]="FLAREON",E[E.PORYGON=137]="PORYGON",E[E.OMANYTE=138]="OMANYTE",E[E.OMASTAR=139]="OMASTAR",E[E.KABUTO=140]="KABUTO",E[E.KABUTOPS=141]="KABUTOPS",E[E.AERODACTYL=142]="AERODACTYL",E[E.SNORLAX=143]="SNORLAX",E[E.ARTICUNO=144]="ARTICUNO",E[E.ZAPDOS=145]="ZAPDOS",E[E.MOLTRES=146]="MOLTRES",E[E.DRATINI=147]="DRATINI",E[E.DRAGONAIR=148]="DRAGONAIR",E[E.DRAGONITE=149]="DRAGONITE",E[E.MEWTWO=150]="MEWTWO",E[E.MEW=151]="MEW",E[E.CHIKORITA=152]="CHIKORITA",E[E.BAYLEEF=153]="BAYLEEF",E[E.MEGANIUM=154]="MEGANIUM",E[E.CYNDAQUIL=155]="CYNDAQUIL",E[E.QUILAVA=156]="QUILAVA",E[E.TYPHLOSION=157]="TYPHLOSION",E[E.TOTODILE=158]="TOTODILE",E[E.CROCONAW=159]="CROCONAW",E[E.FERALIGATR=160]="FERALIGATR",E[E.SENTRET=161]="SENTRET",E[E.FURRET=162]="FURRET",E[E.HOOTHOOT=163]="HOOTHOOT",E[E.NOCTOWL=164]="NOCTOWL",E[E.LEDYBA=165]="LEDYBA",E[E.LEDIAN=166]="LEDIAN",E[E.SPINARAK=167]="SPINARAK",E[E.ARIADOS=168]="ARIADOS",E[E.CROBAT=169]="CROBAT",E[E.CHINCHOU=170]="CHINCHOU",E[E.LANTURN=171]="LANTURN",E[E.PICHU=172]="PICHU",E[E.CLEFFA=173]="CLEFFA",E[E.IGGLYBUFF=174]="IGGLYBUFF",E[E.TOGEPI=175]="TOGEPI",E[E.TOGETIC=176]="TOGETIC",E[E.NATU=177]="NATU",E[E.XATU=178]="XATU",E[E.MAREEP=179]="MAREEP",E[E.FLAAFFY=180]="FLAAFFY",E[E.AMPHAROS=181]="AMPHAROS",E[E.BELLOSSOM=182]="BELLOSSOM",E[E.MARILL=183]="MARILL",E[E.AZUMARILL=184]="AZUMARILL",E[E.SUDOWOODO=185]="SUDOWOODO",E[E.POLITOED=186]="POLITOED",E[E.HOPPIP=187]="HOPPIP",E[E.SKIPLOOM=188]="SKIPLOOM",E[E.JUMPLUFF=189]="JUMPLUFF",E[E.AIPOM=190]="AIPOM",E[E.SUNKERN=191]="SUNKERN",E[E.SUNFLORA=192]="SUNFLORA",E[E.YANMA=193]="YANMA",E[E.WOOPER=194]="WOOPER",E[E.QUAGSIRE=195]="QUAGSIRE",E[E.ESPEON=196]="ESPEON",E[E.UMBREON=197]="UMBREON",E[E.MURKROW=198]="MURKROW",E[E.SLOWKING=199]="SLOWKING",E[E.MISDREAVUS=200]="MISDREAVUS",E[E.UNOWN=201]="UNOWN",E[E.WOBBUFFET=202]="WOBBUFFET",E[E.GIRAFARIG=203]="GIRAFARIG",E[E.PINECO=204]="PINECO",E[E.FORRETRESS=205]="FORRETRESS",E[E.DUNSPARCE=206]="DUNSPARCE",E[E.GLIGAR=207]="GLIGAR",E[E.STEELIX=208]="STEELIX",E[E.SNUBBULL=209]="SNUBBULL",E[E.GRANBULL=210]="GRANBULL",E[E.QWILFISH=211]="QWILFISH",E[E.SCIZOR=212]="SCIZOR",E[E.SHUCKLE=213]="SHUCKLE",E[E.HERACROSS=214]="HERACROSS",E[E.SNEASEL=215]="SNEASEL",E[E.TEDDIURSA=216]="TEDDIURSA",E[E.URSARING=217]="URSARING",E[E.SLUGMA=218]="SLUGMA",E[E.MAGCARGO=219]="MAGCARGO",E[E.SWINUB=220]="SWINUB",E[E.PILOSWINE=221]="PILOSWINE",E[E.CORSOLA=222]="CORSOLA",E[E.REMORAID=223]="REMORAID",E[E.OCTILLERY=224]="OCTILLERY",E[E.DELIBIRD=225]="DELIBIRD",E[E.MANTINE=226]="MANTINE",E[E.SKARMORY=227]="SKARMORY",E[E.HOUNDOUR=228]="HOUNDOUR",E[E.HOUNDOOM=229]="HOUNDOOM",E[E.KINGDRA=230]="KINGDRA",E[E.PHANPY=231]="PHANPY",E[E.DONPHAN=232]="DONPHAN",E[E.PORYGON2=233]="PORYGON2",E[E.STANTLER=234]="STANTLER",E[E.SMEARGLE=235]="SMEARGLE",E[E.TYROGUE=236]="TYROGUE",E[E.HITMONTOP=237]="HITMONTOP",E[E.SMOOCHUM=238]="SMOOCHUM",E[E.ELEKID=239]="ELEKID",E[E.MAGBY=240]="MAGBY",E[E.MILTANK=241]="MILTANK",E[E.BLISSEY=242]="BLISSEY",E[E.RAIKOU=243]="RAIKOU",E[E.ENTEI=244]="ENTEI",E[E.SUICUNE=245]="SUICUNE",E[E.LARVITAR=246]="LARVITAR",E[E.PUPITAR=247]="PUPITAR",E[E.TYRANITAR=248]="TYRANITAR",E[E.LUGIA=249]="LUGIA",E[E.HO_OH=250]="HO_OH",E[E.CELEBI=251]="CELEBI",E[E.TREECKO=252]="TREECKO",E[E.GROVYLE=253]="GROVYLE",E[E.SCEPTILE=254]="SCEPTILE",E[E.TORCHIC=255]="TORCHIC",E[E.COMBUSKEN=256]="COMBUSKEN",E[E.BLAZIKEN=257]="BLAZIKEN",E[E.MUDKIP=258]="MUDKIP",E[E.MARSHTOMP=259]="MARSHTOMP",E[E.SWAMPERT=260]="SWAMPERT",E[E.POOCHYENA=261]="POOCHYENA",E[E.MIGHTYENA=262]="MIGHTYENA",E[E.ZIGZAGOON=263]="ZIGZAGOON",E[E.LINOONE=264]="LINOONE",E[E.WURMPLE=265]="WURMPLE",E[E.SILCOON=266]="SILCOON",E[E.BEAUTIFLY=267]="BEAUTIFLY",E[E.CASCOON=268]="CASCOON",E[E.DUSTOX=269]="DUSTOX",E[E.LOTAD=270]="LOTAD",E[E.LOMBRE=271]="LOMBRE",E[E.LUDICOLO=272]="LUDICOLO",E[E.SEEDOT=273]="SEEDOT",E[E.NUZLEAF=274]="NUZLEAF",E[E.SHIFTRY=275]="SHIFTRY",E[E.TAILLOW=276]="TAILLOW",E[E.SWELLOW=277]="SWELLOW",E[E.WINGULL=278]="WINGULL",E[E.PELIPPER=279]="PELIPPER",E[E.RALTS=280]="RALTS",E[E.KIRLIA=281]="KIRLIA",E[E.GARDEVOIR=282]="GARDEVOIR",E[E.SURSKIT=283]="SURSKIT",E[E.MASQUERAIN=284]="MASQUERAIN",E[E.SHROOMISH=285]="SHROOMISH",E[E.BRELOOM=286]="BRELOOM",E[E.SLAKOTH=287]="SLAKOTH",E[E.VIGOROTH=288]="VIGOROTH",E[E.SLAKING=289]="SLAKING",E[E.NINCADA=290]="NINCADA",E[E.NINJASK=291]="NINJASK",E[E.SHEDINJA=292]="SHEDINJA",E[E.WHISMUR=293]="WHISMUR",E[E.LOUDRED=294]="LOUDRED",E[E.EXPLOUD=295]="EXPLOUD",E[E.MAKUHITA=296]="MAKUHITA",E[E.HARIYAMA=297]="HARIYAMA",E[E.AZURILL=298]="AZURILL",E[E.NOSEPASS=299]="NOSEPASS",E[E.SKITTY=300]="SKITTY",E[E.DELCATTY=301]="DELCATTY",E[E.SABLEYE=302]="SABLEYE",E[E.MAWILE=303]="MAWILE",E[E.ARON=304]="ARON",E[E.LAIRON=305]="LAIRON",E[E.AGGRON=306]="AGGRON",E[E.MEDITITE=307]="MEDITITE",E[E.MEDICHAM=308]="MEDICHAM",E[E.ELECTRIKE=309]="ELECTRIKE",E[E.MANECTRIC=310]="MANECTRIC",E[E.PLUSLE=311]="PLUSLE",E[E.MINUN=312]="MINUN",E[E.VOLBEAT=313]="VOLBEAT",E[E.ILLUMISE=314]="ILLUMISE",E[E.ROSELIA=315]="ROSELIA",E[E.GULPIN=316]="GULPIN",E[E.SWALOT=317]="SWALOT",E[E.CARVANHA=318]="CARVANHA",E[E.SHARPEDO=319]="SHARPEDO",E[E.WAILMER=320]="WAILMER",E[E.WAILORD=321]="WAILORD",E[E.NUMEL=322]="NUMEL",E[E.CAMERUPT=323]="CAMERUPT",E[E.TORKOAL=324]="TORKOAL",E[E.SPOINK=325]="SPOINK",E[E.GRUMPIG=326]="GRUMPIG",E[E.SPINDA=327]="SPINDA",E[E.TRAPINCH=328]="TRAPINCH",E[E.VIBRAVA=329]="VIBRAVA",E[E.FLYGON=330]="FLYGON",E[E.CACNEA=331]="CACNEA",E[E.CACTURNE=332]="CACTURNE",E[E.SWABLU=333]="SWABLU",E[E.ALTARIA=334]="ALTARIA",E[E.ZANGOOSE=335]="ZANGOOSE",E[E.SEVIPER=336]="SEVIPER",E[E.LUNATONE=337]="LUNATONE",E[E.SOLROCK=338]="SOLROCK",E[E.BARBOACH=339]="BARBOACH",E[E.WHISCASH=340]="WHISCASH",E[E.CORPHISH=341]="CORPHISH",E[E.CRAWDAUNT=342]="CRAWDAUNT",E[E.BALTOY=343]="BALTOY",E[E.CLAYDOL=344]="CLAYDOL",E[E.LILEEP=345]="LILEEP",E[E.CRADILY=346]="CRADILY",E[E.ANORITH=347]="ANORITH",E[E.ARMALDO=348]="ARMALDO",E[E.FEEBAS=349]="FEEBAS",E[E.MILOTIC=350]="MILOTIC",E[E.CASTFORM=351]="CASTFORM",E[E.KECLEON=352]="KECLEON",E[E.SHUPPET=353]="SHUPPET",E[E.BANETTE=354]="BANETTE",E[E.DUSKULL=355]="DUSKULL",E[E.DUSCLOPS=356]="DUSCLOPS",E[E.TROPIUS=357]="TROPIUS",E[E.CHIMECHO=358]="CHIMECHO",E[E.ABSOL=359]="ABSOL",E[E.WYNAUT=360]="WYNAUT",E[E.SNORUNT=361]="SNORUNT",E[E.GLALIE=362]="GLALIE",E[E.SPHEAL=363]="SPHEAL",E[E.SEALEO=364]="SEALEO",E[E.WALREIN=365]="WALREIN",E[E.CLAMPERL=366]="CLAMPERL",E[E.HUNTAIL=367]="HUNTAIL",E[E.GOREBYSS=368]="GOREBYSS",E[E.RELICANTH=369]="RELICANTH",E[E.LUVDISC=370]="LUVDISC",E[E.BAGON=371]="BAGON",E[E.SHELGON=372]="SHELGON",E[E.SALAMENCE=373]="SALAMENCE",E[E.BELDUM=374]="BELDUM",E[E.METANG=375]="METANG",E[E.METAGROSS=376]="METAGROSS",E[E.REGIROCK=377]="REGIROCK",E[E.REGICE=378]="REGICE",E[E.REGISTEEL=379]="REGISTEEL",E[E.LATIAS=380]="LATIAS",E[E.LATIOS=381]="LATIOS",E[E.KYOGRE=382]="KYOGRE",E[E.GROUDON=383]="GROUDON",E[E.RAYQUAZA=384]="RAYQUAZA",E[E.JIRACHI=385]="JIRACHI",E[E.DEOXYS=386]="DEOXYS",E[E.TURTWIG=387]="TURTWIG",E[E.GROTLE=388]="GROTLE",E[E.TORTERRA=389]="TORTERRA",E[E.CHIMCHAR=390]="CHIMCHAR",E[E.MONFERNO=391]="MONFERNO",E[E.INFERNAPE=392]="INFERNAPE",E[E.PIPLUP=393]="PIPLUP",E[E.PRINPLUP=394]="PRINPLUP",E[E.EMPOLEON=395]="EMPOLEON",E[E.STARLY=396]="STARLY",E[E.STARAVIA=397]="STARAVIA",E[E.STARAPTOR=398]="STARAPTOR",E[E.BIDOOF=399]="BIDOOF",E[E.BIBAREL=400]="BIBAREL",E[E.KRICKETOT=401]="KRICKETOT",E[E.KRICKETUNE=402]="KRICKETUNE",E[E.SHINX=403]="SHINX",E[E.LUXIO=404]="LUXIO",E[E.LUXRAY=405]="LUXRAY",E[E.BUDEW=406]="BUDEW",E[E.ROSERADE=407]="ROSERADE",E[E.CRANIDOS=408]="CRANIDOS",E[E.RAMPARDOS=409]="RAMPARDOS",E[E.SHIELDON=410]="SHIELDON",E[E.BASTIODON=411]="BASTIODON",E[E.BURMY=412]="BURMY",E[E.WORMADAM=413]="WORMADAM",E[E.MOTHIM=414]="MOTHIM",E[E.COMBEE=415]="COMBEE",E[E.VESPIQUEN=416]="VESPIQUEN",E[E.PACHIRISU=417]="PACHIRISU",E[E.BUIZEL=418]="BUIZEL",E[E.FLOATZEL=419]="FLOATZEL",E[E.CHERUBI=420]="CHERUBI",E[E.CHERRIM=421]="CHERRIM",E[E.SHELLOS=422]="SHELLOS",E[E.GASTRODON=423]="GASTRODON",E[E.AMBIPOM=424]="AMBIPOM",E[E.DRIFLOON=425]="DRIFLOON",E[E.DRIFBLIM=426]="DRIFBLIM",E[E.BUNEARY=427]="BUNEARY",E[E.LOPUNNY=428]="LOPUNNY",E[E.MISMAGIUS=429]="MISMAGIUS",E[E.HONCHKROW=430]="HONCHKROW",E[E.GLAMEOW=431]="GLAMEOW",E[E.PURUGLY=432]="PURUGLY",E[E.CHINGLING=433]="CHINGLING",E[E.STUNKY=434]="STUNKY",E[E.SKUNTANK=435]="SKUNTANK",E[E.BRONZOR=436]="BRONZOR",E[E.BRONZONG=437]="BRONZONG",E[E.BONSLY=438]="BONSLY",E[E.MIME_JR=439]="MIME_JR",E[E.HAPPINY=440]="HAPPINY",E[E.CHATOT=441]="CHATOT",E[E.SPIRITOMB=442]="SPIRITOMB",E[E.GIBLE=443]="GIBLE",E[E.GABITE=444]="GABITE",E[E.GARCHOMP=445]="GARCHOMP",E[E.MUNCHLAX=446]="MUNCHLAX",E[E.RIOLU=447]="RIOLU",E[E.LUCARIO=448]="LUCARIO",E[E.HIPPOPOTAS=449]="HIPPOPOTAS",E[E.HIPPOWDON=450]="HIPPOWDON",E[E.SKORUPI=451]="SKORUPI",E[E.DRAPION=452]="DRAPION",E[E.CROAGUNK=453]="CROAGUNK",E[E.TOXICROAK=454]="TOXICROAK",E[E.CARNIVINE=455]="CARNIVINE",E[E.FINNEON=456]="FINNEON",E[E.LUMINEON=457]="LUMINEON",E[E.MANTYKE=458]="MANTYKE",E[E.SNOVER=459]="SNOVER",E[E.ABOMASNOW=460]="ABOMASNOW",E[E.WEAVILE=461]="WEAVILE",E[E.MAGNEZONE=462]="MAGNEZONE",E[E.LICKILICKY=463]="LICKILICKY",E[E.RHYPERIOR=464]="RHYPERIOR",E[E.TANGROWTH=465]="TANGROWTH",E[E.ELECTIVIRE=466]="ELECTIVIRE",E[E.MAGMORTAR=467]="MAGMORTAR",E[E.TOGEKISS=468]="TOGEKISS",E[E.YANMEGA=469]="YANMEGA",E[E.LEAFEON=470]="LEAFEON",E[E.GLACEON=471]="GLACEON",E[E.GLISCOR=472]="GLISCOR",E[E.MAMOSWINE=473]="MAMOSWINE",E[E.PORYGON_Z=474]="PORYGON_Z",E[E.GALLADE=475]="GALLADE",E[E.PROBOPASS=476]="PROBOPASS",E[E.DUSKNOIR=477]="DUSKNOIR",E[E.FROSLASS=478]="FROSLASS",E[E.ROTOM=479]="ROTOM",E[E.UXIE=480]="UXIE",E[E.MESPRIT=481]="MESPRIT",E[E.AZELF=482]="AZELF",E[E.DIALGA=483]="DIALGA",E[E.PALKIA=484]="PALKIA",E[E.HEATRAN=485]="HEATRAN",E[E.REGIGIGAS=486]="REGIGIGAS",E[E.GIRATINA=487]="GIRATINA",E[E.CRESSELIA=488]="CRESSELIA",E[E.PHIONE=489]="PHIONE",E[E.MANAPHY=490]="MANAPHY",E[E.DARKRAI=491]="DARKRAI",E[E.SHAYMIN=492]="SHAYMIN",E[E.ARCEUS=493]="ARCEUS",E[E.VICTINI=494]="VICTINI",E[E.SNIVY=495]="SNIVY",E[E.SERVINE=496]="SERVINE",E[E.SERPERIOR=497]="SERPERIOR",E[E.TEPIG=498]="TEPIG",E[E.PIGNITE=499]="PIGNITE",E[E.EMBOAR=500]="EMBOAR",E[E.OSHAWOTT=501]="OSHAWOTT",E[E.DEWOTT=502]="DEWOTT",E[E.SAMUROTT=503]="SAMUROTT",E[E.PATRAT=504]="PATRAT",E[E.WATCHOG=505]="WATCHOG",E[E.LILLIPUP=506]="LILLIPUP",E[E.HERDIER=507]="HERDIER",E[E.STOUTLAND=508]="STOUTLAND",E[E.PURRLOIN=509]="PURRLOIN",E[E.LIEPARD=510]="LIEPARD",E[E.PANSAGE=511]="PANSAGE",E[E.SIMISAGE=512]="SIMISAGE",E[E.PANSEAR=513]="PANSEAR",E[E.SIMISEAR=514]="SIMISEAR",E[E.PANPOUR=515]="PANPOUR",E[E.SIMIPOUR=516]="SIMIPOUR",E[E.MUNNA=517]="MUNNA",E[E.MUSHARNA=518]="MUSHARNA",E[E.PIDOVE=519]="PIDOVE",E[E.TRANQUILL=520]="TRANQUILL",E[E.UNFEZANT=521]="UNFEZANT",E[E.BLITZLE=522]="BLITZLE",E[E.ZEBSTRIKA=523]="ZEBSTRIKA",E[E.ROGGENROLA=524]="ROGGENROLA",E[E.BOLDORE=525]="BOLDORE",E[E.GIGALITH=526]="GIGALITH",E[E.WOOBAT=527]="WOOBAT",E[E.SWOOBAT=528]="SWOOBAT",E[E.DRILBUR=529]="DRILBUR",E[E.EXCADRILL=530]="EXCADRILL",E[E.AUDINO=531]="AUDINO",E[E.TIMBURR=532]="TIMBURR",E[E.GURDURR=533]="GURDURR",E[E.CONKELDURR=534]="CONKELDURR",E[E.TYMPOLE=535]="TYMPOLE",E[E.PALPITOAD=536]="PALPITOAD",E[E.SEISMITOAD=537]="SEISMITOAD",E[E.THROH=538]="THROH",E[E.SAWK=539]="SAWK",E[E.SEWADDLE=540]="SEWADDLE",E[E.SWADLOON=541]="SWADLOON",E[E.LEAVANNY=542]="LEAVANNY",E[E.VENIPEDE=543]="VENIPEDE",E[E.WHIRLIPEDE=544]="WHIRLIPEDE",E[E.SCOLIPEDE=545]="SCOLIPEDE",E[E.COTTONEE=546]="COTTONEE",E[E.WHIMSICOTT=547]="WHIMSICOTT",E[E.PETILIL=548]="PETILIL",E[E.LILLIGANT=549]="LILLIGANT",E[E.BASCULIN=550]="BASCULIN",E[E.SANDILE=551]="SANDILE",E[E.KROKOROK=552]="KROKOROK",E[E.KROOKODILE=553]="KROOKODILE",E[E.DARUMAKA=554]="DARUMAKA",E[E.DARMANITAN=555]="DARMANITAN",E[E.MARACTUS=556]="MARACTUS",E[E.DWEBBLE=557]="DWEBBLE",E[E.CRUSTLE=558]="CRUSTLE",E[E.SCRAGGY=559]="SCRAGGY",E[E.SCRAFTY=560]="SCRAFTY",E[E.SIGILYPH=561]="SIGILYPH",E[E.YAMASK=562]="YAMASK",E[E.COFAGRIGUS=563]="COFAGRIGUS",E[E.TIRTOUGA=564]="TIRTOUGA",E[E.CARRACOSTA=565]="CARRACOSTA",E[E.ARCHEN=566]="ARCHEN",E[E.ARCHEOPS=567]="ARCHEOPS",E[E.TRUBBISH=568]="TRUBBISH",E[E.GARBODOR=569]="GARBODOR",E[E.ZORUA=570]="ZORUA",E[E.ZOROARK=571]="ZOROARK",E[E.MINCCINO=572]="MINCCINO",E[E.CINCCINO=573]="CINCCINO",E[E.GOTHITA=574]="GOTHITA",E[E.GOTHORITA=575]="GOTHORITA",E[E.GOTHITELLE=576]="GOTHITELLE",E[E.SOLOSIS=577]="SOLOSIS",E[E.DUOSION=578]="DUOSION",E[E.REUNICLUS=579]="REUNICLUS",E[E.DUCKLETT=580]="DUCKLETT",E[E.SWANNA=581]="SWANNA",E[E.VANILLITE=582]="VANILLITE",E[E.VANILLISH=583]="VANILLISH",E[E.VANILLUXE=584]="VANILLUXE",E[E.DEERLING=585]="DEERLING",E[E.SAWSBUCK=586]="SAWSBUCK",E[E.EMOLGA=587]="EMOLGA",E[E.KARRABLAST=588]="KARRABLAST",E[E.ESCAVALIER=589]="ESCAVALIER",E[E.FOONGUS=590]="FOONGUS",E[E.AMOONGUSS=591]="AMOONGUSS",E[E.FRILLISH=592]="FRILLISH",E[E.JELLICENT=593]="JELLICENT",E[E.ALOMOMOLA=594]="ALOMOMOLA",E[E.JOLTIK=595]="JOLTIK",E[E.GALVANTULA=596]="GALVANTULA",E[E.FERROSEED=597]="FERROSEED",E[E.FERROTHORN=598]="FERROTHORN",E[E.KLINK=599]="KLINK",E[E.KLANG=600]="KLANG",E[E.KLINKLANG=601]="KLINKLANG",E[E.TYNAMO=602]="TYNAMO",E[E.EELEKTRIK=603]="EELEKTRIK",E[E.EELEKTROSS=604]="EELEKTROSS",E[E.ELGYEM=605]="ELGYEM",E[E.BEHEEYEM=606]="BEHEEYEM",E[E.LITWICK=607]="LITWICK",E[E.LAMPENT=608]="LAMPENT",E[E.CHANDELURE=609]="CHANDELURE",E[E.AXEW=610]="AXEW",E[E.FRAXURE=611]="FRAXURE",E[E.HAXORUS=612]="HAXORUS",E[E.CUBCHOO=613]="CUBCHOO",E[E.BEARTIC=614]="BEARTIC",E[E.CRYOGONAL=615]="CRYOGONAL",E[E.SHELMET=616]="SHELMET",E[E.ACCELGOR=617]="ACCELGOR",E[E.STUNFISK=618]="STUNFISK",E[E.MIENFOO=619]="MIENFOO",E[E.MIENSHAO=620]="MIENSHAO",E[E.DRUDDIGON=621]="DRUDDIGON",E[E.GOLETT=622]="GOLETT",E[E.GOLURK=623]="GOLURK",E[E.PAWNIARD=624]="PAWNIARD",E[E.BISHARP=625]="BISHARP",E[E.BOUFFALANT=626]="BOUFFALANT",E[E.RUFFLET=627]="RUFFLET",E[E.BRAVIARY=628]="BRAVIARY",E[E.VULLABY=629]="VULLABY",E[E.MANDIBUZZ=630]="MANDIBUZZ",E[E.HEATMOR=631]="HEATMOR",E[E.DURANT=632]="DURANT",E[E.DEINO=633]="DEINO",E[E.ZWEILOUS=634]="ZWEILOUS",E[E.HYDREIGON=635]="HYDREIGON",E[E.LARVESTA=636]="LARVESTA",E[E.VOLCARONA=637]="VOLCARONA",E[E.COBALION=638]="COBALION",E[E.TERRAKION=639]="TERRAKION",E[E.VIRIZION=640]="VIRIZION",E[E.TORNADUS=641]="TORNADUS",E[E.THUNDURUS=642]="THUNDURUS",E[E.RESHIRAM=643]="RESHIRAM",E[E.ZEKROM=644]="ZEKROM",E[E.LANDORUS=645]="LANDORUS",E[E.KYUREM=646]="KYUREM",E[E.KELDEO=647]="KELDEO",E[E.MELOETTA=648]="MELOETTA",E[E.GENESECT=649]="GENESECT",E[E.CHESPIN=650]="CHESPIN",E[E.QUILLADIN=651]="QUILLADIN",E[E.CHESNAUGHT=652]="CHESNAUGHT",E[E.FENNEKIN=653]="FENNEKIN",E[E.BRAIXEN=654]="BRAIXEN",E[E.DELPHOX=655]="DELPHOX",E[E.FROAKIE=656]="FROAKIE",E[E.FROGADIER=657]="FROGADIER",E[E.GRENINJA=658]="GRENINJA",E[E.BUNNELBY=659]="BUNNELBY",E[E.DIGGERSBY=660]="DIGGERSBY",E[E.FLETCHLING=661]="FLETCHLING",E[E.FLETCHINDER=662]="FLETCHINDER",E[E.TALONFLAME=663]="TALONFLAME",E[E.SCATTERBUG=664]="SCATTERBUG",E[E.SPEWPA=665]="SPEWPA",E[E.VIVILLON=666]="VIVILLON",E[E.LITLEO=667]="LITLEO",E[E.PYROAR=668]="PYROAR",E[E.FLABEBE=669]="FLABEBE",E[E.FLOETTE=670]="FLOETTE",E[E.FLORGES=671]="FLORGES",E[E.SKIDDO=672]="SKIDDO",E[E.GOGOAT=673]="GOGOAT",E[E.PANCHAM=674]="PANCHAM",E[E.PANGORO=675]="PANGORO",E[E.FURFROU=676]="FURFROU",E[E.ESPURR=677]="ESPURR",E[E.MEOWSTIC=678]="MEOWSTIC",E[E.HONEDGE=679]="HONEDGE",E[E.DOUBLADE=680]="DOUBLADE",E[E.AEGISLASH=681]="AEGISLASH",E[E.SPRITZEE=682]="SPRITZEE",E[E.AROMATISSE=683]="AROMATISSE",E[E.SWIRLIX=684]="SWIRLIX",E[E.SLURPUFF=685]="SLURPUFF",E[E.INKAY=686]="INKAY",E[E.MALAMAR=687]="MALAMAR",E[E.BINACLE=688]="BINACLE",E[E.BARBARACLE=689]="BARBARACLE",E[E.SKRELP=690]="SKRELP",E[E.DRAGALGE=691]="DRAGALGE",E[E.CLAUNCHER=692]="CLAUNCHER",E[E.CLAWITZER=693]="CLAWITZER",E[E.HELIOPTILE=694]="HELIOPTILE",E[E.HELIOLISK=695]="HELIOLISK",E[E.TYRUNT=696]="TYRUNT",E[E.TYRANTRUM=697]="TYRANTRUM",E[E.AMAURA=698]="AMAURA",E[E.AURORUS=699]="AURORUS",E[E.SYLVEON=700]="SYLVEON",E[E.HAWLUCHA=701]="HAWLUCHA",E[E.DEDENNE=702]="DEDENNE",E[E.CARBINK=703]="CARBINK",E[E.GOOMY=704]="GOOMY",E[E.SLIGGOO=705]="SLIGGOO",E[E.GOODRA=706]="GOODRA",E[E.KLEFKI=707]="KLEFKI",E[E.PHANTUMP=708]="PHANTUMP",E[E.TREVENANT=709]="TREVENANT",E[E.PUMPKABOO=710]="PUMPKABOO",E[E.GOURGEIST=711]="GOURGEIST",E[E.BERGMITE=712]="BERGMITE",E[E.AVALUGG=713]="AVALUGG",E[E.NOIBAT=714]="NOIBAT",E[E.NOIVERN=715]="NOIVERN",E[E.XERNEAS=716]="XERNEAS",E[E.YVELTAL=717]="YVELTAL",E[E.ZYGARDE=718]="ZYGARDE",E[E.DIANCIE=719]="DIANCIE",E[E.HOOPA=720]="HOOPA",E[E.VOLCANION=721]="VOLCANION",E[E.ROWLET=722]="ROWLET",E[E.DARTRIX=723]="DARTRIX",E[E.DECIDUEYE=724]="DECIDUEYE",E[E.LITTEN=725]="LITTEN",E[E.TORRACAT=726]="TORRACAT",E[E.INCINEROAR=727]="INCINEROAR",E[E.POPPLIO=728]="POPPLIO",E[E.BRIONNE=729]="BRIONNE",E[E.PRIMARINA=730]="PRIMARINA",E[E.PIKIPEK=731]="PIKIPEK",E[E.TRUMBEAK=732]="TRUMBEAK",E[E.TOUCANNON=733]="TOUCANNON",E[E.YUNGOOS=734]="YUNGOOS",E[E.GUMSHOOS=735]="GUMSHOOS",E[E.GRUBBIN=736]="GRUBBIN",E[E.CHARJABUG=737]="CHARJABUG",E[E.VIKAVOLT=738]="VIKAVOLT",E[E.CRABRAWLER=739]="CRABRAWLER",E[E.CRABOMINABLE=740]="CRABOMINABLE",E[E.ORICORIO=741]="ORICORIO",E[E.CUTIEFLY=742]="CUTIEFLY",E[E.RIBOMBEE=743]="RIBOMBEE",E[E.ROCKRUFF=744]="ROCKRUFF",E[E.LYCANROC=745]="LYCANROC",E[E.WISHIWASHI=746]="WISHIWASHI",E[E.MAREANIE=747]="MAREANIE",E[E.TOXAPEX=748]="TOXAPEX",E[E.MUDBRAY=749]="MUDBRAY",E[E.MUDSDALE=750]="MUDSDALE",E[E.DEWPIDER=751]="DEWPIDER",E[E.ARAQUANID=752]="ARAQUANID",E[E.FOMANTIS=753]="FOMANTIS",E[E.LURANTIS=754]="LURANTIS",E[E.MORELULL=755]="MORELULL",E[E.SHIINOTIC=756]="SHIINOTIC",E[E.SALANDIT=757]="SALANDIT",E[E.SALAZZLE=758]="SALAZZLE",E[E.STUFFUL=759]="STUFFUL",E[E.BEWEAR=760]="BEWEAR",E[E.BOUNSWEET=761]="BOUNSWEET",E[E.STEENEE=762]="STEENEE",E[E.TSAREENA=763]="TSAREENA",E[E.COMFEY=764]="COMFEY",E[E.ORANGURU=765]="ORANGURU",E[E.PASSIMIAN=766]="PASSIMIAN",E[E.WIMPOD=767]="WIMPOD",E[E.GOLISOPOD=768]="GOLISOPOD",E[E.SANDYGAST=769]="SANDYGAST",E[E.PALOSSAND=770]="PALOSSAND",E[E.PYUKUMUKU=771]="PYUKUMUKU",E[E.TYPE_NULL=772]="TYPE_NULL",E[E.SILVALLY=773]="SILVALLY",E[E.MINIOR=774]="MINIOR",E[E.KOMALA=775]="KOMALA",E[E.TURTONATOR=776]="TURTONATOR",E[E.TOGEDEMARU=777]="TOGEDEMARU",E[E.MIMIKYU=778]="MIMIKYU",E[E.BRUXISH=779]="BRUXISH",E[E.DRAMPA=780]="DRAMPA",E[E.DHELMISE=781]="DHELMISE",E[E.JANGMO_O=782]="JANGMO_O",E[E.HAKAMO_O=783]="HAKAMO_O",E[E.KOMMO_O=784]="KOMMO_O",E[E.TAPU_KOKO=785]="TAPU_KOKO",E[E.TAPU_LELE=786]="TAPU_LELE",E[E.TAPU_BULU=787]="TAPU_BULU",E[E.TAPU_FINI=788]="TAPU_FINI",E[E.COSMOG=789]="COSMOG",E[E.COSMOEM=790]="COSMOEM",E[E.SOLGALEO=791]="SOLGALEO",E[E.LUNALA=792]="LUNALA",E[E.NIHILEGO=793]="NIHILEGO",E[E.BUZZWOLE=794]="BUZZWOLE",E[E.PHEROMOSA=795]="PHEROMOSA",E[E.XURKITREE=796]="XURKITREE",E[E.CELESTEELA=797]="CELESTEELA",E[E.KARTANA=798]="KARTANA",E[E.GUZZLORD=799]="GUZZLORD",E[E.NECROZMA=800]="NECROZMA",E[E.MAGEARNA=801]="MAGEARNA",E[E.MARSHADOW=802]="MARSHADOW",E[E.POIPOLE=803]="POIPOLE",E[E.NAGANADEL=804]="NAGANADEL",E[E.STAKATAKA=805]="STAKATAKA",E[E.BLACEPHALON=806]="BLACEPHALON",E[E.ZERAORA=807]="ZERAORA",E[E.MELTAN=808]="MELTAN",E[E.MELMETAL=809]="MELMETAL",E[E.GROOKEY=810]="GROOKEY",E[E.THWACKEY=811]="THWACKEY",E[E.RILLABOOM=812]="RILLABOOM",E[E.SCORBUNNY=813]="SCORBUNNY",E[E.RABOOT=814]="RABOOT",E[E.CINDERACE=815]="CINDERACE",E[E.SOBBLE=816]="SOBBLE",E[E.DRIZZILE=817]="DRIZZILE",E[E.INTELEON=818]="INTELEON",E[E.SKWOVET=819]="SKWOVET",E[E.GREEDENT=820]="GREEDENT",E[E.ROOKIDEE=821]="ROOKIDEE",E[E.CORVISQUIRE=822]="CORVISQUIRE",E[E.CORVIKNIGHT=823]="CORVIKNIGHT",E[E.BLIPBUG=824]="BLIPBUG",E[E.DOTTLER=825]="DOTTLER",E[E.ORBEETLE=826]="ORBEETLE",E[E.NICKIT=827]="NICKIT",E[E.THIEVUL=828]="THIEVUL",E[E.GOSSIFLEUR=829]="GOSSIFLEUR",E[E.ELDEGOSS=830]="ELDEGOSS",E[E.WOOLOO=831]="WOOLOO",E[E.DUBWOOL=832]="DUBWOOL",E[E.CHEWTLE=833]="CHEWTLE",E[E.DREDNAW=834]="DREDNAW",E[E.YAMPER=835]="YAMPER",E[E.BOLTUND=836]="BOLTUND",E[E.ROLYCOLY=837]="ROLYCOLY",E[E.CARKOL=838]="CARKOL",E[E.COALOSSAL=839]="COALOSSAL",E[E.APPLIN=840]="APPLIN",E[E.FLAPPLE=841]="FLAPPLE",E[E.APPLETUN=842]="APPLETUN",E[E.SILICOBRA=843]="SILICOBRA",E[E.SANDACONDA=844]="SANDACONDA",E[E.CRAMORANT=845]="CRAMORANT",E[E.ARROKUDA=846]="ARROKUDA",E[E.BARRASKEWDA=847]="BARRASKEWDA",E[E.TOXEL=848]="TOXEL",E[E.TOXTRICITY=849]="TOXTRICITY",E[E.SIZZLIPEDE=850]="SIZZLIPEDE",E[E.CENTISKORCH=851]="CENTISKORCH",E[E.CLOBBOPUS=852]="CLOBBOPUS",E[E.GRAPPLOCT=853]="GRAPPLOCT",E[E.SINISTEA=854]="SINISTEA",E[E.POLTEAGEIST=855]="POLTEAGEIST",E[E.HATENNA=856]="HATENNA",E[E.HATTREM=857]="HATTREM",E[E.HATTERENE=858]="HATTERENE",E[E.IMPIDIMP=859]="IMPIDIMP",E[E.MORGREM=860]="MORGREM",E[E.GRIMMSNARL=861]="GRIMMSNARL",E[E.OBSTAGOON=862]="OBSTAGOON",E[E.PERRSERKER=863]="PERRSERKER",E[E.CURSOLA=864]="CURSOLA",E[E.SIRFETCHD=865]="SIRFETCHD",E[E.MR_RIME=866]="MR_RIME",E[E.RUNERIGUS=867]="RUNERIGUS",E[E.MILCERY=868]="MILCERY",E[E.ALCREMIE=869]="ALCREMIE",E[E.FALINKS=870]="FALINKS",E[E.PINCURCHIN=871]="PINCURCHIN",E[E.SNOM=872]="SNOM",E[E.FROSMOTH=873]="FROSMOTH",E[E.STONJOURNER=874]="STONJOURNER",E[E.EISCUE=875]="EISCUE",E[E.INDEEDEE=876]="INDEEDEE",E[E.MORPEKO=877]="MORPEKO",E[E.CUFANT=878]="CUFANT",E[E.COPPERAJAH=879]="COPPERAJAH",E[E.DRACOZOLT=880]="DRACOZOLT",E[E.ARCTOZOLT=881]="ARCTOZOLT",E[E.DRACOVISH=882]="DRACOVISH",E[E.ARCTOVISH=883]="ARCTOVISH",E[E.DURALUDON=884]="DURALUDON",E[E.DREEPY=885]="DREEPY",E[E.DRAKLOAK=886]="DRAKLOAK",E[E.DRAGAPULT=887]="DRAGAPULT",E[E.ZACIAN=888]="ZACIAN",E[E.ZAMAZENTA=889]="ZAMAZENTA",E[E.ETERNATUS=890]="ETERNATUS",E[E.KUBFU=891]="KUBFU",E[E.URSHIFU=892]="URSHIFU",E[E.ZARUDE=893]="ZARUDE",E[E.REGIELEKI=894]="REGIELEKI",E[E.REGIDRAGO=895]="REGIDRAGO",E[E.GLASTRIER=896]="GLASTRIER",E[E.SPECTRIER=897]="SPECTRIER",E[E.CALYREX=898]="CALYREX",E[E.WYRDEER=899]="WYRDEER",E[E.KLEAVOR=900]="KLEAVOR",E[E.URSALUNA=901]="URSALUNA",E[E.BASCULEGION=902]="BASCULEGION",E[E.SNEASLER=903]="SNEASLER",E[E.OVERQWIL=904]="OVERQWIL",E[E.ENAMORUS=905]="ENAMORUS",E[E.SPRIGATITO=906]="SPRIGATITO",E[E.FLORAGATO=907]="FLORAGATO",E[E.MEOWSCARADA=908]="MEOWSCARADA",E[E.FUECOCO=909]="FUECOCO",E[E.CROCALOR=910]="CROCALOR",E[E.SKELEDIRGE=911]="SKELEDIRGE",E[E.QUAXLY=912]="QUAXLY",E[E.QUAXWELL=913]="QUAXWELL",E[E.QUAQUAVAL=914]="QUAQUAVAL",E[E.LECHONK=915]="LECHONK",E[E.OINKOLOGNE=916]="OINKOLOGNE",E[E.TAROUNTULA=917]="TAROUNTULA",E[E.SPIDOPS=918]="SPIDOPS",E[E.NYMBLE=919]="NYMBLE",E[E.LOKIX=920]="LOKIX",E[E.PAWMI=921]="PAWMI",E[E.PAWMO=922]="PAWMO",E[E.PAWMOT=923]="PAWMOT",E[E.TANDEMAUS=924]="TANDEMAUS",E[E.MAUSHOLD=925]="MAUSHOLD",E[E.FIDOUGH=926]="FIDOUGH",E[E.DACHSBUN=927]="DACHSBUN",E[E.SMOLIV=928]="SMOLIV",E[E.DOLLIV=929]="DOLLIV",E[E.ARBOLIVA=930]="ARBOLIVA",E[E.SQUAWKABILLY=931]="SQUAWKABILLY",E[E.NACLI=932]="NACLI",E[E.NACLSTACK=933]="NACLSTACK",E[E.GARGANACL=934]="GARGANACL",E[E.CHARCADET=935]="CHARCADET",E[E.ARMAROUGE=936]="ARMAROUGE",E[E.CERULEDGE=937]="CERULEDGE",E[E.TADBULB=938]="TADBULB",E[E.BELLIBOLT=939]="BELLIBOLT",E[E.WATTREL=940]="WATTREL",E[E.KILOWATTREL=941]="KILOWATTREL",E[E.MASCHIFF=942]="MASCHIFF",E[E.MABOSSTIFF=943]="MABOSSTIFF",E[E.SHROODLE=944]="SHROODLE",E[E.GRAFAIAI=945]="GRAFAIAI",E[E.BRAMBLIN=946]="BRAMBLIN",E[E.BRAMBLEGHAST=947]="BRAMBLEGHAST",E[E.TOEDSCOOL=948]="TOEDSCOOL",E[E.TOEDSCRUEL=949]="TOEDSCRUEL",E[E.KLAWF=950]="KLAWF",E[E.CAPSAKID=951]="CAPSAKID",E[E.SCOVILLAIN=952]="SCOVILLAIN",E[E.RELLOR=953]="RELLOR",E[E.RABSCA=954]="RABSCA",E[E.FLITTLE=955]="FLITTLE",E[E.ESPATHRA=956]="ESPATHRA",E[E.TINKATINK=957]="TINKATINK",E[E.TINKATUFF=958]="TINKATUFF",E[E.TINKATON=959]="TINKATON",E[E.WIGLETT=960]="WIGLETT",E[E.WUGTRIO=961]="WUGTRIO",E[E.BOMBIRDIER=962]="BOMBIRDIER",E[E.FINIZEN=963]="FINIZEN",E[E.PALAFIN=964]="PALAFIN",E[E.VAROOM=965]="VAROOM",E[E.REVAVROOM=966]="REVAVROOM",E[E.CYCLIZAR=967]="CYCLIZAR",E[E.ORTHWORM=968]="ORTHWORM",E[E.GLIMMET=969]="GLIMMET",E[E.GLIMMORA=970]="GLIMMORA",E[E.GREAVARD=971]="GREAVARD",E[E.HOUNDSTONE=972]="HOUNDSTONE",E[E.FLAMIGO=973]="FLAMIGO",E[E.CETODDLE=974]="CETODDLE",E[E.CETITAN=975]="CETITAN",E[E.VELUZA=976]="VELUZA",E[E.DONDOZO=977]="DONDOZO",E[E.TATSUGIRI=978]="TATSUGIRI",E[E.ANNIHILAPE=979]="ANNIHILAPE",E[E.CLODSIRE=980]="CLODSIRE",E[E.FARIGIRAF=981]="FARIGIRAF",E[E.DUDUNSPARCE=982]="DUDUNSPARCE",E[E.KINGAMBIT=983]="KINGAMBIT",E[E.GREAT_TUSK=984]="GREAT_TUSK",E[E.SCREAM_TAIL=985]="SCREAM_TAIL",E[E.BRUTE_BONNET=986]="BRUTE_BONNET",E[E.FLUTTER_MANE=987]="FLUTTER_MANE",E[E.SLITHER_WING=988]="SLITHER_WING",E[E.SANDY_SHOCKS=989]="SANDY_SHOCKS",E[E.IRON_TREADS=990]="IRON_TREADS",E[E.IRON_BUNDLE=991]="IRON_BUNDLE",E[E.IRON_HANDS=992]="IRON_HANDS",E[E.IRON_JUGULIS=993]="IRON_JUGULIS",E[E.IRON_MOTH=994]="IRON_MOTH",E[E.IRON_THORNS=995]="IRON_THORNS",E[E.FRIGIBAX=996]="FRIGIBAX",E[E.ARCTIBAX=997]="ARCTIBAX",E[E.BAXCALIBUR=998]="BAXCALIBUR",E[E.GIMMIGHOUL=999]="GIMMIGHOUL",E[E.GHOLDENGO=1e3]="GHOLDENGO",E[E.WO_CHIEN=1001]="WO_CHIEN",E[E.CHIEN_PAO=1002]="CHIEN_PAO",E[E.TING_LU=1003]="TING_LU",E[E.CHI_YU=1004]="CHI_YU",E[E.ROARING_MOON=1005]="ROARING_MOON",E[E.IRON_VALIANT=1006]="IRON_VALIANT",E[E.KORAIDON=1007]="KORAIDON",E[E.MIRAIDON=1008]="MIRAIDON",E[E.WALKING_WAKE=1009]="WALKING_WAKE",E[E.IRON_LEAVES=1010]="IRON_LEAVES",E[E.DIPPLIN=1011]="DIPPLIN",E[E.POLTCHAGEIST=1012]="POLTCHAGEIST",E[E.SINISTCHA=1013]="SINISTCHA",E[E.OKIDOGI=1014]="OKIDOGI",E[E.MUNKIDORI=1015]="MUNKIDORI",E[E.FEZANDIPITI=1016]="FEZANDIPITI",E[E.OGERPON=1017]="OGERPON",E[E.ARCHALUDON=1018]="ARCHALUDON",E[E.HYDRAPPLE=1019]="HYDRAPPLE",E[E.GOUGING_FIRE=1020]="GOUGING_FIRE",E[E.RAGING_BOLT=1021]="RAGING_BOLT",E[E.IRON_BOULDER=1022]="IRON_BOULDER",E[E.IRON_CROWN=1023]="IRON_CROWN",E[E.TERAPAGOS=1024]="TERAPAGOS",E[E.PECHARUNT=1025]="PECHARUNT",E[E.ALOLA_RATTATA=2019]="ALOLA_RATTATA",E[E.ALOLA_RATICATE=2020]="ALOLA_RATICATE",E[E.ALOLA_RAICHU=2026]="ALOLA_RAICHU",E[E.ALOLA_SANDSHREW=2027]="ALOLA_SANDSHREW",E[E.ALOLA_SANDSLASH=2028]="ALOLA_SANDSLASH",E[E.ALOLA_VULPIX=2037]="ALOLA_VULPIX",E[E.ALOLA_NINETALES=2038]="ALOLA_NINETALES",E[E.ALOLA_DIGLETT=2050]="ALOLA_DIGLETT",E[E.ALOLA_DUGTRIO=2051]="ALOLA_DUGTRIO",E[E.ALOLA_MEOWTH=2052]="ALOLA_MEOWTH",E[E.ALOLA_PERSIAN=2053]="ALOLA_PERSIAN",E[E.ALOLA_GEODUDE=2074]="ALOLA_GEODUDE",E[E.ALOLA_GRAVELER=2075]="ALOLA_GRAVELER",E[E.ALOLA_GOLEM=2076]="ALOLA_GOLEM",E[E.ALOLA_GRIMER=2088]="ALOLA_GRIMER",E[E.ALOLA_MUK=2089]="ALOLA_MUK",E[E.ALOLA_EXEGGUTOR=2103]="ALOLA_EXEGGUTOR",E[E.ALOLA_MAROWAK=2105]="ALOLA_MAROWAK",E[E.ETERNAL_FLOETTE=2670]="ETERNAL_FLOETTE",E[E.GALAR_MEOWTH=4052]="GALAR_MEOWTH",E[E.GALAR_PONYTA=4077]="GALAR_PONYTA",E[E.GALAR_RAPIDASH=4078]="GALAR_RAPIDASH",E[E.GALAR_SLOWPOKE=4079]="GALAR_SLOWPOKE",E[E.GALAR_SLOWBRO=4080]="GALAR_SLOWBRO",E[E.GALAR_FARFETCHD=4083]="GALAR_FARFETCHD",E[E.GALAR_WEEZING=4110]="GALAR_WEEZING",E[E.GALAR_MR_MIME=4122]="GALAR_MR_MIME",E[E.GALAR_ARTICUNO=4144]="GALAR_ARTICUNO",E[E.GALAR_ZAPDOS=4145]="GALAR_ZAPDOS",E[E.GALAR_MOLTRES=4146]="GALAR_MOLTRES",E[E.GALAR_SLOWKING=4199]="GALAR_SLOWKING",E[E.GALAR_CORSOLA=4222]="GALAR_CORSOLA",E[E.GALAR_ZIGZAGOON=4263]="GALAR_ZIGZAGOON",E[E.GALAR_LINOONE=4264]="GALAR_LINOONE",E[E.GALAR_DARUMAKA=4554]="GALAR_DARUMAKA",E[E.GALAR_DARMANITAN=4555]="GALAR_DARMANITAN",E[E.GALAR_YAMASK=4562]="GALAR_YAMASK",E[E.GALAR_STUNFISK=4618]="GALAR_STUNFISK",E[E.HISUI_GROWLITHE=6058]="HISUI_GROWLITHE",E[E.HISUI_ARCANINE=6059]="HISUI_ARCANINE",E[E.HISUI_VOLTORB=6100]="HISUI_VOLTORB",E[E.HISUI_ELECTRODE=6101]="HISUI_ELECTRODE",E[E.HISUI_TYPHLOSION=6157]="HISUI_TYPHLOSION",E[E.HISUI_QWILFISH=6211]="HISUI_QWILFISH",E[E.HISUI_SNEASEL=6215]="HISUI_SNEASEL",E[E.HISUI_SAMUROTT=6503]="HISUI_SAMUROTT",E[E.HISUI_LILLIGANT=6549]="HISUI_LILLIGANT",E[E.HISUI_ZORUA=6570]="HISUI_ZORUA",E[E.HISUI_ZOROARK=6571]="HISUI_ZOROARK",E[E.HISUI_BRAVIARY=6628]="HISUI_BRAVIARY",E[E.HISUI_SLIGGOO=6705]="HISUI_SLIGGOO",E[E.HISUI_GOODRA=6706]="HISUI_GOODRA",E[E.HISUI_AVALUGG=6713]="HISUI_AVALUGG",E[E.HISUI_DECIDUEYE=6724]="HISUI_DECIDUEYE",E[E.PALDEA_TAUROS=8128]="PALDEA_TAUROS",E[E.PALDEA_WOOPER=8194]="PALDEA_WOOPER",E[E.BLOODMOON_URSALUNA=8901]="BLOODMOON_URSALUNA",E))(e||{}),S=(E=>(E[E.ALL=-1]="ALL",E[E.DAWN=0]="DAWN",E[E.DAY=1]="DAY",E[E.DUSK=2]="DUSK",E[E.NIGHT=3]="NIGHT",E))(S||{}),SE=(E=>(E[E.DEFAULT=0]="DEFAULT",E[E.FINAL_BOSS=1]="FINAL_BOSS",E))(SE||{});function te(E){if(!E)return"Missigno";switch(n.currentBattle.battleSpec){case SE.DEFAULT:return E.isPlayer()?E.getNameToRender():E.hasTrainer()?u.t("battle:foePokemonWithAffix",{pokemonName:E.getNameToRender()}):u.t("battle:wildPokemonWithAffix",{pokemonName:E.getNameToRender()});case SE.FINAL_BOSS:return E.isPlayer()?E.getNameToRender():u.t("battle:foePokemonWithAffix",{pokemonName:E.getNameToRender()});default:return E.getNameToRender()}}N(te,"getPokemonNameWithAffix");var vO=(E=>(E[E.STANDARD=0]="STANDARD",E[E.RARE=1]="RARE",E[E.EPIC=2]="EPIC",E))(vO||{});const qs={},ca={};function yE(E){switch(E){case 0:return 16302112;case 1:return 2160880;case 2:return 15208520}}N(yE,"getVariantTint");function II(E){switch(E){case 0:return vO.STANDARD;case 1:return vO.RARE;case 2:return vO.EPIC}}N(II,"getVariantIcon");var c=(E=>(E[E.ERRATIC=0]="ERRATIC",E[E.FAST=1]="FAST",E[E.MEDIUM_FAST=2]="MEDIUM_FAST",E[E.MEDIUM_SLOW=3]="MEDIUM_SLOW",E[E.SLOW=4]="SLOW",E[E.FLUCTUATING=5]="FLUCTUATING",E))(c||{});const m7=[[0,15,52,122,237,406,637,942,1326,1800,2369,3041,3822,4719,5737,6881,8155,9564,11111,12800,14632,16610,18737,21012,23437,26012,28737,31610,34632,37800,41111,44564,48155,51881,55737,59719,63822,68041,72369,76800,81326,85942,90637,95406,100237,105122,110052,115015,120001,125e3,131324,137795,144410,151165,158056,165079,172229,179503,186894,194400,202013,209728,217540,225443,233431,241496,249633,257834,267406,276458,286328,296358,305767,316074,326531,336255,346965,357812,367807,378880,390077,400293,411686,423190,433572,445239,457001,467489,479378,491346,501878,513934,526049,536557,548720,560922,571333,583539,591882,6e5],[0,6,21,51,100,172,274,409,583,800,1064,1382,1757,2195,2700,3276,3930,4665,5487,6400,7408,8518,9733,11059,12500,14060,15746,17561,19511,21600,23832,26214,28749,31443,34300,37324,40522,43897,47455,51200,55136,59270,63605,68147,72900,77868,83058,88473,94119,1e5,106120,112486,119101,125971,133100,140492,148154,156089,164303,172800,181584,190662,200037,209715,219700,229996,240610,251545,262807,274400,286328,298598,311213,324179,337500,351180,365226,379641,394431,409600,425152,441094,457429,474163,491300,508844,526802,545177,563975,583200,602856,622950,643485,664467,685900,707788,730138,752953,776239,8e5],[0,8,27,64,125,216,343,512,729,1e3,1331,1728,2197,2744,3375,4096,4913,5832,6859,8e3,9261,10648,12167,13824,15625,17576,19683,21952,24389,27e3,29791,32768,35937,39304,42875,46656,50653,54872,59319,64e3,68921,74088,79507,85184,91125,97336,103823,110592,117649,125e3,132651,140608,148877,157464,166375,175616,185193,195112,205379,216e3,226981,238328,250047,262144,274625,287496,300763,314432,328509,343e3,357911,373248,389017,405224,421875,438976,456533,474552,493039,512e3,531441,551368,571787,592704,614125,636056,658503,681472,704969,729e3,753571,778688,804357,830584,857375,884736,912673,941192,970299,1e6],[0,9,57,96,135,179,236,314,419,560,742,973,1261,1612,2035,2535,3120,3798,4575,5460,6458,7577,8825,10208,11735,13411,15244,17242,19411,21760,24294,27021,29949,33084,36435,40007,43808,47846,52127,56660,61450,66505,71833,77440,83335,89523,96012,102810,109923,117360,125126,133229,141677,150476,159635,169159,179056,189334,199999,211060,222522,234393,246681,259392,272535,286115,300140,314618,329555,344960,360838,377197,394045,411388,429235,447591,466464,485862,505791,526260,547274,568841,590969,613664,636935,660787,685228,710266,735907,762160,789030,816525,844653,873420,902835,932903,963632,995030,1027103,1059860],[0,10,33,80,156,270,428,640,911,1250,1663,2160,2746,3430,4218,5120,6141,7290,8573,1e4,11576,13310,15208,17280,19531,21970,24603,27440,30486,33750,37238,40960,44921,49130,53593,58320,63316,68590,74148,8e4,86151,92610,99383,106480,113906,121670,129778,138240,147061,156250,165813,175760,186096,196830,207968,219520,231491,243890,256723,27e4,283726,297910,312558,327680,343281,359370,375953,393040,410636,428750,447388,466560,486271,506530,527343,548720,570666,593190,616298,64e4,664301,689210,714733,740880,767656,795070,823128,851840,881211,911250,941963,973360,1005446,1038230,1071718,1105920,1140841,1176490,1212873,125e4],[0,4,13,32,65,112,178,276,393,540,745,967,1230,1591,1957,2457,3046,3732,4526,5440,6482,7666,9003,10506,12187,14060,16140,18439,20974,23760,26811,30146,33780,37731,42017,46656,50653,55969,60505,66560,71677,78533,84277,91998,98415,107069,114205,123863,131766,142500,151222,163105,172697,185807,196322,210739,222231,238036,250562,267840,281456,300293,315059,335544,351520,373744,390991,415050,433631,459620,479600,507617,529063,559209,582187,614566,639146,673863,700115,737280,765275,804997,834809,877201,908905,954084,987754,1035837,1071552,1122660,1160499,1214753,1254796,1312322,1354652,1415577,1460276,1524731,1571884,164e4]];function jR(E,A){if(E<100){const R=m7[A][E-1];return A!==2?Math.floor(R*.325+jR(E,2)*.675):R}let s;switch(A){case 0:s=(Math.pow(E,4)+Math.pow(E,3)*2e3)/3500;break;case 1:s=Math.pow(E,3)*4/5;break;case 2:s=Math.pow(E,3);break;case 3:s=Math.pow(E,3)*6/5-15*Math.pow(E,2)+100*E-140;break;case 4:s=Math.pow(E,3)*5/4;break;case 5:s=Math.pow(E,3)*(E/2+8)*4/(100+E);break}return Math.floor(A!==2?s*.325+jR(E,2)*.675:s)}N(jR,"getLevelTotalExp");function g6(E,A){return jR(E,A)-jR(E-1,A)}N(g6,"getLevelRelExp");function Mx(E,A){switch(E){case 0:return A?"#906060":"#f85888";case 1:return A?"#b8a038":"#f8d030";case 2:return A?"#588040":"#78c850";case 3:return A?"#807870":"#6890f0";case 4:return A?"#c03028":"#f08030";case 5:return A?"#483850":"#a040a0"}}N(Mx,"getGrowthRateColor");var m=(E=>(E[E.COMMON=0]="COMMON",E[E.RARE=1]="RARE",E[E.EPIC=2]="EPIC",E[E.LEGENDARY=3]="LEGENDARY",E))(m||{}),uO=(E=>(E[E.DEFAULT=0]="DEFAULT",E[E.LEGACY=1]="LEGACY",E))(uO||{}),w=(E=>(E[E.COMMON=0]="COMMON",E[E.GREAT=1]="GREAT",E[E.ULTRA=2]="ULTRA",E[E.ROGUE=3]="ROGUE",E[E.MASTER=4]="MASTER",E[E.LUXURY=5]="LUXURY",E))(w||{}),Q=(E=>(E[E.MESSAGE=0]="MESSAGE",E[E.WINDOW=1]="WINDOW",E[E.WINDOW_ALT=2]="WINDOW_ALT",E[E.BATTLE_INFO=3]="BATTLE_INFO",E[E.PARTY=4]="PARTY",E[E.PARTY_RED=5]="PARTY_RED",E[E.SUMMARY=6]="SUMMARY",E[E.SUMMARY_ALT=7]="SUMMARY_ALT",E[E.SUMMARY_RED=8]="SUMMARY_RED",E[E.SUMMARY_BLUE=9]="SUMMARY_BLUE",E[E.SUMMARY_PINK=10]="SUMMARY_PINK",E[E.SUMMARY_GOLD=11]="SUMMARY_GOLD",E[E.SUMMARY_GRAY=12]="SUMMARY_GRAY",E[E.SUMMARY_GREEN=13]="SUMMARY_GREEN",E[E.MONEY=14]="MONEY",E[E.MONEY_WINDOW=15]="MONEY_WINDOW",E[E.STATS_LABEL=16]="STATS_LABEL",E[E.STATS_VALUE=17]="STATS_VALUE",E[E.SETTINGS_VALUE=18]="SETTINGS_VALUE",E[E.SETTINGS_LABEL=19]="SETTINGS_LABEL",E[E.SETTINGS_SELECTED=20]="SETTINGS_SELECTED",E[E.SETTINGS_LOCKED=21]="SETTINGS_LOCKED",E[E.TOOLTIP_TITLE=22]="TOOLTIP_TITLE",E[E.TOOLTIP_CONTENT=23]="TOOLTIP_CONTENT",E[E.MOVE_INFO_CONTENT=24]="MOVE_INFO_CONTENT",E[E.MOVE_PP_FULL=25]="MOVE_PP_FULL",E[E.MOVE_PP_HALF_FULL=26]="MOVE_PP_HALF_FULL",E[E.MOVE_PP_NEAR_EMPTY=27]="MOVE_PP_NEAR_EMPTY",E[E.MOVE_PP_EMPTY=28]="MOVE_PP_EMPTY",E[E.SMALLER_WINDOW_ALT=29]="SMALLER_WINDOW_ALT",E[E.BGM_BAR=30]="BGM_BAR",E[E.PERFECT_IV=31]="PERFECT_IV",E[E.ME_OPTION_DEFAULT=32]="ME_OPTION_DEFAULT",E[E.ME_OPTION_SPECIAL=33]="ME_OPTION_SPECIAL",E))(Q||{});function le(E,A,s,R,a){const{scale:i,styleOptions:r,shadowColor:L,shadowXpos:o,shadowYpos:l}=Hn(R,n.uiTheme,a),C=n.add.text(E,A,s,r);return C.setScale(i),C.setShadow(o,l,L),r.lineSpacing||C.setLineSpacing(i*30),C.lineSpacing<12&&u.resolvedLanguage==="ja"&&C.setLineSpacing(C.lineSpacing+35),C}N(le,"addTextObject");function F7(E,A,s){const{scale:R,styleOptions:a,shadowColor:i,shadowXpos:r,shadowYpos:L}=Hn(A,n.uiTheme,s);E.setScale(R),E.setShadow(r,L,i),a.lineSpacing||E.setLineSpacing(R*30),E.lineSpacing<12&&u.resolvedLanguage==="ja"&&E.setLineSpacing(E.lineSpacing+35)}N(F7,"setTextStyle");function wE(E,A,s,R,a){const{scale:i,styleOptions:r,shadowColor:L,shadowXpos:o,shadowYpos:l}=Hn(R,n.uiTheme,a),C=new H6(n,E,A,s,r);return n.add.existing(C),C.setScale(i),C.setShadow(o,l,L),r.lineSpacing||C.setLineSpacing(i*60),C.lineSpacing<12&&u.resolvedLanguage==="ja"&&C.setLineSpacing(C.lineSpacing+35),C}N(wE,"addBBCodeTextObject");function p7(E,A,s,R,a,i){const{scale:r,styleOptions:L}=Hn(a,n.uiTheme,i),o=new I7(n,E,A,s,R,L);return n.add.existing(o),o.setScale(r),o}N(p7,"addTextInputObject");function Hn(E,A,s){var C;const R=u.resolvedLanguage;let a=4,i=5,r=.1666666667;const L=96;let o={fontFamily:"emerald",fontSize:96,color:aA(E,!1,A),padding:{bottom:6}};switch(u.resolvedLanguage==="ja"&&(r=.1388888889,o.padding={top:2,bottom:4}),E){case 6:case 7:case 9:case 8:case 10:case 11:case 12:case 13:case 1:case 2:case 32:case 33:a=3,i=3;break;case 16:let M="96px";switch(R){case"de":a=3,i=3,M="80px";break;default:M="96px";break}o.fontSize=M;break;case 17:a=3,i=3;let D="96px";switch(R){case"de":D="80px";break;default:D="96px";break}o.fontSize=D;break;case 0:case 19:case 21:case 20:break;case 3:case 14:case 15:case 22:o.fontSize=L-24,a=3.5,i=3.5;break;case 4:case 5:o.fontSize=L-30,o.fontFamily="pkmnems";break;case 23:o.fontSize=L-32,a=3,i=3;break;case 24:o.fontSize=L-40,a=3,i=3;break;case 29:o.fontSize=L-36,a=3,i=3;break;case 30:o.fontSize=L-24,a=3,i=3;break}const l=aA(E,!0,A);if(s){if(s.fontSize){const M=parseInt(s.fontSize.toString().slice(0,-2))/parseInt(((C=o.fontSize)==null?void 0:C.toString().slice(0,-2))??"1");a*=M}o=Object.assign(o,s)}return{scale:r,styleOptions:o,shadowColor:l,shadowXpos:a,shadowYpos:i}}N(Hn,"getTextStyleOptions");function NO(E,A,s=uO.DEFAULT){return`[color=${aA(A,!1,s)}][shadow=${aA(A,!0,s)}]${E}`}N(NO,"getBBCodeFrag");function W7(E,A,s,R){let a=NO(E,A,s)+"[/color][/shadow]";const i=[...a.match(new RegExp(/\[color=[^\[]*\]\[shadow=[^\[]*\]/i))][0];return a=a.replace(/@\[MONEY\]/g,r=>"@[MONEY_WINDOW]"),a=a.replace(/@\[([^{]*)\]{([^}]*)}/gi,(r,L,o)=>"[/color][/shadow]"+NO(o,Q[L],s)+"[/color][/shadow]"+i),a.replace(/\[color=[^\[]*\]\[shadow=[^\[]*\]\[\/color\]\[\/shadow\]/gi,"")}N(W7,"getTextWithColors");function aA(E,A,s=uO.DEFAULT){const R=s===uO.LEGACY;switch(E){case 0:return A?"#6b5a73":"#f8f8f8";case 1:case 24:case 25:case 23:case 18:return R?A?"#d0d0c8":"#484848":A?"#6b5a73":"#f8f8f8";case 26:return R?A?"#ebd773":"#a68e17":A?"#6e672c":"#ccbe00";case 27:return R?A?"#f7b18b":"#d64b00":A?"#69402a":"#d64b00";case 28:return R?A?"#fca2a2":"#e13d3d":A?"#632929":"#e13d3d";case 2:return A?"#d0d0c8":"#484848";case 3:return R?A?"#ded6b5":"#404040":A?"#6b5a73":"#f8f8f8";case 4:return A?"#707070":"#f8f8f8";case 5:return A?"#984038":"#f89890";case 6:return A?"#636363":"#f8f8f8";case 7:return R?A?"#636363":"#f8f8f8":A?"#d0d0c8":"#484848";case 8:case 22:return A?"#ffbd73":"#e70808";case 9:return A?"#006090":"#40c8f8";case 10:return A?"#984038":"#f89890";case 11:case 14:return A?"#a0a060":"#e8e8a8";case 15:return R?A?"#c07800":"#f8b050":A?"#a0a060":"#e8e8a8";case 21:case 12:return A?"#636363":"#a0a0a0";case 16:return A?"#c07800":"#f8b050";case 17:return R?A?"#d0d0c8":"#484848":A?"#6b5a73":"#f8f8f8";case 13:return A?"#306850":"#78c850";case 19:case 31:return A?"#c07800":"#f8b050";case 20:return A?"#f83018":"#f88880";case 29:return A?"#d0d0c8":"#484848";case 30:return A?"#6b5a73":"#f8f8f8";case 32:return A?"#6b5a73":"#f8f8f8";case 33:return R?A?"#c07800":"#f8b050":A?"#306850":"#78c850"}}N(aA,"getTextColor");function xi(E){switch(E){case w.COMMON:return 16316664;case w.GREAT:return 4823288;case w.ULTRA:return 16306232;case w.ROGUE:return 14369603;case w.MASTER:return 14889413;case w.LUXURY:return 15158296}}N(xi,"getModifierTierTextTint");function Y7(E){switch(E){case m.COMMON:return xi(w.COMMON);case m.RARE:return xi(w.GREAT);case m.EPIC:return xi(w.ULTRA);case m.LEGENDARY:return xi(w.MASTER)}}N(Y7,"getEggTierTextTint");var ne=(E=>(E[E.NONE=0]="NONE",E[E.POISON=1]="POISON",E[E.TOXIC=2]="TOXIC",E[E.PARALYSIS=3]="PARALYSIS",E[E.SLEEP=4]="SLEEP",E[E.FREEZE=5]="FREEZE",E[E.BURN=6]="BURN",E[E.FAINT=7]="FAINT",E))(ne||{});function i_(E,A){if(E===I.UNKNOWN||A===I.UNKNOWN)return 1;switch(A){case I.NORMAL:switch(E){case I.FIGHTING:return 2;case I.GHOST:return 0;default:return 1}case I.FIGHTING:switch(E){case I.FLYING:case I.PSYCHIC:case I.FAIRY:return 2;case I.ROCK:case I.BUG:case I.DARK:return .5;default:return 1}case I.FLYING:switch(E){case I.ROCK:case I.ELECTRIC:case I.ICE:return 2;case I.FIGHTING:case I.BUG:case I.GRASS:return .5;case I.GROUND:return 0;default:return 1}case I.POISON:switch(E){case I.GROUND:case I.PSYCHIC:return 2;case I.FIGHTING:case I.POISON:case I.BUG:case I.GRASS:case I.FAIRY:return .5;default:return 1}case I.GROUND:switch(E){case I.WATER:case I.GRASS:case I.ICE:return 2;case I.POISON:case I.ROCK:return .5;case I.ELECTRIC:return 0;default:return 1}case I.ROCK:switch(E){case I.FIGHTING:case I.GROUND:case I.STEEL:case I.WATER:case I.GRASS:return 2;case I.NORMAL:case I.FLYING:case I.POISON:case I.FIRE:return .5;default:return 1}case I.BUG:switch(E){case I.FLYING:case I.ROCK:case I.FIRE:return 2;case I.FIGHTING:case I.GROUND:case I.GRASS:return .5;default:return 1}case I.GHOST:switch(E){case I.GHOST:case I.DARK:return 2;case I.POISON:case I.BUG:return .5;case I.NORMAL:case I.FIGHTING:return 0;default:return 1}case I.STEEL:switch(E){case I.FIGHTING:case I.GROUND:case I.FIRE:return 2;case I.NORMAL:case I.FLYING:case I.ROCK:case I.BUG:case I.STEEL:case I.GRASS:case I.PSYCHIC:case I.ICE:case I.DRAGON:case I.FAIRY:return .5;case I.POISON:return 0;default:return 1}case I.FIRE:switch(E){case I.GROUND:case I.ROCK:case I.WATER:return 2;case I.BUG:case I.STEEL:case I.FIRE:case I.GRASS:case I.ICE:case I.FAIRY:return .5;default:return 1}case I.WATER:switch(E){case I.GRASS:case I.ELECTRIC:return 2;case I.STEEL:case I.FIRE:case I.WATER:case I.ICE:return .5;default:return 1}case I.GRASS:switch(E){case I.FLYING:case I.POISON:case I.BUG:case I.FIRE:case I.ICE:return 2;case I.GROUND:case I.WATER:case I.GRASS:case I.ELECTRIC:return .5;default:return 1}case I.ELECTRIC:switch(E){case I.GROUND:return 2;case I.FLYING:case I.STEEL:case I.ELECTRIC:return .5;default:return 1}case I.PSYCHIC:switch(E){case I.BUG:case I.GHOST:case I.DARK:return 2;case I.FIGHTING:case I.PSYCHIC:return .5;default:return 1}case I.ICE:switch(E){case I.FIGHTING:case I.ROCK:case I.STEEL:case I.FIRE:return 2;case I.ICE:return .5;default:return 1}case I.DRAGON:switch(E){case I.ICE:case I.DRAGON:case I.FAIRY:return 2;case I.FIRE:case I.WATER:case I.GRASS:case I.ELECTRIC:return .5;default:return 1}case I.DARK:switch(E){case I.FIGHTING:case I.BUG:case I.FAIRY:return 2;case I.GHOST:case I.DARK:return .5;case I.PSYCHIC:return 0;default:return 1}case I.FAIRY:switch(E){case I.POISON:case I.STEEL:return 2;case I.FIGHTING:case I.BUG:case I.DARK:return .5;case I.DRAGON:return 0;default:return 1}case I.STELLAR:return 1}return 1}N(i_,"getTypeDamageMultiplier");function y7(E,A){switch(E){case 0:return"#929292";case .125:return"#FF5500";case .25:return"#FF7400";case .5:return"#FE8E00";case 1:return;case 2:return"#4AA500";case 4:return"#4BB400";case 8:return"#52C200"}}N(y7,"getTypeDamageMultiplierColor");function yR(E){switch(E){case I.NORMAL:return[168,168,120];case I.FIGHTING:return[192,48,40];case I.FLYING:return[168,144,240];case I.POISON:return[160,64,160];case I.GROUND:return[224,192,104];case I.ROCK:return[184,160,56];case I.BUG:return[168,184,32];case I.GHOST:return[112,88,152];case I.STEEL:return[184,184,208];case I.FIRE:return[240,128,48];case I.WATER:return[104,144,240];case I.GRASS:return[120,200,80];case I.ELECTRIC:return[248,208,48];case I.PSYCHIC:return[248,88,136];case I.ICE:return[152,216,216];case I.DRAGON:return[112,56,248];case I.DARK:return[112,88,72];case I.FAIRY:return[232,136,200];case I.STELLAR:return[255,255,255];default:return[0,0,0]}}N(yR,"getTypeRgb");var K=(E=>(E[E.HP=0]="HP",E[E.ATK=1]="ATK",E[E.DEF=2]="DEF",E[E.SPATK=3]="SPATK",E[E.SPDEF=4]="SPDEF",E[E.SPD=5]="SPD",E[E.ACC=6]="ACC",E[E.EVA=7]="EVA",E))(K||{});const VO=[0,1,2,3,4,5],zn=[1,2,3,4,5],dO=[1,2,3,4,5,6,7],K6=[1,2,3,4,5,6];function _x(E,A){return E===1?A?"battle:statRose":"battle:statFell":E===2?A?"battle:statSharplyRose":"battle:statHarshlyFell":E>2&&E<=6?A?"battle:statRoseDrastically":"battle:statSeverelyFell":A?"battle:statWontGoAnyHigher":"battle:statWontGoAnyLower"}N(_x,"getStatStageChangeDescriptionKey");function hE(E){return`pokemonInfo:Stat.${K[E]}`}N(hE,"getStatKey");function bi(E){return`pokemonInfo:Stat.${K[E]}shortened`}N(bi,"getShortenedStatKey");var kO=(E=>(E.CANDY_UPGRADE_NOTIFICATION_CHANGED="onCandyUpgradeNotificationChanged",E.MOVE_USED="onMoveUsed",E.BERRY_USED="onBerryUsed",E.ENCOUNTER_PHASE="onEncounterPhase",E.TURN_INIT="onTurnInit",E.TURN_END="onTurnEnd",E.NEW_ARENA="onNewArena",E))(kO||{});const $1=class $1 extends Event{constructor(A){super("onCandyUpgradeNotificationChanged"),this.newValue=A}};N($1,"CandyUpgradeNotificationChangedEvent");let r_=$1;const z1=class z1 extends Event{constructor(A,s,R){super("onMoveUsed"),this.pokemonId=A,this.move=s,this.ppUsed=R}};N(z1,"MoveUsedEvent");let KT=z1;const q1=class q1 extends Event{constructor(A){super("onBerryUsed"),this.berryModifier=A}};N(q1,"BerryUsedEvent");let L_=q1;const j1=class j1 extends Event{constructor(){super("onEncounterPhase")}};N(j1,"EncounterPhaseEvent");let N_=j1;const ef=class ef extends Event{constructor(){super("onTurnInit")}};N(ef,"TurnInitEvent");let T_=ef;const tf=class tf extends Event{constructor(A){super("onTurnEnd"),this.turnCount=A}};N(tf,"TurnEndEvent");let S_=tf;const Af=class Af extends Event{constructor(){super("onNewArena")}};N(Af,"NewArenaEvent");let o_=Af;var _t=(E=>(E[E.SITRUS=0]="SITRUS",E[E.LUM=1]="LUM",E[E.ENIGMA=2]="ENIGMA",E[E.LIECHI=3]="LIECHI",E[E.GANLON=4]="GANLON",E[E.PETAYA=5]="PETAYA",E[E.APICOT=6]="APICOT",E[E.SALAC=7]="SALAC",E[E.LANSAT=8]="LANSAT",E[E.STARF=9]="STARF",E[E.LEPPA=10]="LEPPA",E))(_t||{});const Ef=class Ef extends Phaser.GameObjects.Container{constructor(A){super(n,0,0),this.flyoutWidth=118,this.flyoutHeight=23,this.flyoutText=new Array(4),this.moveInfo=new Array,this.flyoutVisible=!1,this.onMoveUsedEvent=s=>this.onMoveUsed(s),this.onBerryUsedEvent=s=>this.onBerryUsed(s),this.player=A,this.translationX=this.player?-this.flyoutWidth:this.flyoutWidth,this.anchorX=this.player?-130:-40,this.anchorY=-2.5+(this.player?-18.5:-13),this.flyoutParent=n.add.container(this.anchorX-this.translationX,this.anchorY),this.flyoutParent.setAlpha(0),this.add(this.flyoutParent),this.flyoutBackground=n.add.sprite(0,0,"pbinfo_enemy_boss_stats"),this.flyoutBackground.setOrigin(0,0),this.flyoutParent.add(this.flyoutBackground),this.flyoutContainer=n.add.container(44+(this.player?-this.flyoutWidth:0),2),this.flyoutParent.add(this.flyoutContainer);for(let s=0;s<4;s++)this.flyoutText[s]=le(this.flyoutWidth/4+this.flyoutWidth/2*(s%2),this.flyoutHeight/4+this.flyoutHeight/2*(s<2?0:1),"???",Q.BATTLE_INFO),this.flyoutText[s].setFontSize(45),this.flyoutText[s].setLineSpacing(-10),this.flyoutText[s].setAlign("center"),this.flyoutText[s].setOrigin();this.flyoutContainer.add(this.flyoutText),this.flyoutContainer.add(new Phaser.GameObjects.Rectangle(n,this.flyoutWidth/2,0,1,this.flyoutHeight+(n.uiTheme===uO.LEGACY?1:0),2171169).setOrigin(.5,0)),this.flyoutContainer.add(new Phaser.GameObjects.Rectangle(n,0,this.flyoutHeight/2,this.flyoutWidth+6,1,2171169).setOrigin(0,.5))}initInfo(A){this.pokemon=A,this.name=`Flyout ${te(this.pokemon)}`,this.flyoutParent.name=`Flyout Parent ${te(this.pokemon)}`,n.eventTarget.addEventListener(kO.MOVE_USED,this.onMoveUsedEvent),n.eventTarget.addEventListener(kO.BERRY_USED,this.onBerryUsedEvent)}setText(){for(let A=0;A<this.flyoutText.length;A++){const s=this.flyoutText[A],R=this.moveInfo[A];if(!R)continue;const a=R.maxPp-R.ppUsed;s.text=`${R.move.name}  ${a}/${R.maxPp}`}}onMoveUsed(A){var a;const s=A;if(!s||s.pokemonId!==((a=this.pokemon)==null?void 0:a.id)||s.move.id===t.STRUGGLE)return;const R=this.moveInfo.find(i=>(i==null?void 0:i.move.id)===s.move.id);R?R.ppUsed=s.ppUsed:this.moveInfo.push({move:s.move,maxPp:s.move.pp,ppUsed:s.ppUsed}),this.setText()}onBerryUsed(A){var a;const s=A;if(!s||s.berryModifier.pokemonId!==((a=this.pokemon)==null?void 0:a.id)||s.berryModifier.berryType!==_t.LEPPA)return;const R=this.moveInfo.find(i=>i.ppUsed===i.maxPp);R&&(R.ppUsed=Math.max(R.ppUsed-10,0),this.setText())}toggleFlyout(A){this.flyoutVisible=A,n.tweens.add({targets:this.flyoutParent,x:A?this.anchorX:this.anchorX-this.translationX,duration:st(125),ease:"Sine.easeInOut",alpha:A?1:0})}destroy(A){n.eventTarget.removeEventListener(kO.MOVE_USED,this.onMoveUsedEvent),n.eventTarget.removeEventListener(kO.BERRY_USED,this.onBerryUsedEvent),super.destroy(A)}};N(Ef,"BattleFlyout");let l_=Ef;const nr=[],sf=class sf extends Phaser.Scene{constructor(A){super(A),this.scaledCanvas={width:1920/6,height:1080/6}}getCachedUrl(A){const s=this.game.manifest;if(s){const R=s[`/${A}`];R&&(A+=`?t=${R}`)}return A}loadImage(A,s,R){R||(R=`${A}.png`),this.load.image(A,this.getCachedUrl(`images/${s}/${R}`)),s.startsWith("ui")&&(nr.push(A),s=s.replace("ui","ui/legacy"),this.load.image(`${A}_legacy`,this.getCachedUrl(`images/${s}/${R}`)))}loadSpritesheet(A,s,R,a){a||(a=`${A}.png`),this.load.spritesheet(A,this.getCachedUrl(`images/${s}/${a}`),{frameWidth:R,frameHeight:R}),s.startsWith("ui")&&(nr.push(A),s=s.replace("ui","ui/legacy"),this.load.spritesheet(`${A}_legacy`,this.getCachedUrl(`images/${s}/${a}`),{frameWidth:R,frameHeight:R}))}loadAtlas(A,s,R){R||(R=A),s&&(s+="/"),this.load.atlas(A,this.getCachedUrl(`images/${s}${R}.png`),this.getCachedUrl(`images/${s}${R}.json`)),s.startsWith("ui")&&(nr.push(A),s=s.replace("ui","ui/legacy"),this.load.atlas(`${A}_legacy`,this.getCachedUrl(`images/${s}${R}.png`),this.getCachedUrl(`images/${s}${R}.json`)))}loadSe(A,s,R){R||(R=`${A}.wav`),s?s+="/":s="se/",Array.isArray(R)||(R=[R]);for(const a of R)this.load.audio(s+A,this.getCachedUrl(`audio/${s}${a}`))}loadBgm(A,s){s||(s=`${A}.mp3`),this.load.audio(A,this.getCachedUrl(`audio/bgm/${s}`))}};N(sf,"SceneBase");let Fl=sf;var sO=(E=>(E[E.NORMAL=0]="NORMAL",E[E.THIN=1]="THIN",E[E.XTHIN=2]="XTHIN",E))(sO||{});function KL(E){switch(E){case 1:return"_thin";case 2:return"_xthin";default:return""}}N(KL,"getWindowVariantSuffix");const w7={[uO.DEFAULT]:{0:["#6b5a73","#DD5748","#7E4955"],1:["#6b5a73","#48DDAA","#4D7574"],2:["#6b5a73","#C5C5C5","#766D7E"],3:["#6b5a73","#EBC07C","#836C66"],4:["#686868","#E8E8E8","#919191"]},[uO.LEGACY]:{0:["#706880","#8888c8","#484868"],1:["#d04028","#e0a028","#902008"],2:["#48b840","#88d880","#089040"],3:["#2068d0","#80b0e0","#104888"],4:["#706880","#8888c8","#484868"]}};function Gt(E,A,s,R,a,i,r,L,o){o===void 0&&(o=0);const l=n.uiTheme?6:8,C=n.add.nineslice(E,A,`window_${n.windowType}${KL(o)}`,void 0,s,R,l,l,l,l);if(C.setOrigin(0,0),i||a||r||L){const M=new Phaser.GameObjects.Rectangle(n,6*(E-(i?2:0)-(r||0)),6*(A+(a?2:0)+(L||0)),s-(i?2:0),R-(a?2:0),16777215);M.setOrigin(0),M.setScale(6);const D=M.createGeometryMask();C.setMask(D)}return C}N(Gt,"addWindow");function v7(E){const A=[],s=[],R=N(r=>{var L,o;if(r.hasOwnProperty("children")&&r.children instanceof Phaser.GameObjects.DisplayList){const l=r.children;for(const C of l.getAll())R(C)}else if(r instanceof Phaser.GameObjects.Container)for(const l of r.getAll())R(l);else r instanceof Phaser.GameObjects.NineSlice?r.texture.key.startsWith("window_")?A.push([r,r.texture.key.endsWith(KL(2))?2:r.texture.key.endsWith(KL(1))?1:0]):((L=r.texture)==null?void 0:L.key)==="namebox"&&s.push(r):r instanceof Phaser.GameObjects.Sprite&&((o=r.texture)==null?void 0:o.key)==="bg"&&s.push(r)},"traverse");R(n),n.windowType=E;const a=document.documentElement.style;["base","light","dark"].map((r,L)=>a.setProperty(`--color-${r}`,w7[n.uiTheme][E-1][L]));const i=`window_${E}`;for(const[r,L]of A)r.setTexture(`${i}${KL(L)}`);for(const r of s)r.setFrame(E)}N(v7,"updateWindowType");function V7(){const E=n.add.image;n.add.image=function(R,a,i,r){let L=!1;typeof i=="string"&&n.uiTheme&&nr.includes(i)&&(L=!0,i+="_legacy");const o=E.apply(this,[R,a,i,r]);if(L){const l=o.setTexture;o.setTexture=function(C,M){return C+="_legacy",l.apply(this,[C,M])}}return o};const A=n.add.sprite;n.add.sprite=function(R,a,i,r){let L=!1;typeof i=="string"&&n.uiTheme&&nr.includes(i)&&(L=!0,i+="_legacy");const o=A.apply(this,[R,a,i,r]);if(L){const l=o.setTexture;o.setTexture=function(C,M){return C+="_legacy",l.apply(this,[C,M])}}return o};const s=n.add.nineslice;n.add.nineslice=function(R,a,i,r,L,o,l,C,M,D){let _=!1;typeof i=="string"&&n.uiTheme&&nr.includes(i)&&(_=!0,i+="_legacy");const P=s.apply(this,[R,a,i,r,L,o,l,C,M,D]);if(_){const h=P.setTexture;P.setTexture=function(H,d,f,B){return H+="_legacy",h.apply(this,[H,d,f,B])}}return P}}N(V7,"addUiThemeOverrides");var Ir=(E=>(E[E.DEFAULT=0]="DEFAULT",E[E.FAST=1]="FAST",E[E.FASTER=2]="FASTER",E[E.SKIP=3]="SKIP",E))(Ir||{});const UN=class UN extends Phaser.GameObjects.Container{constructor(A,s,R){super(n,A,s),this.statOrderPlayer=[K.ATK,K.DEF,K.SPATK,K.SPDEF,K.ACC,K.EVA,K.SPD],this.statOrderEnemy=[K.HP,K.ATK,K.DEF,K.SPATK,K.SPDEF,K.ACC,K.EVA,K.SPD],this.baseY=s,this.player=R,this.mini=!R,this.boss=!1,this.offset=!1,this.lastName=null,this.lastTeraType=I.UNKNOWN,this.lastStatus=ne.NONE,this.lastHp=-1,this.lastMaxHp=-1,this.lastHpFrame=null,this.lastExp=-1,this.lastLevelExp=-1,this.lastLevel=-1,this.setVisible(!1),this.box=n.add.sprite(0,0,this.getTextureName()),this.box.setName("box"),this.box.setOrigin(1,.5),this.add(this.box),this.nameText=le(R?-115:-124,R?-15.2:-11.2,"",Q.BATTLE_INFO),this.nameText.setName("text_name"),this.nameText.setOrigin(0,0),this.add(this.nameText),this.genderText=le(0,0,"",Q.BATTLE_INFO),this.genderText.setName("text_gender"),this.genderText.setOrigin(0,0),this.genderText.setPositionRelative(this.nameText,0,2),this.add(this.genderText),this.player||(this.ownedIcon=n.add.sprite(0,0,"icon_owned"),this.ownedIcon.setName("icon_owned"),this.ownedIcon.setVisible(!1),this.ownedIcon.setOrigin(0,0),this.ownedIcon.setPositionRelative(this.nameText,0,11.75),this.add(this.ownedIcon),this.championRibbon=n.add.sprite(0,0,"champion_ribbon"),this.championRibbon.setName("icon_champion_ribbon"),this.championRibbon.setVisible(!1),this.championRibbon.setOrigin(0,0),this.championRibbon.setPositionRelative(this.nameText,8,11.75),this.add(this.championRibbon)),this.teraIcon=n.add.sprite(0,0,"icon_tera"),this.teraIcon.setName("icon_tera"),this.teraIcon.setVisible(!1),this.teraIcon.setOrigin(0,0),this.teraIcon.setScale(.5),this.teraIcon.setPositionRelative(this.nameText,0,2),this.teraIcon.setInteractive(new Phaser.Geom.Rectangle(0,0,12,15),Phaser.Geom.Rectangle.Contains),this.add(this.teraIcon),this.shinyIcon=n.add.sprite(0,0,"shiny_star"),this.shinyIcon.setName("icon_shiny"),this.shinyIcon.setVisible(!1),this.shinyIcon.setOrigin(0,0),this.shinyIcon.setScale(.5),this.shinyIcon.setPositionRelative(this.nameText,0,2),this.shinyIcon.setInteractive(new Phaser.Geom.Rectangle(0,0,12,15),Phaser.Geom.Rectangle.Contains),this.add(this.shinyIcon),this.fusionShinyIcon=n.add.sprite(0,0,"shiny_star_2"),this.fusionShinyIcon.setName("icon_fusion_shiny"),this.fusionShinyIcon.setVisible(!1),this.fusionShinyIcon.setOrigin(0,0),this.fusionShinyIcon.setScale(.5),this.fusionShinyIcon.setPosition(this.shinyIcon.x,this.shinyIcon.y),this.add(this.fusionShinyIcon),this.splicedIcon=n.add.sprite(0,0,"icon_spliced"),this.splicedIcon.setName("icon_spliced"),this.splicedIcon.setVisible(!1),this.splicedIcon.setOrigin(0,0),this.splicedIcon.setScale(.5),this.splicedIcon.setPositionRelative(this.nameText,0,2),this.splicedIcon.setInteractive(new Phaser.Geom.Rectangle(0,0,12,15),Phaser.Geom.Rectangle.Contains),this.add(this.splicedIcon),this.statusIndicator=n.add.sprite(0,0,YR("statuses")),this.statusIndicator.setName("icon_status"),this.statusIndicator.setVisible(!1),this.statusIndicator.setOrigin(0,0),this.statusIndicator.setPositionRelative(this.nameText,0,11.5),this.add(this.statusIndicator),this.levelContainer=n.add.container(R?-41:-50,R?-10:-5),this.levelContainer.setName("container_level"),this.add(this.levelContainer);const a=n.add.image(0,0,"overlay_lv");if(this.levelContainer.add(a),this.hpBar=n.add.image(R?-61:-71,R?-1:4.5,"overlay_hp"),this.hpBar.setName("hp_bar"),this.hpBar.setOrigin(0),this.add(this.hpBar),this.hpBarSegmentDividers=[],this.levelNumbersContainer=n.add.container(9.5,n.uiTheme?0:-.5),this.levelNumbersContainer.setName("container_level"),this.levelContainer.add(this.levelNumbersContainer),this.player){this.hpNumbersContainer=n.add.container(-15,10),this.hpNumbersContainer.setName("container_hp"),this.add(this.hpNumbersContainer);const o=n.add.image(-98,18,"overlay_exp");o.setName("overlay_exp"),o.setOrigin(0),this.add(o);const l=n.make.graphics({});l.setScale(6),l.fillStyle(16777215),l.beginPath(),l.fillRect(127,126,85,2);const C=l.createGeometryMask();o.setMask(C),this.expBar=o,this.expMaskRect=l}this.statsContainer=n.add.container(0,0),this.statsContainer.setName("container_stats"),this.statsContainer.setAlpha(0),this.add(this.statsContainer),this.statsBox=n.add.sprite(0,0,`${this.getTextureName()}_stats`),this.statsBox.setName("box_stats"),this.statsBox.setOrigin(1,.5),this.statsContainer.add(this.statsBox),this.statNumbers=[],this.statValuesContainer=n.add.container(0,0),this.statsContainer.add(this.statValuesContainer);const i=this.player?-this.statsBox.width+8:-this.statsBox.width+5,r=this.player?4:2,L=this.player?1:0;this.statOrder=this.player?this.statOrderPlayer:this.statOrderEnemy,this.statOrder.map((o,l)=>{const C=l>L?this.statNumbers[Math.max(l-2,0)].x+this.statNumbers[Math.max(l-2,0)].width+r:i,M=-this.statsBox.height/2+4;let D;this.statOrder[l]===K.SPD||this.statOrder[l]===K.HP?D=M+5:D=M+(!!(l%2)===this.player?10:0);const _=n.add.sprite(C,D,"pbinfo_stat",K[o]);_.setName("icon_stat_label_"+l.toString()),_.setOrigin(0,0),this.statValuesContainer.add(_);const P=n.add.sprite(C+_.width,D,"pbinfo_stat_numbers",this.statOrder[l]!==K.HP?"3":"empty");P.setName("icon_stat_number_"+l.toString()),P.setOrigin(0,0),this.statNumbers.push(P),this.statValuesContainer.add(P),this.statOrder[l]===K.HP&&(_.setVisible(!1),P.setVisible(!1))}),this.player||(this.flyoutMenu=new l_(this.player),this.add(this.flyoutMenu),this.moveBelow(this.flyoutMenu,this.box)),this.type1Icon=n.add.sprite(R?-139:-15,R?-17:-15.5,`pbinfo_${R?"player":"enemy"}_type1`),this.type1Icon.setName("icon_type_1"),this.type1Icon.setOrigin(0,0),this.add(this.type1Icon),this.type2Icon=n.add.sprite(R?-139:-15,R?-1:-2.5,`pbinfo_${R?"player":"enemy"}_type2`),this.type2Icon.setName("icon_type_2"),this.type2Icon.setOrigin(0,0),this.add(this.type2Icon),this.type3Icon=n.add.sprite(R?-154:0,R?-17:-15.5,`pbinfo_${R?"player":"enemy"}_type`),this.type3Icon.setName("icon_type_3"),this.type3Icon.setOrigin(0,0),this.add(this.type3Icon),this.player||(this.effectivenessContainer=n.add.container(0,0),this.effectivenessContainer.setPositionRelative(this.type1Icon,22,4),this.effectivenessContainer.setVisible(!1),this.add(this.effectivenessContainer),this.effectivenessText=le(5,4.5,"",Q.BATTLE_INFO),this.effectivenessWindow=Gt(0,0,0,20,void 0,!1,void 0,void 0,sO.XTHIN),this.effectivenessContainer.add(this.effectivenessWindow),this.effectivenessContainer.add(this.effectivenessText))}getStatsValueContainer(){return this.statValuesContainer}initInfo(A){var o;this.updateNameText(A);const s=this.nameText.displayWidth;this.name=A.getNameToRender(),this.box.name=A.getNameToRender(),(o=this.flyoutMenu)==null||o.initInfo(A),this.genderText.setText(SL(A.gender)),this.genderText.setColor($n(A.gender)),this.genderText.setPositionRelative(this.nameText,s,0),this.lastTeraType=A.getTeraType(),this.teraIcon.setPositionRelative(this.nameText,s+this.genderText.displayWidth+1,2),this.teraIcon.setVisible(this.lastTeraType!==I.UNKNOWN),this.teraIcon.on("pointerover",()=>{this.lastTeraType!==I.UNKNOWN&&n.ui.showTooltip("",u.t("fightUiHandler:teraHover",{type:u.t(`pokemonInfo:Type.${I[this.lastTeraType]}`)}))}),this.teraIcon.on("pointerout",()=>n.ui.hideTooltip());const R=A.isFusion();this.splicedIcon.setPositionRelative(this.nameText,s+this.genderText.displayWidth+1+(this.teraIcon.visible?this.teraIcon.displayWidth+1:0),2.5),this.splicedIcon.setVisible(R),this.splicedIcon.visible&&(this.splicedIcon.on("pointerover",()=>{var l;return n.ui.showTooltip("",`${A.species.getName(A.formIndex)}/${(l=A.fusionSpecies)==null?void 0:l.getName(A.fusionFormIndex)}`)}),this.splicedIcon.on("pointerout",()=>n.ui.hideTooltip()));const a=R&&A.shiny&&A.fusionShiny,i=a?A.variant:A.getVariant();if(this.shinyIcon.setPositionRelative(this.nameText,s+this.genderText.displayWidth+1+(this.teraIcon.visible?this.teraIcon.displayWidth+1:0)+(this.splicedIcon.visible?this.splicedIcon.displayWidth+1:0),2.5),this.shinyIcon.setTexture(`shiny_star${a?"_1":""}`),this.shinyIcon.setVisible(A.isShiny()),this.shinyIcon.setTint(yE(i)),this.shinyIcon.visible){const l=a||i?`${i===2?u.t("common:epicShiny"):i===1?u.t("common:rareShiny"):u.t("common:commonShiny")}${a?`/${A.fusionVariant===2?u.t("common:epicShiny"):A.fusionVariant===1?u.t("common:rareShiny"):u.t("common:commonShiny")}`:""}`:"";this.shinyIcon.on("pointerover",()=>n.ui.showTooltip("",`${u.t("common:shinyOnHover")}${l?` (${l})`:""}`)),this.shinyIcon.on("pointerout",()=>n.ui.hideTooltip())}if(this.fusionShinyIcon.setPosition(this.shinyIcon.x,this.shinyIcon.y),this.fusionShinyIcon.setVisible(a),R&&this.fusionShinyIcon.setTint(yE(A.fusionVariant)),!this.player){this.nameText.visible&&(this.nameText.on("pointerover",()=>n.ui.showTooltip("",u.t("battleInfo:generation",{generation:u.t(`starterSelectUiHandler:gen${A.species.generation}`)}))),this.nameText.on("pointerout",()=>n.ui.hideTooltip()));const l=n.gameData.dexData[A.species.speciesId];this.ownedIcon.setVisible(!!l.caughtAttr);const C=A.getDexAttr();n.gameMode.isClassic&&n.gameData.starterData[A.species.getRootSpeciesId()].classicWinCount>0&&n.gameData.starterData[A.species.getRootSpeciesId(!0)].classicWinCount>0&&this.championRibbon.setVisible(!0);const M=(l.caughtAttr&C)<C,D=n.gameData.starterData[A.species.getRootSpeciesId()].abilityAttr,_=A.checkIfPlayerHasAbilityOfStarter(D);(M||!_)&&this.ownedIcon.setTint(8421504),this.boss&&this.updateBossSegmentDividers(A)}this.hpBar.setScale(A.getHpRatio(!0),1),this.lastHpFrame=this.hpBar.scaleX>.5?"high":this.hpBar.scaleX>.25?"medium":"low",this.hpBar.setFrame(this.lastHpFrame),this.player&&this.setHpNumbers(A.hp,A.getMaxHp()),this.lastHp=A.hp,this.lastMaxHp=A.getMaxHp(),this.setLevel(A.level),this.lastLevel=A.level,this.shinyIcon.setVisible(A.isShiny());const r=A.getTypes(!0);this.type1Icon.setTexture(`pbinfo_${this.player?"player":"enemy"}_type${r.length>1?"1":""}`),this.type1Icon.setFrame(I[r[0]].toLowerCase()),this.type2Icon.setVisible(r.length>1),this.type3Icon.setVisible(r.length>2),r.length>1&&this.type2Icon.setFrame(I[r[1]].toLowerCase()),r.length>2&&this.type3Icon.setFrame(I[r[2]].toLowerCase()),this.player&&(this.expMaskRect.x=A.levelExp/jR(A.level,A.species.growthRate)*510,this.lastExp=A.exp,this.lastLevelExp=A.levelExp,this.statValuesContainer.setPosition(8,7));const L=this.statOrder.map(()=>0);this.lastStats=L.join(""),this.updateStats(L)}getTextureName(){return`pbinfo_${this.player?"player":"enemy"}${!this.player&&this.boss?"_boss":this.mini?"_mini":""}`}setMini(A){if(this.mini===A)return;this.mini=A,this.box.setTexture(this.getTextureName()),this.statsBox.setTexture(`${this.getTextureName()}_stats`),this.player&&(this.y-=12*(A?1:-1),this.baseY=this.y),[this.nameText,this.genderText,this.teraIcon,this.splicedIcon,this.shinyIcon,this.statusIndicator,this.levelContainer].forEach(a=>a.y+=1.5*(A?-1:1)),[this.type1Icon,this.type2Icon,this.type3Icon].forEach(a=>{a.x+=4*(A?1:-1),a.y+=-8*(A?1:-1)}),this.statValuesContainer.x+=2*(A?1:-1),this.statValuesContainer.y+=-7*(A?1:-1),[this.hpNumbersContainer,this.expBar].forEach(a=>a.setVisible(!A))}toggleStats(A){n.tweens.add({targets:this.statsContainer,duration:st(125),ease:"Sine.easeInOut",alpha:A?1:0})}updateBossSegments(A){const s=!!A.bossSegments;s!==this.boss&&(this.boss=s,[this.nameText,this.genderText,this.teraIcon,this.splicedIcon,this.shinyIcon,this.ownedIcon,this.championRibbon,this.statusIndicator,this.levelContainer,this.statValuesContainer].map(R=>R.x+=48*(s?-1:1)),this.hpBar.x+=38*(s?-1:1),this.hpBar.y+=2*(this.boss?-1:1),this.hpBar.setTexture(`overlay_hp${s?"_boss":""}`),this.box.setTexture(this.getTextureName()),this.statsBox.setTexture(`${this.getTextureName()}_stats`)),this.bossSegments=s?A.bossSegments:0,this.updateBossSegmentDividers(A)}updateBossSegmentDividers(A){var s;for(;this.hpBarSegmentDividers.length;)(s=this.hpBarSegmentDividers.pop())==null||s.destroy();if(this.boss&&this.bossSegments>1){const R=n.uiTheme,a=A.getMaxHp();for(let i=1;i<this.bossSegments;i++){const r=Math.round(a/this.bossSegments*i)/a*this.hpBar.width,L=n.add.rectangle(0,0,1,this.hpBar.height-(R?0:1),A.bossSegmentIndex>=i?16777215:4210752);L.setOrigin(.5,0),L.setName("hpBar_divider_"+i.toString()),this.add(L),this.moveBelow(L,this.statsContainer),L.setPositionRelative(this.hpBar,r,R?0:1),this.hpBarSegmentDividers.push(L)}}}setOffset(A){this.offset!==A&&(this.offset=A,this.x+=10*(this.offset===this.player?1:-1),this.y+=27*(this.offset?1:-1),this.baseY=this.y)}updateInfo(A,s){return new Promise(R=>{var D,_;if(!n)return R();const a=this.lastName!==A.getNameToRender();a&&(this.updateNameText(A),this.genderText.setPositionRelative(this.nameText,this.nameText.displayWidth,0));const i=A.getTeraType(),r=this.lastTeraType!==i;if(r&&(this.teraIcon.setVisible(i!==I.UNKNOWN),this.teraIcon.setPositionRelative(this.nameText,this.nameText.displayWidth+this.genderText.displayWidth+1,2),this.teraIcon.setTintFill(Phaser.Display.Color.GetColor(...yR(i))),this.lastTeraType=i),(a||r)&&(this.splicedIcon.setVisible(!!A.fusionSpecies),this.teraIcon.setPositionRelative(this.nameText,this.nameText.displayWidth+this.genderText.displayWidth+1,2),this.splicedIcon.setPositionRelative(this.nameText,this.nameText.displayWidth+this.genderText.displayWidth+1+(this.teraIcon.visible?this.teraIcon.displayWidth+1:0),1.5),this.shinyIcon.setPositionRelative(this.nameText,this.nameText.displayWidth+this.genderText.displayWidth+1+(this.teraIcon.visible?this.teraIcon.displayWidth+1:0)+(this.splicedIcon.visible?this.splicedIcon.displayWidth+1:0),2.5)),this.lastStatus!==(((D=A.status)==null?void 0:D.effect)||ne.NONE)){this.lastStatus=((_=A.status)==null?void 0:_.effect)||ne.NONE,this.lastStatus!==ne.NONE&&this.statusIndicator.setFrame(ne[this.lastStatus].toLowerCase());const P=this.player?0:(this.ownedIcon.visible?8:0)+(this.championRibbon.visible?8:0);this.statusIndicator.setPositionRelative(this.nameText,P,11.5),this.statusIndicator.setVisible(!!this.lastStatus)}const L=A.getTypes(!0);this.type1Icon.setTexture(`pbinfo_${this.player?"player":"enemy"}_type${L.length>1?"1":""}`),this.type1Icon.setFrame(I[L[0]].toLowerCase()),this.type2Icon.setVisible(L.length>1),this.type3Icon.setVisible(L.length>2),L.length>1&&this.type2Icon.setFrame(I[L[1]].toLowerCase()),L.length>2&&this.type3Icon.setFrame(I[L[2]].toLowerCase());const o=N(()=>{const P=this.hpBar.scaleX>.5?"high":this.hpBar.scaleX>.25?"medium":"low";P!==this.lastHpFrame&&(this.hpBar.setFrame(P),this.lastHpFrame=P)},"updateHpFrame"),l=N(()=>{let P=s?0:Phaser.Math.Clamp(Math.abs(this.lastHp-A.hp)*5,250,5e3);const h=n.hpBarSpeed;h&&(P=h>=3?0:P/Math.pow(2,h)),n.tweens.add({targets:this.hpBar,ease:"Sine.easeOut",scaleX:A.getHpRatio(!0),duration:P,onUpdate:N(()=>{if(this.player&&this.lastHp!==A.hp){const H=Math.ceil(this.hpBar.scaleX*A.getMaxHp());this.setHpNumbers(H,A.getMaxHp()),this.lastHp=H}o()},"onUpdate"),onComplete:N(()=>{o(),R()},"onComplete")}),this.player||(this.lastHp=A.hp),this.lastMaxHp=A.getMaxHp()},"updatePokemonHp");if(this.player){const P=A.level>=n.getMaxExpLevel();if(this.lastExp!==A.exp||this.lastLevel!==A.level){const h=R,H=Math.max(Phaser.Tweens.Builders.GetEaseFunction("Cubic.easeIn")(1-Math.min(A.level-this.lastLevel,10)/10),.1);R=N(()=>this.updatePokemonExp(A,!1,H).then(()=>h()),"resolve")}else P!==this.lastLevelCapped&&this.setLevel(A.level);this.lastLevelCapped=P}if(this.lastHp!==A.hp||this.lastMaxHp!==A.getMaxHp())return l();!this.player&&this.lastLevel!==A.level&&(this.setLevel(A.level),this.lastLevel=A.level);const C=A.getStatStages(),M=C.join("");this.lastStats!==M&&(this.updateStats(C),this.lastStats=M),this.shinyIcon.setVisible(A.isShiny()),R()})}updateNameText(A){let s=A.getNameToRender().replace(/[♂♀]/g,""),R;const a=le(0,0,s,Q.BATTLE_INFO);for(R=a.displayWidth;R>(this.player||!this.boss?60:98)-((A.gender!==at.GENDERLESS?6:0)+(A.fusionSpecies?8:0)+(A.isShiny()?8:0)+(Math.min(A.level.toString().length,3)-3)*8);)s=`${s.slice(0,s.endsWith(".")?-2:-1).trimEnd()}.`,a.setText(s),R=a.displayWidth;a.destroy(),this.nameText.setText(s),this.lastName=A.getNameToRender(),this.nameText.visible&&this.nameText.setInteractive(new Phaser.Geom.Rectangle(0,0,this.nameText.width,this.nameText.height),Phaser.Geom.Rectangle.Contains)}updatePokemonExp(A,s,R=1){return new Promise(a=>{const i=this.lastLevel<A.level,r=g6(this.lastLevel+1,A.species.growthRate),L=i?r:A.levelExp;let o=r?L/r:0;this.lastLevel>=n.getMaxExpLevel(!0)&&(i?o=1:o=0,s=!0);const l=Phaser.Tweens.Builders.GetEaseFunction("Sine.easeIn")(1-Math.max(this.lastLevel-100,0)/150);let C=this.visible&&!s?(L-this.lastLevelExp)/r*UN.EXP_GAINS_DURATION_BASE*l*R:0;const M=n.expGainsSpeed;M&&M>=Ir.DEFAULT&&(C=M>=Ir.SKIP?Ir.DEFAULT:C/Math.pow(2,M)),o===1?(this.lastLevelExp=0,this.lastLevel++):(this.lastExp=A.exp,this.lastLevelExp=A.levelExp),C&&n.playSound("se/exp"),n.tweens.add({targets:this.expMaskRect,ease:"Sine.easeIn",x:o*510,duration:C,onComplete:N(()=>{if(!n)return a();if(C&&n.sound.stopByKey("se/exp"),o===1){n.playSound("se/level_up"),this.setLevel(this.lastLevel),n.time.delayedCall(500*R,()=>{this.expMaskRect.x=0,this.updateInfo(A,s).then(()=>a())});return}a()},"onComplete")})})}setLevel(A){const s=A>=n.getMaxExpLevel();this.levelNumbersContainer.removeAll(!0);const R=A.toString();for(let a=0;a<R.length;a++)this.levelNumbersContainer.add(n.add.image(a*8,0,`numbers${s&&this.player?"_red":""}`,R[a]));this.levelContainer.setX((this.player?-41:-50)-8*Math.max(R.length-3,0))}setHpNumbers(A,s){if(!this.player||!n)return;this.hpNumbersContainer.removeAll(!0);const R=A.toString(),a=s.toString();let i=0;for(let r=a.length-1;r>=0;r--)this.hpNumbersContainer.add(n.add.image(i++*-8,0,"numbers",a[r]));this.hpNumbersContainer.add(n.add.image(i++*-8,0,"numbers","/"));for(let r=R.length-1;r>=0;r--)this.hpNumbersContainer.add(n.add.image(i++*-8,0,"numbers",R[r]))}updateStats(A){this.statOrder.map((s,R)=>{s!==K.HP&&this.statNumbers[R].setFrame(A[s-1].toString())})}toggleFlyout(A){var s,R;(s=this.flyoutMenu)==null||s.toggleFlyout(A),A?(R=this.effectivenessContainer)==null||R.setVisible(!1):this.updateEffectiveness(this.currentEffectiveness)}updateEffectiveness(A){var s;if(!this.player){if(this.currentEffectiveness=A,!n.typeHints||A===void 0||(s=this.flyoutMenu)!=null&&s.flyoutVisible){this.effectivenessContainer.setVisible(!1);return}this.effectivenessText.setText(A),this.effectivenessWindow.width=10+this.effectivenessText.displayWidth,this.effectivenessContainer.setVisible(!0)}}getBaseY(){return this.baseY}resetY(){this.y=this.baseY}};N(UN,"BattleInfo"),UN.EXP_GAINS_DURATION_BASE=1650;let mT=UN;const Rf=class Rf extends mT{constructor(){super(Math.floor(n.game.canvas.width/6)-10,-72,!0)}};N(Rf,"PlayerBattleInfo");let pl=Rf;const Of=class Of extends mT{constructor(){super(140,-141,!1)}setMini(A){}};N(Of,"EnemyBattleInfo");let C_=Of;const nf=class nf{constructor(A,s=0,R){this.toxicTurnCount=0,this.effect=A,this.toxicTurnCount=s,this.sleepTurnsRemaining=R}incrementTurn(){this.toxicTurnCount++,this.sleepTurnsRemaining&&this.sleepTurnsRemaining--}isPostTurn(){return this.effect===ne.POISON||this.effect===ne.TOXIC||this.effect===ne.BURN}};N(nf,"Status");let za=nf;function Gr(E){switch(E){case ne.POISON:return"statusEffect:poison";case ne.TOXIC:return"statusEffect:toxic";case ne.PARALYSIS:return"statusEffect:paralysis";case ne.SLEEP:return"statusEffect:sleep";case ne.FREEZE:return"statusEffect:freeze";case ne.BURN:return"statusEffect:burn";default:return"statusEffect:none"}}N(Gr,"getStatusEffectMessageKey");function x7(E,A,s){if(E===ne.NONE)return"";if(!s){const a=`${Gr(E)}.obtain`;return u.t(a,{pokemonNameWithAffix:A})}const R=`${Gr(E)}.obtainSource`;return u.t(R,{pokemonNameWithAffix:A,sourceText:s})}N(x7,"getStatusEffectObtainText");function m6(E,A){if(E===ne.NONE)return"";const s=`${Gr(E)}.activation`;return u.t(s,{pokemonNameWithAffix:A})}N(m6,"getStatusEffectActivationText");function b7(E,A){if(E===ne.NONE)return"";const s=`${Gr(E)}.overlap`;return u.t(s,{pokemonNameWithAffix:A})}N(b7,"getStatusEffectOverlapText");function La(E,A){if(E===ne.NONE)return"";const s=`${Gr(E)}.heal`;return u.t(s,{pokemonNameWithAffix:A})}N(La,"getStatusEffectHealText");function F6(E){if(E===ne.NONE)return"";const A=`${Gr(E)}.description`;return u.t(A)}N(F6,"getStatusEffectDescriptor");function p6(E){switch(E){case ne.POISON:case ne.TOXIC:case ne.PARALYSIS:case ne.BURN:return 1.5;case ne.SLEEP:case ne.FREEZE:return 2.5}return 1}N(p6,"getStatusEffectCatchRateMultiplier");function k7(E,A){return!E||E.effect===ne.NONE||E.effect===ne.FAINT?A:!A||A.effect===ne.NONE||A.effect===ne.FAINT||d6(0,2)?E:A}N(k7,"getRandomStatus");function mL(){return[ne.POISON,ne.TOXIC,ne.PARALYSIS,ne.SLEEP,ne.FREEZE,ne.BURN]}N(mL,"getNonVolatileStatusEffects");function Px(E){return mL().includes(E)}N(Px,"isNonVolatileStatusEffect");var O=(E=>(E[E.NONE=0]="NONE",E[E.STENCH=1]="STENCH",E[E.DRIZZLE=2]="DRIZZLE",E[E.SPEED_BOOST=3]="SPEED_BOOST",E[E.BATTLE_ARMOR=4]="BATTLE_ARMOR",E[E.STURDY=5]="STURDY",E[E.DAMP=6]="DAMP",E[E.LIMBER=7]="LIMBER",E[E.SAND_VEIL=8]="SAND_VEIL",E[E.STATIC=9]="STATIC",E[E.VOLT_ABSORB=10]="VOLT_ABSORB",E[E.WATER_ABSORB=11]="WATER_ABSORB",E[E.OBLIVIOUS=12]="OBLIVIOUS",E[E.CLOUD_NINE=13]="CLOUD_NINE",E[E.COMPOUND_EYES=14]="COMPOUND_EYES",E[E.INSOMNIA=15]="INSOMNIA",E[E.COLOR_CHANGE=16]="COLOR_CHANGE",E[E.IMMUNITY=17]="IMMUNITY",E[E.FLASH_FIRE=18]="FLASH_FIRE",E[E.SHIELD_DUST=19]="SHIELD_DUST",E[E.OWN_TEMPO=20]="OWN_TEMPO",E[E.SUCTION_CUPS=21]="SUCTION_CUPS",E[E.INTIMIDATE=22]="INTIMIDATE",E[E.SHADOW_TAG=23]="SHADOW_TAG",E[E.ROUGH_SKIN=24]="ROUGH_SKIN",E[E.WONDER_GUARD=25]="WONDER_GUARD",E[E.LEVITATE=26]="LEVITATE",E[E.EFFECT_SPORE=27]="EFFECT_SPORE",E[E.SYNCHRONIZE=28]="SYNCHRONIZE",E[E.CLEAR_BODY=29]="CLEAR_BODY",E[E.NATURAL_CURE=30]="NATURAL_CURE",E[E.LIGHTNING_ROD=31]="LIGHTNING_ROD",E[E.SERENE_GRACE=32]="SERENE_GRACE",E[E.SWIFT_SWIM=33]="SWIFT_SWIM",E[E.CHLOROPHYLL=34]="CHLOROPHYLL",E[E.ILLUMINATE=35]="ILLUMINATE",E[E.TRACE=36]="TRACE",E[E.HUGE_POWER=37]="HUGE_POWER",E[E.POISON_POINT=38]="POISON_POINT",E[E.INNER_FOCUS=39]="INNER_FOCUS",E[E.MAGMA_ARMOR=40]="MAGMA_ARMOR",E[E.WATER_VEIL=41]="WATER_VEIL",E[E.MAGNET_PULL=42]="MAGNET_PULL",E[E.SOUNDPROOF=43]="SOUNDPROOF",E[E.RAIN_DISH=44]="RAIN_DISH",E[E.SAND_STREAM=45]="SAND_STREAM",E[E.PRESSURE=46]="PRESSURE",E[E.THICK_FAT=47]="THICK_FAT",E[E.EARLY_BIRD=48]="EARLY_BIRD",E[E.FLAME_BODY=49]="FLAME_BODY",E[E.RUN_AWAY=50]="RUN_AWAY",E[E.KEEN_EYE=51]="KEEN_EYE",E[E.HYPER_CUTTER=52]="HYPER_CUTTER",E[E.PICKUP=53]="PICKUP",E[E.TRUANT=54]="TRUANT",E[E.HUSTLE=55]="HUSTLE",E[E.CUTE_CHARM=56]="CUTE_CHARM",E[E.PLUS=57]="PLUS",E[E.MINUS=58]="MINUS",E[E.FORECAST=59]="FORECAST",E[E.STICKY_HOLD=60]="STICKY_HOLD",E[E.SHED_SKIN=61]="SHED_SKIN",E[E.GUTS=62]="GUTS",E[E.MARVEL_SCALE=63]="MARVEL_SCALE",E[E.LIQUID_OOZE=64]="LIQUID_OOZE",E[E.OVERGROW=65]="OVERGROW",E[E.BLAZE=66]="BLAZE",E[E.TORRENT=67]="TORRENT",E[E.SWARM=68]="SWARM",E[E.ROCK_HEAD=69]="ROCK_HEAD",E[E.DROUGHT=70]="DROUGHT",E[E.ARENA_TRAP=71]="ARENA_TRAP",E[E.VITAL_SPIRIT=72]="VITAL_SPIRIT",E[E.WHITE_SMOKE=73]="WHITE_SMOKE",E[E.PURE_POWER=74]="PURE_POWER",E[E.SHELL_ARMOR=75]="SHELL_ARMOR",E[E.AIR_LOCK=76]="AIR_LOCK",E[E.TANGLED_FEET=77]="TANGLED_FEET",E[E.MOTOR_DRIVE=78]="MOTOR_DRIVE",E[E.RIVALRY=79]="RIVALRY",E[E.STEADFAST=80]="STEADFAST",E[E.SNOW_CLOAK=81]="SNOW_CLOAK",E[E.GLUTTONY=82]="GLUTTONY",E[E.ANGER_POINT=83]="ANGER_POINT",E[E.UNBURDEN=84]="UNBURDEN",E[E.HEATPROOF=85]="HEATPROOF",E[E.SIMPLE=86]="SIMPLE",E[E.DRY_SKIN=87]="DRY_SKIN",E[E.DOWNLOAD=88]="DOWNLOAD",E[E.IRON_FIST=89]="IRON_FIST",E[E.POISON_HEAL=90]="POISON_HEAL",E[E.ADAPTABILITY=91]="ADAPTABILITY",E[E.SKILL_LINK=92]="SKILL_LINK",E[E.HYDRATION=93]="HYDRATION",E[E.SOLAR_POWER=94]="SOLAR_POWER",E[E.QUICK_FEET=95]="QUICK_FEET",E[E.NORMALIZE=96]="NORMALIZE",E[E.SNIPER=97]="SNIPER",E[E.MAGIC_GUARD=98]="MAGIC_GUARD",E[E.NO_GUARD=99]="NO_GUARD",E[E.STALL=100]="STALL",E[E.TECHNICIAN=101]="TECHNICIAN",E[E.LEAF_GUARD=102]="LEAF_GUARD",E[E.KLUTZ=103]="KLUTZ",E[E.MOLD_BREAKER=104]="MOLD_BREAKER",E[E.SUPER_LUCK=105]="SUPER_LUCK",E[E.AFTERMATH=106]="AFTERMATH",E[E.ANTICIPATION=107]="ANTICIPATION",E[E.FOREWARN=108]="FOREWARN",E[E.UNAWARE=109]="UNAWARE",E[E.TINTED_LENS=110]="TINTED_LENS",E[E.FILTER=111]="FILTER",E[E.SLOW_START=112]="SLOW_START",E[E.SCRAPPY=113]="SCRAPPY",E[E.STORM_DRAIN=114]="STORM_DRAIN",E[E.ICE_BODY=115]="ICE_BODY",E[E.SOLID_ROCK=116]="SOLID_ROCK",E[E.SNOW_WARNING=117]="SNOW_WARNING",E[E.HONEY_GATHER=118]="HONEY_GATHER",E[E.FRISK=119]="FRISK",E[E.RECKLESS=120]="RECKLESS",E[E.MULTITYPE=121]="MULTITYPE",E[E.FLOWER_GIFT=122]="FLOWER_GIFT",E[E.BAD_DREAMS=123]="BAD_DREAMS",E[E.PICKPOCKET=124]="PICKPOCKET",E[E.SHEER_FORCE=125]="SHEER_FORCE",E[E.CONTRARY=126]="CONTRARY",E[E.UNNERVE=127]="UNNERVE",E[E.DEFIANT=128]="DEFIANT",E[E.DEFEATIST=129]="DEFEATIST",E[E.CURSED_BODY=130]="CURSED_BODY",E[E.HEALER=131]="HEALER",E[E.FRIEND_GUARD=132]="FRIEND_GUARD",E[E.WEAK_ARMOR=133]="WEAK_ARMOR",E[E.HEAVY_METAL=134]="HEAVY_METAL",E[E.LIGHT_METAL=135]="LIGHT_METAL",E[E.MULTISCALE=136]="MULTISCALE",E[E.TOXIC_BOOST=137]="TOXIC_BOOST",E[E.FLARE_BOOST=138]="FLARE_BOOST",E[E.HARVEST=139]="HARVEST",E[E.TELEPATHY=140]="TELEPATHY",E[E.MOODY=141]="MOODY",E[E.OVERCOAT=142]="OVERCOAT",E[E.POISON_TOUCH=143]="POISON_TOUCH",E[E.REGENERATOR=144]="REGENERATOR",E[E.BIG_PECKS=145]="BIG_PECKS",E[E.SAND_RUSH=146]="SAND_RUSH",E[E.WONDER_SKIN=147]="WONDER_SKIN",E[E.ANALYTIC=148]="ANALYTIC",E[E.ILLUSION=149]="ILLUSION",E[E.IMPOSTER=150]="IMPOSTER",E[E.INFILTRATOR=151]="INFILTRATOR",E[E.MUMMY=152]="MUMMY",E[E.MOXIE=153]="MOXIE",E[E.JUSTIFIED=154]="JUSTIFIED",E[E.RATTLED=155]="RATTLED",E[E.MAGIC_BOUNCE=156]="MAGIC_BOUNCE",E[E.SAP_SIPPER=157]="SAP_SIPPER",E[E.PRANKSTER=158]="PRANKSTER",E[E.SAND_FORCE=159]="SAND_FORCE",E[E.IRON_BARBS=160]="IRON_BARBS",E[E.ZEN_MODE=161]="ZEN_MODE",E[E.VICTORY_STAR=162]="VICTORY_STAR",E[E.TURBOBLAZE=163]="TURBOBLAZE",E[E.TERAVOLT=164]="TERAVOLT",E[E.AROMA_VEIL=165]="AROMA_VEIL",E[E.FLOWER_VEIL=166]="FLOWER_VEIL",E[E.CHEEK_POUCH=167]="CHEEK_POUCH",E[E.PROTEAN=168]="PROTEAN",E[E.FUR_COAT=169]="FUR_COAT",E[E.MAGICIAN=170]="MAGICIAN",E[E.BULLETPROOF=171]="BULLETPROOF",E[E.COMPETITIVE=172]="COMPETITIVE",E[E.STRONG_JAW=173]="STRONG_JAW",E[E.REFRIGERATE=174]="REFRIGERATE",E[E.SWEET_VEIL=175]="SWEET_VEIL",E[E.STANCE_CHANGE=176]="STANCE_CHANGE",E[E.GALE_WINGS=177]="GALE_WINGS",E[E.MEGA_LAUNCHER=178]="MEGA_LAUNCHER",E[E.GRASS_PELT=179]="GRASS_PELT",E[E.SYMBIOSIS=180]="SYMBIOSIS",E[E.TOUGH_CLAWS=181]="TOUGH_CLAWS",E[E.PIXILATE=182]="PIXILATE",E[E.GOOEY=183]="GOOEY",E[E.AERILATE=184]="AERILATE",E[E.PARENTAL_BOND=185]="PARENTAL_BOND",E[E.DARK_AURA=186]="DARK_AURA",E[E.FAIRY_AURA=187]="FAIRY_AURA",E[E.AURA_BREAK=188]="AURA_BREAK",E[E.PRIMORDIAL_SEA=189]="PRIMORDIAL_SEA",E[E.DESOLATE_LAND=190]="DESOLATE_LAND",E[E.DELTA_STREAM=191]="DELTA_STREAM",E[E.STAMINA=192]="STAMINA",E[E.WIMP_OUT=193]="WIMP_OUT",E[E.EMERGENCY_EXIT=194]="EMERGENCY_EXIT",E[E.WATER_COMPACTION=195]="WATER_COMPACTION",E[E.MERCILESS=196]="MERCILESS",E[E.SHIELDS_DOWN=197]="SHIELDS_DOWN",E[E.STAKEOUT=198]="STAKEOUT",E[E.WATER_BUBBLE=199]="WATER_BUBBLE",E[E.STEELWORKER=200]="STEELWORKER",E[E.BERSERK=201]="BERSERK",E[E.SLUSH_RUSH=202]="SLUSH_RUSH",E[E.LONG_REACH=203]="LONG_REACH",E[E.LIQUID_VOICE=204]="LIQUID_VOICE",E[E.TRIAGE=205]="TRIAGE",E[E.GALVANIZE=206]="GALVANIZE",E[E.SURGE_SURFER=207]="SURGE_SURFER",E[E.SCHOOLING=208]="SCHOOLING",E[E.DISGUISE=209]="DISGUISE",E[E.BATTLE_BOND=210]="BATTLE_BOND",E[E.POWER_CONSTRUCT=211]="POWER_CONSTRUCT",E[E.CORROSION=212]="CORROSION",E[E.COMATOSE=213]="COMATOSE",E[E.QUEENLY_MAJESTY=214]="QUEENLY_MAJESTY",E[E.INNARDS_OUT=215]="INNARDS_OUT",E[E.DANCER=216]="DANCER",E[E.BATTERY=217]="BATTERY",E[E.FLUFFY=218]="FLUFFY",E[E.DAZZLING=219]="DAZZLING",E[E.SOUL_HEART=220]="SOUL_HEART",E[E.TANGLING_HAIR=221]="TANGLING_HAIR",E[E.RECEIVER=222]="RECEIVER",E[E.POWER_OF_ALCHEMY=223]="POWER_OF_ALCHEMY",E[E.BEAST_BOOST=224]="BEAST_BOOST",E[E.RKS_SYSTEM=225]="RKS_SYSTEM",E[E.ELECTRIC_SURGE=226]="ELECTRIC_SURGE",E[E.PSYCHIC_SURGE=227]="PSYCHIC_SURGE",E[E.MISTY_SURGE=228]="MISTY_SURGE",E[E.GRASSY_SURGE=229]="GRASSY_SURGE",E[E.FULL_METAL_BODY=230]="FULL_METAL_BODY",E[E.SHADOW_SHIELD=231]="SHADOW_SHIELD",E[E.PRISM_ARMOR=232]="PRISM_ARMOR",E[E.NEUROFORCE=233]="NEUROFORCE",E[E.INTREPID_SWORD=234]="INTREPID_SWORD",E[E.DAUNTLESS_SHIELD=235]="DAUNTLESS_SHIELD",E[E.LIBERO=236]="LIBERO",E[E.BALL_FETCH=237]="BALL_FETCH",E[E.COTTON_DOWN=238]="COTTON_DOWN",E[E.PROPELLER_TAIL=239]="PROPELLER_TAIL",E[E.MIRROR_ARMOR=240]="MIRROR_ARMOR",E[E.GULP_MISSILE=241]="GULP_MISSILE",E[E.STALWART=242]="STALWART",E[E.STEAM_ENGINE=243]="STEAM_ENGINE",E[E.PUNK_ROCK=244]="PUNK_ROCK",E[E.SAND_SPIT=245]="SAND_SPIT",E[E.ICE_SCALES=246]="ICE_SCALES",E[E.RIPEN=247]="RIPEN",E[E.ICE_FACE=248]="ICE_FACE",E[E.POWER_SPOT=249]="POWER_SPOT",E[E.MIMICRY=250]="MIMICRY",E[E.SCREEN_CLEANER=251]="SCREEN_CLEANER",E[E.STEELY_SPIRIT=252]="STEELY_SPIRIT",E[E.PERISH_BODY=253]="PERISH_BODY",E[E.WANDERING_SPIRIT=254]="WANDERING_SPIRIT",E[E.GORILLA_TACTICS=255]="GORILLA_TACTICS",E[E.NEUTRALIZING_GAS=256]="NEUTRALIZING_GAS",E[E.PASTEL_VEIL=257]="PASTEL_VEIL",E[E.HUNGER_SWITCH=258]="HUNGER_SWITCH",E[E.QUICK_DRAW=259]="QUICK_DRAW",E[E.UNSEEN_FIST=260]="UNSEEN_FIST",E[E.CURIOUS_MEDICINE=261]="CURIOUS_MEDICINE",E[E.TRANSISTOR=262]="TRANSISTOR",E[E.DRAGONS_MAW=263]="DRAGONS_MAW",E[E.CHILLING_NEIGH=264]="CHILLING_NEIGH",E[E.GRIM_NEIGH=265]="GRIM_NEIGH",E[E.AS_ONE_GLASTRIER=266]="AS_ONE_GLASTRIER",E[E.AS_ONE_SPECTRIER=267]="AS_ONE_SPECTRIER",E[E.LINGERING_AROMA=268]="LINGERING_AROMA",E[E.SEED_SOWER=269]="SEED_SOWER",E[E.THERMAL_EXCHANGE=270]="THERMAL_EXCHANGE",E[E.ANGER_SHELL=271]="ANGER_SHELL",E[E.PURIFYING_SALT=272]="PURIFYING_SALT",E[E.WELL_BAKED_BODY=273]="WELL_BAKED_BODY",E[E.WIND_RIDER=274]="WIND_RIDER",E[E.GUARD_DOG=275]="GUARD_DOG",E[E.ROCKY_PAYLOAD=276]="ROCKY_PAYLOAD",E[E.WIND_POWER=277]="WIND_POWER",E[E.ZERO_TO_HERO=278]="ZERO_TO_HERO",E[E.COMMANDER=279]="COMMANDER",E[E.ELECTROMORPHOSIS=280]="ELECTROMORPHOSIS",E[E.PROTOSYNTHESIS=281]="PROTOSYNTHESIS",E[E.QUARK_DRIVE=282]="QUARK_DRIVE",E[E.GOOD_AS_GOLD=283]="GOOD_AS_GOLD",E[E.VESSEL_OF_RUIN=284]="VESSEL_OF_RUIN",E[E.SWORD_OF_RUIN=285]="SWORD_OF_RUIN",E[E.TABLETS_OF_RUIN=286]="TABLETS_OF_RUIN",E[E.BEADS_OF_RUIN=287]="BEADS_OF_RUIN",E[E.ORICHALCUM_PULSE=288]="ORICHALCUM_PULSE",E[E.HADRON_ENGINE=289]="HADRON_ENGINE",E[E.OPPORTUNIST=290]="OPPORTUNIST",E[E.CUD_CHEW=291]="CUD_CHEW",E[E.SHARPNESS=292]="SHARPNESS",E[E.SUPREME_OVERLORD=293]="SUPREME_OVERLORD",E[E.COSTAR=294]="COSTAR",E[E.TOXIC_DEBRIS=295]="TOXIC_DEBRIS",E[E.ARMOR_TAIL=296]="ARMOR_TAIL",E[E.EARTH_EATER=297]="EARTH_EATER",E[E.MYCELIUM_MIGHT=298]="MYCELIUM_MIGHT",E[E.MINDS_EYE=299]="MINDS_EYE",E[E.SUPERSWEET_SYRUP=300]="SUPERSWEET_SYRUP",E[E.HOSPITALITY=301]="HOSPITALITY",E[E.TOXIC_CHAIN=302]="TOXIC_CHAIN",E[E.EMBODY_ASPECT_TEAL=303]="EMBODY_ASPECT_TEAL",E[E.EMBODY_ASPECT_WELLSPRING=304]="EMBODY_ASPECT_WELLSPRING",E[E.EMBODY_ASPECT_HEARTHFLAME=305]="EMBODY_ASPECT_HEARTHFLAME",E[E.EMBODY_ASPECT_CORNERSTONE=306]="EMBODY_ASPECT_CORNERSTONE",E[E.TERA_SHIFT=307]="TERA_SHIFT",E[E.TERA_SHELL=308]="TERA_SHELL",E[E.TERAFORM_ZERO=309]="TERAFORM_ZERO",E[E.POISON_PUPPETEER=310]="POISON_PUPPETEER",E))(O||{}),ge=(E=>(E.NONE="NONE",E.MUD_SPORT="MUD_SPORT",E.WATER_SPORT="WATER_SPORT",E.SPIKES="SPIKES",E.TOXIC_SPIKES="TOXIC_SPIKES",E.MIST="MIST",E.FUTURE_SIGHT="FUTURE_SIGHT",E.DOOM_DESIRE="DOOM_DESIRE",E.WISH="WISH",E.STEALTH_ROCK="STEALTH_ROCK",E.STICKY_WEB="STICKY_WEB",E.TRICK_ROOM="TRICK_ROOM",E.GRAVITY="GRAVITY",E.REFLECT="REFLECT",E.LIGHT_SCREEN="LIGHT_SCREEN",E.AURORA_VEIL="AURORA_VEIL",E.QUICK_GUARD="QUICK_GUARD",E.WIDE_GUARD="WIDE_GUARD",E.MAT_BLOCK="MAT_BLOCK",E.CRAFTY_SHIELD="CRAFTY_SHIELD",E.TAILWIND="TAILWIND",E.HAPPY_HOUR="HAPPY_HOUR",E.SAFEGUARD="SAFEGUARD",E.NO_CRIT="NO_CRIT",E.IMPRISON="IMPRISON",E.ION_DELUGE="ION_DELUGE",E.FIRE_GRASS_PLEDGE="FIRE_GRASS_PLEDGE",E.WATER_FIRE_PLEDGE="WATER_FIRE_PLEDGE",E.GRASS_WATER_PLEDGE="GRASS_WATER_PLEDGE",E.FAIRY_LOCK="FAIRY_LOCK",E))(ge||{}),y=(E=>(E.NONE="NONE",E.RECHARGING="RECHARGING",E.FLINCHED="FLINCHED",E.INTERRUPTED="INTERRUPTED",E.CONFUSED="CONFUSED",E.INFATUATED="INFATUATED",E.SEEDED="SEEDED",E.NIGHTMARE="NIGHTMARE",E.FRENZY="FRENZY",E.CHARGING="CHARGING",E.ENCORE="ENCORE",E.HELPING_HAND="HELPING_HAND",E.INGRAIN="INGRAIN",E.OCTOLOCK="OCTOLOCK",E.AQUA_RING="AQUA_RING",E.DROWSY="DROWSY",E.TRAPPED="TRAPPED",E.BIND="BIND",E.WRAP="WRAP",E.FIRE_SPIN="FIRE_SPIN",E.WHIRLPOOL="WHIRLPOOL",E.CLAMP="CLAMP",E.SAND_TOMB="SAND_TOMB",E.MAGMA_STORM="MAGMA_STORM",E.SNAP_TRAP="SNAP_TRAP",E.THUNDER_CAGE="THUNDER_CAGE",E.INFESTATION="INFESTATION",E.PROTECTED="PROTECTED",E.SPIKY_SHIELD="SPIKY_SHIELD",E.KINGS_SHIELD="KINGS_SHIELD",E.OBSTRUCT="OBSTRUCT",E.SILK_TRAP="SILK_TRAP",E.BANEFUL_BUNKER="BANEFUL_BUNKER",E.BURNING_BULWARK="BURNING_BULWARK",E.ENDURING="ENDURING",E.STURDY="STURDY",E.PERISH_SONG="PERISH_SONG",E.TRUANT="TRUANT",E.SLOW_START="SLOW_START",E.PROTOSYNTHESIS="PROTOSYNTHESIS",E.QUARK_DRIVE="QUARK_DRIVE",E.FLYING="FLYING",E.UNDERGROUND="UNDERGROUND",E.UNDERWATER="UNDERWATER",E.HIDDEN="HIDDEN",E.FIRE_BOOST="FIRE_BOOST",E.CRIT_BOOST="CRIT_BOOST",E.ALWAYS_CRIT="ALWAYS_CRIT",E.IGNORE_ACCURACY="IGNORE_ACCURACY",E.BYPASS_SLEEP="BYPASS_SLEEP",E.IGNORE_FLYING="IGNORE_FLYING",E.SALT_CURED="SALT_CURED",E.CURSED="CURSED",E.CHARGED="CHARGED",E.ROOSTED="ROOSTED",E.FLOATING="FLOATING",E.MINIMIZED="MINIMIZED",E.DESTINY_BOND="DESTINY_BOND",E.CENTER_OF_ATTENTION="CENTER_OF_ATTENTION",E.ICE_FACE="ICE_FACE",E.DISGUISE="DISGUISE",E.STOCKPILING="STOCKPILING",E.RECEIVE_DOUBLE_DAMAGE="RECEIVE_DOUBLE_DAMAGE",E.ALWAYS_GET_HIT="ALWAYS_GET_HIT",E.DISABLED="DISABLED",E.SUBSTITUTE="SUBSTITUTE",E.IGNORE_GHOST="IGNORE_GHOST",E.IGNORE_DARK="IGNORE_DARK",E.GULP_MISSILE_ARROKUDA="GULP_MISSILE_ARROKUDA",E.GULP_MISSILE_PIKACHU="GULP_MISSILE_PIKACHU",E.BEAK_BLAST_CHARGING="BEAK_BLAST_CHARGING",E.SHELL_TRAP="SHELL_TRAP",E.DRAGON_CHEER="DRAGON_CHEER",E.NO_RETREAT="NO_RETREAT",E.GORILLA_TACTICS="GORILLA_TACTICS",E.UNBURDEN="UNBURDEN",E.THROAT_CHOPPED="THROAT_CHOPPED",E.TAR_SHOT="TAR_SHOT",E.BURNED_UP="BURNED_UP",E.DOUBLE_SHOCKED="DOUBLE_SHOCKED",E.AUTOTOMIZED="AUTOTOMIZED",E.MYSTERY_ENCOUNTER_POST_SUMMON="MYSTERY_ENCOUNTER_POST_SUMMON",E.POWER_TRICK="POWER_TRICK",E.HEAL_BLOCK="HEAL_BLOCK",E.TORMENT="TORMENT",E.TAUNT="TAUNT",E.IMPRISON="IMPRISON",E.SYRUP_BOMB="SYRUP_BOMB",E.ELECTRIFIED="ELECTRIFIED",E.TELEKINESIS="TELEKINESIS",E.COMMANDED="COMMANDED",E.GRUDGE="GRUDGE",E.PSYCHO_SHIFT="PSYCHO_SHIFT",E.ENDURE_TOKEN="ENDURE_TOKEN",E.POWDER="POWDER",E))(y||{}),Ve=(E=>(E[E.WEAKEST=0]="WEAKEST",E[E.WEAKER=1]="WEAKER",E[E.WEAK=2]="WEAK",E[E.AVERAGE=3]="AVERAGE",E[E.STRONG=4]="STRONG",E[E.STRONGER=5]="STRONGER",E))(Ve||{});/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function fR(E){return E<0?-1:E===0?0:1}N(fR,"signum");function FL(E,A,s){return(1-s)*E+s*A}N(FL,"lerp");function Z7(E,A,s){return s<E?E:s>A?A:s}N(Z7,"clampInt");function Wl(E,A,s){return s<E?E:s>A?A:s}N(Wl,"clampDouble");function X7(E){return E=E%360,E<0&&(E=E+360),E}N(X7,"sanitizeDegreesDouble");function U_(E,A){const s=E[0]*A[0][0]+E[1]*A[0][1]+E[2]*A[0][2],R=E[0]*A[1][0]+E[1]*A[1][1]+E[2]*A[1][2],a=E[0]*A[2][0]+E[1]*A[2][1]+E[2]*A[2][2];return[s,R,a]}N(U_,"matrixMultiply");/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const W6=[[.41233895,.35762064,.18051042],[.2126,.7152,.0722],[.01932141,.11916382,.95034478]],Q7=[[3.2413774792388685,-1.5376652402851851,-.49885366846268053],[-.9691452513005321,1.8758853451067872,.04156585616912061],[.05562093689691305,-.20395524564742123,1.0571799111220335]],G1=[95.047,100,108.883];function c1(E,A,s){return(255<<24|(E&255)<<16|(A&255)<<8|s&255)>>>0}N(c1,"argbFromRgb");function Gx(E){const A=Va(E[0]),s=Va(E[1]),R=Va(E[2]);return c1(A,s,R)}N(Gx,"argbFromLinrgb");function Y6(E){return E>>24&255}N(Y6,"alphaFromArgb");function GM(E){return E>>16&255}N(GM,"redFromArgb");function cM(E){return E>>8&255}N(cM,"greenFromArgb");function hM(E){return E&255}N(hM,"blueFromArgb");function y6(E,A,s){const R=Q7,a=R[0][0]*E+R[0][1]*A+R[0][2]*s,i=R[1][0]*E+R[1][1]*A+R[1][2]*s,r=R[2][0]*E+R[2][1]*A+R[2][2]*s,L=Va(a),o=Va(i),l=Va(r);return c1(L,o,l)}N(y6,"argbFromXyz");function J7(E){const A=Zn(GM(E)),s=Zn(cM(E)),R=Zn(hM(E));return U_([A,s,R],W6)}N(J7,"xyzFromArgb");function $7(E,A,s){const R=G1,a=(E+16)/116,i=A/500+a,r=a-s/200,L=Gl(i),o=Gl(a),l=Gl(r),C=L*R[0],M=o*R[1],D=l*R[2];return y6(C,M,D)}N($7,"argbFromLab");function z7(E){const A=Zn(GM(E)),s=Zn(cM(E)),R=Zn(hM(E)),a=W6,i=a[0][0]*A+a[0][1]*s+a[0][2]*R,r=a[1][0]*A+a[1][1]*s+a[1][2]*R,L=a[2][0]*A+a[2][1]*s+a[2][2]*R,o=G1,l=i/o[0],C=r/o[1],M=L/o[2],D=pL(l),_=pL(C),P=pL(M),h=116*_-16,H=500*(D-_),d=200*(_-P);return[h,H,d]}N(z7,"labFromArgb");function q7(E){const A=mI(E),s=Va(A);return c1(s,s,s)}N(q7,"argbFromLstar");function cx(E){const A=J7(E)[1];return 116*pL(A/100)-16}N(cx,"lstarFromArgb");function mI(E){return 100*Gl((E+16)/116)}N(mI,"yFromLstar");function u_(E){return pL(E/100)*116-16}N(u_,"lstarFromY");function Zn(E){const A=E/255;return A<=.040449936?A/12.92*100:Math.pow((A+.055)/1.055,2.4)*100}N(Zn,"linearized");function Va(E){const A=E/100;let s=0;return A<=.0031308?s=A*12.92:s=1.055*Math.pow(A,1/2.4)-.055,Z7(0,255,Math.round(s*255))}N(Va,"delinearized");function j7(){return G1}N(j7,"whitePointD65");function D_(E){const A=GM(E),s=cM(E),R=hM(E),a=Y6(E);return{r:A,g:s,b:R,a}}N(D_,"rgbaFromArgb");function js({r:E,g:A,b:s,a:R}){const a=el(E),i=el(A),r=el(s);return el(R)<<24|a<<16|i<<8|r}N(js,"argbFromRgba");function el(E){return E<0?0:E>255?255:E}N(el,"clampComponent");function pL(E){const A=.008856451679035631,s=24389/27;return E>A?Math.pow(E,1/3):(s*E+16)/116}N(pL,"labF");function Gl(E){const A=.008856451679035631,s=24389/27,R=E*E*E;return R>A?R:(116*E-16)/s}N(Gl,"labInvf");/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const XD=class XD{static make(A=j7(),s=200/Math.PI*mI(50)/100,R=50,a=2,i=!1){const r=A,L=r[0]*.401288+r[1]*.650173+r[2]*-.051461,o=r[0]*-.250268+r[1]*1.204414+r[2]*.045854,l=r[0]*-.002079+r[1]*.048952+r[2]*.953127,C=.8+a/10,M=C>=.9?FL(.59,.69,(C-.9)*10):FL(.525,.59,(C-.8)*10);let D=i?1:C*(1-1/3.6*Math.exp((-s-42)/92));D=D>1?1:D<0?0:D;const _=C,P=[D*(100/L)+1-D,D*(100/o)+1-D,D*(100/l)+1-D],h=1/(5*s+1),H=h*h*h*h,d=1-H,f=H*s+.1*d*d*Math.cbrt(5*s),B=mI(R)/A[1],F=1.48+Math.sqrt(B),W=.725/Math.pow(B,.2),b=W,x=[Math.pow(f*P[0]*L/100,.42),Math.pow(f*P[1]*o/100,.42),Math.pow(f*P[2]*l/100,.42)],$=[400*x[0]/(x[0]+27.13),400*x[1]/(x[1]+27.13),400*x[2]/(x[2]+27.13)],j=(2*$[0]+$[1]+.05*$[2])*W;return new XD(B,j,W,b,M,_,P,f,Math.pow(f,.25),F)}constructor(A,s,R,a,i,r,L,o,l,C){this.n=A,this.aw=s,this.nbb=R,this.ncb=a,this.c=i,this.nc=r,this.rgbD=L,this.fl=o,this.fLRoot=l,this.z=C}};N(XD,"ViewingConditions");let ZO=XD;ZO.DEFAULT=ZO.make();/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const rn=class rn{constructor(A,s,R,a,i,r,L,o,l){this.hue=A,this.chroma=s,this.j=R,this.q=a,this.m=i,this.s=r,this.jstar=L,this.astar=o,this.bstar=l}distance(A){const s=this.jstar-A.jstar,R=this.astar-A.astar,a=this.bstar-A.bstar,i=Math.sqrt(s*s+R*R+a*a);return 1.41*Math.pow(i,.63)}static fromInt(A){return rn.fromIntInViewingConditions(A,ZO.DEFAULT)}static fromIntInViewingConditions(A,s){const R=(A&16711680)>>16,a=(A&65280)>>8,i=A&255,r=Zn(R),L=Zn(a),o=Zn(i),l=.41233895*r+.35762064*L+.18051042*o,C=.2126*r+.7152*L+.0722*o,M=.01932141*r+.11916382*L+.95034478*o,D=.401288*l+.650173*C-.051461*M,_=-.250268*l+1.204414*C+.045854*M,P=-.002079*l+.048952*C+.953127*M,h=s.rgbD[0]*D,H=s.rgbD[1]*_,d=s.rgbD[2]*P,f=Math.pow(s.fl*Math.abs(h)/100,.42),B=Math.pow(s.fl*Math.abs(H)/100,.42),F=Math.pow(s.fl*Math.abs(d)/100,.42),W=fR(h)*400*f/(f+27.13),b=fR(H)*400*B/(B+27.13),x=fR(d)*400*F/(F+27.13),$=(11*W+-12*b+x)/11,j=(W+b-2*x)/9,z=(20*W+20*b+21*x)/20,se=(40*W+20*b+x)/20,q=Math.atan2(j,$)*180/Math.PI,p=q<0?q+360:q>=360?q-360:q,oe=p*Math.PI/180,me=se*s.nbb,Me=100*Math.pow(me/s.aw,s.c*s.z),We=4/s.c*Math.sqrt(Me/100)*(s.aw+4)*s.fLRoot,De=p<20.14?p+360:p,ie=.25*(Math.cos(De*Math.PI/180+2)+3.8),ee=5e4/13*ie*s.nc*s.ncb*Math.sqrt($*$+j*j)/(z+.305),Le=Math.pow(ee,.9)*Math.pow(1.64-Math.pow(.29,s.n),.73),ue=Le*Math.sqrt(Me/100),de=ue*s.fLRoot,Rt=50*Math.sqrt(Le*s.c/(s.aw+4)),Bt=(1+100*.007)*Me/(1+.007*Me),tt=1/.0228*Math.log(1+.0228*de),ht=tt*Math.cos(oe),eA=tt*Math.sin(oe);return new rn(p,ue,Me,We,de,Rt,Bt,ht,eA)}static fromJch(A,s,R){return rn.fromJchInViewingConditions(A,s,R,ZO.DEFAULT)}static fromJchInViewingConditions(A,s,R,a){const i=4/a.c*Math.sqrt(A/100)*(a.aw+4)*a.fLRoot,r=s*a.fLRoot,L=s/Math.sqrt(A/100),o=50*Math.sqrt(L*a.c/(a.aw+4)),l=R*Math.PI/180,C=(1+100*.007)*A/(1+.007*A),M=1/.0228*Math.log(1+.0228*r),D=M*Math.cos(l),_=M*Math.sin(l);return new rn(R,s,A,i,r,o,C,D,_)}static fromUcs(A,s,R){return rn.fromUcsInViewingConditions(A,s,R,ZO.DEFAULT)}static fromUcsInViewingConditions(A,s,R,a){const i=s,r=R,L=Math.sqrt(i*i+r*r),l=(Math.exp(L*.0228)-1)/.0228/a.fLRoot;let C=Math.atan2(r,i)*(180/Math.PI);C<0&&(C+=360);const M=A/(1-(A-100)*.007);return rn.fromJchInViewingConditions(M,l,C,a)}toInt(){return this.viewed(ZO.DEFAULT)}viewed(A){const s=this.chroma===0||this.j===0?0:this.chroma/Math.sqrt(this.j/100),R=Math.pow(s/Math.pow(1.64-Math.pow(.29,A.n),.73),1/.9),a=this.hue*Math.PI/180,i=.25*(Math.cos(a+2)+3.8),r=A.aw*Math.pow(this.j/100,1/A.c/A.z),L=i*(5e4/13)*A.nc*A.ncb,o=r/A.nbb,l=Math.sin(a),C=Math.cos(a),M=23*(o+.305)*R/(23*L+11*R*C+108*R*l),D=M*C,_=M*l,P=(460*o+451*D+288*_)/1403,h=(460*o-891*D-261*_)/1403,H=(460*o-220*D-6300*_)/1403,d=Math.max(0,27.13*Math.abs(P)/(400-Math.abs(P))),f=fR(P)*(100/A.fl)*Math.pow(d,1/.42),B=Math.max(0,27.13*Math.abs(h)/(400-Math.abs(h))),F=fR(h)*(100/A.fl)*Math.pow(B,1/.42),W=Math.max(0,27.13*Math.abs(H)/(400-Math.abs(H))),b=fR(H)*(100/A.fl)*Math.pow(W,1/.42),x=f/A.rgbD[0],$=F/A.rgbD[1],j=b/A.rgbD[2],z=1.86206786*x-1.01125463*$+.14918677*j,se=.38752654*x+.62144744*$-.00897398*j,Z=-.0158415*x-.03412294*$+1.04996444*j;return y6(z,se,Z)}static fromXyzInViewingConditions(A,s,R,a){const i=.401288*A+.650173*s-.051461*R,r=-.250268*A+1.204414*s+.045854*R,L=-.002079*A+.048952*s+.953127*R,o=a.rgbD[0]*i,l=a.rgbD[1]*r,C=a.rgbD[2]*L,M=Math.pow(a.fl*Math.abs(o)/100,.42),D=Math.pow(a.fl*Math.abs(l)/100,.42),_=Math.pow(a.fl*Math.abs(C)/100,.42),P=fR(o)*400*M/(M+27.13),h=fR(l)*400*D/(D+27.13),H=fR(C)*400*_/(_+27.13),d=(11*P+-12*h+H)/11,f=(P+h-2*H)/9,B=(20*P+20*h+21*H)/20,F=(40*P+20*h+H)/20,b=Math.atan2(f,d)*180/Math.PI,x=b<0?b+360:b>=360?b-360:b,$=x*Math.PI/180,j=F*a.nbb,z=100*Math.pow(j/a.aw,a.c*a.z),se=4/a.c*Math.sqrt(z/100)*(a.aw+4)*a.fLRoot,Z=x<20.14?x+360:x,q=1/4*(Math.cos(Z*Math.PI/180+2)+3.8),oe=5e4/13*q*a.nc*a.ncb*Math.sqrt(d*d+f*f)/(B+.305),me=Math.pow(oe,.9)*Math.pow(1.64-Math.pow(.29,a.n),.73),Me=me*Math.sqrt(z/100),We=Me*a.fLRoot,De=50*Math.sqrt(me*a.c/(a.aw+4)),ie=(1+100*.007)*z/(1+.007*z),Ae=Math.log(1+.0228*We)/.0228,ee=Ae*Math.cos($),Le=Ae*Math.sin($);return new rn(x,Me,z,se,We,De,ie,ee,Le)}xyzInViewingConditions(A){const s=this.chroma===0||this.j===0?0:this.chroma/Math.sqrt(this.j/100),R=Math.pow(s/Math.pow(1.64-Math.pow(.29,A.n),.73),1/.9),a=this.hue*Math.PI/180,i=.25*(Math.cos(a+2)+3.8),r=A.aw*Math.pow(this.j/100,1/A.c/A.z),L=i*(5e4/13)*A.nc*A.ncb,o=r/A.nbb,l=Math.sin(a),C=Math.cos(a),M=23*(o+.305)*R/(23*L+11*R*C+108*R*l),D=M*C,_=M*l,P=(460*o+451*D+288*_)/1403,h=(460*o-891*D-261*_)/1403,H=(460*o-220*D-6300*_)/1403,d=Math.max(0,27.13*Math.abs(P)/(400-Math.abs(P))),f=fR(P)*(100/A.fl)*Math.pow(d,1/.42),B=Math.max(0,27.13*Math.abs(h)/(400-Math.abs(h))),F=fR(h)*(100/A.fl)*Math.pow(B,1/.42),W=Math.max(0,27.13*Math.abs(H)/(400-Math.abs(H))),b=fR(H)*(100/A.fl)*Math.pow(W,1/.42),x=f/A.rgbD[0],$=F/A.rgbD[1],j=b/A.rgbD[2],z=1.86206786*x-1.01125463*$+.14918677*j,se=.38752654*x+.62144744*$-.00897398*j,Z=-.0158415*x-.03412294*$+1.04996444*j;return[z,se,Z]}};N(rn,"Cam16");let ha=rn;/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const jt=class jt{static sanitizeRadians(A){return(A+Math.PI*8)%(Math.PI*2)}static trueDelinearized(A){const s=A/100;let R=0;return s<=.0031308?R=s*12.92:R=1.055*Math.pow(s,1/2.4)-.055,R*255}static chromaticAdaptation(A){const s=Math.pow(Math.abs(A),.42);return fR(A)*400*s/(s+27.13)}static hueOf(A){const s=U_(A,jt.SCALED_DISCOUNT_FROM_LINRGB),R=jt.chromaticAdaptation(s[0]),a=jt.chromaticAdaptation(s[1]),i=jt.chromaticAdaptation(s[2]),r=(11*R+-12*a+i)/11,L=(R+a-2*i)/9;return Math.atan2(L,r)}static areInCyclicOrder(A,s,R){const a=jt.sanitizeRadians(s-A),i=jt.sanitizeRadians(R-A);return a<i}static intercept(A,s,R){return(s-A)/(R-A)}static lerpPoint(A,s,R){return[A[0]+(R[0]-A[0])*s,A[1]+(R[1]-A[1])*s,A[2]+(R[2]-A[2])*s]}static setCoordinate(A,s,R,a){const i=jt.intercept(A[a],s,R[a]);return jt.lerpPoint(A,i,R)}static isBounded(A){return 0<=A&&A<=100}static nthVertex(A,s){const R=jt.Y_FROM_LINRGB[0],a=jt.Y_FROM_LINRGB[1],i=jt.Y_FROM_LINRGB[2],r=s%4<=1?0:100,L=s%2===0?0:100;if(s<4){const o=r,l=L,C=(A-o*a-l*i)/R;return jt.isBounded(C)?[C,o,l]:[-1,-1,-1]}else if(s<8){const o=r,l=L,C=(A-l*R-o*i)/a;return jt.isBounded(C)?[l,C,o]:[-1,-1,-1]}else{const o=r,l=L,C=(A-o*R-l*a)/i;return jt.isBounded(C)?[o,l,C]:[-1,-1,-1]}}static bisectToSegment(A,s){let R=[-1,-1,-1],a=R,i=0,r=0,L=!1,o=!0;for(let l=0;l<12;l++){const C=jt.nthVertex(A,l);if(C[0]<0)continue;const M=jt.hueOf(C);if(!L){R=C,a=C,i=M,r=M,L=!0;continue}(o||jt.areInCyclicOrder(i,M,r))&&(o=!1,jt.areInCyclicOrder(i,s,M)?(a=C,r=M):(R=C,i=M))}return[R,a]}static midpoint(A,s){return[(A[0]+s[0])/2,(A[1]+s[1])/2,(A[2]+s[2])/2]}static criticalPlaneBelow(A){return Math.floor(A-.5)}static criticalPlaneAbove(A){return Math.ceil(A-.5)}static bisectToLimit(A,s){const R=jt.bisectToSegment(A,s);let a=R[0],i=jt.hueOf(a),r=R[1];for(let L=0;L<3;L++)if(a[L]!==r[L]){let o=-1,l=255;a[L]<r[L]?(o=jt.criticalPlaneBelow(jt.trueDelinearized(a[L])),l=jt.criticalPlaneAbove(jt.trueDelinearized(r[L]))):(o=jt.criticalPlaneAbove(jt.trueDelinearized(a[L])),l=jt.criticalPlaneBelow(jt.trueDelinearized(r[L])));for(let C=0;C<8&&!(Math.abs(l-o)<=1);C++){const M=Math.floor((o+l)/2),D=jt.CRITICAL_PLANES[M],_=jt.setCoordinate(a,D,r,L),P=jt.hueOf(_);jt.areInCyclicOrder(i,s,P)?(r=_,l=M):(a=_,i=P,o=M)}}return jt.midpoint(a,r)}static inverseChromaticAdaptation(A){const s=Math.abs(A),R=Math.max(0,27.13*s/(400-s));return fR(A)*Math.pow(R,1/.42)}static findResultByJ(A,s,R){let a=Math.sqrt(R)*11;const i=ZO.DEFAULT,r=1/Math.pow(1.64-Math.pow(.29,i.n),.73),o=.25*(Math.cos(A+2)+3.8)*(5e4/13)*i.nc*i.ncb,l=Math.sin(A),C=Math.cos(A);for(let M=0;M<5;M++){const D=a/100,_=s===0||a===0?0:s/Math.sqrt(D),P=Math.pow(_*r,1/.9),H=i.aw*Math.pow(D,1/i.c/i.z)/i.nbb,d=23*(H+.305)*P/(23*o+11*P*C+108*P*l),f=d*C,B=d*l,F=(460*H+451*f+288*B)/1403,W=(460*H-891*f-261*B)/1403,b=(460*H-220*f-6300*B)/1403,x=jt.inverseChromaticAdaptation(F),$=jt.inverseChromaticAdaptation(W),j=jt.inverseChromaticAdaptation(b),z=U_([x,$,j],jt.LINRGB_FROM_SCALED_DISCOUNT);if(z[0]<0||z[1]<0||z[2]<0)return 0;const se=jt.Y_FROM_LINRGB[0],Z=jt.Y_FROM_LINRGB[1],q=jt.Y_FROM_LINRGB[2],p=se*z[0]+Z*z[1]+q*z[2];if(p<=0)return 0;if(M===4||Math.abs(p-R)<.002)return z[0]>100.01||z[1]>100.01||z[2]>100.01?0:Gx(z);a=a-(p-R)*a/(2*p)}return 0}static solveToInt(A,s,R){if(s<1e-4||R<1e-4||R>99.9999)return q7(R);A=X7(A);const a=A/180*Math.PI,i=mI(R),r=jt.findResultByJ(a,s,i);if(r!==0)return r;const L=jt.bisectToLimit(i,a);return Gx(L)}static solveToCam(A,s,R){return ha.fromInt(jt.solveToInt(A,s,R))}};N(jt,"HctSolver");let Mn=jt;Mn.SCALED_DISCOUNT_FROM_LINRGB=[[.001200833568784504,.002389694492170889,.0002795742885861124],[.0005891086651375999,.0029785502573438758,.0003270666104008398],[.00010146692491640572,.0005364214359186694,.0032979401770712076]];Mn.LINRGB_FROM_SCALED_DISCOUNT=[[1373.2198709594231,-1100.4251190754821,-7.278681089101213],[-271.815969077903,559.6580465940733,-32.46047482791194],[1.9622899599665666,-57.173814538844006,308.7233197812385]];Mn.Y_FROM_LINRGB=[.2126,.7152,.0722];Mn.CRITICAL_PLANES=[.015176349177441876,.045529047532325624,.07588174588720938,.10623444424209313,.13658714259697685,.16693984095186062,.19729253930674434,.2276452376616281,.2579979360165119,.28835063437139563,.3188300904430532,.350925934958123,.3848314933096426,.42057480301049466,.458183274052838,.4976837250274023,.5391024159806381,.5824650784040898,.6277969426914107,.6751227633498623,.7244668422128921,.775853049866786,.829304845476233,.8848452951698498,.942497089126609,1.0022825574869039,1.0642236851973577,1.1283421258858297,1.1946592148522128,1.2631959812511864,1.3339731595349034,1.407011200216447,1.4823302800086415,1.5599503113873272,1.6398909516233677,1.7221716113234105,1.8068114625156377,1.8938294463134073,1.9832442801866852,2.075074464868551,2.1693382909216234,2.2660538449872063,2.36523901573795,2.4669114995532007,2.5710888059345764,2.6777882626779785,2.7870270208169257,2.898822059350997,3.0131901897720907,3.1301480604002863,3.2497121605402226,3.3718988244681087,3.4967242352587946,3.624204428461639,3.754355295633311,3.887192587735158,4.022731918402185,4.160988767090289,4.301978482107941,4.445716283538092,4.592217266055746,4.741496401646282,4.893568542229298,5.048448422192488,5.20615066083972,5.3666897647573375,5.5300801301023865,5.696336044816294,5.865471690767354,6.037501145825082,6.212438385869475,6.390297286737924,6.571091626112461,6.7548350853498045,6.941541251256611,7.131223617812143,7.323895587840543,7.5195704746346665,7.7182615035334345,7.919981813454504,8.124744458384042,8.332562408825165,8.543448553206703,8.757415699253682,8.974476575321063,9.194643831691977,9.417930041841839,9.644347703669503,9.873909240696694,10.106627003236781,10.342513269534024,10.58158024687427,10.8238400726681,11.069304815507364,11.317986476196008,11.569896988756009,11.825048221409341,12.083451977536606,12.345119996613247,12.610063955123938,12.878295467455942,13.149826086772048,13.42466730586372,13.702830557985108,13.984327217668513,14.269168601521828,14.55736596900856,14.848930523210871,15.143873411576273,15.44220572664832,15.743938506781891,16.04908273684337,16.35764934889634,16.66964922287304,16.985093187232053,17.30399201960269,17.62635644741625,17.95219714852476,18.281524751807332,18.614349837764564,18.95068293910138,19.290534541298456,19.633915083172692,19.98083495742689,20.331304511189067,20.685334046541502,21.042933821039977,21.404114048223256,21.76888489811322,22.137256497705877,22.50923893145328,22.884842241736916,23.264076429332462,23.6469514538663,24.033477234264016,24.42366364919083,24.817520537484558,25.21505769858089,25.61628489293138,26.021211842414342,26.429848230738664,26.842203703840827,27.258287870275353,27.678110301598522,28.10168053274597,28.529008062403893,28.96010235337422,29.39497283293396,29.83362889318845,30.276079891419332,30.722335150426627,31.172403958865512,31.62629557157785,32.08401920991837,32.54558406207592,33.010999283389665,33.4802739966603,33.953417292456834,34.430438229418264,34.911345834551085,35.39614910352207,35.88485700094671,36.37747846067349,36.87402238606382,37.37449765026789,37.87891309649659,38.38727753828926,38.89959975977785,39.41588851594697,39.93615253289054,40.460400508064545,40.98864111053629,41.520882981230194,42.05713473317016,42.597404951718396,43.141702194811224,43.6900349931913,44.24241185063697,44.798841244188324,45.35933162437017,45.92389141541209,46.49252901546552,47.065252796817916,47.64207110610409,48.22299226451468,48.808024568002054,49.3971762874833,49.9904556690408,50.587870934119984,51.189430279724725,51.79514187861014,52.40501387947288,53.0190544071392,53.637271562750364,54.259673423945976,54.88626804504493,55.517063457223934,56.15206766869424,56.79128866487574,57.43473440856916,58.08241284012621,58.734331877617365,59.39049941699807,60.05092333227251,60.715611475655585,61.38457167773311,62.057811747619894,62.7353394731159,63.417162620860914,64.10328893648692,64.79372614476921,65.48848194977529,66.18756403501224,66.89098006357258,67.59873767827808,68.31084450182222,69.02730813691093,69.74813616640164,70.47333615344107,71.20291564160104,71.93688215501312,72.67524319850172,73.41800625771542,74.16517879925733,74.9167682708136,75.67278210128072,76.43322770089146,77.1981124613393,77.96744375590167,78.74122893956174,79.51947534912904,80.30219030335869,81.08938110306934,81.88105503125999,82.67721935322541,83.4778813166706,84.28304815182372,85.09272707154808,85.90692527145302,86.72564993000343,87.54890820862819,88.3767072518277,89.2090541872801,90.04595612594655,90.88742016217518,91.73345337380438,92.58406282226491,93.43925555268066,94.29903859396902,95.16341895893969,96.03240364439274,96.9059996312159,97.78421388448044,98.6670533535366,99.55452497210776];/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const sr=class sr{static from(A,s,R){return new sr(Mn.solveToInt(A,s,R))}static fromInt(A){return new sr(A)}toInt(){return this.argb}get hue(){return this.internalHue}set hue(A){this.setInternalState(Mn.solveToInt(A,this.internalChroma,this.internalTone))}get chroma(){return this.internalChroma}set chroma(A){this.setInternalState(Mn.solveToInt(this.internalHue,A,this.internalTone))}get tone(){return this.internalTone}set tone(A){this.setInternalState(Mn.solveToInt(this.internalHue,this.internalChroma,A))}constructor(A){this.argb=A;const s=ha.fromInt(A);this.internalHue=s.hue,this.internalChroma=s.chroma,this.internalTone=cx(A),this.argb=A}setInternalState(A){const s=ha.fromInt(A);this.internalHue=s.hue,this.internalChroma=s.chroma,this.internalTone=cx(A),this.argb=A}inViewingConditions(A){const R=ha.fromInt(this.toInt()).xyzInViewingConditions(A),a=ha.fromXyzInViewingConditions(R[0],R[1],R[2],ZO.make());return sr.from(a.hue,a.chroma,u_(R[1]))}};N(sr,"Hct");let FT=sr;/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const cI=class cI{static ratioOfTones(A,s){return A=Wl(0,100,A),s=Wl(0,100,s),cI.ratioOfYs(mI(A),mI(s))}static ratioOfYs(A,s){const R=A>s?A:s,a=R===s?A:s;return(R+5)/(a+5)}static lighter(A,s){if(A<0||A>100)return-1;const R=mI(A),a=s*(R+5)-5,i=cI.ratioOfYs(a,R),r=Math.abs(i-s);if(i<s&&r>.04)return-1;const L=u_(a)+.4;return L<0||L>100?-1:L}static darker(A,s){if(A<0||A>100)return-1;const R=mI(A),a=(R+5)/s-5,i=cI.ratioOfYs(R,a),r=Math.abs(i-s);if(i<s&&r>.04)return-1;const L=u_(a)-.4;return L<0||L>100?-1:L}static lighterUnsafe(A,s){const R=cI.lighter(A,s);return R<0?100:R}static darkerUnsafe(A,s){const R=cI.darker(A,s);return R<0?0:R}};N(cI,"Contrast");let BR=cI;/**
 * @license
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const QD=class QD{static isDisliked(A){const s=Math.round(A.hue)>=90&&Math.round(A.hue)<=111,R=Math.round(A.chroma)>16,a=Math.round(A.tone)<65;return s&&R&&a}static fixIfDisliked(A){return QD.isDisliked(A)?FT.from(A.hue,A.chroma,70):A}};N(QD,"DislikeAnalyzer");let M_=QD;/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const rR=class rR{static fromPalette(A){return new rR(A.name??"",A.palette,A.tone,A.isBackground??!1,A.background,A.secondBackground,A.contrastCurve,A.toneDeltaPair)}constructor(A,s,R,a,i,r,L,o){if(this.name=A,this.palette=s,this.tone=R,this.isBackground=a,this.background=i,this.secondBackground=r,this.contrastCurve=L,this.toneDeltaPair=o,this.hctCache=new Map,!i&&r)throw new Error(`Color ${A} has secondBackgrounddefined, but background is not defined.`);if(!i&&L)throw new Error(`Color ${A} has contrastCurvedefined, but background is not defined.`);if(i&&!L)throw new Error(`Color ${A} has backgrounddefined, but contrastCurve is not defined.`)}getArgb(A){return this.getHct(A).toInt()}getHct(A){const s=this.hctCache.get(A);if(s!=null)return s;const R=this.getTone(A),a=this.palette(A).getHct(R);return this.hctCache.size>4&&this.hctCache.clear(),this.hctCache.set(A,a),a}getTone(A){const s=A.contrastLevel<0;if(this.toneDeltaPair){const R=this.toneDeltaPair(A),a=R.roleA,i=R.roleB,r=R.delta,L=R.polarity,o=R.stayTogether,C=this.background(A).getTone(A),M=L==="nearer"||L==="lighter"&&!A.isDark||L==="darker"&&A.isDark,D=M?a:i,_=M?i:a,P=this.name===D.name,h=A.isDark?1:-1,H=D.contrastCurve.getContrast(A.contrastLevel),d=_.contrastCurve.getContrast(A.contrastLevel),f=D.tone(A);let B=BR.ratioOfTones(C,f)>=H?f:rR.foregroundTone(C,H);const F=_.tone(A);let W=BR.ratioOfTones(C,F)>=d?F:rR.foregroundTone(C,d);return s&&(B=rR.foregroundTone(C,H),W=rR.foregroundTone(C,d)),(W-B)*h>=r||(W=Wl(0,100,B+r*h),(W-B)*h>=r||(B=Wl(0,100,W-r*h))),50<=B&&B<60?h>0?(B=60,W=Math.max(W,B+r*h)):(B=49,W=Math.min(W,B+r*h)):50<=W&&W<60&&(o?h>0?(B=60,W=Math.max(W,B+r*h)):(B=49,W=Math.min(W,B+r*h)):h>0?W=60:W=49),P?B:W}else{let R=this.tone(A);if(this.background==null)return R;const a=this.background(A).getTone(A),i=this.contrastCurve.getContrast(A.contrastLevel);if(BR.ratioOfTones(a,R)>=i||(R=rR.foregroundTone(a,i)),s&&(R=rR.foregroundTone(a,i)),this.isBackground&&50<=R&&R<60&&(BR.ratioOfTones(49,a)>=i?R=49:R=60),this.secondBackground){const[r,L]=[this.background,this.secondBackground],[o,l]=[r(A).getTone(A),L(A).getTone(A)],[C,M]=[Math.max(o,l),Math.min(o,l)];if(BR.ratioOfTones(C,R)>=i&&BR.ratioOfTones(M,R)>=i)return R;const D=BR.lighter(C,i),_=BR.darker(M,i),P=[];return D!==-1&&P.push(D),_!==-1&&P.push(_),rR.tonePrefersLightForeground(o)||rR.tonePrefersLightForeground(l)?D<0?100:D:P.length===1?P[0]:_<0?0:_}return R}}static foregroundTone(A,s){const R=BR.lighterUnsafe(A,s),a=BR.darkerUnsafe(A,s),i=BR.ratioOfTones(R,A),r=BR.ratioOfTones(a,A);if(rR.tonePrefersLightForeground(A)){const o=Math.abs(i-r)<.1&&i<s&&r<s;return i>=s||i>=r||o?R:a}else return r>=s||r>=i?a:R}static tonePrefersLightForeground(A){return Math.round(A)<60}static toneAllowsLightForeground(A){return Math.round(A)<=49}static enableLightForeground(A){return rR.tonePrefersLightForeground(A)&&!rR.toneAllowsLightForeground(A)?49:A}};N(rR,"DynamicColor");let mt=rR;/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var pT;(function(E){E[E.MONOCHROME=0]="MONOCHROME",E[E.NEUTRAL=1]="NEUTRAL",E[E.TONAL_SPOT=2]="TONAL_SPOT",E[E.VIBRANT=3]="VIBRANT",E[E.EXPRESSIVE=4]="EXPRESSIVE",E[E.FIDELITY=5]="FIDELITY",E[E.CONTENT=6]="CONTENT",E[E.RAINBOW=7]="RAINBOW",E[E.FRUIT_SALAD=8]="FRUIT_SALAD"})(pT||(pT={}));/**
 * @license
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const If=class If{constructor(A,s,R,a){this.low=A,this.normal=s,this.medium=R,this.high=a}getContrast(A){return A<=-1?this.low:A<0?FL(this.low,this.normal,(A- -1)/1):A<.5?FL(this.normal,this.medium,(A-0)/.5):A<1?FL(this.medium,this.high,(A-.5)/.5):this.high}};N(If,"ContrastCurve");let CA=If;/**
 * @license
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const af=class af{constructor(A,s,R,a,i){this.roleA=A,this.roleB=s,this.delta=R,this.polarity=a,this.stayTogether=i}};N(af,"ToneDeltaPair");let ER=af;/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function oL(E){return E.variant===pT.FIDELITY||E.variant===pT.CONTENT}N(oL,"isFidelity");function bE(E){return E.variant===pT.MONOCHROME}N(bE,"isMonochrome");function ek(E,A,s,R){let a=s,i=FT.from(E,A,s);if(i.chroma<A){let r=i.chroma;for(;i.chroma<A;){a+=R?-1:1;const L=FT.from(E,A,a);if(r>L.chroma||Math.abs(L.chroma-A)<.4)break;const o=Math.abs(L.chroma-A),l=Math.abs(i.chroma-A);o<l&&(i=L),r=Math.max(r,L.chroma)}}return a}N(ek,"findDesiredChromaByTone");function tk(E){return ZO.make(void 0,void 0,E.isDark?30:80,void 0,void 0)}N(tk,"viewingConditionsForAlbers");function h1(E,A){const s=E.inViewingConditions(tk(A));return mt.tonePrefersLightForeground(E.tone)&&!mt.toneAllowsLightForeground(s.tone)?mt.enableLightForeground(E.tone):mt.enableLightForeground(s.tone)}N(h1,"performAlbers");const uN=class uN{static highestSurface(A){return A.isDark?uN.surfaceBright:uN.surfaceDim}};N(uN,"MaterialDynamicColors");let xe=uN;xe.contentAccentToneDelta=15;xe.primaryPaletteKeyColor=mt.fromPalette({name:"primary_palette_key_color",palette:N(E=>E.primaryPalette,"palette"),tone:N(E=>E.primaryPalette.keyColor.tone,"tone")});xe.secondaryPaletteKeyColor=mt.fromPalette({name:"secondary_palette_key_color",palette:N(E=>E.secondaryPalette,"palette"),tone:N(E=>E.secondaryPalette.keyColor.tone,"tone")});xe.tertiaryPaletteKeyColor=mt.fromPalette({name:"tertiary_palette_key_color",palette:N(E=>E.tertiaryPalette,"palette"),tone:N(E=>E.tertiaryPalette.keyColor.tone,"tone")});xe.neutralPaletteKeyColor=mt.fromPalette({name:"neutral_palette_key_color",palette:N(E=>E.neutralPalette,"palette"),tone:N(E=>E.neutralPalette.keyColor.tone,"tone")});xe.neutralVariantPaletteKeyColor=mt.fromPalette({name:"neutral_variant_palette_key_color",palette:N(E=>E.neutralVariantPalette,"palette"),tone:N(E=>E.neutralVariantPalette.keyColor.tone,"tone")});xe.background=mt.fromPalette({name:"background",palette:N(E=>E.neutralPalette,"palette"),tone:N(E=>E.isDark?6:98,"tone"),isBackground:!0});xe.onBackground=mt.fromPalette({name:"on_background",palette:N(E=>E.neutralPalette,"palette"),tone:N(E=>E.isDark?90:10,"tone"),background:N(E=>xe.background,"background"),contrastCurve:new CA(3,3,4.5,7)});xe.surface=mt.fromPalette({name:"surface",palette:N(E=>E.neutralPalette,"palette"),tone:N(E=>E.isDark?6:98,"tone"),isBackground:!0});xe.surfaceDim=mt.fromPalette({name:"surface_dim",palette:N(E=>E.neutralPalette,"palette"),tone:N(E=>E.isDark?6:87,"tone"),isBackground:!0});xe.surfaceBright=mt.fromPalette({name:"surface_bright",palette:N(E=>E.neutralPalette,"palette"),tone:N(E=>E.isDark?24:98,"tone"),isBackground:!0});xe.surfaceContainerLowest=mt.fromPalette({name:"surface_container_lowest",palette:N(E=>E.neutralPalette,"palette"),tone:N(E=>E.isDark?4:100,"tone"),isBackground:!0});xe.surfaceContainerLow=mt.fromPalette({name:"surface_container_low",palette:N(E=>E.neutralPalette,"palette"),tone:N(E=>E.isDark?10:96,"tone"),isBackground:!0});xe.surfaceContainer=mt.fromPalette({name:"surface_container",palette:N(E=>E.neutralPalette,"palette"),tone:N(E=>E.isDark?12:94,"tone"),isBackground:!0});xe.surfaceContainerHigh=mt.fromPalette({name:"surface_container_high",palette:N(E=>E.neutralPalette,"palette"),tone:N(E=>E.isDark?17:92,"tone"),isBackground:!0});xe.surfaceContainerHighest=mt.fromPalette({name:"surface_container_highest",palette:N(E=>E.neutralPalette,"palette"),tone:N(E=>E.isDark?22:90,"tone"),isBackground:!0});xe.onSurface=mt.fromPalette({name:"on_surface",palette:N(E=>E.neutralPalette,"palette"),tone:N(E=>E.isDark?90:10,"tone"),background:N(E=>xe.highestSurface(E),"background"),contrastCurve:new CA(4.5,7,11,21)});xe.surfaceVariant=mt.fromPalette({name:"surface_variant",palette:N(E=>E.neutralVariantPalette,"palette"),tone:N(E=>E.isDark?30:90,"tone"),isBackground:!0});xe.onSurfaceVariant=mt.fromPalette({name:"on_surface_variant",palette:N(E=>E.neutralVariantPalette,"palette"),tone:N(E=>E.isDark?80:30,"tone"),background:N(E=>xe.highestSurface(E),"background"),contrastCurve:new CA(3,4.5,7,11)});xe.inverseSurface=mt.fromPalette({name:"inverse_surface",palette:N(E=>E.neutralPalette,"palette"),tone:N(E=>E.isDark?90:20,"tone")});xe.inverseOnSurface=mt.fromPalette({name:"inverse_on_surface",palette:N(E=>E.neutralPalette,"palette"),tone:N(E=>E.isDark?20:95,"tone"),background:N(E=>xe.inverseSurface,"background"),contrastCurve:new CA(4.5,7,11,21)});xe.outline=mt.fromPalette({name:"outline",palette:N(E=>E.neutralVariantPalette,"palette"),tone:N(E=>E.isDark?60:50,"tone"),background:N(E=>xe.highestSurface(E),"background"),contrastCurve:new CA(1.5,3,4.5,7)});xe.outlineVariant=mt.fromPalette({name:"outline_variant",palette:N(E=>E.neutralVariantPalette,"palette"),tone:N(E=>E.isDark?30:80,"tone"),background:N(E=>xe.highestSurface(E),"background"),contrastCurve:new CA(1,1,3,7)});xe.shadow=mt.fromPalette({name:"shadow",palette:N(E=>E.neutralPalette,"palette"),tone:N(E=>0,"tone")});xe.scrim=mt.fromPalette({name:"scrim",palette:N(E=>E.neutralPalette,"palette"),tone:N(E=>0,"tone")});xe.surfaceTint=mt.fromPalette({name:"surface_tint",palette:N(E=>E.primaryPalette,"palette"),tone:N(E=>E.isDark?80:40,"tone"),isBackground:!0});xe.primary=mt.fromPalette({name:"primary",palette:N(E=>E.primaryPalette,"palette"),tone:N(E=>bE(E)?E.isDark?100:0:E.isDark?80:40,"tone"),isBackground:!0,background:N(E=>xe.highestSurface(E),"background"),contrastCurve:new CA(3,4.5,7,11),toneDeltaPair:N(E=>new ER(xe.primaryContainer,xe.primary,15,"nearer",!1),"toneDeltaPair")});xe.onPrimary=mt.fromPalette({name:"on_primary",palette:N(E=>E.primaryPalette,"palette"),tone:N(E=>bE(E)?E.isDark?10:90:E.isDark?20:100,"tone"),background:N(E=>xe.primary,"background"),contrastCurve:new CA(4.5,7,11,21)});xe.primaryContainer=mt.fromPalette({name:"primary_container",palette:N(E=>E.primaryPalette,"palette"),tone:N(E=>oL(E)?h1(E.sourceColorHct,E):bE(E)?E.isDark?85:25:E.isDark?30:90,"tone"),isBackground:!0,background:N(E=>xe.highestSurface(E),"background"),contrastCurve:new CA(1,1,3,7),toneDeltaPair:N(E=>new ER(xe.primaryContainer,xe.primary,15,"nearer",!1),"toneDeltaPair")});xe.onPrimaryContainer=mt.fromPalette({name:"on_primary_container",palette:N(E=>E.primaryPalette,"palette"),tone:N(E=>oL(E)?mt.foregroundTone(xe.primaryContainer.tone(E),4.5):bE(E)?E.isDark?0:100:E.isDark?90:10,"tone"),background:N(E=>xe.primaryContainer,"background"),contrastCurve:new CA(4.5,7,11,21)});xe.inversePrimary=mt.fromPalette({name:"inverse_primary",palette:N(E=>E.primaryPalette,"palette"),tone:N(E=>E.isDark?40:80,"tone"),background:N(E=>xe.inverseSurface,"background"),contrastCurve:new CA(3,4.5,7,11)});xe.secondary=mt.fromPalette({name:"secondary",palette:N(E=>E.secondaryPalette,"palette"),tone:N(E=>E.isDark?80:40,"tone"),isBackground:!0,background:N(E=>xe.highestSurface(E),"background"),contrastCurve:new CA(3,4.5,7,11),toneDeltaPair:N(E=>new ER(xe.secondaryContainer,xe.secondary,15,"nearer",!1),"toneDeltaPair")});xe.onSecondary=mt.fromPalette({name:"on_secondary",palette:N(E=>E.secondaryPalette,"palette"),tone:N(E=>bE(E)?E.isDark?10:100:E.isDark?20:100,"tone"),background:N(E=>xe.secondary,"background"),contrastCurve:new CA(4.5,7,11,21)});xe.secondaryContainer=mt.fromPalette({name:"secondary_container",palette:N(E=>E.secondaryPalette,"palette"),tone:N(E=>{const A=E.isDark?30:90;if(bE(E))return E.isDark?30:85;if(!oL(E))return A;let s=ek(E.secondaryPalette.hue,E.secondaryPalette.chroma,A,!E.isDark);return s=h1(E.secondaryPalette.getHct(s),E),s},"tone"),isBackground:!0,background:N(E=>xe.highestSurface(E),"background"),contrastCurve:new CA(1,1,3,7),toneDeltaPair:N(E=>new ER(xe.secondaryContainer,xe.secondary,15,"nearer",!1),"toneDeltaPair")});xe.onSecondaryContainer=mt.fromPalette({name:"on_secondary_container",palette:N(E=>E.secondaryPalette,"palette"),tone:N(E=>oL(E)?mt.foregroundTone(xe.secondaryContainer.tone(E),4.5):E.isDark?90:10,"tone"),background:N(E=>xe.secondaryContainer,"background"),contrastCurve:new CA(4.5,7,11,21)});xe.tertiary=mt.fromPalette({name:"tertiary",palette:N(E=>E.tertiaryPalette,"palette"),tone:N(E=>bE(E)?E.isDark?90:25:E.isDark?80:40,"tone"),isBackground:!0,background:N(E=>xe.highestSurface(E),"background"),contrastCurve:new CA(3,4.5,7,11),toneDeltaPair:N(E=>new ER(xe.tertiaryContainer,xe.tertiary,15,"nearer",!1),"toneDeltaPair")});xe.onTertiary=mt.fromPalette({name:"on_tertiary",palette:N(E=>E.tertiaryPalette,"palette"),tone:N(E=>bE(E)?E.isDark?10:90:E.isDark?20:100,"tone"),background:N(E=>xe.tertiary,"background"),contrastCurve:new CA(4.5,7,11,21)});xe.tertiaryContainer=mt.fromPalette({name:"tertiary_container",palette:N(E=>E.tertiaryPalette,"palette"),tone:N(E=>{if(bE(E))return E.isDark?60:49;if(!oL(E))return E.isDark?30:90;const A=h1(E.tertiaryPalette.getHct(E.sourceColorHct.tone),E),s=E.tertiaryPalette.getHct(A);return M_.fixIfDisliked(s).tone},"tone"),isBackground:!0,background:N(E=>xe.highestSurface(E),"background"),contrastCurve:new CA(1,1,3,7),toneDeltaPair:N(E=>new ER(xe.tertiaryContainer,xe.tertiary,15,"nearer",!1),"toneDeltaPair")});xe.onTertiaryContainer=mt.fromPalette({name:"on_tertiary_container",palette:N(E=>E.tertiaryPalette,"palette"),tone:N(E=>bE(E)?E.isDark?0:100:oL(E)?mt.foregroundTone(xe.tertiaryContainer.tone(E),4.5):E.isDark?90:10,"tone"),background:N(E=>xe.tertiaryContainer,"background"),contrastCurve:new CA(4.5,7,11,21)});xe.error=mt.fromPalette({name:"error",palette:N(E=>E.errorPalette,"palette"),tone:N(E=>E.isDark?80:40,"tone"),isBackground:!0,background:N(E=>xe.highestSurface(E),"background"),contrastCurve:new CA(3,4.5,7,11),toneDeltaPair:N(E=>new ER(xe.errorContainer,xe.error,15,"nearer",!1),"toneDeltaPair")});xe.onError=mt.fromPalette({name:"on_error",palette:N(E=>E.errorPalette,"palette"),tone:N(E=>E.isDark?20:100,"tone"),background:N(E=>xe.error,"background"),contrastCurve:new CA(4.5,7,11,21)});xe.errorContainer=mt.fromPalette({name:"error_container",palette:N(E=>E.errorPalette,"palette"),tone:N(E=>E.isDark?30:90,"tone"),isBackground:!0,background:N(E=>xe.highestSurface(E),"background"),contrastCurve:new CA(1,1,3,7),toneDeltaPair:N(E=>new ER(xe.errorContainer,xe.error,15,"nearer",!1),"toneDeltaPair")});xe.onErrorContainer=mt.fromPalette({name:"on_error_container",palette:N(E=>E.errorPalette,"palette"),tone:N(E=>E.isDark?90:10,"tone"),background:N(E=>xe.errorContainer,"background"),contrastCurve:new CA(4.5,7,11,21)});xe.primaryFixed=mt.fromPalette({name:"primary_fixed",palette:N(E=>E.primaryPalette,"palette"),tone:N(E=>bE(E)?40:90,"tone"),isBackground:!0,background:N(E=>xe.highestSurface(E),"background"),contrastCurve:new CA(1,1,3,7),toneDeltaPair:N(E=>new ER(xe.primaryFixed,xe.primaryFixedDim,10,"lighter",!0),"toneDeltaPair")});xe.primaryFixedDim=mt.fromPalette({name:"primary_fixed_dim",palette:N(E=>E.primaryPalette,"palette"),tone:N(E=>bE(E)?30:80,"tone"),isBackground:!0,background:N(E=>xe.highestSurface(E),"background"),contrastCurve:new CA(1,1,3,7),toneDeltaPair:N(E=>new ER(xe.primaryFixed,xe.primaryFixedDim,10,"lighter",!0),"toneDeltaPair")});xe.onPrimaryFixed=mt.fromPalette({name:"on_primary_fixed",palette:N(E=>E.primaryPalette,"palette"),tone:N(E=>bE(E)?100:10,"tone"),background:N(E=>xe.primaryFixedDim,"background"),secondBackground:N(E=>xe.primaryFixed,"secondBackground"),contrastCurve:new CA(4.5,7,11,21)});xe.onPrimaryFixedVariant=mt.fromPalette({name:"on_primary_fixed_variant",palette:N(E=>E.primaryPalette,"palette"),tone:N(E=>bE(E)?90:30,"tone"),background:N(E=>xe.primaryFixedDim,"background"),secondBackground:N(E=>xe.primaryFixed,"secondBackground"),contrastCurve:new CA(3,4.5,7,11)});xe.secondaryFixed=mt.fromPalette({name:"secondary_fixed",palette:N(E=>E.secondaryPalette,"palette"),tone:N(E=>bE(E)?80:90,"tone"),isBackground:!0,background:N(E=>xe.highestSurface(E),"background"),contrastCurve:new CA(1,1,3,7),toneDeltaPair:N(E=>new ER(xe.secondaryFixed,xe.secondaryFixedDim,10,"lighter",!0),"toneDeltaPair")});xe.secondaryFixedDim=mt.fromPalette({name:"secondary_fixed_dim",palette:N(E=>E.secondaryPalette,"palette"),tone:N(E=>bE(E)?70:80,"tone"),isBackground:!0,background:N(E=>xe.highestSurface(E),"background"),contrastCurve:new CA(1,1,3,7),toneDeltaPair:N(E=>new ER(xe.secondaryFixed,xe.secondaryFixedDim,10,"lighter",!0),"toneDeltaPair")});xe.onSecondaryFixed=mt.fromPalette({name:"on_secondary_fixed",palette:N(E=>E.secondaryPalette,"palette"),tone:N(E=>10,"tone"),background:N(E=>xe.secondaryFixedDim,"background"),secondBackground:N(E=>xe.secondaryFixed,"secondBackground"),contrastCurve:new CA(4.5,7,11,21)});xe.onSecondaryFixedVariant=mt.fromPalette({name:"on_secondary_fixed_variant",palette:N(E=>E.secondaryPalette,"palette"),tone:N(E=>bE(E)?25:30,"tone"),background:N(E=>xe.secondaryFixedDim,"background"),secondBackground:N(E=>xe.secondaryFixed,"secondBackground"),contrastCurve:new CA(3,4.5,7,11)});xe.tertiaryFixed=mt.fromPalette({name:"tertiary_fixed",palette:N(E=>E.tertiaryPalette,"palette"),tone:N(E=>bE(E)?40:90,"tone"),isBackground:!0,background:N(E=>xe.highestSurface(E),"background"),contrastCurve:new CA(1,1,3,7),toneDeltaPair:N(E=>new ER(xe.tertiaryFixed,xe.tertiaryFixedDim,10,"lighter",!0),"toneDeltaPair")});xe.tertiaryFixedDim=mt.fromPalette({name:"tertiary_fixed_dim",palette:N(E=>E.tertiaryPalette,"palette"),tone:N(E=>bE(E)?30:80,"tone"),isBackground:!0,background:N(E=>xe.highestSurface(E),"background"),contrastCurve:new CA(1,1,3,7),toneDeltaPair:N(E=>new ER(xe.tertiaryFixed,xe.tertiaryFixedDim,10,"lighter",!0),"toneDeltaPair")});xe.onTertiaryFixed=mt.fromPalette({name:"on_tertiary_fixed",palette:N(E=>E.tertiaryPalette,"palette"),tone:N(E=>bE(E)?100:10,"tone"),background:N(E=>xe.tertiaryFixedDim,"background"),secondBackground:N(E=>xe.tertiaryFixed,"secondBackground"),contrastCurve:new CA(4.5,7,11,21)});xe.onTertiaryFixedVariant=mt.fromPalette({name:"on_tertiary_fixed_variant",palette:N(E=>E.tertiaryPalette,"palette"),tone:N(E=>bE(E)?90:30,"tone"),background:N(E=>xe.tertiaryFixedDim,"background"),secondBackground:N(E=>xe.tertiaryFixed,"secondBackground"),contrastCurve:new CA(3,4.5,7,11)});/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const rf=class rf{fromInt(A){return z7(A)}toInt(A){return $7(A[0],A[1],A[2])}distance(A,s){const R=A[0]-s[0],a=A[1]-s[1],i=A[2]-s[2];return R*R+a*a+i*i}};N(rf,"LabPointProvider");let __=rf;/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Ak=10,Ek=3,Lf=class Lf{static quantize(A,s,R){const a=new Map,i=new Array,r=new Array,L=new __;let o=0;for(let f=0;f<A.length;f++){const B=A[f],F=a.get(B);F===void 0?(o++,i.push(L.fromInt(B)),r.push(B),a.set(B,1)):a.set(B,F+1)}const l=new Array;for(let f=0;f<o;f++){const B=r[f],F=a.get(B);F!==void 0&&(l[f]=F)}let C=Math.min(R,o);s.length>0&&(C=Math.min(C,s.length));const M=new Array;for(let f=0;f<s.length;f++)M.push(L.fromInt(s[f]));const D=C-M.length;if(s.length===0&&D>0)for(let f=0;f<D;f++){const B=Math.random()*100,F=Math.random()*201+-100,W=Math.random()*201+-100;M.push(new Array(B,F,W))}const _=new Array;for(let f=0;f<o;f++)_.push(Math.floor(Math.random()*C));const P=new Array;for(let f=0;f<C;f++){P.push(new Array);for(let B=0;B<C;B++)P[f].push(0)}const h=new Array;for(let f=0;f<C;f++){h.push(new Array);for(let B=0;B<C;B++)h[f].push(new G_)}const H=new Array;for(let f=0;f<C;f++)H.push(0);for(let f=0;f<Ak;f++){for(let x=0;x<C;x++){for(let $=x+1;$<C;$++){const j=L.distance(M[x],M[$]);h[$][x].distance=j,h[$][x].index=x,h[x][$].distance=j,h[x][$].index=$}h[x].sort();for(let $=0;$<C;$++)P[x][$]=h[x][$].index}let B=0;for(let x=0;x<o;x++){const $=i[x],j=_[x],z=M[j],se=L.distance($,z);let Z=se,q=-1;for(let p=0;p<C;p++){if(h[j][p].distance>=4*se)continue;const oe=L.distance($,M[p]);oe<Z&&(Z=oe,q=p)}q!==-1&&Math.abs(Math.sqrt(Z)-Math.sqrt(se))>Ek&&(B++,_[x]=q)}if(B===0&&f!==0)break;const F=new Array(C).fill(0),W=new Array(C).fill(0),b=new Array(C).fill(0);for(let x=0;x<C;x++)H[x]=0;for(let x=0;x<o;x++){const $=_[x],j=i[x],z=l[x];H[$]+=z,F[$]+=j[0]*z,W[$]+=j[1]*z,b[$]+=j[2]*z}for(let x=0;x<C;x++){const $=H[x];if($===0){M[x]=[0,0,0];continue}const j=F[x]/$,z=W[x]/$,se=b[x]/$;M[x]=[j,z,se]}}const d=new Map;for(let f=0;f<C;f++){const B=H[f];if(B===0)continue;const F=L.toInt(M[f]);d.has(F)||d.set(F,B)}return d}};N(Lf,"QuantizerWsmeans");let P_=Lf;const Nf=class Nf{constructor(){this.distance=-1,this.index=-1}};N(Nf,"DistanceAndIndex");let G_=Nf;/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Tf=class Tf{static quantize(A){const s=new Map;for(let R=0;R<A.length;R++){const a=A[R];Y6(a)<255||s.set(a,(s.get(a)??0)+1)}return s}};N(Tf,"QuantizerMap");let c_=Tf;/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const tl=5,BO=33,UL=35937,sR={RED:"red",GREEN:"green",BLUE:"blue"},Sf=class Sf{constructor(A=[],s=[],R=[],a=[],i=[],r=[]){this.weights=A,this.momentsR=s,this.momentsG=R,this.momentsB=a,this.moments=i,this.cubes=r}quantize(A,s){this.constructHistogram(A),this.computeMoments();const R=this.createBoxes(s);return this.createResult(R.resultCount)}constructHistogram(A){this.weights=Array.from({length:UL}).fill(0),this.momentsR=Array.from({length:UL}).fill(0),this.momentsG=Array.from({length:UL}).fill(0),this.momentsB=Array.from({length:UL}).fill(0),this.moments=Array.from({length:UL}).fill(0);const s=c_.quantize(A);for(const[R,a]of s.entries()){const i=GM(R),r=cM(R),L=hM(R),o=8-tl,l=(i>>o)+1,C=(r>>o)+1,M=(L>>o)+1,D=this.getIndex(l,C,M);this.weights[D]=(this.weights[D]??0)+a,this.momentsR[D]+=a*i,this.momentsG[D]+=a*r,this.momentsB[D]+=a*L,this.moments[D]+=a*(i*i+r*r+L*L)}}computeMoments(){for(let A=1;A<BO;A++){const s=Array.from({length:BO}).fill(0),R=Array.from({length:BO}).fill(0),a=Array.from({length:BO}).fill(0),i=Array.from({length:BO}).fill(0),r=Array.from({length:BO}).fill(0);for(let L=1;L<BO;L++){let o=0,l=0,C=0,M=0,D=0;for(let _=1;_<BO;_++){const P=this.getIndex(A,L,_);o+=this.weights[P],l+=this.momentsR[P],C+=this.momentsG[P],M+=this.momentsB[P],D+=this.moments[P],s[_]+=o,R[_]+=l,a[_]+=C,i[_]+=M,r[_]+=D;const h=this.getIndex(A-1,L,_);this.weights[P]=this.weights[h]+s[_],this.momentsR[P]=this.momentsR[h]+R[_],this.momentsG[P]=this.momentsG[h]+a[_],this.momentsB[P]=this.momentsB[h]+i[_],this.moments[P]=this.moments[h]+r[_]}}}}createBoxes(A){this.cubes=Array.from({length:A}).fill(0).map(()=>new H_);const s=Array.from({length:A}).fill(0);this.cubes[0].r0=0,this.cubes[0].g0=0,this.cubes[0].b0=0,this.cubes[0].r1=BO-1,this.cubes[0].g1=BO-1,this.cubes[0].b1=BO-1;let R=A,a=0;for(let i=1;i<A;i++){this.cut(this.cubes[a],this.cubes[i])?(s[a]=this.cubes[a].vol>1?this.variance(this.cubes[a]):0,s[i]=this.cubes[i].vol>1?this.variance(this.cubes[i]):0):(s[a]=0,i--),a=0;let r=s[0];for(let L=1;L<=i;L++)s[L]>r&&(r=s[L],a=L);if(r<=0){R=i+1;break}}return new d_(A,R)}createResult(A){const s=[];for(let R=0;R<A;++R){const a=this.cubes[R],i=this.volume(a,this.weights);if(i>0){const r=Math.round(this.volume(a,this.momentsR)/i),L=Math.round(this.volume(a,this.momentsG)/i),o=Math.round(this.volume(a,this.momentsB)/i),l=255<<24|(r&255)<<16|(L&255)<<8|o&255;s.push(l)}}return s}variance(A){const s=this.volume(A,this.momentsR),R=this.volume(A,this.momentsG),a=this.volume(A,this.momentsB),i=this.moments[this.getIndex(A.r1,A.g1,A.b1)]-this.moments[this.getIndex(A.r1,A.g1,A.b0)]-this.moments[this.getIndex(A.r1,A.g0,A.b1)]+this.moments[this.getIndex(A.r1,A.g0,A.b0)]-this.moments[this.getIndex(A.r0,A.g1,A.b1)]+this.moments[this.getIndex(A.r0,A.g1,A.b0)]+this.moments[this.getIndex(A.r0,A.g0,A.b1)]-this.moments[this.getIndex(A.r0,A.g0,A.b0)],r=s*s+R*R+a*a,L=this.volume(A,this.weights);return i-r/L}cut(A,s){const R=this.volume(A,this.momentsR),a=this.volume(A,this.momentsG),i=this.volume(A,this.momentsB),r=this.volume(A,this.weights),L=this.maximize(A,sR.RED,A.r0+1,A.r1,R,a,i,r),o=this.maximize(A,sR.GREEN,A.g0+1,A.g1,R,a,i,r),l=this.maximize(A,sR.BLUE,A.b0+1,A.b1,R,a,i,r);let C;const M=L.maximum,D=o.maximum,_=l.maximum;if(M>=D&&M>=_){if(L.cutLocation<0)return!1;C=sR.RED}else D>=M&&D>=_?C=sR.GREEN:C=sR.BLUE;switch(s.r1=A.r1,s.g1=A.g1,s.b1=A.b1,C){case sR.RED:A.r1=L.cutLocation,s.r0=A.r1,s.g0=A.g0,s.b0=A.b0;break;case sR.GREEN:A.g1=o.cutLocation,s.r0=A.r0,s.g0=A.g1,s.b0=A.b0;break;case sR.BLUE:A.b1=l.cutLocation,s.r0=A.r0,s.g0=A.g0,s.b0=A.b1;break;default:throw new Error("unexpected direction "+C)}return A.vol=(A.r1-A.r0)*(A.g1-A.g0)*(A.b1-A.b0),s.vol=(s.r1-s.r0)*(s.g1-s.g0)*(s.b1-s.b0),!0}maximize(A,s,R,a,i,r,L,o){const l=this.bottom(A,s,this.momentsR),C=this.bottom(A,s,this.momentsG),M=this.bottom(A,s,this.momentsB),D=this.bottom(A,s,this.weights);let _=0,P=-1,h=0,H=0,d=0,f=0;for(let B=R;B<a;B++){if(h=l+this.top(A,s,B,this.momentsR),H=C+this.top(A,s,B,this.momentsG),d=M+this.top(A,s,B,this.momentsB),f=D+this.top(A,s,B,this.weights),f===0)continue;let F=(h*h+H*H+d*d)*1,W=f*1,b=F/W;h=i-h,H=r-H,d=L-d,f=o-f,f!==0&&(F=(h*h+H*H+d*d)*1,W=f*1,b+=F/W,b>_&&(_=b,P=B))}return new f_(P,_)}volume(A,s){return s[this.getIndex(A.r1,A.g1,A.b1)]-s[this.getIndex(A.r1,A.g1,A.b0)]-s[this.getIndex(A.r1,A.g0,A.b1)]+s[this.getIndex(A.r1,A.g0,A.b0)]-s[this.getIndex(A.r0,A.g1,A.b1)]+s[this.getIndex(A.r0,A.g1,A.b0)]+s[this.getIndex(A.r0,A.g0,A.b1)]-s[this.getIndex(A.r0,A.g0,A.b0)]}bottom(A,s,R){switch(s){case sR.RED:return-R[this.getIndex(A.r0,A.g1,A.b1)]+R[this.getIndex(A.r0,A.g1,A.b0)]+R[this.getIndex(A.r0,A.g0,A.b1)]-R[this.getIndex(A.r0,A.g0,A.b0)];case sR.GREEN:return-R[this.getIndex(A.r1,A.g0,A.b1)]+R[this.getIndex(A.r1,A.g0,A.b0)]+R[this.getIndex(A.r0,A.g0,A.b1)]-R[this.getIndex(A.r0,A.g0,A.b0)];case sR.BLUE:return-R[this.getIndex(A.r1,A.g1,A.b0)]+R[this.getIndex(A.r1,A.g0,A.b0)]+R[this.getIndex(A.r0,A.g1,A.b0)]-R[this.getIndex(A.r0,A.g0,A.b0)];default:throw new Error("unexpected direction $direction")}}top(A,s,R,a){switch(s){case sR.RED:return a[this.getIndex(R,A.g1,A.b1)]-a[this.getIndex(R,A.g1,A.b0)]-a[this.getIndex(R,A.g0,A.b1)]+a[this.getIndex(R,A.g0,A.b0)];case sR.GREEN:return a[this.getIndex(A.r1,R,A.b1)]-a[this.getIndex(A.r1,R,A.b0)]-a[this.getIndex(A.r0,R,A.b1)]+a[this.getIndex(A.r0,R,A.b0)];case sR.BLUE:return a[this.getIndex(A.r1,A.g1,R)]-a[this.getIndex(A.r1,A.g0,R)]-a[this.getIndex(A.r0,A.g1,R)]+a[this.getIndex(A.r0,A.g0,R)];default:throw new Error("unexpected direction $direction")}}getIndex(A,s,R){return(A<<tl*2)+(A<<tl+1)+A+(s<<tl)+s+R}};N(Sf,"QuantizerWu");let h_=Sf;const of=class of{constructor(A=0,s=0,R=0,a=0,i=0,r=0,L=0){this.r0=A,this.r1=s,this.g0=R,this.g1=a,this.b0=i,this.b1=r,this.vol=L}};N(of,"Box");let H_=of;const lf=class lf{constructor(A,s){this.requestedCount=A,this.resultCount=s}};N(lf,"CreateBoxesResult");let d_=lf;const Cf=class Cf{constructor(A,s){this.cutLocation=A,this.maximum=s}};N(Cf,"MaximizeResult");let f_=Cf;/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Uf=class Uf{static quantize(A,s){const a=new h_().quantize(A,s);return P_.quantize(A,a,s)}};N(Uf,"QuantizerCelebi");let WT=Uf;const KE={[e.BULBASAUR]:[t.SAPPY_SEED,t.MALIGNANT_CHAIN,t.EARTH_POWER,t.MATCHA_GOTCHA],[e.CHARMANDER]:[t.DRAGON_DANCE,t.BITTER_BLADE,t.EARTH_POWER,t.OBLIVION_WING],[e.SQUIRTLE]:[t.FREEZE_DRY,t.ARMOR_CANNON,t.BOUNCY_BUBBLE,t.ORIGIN_PULSE],[e.CATERPIE]:[t.SANDSEAR_STORM,t.SILK_TRAP,t.TWIN_BEAM,t.BLEAKWIND_STORM],[e.WEEDLE]:[t.THOUSAND_ARROWS,t.NOXIOUS_TORQUE,t.ATTACK_ORDER,t.VICTORY_DANCE],[e.PIDGEY]:[t.WILDBOLT_STORM,t.SANDSEAR_STORM,t.NASTY_PLOT,t.BOOMBURST],[e.RATTATA]:[t.HYPER_FANG,t.PSYCHIC_FANGS,t.FIRE_FANG,t.EXTREME_SPEED],[e.SPEAROW]:[t.FLOATY_FALL,t.HYPER_DRILL,t.TIDY_UP,t.TRIPLE_ARROWS],[e.EKANS]:[t.NOXIOUS_TORQUE,t.DRAGON_DANCE,t.SLACK_OFF,t.SHED_TAIL],[e.SANDSHREW]:[t.HIGH_HORSEPOWER,t.DIRE_CLAW,t.SHORE_UP,t.MIGHTY_CLEAVE],[e.NIDORAN_F]:[t.CALM_MIND,t.MOONLIGHT,t.MALIGNANT_CHAIN,t.SANDSEAR_STORM],[e.NIDORAN_M]:[t.DRAGON_DANCE,t.MOUNTAIN_GALE,t.NOXIOUS_TORQUE,t.PRECIPICE_BLADES],[e.VULPIX]:[t.MOONBLAST,t.INFERNAL_PARADE,t.MORNING_SUN,t.TAIL_GLOW],[e.ZUBAT]:[t.FLOATY_FALL,t.DIRE_CLAW,t.SWORDS_DANCE,t.COLLISION_COURSE],[e.ODDISH]:[t.SLUDGE_BOMB,t.FIERY_DANCE,t.STRENGTH_SAP,t.SPORE],[e.PARAS]:[t.LEECH_LIFE,t.HORN_LEECH,t.CRABHAMMER,t.SAPPY_SEED],[e.VENONAT]:[t.SLUDGE_BOMB,t.TOXIC_THREAD,t.EARTH_POWER,t.STORED_POWER],[e.DIGLETT]:[t.TRIPLE_DIVE,t.SWORDS_DANCE,t.TRIPLE_AXEL,t.HEADLONG_RUSH],[e.MEOWTH]:[t.HEART_STAMP,t.SWORDS_DANCE,t.SIZZLY_SLIDE,t.TAIL_SLAP],[e.PSYDUCK]:[t.FROST_BREATH,t.AQUA_STEP,t.MYSTICAL_POWER,t.BOUNCY_BUBBLE],[e.MANKEY]:[t.DRAIN_PUNCH,t.SLACK_OFF,t.METEOR_MASH,t.NO_RETREAT],[e.GROWLITHE]:[t.ZING_ZAP,t.PARTING_SHOT,t.MORNING_SUN,t.SACRED_FIRE],[e.POLIWAG]:[t.SLACK_OFF,t.WILDBOLT_STORM,t.DRAIN_PUNCH,t.SURGING_STRIKES],[e.ABRA]:[t.AURA_SPHERE,t.BADDY_BAD,t.ICE_BEAM,t.PSYSTRIKE],[e.MACHOP]:[t.COMBAT_TORQUE,t.METEOR_MASH,t.MOUNTAIN_GALE,t.FISSURE],[e.BELLSPROUT]:[t.SOLAR_BLADE,t.STRENGTH_SAP,t.FIRE_LASH,t.VICTORY_DANCE],[e.TENTACOOL]:[t.BANEFUL_BUNKER,t.MALIGNANT_CHAIN,t.BOUNCY_BUBBLE,t.STRENGTH_SAP],[e.GEODUDE]:[t.FLARE_BLITZ,t.HEAD_SMASH,t.SHORE_UP,t.SHELL_SMASH],[e.PONYTA]:[t.HEADLONG_RUSH,t.FIRE_LASH,t.SWORDS_DANCE,t.VOLT_TACKLE],[e.SLOWPOKE]:[t.BOUNCY_BUBBLE,t.FROST_BREATH,t.SHED_TAIL,t.MYSTICAL_POWER],[e.MAGNEMITE]:[t.PARABOLIC_CHARGE,t.FLAMETHROWER,t.ICE_BEAM,t.THUNDERCLAP],[e.FARFETCHD]:[t.IVY_CUDGEL,t.TRIPLE_ARROWS,t.DRILL_RUN,t.VICTORY_DANCE],[e.DODUO]:[t.TRIPLE_AXEL,t.HYPER_DRILL,t.FLOATY_FALL,t.TRIPLE_ARROWS],[e.SEEL]:[t.FREEZE_DRY,t.BOUNCY_BUBBLE,t.SLACK_OFF,t.STEAM_ERUPTION],[e.GRIMER]:[t.SUCKER_PUNCH,t.CURSE,t.NOXIOUS_TORQUE,t.STRENGTH_SAP],[e.SHELLDER]:[t.ROCK_BLAST,t.WATER_SHURIKEN,t.BANEFUL_BUNKER,t.BONE_RUSH],[e.GASTLY]:[t.MALIGNANT_CHAIN,t.AURA_SPHERE,t.PARTING_SHOT,t.DARK_VOID],[e.ONIX]:[t.SHORE_UP,t.THOUSAND_WAVES,t.COIL,t.DIAMOND_STORM],[e.DROWZEE]:[t.BADDY_BAD,t.STRENGTH_SAP,t.LUMINA_CRASH,t.DARK_VOID],[e.KRABBY]:[t.DIRE_CLAW,t.DRAGON_HAMMER,t.IVY_CUDGEL,t.JET_PUNCH],[e.VOLTORB]:[t.NASTY_PLOT,t.FUSION_FLARE,t.FROST_BREATH,t.ELECTRO_DRIFT],[e.EXEGGCUTE]:[t.FICKLE_BEAM,t.APPLE_ACID,t.TRICK_ROOM,t.LUMINA_CRASH],[e.CUBONE]:[t.HEAD_SMASH,t.WOOD_HAMMER,t.SHADOW_SNEAK,t.BITTER_BLADE],[e.LICKITUNG]:[t.CRUSH_GRIP,t.FIRE_LASH,t.SLACK_OFF,t.MAGICAL_TORQUE],[e.KOFFING]:[t.SCALD,t.RECOVER,t.BODY_PRESS,t.MALIGNANT_CHAIN],[e.RHYHORN]:[t.SHORE_UP,t.ICE_HAMMER,t.ACCELEROCK,t.HEAD_SMASH],[e.TANGELA]:[t.NATURES_MADNESS,t.SNAP_TRAP,t.PARTING_SHOT,t.SAPPY_SEED],[e.KANGASKHAN]:[t.POWER_UP_PUNCH,t.TRAILBLAZE,t.FACADE,t.SEISMIC_TOSS],[e.HORSEA]:[t.SNIPE_SHOT,t.FROST_BREATH,t.SLUDGE_BOMB,t.CLANGING_SCALES],[e.GOLDEEN]:[t.GLACIAL_LANCE,t.SUPERCELL_SLAM,t.DRAGON_DANCE,t.FISHIOUS_REND],[e.STARYU]:[t.CALM_MIND,t.BOUNCY_BUBBLE,t.MOONBLAST,t.MYSTICAL_POWER],[e.SCYTHER]:[t.MIGHTY_CLEAVE,t.GEAR_GRIND,t.STORM_THROW,t.BITTER_BLADE],[e.PINSIR]:[t.HEADLONG_RUSH,t.LEECH_LIFE,t.CRUSH_GRIP,t.EXTREME_SPEED],[e.TAUROS]:[t.SWORDS_DANCE,t.FIRE_LASH,t.WICKED_TORQUE,t.COLLISION_COURSE],[e.MAGIKARP]:[t.FLIP_TURN,t.ICE_SPINNER,t.DRAGON_ASCENT,t.SURGING_STRIKES],[e.LAPRAS]:[t.RECOVER,t.FREEZE_DRY,t.SCALD,t.SHELL_SMASH],[e.DITTO]:[t.MIMIC,t.SKETCH,t.METRONOME,t.IMPRISON],[e.EEVEE]:[t.WISH,t.NO_RETREAT,t.ZIPPY_ZAP,t.BOOMBURST],[e.PORYGON]:[t.THUNDERCLAP,t.AURA_SPHERE,t.FLAMETHROWER,t.TECHNO_BLAST],[e.OMANYTE]:[t.FREEZE_DRY,t.GIGA_DRAIN,t.POWER_GEM,t.STEAM_ERUPTION],[e.KABUTO]:[t.CEASELESS_EDGE,t.HIGH_HORSEPOWER,t.CRABHAMMER,t.MIGHTY_CLEAVE],[e.AERODACTYL]:[t.FLOATY_FALL,t.FLARE_BLITZ,t.SWORDS_DANCE,t.MIGHTY_CLEAVE],[e.ARTICUNO]:[t.EARTH_POWER,t.CALM_MIND,t.AURORA_VEIL,t.AEROBLAST],[e.ZAPDOS]:[t.BLEAKWIND_STORM,t.CALM_MIND,t.SANDSEAR_STORM,t.ELECTRO_SHOT],[e.MOLTRES]:[t.EARTH_POWER,t.CALM_MIND,t.AEROBLAST,t.TORCH_SONG],[e.DRATINI]:[t.DRAGON_HAMMER,t.CRUSH_GRIP,t.FIRE_LASH,t.GIGATON_HAMMER],[e.MEWTWO]:[t.METEOR_MASH,t.MOONBLAST,t.THUNDEROUS_KICK,t.PHOTON_GEYSER],[e.MEW]:[t.PHOTON_GEYSER,t.MOONBLAST,t.ASTRAL_BARRAGE,t.SHELL_SMASH],[e.CHIKORITA]:[t.SAPPY_SEED,t.STONE_AXE,t.DRAGON_DANCE,t.SPORE],[e.CYNDAQUIL]:[t.NASTY_PLOT,t.EARTH_POWER,t.FIERY_DANCE,t.ELECTRO_DRIFT],[e.TOTODILE]:[t.THUNDER_PUNCH,t.DRAGON_DANCE,t.TRIPLE_AXEL,t.SURGING_STRIKES],[e.SENTRET]:[t.TIDY_UP,t.FAKE_OUT,t.NUZZLE,t.EXTREME_SPEED],[e.HOOTHOOT]:[t.CALM_MIND,t.ESPER_WING,t.AEROBLAST,t.BOOMBURST],[e.LEDYBA]:[t.POLLEN_PUFF,t.MAT_BLOCK,t.PARTING_SHOT,t.SPORE],[e.SPINARAK]:[t.PARTING_SHOT,t.ATTACK_ORDER,t.GASTRO_ACID,t.STRENGTH_SAP],[e.CHINCHOU]:[t.THUNDERCLAP,t.BOUNCY_BUBBLE,t.THUNDER_CAGE,t.TAIL_GLOW],[e.PICHU]:[t.MOONBLAST,t.TRIPLE_AXEL,t.FIERY_DANCE,t.AURA_WHEEL],[e.CLEFFA]:[t.CALM_MIND,t.EARTH_POWER,t.WISH,t.LIGHT_OF_RUIN],[e.IGGLYBUFF]:[t.DRAIN_PUNCH,t.GRAV_APPLE,t.SOFT_BOILED,t.EXTREME_SPEED],[e.TOGEPI]:[t.SCORCHING_SANDS,t.SPLISHY_SPLASH,t.RELIC_SONG,t.FIERY_DANCE],[e.NATU]:[t.REVIVAL_BLESSING,t.NASTY_PLOT,t.MOONBLAST,t.OBLIVION_WING],[e.MAREEP]:[t.ICE_BEAM,t.PARABOLIC_CHARGE,t.CORE_ENFORCER,t.TAIL_GLOW],[e.HOPPIP]:[t.FLOATY_FALL,t.STRENGTH_SAP,t.SAPPY_SEED,t.SPORE],[e.AIPOM]:[t.ROCK_BLAST,t.STORM_THROW,t.FAKE_OUT,t.SWORDS_DANCE],[e.SUNKERN]:[t.SPORE,t.QUIVER_DANCE,t.FIERY_DANCE,t.HYDRO_STEAM],[e.YANMA]:[t.NASTY_PLOT,t.EARTH_POWER,t.HEAT_WAVE,t.BLEAKWIND_STORM],[e.WOOPER]:[t.SIZZLY_SLIDE,t.RECOVER,t.SHED_TAIL,t.SURGING_STRIKES],[e.MURKROW]:[t.TRIPLE_ARROWS,t.FLOATY_FALL,t.TIDY_UP,t.WICKED_BLOW],[e.MISDREAVUS]:[t.TAKE_HEART,t.MOONBLAST,t.AURA_SPHERE,t.MOONGEIST_BEAM],[e.UNOWN]:[t.NATURE_POWER,t.COSMIC_POWER,t.ANCIENT_POWER,t.MYSTICAL_POWER],[e.GIRAFARIG]:[t.MYSTICAL_POWER,t.NIGHT_DAZE,t.RECOVER,t.BOOMBURST],[e.PINECO]:[t.METAL_BURST,t.SHORE_UP,t.BODY_PRESS,t.DIAMOND_STORM],[e.DUNSPARCE]:[t.WICKED_TORQUE,t.MAGICAL_TORQUE,t.BLAZING_TORQUE,t.EXTREME_SPEED],[e.GLIGAR]:[t.FLOATY_FALL,t.THOUSAND_WAVES,t.SPIKY_SHIELD,t.MIGHTY_CLEAVE],[e.SNUBBULL]:[t.FACADE,t.HIGH_HORSEPOWER,t.SWORDS_DANCE,t.EXTREME_SPEED],[e.QWILFISH]:[t.BARB_BARRAGE,t.BANEFUL_BUNKER,t.RECOVER,t.FISHIOUS_REND],[e.SHUCKLE]:[t.STUFF_CHEEKS,t.HEAL_ORDER,t.BODY_PRESS,t.SALT_CURE],[e.HERACROSS]:[t.ROCK_BLAST,t.FIRST_IMPRESSION,t.ICICLE_SPEAR,t.TIDY_UP],[e.SNEASEL]:[t.DIRE_CLAW,t.DARKEST_LARIAT,t.TRIPLE_AXEL,t.CLOSE_COMBAT],[e.TEDDIURSA]:[t.MOUNTAIN_GALE,t.FAKE_OUT,t.SLACK_OFF,t.PRECIPICE_BLADES],[e.SLUGMA]:[t.BURNING_BULWARK,t.POWER_GEM,t.SOLAR_BEAM,t.MAGMA_STORM],[e.SWINUB]:[t.SLACK_OFF,t.MOUNTAIN_GALE,t.STONE_AXE,t.PRECIPICE_BLADES],[e.CORSOLA]:[t.SCALD,t.FREEZE_DRY,t.STRENGTH_SAP,t.SALT_CURE],[e.REMORAID]:[t.WATER_SHURIKEN,t.TAKE_HEART,t.SHELL_SIDE_ARM,t.BOUNCY_BUBBLE],[e.DELIBIRD]:[t.BONEMERANG,t.FLOATY_FALL,t.VICTORY_DANCE,t.GLACIAL_LANCE],[e.SKARMORY]:[t.ROOST,t.BODY_PRESS,t.SPIKY_SHIELD,t.BEAK_BLAST],[e.HOUNDOUR]:[t.EARTH_POWER,t.THUNDERBOLT,t.MOONBLAST,t.FIERY_WRATH],[e.PHANPY]:[t.SHORE_UP,t.SWORDS_DANCE,t.MOUNTAIN_GALE,t.COLLISION_COURSE],[e.STANTLER]:[t.THUNDEROUS_KICK,t.PHOTON_GEYSER,t.SWORDS_DANCE,t.BOOMBURST],[e.SMEARGLE]:[t.CONVERSION,t.BURNING_BULWARK,t.SALT_CURE,t.DARK_VOID],[e.TYROGUE]:[t.VICTORY_DANCE,t.THUNDEROUS_KICK,t.METEOR_MASH,t.WICKED_BLOW],[e.SMOOCHUM]:[t.LUSTER_PURGE,t.AURA_SPHERE,t.FREEZE_DRY,t.QUIVER_DANCE],[e.ELEKID]:[t.FIRE_LASH,t.ZING_ZAP,t.MOUNTAIN_GALE,t.SHIFT_GEAR],[e.MAGBY]:[t.THUNDERCLAP,t.EARTH_POWER,t.ENERGY_BALL,t.BLUE_FLARE],[e.MILTANK]:[t.BODY_PRESS,t.BULK_UP,t.KNOCK_OFF,t.SIZZLY_SLIDE],[e.RAIKOU]:[t.PARABOLIC_CHARGE,t.NASTY_PLOT,t.FROST_BREATH,t.ELECTRO_DRIFT],[e.ENTEI]:[t.BURNING_BULWARK,t.DRAGON_DANCE,t.EARTHQUAKE,t.PYRO_BALL],[e.SUICUNE]:[t.RECOVER,t.NASTY_PLOT,t.FREEZE_DRY,t.STEAM_ERUPTION],[e.LARVITAR]:[t.DRAGON_DANCE,t.MOUNTAIN_GALE,t.SHORE_UP,t.DIAMOND_STORM],[e.LUGIA]:[t.NASTY_PLOT,t.LUMINA_CRASH,t.AURA_SPHERE,t.OBLIVION_WING],[e.HO_OH]:[t.BRAVE_BIRD,t.DRAGON_DANCE,t.REVIVAL_BLESSING,t.BOLT_BEAK],[e.CELEBI]:[t.PHOTON_GEYSER,t.MATCHA_GOTCHA,t.REVIVAL_BLESSING,t.QUIVER_DANCE],[e.TREECKO]:[t.NASTY_PLOT,t.CORE_ENFORCER,t.FLAMETHROWER,t.SEED_FLARE],[e.TORCHIC]:[t.THUNDEROUS_KICK,t.ZING_ZAP,t.BURNING_BULWARK,t.PYRO_BALL],[e.MUDKIP]:[t.SHORE_UP,t.MOUNTAIN_GALE,t.AQUA_STEP,t.PRECIPICE_BLADES],[e.POOCHYENA]:[t.JAW_LOCK,t.CLOSE_COMBAT,t.DIRE_CLAW,t.NO_RETREAT],[e.ZIGZAGOON]:[t.EXTREME_SPEED,t.NUZZLE,t.HIGH_HORSEPOWER,t.TIDY_UP],[e.WURMPLE]:[t.BATON_PASS,t.BLEAKWIND_STORM,t.STORED_POWER,t.MALIGNANT_CHAIN],[e.LOTAD]:[t.REVELATION_DANCE,t.APPLE_ACID,t.ICE_BEAM,t.QUIVER_DANCE],[e.SEEDOT]:[t.SWORDS_DANCE,t.SACRED_SWORD,t.KOWTOW_CLEAVE,t.BITTER_BLADE],[e.TAILLOW]:[t.BOOMBURST,t.FACADE,t.HEADLONG_RUSH,t.NO_RETREAT],[e.WINGULL]:[t.THUNDER,t.FLIP_TURN,t.CALM_MIND,t.STEAM_ERUPTION],[e.RALTS]:[t.PSYBLADE,t.BITTER_BLADE,t.NO_RETREAT,t.BOOMBURST],[e.SURSKIT]:[t.POLLEN_PUFF,t.FIERY_DANCE,t.BOUNCY_BUBBLE,t.AEROBLAST],[e.SHROOMISH]:[t.ACCELEROCK,t.TRAILBLAZE,t.STORM_THROW,t.SAPPY_SEED],[e.SLAKOTH]:[t.FACADE,t.DRAIN_PUNCH,t.KNOCK_OFF,t.SKILL_SWAP],[e.NINCADA]:[t.ATTACK_ORDER,t.STICKY_WEB,t.SPIRIT_SHACKLE,t.SHELL_SMASH],[e.WHISMUR]:[t.ALLURING_VOICE,t.SHIFT_GEAR,t.SPARKLING_ARIA,t.TORCH_SONG],[e.MAKUHITA]:[t.COMBAT_TORQUE,t.SLACK_OFF,t.HEAT_CRASH,t.DOUBLE_IRON_BASH],[e.AZURILL]:[t.JET_PUNCH,t.MAGICAL_TORQUE,t.SWORDS_DANCE,t.SURGING_STRIKES],[e.NOSEPASS]:[t.SHORE_UP,t.BODY_PRESS,t.CALM_MIND,t.TACHYON_CUTTER],[e.SKITTY]:[t.THUNDEROUS_KICK,t.ENTRAINMENT,t.TIDY_UP,t.V_CREATE],[e.SABLEYE]:[t.RECOVER,t.TOPSY_TURVY,t.CURSE,t.SALT_CURE],[e.MAWILE]:[t.BULLET_PUNCH,t.MAGICAL_TORQUE,t.EARTHQUAKE,t.SHIFT_GEAR],[e.ARON]:[t.HEAD_SMASH,t.BODY_PRESS,t.SHORE_UP,t.SALT_CURE],[e.MEDITITE]:[t.THUNDEROUS_KICK,t.SUCKER_PUNCH,t.BULLET_PUNCH,t.PHOTON_GEYSER],[e.ELECTRIKE]:[t.FROST_BREATH,t.HEAT_WAVE,t.NASTY_PLOT,t.ELECTRO_DRIFT],[e.PLUSLE]:[t.FLAMETHROWER,t.GLITZY_GLOW,t.SPLISHY_SPLASH,t.TAIL_GLOW],[e.MINUN]:[t.ICE_BEAM,t.BADDY_BAD,t.SPARKLY_SWIRL,t.TAIL_GLOW],[e.VOLBEAT]:[t.BATON_PASS,t.STICKY_WEB,t.DECORATE,t.VICTORY_DANCE],[e.ILLUMISE]:[t.PARTING_SHOT,t.GLITZY_GLOW,t.POWDER,t.QUIVER_DANCE],[e.GULPIN]:[t.MALIGNANT_CHAIN,t.EARTH_POWER,t.CALM_MIND,t.STRENGTH_SAP],[e.CARVANHA]:[t.THUNDER_FANG,t.SWORDS_DANCE,t.OBSTRUCT,t.SURGING_STRIKES],[e.WAILMER]:[t.TAKE_HEART,t.COMEUPPANCE,t.SLACK_OFF,t.STEAM_ERUPTION],[e.NUMEL]:[t.TRICK_ROOM,t.ENERGY_BALL,t.SLACK_OFF,t.BLUE_FLARE],[e.TORKOAL]:[t.MORNING_SUN,t.BURNING_BULWARK,t.BODY_PRESS,t.HYDRO_STEAM],[e.SPOINK]:[t.AURA_SPHERE,t.MILK_DRINK,t.EXPANDING_FORCE,t.TAIL_GLOW],[e.SPINDA]:[t.SUPERPOWER,t.SLACK_OFF,t.FLEUR_CANNON,t.V_CREATE],[e.TRAPINCH]:[t.FIRE_LASH,t.DRAGON_DARTS,t.THOUSAND_ARROWS,t.DRAGON_ENERGY],[e.CACNEA]:[t.EARTH_POWER,t.CEASELESS_EDGE,t.NIGHT_DAZE,t.SAPPY_SEED],[e.SWABLU]:[t.ROOST,t.NASTY_PLOT,t.FLOATY_FALL,t.BOOMBURST],[e.ZANGOOSE]:[t.FACADE,t.HIGH_HORSEPOWER,t.EXTREME_SPEED,t.TIDY_UP],[e.SEVIPER]:[t.ICE_BEAM,t.BITTER_BLADE,t.SUCKER_PUNCH,t.NO_RETREAT],[e.LUNATONE]:[t.REVELATION_DANCE,t.MOONGEIST_BEAM,t.SHELL_SMASH,t.LUMINA_CRASH],[e.SOLROCK]:[t.MIGHTY_CLEAVE,t.PHOTON_GEYSER,t.SHELL_SMASH,t.SACRED_FIRE],[e.BARBOACH]:[t.DRAGON_DANCE,t.ZING_ZAP,t.ICE_SPINNER,t.SURGING_STRIKES],[e.CORPHISH]:[t.CEASELESS_EDGE,t.SHELL_SIDE_ARM,t.SUCKER_PUNCH,t.JET_PUNCH],[e.BALTOY]:[t.RECOVER,t.GLARE,t.RUINATION,t.MYSTICAL_POWER],[e.LILEEP]:[t.POWER_GEM,t.SCALD,t.STRENGTH_SAP,t.SAPPY_SEED],[e.ANORITH]:[t.FIRST_IMPRESSION,t.LEECH_LIFE,t.DRAGON_DANCE,t.MIGHTY_CLEAVE],[e.FEEBAS]:[t.CALM_MIND,t.FREEZE_DRY,t.MOONBLAST,t.STEAM_ERUPTION],[e.CASTFORM]:[t.BOOMBURST,t.HYDRO_STEAM,t.ERUPTION,t.QUIVER_DANCE],[e.KECLEON]:[t.ZIPPY_ZAP,t.COIL,t.EXTREME_SPEED,t.MULTI_ATTACK],[e.SHUPPET]:[t.STORM_THROW,t.TIDY_UP,t.PARTING_SHOT,t.SPECTRAL_THIEF],[e.DUSKULL]:[t.BULK_UP,t.DRAIN_PUNCH,t.RECOVER,t.RAGE_FIST],[e.TROPIUS]:[t.STUFF_CHEEKS,t.EARTH_POWER,t.APPLE_ACID,t.SAPPY_SEED],[e.ABSOL]:[t.KOWTOW_CLEAVE,t.SACRED_SWORD,t.PSYBLADE,t.BITTER_BLADE],[e.WYNAUT]:[t.RECOVER,t.SHED_TAIL,t.TAUNT,t.COMEUPPANCE],[e.SNORUNT]:[t.FREEZY_FROST,t.EXTREME_SPEED,t.EARTH_POWER,t.NO_RETREAT],[e.SPHEAL]:[t.FLIP_TURN,t.FREEZE_DRY,t.SLACK_OFF,t.STEAM_ERUPTION],[e.CLAMPERL]:[t.SHELL_SIDE_ARM,t.BOUNCY_BUBBLE,t.FREEZE_DRY,t.STEAM_ERUPTION],[e.RELICANTH]:[t.DRAGON_DANCE,t.SHORE_UP,t.WAVE_CRASH,t.DIAMOND_STORM],[e.LUVDISC]:[t.BATON_PASS,t.HEART_SWAP,t.GLITZY_GLOW,t.REVIVAL_BLESSING],[e.BAGON]:[t.FLOATY_FALL,t.FIRE_LASH,t.DRAGON_DANCE,t.DRAGON_DARTS],[e.BELDUM]:[t.HEADLONG_RUSH,t.DRAIN_PUNCH,t.TRIPLE_AXEL,t.SHIFT_GEAR],[e.REGIROCK]:[t.STONE_AXE,t.BODY_PRESS,t.SHORE_UP,t.SALT_CURE],[e.REGICE]:[t.EARTH_POWER,t.TAKE_HEART,t.RECOVER,t.FREEZE_DRY],[e.REGISTEEL]:[t.BODY_PRESS,t.SIZZLY_SLIDE,t.RECOVER,t.GIGATON_HAMMER],[e.LATIAS]:[t.CORE_ENFORCER,t.FUSION_FLARE,t.SPARKLY_SWIRL,t.MYSTICAL_POWER],[e.LATIOS]:[t.CORE_ENFORCER,t.BLUE_FLARE,t.NASTY_PLOT,t.TACHYON_CUTTER],[e.KYOGRE]:[t.WILDBOLT_STORM,t.HURRICANE,t.FREEZY_FROST,t.BOUNCY_BUBBLE],[e.GROUDON]:[t.STONE_AXE,t.SOLAR_BLADE,t.MORNING_SUN,t.SACRED_FIRE],[e.RAYQUAZA]:[t.V_CREATE,t.DRAGON_DARTS,t.CORE_ENFORCER,t.OBLIVION_WING],[e.JIRACHI]:[t.TACHYON_CUTTER,t.TRIPLE_ARROWS,t.ROCK_SLIDE,t.SHELL_SMASH],[e.DEOXYS]:[t.COLLISION_COURSE,t.FUSION_FLARE,t.PARTING_SHOT,t.LUMINA_CRASH],[e.TURTWIG]:[t.SHELL_SMASH,t.MIGHTY_CLEAVE,t.ICE_SPINNER,t.SAPPY_SEED],[e.CHIMCHAR]:[t.FIERY_DANCE,t.SECRET_SWORD,t.TRIPLE_AXEL,t.SACRED_FIRE],[e.PIPLUP]:[t.KINGS_SHIELD,t.TACHYON_CUTTER,t.FREEZE_DRY,t.STEAM_ERUPTION],[e.STARLY]:[t.SWORDS_DANCE,t.HEAD_CHARGE,t.FLARE_BLITZ,t.EXTREME_SPEED],[e.BIDOOF]:[t.EXTREME_SPEED,t.COSMIC_POWER,t.POWER_TRIP,t.AQUA_STEP],[e.KRICKETOT]:[t.BONEMERANG,t.VICTORY_DANCE,t.STONE_AXE,t.POPULATION_BOMB],[e.SHINX]:[t.FIRE_LASH,t.TRIPLE_AXEL,t.ZIPPY_ZAP,t.BOLT_STRIKE],[e.BUDEW]:[t.FIERY_DANCE,t.ACID_SPRAY,t.BOUNCY_BUBBLE,t.QUIVER_DANCE],[e.CRANIDOS]:[t.VOLT_TACKLE,t.ACCELEROCK,t.FLARE_BLITZ,t.SHIFT_GEAR],[e.SHIELDON]:[t.SHORE_UP,t.BODY_PRESS,t.KINGS_SHIELD,t.DIAMOND_STORM],[e.BURMY]:[t.FIERY_DANCE,t.DEFEND_ORDER,t.HEAL_ORDER,t.SAPPY_SEED],[e.COMBEE]:[t.SPORE,t.FLOATY_FALL,t.KINGS_SHIELD,t.VICTORY_DANCE],[e.PACHIRISU]:[t.FREEZY_FROST,t.SIZZLY_SLIDE,t.SLACK_OFF,t.ZIPPY_ZAP],[e.BUIZEL]:[t.JET_PUNCH,t.TRIPLE_AXEL,t.SUPERCELL_SLAM,t.SURGING_STRIKES],[e.CHERUBI]:[t.SLEEP_POWDER,t.STRENGTH_SAP,t.FIRE_LASH,t.FLOWER_TRICK],[e.SHELLOS]:[t.BOUNCY_BUBBLE,t.SCORCHING_SANDS,t.FREEZE_DRY,t.STEAM_ERUPTION],[e.DRIFLOON]:[t.WILL_O_WISP,t.MIND_BLOWN,t.CALM_MIND,t.OBLIVION_WING],[e.BUNEARY]:[t.TRIPLE_AXEL,t.SWORDS_DANCE,t.THUNDEROUS_KICK,t.MULTI_ATTACK],[e.GLAMEOW]:[t.PARTING_SHOT,t.HIGH_HORSEPOWER,t.SWORDS_DANCE,t.EXTREME_SPEED],[e.CHINGLING]:[t.BUZZY_BUZZ,t.EERIE_SPELL,t.TORCH_SONG,t.BOOMBURST],[e.STUNKY]:[t.CEASELESS_EDGE,t.KNOCK_OFF,t.RECOVER,t.DIRE_CLAW],[e.BRONZOR]:[t.RECOVER,t.TACHYON_CUTTER,t.GLARE,t.LUMINA_CRASH],[e.BONSLY]:[t.ACCELEROCK,t.SWORDS_DANCE,t.STRENGTH_SAP,t.SAPPY_SEED],[e.MIME_JR]:[t.CHILLY_RECEPTION,t.MOONBLAST,t.FROST_BREATH,t.LUMINA_CRASH],[e.HAPPINY]:[t.COTTON_GUARD,t.SEISMIC_TOSS,t.SIZZLY_SLIDE,t.REVIVAL_BLESSING],[e.CHATOT]:[t.SPARKLING_ARIA,t.BOOMBURST,t.BATON_PASS,t.TORCH_SONG],[e.SPIRITOMB]:[t.PARTING_SHOT,t.BADDY_BAD,t.STRENGTH_SAP,t.SPECTRAL_THIEF],[e.GIBLE]:[t.DRAGON_DANCE,t.BITTER_BLADE,t.DRAGON_HAMMER,t.PRECIPICE_BLADES],[e.MUNCHLAX]:[t.STUFF_CHEEKS,t.GRAV_APPLE,t.SLACK_OFF,t.EXTREME_SPEED],[e.RIOLU]:[t.THUNDEROUS_KICK,t.TACHYON_CUTTER,t.TRIPLE_AXEL,t.SUNSTEEL_STRIKE],[e.HIPPOPOTAS]:[t.SHORE_UP,t.STONE_AXE,t.BULK_UP,t.SALT_CURE],[e.SKORUPI]:[t.COIL,t.DIRE_CLAW,t.CRABHAMMER,t.WICKED_BLOW],[e.CROAGUNK]:[t.DIRE_CLAW,t.ICE_SPINNER,t.THUNDEROUS_KICK,t.VICTORY_DANCE],[e.CARNIVINE]:[t.STRENGTH_SAP,t.FIRE_LASH,t.COIL,t.SAPPY_SEED],[e.FINNEON]:[t.QUIVER_DANCE,t.BOUNCY_BUBBLE,t.FREEZE_DRY,t.ORIGIN_PULSE],[e.MANTYKE]:[t.SPLISHY_SPLASH,t.FREEZY_FROST,t.NASTY_PLOT,t.OBLIVION_WING],[e.SNOVER]:[t.LANDS_WRATH,t.POWDER,t.CALM_MIND,t.MATCHA_GOTCHA],[e.ROTOM]:[t.STRENGTH_SAP,t.FIERY_DANCE,t.SPLISHY_SPLASH,t.ELECTRO_DRIFT],[e.UXIE]:[t.COSMIC_POWER,t.SECRET_SWORD,t.RECOVER,t.SPARKLY_SWIRL],[e.MESPRIT]:[t.TAIL_GLOW,t.AURA_SPHERE,t.RECOVER,t.LUMINA_CRASH],[e.AZELF]:[t.PSYSTRIKE,t.ICE_BEAM,t.MOONBLAST,t.TAIL_GLOW],[e.DIALGA]:[t.CORE_ENFORCER,t.TAKE_HEART,t.RECOVER,t.MAKE_IT_RAIN],[e.PALKIA]:[t.MALIGNANT_CHAIN,t.TAKE_HEART,t.RECOVER,t.ORIGIN_PULSE],[e.HEATRAN]:[t.MATCHA_GOTCHA,t.RECOVER,t.ERUPTION,t.TACHYON_CUTTER],[e.REGIGIGAS]:[t.SKILL_SWAP,t.RECOVER,t.EXTREME_SPEED,t.GIGATON_HAMMER],[e.GIRATINA]:[t.DRAGON_DANCE,t.GLAIVE_RUSH,t.RECOVER,t.SPECTRAL_THIEF],[e.CRESSELIA]:[t.COSMIC_POWER,t.BODY_PRESS,t.SIZZLY_SLIDE,t.LUMINA_CRASH],[e.PHIONE]:[t.BOUNCY_BUBBLE,t.FREEZE_DRY,t.STORED_POWER,t.ORIGIN_PULSE],[e.MANAPHY]:[t.BOUNCY_BUBBLE,t.FROST_BREATH,t.WILDBOLT_STORM,t.ORIGIN_PULSE],[e.DARKRAI]:[t.FIERY_WRATH,t.MOONBLAST,t.FIERY_DANCE,t.MAKE_IT_RAIN],[e.SHAYMIN]:[t.MATCHA_GOTCHA,t.FIERY_DANCE,t.AEROBLAST,t.QUIVER_DANCE],[e.ARCEUS]:[t.NO_RETREAT,t.COLLISION_COURSE,t.ASTRAL_BARRAGE,t.MULTI_ATTACK],[e.VICTINI]:[t.BLUE_FLARE,t.BOLT_STRIKE,t.LUSTER_PURGE,t.VICTORY_DANCE],[e.SNIVY]:[t.FLAMETHROWER,t.CLANGING_SCALES,t.MAKE_IT_RAIN,t.FLEUR_CANNON],[e.TEPIG]:[t.WAVE_CRASH,t.VOLT_TACKLE,t.AXE_KICK,t.VICTORY_DANCE],[e.OSHAWOTT]:[t.TRIPLE_AXEL,t.SHELL_SIDE_ARM,t.SACRED_SWORD,t.SHELL_SMASH],[e.PATRAT]:[t.FAKE_OUT,t.SWORDS_DANCE,t.DYNAMIC_PUNCH,t.EXTREME_SPEED],[e.LILLIPUP]:[t.CLOSE_COMBAT,t.BODY_SLAM,t.HIGH_HORSEPOWER,t.LAST_RESPECTS],[e.PURRLOIN]:[t.ENCORE,t.OBSTRUCT,t.PARTING_SHOT,t.WICKED_BLOW],[e.PANSAGE]:[t.SWORDS_DANCE,t.FIRE_LASH,t.EARTHQUAKE,t.IVY_CUDGEL],[e.PANSEAR]:[t.NASTY_PLOT,t.HYDRO_STEAM,t.SCORCHING_SANDS,t.TORCH_SONG],[e.PANPOUR]:[t.NASTY_PLOT,t.ENERGY_BALL,t.EARTH_POWER,t.STEAM_ERUPTION],[e.MUNNA]:[t.COSMIC_POWER,t.AURA_SPHERE,t.LUNAR_BLESSING,t.MYSTICAL_POWER],[e.PIDOVE]:[t.GUNK_SHOT,t.TIDY_UP,t.FLOATY_FALL,t.TRIPLE_ARROWS],[e.BLITZLE]:[t.HORN_LEECH,t.SWORDS_DANCE,t.FLARE_BLITZ,t.BOLT_STRIKE],[e.ROGGENROLA]:[t.BODY_PRESS,t.CURSE,t.SHORE_UP,t.DIAMOND_STORM],[e.WOOBAT]:[t.ESPER_WING,t.STORED_POWER,t.MYSTICAL_FIRE,t.OBLIVION_WING],[e.DRILBUR]:[t.METEOR_MASH,t.MOUNTAIN_GALE,t.SHIFT_GEAR,t.PRECIPICE_BLADES],[e.AUDINO]:[t.TAKE_HEART,t.MOONBLAST,t.WISH,t.MATCHA_GOTCHA],[e.TIMBURR]:[t.MACH_PUNCH,t.DRAIN_PUNCH,t.ICE_HAMMER,t.DOUBLE_IRON_BASH],[e.TYMPOLE]:[t.JET_PUNCH,t.HIGH_HORSEPOWER,t.BULK_UP,t.SURGING_STRIKES],[e.THROH]:[t.MACH_PUNCH,t.SLACK_OFF,t.METEOR_MASH,t.RAGE_FIST],[e.SAWK]:[t.DRAIN_PUNCH,t.SUCKER_PUNCH,t.METEOR_MASH,t.VICTORY_DANCE],[e.SEWADDLE]:[t.STONE_AXE,t.PSYCHO_CUT,t.BITTER_BLADE,t.VICTORY_DANCE],[e.VENIPEDE]:[t.BANEFUL_BUNKER,t.LEECH_LIFE,t.NOXIOUS_TORQUE,t.POWER_TRIP],[e.COTTONEE]:[t.POLLEN_PUFF,t.PARTING_SHOT,t.SLEEP_POWDER,t.SEED_FLARE],[e.PETILIL]:[t.THUNDEROUS_KICK,t.SPARKLING_ARIA,t.FIERY_DANCE,t.FLOWER_TRICK],[e.BASCULIN]:[t.LAST_RESPECTS,t.CLOSE_COMBAT,t.SPLISHY_SPLASH,t.NO_RETREAT],[e.SANDILE]:[t.DIRE_CLAW,t.HEADLONG_RUSH,t.FIRE_LASH,t.WICKED_BLOW],[e.DARUMAKA]:[t.DRAIN_PUNCH,t.ZIPPY_ZAP,t.HEADLONG_RUSH,t.PYRO_BALL],[e.MARACTUS]:[t.EARTH_POWER,t.QUIVER_DANCE,t.FIERY_DANCE,t.SEED_FLARE],[e.DWEBBLE]:[t.CRABHAMMER,t.STONE_AXE,t.LEECH_LIFE,t.MIGHTY_CLEAVE],[e.SCRAGGY]:[t.SUCKER_PUNCH,t.BULLET_PUNCH,t.NOXIOUS_TORQUE,t.VICTORY_DANCE],[e.SIGILYPH]:[t.MOONBLAST,t.CALM_MIND,t.ESPER_WING,t.OBLIVION_WING],[e.YAMASK]:[t.STRENGTH_SAP,t.GLARE,t.AURA_SPHERE,t.ASTRAL_BARRAGE],[e.TIRTOUGA]:[t.ICE_SPINNER,t.AQUA_STEP,t.SHORE_UP,t.MIGHTY_CLEAVE],[e.ARCHEN]:[t.ROOST,t.EARTHQUAKE,t.FLOATY_FALL,t.MIGHTY_CLEAVE],[e.TRUBBISH]:[t.COIL,t.RECOVER,t.DIRE_CLAW,t.GIGATON_HAMMER],[e.ZORUA]:[t.MALIGNANT_CHAIN,t.MOONBLAST,t.SECRET_SWORD,t.FIERY_WRATH],[e.MINCCINO]:[t.ICICLE_SPEAR,t.TIDY_UP,t.KNOCK_OFF,t.POPULATION_BOMB],[e.GOTHITA]:[t.RECOVER,t.MOONBLAST,t.AURA_SPHERE,t.LUMINA_CRASH],[e.SOLOSIS]:[t.MIST_BALL,t.SPEED_SWAP,t.FLAMETHROWER,t.LIGHT_OF_RUIN],[e.DUCKLETT]:[t.SPLISHY_SPLASH,t.SANDSEAR_STORM,t.WILDBOLT_STORM,t.QUIVER_DANCE],[e.VANILLITE]:[t.EARTH_POWER,t.AURORA_VEIL,t.CALM_MIND,t.SPARKLY_SWIRL],[e.DEERLING]:[t.TIDY_UP,t.FLOWER_TRICK,t.BODY_SLAM,t.COMBAT_TORQUE],[e.EMOLGA]:[t.ICICLE_CRASH,t.ZING_ZAP,t.FLOATY_FALL,t.ELECTRIFY],[e.KARRABLAST]:[t.LEECH_LIFE,t.BITTER_BLADE,t.OBSTRUCT,t.DOUBLE_IRON_BASH],[e.FOONGUS]:[t.POLLEN_PUFF,t.PARTING_SHOT,t.FOUL_PLAY,t.SAPPY_SEED],[e.FRILLISH]:[t.CALM_MIND,t.BUZZY_BUZZ,t.FREEZE_DRY,t.STEAM_ERUPTION],[e.ALOMOMOLA]:[t.FLIP_TURN,t.HEART_SWAP,t.GLITZY_GLOW,t.REVIVAL_BLESSING],[e.JOLTIK]:[t.WILDBOLT_STORM,t.PARABOLIC_CHARGE,t.EARTH_POWER,t.QUIVER_DANCE],[e.FERROSEED]:[t.SYNTHESIS,t.COMBAT_TORQUE,t.SPIKY_SHIELD,t.SAPPY_SEED],[e.KLINK]:[t.TRIPLE_AXEL,t.HIGH_HORSEPOWER,t.RECOVER,t.AURA_WHEEL],[e.TYNAMO]:[t.SCALD,t.STRENGTH_SAP,t.FIRE_LASH,t.AURA_WHEEL],[e.ELGYEM]:[t.THUNDERCLAP,t.BADDY_BAD,t.AURA_SPHERE,t.PHOTON_GEYSER],[e.LITWICK]:[t.PARTING_SHOT,t.EARTH_POWER,t.MOONBLAST,t.TORCH_SONG],[e.AXEW]:[t.STONE_AXE,t.DIRE_CLAW,t.BITTER_BLADE,t.GLAIVE_RUSH],[e.CUBCHOO]:[t.MOUNTAIN_GALE,t.AQUA_STEP,t.ICE_SHARD,t.COLLISION_COURSE],[e.CRYOGONAL]:[t.FREEZING_GLARE,t.AURORA_VEIL,t.NASTY_PLOT,t.ORIGIN_PULSE],[e.SHELMET]:[t.POWER_GEM,t.NASTY_PLOT,t.EARTH_POWER,t.STEAM_ERUPTION],[e.STUNFISK]:[t.THUNDERCLAP,t.SANDSEAR_STORM,t.STRENGTH_SAP,t.THUNDER_CAGE],[e.MIENFOO]:[t.GUNK_SHOT,t.SUPERCELL_SLAM,t.MOUNTAIN_GALE,t.WICKED_BLOW],[e.DRUDDIGON]:[t.FIRE_LASH,t.MORNING_SUN,t.DRAGON_DARTS,t.CLANGOROUS_SOUL],[e.GOLETT]:[t.SHIFT_GEAR,t.DRAIN_PUNCH,t.HEADLONG_RUSH,t.RAGE_FIST],[e.PAWNIARD]:[t.SUCKER_PUNCH,t.CEASELESS_EDGE,t.BITTER_BLADE,t.LAST_RESPECTS],[e.BOUFFALANT]:[t.SLACK_OFF,t.HIGH_JUMP_KICK,t.HEAD_SMASH,t.FLARE_BLITZ],[e.RUFFLET]:[t.FLOATY_FALL,t.AURA_SPHERE,t.NO_RETREAT,t.BOLT_BEAK],[e.VULLABY]:[t.FOUL_PLAY,t.BODY_PRESS,t.ROOST,t.RUINATION],[e.HEATMOR]:[t.EARTH_POWER,t.OVERHEAT,t.THUNDERBOLT,t.V_CREATE],[e.DURANT]:[t.HIGH_HORSEPOWER,t.FIRST_IMPRESSION,t.SWORDS_DANCE,t.BEHEMOTH_BASH],[e.DEINO]:[t.FIERY_WRATH,t.ESPER_WING,t.SLUDGE_BOMB,t.FICKLE_BEAM],[e.LARVESTA]:[t.THUNDERBOLT,t.MAGMA_STORM,t.EARTH_POWER,t.MATCHA_GOTCHA],[e.COBALION]:[t.BEHEMOTH_BLADE,t.MIGHTY_CLEAVE,t.CEASELESS_EDGE,t.VICTORY_DANCE],[e.TERRAKION]:[t.MIGHTY_CLEAVE,t.HEADLONG_RUSH,t.CEASELESS_EDGE,t.VICTORY_DANCE],[e.VIRIZION]:[t.PSYBLADE,t.SAPPY_SEED,t.CEASELESS_EDGE,t.VICTORY_DANCE],[e.TORNADUS]:[t.SANDSEAR_STORM,t.PARTING_SHOT,t.SPLISHY_SPLASH,t.OBLIVION_WING],[e.THUNDURUS]:[t.SANDSEAR_STORM,t.HURRICANE,t.FROST_BREATH,t.ELECTRO_SHOT],[e.RESHIRAM]:[t.ENERGY_BALL,t.TAKE_HEART,t.FICKLE_BEAM,t.ERUPTION],[e.ZEKROM]:[t.TRIPLE_AXEL,t.THUNDEROUS_KICK,t.DRAGON_HAMMER,t.BOLT_BEAK],[e.LANDORUS]:[t.STONE_AXE,t.FLOATY_FALL,t.ROOST,t.BLEAKWIND_STORM],[e.KYUREM]:[t.DRAGON_DARTS,t.GLACIAL_LANCE,t.NO_RETREAT,t.DRAGON_ENERGY],[e.KELDEO]:[t.BOUNCY_BUBBLE,t.THUNDERBOLT,t.ICE_BEAM,t.STEAM_ERUPTION],[e.MELOETTA]:[t.BODY_SLAM,t.TORCH_SONG,t.TRIPLE_ARROWS,t.BOOMBURST],[e.GENESECT]:[t.EXTREME_SPEED,t.SHIFT_GEAR,t.BEHEMOTH_BASH,t.TACHYON_CUTTER],[e.CHESPIN]:[t.COMBAT_TORQUE,t.SYNTHESIS,t.CEASELESS_EDGE,t.SAPPY_SEED],[e.FENNEKIN]:[t.TWIN_BEAM,t.FIERY_DANCE,t.THUNDERBOLT,t.SPARKLY_SWIRL],[e.FROAKIE]:[t.MOONBLAST,t.SHELL_SIDE_ARM,t.FIERY_WRATH,t.STEAM_ERUPTION],[e.BUNNELBY]:[t.DRAIN_PUNCH,t.TIDY_UP,t.FACADE,t.EXTREME_SPEED],[e.FLETCHLING]:[t.DRILL_RUN,t.BURNING_BULWARK,t.HEAD_SMASH,t.VOLT_TACKLE],[e.SCATTERBUG]:[t.FOCUS_BLAST,t.AFTER_YOU,t.DECORATE,t.BLIZZARD],[e.LITLEO]:[t.EARTH_POWER,t.NASTY_PLOT,t.BURNING_BULWARK,t.BLUE_FLARE],[e.FLABEBE]:[t.GLITZY_GLOW,t.MYSTICAL_FIRE,t.TAKE_HEART,t.SEED_FLARE],[e.SKIDDO]:[t.HIGH_HORSEPOWER,t.GRASSY_GLIDE,t.STONE_AXE,t.SAPPY_SEED],[e.PANCHAM]:[t.DRAIN_PUNCH,t.SUCKER_PUNCH,t.METEOR_MASH,t.WICKED_BLOW],[e.FURFROU]:[t.TIDY_UP,t.SLACK_OFF,t.COMBAT_TORQUE,t.MULTI_ATTACK],[e.ESPURR]:[t.LUSTER_PURGE,t.MOONBLAST,t.AURA_SPHERE,t.DARK_VOID],[e.HONEDGE]:[t.TACHYON_CUTTER,t.SHADOW_BONE,t.BITTER_BLADE,t.BEHEMOTH_BLADE],[e.SPRITZEE]:[t.SPEED_SWAP,t.REVIVAL_BLESSING,t.ROOST,t.TORCH_SONG],[e.SWIRLIX]:[t.BELLY_DRUM,t.HEADLONG_RUSH,t.MAGICAL_TORQUE,t.REVIVAL_BLESSING],[e.INKAY]:[t.POWER_TRIP,t.SPIN_OUT,t.RECOVER,t.PSYCHO_BOOST],[e.BINACLE]:[t.TRIPLE_AXEL,t.CRABHAMMER,t.DIRE_CLAW,t.MIGHTY_CLEAVE],[e.SKRELP]:[t.STRENGTH_SAP,t.TRICK_ROOM,t.CALM_MIND,t.CORE_ENFORCER],[e.CLAUNCHER]:[t.SHELL_SMASH,t.ARMOR_CANNON,t.ENERGY_BALL,t.ORIGIN_PULSE],[e.HELIOPTILE]:[t.WEATHER_BALL,t.HYDRO_STEAM,t.EARTH_POWER,t.BOOMBURST],[e.TYRUNT]:[t.DRAGON_HAMMER,t.FLARE_BLITZ,t.VOLT_TACKLE,t.SHIFT_GEAR],[e.AMAURA]:[t.RECOVER,t.WRING_OUT,t.POWER_GEM,t.GEOMANCY],[e.HAWLUCHA]:[t.TRIPLE_AXEL,t.HIGH_HORSEPOWER,t.FLOATY_FALL,t.WICKED_BLOW],[e.DEDENNE]:[t.BOOMBURST,t.FAKE_OUT,t.NASTY_PLOT,t.REVIVAL_BLESSING],[e.CARBINK]:[t.BODY_PRESS,t.SHORE_UP,t.SPARKLY_SWIRL,t.DIAMOND_STORM],[e.GOOMY]:[t.DRAGON_HAMMER,t.RECOVER,t.CALM_MIND,t.MAKE_IT_RAIN],[e.KLEFKI]:[t.HEAL_BELL,t.ENCORE,t.INSTRUCT,t.TOPSY_TURVY],[e.PHANTUMP]:[t.RAGE_FIST,t.SLEEP_POWDER,t.SYNTHESIS,t.SAPPY_SEED],[e.PUMPKABOO]:[t.SPIRIT_SHACKLE,t.FIRE_LASH,t.DIRE_CLAW,t.SAPPY_SEED],[e.BERGMITE]:[t.STONE_AXE,t.METAL_BURST,t.BODY_PRESS,t.GLACIAL_LANCE],[e.NOIBAT]:[t.AEROBLAST,t.OVERDRIVE,t.NASTY_PLOT,t.CLANGING_SCALES],[e.XERNEAS]:[t.EARTH_POWER,t.SPRINGTIDE_STORM,t.STRENGTH_SAP,t.TAIL_GLOW],[e.YVELTAL]:[t.SHELL_SIDE_ARM,t.POWER_TRIP,t.FIERY_WRATH,t.CLANGOROUS_SOUL],[e.ZYGARDE]:[t.DRAGON_DARTS,t.HEAL_ORDER,t.CLANGOROUS_SOUL,t.DOUBLE_IRON_BASH],[e.DIANCIE]:[t.MAGICAL_TORQUE,t.FIERY_DANCE,t.SHORE_UP,t.GEOMANCY],[e.HOOPA]:[t.PHOTON_GEYSER,t.SECRET_SWORD,t.FIERY_WRATH,t.SHELL_SMASH],[e.VOLCANION]:[t.HYDRO_STEAM,t.CALM_MIND,t.ENERGY_BALL,t.MAGMA_STORM],[e.ETERNAL_FLOETTE]:[t.MIND_BLOWN,t.CHLOROBLAST,t.LUSTER_PURGE,t.QUIVER_DANCE],[e.ROWLET]:[t.THOUSAND_ARROWS,t.SHADOW_BONE,t.FIRST_IMPRESSION,t.VICTORY_DANCE],[e.LITTEN]:[t.SUCKER_PUNCH,t.PARTING_SHOT,t.SLACK_OFF,t.SACRED_FIRE],[e.POPPLIO]:[t.PSYCHIC_NOISE,t.BOUNCY_BUBBLE,t.OVERDRIVE,t.TORCH_SONG],[e.PIKIPEK]:[t.DUAL_WINGBEAT,t.BONE_RUSH,t.BURNING_BULWARK,t.POPULATION_BOMB],[e.YUNGOOS]:[t.EXTREME_SPEED,t.KNOCK_OFF,t.TIDY_UP,t.MULTI_ATTACK],[e.GRUBBIN]:[t.ICE_BEAM,t.EARTH_POWER,t.THUNDERCLAP,t.QUIVER_DANCE],[e.CRABRAWLER]:[t.JET_PUNCH,t.SHORE_UP,t.SUCKER_PUNCH,t.SURGING_STRIKES],[e.ORICORIO]:[t.QUIVER_DANCE,t.FIERY_DANCE,t.THUNDERCLAP,t.OBLIVION_WING],[e.CUTIEFLY]:[t.STICKY_WEB,t.SLEEP_POWDER,t.HEAT_WAVE,t.SPARKLY_SWIRL],[e.ROCKRUFF]:[t.HIGH_HORSEPOWER,t.TIDY_UP,t.ICE_SPINNER,t.MIGHTY_CLEAVE],[e.WISHIWASHI]:[t.HEAL_ORDER,t.FREEZE_DRY,t.WATER_SHURIKEN,t.TAIL_GLOW],[e.MAREANIE]:[t.CEASELESS_EDGE,t.SIZZLY_SLIDE,t.BODY_PRESS,t.LEECH_SEED],[e.MUDBRAY]:[t.BODY_PRESS,t.YAWN,t.SHORE_UP,t.THOUSAND_WAVES],[e.DEWPIDER]:[t.JET_PUNCH,t.SILK_TRAP,t.SWORDS_DANCE,t.AQUA_STEP],[e.FOMANTIS]:[t.SUPERPOWER,t.HEADLONG_RUSH,t.ICE_HAMMER,t.BITTER_BLADE],[e.MORELULL]:[t.CALM_MIND,t.SAPPY_SEED,t.DRAINING_KISS,t.MATCHA_GOTCHA],[e.SALANDIT]:[t.SCALD,t.SLUDGE_WAVE,t.CORE_ENFORCER,t.ERUPTION],[e.STUFFUL]:[t.DRAIN_PUNCH,t.METEOR_MASH,t.TRIPLE_AXEL,t.RAGE_FIST],[e.BOUNSWEET]:[t.TRIPLE_AXEL,t.AQUA_STEP,t.THUNDEROUS_KICK,t.SAPPY_SEED],[e.COMFEY]:[t.REVIVAL_BLESSING,t.TAKE_HEART,t.STRENGTH_SAP,t.MATCHA_GOTCHA],[e.ORANGURU]:[t.JUNGLE_HEALING,t.YAWN,t.FOLLOW_ME,t.LUMINA_CRASH],[e.PASSIMIAN]:[t.PYRO_BALL,t.SUCKER_PUNCH,t.ZING_ZAP,t.VICTORY_DANCE],[e.WIMPOD]:[t.TRIPLE_AXEL,t.OBSTRUCT,t.JET_PUNCH,t.SURGING_STRIKES],[e.SANDYGAST]:[t.BITTER_MALICE,t.SPLISHY_SPLASH,t.TAKE_HEART,t.SALT_CURE],[e.PYUKUMUKU]:[t.COMEUPPANCE,t.BANEFUL_BUNKER,t.TOXIC_SPIKES,t.SALT_CURE],[e.TYPE_NULL]:[t.DIRE_CLAW,t.RECOVER,t.COMBAT_TORQUE,t.NO_RETREAT],[e.MINIOR]:[t.EARTH_POWER,t.FLOATY_FALL,t.ZING_ZAP,t.DIAMOND_STORM],[e.KOMALA]:[t.SLACK_OFF,t.EXTREME_SPEED,t.KNOCK_OFF,t.COLLISION_COURSE],[e.TURTONATOR]:[t.BURNING_BULWARK,t.MORNING_SUN,t.BODY_PRESS,t.CORE_ENFORCER],[e.TOGEDEMARU]:[t.FAKE_OUT,t.METAL_BURST,t.METEOR_MASH,t.AURA_WHEEL],[e.MIMIKYU]:[t.SPIRIT_BREAK,t.TIDY_UP,t.FIRE_LASH,t.SPECTRAL_THIEF],[e.BRUXISH]:[t.PLAY_ROUGH,t.FIRE_FANG,t.DRAGON_DANCE,t.SURGING_STRIKES],[e.DRAMPA]:[t.SLACK_OFF,t.TRICK_ROOM,t.CORE_ENFORCER,t.BOOMBURST],[e.DHELMISE]:[t.SHADOW_BONE,t.IVY_CUDGEL,t.TRIPLE_DIVE,t.STRENGTH_SAP],[e.JANGMO_O]:[t.BODY_PRESS,t.SHELL_SIDE_ARM,t.SECRET_SWORD,t.GLAIVE_RUSH],[e.TAPU_KOKO]:[t.MAGICAL_TORQUE,t.TRIPLE_AXEL,t.SWORDS_DANCE,t.BOLT_STRIKE],[e.TAPU_LELE]:[t.MOONLIGHT,t.NASTY_PLOT,t.HEAT_WAVE,t.EXPANDING_FORCE],[e.TAPU_BULU]:[t.SAPPY_SEED,t.DRAIN_PUNCH,t.MAGICAL_TORQUE,t.VICTORY_DANCE],[e.TAPU_FINI]:[t.AURA_SPHERE,t.EARTH_POWER,t.RECOVER,t.QUIVER_DANCE],[e.COSMOG]:[t.PHOTON_GEYSER,t.PRECIPICE_BLADES,t.SACRED_FIRE,t.ASTRAL_BARRAGE],[e.NIHILEGO]:[t.STRENGTH_SAP,t.MALIGNANT_CHAIN,t.EARTH_POWER,t.QUIVER_DANCE],[e.BUZZWOLE]:[t.FIRST_IMPRESSION,t.COMBAT_TORQUE,t.ROCK_BLAST,t.DOUBLE_IRON_BASH],[e.PHEROMOSA]:[t.SECRET_SWORD,t.MAKE_IT_RAIN,t.ATTACK_ORDER,t.DIAMOND_STORM],[e.XURKITREE]:[t.FLAMETHROWER,t.GIGA_DRAIN,t.TAIL_GLOW,t.THUNDERCLAP],[e.CELESTEELA]:[t.RECOVER,t.BUZZY_BUZZ,t.SANDSEAR_STORM,t.OBLIVION_WING],[e.KARTANA]:[t.MIGHTY_CLEAVE,t.PSYBLADE,t.BITTER_BLADE,t.BEHEMOTH_BLADE],[e.GUZZLORD]:[t.SUCKER_PUNCH,t.COMEUPPANCE,t.SLACK_OFF,t.SHED_TAIL],[e.NECROZMA]:[t.DYNAMAX_CANNON,t.SACRED_FIRE,t.ASTRAL_BARRAGE,t.CLANGOROUS_SOUL],[e.MAGEARNA]:[t.STRENGTH_SAP,t.EARTH_POWER,t.MOONBLAST,t.MAKE_IT_RAIN],[e.MARSHADOW]:[t.POWER_UP_PUNCH,t.TRIPLE_AXEL,t.METEOR_MASH,t.STORM_THROW],[e.POIPOLE]:[t.MALIGNANT_CHAIN,t.ICE_BEAM,t.ARMOR_CANNON,t.CLANGING_SCALES],[e.STAKATAKA]:[t.HEAVY_SLAM,t.SHORE_UP,t.CURSE,t.SALT_CURE],[e.BLACEPHALON]:[t.STEEL_BEAM,t.MOONBLAST,t.CHLOROBLAST,t.MOONGEIST_BEAM],[e.ZERAORA]:[t.SWORDS_DANCE,t.TRIPLE_AXEL,t.BOLT_STRIKE,t.PYRO_BALL],[e.MELTAN]:[t.BULLET_PUNCH,t.DRAIN_PUNCH,t.BULK_UP,t.PLASMA_FISTS],[e.ALOLA_RATTATA]:[t.FALSE_SURRENDER,t.PSYCHIC_FANGS,t.COIL,t.EXTREME_SPEED],[e.ALOLA_SANDSHREW]:[t.SPIKY_SHIELD,t.AQUA_CUTTER,t.SHIFT_GEAR,t.GLACIAL_LANCE],[e.ALOLA_VULPIX]:[t.MOONBLAST,t.PARTING_SHOT,t.EARTH_POWER,t.REVIVAL_BLESSING],[e.ALOLA_DIGLETT]:[t.THOUSAND_WAVES,t.SWORDS_DANCE,t.TRIPLE_DIVE,t.MOUNTAIN_GALE],[e.ALOLA_MEOWTH]:[t.BADDY_BAD,t.BUZZY_BUZZ,t.PARTING_SHOT,t.MAKE_IT_RAIN],[e.ALOLA_GEODUDE]:[t.THOUSAND_WAVES,t.BULK_UP,t.STONE_AXE,t.EXTREME_SPEED],[e.ALOLA_GRIMER]:[t.SUCKER_PUNCH,t.BARB_BARRAGE,t.RECOVER,t.SURGING_STRIKES],[e.GROOKEY]:[t.HIGH_HORSEPOWER,t.CLANGOROUS_SOUL,t.GRASSY_GLIDE,t.SAPPY_SEED],[e.SCORBUNNY]:[t.EXTREME_SPEED,t.HIGH_JUMP_KICK,t.TRIPLE_AXEL,t.BOLT_STRIKE],[e.SOBBLE]:[t.AEROBLAST,t.FROST_BREATH,t.ENERGY_BALL,t.NASTY_PLOT],[e.SKWOVET]:[t.SUCKER_PUNCH,t.SLACK_OFF,t.COIL,t.POPULATION_BOMB],[e.ROOKIDEE]:[t.ROOST,t.BODY_PRESS,t.KINGS_SHIELD,t.BEHEMOTH_BASH],[e.BLIPBUG]:[t.HEAL_ORDER,t.LUSTER_PURGE,t.SLEEP_POWDER,t.TAIL_GLOW],[e.NICKIT]:[t.BADDY_BAD,t.FLAMETHROWER,t.SPARKLY_SWIRL,t.MAKE_IT_RAIN],[e.GOSSIFLEUR]:[t.PARTING_SHOT,t.STRENGTH_SAP,t.SAPPY_SEED,t.SEED_FLARE],[e.WOOLOO]:[t.PSYSHIELD_BASH,t.MILK_DRINK,t.BODY_PRESS,t.MULTI_ATTACK],[e.CHEWTLE]:[t.ICE_FANG,t.PSYCHIC_FANGS,t.SHELL_SMASH,t.MIGHTY_CLEAVE],[e.YAMPER]:[t.ICE_FANG,t.SWORDS_DANCE,t.THUNDER_FANG,t.BOLT_STRIKE],[e.ROLYCOLY]:[t.BITTER_BLADE,t.BODY_PRESS,t.BULK_UP,t.DIAMOND_STORM],[e.APPLIN]:[t.CORE_ENFORCER,t.DRAGON_HAMMER,t.FLOWER_TRICK,t.MATCHA_GOTCHA],[e.SILICOBRA]:[t.SHORE_UP,t.SHED_TAIL,t.MOUNTAIN_GALE,t.THOUSAND_ARROWS],[e.CRAMORANT]:[t.APPLE_ACID,t.SURF,t.SCORCHING_SANDS,t.OBLIVION_WING],[e.ARROKUDA]:[t.SUPERCELL_SLAM,t.TRIPLE_DIVE,t.ICE_SPINNER,t.SWORDS_DANCE],[e.TOXEL]:[t.NASTY_PLOT,t.BUG_BUZZ,t.SPARKLING_ARIA,t.TORCH_SONG],[e.SIZZLIPEDE]:[t.BURNING_BULWARK,t.ZING_ZAP,t.FIRST_IMPRESSION,t.BITTER_BLADE],[e.CLOBBOPUS]:[t.STORM_THROW,t.JET_PUNCH,t.MACH_PUNCH,t.SURGING_STRIKES],[e.SINISTEA]:[t.SCALD,t.TAKE_HEART,t.SPARKLY_SWIRL,t.MATCHA_GOTCHA],[e.HATENNA]:[t.RECOVER,t.MOONBLAST,t.BUZZY_BUZZ,t.TORCH_SONG],[e.IMPIDIMP]:[t.ENCORE,t.PARTING_SHOT,t.TOPSY_TURVY,t.WICKED_BLOW],[e.MILCERY]:[t.MOONBLAST,t.CHILLY_RECEPTION,t.EARTH_POWER,t.GEOMANCY],[e.FALINKS]:[t.COMBAT_TORQUE,t.PSYSHIELD_BASH,t.HEAL_ORDER,t.POPULATION_BOMB],[e.PINCURCHIN]:[t.TRICK_ROOM,t.VOLT_SWITCH,t.STRENGTH_SAP,t.THUNDERCLAP],[e.SNOM]:[t.FROST_BREATH,t.HEAL_ORDER,t.EARTH_POWER,t.SPORE],[e.STONJOURNER]:[t.BODY_PRESS,t.HELPING_HAND,t.ACCELEROCK,t.DIAMOND_STORM],[e.EISCUE]:[t.TRIPLE_AXEL,t.AQUA_STEP,t.AXE_KICK,t.SHELL_SMASH],[e.INDEEDEE]:[t.MATCHA_GOTCHA,t.EXPANDING_FORCE,t.MOONBLAST,t.REVIVAL_BLESSING],[e.MORPEKO]:[t.TRIPLE_AXEL,t.OBSTRUCT,t.SWORDS_DANCE,t.COLLISION_COURSE],[e.CUFANT]:[t.LIQUIDATION,t.CURSE,t.COMBAT_TORQUE,t.GIGATON_HAMMER],[e.DRACOZOLT]:[t.TRIPLE_AXEL,t.GUNK_SHOT,t.FIRE_LASH,t.DRAGON_DANCE],[e.ARCTOZOLT]:[t.MOUNTAIN_GALE,t.AQUA_STEP,t.HIGH_HORSEPOWER,t.SHIFT_GEAR],[e.DRACOVISH]:[t.TRIPLE_AXEL,t.DRAGON_HAMMER,t.THUNDER_FANG,t.DRAGON_DANCE],[e.ARCTOVISH]:[t.ICE_FANG,t.THUNDER_FANG,t.HIGH_HORSEPOWER,t.SHIFT_GEAR],[e.DURALUDON]:[t.CORE_ENFORCER,t.BODY_PRESS,t.RECOVER,t.TACHYON_CUTTER],[e.DREEPY]:[t.SHADOW_BONE,t.POWER_UP_PUNCH,t.FIRE_LASH,t.DIRE_CLAW],[e.ZACIAN]:[t.MAGICAL_TORQUE,t.MIGHTY_CLEAVE,t.BITTER_BLADE,t.PRECIPICE_BLADES],[e.ZAMAZENTA]:[t.BULK_UP,t.BODY_PRESS,t.SLACK_OFF,t.DIAMOND_STORM],[e.ETERNATUS]:[t.BODY_PRESS,t.NASTY_PLOT,t.MALIGNANT_CHAIN,t.DRAGON_ENERGY],[e.KUBFU]:[t.METEOR_MASH,t.DRAIN_PUNCH,t.JET_PUNCH,t.DRAGON_DANCE],[e.ZARUDE]:[t.SAPPY_SEED,t.MIGHTY_CLEAVE,t.WICKED_BLOW,t.VICTORY_DANCE],[e.REGIELEKI]:[t.NASTY_PLOT,t.ICE_BEAM,t.EARTH_POWER,t.ELECTRO_DRIFT],[e.REGIDRAGO]:[t.METEOR_MASH,t.FLAMETHROWER,t.TAKE_HEART,t.DRAGON_DARTS],[e.GLASTRIER]:[t.SPEED_SWAP,t.SLACK_OFF,t.HIGH_HORSEPOWER,t.GLACIAL_LANCE],[e.SPECTRIER]:[t.EARTH_POWER,t.PARTING_SHOT,t.AURA_SPHERE,t.ASTRAL_BARRAGE],[e.CALYREX]:[t.SAPPY_SEED,t.RECOVER,t.SECRET_SWORD,t.PHOTON_GEYSER],[e.ENAMORUS]:[t.AEROBLAST,t.THOUSAND_ARROWS,t.STORED_POWER,t.FLEUR_CANNON],[e.GALAR_MEOWTH]:[t.LIQUIDATION,t.HORN_LEECH,t.BULLET_PUNCH,t.BEHEMOTH_BASH],[e.GALAR_PONYTA]:[t.MAGICAL_TORQUE,t.EXTREME_SPEED,t.FLARE_BLITZ,t.PHOTON_GEYSER],[e.GALAR_SLOWPOKE]:[t.SHED_TAIL,t.BADDY_BAD,t.MOONBLAST,t.PHOTON_GEYSER],[e.GALAR_FARFETCHD]:[t.ROOST,t.SACRED_SWORD,t.KINGS_SHIELD,t.BEHEMOTH_BLADE],[e.GALAR_ARTICUNO]:[t.SECRET_SWORD,t.NIGHT_DAZE,t.ICE_BEAM,t.OBLIVION_WING],[e.GALAR_ZAPDOS]:[t.TIDY_UP,t.FLOATY_FALL,t.ROOST,t.BOLT_BEAK],[e.GALAR_MOLTRES]:[t.ROOST,t.SLUDGE_BOMB,t.FLAMETHROWER,t.OBLIVION_WING],[e.GALAR_CORSOLA]:[t.SHELL_SMASH,t.AURA_SPHERE,t.INFERNAL_PARADE,t.ASTRAL_BARRAGE],[e.GALAR_ZIGZAGOON]:[t.CEASELESS_EDGE,t.FACADE,t.PARTING_SHOT,t.EXTREME_SPEED],[e.GALAR_DARUMAKA]:[t.ICE_SPINNER,t.ZING_ZAP,t.DRAIN_PUNCH,t.PYRO_BALL],[e.GALAR_YAMASK]:[t.STRENGTH_SAP,t.DIRE_CLAW,t.THOUSAND_WAVES,t.SPECTRAL_THIEF],[e.GALAR_STUNFISK]:[t.SPIKY_SHIELD,t.THOUSAND_ARROWS,t.STRENGTH_SAP,t.DOUBLE_IRON_BASH],[e.HISUI_GROWLITHE]:[t.WAVE_CRASH,t.HEAD_SMASH,t.VOLT_TACKLE,t.DRAGON_DANCE],[e.HISUI_VOLTORB]:[t.FROST_BREATH,t.NASTY_PLOT,t.APPLE_ACID,t.ELECTRO_DRIFT],[e.HISUI_QWILFISH]:[t.CEASELESS_EDGE,t.KNOCK_OFF,t.RECOVER,t.FISHIOUS_REND],[e.HISUI_SNEASEL]:[t.DRAIN_PUNCH,t.KNOCK_OFF,t.PSYCHIC_FANGS,t.TRIPLE_AXEL],[e.HISUI_ZORUA]:[t.MOONBLAST,t.HYPER_VOICE,t.PARTING_SHOT,t.BLOOD_MOON],[e.SPRIGATITO]:[t.FIRE_LASH,t.TRIPLE_AXEL,t.SUCKER_PUNCH,t.WICKED_BLOW],[e.FUECOCO]:[t.ALLURING_VOICE,t.SLACK_OFF,t.OVERDRIVE,t.MOONGEIST_BEAM],[e.QUAXLY]:[t.DRAGON_DANCE,t.TRIPLE_AXEL,t.POWER_TRIP,t.THUNDEROUS_KICK],[e.LECHONK]:[t.MILK_DRINK,t.PSYSHIELD_BASH,t.FILLET_AWAY,t.MULTI_ATTACK],[e.TAROUNTULA]:[t.STONE_AXE,t.LEECH_LIFE,t.THIEF,t.SPORE],[e.NYMBLE]:[t.KNOCK_OFF,t.FELL_STINGER,t.ATTACK_ORDER,t.WICKED_BLOW],[e.PAWMI]:[t.DRAIN_PUNCH,t.METEOR_MASH,t.JET_PUNCH,t.PLASMA_FISTS],[e.TANDEMAUS]:[t.BATON_PASS,t.COVET,t.SIZZLY_SLIDE,t.REVIVAL_BLESSING],[e.FIDOUGH]:[t.SOFT_BOILED,t.HIGH_HORSEPOWER,t.SIZZLY_SLIDE,t.TIDY_UP],[e.SMOLIV]:[t.STRENGTH_SAP,t.EARTH_POWER,t.CALM_MIND,t.BOOMBURST],[e.SQUAWKABILLY]:[t.PARTING_SHOT,t.EARTHQUAKE,t.FLARE_BLITZ,t.EXTREME_SPEED],[e.NACLI]:[t.BODY_PRESS,t.TOXIC,t.CURSE,t.DIAMOND_STORM],[e.CHARCADET]:[t.SACRED_SWORD,t.PHOTON_GEYSER,t.MOONBLAST,t.SPECTRAL_THIEF],[e.TADBULB]:[t.PARABOLIC_CHARGE,t.SCALD,t.EARTH_POWER,t.ELECTRO_SHOT],[e.WATTREL]:[t.NASTY_PLOT,t.SPLISHY_SPLASH,t.SANDSEAR_STORM,t.ELECTRO_SHOT],[e.MASCHIFF]:[t.PARTING_SHOT,t.CLOSE_COMBAT,t.PSYCHIC_FANGS,t.NO_RETREAT],[e.SHROODLE]:[t.GASTRO_ACID,t.PARTING_SHOT,t.TOXIC,t.SKETCH],[e.BRAMBLIN]:[t.TAILWIND,t.STRENGTH_SAP,t.FLOWER_TRICK,t.LAST_RESPECTS],[e.TOEDSCOOL]:[t.STRENGTH_SAP,t.TOPSY_TURVY,t.SAPPY_SEED,t.TAIL_GLOW],[e.KLAWF]:[t.CRABHAMMER,t.SHORE_UP,t.MIGHTY_CLEAVE,t.SHELL_SMASH],[e.CAPSAKID]:[t.STRENGTH_SAP,t.APPLE_ACID,t.FROST_BREATH,t.TORCH_SONG],[e.RELLOR]:[t.HEAL_BLOCK,t.RECOVER,t.HEAT_WAVE,t.LUMINA_CRASH],[e.FLITTLE]:[t.COSMIC_POWER,t.AURA_SPHERE,t.ROOST,t.FIERY_DANCE],[e.TINKATINK]:[t.MAGICAL_TORQUE,t.PYRO_BALL,t.IVY_CUDGEL,t.SHIFT_GEAR],[e.WIGLETT]:[t.SHELL_SMASH,t.ICICLE_CRASH,t.SEED_BOMB,t.SURGING_STRIKES],[e.BOMBIRDIER]:[t.FLOATY_FALL,t.SWORDS_DANCE,t.SUCKER_PUNCH,t.MIGHTY_CLEAVE],[e.FINIZEN]:[t.TRIPLE_AXEL,t.DRAIN_PUNCH,t.HEADLONG_RUSH,t.SURGING_STRIKES],[e.VAROOM]:[t.COMBAT_TORQUE,t.U_TURN,t.BLAZING_TORQUE,t.NOXIOUS_TORQUE],[e.CYCLIZAR]:[t.PARTING_SHOT,t.FIRE_LASH,t.MAGICAL_TORQUE,t.GLAIVE_RUSH],[e.ORTHWORM]:[t.SIZZLY_SLIDE,t.COIL,t.BODY_PRESS,t.SHORE_UP],[e.GLIMMET]:[t.CALM_MIND,t.EARTH_POWER,t.FIERY_DANCE,t.MALIGNANT_CHAIN],[e.GREAVARD]:[t.SHADOW_BONE,t.YAWN,t.SHORE_UP,t.COLLISION_COURSE],[e.FLAMIGO]:[t.THUNDEROUS_KICK,t.TRIPLE_AXEL,t.FLOATY_FALL,t.VICTORY_DANCE],[e.CETODDLE]:[t.MOUNTAIN_GALE,t.HIGH_HORSEPOWER,t.SLACK_OFF,t.DRAGON_DANCE],[e.VELUZA]:[t.PSYBLADE,t.FLIP_TURN,t.ICE_SPINNER,t.BITTER_BLADE],[e.DONDOZO]:[t.SOFT_BOILED,t.SIZZLY_SLIDE,t.BREAKING_SWIPE,t.SALT_CURE],[e.TATSUGIRI]:[t.SLUDGE_BOMB,t.FILLET_AWAY,t.CORE_ENFORCER,t.STEAM_ERUPTION],[e.GREAT_TUSK]:[t.STONE_AXE,t.MORNING_SUN,t.COLLISION_COURSE,t.SHIFT_GEAR],[e.SCREAM_TAIL]:[t.TORCH_SONG,t.GLITZY_GLOW,t.MOONLIGHT,t.SPARKLY_SWIRL],[e.BRUTE_BONNET]:[t.SAPPY_SEED,t.STRENGTH_SAP,t.EARTHQUAKE,t.WICKED_BLOW],[e.FLUTTER_MANE]:[t.MOONLIGHT,t.NASTY_PLOT,t.EARTH_POWER,t.MOONGEIST_BEAM],[e.SLITHER_WING]:[t.MIGHTY_CLEAVE,t.THUNDEROUS_KICK,t.FIRE_LASH,t.VICTORY_DANCE],[e.SANDY_SHOCKS]:[t.MORNING_SUN,t.ICE_BEAM,t.NASTY_PLOT,t.THUNDERCLAP],[e.IRON_TREADS]:[t.FUSION_BOLT,t.BULK_UP,t.SHORE_UP,t.SUNSTEEL_STRIKE],[e.IRON_BUNDLE]:[t.EARTH_POWER,t.BOUNCY_BUBBLE,t.NASTY_PLOT,t.STEAM_ERUPTION],[e.IRON_HANDS]:[t.DRAIN_PUNCH,t.BULK_UP,t.PLASMA_FISTS,t.ICE_HAMMER],[e.IRON_JUGULIS]:[t.FIERY_WRATH,t.ROOST,t.NASTY_PLOT,t.OBLIVION_WING],[e.IRON_MOTH]:[t.EARTH_POWER,t.SEARING_SHOT,t.MALIGNANT_CHAIN,t.QUIVER_DANCE],[e.IRON_THORNS]:[t.DIAMOND_STORM,t.SHORE_UP,t.SHIFT_GEAR,t.PLASMA_FISTS],[e.FRIGIBAX]:[t.BEHEMOTH_BLADE,t.DRAGON_DANCE,t.MOUNTAIN_GALE,t.PRECIPICE_BLADES],[e.GIMMIGHOUL]:[t.HAPPY_HOUR,t.AURA_SPHERE,t.SURF,t.ASTRAL_BARRAGE],[e.WO_CHIEN]:[t.SPORE,t.FIERY_WRATH,t.SAPPY_SEED,t.STRENGTH_SAP],[e.CHIEN_PAO]:[t.KNOCK_OFF,t.PARTING_SHOT,t.TRIPLE_AXEL,t.BITTER_BLADE],[e.TING_LU]:[t.SHORE_UP,t.CEASELESS_EDGE,t.SAPPY_SEED,t.PRECIPICE_BLADES],[e.CHI_YU]:[t.FIERY_WRATH,t.HYDRO_STEAM,t.MORNING_SUN,t.BLUE_FLARE],[e.ROARING_MOON]:[t.FIRE_LASH,t.DRAGON_HAMMER,t.SUCKER_PUNCH,t.WICKED_BLOW],[e.IRON_VALIANT]:[t.PLASMA_FISTS,t.NO_RETREAT,t.SECRET_SWORD,t.MAGICAL_TORQUE],[e.KORAIDON]:[t.SUNSTEEL_STRIKE,t.SOLAR_BLADE,t.DRAGON_DARTS,t.BITTER_BLADE],[e.MIRAIDON]:[t.ICE_BEAM,t.CLANGOROUS_SOUL,t.CORE_ENFORCER,t.RISING_VOLTAGE],[e.WALKING_WAKE]:[t.BOUNCY_BUBBLE,t.NASTY_PLOT,t.SLUDGE_WAVE,t.CORE_ENFORCER],[e.IRON_LEAVES]:[t.BITTER_BLADE,t.U_TURN,t.MIGHTY_CLEAVE,t.VICTORY_DANCE],[e.POLTCHAGEIST]:[t.PARABOLIC_CHARGE,t.BOUNCY_BUBBLE,t.LEECH_SEED,t.SPARKLY_SWIRL],[e.OKIDOGI]:[t.COMBAT_TORQUE,t.TIDY_UP,t.DIRE_CLAW,t.WICKED_BLOW],[e.MUNKIDORI]:[t.PSYSTRIKE,t.HEAT_WAVE,t.EARTH_POWER,t.MALIGNANT_CHAIN],[e.FEZANDIPITI]:[t.BARB_BARRAGE,t.BONEMERANG,t.TRIPLE_AXEL,t.VICTORY_DANCE],[e.OGERPON]:[t.SLEEP_POWDER,t.BONEMERANG,t.TRIPLE_AXEL,t.FLOWER_TRICK],[e.GOUGING_FIRE]:[t.EXTREME_SPEED,t.BULK_UP,t.SACRED_FIRE,t.GLAIVE_RUSH],[e.RAGING_BOLT]:[t.NASTY_PLOT,t.FLAMETHROWER,t.MORNING_SUN,t.ELECTRO_DRIFT],[e.IRON_BOULDER]:[t.PSYBLADE,t.KOWTOW_CLEAVE,t.STONE_AXE,t.BITTER_BLADE],[e.IRON_CROWN]:[t.NASTY_PLOT,t.SECRET_SWORD,t.PSYSTRIKE,t.ELECTRO_DRIFT],[e.TERAPAGOS]:[t.MOONBLAST,t.RECOVER,t.ICE_BEAM,t.SHELL_SMASH],[e.PECHARUNT]:[t.TAKE_HEART,t.BODY_PRESS,t.SAPPY_SEED,t.KINGS_SHIELD],[e.PALDEA_TAUROS]:[t.NO_RETREAT,t.BLAZING_TORQUE,t.AQUA_STEP,t.THUNDEROUS_KICK],[e.PALDEA_WOOPER]:[t.STONE_AXE,t.RECOVER,t.BANEFUL_BUNKER,t.BARB_BARRAGE],[e.BLOODMOON_URSALUNA]:[t.NASTY_PLOT,t.ROCK_POLISH,t.SANDSEAR_STORM,t.BOOMBURST]},X=-1,Ee=0,B_={[e.BULBASAUR]:[[1,t.TACKLE],[1,t.GROWL],[3,t.VINE_WHIP],[6,t.GROWTH],[9,t.LEECH_SEED],[12,t.RAZOR_LEAF],[15,t.POISON_POWDER],[15,t.SLEEP_POWDER],[18,t.SEED_BOMB],[21,t.TAKE_DOWN],[24,t.SWEET_SCENT],[27,t.SYNTHESIS],[30,t.WORRY_SEED],[33,t.POWER_WHIP],[36,t.SOLAR_BEAM]],[e.IVYSAUR]:[[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.GROWL],[1,t.GROWTH],[9,t.LEECH_SEED],[12,t.RAZOR_LEAF],[15,t.POISON_POWDER],[15,t.SLEEP_POWDER],[20,t.SEED_BOMB],[25,t.TAKE_DOWN],[30,t.SWEET_SCENT],[35,t.SYNTHESIS],[40,t.WORRY_SEED],[45,t.POWER_WHIP],[50,t.SOLAR_BEAM]],[e.VENUSAUR]:[[Ee,t.PETAL_BLIZZARD],[1,t.GROWTH],[1,t.PETAL_DANCE],[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.GROWL],[9,t.LEECH_SEED],[12,t.RAZOR_LEAF],[15,t.POISON_POWDER],[15,t.SLEEP_POWDER],[20,t.SEED_BOMB],[25,t.TAKE_DOWN],[30,t.SWEET_SCENT],[37,t.SYNTHESIS],[44,t.WORRY_SEED],[51,t.POWER_WHIP],[58,t.SOLAR_BEAM]],[e.CHARMANDER]:[[1,t.SCRATCH],[1,t.GROWL],[4,t.EMBER],[8,t.SMOKESCREEN],[12,t.DRAGON_BREATH],[17,t.FIRE_FANG],[20,t.SLASH],[24,t.FLAMETHROWER],[28,t.SCARY_FACE],[32,t.FIRE_SPIN],[36,t.INFERNO],[40,t.FLARE_BLITZ]],[e.CHARMELEON]:[[1,t.SCRATCH],[1,t.GROWL],[1,t.EMBER],[1,t.SMOKESCREEN],[1,t.FIRE_SPIN],[12,t.DRAGON_BREATH],[19,t.FIRE_FANG],[24,t.SLASH],[30,t.FLAMETHROWER],[37,t.SCARY_FACE],[48,t.INFERNO],[54,t.FLARE_BLITZ]],[e.CHARIZARD]:[[Ee,t.AIR_SLASH],[1,t.SCRATCH],[1,t.GROWL],[1,t.EMBER],[1,t.SMOKESCREEN],[1,t.HEAT_WAVE],[1,t.DRAGON_CLAW],[12,t.DRAGON_BREATH],[19,t.FIRE_FANG],[24,t.SLASH],[30,t.FLAMETHROWER],[39,t.SCARY_FACE],[46,t.FIRE_SPIN],[54,t.INFERNO],[62,t.FLARE_BLITZ]],[e.SQUIRTLE]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[3,t.WATER_GUN],[6,t.WITHDRAW],[9,t.RAPID_SPIN],[12,t.BITE],[15,t.WATER_PULSE],[18,t.PROTECT],[21,t.RAIN_DANCE],[24,t.AQUA_TAIL],[27,t.SHELL_SMASH],[30,t.IRON_DEFENSE],[33,t.HYDRO_PUMP],[36,t.WAVE_CRASH]],[e.WARTORTLE]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.WITHDRAW],[9,t.RAPID_SPIN],[12,t.BITE],[15,t.WATER_PULSE],[20,t.PROTECT],[25,t.RAIN_DANCE],[30,t.AQUA_TAIL],[35,t.SHELL_SMASH],[40,t.IRON_DEFENSE],[45,t.HYDRO_PUMP],[50,t.WAVE_CRASH]],[e.BLASTOISE]:[[Ee,t.FLASH_CANNON],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.WITHDRAW],[9,t.RAPID_SPIN],[12,t.BITE],[15,t.WATER_PULSE],[20,t.PROTECT],[25,t.RAIN_DANCE],[30,t.AQUA_TAIL],[35,t.SHELL_SMASH],[42,t.IRON_DEFENSE],[49,t.HYDRO_PUMP],[56,t.WAVE_CRASH]],[e.CATERPIE]:[[1,t.TACKLE],[1,t.STRING_SHOT],[9,t.BUG_BITE]],[e.METAPOD]:[[Ee,t.HARDEN],[X,t.TACKLE],[X,t.STRING_SHOT],[X,t.BUG_BITE],[1,t.HARDEN]],[e.BUTTERFREE]:[[Ee,t.GUST],[1,t.TACKLE],[1,t.STRING_SHOT],[1,t.HARDEN],[1,t.BUG_BITE],[4,t.SUPERSONIC],[8,t.CONFUSION],[12,t.POISON_POWDER],[12,t.STUN_SPORE],[12,t.SLEEP_POWDER],[16,t.PSYBEAM],[20,t.WHIRLWIND],[24,t.AIR_SLASH],[28,t.SAFEGUARD],[32,t.BUG_BUZZ],[36,t.TAILWIND],[40,t.RAGE_POWDER],[44,t.QUIVER_DANCE]],[e.WEEDLE]:[[1,t.POISON_STING],[1,t.STRING_SHOT],[9,t.BUG_BITE]],[e.KAKUNA]:[[Ee,t.HARDEN],[X,t.POISON_STING],[X,t.STRING_SHOT],[X,t.BUG_BITE],[1,t.HARDEN]],[e.BEEDRILL]:[[Ee,t.TWINEEDLE],[1,t.POISON_STING],[1,t.STRING_SHOT],[1,t.HARDEN],[1,t.BUG_BITE],[1,t.FURY_ATTACK],[11,t.FURY_CUTTER],[14,t.RAGE],[17,t.PURSUIT],[20,t.FOCUS_ENERGY],[23,t.VENOSHOCK],[26,t.ASSURANCE],[29,t.TOXIC_SPIKES],[32,t.PIN_MISSILE],[35,t.POISON_JAB],[38,t.AGILITY],[41,t.ENDEAVOR],[44,t.FELL_STINGER]],[e.PIDGEY]:[[1,t.TACKLE],[5,t.SAND_ATTACK],[9,t.GUST],[13,t.QUICK_ATTACK],[17,t.WHIRLWIND],[21,t.TWISTER],[25,t.FEATHER_DANCE],[29,t.AGILITY],[33,t.WING_ATTACK],[37,t.ROOST],[41,t.TAILWIND],[45,t.AERIAL_ACE],[49,t.AIR_SLASH],[53,t.HURRICANE]],[e.PIDGEOTTO]:[[1,t.GUST],[1,t.SAND_ATTACK],[1,t.TACKLE],[5,t.SAND_ATTACK],[9,t.GUST],[13,t.QUICK_ATTACK],[17,t.WHIRLWIND],[22,t.TWISTER],[27,t.FEATHER_DANCE],[32,t.AGILITY],[37,t.WING_ATTACK],[42,t.ROOST],[47,t.TAILWIND],[52,t.AERIAL_ACE],[57,t.AIR_SLASH],[62,t.HURRICANE]],[e.PIDGEOT]:[[1,t.GUST],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.QUICK_ATTACK],[1,t.HURRICANE],[5,t.SAND_ATTACK],[9,t.GUST],[17,t.WHIRLWIND],[22,t.TWISTER],[27,t.FEATHER_DANCE],[32,t.AGILITY],[38,t.WING_ATTACK],[44,t.ROOST],[50,t.TAILWIND],[56,t.AERIAL_ACE],[62,t.AIR_SLASH],[68,t.HURRICANE]],[e.RATTATA]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[4,t.QUICK_ATTACK],[7,t.FOCUS_ENERGY],[10,t.BITE],[13,t.LASER_FOCUS],[16,t.TAKE_DOWN],[19,t.ASSURANCE],[22,t.CRUNCH],[25,t.SUCKER_PUNCH],[28,t.SUPER_FANG],[31,t.DOUBLE_EDGE],[34,t.ENDEAVOR]],[e.RATICATE]:[[Ee,t.SCARY_FACE],[1,t.SWORDS_DANCE],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.QUICK_ATTACK],[1,t.FOCUS_ENERGY],[10,t.BITE],[13,t.LASER_FOCUS],[16,t.TAKE_DOWN],[19,t.ASSURANCE],[24,t.CRUNCH],[29,t.SUCKER_PUNCH],[34,t.SUPER_FANG],[39,t.DOUBLE_EDGE],[44,t.ENDEAVOR]],[e.SPEAROW]:[[1,t.GROWL],[1,t.PECK],[4,t.LEER],[8,t.ASSURANCE],[11,t.FURY_ATTACK],[15,t.AERIAL_ACE],[18,t.WING_ATTACK],[22,t.TAKE_DOWN],[25,t.AGILITY],[29,t.FOCUS_ENERGY],[32,t.ROOST],[36,t.DRILL_PECK]],[e.FEAROW]:[[1,t.LEER],[1,t.GROWL],[1,t.PECK],[1,t.ASSURANCE],[1,t.PLUCK],[1,t.DRILL_RUN],[1,t.PURSUIT],[4,t.LEER],[8,t.ASSURANCE],[11,t.FURY_ATTACK],[15,t.AERIAL_ACE],[18,t.WING_ATTACK],[23,t.TAKE_DOWN],[27,t.AGILITY],[32,t.FOCUS_ENERGY],[36,t.ROOST],[41,t.DRILL_PECK]],[e.EKANS]:[[1,t.WRAP],[1,t.LEER],[4,t.POISON_STING],[9,t.BITE],[12,t.GLARE],[17,t.SCREECH],[20,t.ACID],[25,t.SWALLOW],[25,t.STOCKPILE],[25,t.SPIT_UP],[28,t.ACID_SPRAY],[33,t.SLUDGE_BOMB],[36,t.GASTRO_ACID],[38,t.BELCH],[41,t.HAZE],[44,t.COIL],[49,t.GUNK_SHOT]],[e.ARBOK]:[[Ee,t.CRUNCH],[1,t.WRAP],[1,t.POISON_STING],[1,t.LEER],[1,t.BITE],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[12,t.GLARE],[17,t.SCREECH],[20,t.ACID],[27,t.STOCKPILE],[27,t.SPIT_UP],[27,t.SWALLOW],[32,t.ACID_SPRAY],[39,t.SLUDGE_BOMB],[44,t.GASTRO_ACID],[48,t.BELCH],[51,t.HAZE],[56,t.COIL],[63,t.GUNK_SHOT]],[e.PIKACHU]:[[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.SPARK],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[44,t.THUNDER],[48,t.PIKA_PAPOW]],[e.RAICHU]:[[Ee,t.ZIPPY_ZAP],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.THUNDER_WAVE],[1,t.THUNDER],[1,t.AGILITY],[1,t.QUICK_ATTACK],[1,t.DOUBLE_TEAM],[1,t.LIGHT_SCREEN],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.SPARK],[1,t.IRON_TAIL],[1,t.FEINT],[1,t.NASTY_PLOT],[1,t.DISCHARGE],[1,t.ELECTRO_BALL],[1,t.PLAY_NICE],[1,t.NUZZLE],[1,t.THUNDER_PUNCH],[5,t.THUNDERBOLT],[50,t.PIKA_PAPOW]],[e.SANDSHREW]:[[1,t.SCRATCH],[1,t.DEFENSE_CURL],[3,t.POISON_STING],[6,t.SAND_ATTACK],[9,t.ROLLOUT],[12,t.FURY_CUTTER],[15,t.RAPID_SPIN],[18,t.BULLDOZE],[21,t.SWIFT],[24,t.FURY_SWIPES],[27,t.AGILITY],[30,t.SLASH],[33,t.DIG],[36,t.GYRO_BALL],[39,t.SWORDS_DANCE],[42,t.SANDSTORM],[45,t.EARTHQUAKE]],[e.SANDSLASH]:[[1,t.SCRATCH],[1,t.SAND_ATTACK],[1,t.POISON_STING],[1,t.DEFENSE_CURL],[1,t.CRUSH_CLAW],[1,t.AGILITY],[9,t.ROLLOUT],[12,t.FURY_CUTTER],[15,t.RAPID_SPIN],[18,t.BULLDOZE],[21,t.SWIFT],[26,t.FURY_SWIPES],[31,t.SAND_TOMB],[36,t.SLASH],[41,t.DIG],[46,t.GYRO_BALL],[51,t.SWORDS_DANCE],[56,t.SANDSTORM],[61,t.EARTHQUAKE]],[e.NIDORAN_F]:[[1,t.POISON_STING],[1,t.GROWL],[5,t.SCRATCH],[10,t.TAIL_WHIP],[15,t.FURY_SWIPES],[20,t.TOXIC_SPIKES],[25,t.DOUBLE_KICK],[30,t.BITE],[35,t.HELPING_HAND],[40,t.TOXIC],[45,t.FLATTER],[50,t.CRUNCH],[55,t.EARTH_POWER]],[e.NIDORINA]:[[1,t.SCRATCH],[1,t.TAIL_WHIP],[1,t.POISON_STING],[1,t.GROWL],[15,t.FURY_SWIPES],[22,t.TOXIC_SPIKES],[29,t.DOUBLE_KICK],[36,t.BITE],[43,t.HELPING_HAND],[50,t.TOXIC],[57,t.FLATTER],[64,t.CRUNCH],[71,t.EARTH_POWER]],[e.NIDOQUEEN]:[[Ee,t.SUPERPOWER],[1,t.SLUDGE_WAVE],[1,t.SCRATCH],[1,t.DOUBLE_KICK],[1,t.TAIL_WHIP],[1,t.POISON_STING],[1,t.BITE],[1,t.GROWL],[1,t.TOXIC],[1,t.FURY_SWIPES],[1,t.CRUNCH],[1,t.FLATTER],[1,t.HELPING_HAND],[1,t.TOXIC_SPIKES],[1,t.EARTH_POWER]],[e.NIDORAN_M]:[[1,t.POISON_STING],[1,t.LEER],[5,t.PECK],[10,t.FOCUS_ENERGY],[15,t.FURY_ATTACK],[20,t.TOXIC_SPIKES],[25,t.DOUBLE_KICK],[30,t.HORN_ATTACK],[35,t.HELPING_HAND],[40,t.TOXIC],[45,t.FLATTER],[50,t.POISON_JAB],[55,t.EARTH_POWER]],[e.NIDORINO]:[[1,t.POISON_STING],[1,t.LEER],[1,t.PECK],[1,t.FOCUS_ENERGY],[15,t.FURY_ATTACK],[22,t.TOXIC_SPIKES],[29,t.DOUBLE_KICK],[36,t.HORN_ATTACK],[43,t.HELPING_HAND],[50,t.TOXIC],[57,t.FLATTER],[64,t.POISON_JAB],[71,t.EARTH_POWER]],[e.NIDOKING]:[[Ee,t.MEGAHORN],[1,t.SLUDGE_WAVE],[1,t.DOUBLE_KICK],[1,t.HORN_ATTACK],[1,t.FURY_ATTACK],[1,t.POISON_STING],[1,t.LEER],[1,t.PECK],[1,t.TOXIC],[1,t.FOCUS_ENERGY],[1,t.FLATTER],[1,t.HELPING_HAND],[1,t.TOXIC_SPIKES],[1,t.POISON_JAB],[1,t.EARTH_POWER]],[e.CLEFAIRY]:[[1,t.POUND],[1,t.GROWL],[1,t.SING],[1,t.DEFENSE_CURL],[1,t.SPLASH],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.COPYCAT],[1,t.DISARMING_VOICE],[1,t.SPOTLIGHT],[4,t.STORED_POWER],[8,t.ENCORE],[12,t.AFTER_YOU],[16,t.LIFE_DEW],[20,t.METRONOME],[24,t.MOONLIGHT],[28,t.GRAVITY],[32,t.METEOR_MASH],[36,t.FOLLOW_ME],[40,t.COSMIC_POWER],[44,t.MOONBLAST],[48,t.HEALING_WISH]],[e.CLEFABLE]:[[X,t.POUND],[X,t.GROWL],[X,t.SING],[X,t.DEFENSE_CURL],[X,t.SPLASH],[X,t.SWEET_KISS],[X,t.CHARM],[X,t.ENCORE],[X,t.MOONLIGHT],[X,t.FOLLOW_ME],[X,t.COSMIC_POWER],[X,t.GRAVITY],[X,t.HEALING_WISH],[X,t.COPYCAT],[X,t.AFTER_YOU],[X,t.STORED_POWER],[X,t.DISARMING_VOICE],[1,t.METRONOME],[1,t.METEOR_MASH],[1,t.MOONBLAST],[1,t.LIFE_DEW],[1,t.SPOTLIGHT]],[e.VULPIX]:[[1,t.TAIL_WHIP],[1,t.EMBER],[4,t.DISABLE],[8,t.QUICK_ATTACK],[12,t.SPITE],[16,t.INCINERATE],[20,t.CONFUSE_RAY],[24,t.WILL_O_WISP],[28,t.EXTRASENSORY],[32,t.FLAMETHROWER],[36,t.IMPRISON],[40,t.FIRE_SPIN],[44,t.SAFEGUARD],[48,t.INFERNO],[52,t.FIRE_BLAST]],[e.NINETALES]:[[X,t.DISABLE],[X,t.EMBER],[X,t.FIRE_SPIN],[X,t.CONFUSE_RAY],[X,t.FIRE_BLAST],[X,t.SPITE],[X,t.SAFEGUARD],[X,t.WILL_O_WISP],[X,t.IMPRISON],[X,t.EXTRASENSORY],[X,t.NASTY_PLOT],[X,t.INCINERATE],[X,t.INFERNO],[1,t.FLAMETHROWER],[1,t.TAIL_WHIP],[1,t.QUICK_ATTACK]],[e.JIGGLYPUFF]:[[1,t.POUND],[1,t.SING],[1,t.DISABLE],[1,t.DEFENSE_CURL],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.COPYCAT],[1,t.DISARMING_VOICE],[4,t.ECHOED_VOICE],[8,t.COVET],[12,t.STOCKPILE],[12,t.SPIT_UP],[12,t.SWALLOW],[16,t.ROUND],[20,t.REST],[24,t.BODY_SLAM],[28,t.MIMIC],[32,t.GYRO_BALL],[36,t.HYPER_VOICE],[44,t.DOUBLE_EDGE]],[e.WIGGLYTUFF]:[[1,t.POUND],[1,t.BODY_SLAM],[1,t.DOUBLE_EDGE],[1,t.SING],[1,t.DISABLE],[1,t.MIMIC],[1,t.DEFENSE_CURL],[1,t.REST],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.STOCKPILE],[1,t.SPIT_UP],[1,t.SWALLOW],[1,t.HYPER_VOICE],[1,t.COVET],[1,t.GYRO_BALL],[1,t.COPYCAT],[1,t.ROUND],[1,t.ECHOED_VOICE],[1,t.DISARMING_VOICE],[5,t.PLAY_ROUGH]],[e.ZUBAT]:[[1,t.SUPERSONIC],[1,t.ABSORB],[5,t.ASTONISH],[10,t.MEAN_LOOK],[15,t.POISON_FANG],[20,t.QUICK_GUARD],[25,t.AIR_CUTTER],[30,t.BITE],[35,t.HAZE],[40,t.VENOSHOCK],[45,t.CONFUSE_RAY],[50,t.AIR_SLASH],[55,t.LEECH_LIFE]],[e.GOLBAT]:[[1,t.SUPERSONIC],[1,t.ABSORB],[1,t.SCREECH],[1,t.MEAN_LOOK],[1,t.ASTONISH],[15,t.POISON_FANG],[20,t.QUICK_GUARD],[27,t.AIR_CUTTER],[34,t.BITE],[41,t.HAZE],[48,t.VENOSHOCK],[55,t.CONFUSE_RAY],[62,t.AIR_SLASH],[69,t.LEECH_LIFE]],[e.ODDISH]:[[1,t.ABSORB],[1,t.GROWTH],[4,t.ACID],[8,t.SWEET_SCENT],[12,t.MEGA_DRAIN],[14,t.POISON_POWDER],[16,t.STUN_SPORE],[18,t.SLEEP_POWDER],[20,t.GIGA_DRAIN],[24,t.TOXIC],[28,t.MOONBLAST],[32,t.GRASSY_TERRAIN],[36,t.MOONLIGHT],[40,t.PETAL_DANCE]],[e.GLOOM]:[[1,t.ACID],[1,t.ABSORB],[1,t.GROWTH],[1,t.SWEET_SCENT],[12,t.MEGA_DRAIN],[14,t.POISON_POWDER],[16,t.STUN_SPORE],[18,t.SLEEP_POWDER],[20,t.GIGA_DRAIN],[26,t.TOXIC],[32,t.MOONBLAST],[38,t.GRASSY_TERRAIN],[44,t.MOONLIGHT],[50,t.PETAL_DANCE]],[e.VILEPLUME]:[[Ee,t.PETAL_BLIZZARD],[1,t.ACID],[1,t.ABSORB],[1,t.MEGA_DRAIN],[1,t.GROWTH],[1,t.POISON_POWDER],[1,t.STUN_SPORE],[1,t.SLEEP_POWDER],[1,t.PETAL_DANCE],[1,t.TOXIC],[1,t.GIGA_DRAIN],[1,t.SWEET_SCENT],[1,t.MOONLIGHT],[1,t.AROMATHERAPY],[1,t.GRASSY_TERRAIN],[1,t.MOONBLAST]],[e.PARAS]:[[1,t.SCRATCH],[6,t.POISON_POWDER],[6,t.STUN_SPORE],[11,t.ABSORB],[17,t.FURY_CUTTER],[22,t.SPORE],[27,t.SLASH],[33,t.GROWTH],[38,t.GIGA_DRAIN],[43,t.AROMATHERAPY],[49,t.RAGE_POWDER],[54,t.X_SCISSOR]],[e.PARASECT]:[[1,t.SCRATCH],[1,t.ABSORB],[1,t.POISON_POWDER],[1,t.STUN_SPORE],[1,t.CROSS_POISON],[6,t.POISON_POWDER],[6,t.STUN_SPORE],[11,t.ABSORB],[17,t.FURY_CUTTER],[22,t.SPORE],[29,t.SLASH],[37,t.GROWTH],[44,t.GIGA_DRAIN],[51,t.AROMATHERAPY],[59,t.RAGE_POWDER],[66,t.X_SCISSOR]],[e.VENONAT]:[[1,t.TACKLE],[1,t.DISABLE],[5,t.SUPERSONIC],[11,t.CONFUSION],[13,t.POISON_POWDER],[17,t.PSYBEAM],[23,t.STUN_SPORE],[25,t.BUG_BUZZ],[29,t.SLEEP_POWDER],[35,t.LEECH_LIFE],[37,t.ZEN_HEADBUTT],[41,t.POISON_FANG],[47,t.PSYCHIC]],[e.VENOMOTH]:[[Ee,t.AIR_SLASH],[1,t.TACKLE],[1,t.SUPERSONIC],[1,t.DISABLE],[1,t.QUIVER_DANCE],[1,t.SILVER_WIND],[11,t.CONFUSION],[13,t.POISON_POWDER],[17,t.PSYBEAM],[23,t.STUN_SPORE],[25,t.BUG_BUZZ],[29,t.SLEEP_POWDER],[37,t.LEECH_LIFE],[41,t.ZEN_HEADBUTT],[47,t.POISON_FANG],[55,t.PSYCHIC]],[e.DIGLETT]:[[1,t.SCRATCH],[1,t.SAND_ATTACK],[4,t.GROWL],[8,t.ASTONISH],[12,t.MUD_SLAP],[16,t.BULLDOZE],[20,t.SUCKER_PUNCH],[24,t.SLASH],[28,t.SANDSTORM],[32,t.DIG],[36,t.EARTH_POWER],[40,t.EARTHQUAKE],[44,t.FISSURE]],[e.DUGTRIO]:[[Ee,t.SAND_TOMB],[1,t.SCRATCH],[1,t.SAND_ATTACK],[1,t.GROWL],[1,t.TRI_ATTACK],[1,t.ASTONISH],[1,t.NIGHT_SLASH],[1,t.ROTOTILLER],[12,t.MUD_SLAP],[16,t.BULLDOZE],[20,t.SUCKER_PUNCH],[24,t.SLASH],[30,t.SANDSTORM],[36,t.DIG],[42,t.EARTH_POWER],[48,t.EARTHQUAKE],[54,t.FISSURE]],[e.MEOWTH]:[[1,t.GROWL],[1,t.FAKE_OUT],[4,t.FEINT],[8,t.SCRATCH],[12,t.PAY_DAY],[16,t.BITE],[20,t.TAUNT],[24,t.ASSURANCE],[29,t.FURY_SWIPES],[32,t.SCREECH],[36,t.SLASH],[40,t.NASTY_PLOT],[44,t.PLAY_ROUGH]],[e.PERSIAN]:[[Ee,t.POWER_GEM],[1,t.SCRATCH],[1,t.GROWL],[1,t.FAKE_OUT],[1,t.FEINT],[1,t.SWITCHEROO],[12,t.PAY_DAY],[16,t.BITE],[20,t.TAUNT],[24,t.ASSURANCE],[31,t.FURY_SWIPES],[36,t.SCREECH],[42,t.SLASH],[48,t.NASTY_PLOT],[54,t.PLAY_ROUGH]],[e.PSYDUCK]:[[1,t.SCRATCH],[1,t.TAIL_WHIP],[1,t.WATER_SPORT],[3,t.WATER_GUN],[6,t.CONFUSION],[9,t.FURY_SWIPES],[12,t.WATER_PULSE],[15,t.DISABLE],[18,t.ZEN_HEADBUTT],[21,t.SCREECH],[24,t.AQUA_TAIL],[27,t.SOAK],[30,t.PSYCH_UP],[34,t.AMNESIA],[39,t.WONDER_ROOM]],[e.GOLDUCK]:[[1,t.SCRATCH],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.CONFUSION],[1,t.AQUA_JET],[1,t.WATER_SPORT],[1,t.ME_FIRST],[9,t.FURY_SWIPES],[12,t.WATER_PULSE],[15,t.DISABLE],[18,t.ZEN_HEADBUTT],[21,t.SCREECH],[24,t.AQUA_TAIL],[27,t.SOAK],[30,t.PSYCH_UP],[36,t.AMNESIA],[40,t.HYDRO_PUMP],[45,t.WONDER_ROOM]],[e.MANKEY]:[[1,t.SCRATCH],[1,t.LEER],[1,t.FOCUS_ENERGY],[1,t.COVET],[5,t.FURY_SWIPES],[8,t.LOW_KICK],[12,t.SEISMIC_TOSS],[17,t.SWAGGER],[22,t.CROSS_CHOP],[26,t.ASSURANCE],[29,t.THRASH],[33,t.CLOSE_COMBAT],[36,t.SCREECH],[40,t.STOMPING_TANTRUM],[44,t.OUTRAGE],[48,t.FINAL_GAMBIT]],[e.PRIMEAPE]:[[1,t.SCRATCH],[1,t.LEER],[1,t.FOCUS_ENERGY],[1,t.COVET],[1,t.FLING],[5,t.FURY_SWIPES],[8,t.LOW_KICK],[15,t.SEISMIC_TOSS],[17,t.SWAGGER],[22,t.CROSS_CHOP],[26,t.ASSURANCE],[30,t.THRASH],[35,t.RAGE_FIST],[39,t.CLOSE_COMBAT],[44,t.SCREECH],[48,t.STOMPING_TANTRUM],[53,t.OUTRAGE],[57,t.FINAL_GAMBIT]],[e.GROWLITHE]:[[1,t.LEER],[1,t.EMBER],[4,t.HOWL],[8,t.BITE],[12,t.FLAME_WHEEL],[16,t.HELPING_HAND],[20,t.AGILITY],[24,t.FIRE_FANG],[28,t.RETALIATE],[32,t.CRUNCH],[36,t.TAKE_DOWN],[40,t.FLAMETHROWER],[44,t.ROAR],[48,t.PLAY_ROUGH],[52,t.REVERSAL],[56,t.FLARE_BLITZ]],[e.ARCANINE]:[[Ee,t.EXTREME_SPEED],[1,t.TAKE_DOWN],[1,t.LEER],[1,t.BITE],[1,t.ROAR],[1,t.EMBER],[1,t.AGILITY],[1,t.FLAME_WHEEL],[1,t.REVERSAL],[1,t.CRUNCH],[1,t.HELPING_HAND],[1,t.ODOR_SLEUTH],[1,t.HOWL],[1,t.FLARE_BLITZ],[1,t.FIRE_FANG],[1,t.RETALIATE],[1,t.PLAY_ROUGH],[5,t.FLAMETHROWER]],[e.POLIWAG]:[[1,t.WATER_GUN],[1,t.HYPNOSIS],[1,t.WATER_SPORT],[6,t.POUND],[12,t.MUD_SHOT],[18,t.BUBBLE_BEAM],[24,t.RAIN_DANCE],[30,t.BODY_SLAM],[36,t.EARTH_POWER],[42,t.HYDRO_PUMP],[48,t.BELLY_DRUM],[54,t.DOUBLE_EDGE]],[e.POLIWHIRL]:[[1,t.POUND],[1,t.WATER_GUN],[1,t.HYPNOSIS],[1,t.WATER_SPORT],[1,t.MUD_SHOT],[18,t.BUBBLE_BEAM],[24,t.RAIN_DANCE],[32,t.BODY_SLAM],[40,t.EARTH_POWER],[48,t.HYDRO_PUMP],[56,t.BELLY_DRUM],[66,t.DOUBLE_EDGE]],[e.POLIWRATH]:[[Ee,t.DYNAMIC_PUNCH],[X,t.POUND],[X,t.DOUBLE_EDGE],[X,t.WATER_GUN],[X,t.HYDRO_PUMP],[X,t.BELLY_DRUM],[X,t.RAIN_DANCE],[X,t.MUD_SHOT],[X,t.EARTH_POWER],[X,t.CIRCLE_THROW],[1,t.BUBBLE_BEAM],[1,t.BODY_SLAM],[1,t.HYPNOSIS],[1,t.WATER_SPORT]],[e.ABRA]:[[1,t.TELEPORT],[1,t.CONFUSION]],[e.KADABRA]:[[Ee,t.PSYBEAM],[1,t.CONFUSION],[1,t.DISABLE],[1,t.TELEPORT],[1,t.KINESIS],[10,t.REFLECT],[15,t.ALLY_SWITCH],[20,t.PSYCHO_CUT],[25,t.RECOVER],[30,t.PSYSHOCK],[35,t.PSYCHIC],[40,t.ROLE_PLAY],[45,t.FUTURE_SIGHT],[50,t.CALM_MIND]],[e.ALAKAZAM]:[[1,t.DISABLE],[1,t.CONFUSION],[1,t.TELEPORT],[1,t.KINESIS],[5,t.PSYBEAM],[10,t.REFLECT],[15,t.ALLY_SWITCH],[20,t.PSYCHO_CUT],[25,t.RECOVER],[30,t.PSYSHOCK],[35,t.PSYCHIC],[40,t.ROLE_PLAY],[45,t.FUTURE_SIGHT],[50,t.CALM_MIND]],[e.MACHOP]:[[1,t.LEER],[1,t.LOW_KICK],[4,t.FOCUS_ENERGY],[8,t.REVENGE],[12,t.LOW_SWEEP],[16,t.KNOCK_OFF],[20,t.SCARY_FACE],[24,t.VITAL_THROW],[29,t.STRENGTH],[32,t.DUAL_CHOP],[36,t.BULK_UP],[40,t.SEISMIC_TOSS],[44,t.DYNAMIC_PUNCH],[48,t.CROSS_CHOP],[52,t.DOUBLE_EDGE]],[e.MACHOKE]:[[1,t.LEER],[1,t.LOW_KICK],[1,t.FOCUS_ENERGY],[1,t.REVENGE],[1,t.KARATE_CHOP],[12,t.LOW_SWEEP],[16,t.KNOCK_OFF],[20,t.SCARY_FACE],[24,t.VITAL_THROW],[31,t.STRENGTH],[36,t.DUAL_CHOP],[42,t.BULK_UP],[48,t.SEISMIC_TOSS],[54,t.DYNAMIC_PUNCH],[60,t.CROSS_CHOP],[66,t.DOUBLE_EDGE]],[e.MACHAMP]:[[1,t.LEER],[1,t.LOW_KICK],[1,t.FOCUS_ENERGY],[1,t.REVENGE],[1,t.WIDE_GUARD],[1,t.KARATE_CHOP],[12,t.LOW_SWEEP],[16,t.KNOCK_OFF],[20,t.SCARY_FACE],[24,t.VITAL_THROW],[31,t.STRENGTH],[36,t.DUAL_CHOP],[42,t.BULK_UP],[48,t.SEISMIC_TOSS],[54,t.DYNAMIC_PUNCH],[60,t.CROSS_CHOP],[66,t.DOUBLE_EDGE]],[e.BELLSPROUT]:[[1,t.VINE_WHIP],[7,t.GROWTH],[11,t.WRAP],[13,t.SLEEP_POWDER],[15,t.POISON_POWDER],[17,t.STUN_SPORE],[23,t.ACID],[27,t.KNOCK_OFF],[29,t.SWEET_SCENT],[35,t.GASTRO_ACID],[39,t.RAZOR_LEAF],[41,t.POISON_JAB],[47,t.SLAM],[52,t.POWER_WHIP]],[e.WEEPINBELL]:[[1,t.VINE_WHIP],[1,t.WRAP],[1,t.GROWTH],[13,t.SLEEP_POWDER],[15,t.POISON_POWDER],[17,t.STUN_SPORE],[24,t.ACID],[29,t.KNOCK_OFF],[32,t.SWEET_SCENT],[39,t.GASTRO_ACID],[44,t.RAZOR_LEAF],[47,t.POISON_JAB],[54,t.SLAM],[58,t.POWER_WHIP]],[e.VICTREEBEL]:[[Ee,t.LEAF_STORM],[X,t.STOCKPILE],[X,t.SWALLOW],[X,t.SPIT_UP],[X,t.WRAP],[X,t.GROWTH],[X,t.ACID],[X,t.KNOCK_OFF],[X,t.GASTRO_ACID],[X,t.POISON_JAB],[X,t.SLAM],[X,t.POWER_WHIP],[1,t.VINE_WHIP],[1,t.SLEEP_POWDER],[1,t.POISON_POWDER],[1,t.STUN_SPORE],[1,t.SWEET_SCENT],[1,t.RAZOR_LEAF],[44,t.LEAF_BLADE]],[e.TENTACOOL]:[[1,t.POISON_STING],[1,t.WATER_GUN],[4,t.ACID],[8,t.WRAP],[12,t.SUPERSONIC],[16,t.WATER_PULSE],[20,t.SCREECH],[24,t.BUBBLE_BEAM],[28,t.HEX],[32,t.ACID_ARMOR],[36,t.POISON_JAB],[40,t.SURF],[44,t.SLUDGE_WAVE],[48,t.HYDRO_PUMP]],[e.TENTACRUEL]:[[1,t.WRAP],[1,t.POISON_STING],[1,t.ACID],[1,t.WATER_GUN],[1,t.REFLECT_TYPE],[1,t.WRING_OUT],[12,t.SUPERSONIC],[16,t.WATER_PULSE],[20,t.SCREECH],[24,t.BUBBLE_BEAM],[28,t.HEX],[34,t.ACID_ARMOR],[40,t.POISON_JAB],[46,t.SURF],[52,t.SLUDGE_WAVE],[58,t.HYDRO_PUMP]],[e.GEODUDE]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[6,t.ROCK_POLISH],[10,t.ROLLOUT],[12,t.BULLDOZE],[16,t.ROCK_THROW],[18,t.SMACK_DOWN],[24,t.SELF_DESTRUCT],[28,t.STEALTH_ROCK],[30,t.ROCK_BLAST],[34,t.EARTHQUAKE],[36,t.EXPLOSION],[40,t.DOUBLE_EDGE],[42,t.STONE_EDGE]],[e.GRAVELER]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[1,t.ROCK_POLISH],[10,t.ROLLOUT],[12,t.BULLDOZE],[16,t.ROCK_THROW],[18,t.SMACK_DOWN],[24,t.SELF_DESTRUCT],[30,t.STEALTH_ROCK],[34,t.ROCK_BLAST],[40,t.EARTHQUAKE],[44,t.EXPLOSION],[50,t.DOUBLE_EDGE],[54,t.STONE_EDGE]],[e.GOLEM]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[1,t.ROCK_POLISH],[1,t.ROLLOUT],[1,t.HEAVY_SLAM],[16,t.ROCK_THROW],[18,t.SMACK_DOWN],[22,t.BULLDOZE],[24,t.SELF_DESTRUCT],[30,t.STEALTH_ROCK],[34,t.ROCK_BLAST],[40,t.EARTHQUAKE],[44,t.EXPLOSION],[50,t.DOUBLE_EDGE],[54,t.STONE_EDGE]],[e.PONYTA]:[[1,t.TACKLE],[1,t.GROWL],[5,t.TAIL_WHIP],[10,t.EMBER],[15,t.FLAME_CHARGE],[20,t.AGILITY],[25,t.FLAME_WHEEL],[30,t.STOMP],[35,t.FIRE_SPIN],[41,t.TAKE_DOWN],[45,t.INFERNO],[50,t.FIRE_BLAST],[55,t.FLARE_BLITZ]],[e.RAPIDASH]:[[Ee,t.SMART_STRIKE],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.EMBER],[1,t.QUICK_ATTACK],[1,t.MEGAHORN],[1,t.POISON_JAB],[15,t.FLAME_CHARGE],[20,t.AGILITY],[25,t.FLAME_WHEEL],[30,t.STOMP],[35,t.FIRE_SPIN],[43,t.TAKE_DOWN],[49,t.INFERNO],[56,t.FIRE_BLAST],[63,t.FLARE_BLITZ]],[e.SLOWPOKE]:[[1,t.TACKLE],[1,t.CURSE],[3,t.GROWL],[6,t.WATER_GUN],[9,t.YAWN],[12,t.CONFUSION],[15,t.DISABLE],[18,t.WATER_PULSE],[21,t.HEADBUTT],[24,t.ZEN_HEADBUTT],[27,t.AMNESIA],[30,t.SURF],[33,t.SLACK_OFF],[36,t.PSYCHIC],[39,t.PSYCH_UP],[42,t.RAIN_DANCE],[45,t.HEAL_PULSE]],[e.SLOWBRO]:[[X,t.FUTURE_SIGHT],[1,t.TACKLE],[1,t.GROWL],[1,t.WATER_GUN],[1,t.WITHDRAW],[1,t.CURSE],[9,t.YAWN],[12,t.CONFUSION],[15,t.DISABLE],[18,t.WATER_PULSE],[21,t.HEADBUTT],[24,t.ZEN_HEADBUTT],[27,t.AMNESIA],[30,t.SURF],[33,t.SLACK_OFF],[36,t.PSYCHIC],[41,t.PSYCH_UP],[46,t.RAIN_DANCE],[51,t.HEAL_PULSE]],[e.MAGNEMITE]:[[1,t.TACKLE],[1,t.THUNDER_SHOCK],[4,t.SUPERSONIC],[8,t.THUNDER_WAVE],[12,t.ELECTRO_BALL],[16,t.GYRO_BALL],[20,t.SPARK],[24,t.SCREECH],[28,t.MAGNET_RISE],[32,t.FLASH_CANNON],[36,t.DISCHARGE],[40,t.METAL_SOUND],[44,t.LIGHT_SCREEN],[48,t.LOCK_ON],[52,t.ZAP_CANNON]],[e.MAGNETON]:[[Ee,t.TRI_ATTACK],[1,t.TACKLE],[1,t.SUPERSONIC],[1,t.THUNDER_SHOCK],[1,t.THUNDER_WAVE],[1,t.ELECTRIC_TERRAIN],[12,t.ELECTRO_BALL],[16,t.GYRO_BALL],[20,t.SPARK],[24,t.SCREECH],[28,t.MAGNET_RISE],[34,t.FLASH_CANNON],[40,t.DISCHARGE],[46,t.METAL_SOUND],[52,t.LIGHT_SCREEN],[58,t.LOCK_ON],[64,t.ZAP_CANNON]],[e.FARFETCHD]:[[1,t.SAND_ATTACK],[1,t.PECK],[5,t.LEER],[10,t.FURY_CUTTER],[15,t.CUT],[20,t.AERIAL_ACE],[25,t.AIR_CUTTER],[30,t.KNOCK_OFF],[35,t.FALSE_SWIPE],[40,t.SLASH],[45,t.SWORDS_DANCE],[50,t.AIR_SLASH],[55,t.LEAF_BLADE],[60,t.AGILITY],[65,t.BRAVE_BIRD]],[e.DODUO]:[[1,t.GROWL],[1,t.PECK],[5,t.QUICK_ATTACK],[9,t.FURY_ATTACK],[14,t.PLUCK],[19,t.DOUBLE_HIT],[23,t.AGILITY],[27,t.UPROAR],[30,t.ACUPRESSURE],[33,t.SWORDS_DANCE],[36,t.DRILL_PECK],[39,t.ENDEAVOR],[43,t.THRASH]],[e.DODRIO]:[[Ee,t.TRI_ATTACK],[1,t.TRI_ATTACK],[1,t.GROWL],[1,t.PECK],[5,t.QUICK_ATTACK],[12,t.FURY_ATTACK],[15,t.PLUCK],[19,t.DOUBLE_HIT],[23,t.AGILITY],[26,t.UPROAR],[30,t.ACUPRESSURE],[34,t.SWORDS_DANCE],[38,t.DRILL_PECK],[43,t.ENDEAVOR],[50,t.THRASH]],[e.SEEL]:[[1,t.HEADBUTT],[3,t.GROWL],[7,t.CHARM],[11,t.ICY_WIND],[13,t.ENCORE],[17,t.ICE_SHARD],[21,t.REST],[23,t.AQUA_RING],[27,t.AURORA_BEAM],[31,t.AQUA_JET],[33,t.BRINE],[37,t.TAKE_DOWN],[41,t.DIVE],[43,t.AQUA_TAIL],[47,t.ICE_BEAM],[51,t.SAFEGUARD],[53,t.SNOWSCAPE]],[e.DEWGONG]:[[Ee,t.SHEER_COLD],[1,t.HEADBUTT],[1,t.GROWL],[1,t.ICY_WIND],[1,t.CHARM],[1,t.SIGNAL_BEAM],[13,t.ENCORE],[17,t.ICE_SHARD],[21,t.REST],[23,t.AQUA_RING],[27,t.AURORA_BEAM],[31,t.AQUA_JET],[33,t.BRINE],[39,t.TAKE_DOWN],[45,t.DIVE],[49,t.AQUA_TAIL],[55,t.ICE_BEAM],[61,t.SAFEGUARD],[65,t.SNOWSCAPE]],[e.GRIMER]:[[1,t.POUND],[1,t.POISON_GAS],[4,t.HARDEN],[7,t.MUD_SLAP],[12,t.DISABLE],[15,t.SLUDGE],[18,t.MUD_SHOT],[21,t.MINIMIZE],[26,t.TOXIC],[29,t.SLUDGE_BOMB],[32,t.SLUDGE_WAVE],[37,t.SCREECH],[40,t.GUNK_SHOT],[43,t.ACID_ARMOR],[46,t.BELCH],[48,t.MEMENTO]],[e.MUK]:[[1,t.POUND],[1,t.HARDEN],[1,t.POISON_GAS],[1,t.MUD_SLAP],[12,t.DISABLE],[15,t.SLUDGE],[18,t.MUD_SHOT],[21,t.MINIMIZE],[26,t.TOXIC],[29,t.SLUDGE_BOMB],[32,t.SLUDGE_WAVE],[37,t.SCREECH],[40,t.GUNK_SHOT],[46,t.ACID_ARMOR],[52,t.BELCH],[57,t.MEMENTO]],[e.SHELLDER]:[[1,t.TACKLE],[1,t.WATER_GUN],[4,t.WITHDRAW],[8,t.ICE_SHARD],[12,t.LEER],[16,t.WHIRLPOOL],[20,t.SUPERSONIC],[24,t.AURORA_BEAM],[28,t.PROTECT],[32,t.RAZOR_SHELL],[36,t.IRON_DEFENSE],[40,t.ICE_BEAM],[44,t.SHELL_SMASH],[48,t.HYDRO_PUMP]],[e.CLOYSTER]:[[Ee,t.ICICLE_SPEAR],[1,t.TACKLE],[1,t.LEER],[1,t.SUPERSONIC],[1,t.WATER_GUN],[1,t.HYDRO_PUMP],[1,t.ICE_BEAM],[1,t.AURORA_BEAM],[1,t.WITHDRAW],[1,t.PROTECT],[1,t.SPIKES],[1,t.WHIRLPOOL],[1,t.IRON_DEFENSE],[1,t.TOXIC_SPIKES],[1,t.ICE_SHARD],[1,t.SHELL_SMASH],[1,t.ICICLE_CRASH],[5,t.RAZOR_SHELL]],[e.GASTLY]:[[1,t.CONFUSE_RAY],[1,t.LICK],[1,t.ACID],[4,t.HYPNOSIS],[8,t.MEAN_LOOK],[12,t.PAYBACK],[16,t.SPITE],[20,t.CURSE],[24,t.HEX],[28,t.NIGHT_SHADE],[32,t.SUCKER_PUNCH],[36,t.DARK_PULSE],[40,t.SHADOW_BALL],[44,t.DESTINY_BOND],[48,t.DREAM_EATER]],[e.HAUNTER]:[[Ee,t.SHADOW_PUNCH],[1,t.HYPNOSIS],[1,t.CONFUSE_RAY],[1,t.LICK],[1,t.ACID],[1,t.MEAN_LOOK],[12,t.PAYBACK],[16,t.SPITE],[20,t.CURSE],[24,t.HEX],[30,t.NIGHT_SHADE],[36,t.SUCKER_PUNCH],[42,t.DARK_PULSE],[48,t.SHADOW_BALL],[54,t.DESTINY_BOND],[60,t.DREAM_EATER]],[e.GENGAR]:[[1,t.HYPNOSIS],[1,t.CONFUSE_RAY],[1,t.LICK],[1,t.ACID],[1,t.PERISH_SONG],[1,t.MEAN_LOOK],[1,t.SHADOW_PUNCH],[1,t.REFLECT_TYPE],[12,t.PAYBACK],[16,t.SPITE],[20,t.CURSE],[24,t.HEX],[30,t.NIGHT_SHADE],[36,t.SUCKER_PUNCH],[42,t.DARK_PULSE],[48,t.SHADOW_BALL],[54,t.DESTINY_BOND],[60,t.DREAM_EATER]],[e.ONIX]:[[1,t.BIND],[1,t.TACKLE],[1,t.ROCK_THROW],[1,t.HARDEN],[1,t.MUD_SPORT],[4,t.SMACK_DOWN],[8,t.ROCK_POLISH],[12,t.DRAGON_BREATH],[16,t.CURSE],[20,t.ROCK_SLIDE],[22,t.GYRO_BALL],[24,t.SCREECH],[28,t.SAND_TOMB],[32,t.STEALTH_ROCK],[36,t.SLAM],[40,t.SANDSTORM],[44,t.DIG],[48,t.IRON_TAIL],[52,t.STONE_EDGE],[56,t.DOUBLE_EDGE]],[e.DROWZEE]:[[1,t.POUND],[1,t.HYPNOSIS],[5,t.DISABLE],[9,t.CONFUSION],[13,t.HEADBUTT],[17,t.POISON_GAS],[21,t.PSYBEAM],[25,t.PSYCH_UP],[29,t.ZEN_HEADBUTT],[33,t.SWAGGER],[37,t.PSYCHIC],[41,t.NASTY_PLOT],[45,t.PSYSHOCK],[49,t.FUTURE_SIGHT]],[e.HYPNO]:[[1,t.POUND],[1,t.DISABLE],[1,t.CONFUSION],[1,t.HYPNOSIS],[1,t.SWITCHEROO],[1,t.NIGHTMARE],[13,t.HEADBUTT],[17,t.POISON_GAS],[21,t.PSYBEAM],[25,t.PSYCH_UP],[32,t.ZEN_HEADBUTT],[37,t.SWAGGER],[42,t.PSYCHIC],[47,t.NASTY_PLOT],[51,t.PSYSHOCK],[56,t.FUTURE_SIGHT]],[e.KRABBY]:[[1,t.LEER],[1,t.WATER_GUN],[1,t.MUD_SPORT],[4,t.HARDEN],[8,t.METAL_CLAW],[12,t.MUD_SHOT],[16,t.PROTECT],[20,t.BUBBLE_BEAM],[24,t.STOMP],[29,t.FLAIL],[32,t.RAZOR_SHELL],[36,t.SLAM],[40,t.SWORDS_DANCE],[44,t.CRABHAMMER],[48,t.GUILLOTINE]],[e.KINGLER]:[[1,t.LEER],[1,t.WATER_GUN],[1,t.HARDEN],[1,t.METAL_CLAW],[1,t.HAMMER_ARM],[1,t.WIDE_GUARD],[1,t.MUD_SPORT],[12,t.MUD_SHOT],[16,t.PROTECT],[20,t.BUBBLE_BEAM],[24,t.STOMP],[31,t.FLAIL],[36,t.RAZOR_SHELL],[42,t.SLAM],[48,t.SWORDS_DANCE],[54,t.CRABHAMMER],[60,t.GUILLOTINE]],[e.VOLTORB]:[[1,t.TACKLE],[1,t.CHARGE],[4,t.THUNDER_SHOCK],[6,t.EERIE_IMPULSE],[9,t.SPARK],[11,t.ROLLOUT],[13,t.SCREECH],[16,t.CHARGE_BEAM],[20,t.SWIFT],[22,t.ELECTRO_BALL],[26,t.SELF_DESTRUCT],[29,t.LIGHT_SCREEN],[34,t.MAGNET_RISE],[37,t.DISCHARGE],[41,t.EXPLOSION],[46,t.GYRO_BALL],[50,t.MIRROR_COAT]],[e.ELECTRODE]:[[1,t.TACKLE],[1,t.THUNDER_SHOCK],[1,t.CHARGE],[1,t.EERIE_IMPULSE],[1,t.MAGNETIC_FLUX],[9,t.SPARK],[11,t.ROLLOUT],[13,t.SCREECH],[16,t.CHARGE_BEAM],[20,t.SWIFT],[22,t.ELECTRO_BALL],[26,t.SELF_DESTRUCT],[29,t.LIGHT_SCREEN],[36,t.MAGNET_RISE],[41,t.DISCHARGE],[47,t.EXPLOSION],[54,t.GYRO_BALL],[58,t.MIRROR_COAT]],[e.EXEGGCUTE]:[[1,t.ABSORB],[1,t.HYPNOSIS],[1,t.BARRAGE],[5,t.REFLECT],[10,t.LEECH_SEED],[15,t.MEGA_DRAIN],[20,t.CONFUSION],[25,t.SYNTHESIS],[30,t.BULLET_SEED],[35,t.GIGA_DRAIN],[40,t.EXTRASENSORY],[45,t.UPROAR],[50,t.WORRY_SEED],[55,t.SOLAR_BEAM]],[e.EXEGGUTOR]:[[Ee,t.STOMP],[X,t.GROWTH],[1,t.BARRAGE],[1,t.SEED_BOMB],[1,t.PSYSHOCK],[1,t.WOOD_HAMMER],[1,t.LEAF_STORM],[1,t.MEGA_DRAIN],[1,t.CONFUSION],[1,t.SYNTHESIS],[1,t.BULLET_SEED],[1,t.GIGA_DRAIN],[1,t.EXTRASENSORY],[1,t.UPROAR],[1,t.WORRY_SEED],[1,t.SOLAR_BEAM],[1,t.ABSORB],[1,t.HYPNOSIS],[1,t.REFLECT],[1,t.LEECH_SEED]],[e.CUBONE]:[[1,t.GROWL],[1,t.MUD_SLAP],[4,t.TAIL_WHIP],[8,t.FALSE_SWIPE],[12,t.HEADBUTT],[16,t.RETALIATE],[20,t.FLING],[24,t.STOMPING_TANTRUM],[29,t.BONE_RUSH],[32,t.FOCUS_ENERGY],[36,t.ENDEAVOR],[40,t.BONEMERANG],[44,t.THRASH],[48,t.DOUBLE_EDGE]],[e.MAROWAK]:[[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.MUD_SLAP],[1,t.FALSE_SWIPE],[1,t.BONE_CLUB],[12,t.HEADBUTT],[16,t.RETALIATE],[20,t.FLING],[24,t.STOMPING_TANTRUM],[31,t.BONE_RUSH],[36,t.FOCUS_ENERGY],[42,t.ENDEAVOR],[48,t.BONEMERANG],[54,t.THRASH],[60,t.DOUBLE_EDGE]],[e.HITMONLEE]:[[Ee,t.BRICK_BREAK],[1,t.TACKLE],[1,t.FOCUS_ENERGY],[1,t.FAKE_OUT],[1,t.HELPING_HAND],[1,t.FEINT],[1,t.LOW_SWEEP],[1,t.JUMP_KICK],[1,t.ROLLING_KICK],[1,t.MACH_PUNCH],[1,t.RAPID_SPIN],[4,t.DOUBLE_KICK],[8,t.LOW_KICK],[12,t.ENDURE],[16,t.SUCKER_PUNCH],[21,t.WIDE_GUARD],[24,t.BLAZE_KICK],[28,t.FEINT],[32,t.MEGA_KICK],[36,t.CLOSE_COMBAT],[40,t.REVERSAL],[44,t.HIGH_JUMP_KICK],[50,t.AXE_KICK]],[e.HITMONCHAN]:[[Ee,t.DRAIN_PUNCH],[1,t.TACKLE],[1,t.FOCUS_ENERGY],[1,t.FAKE_OUT],[1,t.HELPING_HAND],[1,t.FEINT],[1,t.PURSUIT],[1,t.COMET_PUNCH],[1,t.LOW_SWEEP],[1,t.RAPID_SPIN],[4,t.MACH_PUNCH],[8,t.VACUUM_WAVE],[12,t.DETECT],[16,t.BULLET_PUNCH],[21,t.QUICK_GUARD],[24,t.THUNDER_PUNCH],[24,t.ICE_PUNCH],[24,t.FIRE_PUNCH],[28,t.AGILITY],[32,t.MEGA_PUNCH],[36,t.CLOSE_COMBAT],[40,t.COUNTER],[44,t.FOCUS_PUNCH]],[e.LICKITUNG]:[[1,t.DEFENSE_CURL],[1,t.LICK],[1,t.TACKLE],[6,t.REST],[12,t.SUPERSONIC],[18,t.WRAP],[24,t.DISABLE],[30,t.STOMP],[32,t.ROLLOUT],[36,t.KNOCK_OFF],[42,t.SCREECH],[48,t.SLAM],[54,t.POWER_WHIP],[60,t.BELLY_DRUM]],[e.KOFFING]:[[1,t.TACKLE],[1,t.POISON_GAS],[4,t.SMOG],[8,t.SMOKESCREEN],[12,t.CLEAR_SMOG],[16,t.ASSURANCE],[20,t.SLUDGE],[24,t.HAZE],[28,t.SELF_DESTRUCT],[32,t.SLUDGE_BOMB],[36,t.TOXIC],[40,t.BELCH],[44,t.EXPLOSION],[48,t.MEMENTO],[52,t.DESTINY_BOND]],[e.WEEZING]:[[Ee,t.DOUBLE_HIT],[1,t.TACKLE],[1,t.SMOKESCREEN],[1,t.SMOG],[1,t.POISON_GAS],[1,t.HEAT_WAVE],[12,t.CLEAR_SMOG],[16,t.ASSURANCE],[20,t.SLUDGE],[24,t.HAZE],[28,t.SELF_DESTRUCT],[32,t.SLUDGE_BOMB],[38,t.TOXIC],[44,t.BELCH],[50,t.EXPLOSION],[56,t.MEMENTO],[62,t.DESTINY_BOND]],[e.RHYHORN]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.SMACK_DOWN],[10,t.BULLDOZE],[15,t.HORN_ATTACK],[20,t.SCARY_FACE],[25,t.STOMP],[30,t.ROCK_BLAST],[35,t.DRILL_RUN],[40,t.TAKE_DOWN],[45,t.EARTHQUAKE],[50,t.STONE_EDGE],[55,t.MEGAHORN],[60,t.HORN_DRILL]],[e.RHYDON]:[[Ee,t.HAMMER_ARM],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.SMACK_DOWN],[1,t.BULLDOZE],[15,t.HORN_ATTACK],[20,t.SCARY_FACE],[25,t.STOMP],[30,t.ROCK_BLAST],[35,t.DRILL_RUN],[40,t.TAKE_DOWN],[47,t.EARTHQUAKE],[54,t.STONE_EDGE],[61,t.MEGAHORN],[68,t.HORN_DRILL]],[e.CHANSEY]:[[1,t.POUND],[1,t.DEFENSE_CURL],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.COVET],[1,t.COPYCAT],[1,t.DISARMING_VOICE],[4,t.TAIL_WHIP],[8,t.ECHOED_VOICE],[12,t.LIFE_DEW],[16,t.SING],[20,t.FLING],[24,t.TAKE_DOWN],[28,t.HEAL_PULSE],[32,t.HELPING_HAND],[36,t.LIGHT_SCREEN],[40,t.DOUBLE_EDGE],[44,t.SOFT_BOILED],[48,t.LAST_RESORT],[52,t.HEALING_WISH]],[e.TANGELA]:[[1,t.BIND],[1,t.ABSORB],[1,t.CONSTRICT],[4,t.STUN_SPORE],[8,t.GROWTH],[12,t.MEGA_DRAIN],[16,t.VINE_WHIP],[20,t.POISON_POWDER],[24,t.DOUBLE_HIT],[28,t.KNOCK_OFF],[32,t.GIGA_DRAIN],[34,t.ANCIENT_POWER],[36,t.SLEEP_POWDER],[40,t.SLAM],[44,t.TICKLE],[48,t.POWER_WHIP],[52,t.INGRAIN],[56,t.GRASSY_TERRAIN]],[e.KANGASKHAN]:[[1,t.POUND],[1,t.TAIL_WHIP],[1,t.COMET_PUNCH],[4,t.GROWL],[8,t.FAKE_OUT],[12,t.BITE],[16,t.STOMP],[20,t.FOCUS_ENERGY],[24,t.HEADBUTT],[28,t.SUCKER_PUNCH],[32,t.DOUBLE_HIT],[36,t.CRUNCH],[40,t.ENDURE],[44,t.REVERSAL],[48,t.OUTRAGE],[52,t.LAST_RESORT]],[e.HORSEA]:[[1,t.LEER],[1,t.WATER_GUN],[5,t.SMOKESCREEN],[10,t.TWISTER],[15,t.FOCUS_ENERGY],[20,t.DRAGON_BREATH],[25,t.BUBBLE_BEAM],[30,t.AGILITY],[35,t.LASER_FOCUS],[40,t.DRAGON_PULSE],[45,t.HYDRO_PUMP],[50,t.DRAGON_DANCE],[55,t.RAIN_DANCE]],[e.SEADRA]:[[1,t.LEER],[1,t.WATER_GUN],[1,t.SMOKESCREEN],[1,t.TWISTER],[15,t.FOCUS_ENERGY],[20,t.DRAGON_BREATH],[25,t.BUBBLE_BEAM],[30,t.AGILITY],[37,t.LASER_FOCUS],[44,t.DRAGON_PULSE],[51,t.HYDRO_PUMP],[58,t.DRAGON_DANCE],[65,t.RAIN_DANCE]],[e.GOLDEEN]:[[1,t.TAIL_WHIP],[1,t.PECK],[1,t.WATER_SPORT],[5,t.SUPERSONIC],[10,t.WATER_PULSE],[15,t.HORN_ATTACK],[20,t.AGILITY],[25,t.AQUA_RING],[30,t.FLAIL],[35,t.WATERFALL],[40,t.SOAK],[45,t.MEGAHORN],[50,t.HORN_DRILL]],[e.SEAKING]:[[1,t.TAIL_WHIP],[1,t.SUPERSONIC],[1,t.WATER_SPORT],[1,t.PECK],[1,t.WATER_PULSE],[15,t.HORN_ATTACK],[20,t.AGILITY],[25,t.AQUA_RING],[30,t.FLAIL],[37,t.WATERFALL],[44,t.SOAK],[51,t.MEGAHORN],[58,t.HORN_DRILL]],[e.STARYU]:[[1,t.TACKLE],[1,t.HARDEN],[4,t.WATER_GUN],[8,t.CONFUSE_RAY],[12,t.RAPID_SPIN],[16,t.MINIMIZE],[20,t.SWIFT],[24,t.PSYBEAM],[28,t.BRINE],[32,t.LIGHT_SCREEN],[36,t.POWER_GEM],[40,t.PSYCHIC],[44,t.SURF],[48,t.RECOVER],[52,t.COSMIC_POWER],[56,t.HYDRO_PUMP]],[e.STARMIE]:[[1,t.TACKLE],[1,t.WATER_GUN],[1,t.HYDRO_PUMP],[1,t.SURF],[1,t.PSYBEAM],[1,t.PSYCHIC],[1,t.RECOVER],[1,t.HARDEN],[1,t.MINIMIZE],[1,t.CONFUSE_RAY],[1,t.LIGHT_SCREEN],[1,t.SWIFT],[1,t.SPOTLIGHT],[1,t.RAPID_SPIN],[1,t.COSMIC_POWER],[1,t.BRINE],[1,t.POWER_GEM]],[e.MR_MIME]:[[1,t.POUND],[1,t.TICKLE],[1,t.BATON_PASS],[1,t.ENCORE],[1,t.COPYCAT],[1,t.POWER_SWAP],[1,t.GUARD_SWAP],[1,t.WIDE_GUARD],[1,t.QUICK_GUARD],[1,t.BARRIER],[12,t.CONFUSION],[16,t.ROLE_PLAY],[20,t.PROTECT],[24,t.RECYCLE],[28,t.PSYBEAM],[32,t.MIMIC],[36,t.LIGHT_SCREEN],[36,t.REFLECT],[36,t.SAFEGUARD],[40,t.SUCKER_PUNCH],[44,t.DAZZLING_GLEAM],[48,t.PSYCHIC],[52,t.TEETER_DANCE]],[e.SCYTHER]:[[1,t.LEER],[1,t.QUICK_ATTACK],[4,t.FURY_CUTTER],[8,t.FALSE_SWIPE],[12,t.WING_ATTACK],[16,t.DOUBLE_TEAM],[20,t.DOUBLE_HIT],[24,t.SLASH],[28,t.FOCUS_ENERGY],[30,t.STEEL_WING],[32,t.AGILITY],[36,t.AIR_SLASH],[40,t.X_SCISSOR],[44,t.SWORDS_DANCE]],[e.JYNX]:[[1,t.POUND],[1,t.LICK],[1,t.POWDER_SNOW],[1,t.SWEET_KISS],[1,t.COPYCAT],[12,t.CONFUSION],[16,t.COVET],[20,t.SING],[24,t.FAKE_TEARS],[28,t.ICE_PUNCH],[34,t.PSYCHIC],[40,t.LOVELY_KISS],[46,t.MEAN_LOOK],[52,t.PERISH_SONG],[58,t.BLIZZARD]],[e.ELECTABUZZ]:[[1,t.LEER],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.CHARGE],[12,t.SWIFT],[16,t.SHOCK_WAVE],[20,t.THUNDER_WAVE],[24,t.SCREECH],[28,t.THUNDER_PUNCH],[34,t.DISCHARGE],[40,t.LOW_KICK],[46,t.THUNDERBOLT],[52,t.LIGHT_SCREEN],[58,t.THUNDER],[64,t.GIGA_IMPACT]],[e.MAGMAR]:[[1,t.LEER],[1,t.EMBER],[1,t.SMOKESCREEN],[1,t.SMOG],[12,t.CLEAR_SMOG],[16,t.FLAME_WHEEL],[20,t.CONFUSE_RAY],[24,t.SCARY_FACE],[28,t.FIRE_PUNCH],[34,t.LAVA_PLUME],[40,t.LOW_KICK],[46,t.FLAMETHROWER],[52,t.SUNNY_DAY],[58,t.FIRE_BLAST],[64,t.HYPER_BEAM]],[e.PINSIR]:[[1,t.VISE_GRIP],[1,t.HARDEN],[4,t.FOCUS_ENERGY],[8,t.BIND],[12,t.SEISMIC_TOSS],[16,t.BUG_BITE],[20,t.STORM_THROW],[24,t.DOUBLE_HIT],[28,t.VITAL_THROW],[32,t.X_SCISSOR],[36,t.STRENGTH],[40,t.SWORDS_DANCE],[44,t.SUBMISSION],[48,t.GUILLOTINE],[52,t.SUPERPOWER]],[e.TAUROS]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.WORK_UP],[10,t.PAYBACK],[15,t.ASSURANCE],[20,t.HORN_ATTACK],[25,t.SCARY_FACE],[30,t.ZEN_HEADBUTT],[35,t.RAGING_BULL],[40,t.REST],[45,t.SWAGGER],[50,t.THRASH],[55,t.DOUBLE_EDGE],[60,t.GIGA_IMPACT]],[e.MAGIKARP]:[[1,t.SPLASH],[15,t.TACKLE],[25,t.FLAIL]],[e.GYARADOS]:[[Ee,t.BITE],[1,t.TACKLE],[1,t.LEER],[1,t.SPLASH],[1,t.FLAIL],[1,t.TWISTER],[4,t.WHIRLPOOL],[8,t.ICE_FANG],[12,t.BRINE],[16,t.SCARY_FACE],[21,t.WATERFALL],[24,t.CRUNCH],[28,t.RAIN_DANCE],[32,t.AQUA_TAIL],[36,t.DRAGON_DANCE],[40,t.HYDRO_PUMP],[44,t.HURRICANE],[48,t.THRASH],[52,t.HYPER_BEAM]],[e.LAPRAS]:[[1,t.GROWL],[1,t.WATER_GUN],[5,t.SING],[10,t.MIST],[15,t.LIFE_DEW],[20,t.ICE_SHARD],[25,t.CONFUSE_RAY],[30,t.WATER_PULSE],[35,t.BRINE],[40,t.BODY_SLAM],[45,t.ICE_BEAM],[50,t.RAIN_DANCE],[55,t.HYDRO_PUMP],[60,t.PERISH_SONG],[65,t.SHEER_COLD]],[e.DITTO]:[[1,t.TRANSFORM]],[e.EEVEE]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.HELPING_HAND],[1,t.COVET],[5,t.SAND_ATTACK],[10,t.QUICK_ATTACK],[15,t.BABY_DOLL_EYES],[20,t.SWIFT],[25,t.BITE],[30,t.COPYCAT],[35,t.BATON_PASS],[40,t.TAKE_DOWN],[45,t.CHARM],[50,t.DOUBLE_EDGE],[55,t.LAST_RESORT],[60,t.VEEVEE_VOLLEY]],[e.VAPOREON]:[[Ee,t.BOUNCY_BUBBLE],[X,t.VEEVEE_VOLLEY],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.BITE],[1,t.GROWL],[1,t.SWIFT],[1,t.CHARM],[1,t.BATON_PASS],[1,t.HELPING_HAND],[1,t.COVET],[1,t.COPYCAT],[5,t.SAND_ATTACK],[10,t.WATER_GUN],[15,t.QUICK_ATTACK],[20,t.BABY_DOLL_EYES],[25,t.HAZE],[30,t.WATER_PULSE],[35,t.AURORA_BEAM],[40,t.AQUA_RING],[45,t.MUDDY_WATER],[50,t.ACID_ARMOR],[55,t.HYDRO_PUMP],[60,t.LAST_RESORT]],[e.JOLTEON]:[[Ee,t.BUZZY_BUZZ],[X,t.VEEVEE_VOLLEY],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.BITE],[1,t.GROWL],[1,t.SWIFT],[1,t.CHARM],[1,t.BATON_PASS],[1,t.HELPING_HAND],[1,t.COVET],[1,t.COPYCAT],[5,t.SAND_ATTACK],[10,t.THUNDER_SHOCK],[15,t.QUICK_ATTACK],[20,t.BABY_DOLL_EYES],[25,t.THUNDER_WAVE],[30,t.DOUBLE_KICK],[35,t.THUNDER_FANG],[40,t.PIN_MISSILE],[45,t.DISCHARGE],[50,t.AGILITY],[55,t.THUNDER],[60,t.LAST_RESORT]],[e.FLAREON]:[[Ee,t.SIZZLY_SLIDE],[X,t.VEEVEE_VOLLEY],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.SWIFT],[1,t.CHARM],[1,t.BATON_PASS],[1,t.HELPING_HAND],[1,t.COVET],[1,t.COPYCAT],[5,t.SAND_ATTACK],[10,t.EMBER],[15,t.QUICK_ATTACK],[20,t.BABY_DOLL_EYES],[25,t.SMOG],[30,t.BITE],[35,t.FIRE_FANG],[40,t.FIRE_SPIN],[45,t.LAVA_PLUME],[50,t.SCARY_FACE],[55,t.FLARE_BLITZ],[60,t.LAST_RESORT]],[e.PORYGON]:[[1,t.TACKLE],[1,t.CONVERSION],[5,t.RECYCLE],[10,t.MAGNET_RISE],[15,t.THUNDER_SHOCK],[20,t.PSYBEAM],[25,t.CONVERSION_2],[30,t.AGILITY],[35,t.RECOVER],[40,t.DISCHARGE],[45,t.TRI_ATTACK],[50,t.MAGIC_COAT],[55,t.LOCK_ON],[60,t.ZAP_CANNON]],[e.OMANYTE]:[[1,t.BIND],[1,t.WITHDRAW],[1,t.CONSTRICT],[5,t.ROLLOUT],[10,t.SAND_ATTACK],[15,t.WATER_GUN],[20,t.LEER],[25,t.MUD_SHOT],[30,t.ANCIENT_POWER],[35,t.BRINE],[41,t.PROTECT],[45,t.ROCK_BLAST],[50,t.SURF],[55,t.SHELL_SMASH],[60,t.HYDRO_PUMP]],[e.OMASTAR]:[[Ee,t.CRUNCH],[1,t.BIND],[1,t.SAND_ATTACK],[1,t.CONSTRICT],[1,t.SPIKE_CANNON],[1,t.WITHDRAW],[1,t.ROLLOUT],[15,t.WATER_GUN],[20,t.LEER],[25,t.MUD_SHOT],[30,t.ANCIENT_POWER],[35,t.BRINE],[43,t.PROTECT],[49,t.ROCK_BLAST],[56,t.SURF],[63,t.SHELL_SMASH],[70,t.HYDRO_PUMP]],[e.KABUTO]:[[1,t.ABSORB],[1,t.HARDEN],[5,t.SCRATCH],[10,t.SAND_ATTACK],[15,t.AQUA_JET],[20,t.LEER],[25,t.MUD_SHOT],[30,t.ANCIENT_POWER],[35,t.BRINE],[41,t.PROTECT],[45,t.LEECH_LIFE],[50,t.LIQUIDATION],[55,t.METAL_SOUND],[60,t.STONE_EDGE]],[e.KABUTOPS]:[[Ee,t.SLASH],[1,t.SCRATCH],[1,t.SAND_ATTACK],[1,t.ABSORB],[1,t.HARDEN],[1,t.FEINT],[1,t.NIGHT_SLASH],[15,t.AQUA_JET],[20,t.LEER],[25,t.MUD_SHOT],[30,t.ANCIENT_POWER],[35,t.BRINE],[43,t.PROTECT],[49,t.LEECH_LIFE],[56,t.LIQUIDATION],[63,t.METAL_SOUND],[70,t.STONE_EDGE]],[e.AERODACTYL]:[[1,t.BITE],[1,t.ANCIENT_POWER],[5,t.SUPERSONIC],[10,t.WING_ATTACK],[15,t.SCARY_FACE],[20,t.ROCK_SLIDE],[25,t.ROAR],[30,t.CRUNCH],[35,t.IRON_HEAD],[40,t.TAKE_DOWN],[45,t.STONE_EDGE],[50,t.AGILITY],[55,t.HYPER_BEAM],[60,t.GIGA_IMPACT]],[e.SNORLAX]:[[1,t.TACKLE],[1,t.SCREECH],[1,t.ODOR_SLEUTH],[1,t.DEFENSE_CURL],[1,t.METRONOME],[1,t.LICK],[1,t.FLAIL],[1,t.STOCKPILE],[1,t.SWALLOW],[1,t.RECYCLE],[1,t.BLOCK],[1,t.COVET],[1,t.FLING],[1,t.LAST_RESORT],[12,t.YAWN],[16,t.BITE],[20,t.REST],[20,t.SNORE],[20,t.SLEEP_TALK],[24,t.CRUNCH],[28,t.BODY_SLAM],[32,t.HEAVY_SLAM],[36,t.AMNESIA],[40,t.HIGH_HORSEPOWER],[44,t.HAMMER_ARM],[48,t.BELLY_DRUM],[52,t.BELCH],[56,t.GIGA_IMPACT]],[e.ARTICUNO]:[[1,t.GUST],[1,t.MIST],[5,t.POWDER_SNOW],[10,t.REFLECT],[15,t.ICE_SHARD],[20,t.AGILITY],[25,t.ANCIENT_POWER],[30,t.TAILWIND],[35,t.FREEZE_DRY],[40,t.ROOST],[45,t.ICE_BEAM],[50,t.SNOWSCAPE],[55,t.HURRICANE],[60,t.HAZE],[65,t.BLIZZARD],[70,t.SHEER_COLD]],[e.ZAPDOS]:[[1,t.PECK],[1,t.THUNDER_WAVE],[5,t.THUNDER_SHOCK],[10,t.LIGHT_SCREEN],[15,t.PLUCK],[20,t.AGILITY],[25,t.ANCIENT_POWER],[30,t.CHARGE],[35,t.DRILL_PECK],[40,t.ROOST],[45,t.DISCHARGE],[50,t.RAIN_DANCE],[55,t.THUNDER],[60,t.DETECT],[65,t.MAGNETIC_FLUX],[70,t.ZAP_CANNON]],[e.MOLTRES]:[[1,t.GUST],[1,t.LEER],[5,t.EMBER],[10,t.SAFEGUARD],[15,t.WING_ATTACK],[20,t.AGILITY],[25,t.ANCIENT_POWER],[30,t.INCINERATE],[35,t.AIR_SLASH],[40,t.ROOST],[45,t.HEAT_WAVE],[50,t.SUNNY_DAY],[55,t.HURRICANE],[60,t.ENDURE],[65,t.OVERHEAT],[70,t.SKY_ATTACK]],[e.DRATINI]:[[1,t.WRAP],[1,t.LEER],[5,t.TWISTER],[10,t.THUNDER_WAVE],[15,t.DRAGON_TAIL],[20,t.AGILITY],[25,t.SLAM],[31,t.AQUA_TAIL],[35,t.DRAGON_RUSH],[40,t.SAFEGUARD],[45,t.RAIN_DANCE],[50,t.DRAGON_DANCE],[55,t.OUTRAGE],[60,t.HYPER_BEAM]],[e.DRAGONAIR]:[[1,t.WRAP],[1,t.LEER],[1,t.THUNDER_WAVE],[1,t.TWISTER],[15,t.DRAGON_TAIL],[20,t.AGILITY],[25,t.SLAM],[33,t.AQUA_TAIL],[39,t.DRAGON_RUSH],[46,t.SAFEGUARD],[53,t.RAIN_DANCE],[60,t.DRAGON_DANCE],[67,t.OUTRAGE],[74,t.HYPER_BEAM]],[e.DRAGONITE]:[[Ee,t.HURRICANE],[1,t.FIRE_PUNCH],[1,t.THUNDER_PUNCH],[1,t.WING_ATTACK],[1,t.WRAP],[1,t.LEER],[1,t.THUNDER_WAVE],[1,t.TWISTER],[1,t.EXTREME_SPEED],[1,t.ROOST],[15,t.DRAGON_TAIL],[20,t.AGILITY],[25,t.SLAM],[33,t.AQUA_TAIL],[39,t.DRAGON_RUSH],[41,t.OUTRAGE],[46,t.SAFEGUARD],[53,t.RAIN_DANCE],[62,t.DRAGON_DANCE],[80,t.HYPER_BEAM]],[e.MEWTWO]:[[1,t.DISABLE],[1,t.CONFUSION],[1,t.SWIFT],[1,t.LIFE_DEW],[8,t.ANCIENT_POWER],[16,t.PSYCHO_CUT],[24,t.SAFEGUARD],[32,t.AMNESIA],[40,t.AURA_SPHERE],[48,t.PSYCHIC],[56,t.POWER_SWAP],[56,t.GUARD_SWAP],[64,t.MIST],[72,t.PSYSTRIKE],[80,t.RECOVER],[88,t.FUTURE_SIGHT]],[e.MEW]:[[1,t.POUND],[1,t.REFLECT_TYPE],[10,t.AMNESIA],[20,t.BATON_PASS],[30,t.ANCIENT_POWER],[40,t.LIFE_DEW],[50,t.NASTY_PLOT],[60,t.METRONOME],[70,t.IMPRISON],[80,t.TRANSFORM],[90,t.AURA_SPHERE],[100,t.PSYCHIC]],[e.CHIKORITA]:[[1,t.TACKLE],[1,t.GROWL],[5,t.RAZOR_LEAF],[9,t.POISON_POWDER],[12,t.SYNTHESIS],[17,t.REFLECT],[20,t.MAGICAL_LEAF],[23,t.LEECH_SEED],[28,t.SWEET_SCENT],[31,t.LIGHT_SCREEN],[34,t.BODY_SLAM],[39,t.SAFEGUARD],[42,t.GIGA_DRAIN],[45,t.SOLAR_BEAM]],[e.BAYLEEF]:[[1,t.TACKLE],[1,t.GROWL],[1,t.RAZOR_LEAF],[1,t.POISON_POWDER],[12,t.SYNTHESIS],[18,t.REFLECT],[22,t.MAGICAL_LEAF],[26,t.LEECH_SEED],[32,t.SWEET_SCENT],[36,t.LIGHT_SCREEN],[40,t.BODY_SLAM],[46,t.SAFEGUARD],[50,t.GIGA_DRAIN],[54,t.SOLAR_BEAM]],[e.MEGANIUM]:[[Ee,t.PETAL_DANCE],[1,t.TACKLE],[1,t.GROWL],[1,t.RAZOR_LEAF],[1,t.POISON_POWDER],[1,t.PETAL_BLIZZARD],[12,t.SYNTHESIS],[18,t.REFLECT],[22,t.MAGICAL_LEAF],[26,t.LEECH_SEED],[34,t.SWEET_SCENT],[40,t.LIGHT_SCREEN],[46,t.BODY_SLAM],[54,t.SAFEGUARD],[60,t.GIGA_DRAIN],[65,t.SOLAR_BEAM]],[e.CYNDAQUIL]:[[1,t.TACKLE],[1,t.LEER],[5,t.EMBER],[10,t.SMOKESCREEN],[13,t.QUICK_ATTACK],[19,t.FLAME_WHEEL],[22,t.DEFENSE_CURL],[28,t.FLAME_CHARGE],[31,t.SWIFT],[37,t.LAVA_PLUME],[40,t.FLAMETHROWER],[46,t.INFERNO],[49,t.ROLLOUT],[55,t.DOUBLE_EDGE],[58,t.OVERHEAT],[64,t.ERUPTION]],[e.QUILAVA]:[[1,t.TACKLE],[1,t.LEER],[1,t.SMOKESCREEN],[10,t.EMBER],[13,t.QUICK_ATTACK],[20,t.FLAME_WHEEL],[24,t.DEFENSE_CURL],[31,t.SWIFT],[35,t.FLAME_CHARGE],[42,t.LAVA_PLUME],[46,t.FLAMETHROWER],[53,t.INFERNO],[57,t.ROLLOUT],[64,t.DOUBLE_EDGE],[68,t.OVERHEAT],[75,t.ERUPTION]],[e.TYPHLOSION]:[[1,t.TACKLE],[1,t.DOUBLE_EDGE],[1,t.LEER],[1,t.EMBER],[1,t.SMOKESCREEN],[1,t.ERUPTION],[1,t.GYRO_BALL],[13,t.QUICK_ATTACK],[20,t.FLAME_WHEEL],[24,t.DEFENSE_CURL],[31,t.SWIFT],[35,t.FLAME_CHARGE],[43,t.LAVA_PLUME],[48,t.FLAMETHROWER],[56,t.INFERNO],[61,t.ROLLOUT],[74,t.OVERHEAT]],[e.TOTODILE]:[[1,t.SCRATCH],[1,t.LEER],[5,t.WATER_GUN],[9,t.BITE],[13,t.SCARY_FACE],[19,t.ICE_FANG],[22,t.FLAIL],[27,t.CRUNCH],[30,t.SLASH],[33,t.SCREECH],[37,t.THRASH],[41,t.AQUA_TAIL],[45,t.SUPERPOWER],[50,t.HYDRO_PUMP]],[e.CROCONAW]:[[1,t.SCRATCH],[1,t.LEER],[1,t.WATER_GUN],[13,t.BITE],[15,t.SCARY_FACE],[21,t.ICE_FANG],[24,t.FLAIL],[30,t.CRUNCH],[34,t.SLASH],[37,t.SCREECH],[42,t.THRASH],[47,t.AQUA_TAIL],[50,t.SUPERPOWER],[55,t.HYDRO_PUMP]],[e.FERALIGATR]:[[1,t.AGILITY],[1,t.SCRATCH],[1,t.LEER],[1,t.WATER_GUN],[13,t.BITE],[15,t.SCARY_FACE],[21,t.ICE_FANG],[24,t.FLAIL],[32,t.CRUNCH],[37,t.SLASH],[44,t.SCREECH],[51,t.THRASH],[59,t.AQUA_TAIL],[65,t.SUPERPOWER],[70,t.HYDRO_PUMP]],[e.SENTRET]:[[1,t.SCRATCH],[4,t.DEFENSE_CURL],[7,t.QUICK_ATTACK],[13,t.FURY_SWIPES],[16,t.HELPING_HAND],[19,t.FOLLOW_ME],[25,t.SLAM],[28,t.REST],[31,t.SUCKER_PUNCH],[36,t.AMNESIA],[39,t.BATON_PASS],[42,t.DOUBLE_EDGE],[47,t.HYPER_VOICE]],[e.FURRET]:[[Ee,t.AGILITY],[1,t.SCRATCH],[1,t.QUICK_ATTACK],[1,t.DEFENSE_CURL],[1,t.COIL],[13,t.FURY_SWIPES],[17,t.HELPING_HAND],[21,t.FOLLOW_ME],[28,t.SLAM],[32,t.REST],[36,t.SUCKER_PUNCH],[42,t.AMNESIA],[46,t.BATON_PASS],[50,t.DOUBLE_EDGE],[56,t.HYPER_VOICE]],[e.HOOTHOOT]:[[1,t.GROWL],[1,t.PECK],[3,t.TACKLE],[6,t.ECHOED_VOICE],[9,t.CONFUSION],[12,t.REFLECT],[15,t.DEFOG],[18,t.AIR_SLASH],[21,t.EXTRASENSORY],[24,t.TAKE_DOWN],[27,t.UPROAR],[30,t.ROOST],[33,t.MOONBLAST],[36,t.HYPNOSIS],[39,t.DREAM_EATER]],[e.NOCTOWL]:[[1,t.TACKLE],[1,t.GROWL],[1,t.PECK],[1,t.SKY_ATTACK],[1,t.ECHOED_VOICE],[9,t.CONFUSION],[12,t.REFLECT],[15,t.DEFOG],[18,t.AIR_SLASH],[23,t.EXTRASENSORY],[28,t.TAKE_DOWN],[33,t.UPROAR],[38,t.ROOST],[43,t.MOONBLAST],[48,t.HYPNOSIS],[53,t.DREAM_EATER]],[e.LEDYBA]:[[1,t.TACKLE],[5,t.SUPERSONIC],[8,t.SWIFT],[12,t.LIGHT_SCREEN],[12,t.REFLECT],[12,t.SAFEGUARD],[15,t.MACH_PUNCH],[19,t.ROOST],[22,t.STRUGGLE_BUG],[26,t.BATON_PASS],[29,t.AGILITY],[33,t.BUG_BUZZ],[36,t.AIR_SLASH],[40,t.DOUBLE_EDGE]],[e.LEDIAN]:[[1,t.TACKLE],[1,t.SUPERSONIC],[1,t.SWIFT],[5,t.SUPERSONIC],[12,t.LIGHT_SCREEN],[12,t.REFLECT],[12,t.SAFEGUARD],[15,t.MACH_PUNCH],[20,t.ROOST],[24,t.STRUGGLE_BUG],[29,t.BATON_PASS],[33,t.AGILITY],[38,t.BUG_BUZZ],[42,t.AIR_SLASH],[47,t.DOUBLE_EDGE]],[e.SPINARAK]:[[1,t.POISON_STING],[1,t.STRING_SHOT],[1,t.CONSTRICT],[5,t.ABSORB],[8,t.INFESTATION],[12,t.SCARY_FACE],[15,t.NIGHT_SHADE],[19,t.SHADOW_SNEAK],[22,t.FURY_SWIPES],[26,t.SUCKER_PUNCH],[29,t.AGILITY],[33,t.PIN_MISSILE],[36,t.PSYCHIC],[40,t.POISON_JAB],[44,t.CROSS_POISON],[47,t.STICKY_WEB],[51,t.TOXIC_THREAD]],[e.ARIADOS]:[[Ee,t.SWORDS_DANCE],[1,t.POISON_STING],[1,t.ABSORB],[1,t.STRING_SHOT],[1,t.CONSTRICT],[1,t.FOCUS_ENERGY],[1,t.BUG_BITE],[1,t.FELL_STINGER],[8,t.INFESTATION],[12,t.SCARY_FACE],[15,t.NIGHT_SHADE],[19,t.SHADOW_SNEAK],[23,t.FURY_SWIPES],[28,t.SUCKER_PUNCH],[31,t.AGILITY],[35,t.PIN_MISSILE],[41,t.PSYCHIC],[46,t.POISON_JAB],[50,t.CROSS_POISON],[54,t.STICKY_WEB],[59,t.TOXIC_THREAD]],[e.CROBAT]:[[Ee,t.CROSS_POISON],[1,t.SUPERSONIC],[1,t.ABSORB],[1,t.TOXIC],[1,t.SCREECH],[1,t.MEAN_LOOK],[1,t.ASTONISH],[1,t.TAILWIND],[15,t.POISON_FANG],[20,t.QUICK_GUARD],[27,t.AIR_CUTTER],[34,t.BITE],[41,t.HAZE],[48,t.VENOSHOCK],[55,t.CONFUSE_RAY],[62,t.AIR_SLASH],[69,t.LEECH_LIFE]],[e.CHINCHOU]:[[1,t.SUPERSONIC],[1,t.WATER_GUN],[4,t.ELECTRO_BALL],[8,t.THUNDER_WAVE],[12,t.BUBBLE_BEAM],[16,t.CONFUSE_RAY],[20,t.SPARK],[24,t.CHARGE],[28,t.DISCHARGE],[32,t.AQUA_RING],[36,t.FLAIL],[40,t.TAKE_DOWN],[44,t.HYDRO_PUMP]],[e.LANTURN]:[[Ee,t.STOCKPILE],[Ee,t.SPIT_UP],[Ee,t.SWALLOW],[1,t.SUPERSONIC],[1,t.WATER_GUN],[1,t.SPOTLIGHT],[1,t.THUNDER_WAVE],[1,t.ELECTRO_BALL],[1,t.EERIE_IMPULSE],[12,t.BUBBLE_BEAM],[16,t.CONFUSE_RAY],[20,t.SPARK],[24,t.CHARGE],[30,t.DISCHARGE],[36,t.AQUA_RING],[42,t.FLAIL],[48,t.TAKE_DOWN],[54,t.HYDRO_PUMP]],[e.PICHU]:[[1,t.TAIL_WHIP],[1,t.THUNDER_SHOCK],[4,t.PLAY_NICE],[8,t.SWEET_KISS],[12,t.NUZZLE],[16,t.NASTY_PLOT],[20,t.CHARM]],[e.CLEFFA]:[[1,t.POUND],[1,t.SPLASH],[1,t.COPYCAT],[4,t.SING],[8,t.SWEET_KISS],[12,t.DISARMING_VOICE],[16,t.ENCORE],[20,t.CHARM]],[e.IGGLYBUFF]:[[1,t.POUND],[1,t.SING],[1,t.COPYCAT],[4,t.DEFENSE_CURL],[8,t.SWEET_KISS],[12,t.DISARMING_VOICE],[16,t.DISABLE],[20,t.CHARM]],[e.TOGEPI]:[[1,t.POUND],[1,t.GROWL],[4,t.SWEET_KISS],[8,t.LIFE_DEW],[12,t.CHARM],[16,t.ANCIENT_POWER],[20,t.YAWN],[24,t.METRONOME],[28,t.AFTER_YOU],[32,t.DOUBLE_EDGE],[36,t.SAFEGUARD],[40,t.FOLLOW_ME],[44,t.BATON_PASS],[48,t.LAST_RESORT],[52,t.WISH]],[e.TOGETIC]:[[Ee,t.FAIRY_WIND],[1,t.POUND],[1,t.GROWL],[1,t.SWEET_KISS],[1,t.LIFE_DEW],[12,t.CHARM],[16,t.ANCIENT_POWER],[20,t.YAWN],[24,t.METRONOME],[28,t.AFTER_YOU],[32,t.DOUBLE_EDGE],[36,t.SAFEGUARD],[40,t.FOLLOW_ME],[44,t.BATON_PASS],[48,t.LAST_RESORT],[52,t.WISH]],[e.NATU]:[[1,t.LEER],[1,t.PECK],[5,t.STORED_POWER],[10,t.TELEPORT],[15,t.CONFUSE_RAY],[20,t.NIGHT_SHADE],[26,t.PSYCHO_SHIFT],[30,t.POWER_SWAP],[35,t.PSYCHIC],[35,t.GUARD_SWAP],[40,t.WISH],[45,t.FUTURE_SIGHT]],[e.XATU]:[[Ee,t.AIR_SLASH],[1,t.LEER],[1,t.PECK],[1,t.TELEPORT],[1,t.TAILWIND],[1,t.STORED_POWER],[15,t.CONFUSE_RAY],[20,t.NIGHT_SHADE],[28,t.PSYCHO_SHIFT],[34,t.POWER_SWAP],[34,t.GUARD_SWAP],[41,t.PSYCHIC],[48,t.WISH],[55,t.FUTURE_SIGHT]],[e.MAREEP]:[[1,t.TACKLE],[1,t.GROWL],[4,t.THUNDER_WAVE],[8,t.THUNDER_SHOCK],[11,t.COTTON_SPORE],[15,t.CHARGE],[18,t.TAKE_DOWN],[22,t.ELECTRO_BALL],[25,t.CONFUSE_RAY],[29,t.POWER_GEM],[32,t.DISCHARGE],[36,t.COTTON_GUARD],[39,t.DAZZLING_GLEAM],[43,t.LIGHT_SCREEN],[46,t.THUNDER]],[e.FLAAFFY]:[[1,t.TACKLE],[1,t.GROWL],[6,t.THUNDER_SHOCK],[9,t.THUNDER_WAVE],[11,t.COTTON_SPORE],[16,t.CHARGE],[20,t.TAKE_DOWN],[25,t.ELECTRO_BALL],[29,t.CONFUSE_RAY],[34,t.POWER_GEM],[38,t.DISCHARGE],[43,t.COTTON_GUARD],[47,t.DAZZLING_GLEAM],[52,t.LIGHT_SCREEN],[56,t.THUNDER]],[e.AMPHAROS]:[[Ee,t.THUNDER_PUNCH],[1,t.FIRE_PUNCH],[1,t.TACKLE],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.THUNDER_WAVE],[1,t.ZAP_CANNON],[1,t.DRAGON_PULSE],[1,t.MAGNETIC_FLUX],[1,t.ION_DELUGE],[11,t.COTTON_SPORE],[16,t.CHARGE],[20,t.TAKE_DOWN],[25,t.ELECTRO_BALL],[29,t.CONFUSE_RAY],[35,t.POWER_GEM],[40,t.DISCHARGE],[46,t.COTTON_GUARD],[51,t.DAZZLING_GLEAM],[57,t.LIGHT_SCREEN],[62,t.THUNDER]],[e.BELLOSSOM]:[[Ee,t.PETAL_BLIZZARD],[1,t.ACID],[1,t.ABSORB],[1,t.MEGA_DRAIN],[1,t.GROWTH],[1,t.POISON_POWDER],[1,t.STUN_SPORE],[1,t.SLEEP_POWDER],[1,t.PETAL_DANCE],[1,t.TOXIC],[1,t.GIGA_DRAIN],[1,t.SWEET_SCENT],[1,t.MOONLIGHT],[1,t.QUIVER_DANCE],[1,t.GRASSY_TERRAIN],[1,t.MOONBLAST]],[e.MARILL]:[[1,t.SPLASH],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.DEFENSE_CURL],[1,t.ROLLOUT],[1,t.HELPING_HAND],[6,t.BUBBLE_BEAM],[9,t.CHARM],[12,t.SLAM],[15,t.BOUNCE],[19,t.AQUA_TAIL],[21,t.PLAY_ROUGH],[24,t.AQUA_RING],[27,t.RAIN_DANCE],[30,t.HYDRO_PUMP],[33,t.DOUBLE_EDGE],[36,t.SUPERPOWER]],[e.AZUMARILL]:[[1,t.SPLASH],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.DEFENSE_CURL],[1,t.ROLLOUT],[1,t.HELPING_HAND],[6,t.BUBBLE_BEAM],[9,t.CHARM],[12,t.SLAM],[15,t.BOUNCE],[21,t.AQUA_TAIL],[25,t.PLAY_ROUGH],[30,t.AQUA_RING],[35,t.RAIN_DANCE],[40,t.HYDRO_PUMP],[45,t.DOUBLE_EDGE],[50,t.SUPERPOWER]],[e.SUDOWOODO]:[[Ee,t.SLAM],[1,t.ROCK_THROW],[1,t.TACKLE],[1,t.FLAIL],[1,t.FAKE_TEARS],[1,t.HAMMER_ARM],[1,t.COPYCAT],[1,t.STONE_EDGE],[1,t.WOOD_HAMMER],[12,t.BLOCK],[16,t.MIMIC],[20,t.ROCK_TOMB],[24,t.TEARFUL_LOOK],[28,t.SUCKER_PUNCH],[32,t.ROCK_SLIDE],[36,t.LOW_KICK],[40,t.COUNTER],[44,t.DOUBLE_EDGE],[48,t.HEAD_SMASH]],[e.POLITOED]:[[Ee,t.BOUNCE],[X,t.BODY_SLAM],[X,t.DOUBLE_EDGE],[X,t.WATER_GUN],[X,t.BUBBLE_BEAM],[X,t.HYPNOSIS],[X,t.PERISH_SONG],[X,t.SWAGGER],[X,t.HYPER_VOICE],[X,t.MUD_SHOT],[X,t.EARTH_POWER],[1,t.RAIN_DANCE],[1,t.HYDRO_PUMP],[1,t.BELLY_DRUM],[1,t.POUND],[1,t.WATER_SPORT]],[e.HOPPIP]:[[1,t.TACKLE],[1,t.SPLASH],[4,t.TAIL_WHIP],[6,t.ABSORB],[8,t.FAIRY_WIND],[10,t.POISON_POWDER],[10,t.STUN_SPORE],[10,t.SLEEP_POWDER],[12,t.BULLET_SEED],[15,t.SYNTHESIS],[19,t.LEECH_SEED],[22,t.MEGA_DRAIN],[24,t.ACROBATICS],[27,t.COTTON_SPORE],[29,t.U_TURN],[32,t.GIGA_DRAIN],[35,t.BOUNCE],[38,t.MEMENTO]],[e.SKIPLOOM]:[[1,t.TAIL_WHIP],[1,t.ABSORB],[1,t.SPLASH],[1,t.SYNTHESIS],[8,t.TACKLE],[10,t.FAIRY_WIND],[12,t.POISON_POWDER],[12,t.STUN_SPORE],[12,t.SLEEP_POWDER],[15,t.BULLET_SEED],[20,t.LEECH_SEED],[24,t.MEGA_DRAIN],[28,t.ACROBATICS],[31,t.COTTON_SPORE],[34,t.U_TURN],[37,t.GIGA_DRAIN],[41,t.BOUNCE],[44,t.MEMENTO]],[e.JUMPLUFF]:[[1,t.TAIL_WHIP],[1,t.ABSORB],[1,t.SPLASH],[1,t.SYNTHESIS],[8,t.TACKLE],[10,t.FAIRY_WIND],[12,t.POISON_POWDER],[12,t.STUN_SPORE],[12,t.SLEEP_POWDER],[15,t.BULLET_SEED],[20,t.LEECH_SEED],[24,t.MEGA_DRAIN],[30,t.ACROBATICS],[35,t.COTTON_SPORE],[39,t.U_TURN],[43,t.GIGA_DRAIN],[49,t.BOUNCE],[55,t.MEMENTO]],[e.AIPOM]:[[1,t.SCRATCH],[1,t.TAIL_WHIP],[4,t.SAND_ATTACK],[8,t.ASTONISH],[11,t.BATON_PASS],[15,t.TICKLE],[18,t.FURY_SWIPES],[22,t.SWIFT],[25,t.SCREECH],[29,t.AGILITY],[32,t.DOUBLE_HIT],[36,t.FLING],[39,t.NASTY_PLOT],[43,t.LAST_RESORT]],[e.SUNKERN]:[[1,t.TACKLE],[1,t.GROWTH],[7,t.ABSORB],[10,t.MEGA_DRAIN],[16,t.RAZOR_LEAF],[19,t.WORRY_SEED],[22,t.GIGA_DRAIN],[25,t.ENDEAVOR],[28,t.SYNTHESIS],[31,t.SOLAR_BEAM],[34,t.DOUBLE_EDGE],[36,t.SUNNY_DAY],[39,t.SEED_BOMB]],[e.SUNFLORA]:[[X,t.SEED_BOMB],[1,t.POUND],[1,t.TACKLE],[1,t.GROWTH],[1,t.ENDEAVOR],[1,t.SYNTHESIS],[4,t.INGRAIN],[7,t.ABSORB],[10,t.MEGA_DRAIN],[13,t.LEECH_SEED],[16,t.RAZOR_LEAF],[19,t.WORRY_SEED],[22,t.GIGA_DRAIN],[25,t.BULLET_SEED],[28,t.PETAL_DANCE],[31,t.SOLAR_BEAM],[34,t.DOUBLE_EDGE],[39,t.SUNNY_DAY],[43,t.LEAF_STORM],[50,t.PETAL_BLIZZARD]],[e.YANMA]:[[1,t.TACKLE],[6,t.QUICK_ATTACK],[11,t.DOUBLE_TEAM],[14,t.AIR_CUTTER],[17,t.DETECT],[22,t.SUPERSONIC],[27,t.UPROAR],[30,t.BUG_BITE],[33,t.ANCIENT_POWER],[38,t.HYPNOSIS],[43,t.WING_ATTACK],[46,t.SCREECH],[49,t.U_TURN],[54,t.AIR_SLASH],[57,t.BUG_BUZZ]],[e.WOOPER]:[[1,t.TAIL_WHIP],[1,t.WATER_GUN],[4,t.RAIN_DANCE],[8,t.MUD_SHOT],[12,t.MIST],[12,t.HAZE],[16,t.SLAM],[21,t.YAWN],[24,t.AQUA_TAIL],[28,t.MUDDY_WATER],[32,t.AMNESIA],[36,t.TOXIC],[40,t.EARTHQUAKE]],[e.QUAGSIRE]:[[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.RAIN_DANCE],[1,t.MUD_SHOT],[12,t.MIST],[12,t.HAZE],[16,t.SLAM],[23,t.YAWN],[28,t.AQUA_TAIL],[34,t.MUDDY_WATER],[40,t.AMNESIA],[46,t.TOXIC],[52,t.EARTHQUAKE]],[e.ESPEON]:[[Ee,t.GLITZY_GLOW],[X,t.VEEVEE_VOLLEY],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.BITE],[1,t.GROWL],[1,t.CHARM],[1,t.BATON_PASS],[1,t.HELPING_HAND],[1,t.COVET],[1,t.COPYCAT],[5,t.SAND_ATTACK],[10,t.CONFUSION],[15,t.QUICK_ATTACK],[20,t.BABY_DOLL_EYES],[25,t.SWIFT],[30,t.PSYBEAM],[35,t.MORNING_SUN],[40,t.POWER_SWAP],[45,t.PSYCHIC],[50,t.PSYCH_UP],[55,t.FUTURE_SIGHT],[60,t.LAST_RESORT]],[e.UMBREON]:[[Ee,t.BADDY_BAD],[X,t.VEEVEE_VOLLEY],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.BITE],[1,t.GROWL],[1,t.SWIFT],[1,t.CHARM],[1,t.BATON_PASS],[1,t.HELPING_HAND],[1,t.COVET],[1,t.COPYCAT],[1,t.PURSUIT],[5,t.SAND_ATTACK],[10,t.SNARL],[15,t.QUICK_ATTACK],[20,t.BABY_DOLL_EYES],[25,t.CONFUSE_RAY],[30,t.ASSURANCE],[35,t.MOONLIGHT],[40,t.GUARD_SWAP],[45,t.DARK_PULSE],[50,t.SCREECH],[55,t.MEAN_LOOK],[60,t.LAST_RESORT]],[e.MURKROW]:[[1,t.PECK],[1,t.ASTONISH],[5,t.GUST],[11,t.HAZE],[15,t.WING_ATTACK],[21,t.NIGHT_SHADE],[25,t.ASSURANCE],[31,t.TAUNT],[35,t.MEAN_LOOK],[40,t.FOUL_PLAY],[50,t.SUCKER_PUNCH],[55,t.TORMENT],[60,t.QUASH]],[e.SLOWKING]:[[X,t.FUTURE_SIGHT],[X,t.CHILLY_RECEPTION],[1,t.POWER_GEM],[1,t.NASTY_PLOT],[1,t.SWAGGER],[1,t.TACKLE],[1,t.CURSE],[1,t.GROWL],[1,t.WATER_GUN],[9,t.YAWN],[12,t.CONFUSION],[15,t.DISABLE],[18,t.WATER_PULSE],[21,t.HEADBUTT],[24,t.ZEN_HEADBUTT],[27,t.AMNESIA],[30,t.SURF],[33,t.SLACK_OFF],[36,t.PSYCHIC],[39,t.PSYCH_UP],[42,t.RAIN_DANCE],[45,t.HEAL_PULSE]],[e.MISDREAVUS]:[[1,t.GROWL],[1,t.CONFUSION],[1,t.PSYWAVE],[10,t.ASTONISH],[14,t.CONFUSE_RAY],[19,t.MEAN_LOOK],[23,t.HEX],[28,t.PSYBEAM],[32,t.PAIN_SPLIT],[37,t.PAYBACK],[41,t.SHADOW_BALL],[46,t.PERISH_SONG],[50,t.POWER_GEM]],[e.UNOWN]:[[1,t.HIDDEN_POWER]],[e.WOBBUFFET]:[[Ee,t.COUNTER],[Ee,t.DESTINY_BOND],[Ee,t.SAFEGUARD],[Ee,t.MIRROR_COAT],[1,t.COUNTER],[1,t.DESTINY_BOND],[1,t.SAFEGUARD],[1,t.MIRROR_COAT],[1,t.AMNESIA],[1,t.SPLASH],[1,t.CHARM],[1,t.ENCORE]],[e.GIRAFARIG]:[[1,t.TACKLE],[1,t.GROWL],[1,t.ASTONISH],[1,t.POWER_SWAP],[1,t.GUARD_SWAP],[5,t.CONFUSION],[10,t.ASSURANCE],[14,t.STOMP],[19,t.PSYBEAM],[23,t.AGILITY],[28,t.DOUBLE_HIT],[32,t.TWIN_BEAM],[37,t.CRUNCH],[41,t.BATON_PASS],[46,t.NASTY_PLOT],[50,t.PSYCHIC]],[e.PINECO]:[[1,t.TACKLE],[1,t.PROTECT],[6,t.SELF_DESTRUCT],[9,t.BUG_BITE],[12,t.TAKE_DOWN],[17,t.RAPID_SPIN],[20,t.ROLLOUT],[23,t.CURSE],[28,t.SPIKES],[31,t.PAYBACK],[34,t.EXPLOSION],[39,t.IRON_DEFENSE],[42,t.GYRO_BALL],[45,t.DOUBLE_EDGE]],[e.FORRETRESS]:[[Ee,t.HEAVY_SLAM],[1,t.TACKLE],[1,t.SELF_DESTRUCT],[1,t.PROTECT],[1,t.ZAP_CANNON],[1,t.TOXIC_SPIKES],[1,t.MAGNET_RISE],[1,t.BUG_BITE],[1,t.MIRROR_SHOT],[12,t.TAKE_DOWN],[17,t.RAPID_SPIN],[20,t.ROLLOUT],[23,t.CURSE],[28,t.SPIKES],[32,t.PAYBACK],[36,t.EXPLOSION],[42,t.IRON_DEFENSE],[46,t.GYRO_BALL],[50,t.DOUBLE_EDGE]],[e.DUNSPARCE]:[[1,t.DEFENSE_CURL],[1,t.FLAIL],[1,t.TACKLE],[4,t.MUD_SLAP],[8,t.ROLLOUT],[12,t.GLARE],[16,t.SCREECH],[20,t.ANCIENT_POWER],[24,t.DRILL_RUN],[28,t.YAWN],[32,t.HYPER_DRILL],[36,t.ROOST],[40,t.DRAGON_RUSH],[44,t.COIL],[48,t.DOUBLE_EDGE],[52,t.ENDEAVOR]],[e.GLIGAR]:[[1,t.POISON_STING],[4,t.SAND_ATTACK],[7,t.HARDEN],[10,t.KNOCK_OFF],[13,t.QUICK_ATTACK],[16,t.FURY_CUTTER],[19,t.POISON_TAIL],[22,t.ACROBATICS],[27,t.SLASH],[30,t.U_TURN],[35,t.SCREECH],[40,t.X_SCISSOR],[45,t.CRABHAMMER],[50,t.SWORDS_DANCE]],[e.STEELIX]:[[1,t.BIND],[1,t.TACKLE],[1,t.ROCK_THROW],[1,t.HARDEN],[1,t.MUD_SPORT],[1,t.CRUNCH],[1,t.ROCK_POLISH],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[4,t.SMACK_DOWN],[8,t.AUTOTOMIZE],[12,t.DRAGON_BREATH],[16,t.CURSE],[20,t.ROCK_SLIDE],[22,t.GYRO_BALL],[24,t.SCREECH],[28,t.SAND_TOMB],[32,t.STEALTH_ROCK],[36,t.SLAM],[40,t.SANDSTORM],[44,t.DIG],[48,t.IRON_TAIL],[52,t.STONE_EDGE],[56,t.DOUBLE_EDGE],[60,t.MAGNET_RISE]],[e.SNUBBULL]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.SCARY_FACE],[1,t.CHARM],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[7,t.BITE],[13,t.LICK],[19,t.HEADBUTT],[25,t.ROAR],[31,t.LAST_RESORT],[37,t.PLAY_ROUGH],[43,t.PAYBACK],[49,t.CRUNCH]],[e.GRANBULL]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.SCARY_FACE],[1,t.OUTRAGE],[1,t.CHARM],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[7,t.BITE],[13,t.LICK],[19,t.HEADBUTT],[27,t.ROAR],[35,t.LAST_RESORT],[43,t.PLAY_ROUGH],[51,t.PAYBACK],[59,t.CRUNCH]],[e.QWILFISH]:[[1,t.TACKLE],[1,t.POISON_STING],[4,t.HARDEN],[8,t.WATER_GUN],[12,t.FELL_STINGER],[16,t.MINIMIZE],[20,t.SPIKES],[24,t.BRINE],[28,t.POISON_JAB],[32,t.PIN_MISSILE],[36,t.TOXIC_SPIKES],[40,t.STOCKPILE],[40,t.SPIT_UP],[44,t.TOXIC],[48,t.AQUA_TAIL],[52,t.ACUPRESSURE],[56,t.DESTINY_BOND]],[e.SCIZOR]:[[Ee,t.BULLET_PUNCH],[1,t.WING_ATTACK],[1,t.LEER],[1,t.AGILITY],[1,t.QUICK_ATTACK],[1,t.FALSE_SWIPE],[1,t.FURY_CUTTER],[1,t.AIR_SLASH],[12,t.METAL_CLAW],[16,t.DOUBLE_TEAM],[20,t.DOUBLE_HIT],[24,t.SLASH],[28,t.FOCUS_ENERGY],[30,t.STEEL_WING],[32,t.IRON_DEFENSE],[36,t.IRON_HEAD],[40,t.X_SCISSOR],[44,t.SWORDS_DANCE]],[e.SHUCKLE]:[[1,t.WRAP],[1,t.WITHDRAW],[1,t.BIDE],[1,t.CONSTRICT],[5,t.ROLLOUT],[10,t.STRUGGLE_BUG],[15,t.ROCK_THROW],[20,t.SAFEGUARD],[25,t.REST],[30,t.BUG_BITE],[35,t.GUARD_SPLIT],[35,t.POWER_SPLIT],[40,t.ROCK_SLIDE],[45,t.GASTRO_ACID],[50,t.STICKY_WEB],[55,t.POWER_TRICK],[60,t.STONE_EDGE],[65,t.SHELL_SMASH]],[e.HERACROSS]:[[1,t.TACKLE],[1,t.LEER],[1,t.ARM_THRUST],[5,t.FURY_ATTACK],[10,t.ENDURE],[15,t.AERIAL_ACE],[20,t.HORN_ATTACK],[25,t.COUNTER],[30,t.BRICK_BREAK],[35,t.PIN_MISSILE],[40,t.THROAT_CHOP],[45,t.THRASH],[50,t.SWORDS_DANCE],[55,t.MEGAHORN],[60,t.CLOSE_COMBAT]],[e.SNEASEL]:[[1,t.SCRATCH],[1,t.LEER],[6,t.TAUNT],[12,t.QUICK_ATTACK],[18,t.METAL_CLAW],[24,t.ICY_WIND],[30,t.FURY_SWIPES],[36,t.HONE_CLAWS],[42,t.BEAT_UP],[48,t.AGILITY],[54,t.SCREECH],[60,t.SLASH]],[e.TEDDIURSA]:[[1,t.SCRATCH],[1,t.LICK],[1,t.COVET],[1,t.FLING],[1,t.BABY_DOLL_EYES],[8,t.FURY_SWIPES],[13,t.PAYBACK],[17,t.SWEET_SCENT],[22,t.SLASH],[25,t.PLAY_NICE],[29,t.PLAY_ROUGH],[33,t.CHARM],[37,t.REST],[37,t.SNORE],[41,t.THRASH]],[e.URSARING]:[[1,t.SCRATCH],[1,t.LEER],[1,t.LICK],[1,t.COVET],[1,t.FLING],[1,t.BABY_DOLL_EYES],[1,t.FAKE_TEARS],[1,t.CHARM],[8,t.FURY_SWIPES],[13,t.PAYBACK],[17,t.SWEET_SCENT],[22,t.SLASH],[25,t.PLAY_NICE],[29,t.PLAY_ROUGH],[35,t.SCARY_FACE],[41,t.REST],[41,t.SNORE],[48,t.HIGH_HORSEPOWER],[56,t.THRASH],[64,t.HAMMER_ARM]],[e.SLUGMA]:[[1,t.SMOG],[1,t.YAWN],[5,t.EMBER],[8,t.ROCK_THROW],[13,t.HARDEN],[20,t.CLEAR_SMOG],[22,t.ANCIENT_POWER],[27,t.INCINERATE],[29,t.ROCK_SLIDE],[34,t.LAVA_PLUME],[36,t.AMNESIA],[41,t.BODY_SLAM],[43,t.RECOVER],[48,t.FLAMETHROWER],[50,t.EARTH_POWER]],[e.MAGCARGO]:[[Ee,t.SHELL_SMASH],[1,t.EMBER],[1,t.ROCK_THROW],[1,t.SMOG],[1,t.YAWN],[1,t.EARTH_POWER],[13,t.HARDEN],[20,t.CLEAR_SMOG],[22,t.ANCIENT_POWER],[27,t.INCINERATE],[29,t.ROCK_SLIDE],[34,t.LAVA_PLUME],[36,t.AMNESIA],[43,t.BODY_SLAM],[47,t.RECOVER],[54,t.FLAMETHROWER]],[e.SWINUB]:[[1,t.TACKLE],[1,t.MUD_SLAP],[1,t.ODOR_SLEUTH],[5,t.POWDER_SNOW],[10,t.FLAIL],[15,t.ICE_SHARD],[20,t.MIST],[25,t.ENDURE],[30,t.ICY_WIND],[35,t.AMNESIA],[40,t.TAKE_DOWN],[45,t.EARTHQUAKE],[50,t.BLIZZARD]],[e.PILOSWINE]:[[Ee,t.ICE_FANG],[1,t.TACKLE],[1,t.FLAIL],[1,t.POWDER_SNOW],[1,t.MUD_SLAP],[1,t.ODOR_SLEUTH],[1,t.ANCIENT_POWER],[15,t.ICE_SHARD],[20,t.MIST],[25,t.ENDURE],[30,t.ICY_WIND],[37,t.AMNESIA],[44,t.TAKE_DOWN],[51,t.EARTHQUAKE],[58,t.BLIZZARD],[65,t.THRASH]],[e.CORSOLA]:[[1,t.TACKLE],[1,t.HARDEN],[5,t.WATER_GUN],[10,t.AQUA_RING],[15,t.ENDURE],[20,t.ANCIENT_POWER],[25,t.BUBBLE_BEAM],[30,t.FLAIL],[35,t.LIFE_DEW],[40,t.POWER_GEM],[45,t.EARTH_POWER],[50,t.RECOVER],[55,t.MIRROR_COAT]],[e.REMORAID]:[[1,t.WATER_GUN],[1,t.HELPING_HAND],[4,t.WATER_PULSE],[8,t.FOCUS_ENERGY],[12,t.PSYBEAM],[16,t.AURORA_BEAM],[20,t.BUBBLE_BEAM],[24,t.LOCK_ON],[28,t.BULLET_SEED],[32,t.ICE_BEAM],[36,t.HYDRO_PUMP],[40,t.SOAK],[44,t.HYPER_BEAM]],[e.OCTILLERY]:[[Ee,t.OCTAZOOKA],[1,t.WRAP],[1,t.CONSTRICT],[1,t.WATER_GUN],[1,t.FOCUS_ENERGY],[1,t.HELPING_HAND],[1,t.ROCK_BLAST],[1,t.WATER_PULSE],[1,t.GUNK_SHOT],[12,t.PSYBEAM],[16,t.AURORA_BEAM],[20,t.BUBBLE_BEAM],[24,t.LOCK_ON],[30,t.BULLET_SEED],[36,t.ICE_BEAM],[42,t.HYDRO_PUMP],[48,t.SOAK],[54,t.HYPER_BEAM]],[e.DELIBIRD]:[[1,t.PRESENT],[1,t.METRONOME],[5,t.FAKE_OUT],[5,t.POWDER_SNOW],[6,t.MIST],[10,t.ICE_SHARD],[15,t.AERIAL_ACE],[20,t.ICY_WIND],[25,t.DRILL_PECK],[30,t.ICE_PUNCH],[35,t.HAZE],[40,t.AIR_SLASH],[45,t.TAILWIND],[50,t.SNOWSCAPE],[55,t.BLIZZARD],[60,t.BRAVE_BIRD]],[e.MANTINE]:[[1,t.WING_ATTACK],[1,t.TACKLE],[1,t.SUPERSONIC],[1,t.WATER_GUN],[1,t.PSYBEAM],[1,t.SIGNAL_BEAM],[1,t.BULLET_SEED],[1,t.ROOST],[12,t.WATER_PULSE],[16,t.WIDE_GUARD],[20,t.AGILITY],[24,t.BUBBLE_BEAM],[28,t.HEADBUTT],[32,t.AIR_SLASH],[36,t.AQUA_RING],[40,t.BOUNCE],[44,t.TAKE_DOWN],[48,t.HYDRO_PUMP]],[e.SKARMORY]:[[1,t.LEER],[1,t.PECK],[4,t.SAND_ATTACK],[8,t.FURY_ATTACK],[12,t.METAL_CLAW],[16,t.AGILITY],[20,t.WING_ATTACK],[24,t.SLASH],[28,t.STEEL_WING],[32,t.PAYBACK],[36,t.DRILL_PECK],[40,t.METAL_SOUND],[44,t.SPIKES],[48,t.IRON_DEFENSE],[52,t.BRAVE_BIRD]],[e.HOUNDOUR]:[[1,t.LEER],[1,t.EMBER],[4,t.HOWL],[8,t.SMOG],[13,t.ROAR],[16,t.BITE],[20,t.INCINERATE],[25,t.BEAT_UP],[28,t.FIRE_FANG],[32,t.TORMENT],[37,t.COMEUPPANCE],[40,t.FOUL_PLAY],[44,t.FLAMETHROWER],[49,t.CRUNCH],[52,t.NASTY_PLOT],[56,t.INFERNO]],[e.HOUNDOOM]:[[1,t.LEER],[1,t.EMBER],[1,t.SMOG],[1,t.HOWL],[1,t.NASTY_PLOT],[1,t.THUNDER_FANG],[13,t.ROAR],[16,t.BITE],[20,t.INCINERATE],[26,t.BEAT_UP],[30,t.FIRE_FANG],[35,t.TORMENT],[41,t.COMEUPPANCE],[45,t.FOUL_PLAY],[50,t.FLAMETHROWER],[56,t.CRUNCH],[62,t.INFERNO]],[e.KINGDRA]:[[X,t.LASER_FOCUS],[1,t.LEER],[1,t.WATER_GUN],[1,t.SMOKESCREEN],[1,t.TWISTER],[1,t.WHIRLPOOL],[1,t.YAWN],[15,t.FOCUS_ENERGY],[20,t.DRAGON_BREATH],[25,t.BUBBLE_BEAM],[30,t.AGILITY],[37,t.WATER_PULSE],[44,t.DRAGON_PULSE],[51,t.HYDRO_PUMP],[58,t.DRAGON_DANCE],[65,t.RAIN_DANCE],[72,t.WAVE_CRASH]],[e.PHANPY]:[[1,t.TACKLE],[1,t.GROWL],[1,t.DEFENSE_CURL],[1,t.ODOR_SLEUTH],[6,t.FLAIL],[10,t.ROLLOUT],[15,t.BULLDOZE],[19,t.ENDURE],[24,t.SLAM],[28,t.TAKE_DOWN],[33,t.CHARM],[37,t.LAST_RESORT],[42,t.DOUBLE_EDGE]],[e.DONPHAN]:[[Ee,t.FURY_ATTACK],[1,t.TACKLE],[1,t.GROWL],[1,t.HORN_ATTACK],[1,t.DEFENSE_CURL],[1,t.ODOR_SLEUTH],[1,t.FLAIL],[1,t.ENDURE],[1,t.TAKE_DOWN],[1,t.CHARM],[1,t.LAST_RESORT],[1,t.DOUBLE_EDGE],[1,t.THUNDER_FANG],[1,t.FIRE_FANG],[1,t.BULLDOZE],[6,t.RAPID_SPIN],[10,t.ROLLOUT],[15,t.ASSURANCE],[19,t.KNOCK_OFF],[24,t.SLAM],[30,t.STOMPING_TANTRUM],[37,t.SCARY_FACE],[43,t.EARTHQUAKE],[50,t.GIGA_IMPACT]],[e.PORYGON2]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[1,t.CONVERSION],[1,t.RECYCLE],[1,t.MAGNET_RISE],[1,t.MAGIC_COAT],[15,t.THUNDER_SHOCK],[20,t.PSYBEAM],[25,t.CONVERSION_2],[30,t.AGILITY],[35,t.RECOVER],[40,t.DISCHARGE],[45,t.TRI_ATTACK],[50,t.LOCK_ON],[55,t.ZAP_CANNON],[60,t.HYPER_BEAM]],[e.STANTLER]:[[1,t.TACKLE],[1,t.ME_FIRST],[3,t.LEER],[7,t.ASTONISH],[10,t.HYPNOSIS],[13,t.STOMP],[16,t.SAND_ATTACK],[21,t.TAKE_DOWN],[23,t.CONFUSE_RAY],[25,t.PSYSHIELD_BASH],[27,t.CALM_MIND],[32,t.ROLE_PLAY],[37,t.ZEN_HEADBUTT],[49,t.IMPRISON],[55,t.DOUBLE_EDGE]],[e.SMEARGLE]:[[1,t.SKETCH],[11,t.SKETCH],[21,t.SKETCH],[31,t.SKETCH],[41,t.SKETCH],[51,t.SKETCH],[61,t.SKETCH],[71,t.SKETCH],[81,t.SKETCH],[91,t.SKETCH]],[e.TYROGUE]:[[1,t.TACKLE],[1,t.FOCUS_ENERGY],[1,t.FAKE_OUT],[1,t.HELPING_HAND],[10,t.LOW_SWEEP],[10,t.MACH_PUNCH],[10,t.RAPID_SPIN]],[e.HITMONTOP]:[[Ee,t.TRIPLE_KICK],[1,t.TACKLE],[1,t.FOCUS_ENERGY],[1,t.RAPID_SPIN],[1,t.FAKE_OUT],[1,t.HELPING_HAND],[1,t.FEINT],[1,t.PURSUIT],[1,t.ROLLING_KICK],[1,t.LOW_SWEEP],[1,t.MACH_PUNCH],[4,t.QUICK_ATTACK],[8,t.GYRO_BALL],[12,t.DETECT],[16,t.REVENGE],[21,t.WIDE_GUARD],[21,t.QUICK_GUARD],[24,t.SUCKER_PUNCH],[28,t.AGILITY],[32,t.DIG],[36,t.CLOSE_COMBAT],[40,t.COUNTER],[44,t.ENDEAVOR]],[e.SMOOCHUM]:[[1,t.POUND],[1,t.LICK],[4,t.POWDER_SNOW],[8,t.COPYCAT],[12,t.CONFUSION],[16,t.COVET],[20,t.SING],[24,t.FAKE_TEARS],[28,t.ICE_PUNCH],[32,t.PSYCHIC],[36,t.SWEET_KISS],[40,t.MEAN_LOOK],[44,t.PERISH_SONG],[48,t.BLIZZARD]],[e.ELEKID]:[[1,t.LEER],[1,t.QUICK_ATTACK],[4,t.THUNDER_SHOCK],[8,t.CHARGE],[12,t.SWIFT],[16,t.SHOCK_WAVE],[20,t.THUNDER_WAVE],[24,t.SCREECH],[28,t.THUNDER_PUNCH],[32,t.DISCHARGE],[36,t.LOW_KICK],[40,t.THUNDERBOLT],[44,t.LIGHT_SCREEN],[48,t.THUNDER]],[e.MAGBY]:[[1,t.LEER],[1,t.SMOG],[4,t.EMBER],[8,t.SMOKESCREEN],[12,t.CLEAR_SMOG],[16,t.FLAME_WHEEL],[20,t.CONFUSE_RAY],[24,t.SCARY_FACE],[28,t.FIRE_PUNCH],[32,t.LAVA_PLUME],[36,t.LOW_KICK],[40,t.FLAMETHROWER],[44,t.SUNNY_DAY],[48,t.FIRE_BLAST]],[e.MILTANK]:[[1,t.TACKLE],[1,t.GROWL],[5,t.ROLLOUT],[10,t.DEFENSE_CURL],[15,t.STOMP],[20,t.HEAL_BELL],[25,t.HEADBUTT],[30,t.ZEN_HEADBUTT],[35,t.MILK_DRINK],[40,t.BODY_SLAM],[45,t.PLAY_ROUGH],[50,t.CHARM],[55,t.HIGH_HORSEPOWER]],[e.BLISSEY]:[[1,t.POUND],[1,t.DEFENSE_CURL],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.COVET],[1,t.COPYCAT],[1,t.DISARMING_VOICE],[4,t.TAIL_WHIP],[8,t.ECHOED_VOICE],[12,t.LIFE_DEW],[16,t.SING],[20,t.FLING],[24,t.TAKE_DOWN],[28,t.HEAL_PULSE],[32,t.HELPING_HAND],[36,t.LIGHT_SCREEN],[40,t.DOUBLE_EDGE],[44,t.SOFT_BOILED],[48,t.LAST_RESORT],[52,t.HEALING_WISH]],[e.RAIKOU]:[[1,t.LEER],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.EXTREME_SPEED],[1,t.CHARGE],[6,t.SPARK],[12,t.BITE],[18,t.CALM_MIND],[24,t.ROAR],[30,t.THUNDER_FANG],[36,t.HOWL],[42,t.CRUNCH],[48,t.EXTRASENSORY],[54,t.DISCHARGE],[60,t.REFLECT],[66,t.RAIN_DANCE],[72,t.THUNDER],[78,t.ZAP_CANNON]],[e.ENTEI]:[[X,t.SACRED_FIRE],[X,t.EXTREME_SPEED],[1,t.STOMP],[1,t.LEER],[1,t.EMBER],[1,t.SMOKESCREEN],[6,t.FLAME_WHEEL],[12,t.BITE],[18,t.CALM_MIND],[24,t.ROAR],[30,t.FIRE_FANG],[36,t.SCARY_FACE],[42,t.CRUNCH],[48,t.EXTRASENSORY],[54,t.LAVA_PLUME],[60,t.SWAGGER],[66,t.SUNNY_DAY],[72,t.FIRE_BLAST],[78,t.ERUPTION]],[e.SUICUNE]:[[X,t.EXTREME_SPEED],[X,t.SHEER_COLD],[1,t.GUST],[1,t.LEER],[1,t.MIST],[1,t.WATER_GUN],[6,t.WATER_PULSE],[12,t.BITE],[18,t.CALM_MIND],[24,t.ROAR],[30,t.ICE_FANG],[36,t.TAILWIND],[42,t.CRUNCH],[48,t.EXTRASENSORY],[54,t.SURF],[60,t.MIRROR_COAT],[66,t.RAIN_DANCE],[72,t.HYDRO_PUMP],[78,t.BLIZZARD]],[e.LARVITAR]:[[1,t.TACKLE],[1,t.LEER],[3,t.ROCK_THROW],[6,t.PAYBACK],[9,t.BITE],[12,t.SCARY_FACE],[15,t.ROCK_SLIDE],[18,t.STOMPING_TANTRUM],[21,t.SCREECH],[24,t.SMACK_DOWN],[27,t.CRUNCH],[31,t.EARTHQUAKE],[33,t.STONE_EDGE],[36,t.THRASH],[39,t.SANDSTORM],[42,t.HYPER_BEAM]],[e.PUPITAR]:[[Ee,t.IRON_DEFENSE],[1,t.TACKLE],[1,t.LEER],[1,t.ROCK_THROW],[1,t.PAYBACK],[9,t.BITE],[12,t.SCARY_FACE],[15,t.ROCK_SLIDE],[18,t.STOMPING_TANTRUM],[21,t.SCREECH],[24,t.SMACK_DOWN],[27,t.CRUNCH],[33,t.EARTHQUAKE],[37,t.STONE_EDGE],[42,t.THRASH],[47,t.SANDSTORM],[52,t.HYPER_BEAM]],[e.TYRANITAR]:[[1,t.TACKLE],[1,t.LEER],[1,t.ROCK_THROW],[1,t.IRON_DEFENSE],[1,t.PAYBACK],[1,t.DARK_PULSE],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[9,t.BITE],[12,t.SCARY_FACE],[15,t.ROCK_SLIDE],[18,t.STOMPING_TANTRUM],[21,t.SCREECH],[24,t.SMACK_DOWN],[27,t.CRUNCH],[33,t.EARTHQUAKE],[37,t.STONE_EDGE],[42,t.THRASH],[47,t.SANDSTORM],[52,t.HYPER_BEAM],[59,t.GIGA_IMPACT]],[e.LUGIA]:[[X,t.DRAGON_RUSH],[1,t.GUST],[1,t.WHIRLWIND],[1,t.ANCIENT_POWER],[1,t.WEATHER_BALL],[9,t.MIST],[18,t.SAFEGUARD],[27,t.CALM_MIND],[36,t.EXTRASENSORY],[45,t.RECOVER],[54,t.AEROBLAST],[63,t.RAIN_DANCE],[72,t.HYDRO_PUMP],[81,t.FUTURE_SIGHT],[90,t.SKY_ATTACK]],[e.HO_OH]:[[1,t.GUST],[1,t.WHIRLWIND],[1,t.ANCIENT_POWER],[1,t.WEATHER_BALL],[9,t.LIFE_DEW],[18,t.SAFEGUARD],[27,t.CALM_MIND],[36,t.EXTRASENSORY],[45,t.RECOVER],[54,t.SACRED_FIRE],[63,t.SUNNY_DAY],[72,t.FIRE_BLAST],[81,t.FUTURE_SIGHT],[90,t.SKY_ATTACK],[99,t.OVERHEAT]],[e.CELEBI]:[[1,t.CONFUSION],[1,t.HEAL_BELL],[10,t.MAGICAL_LEAF],[20,t.BATON_PASS],[30,t.ANCIENT_POWER],[40,t.LIFE_DEW],[50,t.LEECH_SEED],[55,t.HEAL_BLOCK],[60,t.RECOVER],[70,t.FUTURE_SIGHT],[80,t.HEALING_WISH],[90,t.LEAF_STORM],[100,t.PERISH_SONG]],[e.TREECKO]:[[1,t.POUND],[1,t.LEER],[3,t.LEAFAGE],[6,t.QUICK_ATTACK],[9,t.MEGA_DRAIN],[12,t.DETECT],[15,t.QUICK_GUARD],[18,t.ASSURANCE],[21,t.GIGA_DRAIN],[24,t.SLAM],[27,t.DOUBLE_TEAM],[30,t.ENERGY_BALL],[33,t.SCREECH],[36,t.ENDEAVOR],[39,t.LEAF_STORM]],[e.GROVYLE]:[[X,t.FALSE_SWIPE],[X,t.FURY_CUTTER],[X,t.X_SCISSOR],[X,t.ENERGY_BALL],[1,t.POUND],[1,t.LEER],[1,t.LEAFAGE],[1,t.QUICK_ATTACK],[9,t.MEGA_DRAIN],[12,t.DETECT],[15,t.QUICK_GUARD],[20,t.ASSURANCE],[25,t.GIGA_DRAIN],[30,t.SLAM],[35,t.DOUBLE_TEAM],[40,t.LEAF_BLADE],[45,t.SCREECH],[50,t.ENDEAVOR],[55,t.LEAF_STORM]],[e.SCEPTILE]:[[Ee,t.LEAF_BLADE],[X,t.FALSE_SWIPE],[X,t.FURY_CUTTER],[X,t.X_SCISSOR],[X,t.ENERGY_BALL],[X,t.SHED_TAIL],[1,t.POUND],[1,t.LEER],[1,t.LEAFAGE],[1,t.QUICK_ATTACK],[1,t.DUAL_CHOP],[5,t.MEGA_DRAIN],[12,t.DETECT],[15,t.QUICK_GUARD],[20,t.ASSURANCE],[25,t.GIGA_DRAIN],[30,t.SLAM],[35,t.DOUBLE_TEAM],[42,t.SCREECH],[49,t.ENDEAVOR],[56,t.LEAF_STORM]],[e.TORCHIC]:[[1,t.SCRATCH],[1,t.GROWL],[3,t.EMBER],[6,t.QUICK_ATTACK],[9,t.FLAME_CHARGE],[12,t.DETECT],[15,t.SAND_ATTACK],[18,t.AERIAL_ACE],[21,t.SLASH],[24,t.BOUNCE],[27,t.FOCUS_ENERGY],[30,t.FLAMETHROWER],[33,t.FEATHER_DANCE],[36,t.REVERSAL],[39,t.FLARE_BLITZ]],[e.COMBUSKEN]:[[Ee,t.DOUBLE_KICK],[X,t.FLAMETHROWER],[X,t.FEATHER_DANCE],[1,t.SCRATCH],[1,t.GROWL],[1,t.EMBER],[1,t.QUICK_ATTACK],[9,t.FLAME_CHARGE],[12,t.DETECT],[15,t.SAND_ATTACK],[20,t.AERIAL_ACE],[25,t.SLASH],[30,t.BOUNCE],[35,t.FOCUS_ENERGY],[40,t.BLAZE_KICK],[45,t.BULK_UP],[50,t.REVERSAL],[55,t.FLARE_BLITZ]],[e.BLAZIKEN]:[[Ee,t.BLAZE_KICK],[X,t.FIRE_PUNCH],[X,t.EMBER],[X,t.FLAMETHROWER],[X,t.FEATHER_DANCE],[1,t.DOUBLE_KICK],[1,t.SCRATCH],[1,t.GROWL],[1,t.QUICK_ATTACK],[9,t.FLAME_CHARGE],[12,t.DETECT],[15,t.SAND_ATTACK],[20,t.AERIAL_ACE],[25,t.SLASH],[30,t.BOUNCE],[35,t.FOCUS_ENERGY],[42,t.BULK_UP],[49,t.REVERSAL],[56,t.FLARE_BLITZ],[63,t.BRAVE_BIRD]],[e.MUDKIP]:[[1,t.TACKLE],[1,t.GROWL],[3,t.WATER_GUN],[6,t.ROCK_SMASH],[9,t.ROCK_THROW],[12,t.PROTECT],[15,t.SUPERSONIC],[18,t.WATER_PULSE],[21,t.ROCK_SLIDE],[24,t.TAKE_DOWN],[27,t.AMNESIA],[30,t.SURF],[33,t.SCREECH],[36,t.ENDEAVOR],[39,t.HYDRO_PUMP]],[e.MARSHTOMP]:[[Ee,t.MUD_SHOT],[X,t.SURF],[X,t.ROCK_SMASH],[1,t.TACKLE],[1,t.GROWL],[1,t.WATER_GUN],[9,t.ROCK_THROW],[12,t.PROTECT],[15,t.SUPERSONIC],[20,t.WATER_PULSE],[25,t.ROCK_SLIDE],[30,t.TAKE_DOWN],[35,t.AMNESIA],[40,t.MUDDY_WATER],[45,t.SCREECH],[50,t.ENDEAVOR],[55,t.HYDRO_PUMP]],[e.SWAMPERT]:[[X,t.SURF],[X,t.EARTHQUAKE],[X,t.ROCK_SMASH],[X,t.HAMMER_ARM],[1,t.MUD_SHOT],[1,t.TACKLE],[1,t.GROWL],[1,t.WATER_GUN],[9,t.ROCK_THROW],[12,t.PROTECT],[15,t.SUPERSONIC],[20,t.WATER_PULSE],[25,t.ROCK_SLIDE],[30,t.TAKE_DOWN],[35,t.AMNESIA],[42,t.MUDDY_WATER],[49,t.SCREECH],[56,t.ENDEAVOR],[63,t.HYDRO_PUMP]],[e.POOCHYENA]:[[1,t.TACKLE],[4,t.HOWL],[7,t.SAND_ATTACK],[10,t.BITE],[13,t.LEER],[16,t.ROAR],[19,t.SWAGGER],[22,t.ASSURANCE],[25,t.SCARY_FACE],[28,t.TAUNT],[31,t.CRUNCH],[34,t.YAWN],[36,t.TAKE_DOWN],[40,t.SUCKER_PUNCH],[44,t.PLAY_ROUGH]],[e.MIGHTYENA]:[[Ee,t.SNARL],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.BITE],[1,t.THIEF],[1,t.CRUNCH],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[13,t.LEER],[13,t.HOWL],[16,t.ROAR],[20,t.SWAGGER],[24,t.ASSURANCE],[28,t.SCARY_FACE],[36,t.TAUNT],[44,t.YAWN],[48,t.TAKE_DOWN],[52,t.SUCKER_PUNCH],[56,t.PLAY_ROUGH]],[e.ZIGZAGOON]:[[1,t.TACKLE],[1,t.GROWL],[3,t.SAND_ATTACK],[6,t.TAIL_WHIP],[9,t.COVET],[12,t.HEADBUTT],[15,t.BABY_DOLL_EYES],[18,t.PIN_MISSILE],[21,t.REST],[24,t.TAKE_DOWN],[27,t.FLING],[30,t.FLAIL],[33,t.BELLY_DRUM],[36,t.DOUBLE_EDGE]],[e.LINOONE]:[[Ee,t.SLASH],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.PIN_MISSILE],[1,t.GROWL],[1,t.SWITCHEROO],[1,t.BABY_DOLL_EYES],[1,t.ROTOTILLER],[9,t.COVET],[12,t.HEADBUTT],[15,t.HONE_CLAWS],[18,t.FURY_SWIPES],[23,t.REST],[28,t.TAKE_DOWN],[33,t.FLING],[38,t.FLAIL],[43,t.BELLY_DRUM],[48,t.DOUBLE_EDGE]],[e.WURMPLE]:[[1,t.TACKLE],[1,t.STRING_SHOT],[5,t.POISON_STING],[15,t.BUG_BITE]],[e.SILCOON]:[[Ee,t.HARDEN],[X,t.TACKLE],[X,t.STRING_SHOT],[X,t.POISON_STING],[X,t.BUG_BITE],[1,t.HARDEN]],[e.BEAUTIFLY]:[[Ee,t.GUST],[1,t.TACKLE],[1,t.BUG_BITE],[1,t.GUST],[1,t.HARDEN],[1,t.STRING_SHOT],[1,t.POISON_STING],[12,t.ABSORB],[15,t.STUN_SPORE],[17,t.MORNING_SUN],[20,t.AIR_CUTTER],[22,t.MEGA_DRAIN],[25,t.LEECH_LIFE],[27,t.ATTRACT],[30,t.WHIRLWIND],[32,t.GIGA_DRAIN],[35,t.BUG_BUZZ],[37,t.PROTECT],[40,t.QUIVER_DANCE]],[e.CASCOON]:[[Ee,t.HARDEN],[X,t.TACKLE],[X,t.STRING_SHOT],[X,t.POISON_STING],[X,t.BUG_BITE],[1,t.HARDEN]],[e.DUSTOX]:[[Ee,t.GUST],[1,t.TACKLE],[1,t.BUG_BITE],[1,t.GUST],[1,t.HARDEN],[1,t.STRING_SHOT],[1,t.POISON_STING],[12,t.CONFUSION],[15,t.POISON_POWDER],[17,t.MOONLIGHT],[20,t.VENOSHOCK],[22,t.PSYBEAM],[25,t.LEECH_LIFE],[27,t.LIGHT_SCREEN],[30,t.WHIRLWIND],[32,t.TOXIC],[35,t.BUG_BUZZ],[37,t.PROTECT],[40,t.QUIVER_DANCE]],[e.LOTAD]:[[1,t.GROWL],[1,t.ASTONISH],[3,t.ABSORB],[6,t.WATER_GUN],[9,t.MIST],[12,t.MEGA_DRAIN],[16,t.FLAIL],[20,t.BUBBLE_BEAM],[24,t.LEECH_SEED],[28,t.GIGA_DRAIN],[33,t.RAIN_DANCE],[38,t.ZEN_HEADBUTT],[43,t.ENERGY_BALL]],[e.LOMBRE]:[[1,t.GROWL],[1,t.WATER_GUN],[1,t.ABSORB],[1,t.FLAIL],[1,t.FAKE_OUT],[1,t.RAIN_DANCE],[1,t.KNOCK_OFF],[1,t.TEETER_DANCE],[1,t.ASTONISH],[9,t.MIST],[12,t.MEGA_DRAIN],[18,t.FURY_SWIPES],[24,t.BUBBLE_BEAM],[30,t.LEECH_SEED],[36,t.GIGA_DRAIN],[50,t.ZEN_HEADBUTT],[57,t.ENERGY_BALL],[64,t.HYDRO_PUMP]],[e.LUDICOLO]:[[X,t.GROWL],[X,t.MIST],[X,t.WATER_GUN],[X,t.HYDRO_PUMP],[X,t.ABSORB],[X,t.MEGA_DRAIN],[X,t.FURY_SWIPES],[X,t.FLAIL],[X,t.KNOCK_OFF],[X,t.TEETER_DANCE],[X,t.ASTONISH],[X,t.ENERGY_BALL],[X,t.ZEN_HEADBUTT],[X,t.LEECH_SEED],[X,t.GIGA_DRAIN],[1,t.FAKE_OUT],[1,t.BUBBLE_BEAM],[1,t.RAIN_DANCE]],[e.SEEDOT]:[[1,t.TACKLE],[1,t.HARDEN],[1,t.BIDE],[3,t.ABSORB],[6,t.ASTONISH],[9,t.GROWTH],[12,t.ROLLOUT],[15,t.MEGA_DRAIN],[18,t.PAYBACK],[21,t.HEADBUTT],[24,t.SUNNY_DAY],[27,t.SYNTHESIS],[30,t.SUCKER_PUNCH],[33,t.EXPLOSION]],[e.NUZLEAF]:[[Ee,t.RAZOR_LEAF],[1,t.AIR_CUTTER],[1,t.TORMENT],[1,t.FAKE_OUT],[1,t.SWAGGER],[1,t.EXPLOSION],[1,t.TACKLE],[1,t.HARDEN],[1,t.BIDE],[1,t.ABSORB],[1,t.ASTONISH],[1,t.HEADBUTT],[9,t.GROWTH],[12,t.ROLLOUT],[18,t.MEGA_DRAIN],[24,t.PAYBACK],[30,t.SYNTHESIS],[36,t.SUNNY_DAY],[43,t.EXTRASENSORY],[50,t.SUCKER_PUNCH],[57,t.LEAF_BLADE]],[e.SHIFTRY]:[[Ee,t.LEAF_BLADE],[X,t.WHIRLWIND],[X,t.TACKLE],[X,t.BIDE],[X,t.ABSORB],[X,t.MEGA_DRAIN],[X,t.GROWTH],[X,t.RAZOR_LEAF],[X,t.HARDEN],[X,t.HEADBUTT],[X,t.EXPLOSION],[X,t.ROLLOUT],[X,t.SWAGGER],[X,t.SYNTHESIS],[X,t.BEAT_UP],[X,t.FAKE_OUT],[X,t.TORMENT],[X,t.ASTONISH],[X,t.EXTRASENSORY],[X,t.SUCKER_PUNCH],[1,t.AIR_CUTTER],[1,t.HURRICANE],[1,t.PAYBACK],[1,t.SUNNY_DAY]],[e.TAILLOW]:[[1,t.PECK],[1,t.GROWL],[5,t.FOCUS_ENERGY],[9,t.QUICK_ATTACK],[13,t.WING_ATTACK],[17,t.DOUBLE_TEAM],[21,t.AERIAL_ACE],[25,t.QUICK_GUARD],[29,t.AGILITY],[33,t.AIR_SLASH],[37,t.ENDEAVOR],[41,t.BRAVE_BIRD],[45,t.REVERSAL]],[e.SWELLOW]:[[1,t.BRAVE_BIRD],[1,t.AIR_SLASH],[1,t.PLUCK],[1,t.PECK],[1,t.GROWL],[1,t.FOCUS_ENERGY],[1,t.QUICK_ATTACK],[13,t.WING_ATTACK],[17,t.DOUBLE_TEAM],[21,t.AERIAL_ACE],[27,t.QUICK_GUARD],[33,t.AGILITY],[45,t.ENDEAVOR],[51,t.BRAVE_BIRD],[57,t.REVERSAL]],[e.WINGULL]:[[1,t.GROWL],[1,t.WATER_GUN],[5,t.QUICK_ATTACK],[10,t.SUPERSONIC],[15,t.WING_ATTACK],[20,t.WATER_PULSE],[26,t.AGILITY],[30,t.AIR_SLASH],[35,t.MIST],[40,t.ROOST],[45,t.HURRICANE]],[e.PELIPPER]:[[1,t.PROTECT],[1,t.SOAK],[1,t.QUICK_ATTACK],[1,t.AGILITY],[1,t.AIR_SLASH],[1,t.GROWL],[1,t.WATER_GUN],[1,t.TAILWIND],[1,t.SUPERSONIC],[1,t.WATER_SPORT],[15,t.WING_ATTACK],[20,t.WATER_PULSE],[28,t.STOCKPILE],[28,t.SPIT_UP],[28,t.SWALLOW],[34,t.FLING],[41,t.MIST],[48,t.ROOST],[55,t.HURRICANE],[62,t.HYDRO_PUMP]],[e.RALTS]:[[1,t.GROWL],[1,t.DISARMING_VOICE],[3,t.DOUBLE_TEAM],[6,t.CONFUSION],[9,t.HYPNOSIS],[12,t.DRAINING_KISS],[15,t.TELEPORT],[18,t.PSYBEAM],[21,t.LIFE_DEW],[24,t.CHARM],[27,t.CALM_MIND],[30,t.PSYCHIC],[33,t.HEAL_PULSE],[36,t.DREAM_EATER],[39,t.FUTURE_SIGHT]],[e.KIRLIA]:[[1,t.GROWL],[1,t.DISARMING_VOICE],[1,t.DOUBLE_TEAM],[1,t.CONFUSION],[9,t.HYPNOSIS],[12,t.DRAINING_KISS],[15,t.TELEPORT],[18,t.PSYBEAM],[23,t.LIFE_DEW],[28,t.CHARM],[33,t.CALM_MIND],[38,t.PSYCHIC],[43,t.HEAL_PULSE],[48,t.DREAM_EATER],[53,t.FUTURE_SIGHT]],[e.GARDEVOIR]:[[Ee,t.DAZZLING_GLEAM],[1,t.MISTY_TERRAIN],[1,t.HEALING_WISH],[1,t.CHARM],[1,t.MYSTICAL_FIRE],[1,t.HEAL_PULSE],[1,t.GROWL],[1,t.DISARMING_VOICE],[1,t.DOUBLE_TEAM],[1,t.CONFUSION],[9,t.HYPNOSIS],[12,t.DRAINING_KISS],[15,t.TELEPORT],[18,t.PSYBEAM],[23,t.LIFE_DEW],[28,t.WISH],[35,t.CALM_MIND],[42,t.PSYCHIC],[49,t.MOONBLAST],[56,t.DREAM_EATER],[63,t.FUTURE_SIGHT]],[e.SURSKIT]:[[1,t.WATER_GUN],[6,t.QUICK_ATTACK],[9,t.SWEET_SCENT],[14,t.SOAK],[17,t.BUBBLE_BEAM],[22,t.AGILITY],[25,t.MIST],[25,t.HAZE],[35,t.BATON_PASS],[38,t.STICKY_WEB]],[e.MASQUERAIN]:[[X,t.BATON_PASS],[X,t.STICKY_WEB],[1,t.WHIRLWIND],[1,t.WATER_GUN],[1,t.QUICK_ATTACK],[1,t.SWEET_SCENT],[1,t.SOAK],[1,t.BUBBLE_BEAM],[1,t.AGILITY],[1,t.MIST],[1,t.HAZE],[1,t.OMINOUS_WIND],[17,t.GUST],[22,t.SCARY_FACE],[22,t.AIR_CUTTER],[26,t.STUN_SPORE],[32,t.AIR_SLASH],[38,t.GIGA_DRAIN],[44,t.BUG_BUZZ],[52,t.QUIVER_DANCE]],[e.SHROOMISH]:[[1,t.ABSORB],[1,t.TACKLE],[5,t.STUN_SPORE],[8,t.LEECH_SEED],[12,t.MEGA_DRAIN],[15,t.HEADBUTT],[19,t.POISON_POWDER],[26,t.GIGA_DRAIN],[29,t.GROWTH],[33,t.TOXIC],[36,t.SEED_BOMB],[40,t.SPORE]],[e.BRELOOM]:[[Ee,t.MACH_PUNCH],[X,t.SPORE],[1,t.POISON_POWDER],[1,t.GIGA_DRAIN],[1,t.GROWTH],[1,t.TOXIC],[1,t.ABSORB],[1,t.TACKLE],[1,t.STUN_SPORE],[1,t.LEECH_SEED],[12,t.MEGA_DRAIN],[15,t.HEADBUTT],[19,t.FEINT],[22,t.COUNTER],[28,t.FORCE_PALM],[33,t.WORRY_SEED],[39,t.BRICK_BREAK],[44,t.SEED_BOMB],[50,t.DYNAMIC_PUNCH],[55,t.FOCUS_PUNCH]],[e.SLAKOTH]:[[1,t.SCRATCH],[1,t.YAWN],[6,t.ENCORE],[9,t.SLACK_OFF],[14,t.HEADBUTT],[17,t.AMNESIA],[22,t.COVET],[25,t.THROAT_CHOP],[30,t.COUNTER],[33,t.FLAIL],[38,t.PLAY_ROUGH]],[e.VIGOROTH]:[[X,t.PLAY_ROUGH],[1,t.SCRATCH],[1,t.YAWN],[1,t.FOCUS_ENERGY],[1,t.SLACK_OFF],[1,t.ENCORE],[1,t.HEADBUTT],[1,t.AMNESIA],[1,t.COVET],[1,t.FLAIL],[1,t.UPROAR],[14,t.FURY_SWIPES],[17,t.ENDURE],[23,t.SLASH],[27,t.THROAT_CHOP],[33,t.COUNTER],[37,t.FOCUS_PUNCH],[43,t.REVERSAL]],[e.SLAKING]:[[Ee,t.SWAGGER],[X,t.PLAY_ROUGH],[X,t.FOCUS_PUNCH],[1,t.SUCKER_PUNCH],[1,t.SCRATCH],[1,t.YAWN],[1,t.FOCUS_ENERGY],[1,t.ENCORE],[1,t.SLACK_OFF],[1,t.UPROAR],[1,t.FURY_SWIPES],[1,t.ENDURE],[1,t.HEADBUTT],[1,t.SLASH],[1,t.REVERSAL],[17,t.AMNESIA],[23,t.COVET],[27,t.THROAT_CHOP],[33,t.COUNTER],[39,t.FLAIL],[45,t.FLING],[52,t.MEGA_KICK],[63,t.HAMMER_ARM]],[e.NINCADA]:[[1,t.SCRATCH],[1,t.SAND_ATTACK],[5,t.HARDEN],[10,t.FALSE_SWIPE],[15,t.MUD_SLAP],[21,t.ABSORB],[25,t.METAL_CLAW],[30,t.FURY_SWIPES],[35,t.MIND_READER],[40,t.DIG]],[e.NINJASK]:[[Ee,t.DOUBLE_TEAM],[Ee,t.SCREECH],[Ee,t.FURY_CUTTER],[1,t.BATON_PASS],[1,t.AERIAL_ACE],[1,t.MUD_SLAP],[1,t.METAL_CLAW],[1,t.DIG],[1,t.SAND_ATTACK],[1,t.SCRATCH],[1,t.HARDEN],[1,t.FALSE_SWIPE],[15,t.AGILITY],[23,t.ABSORB],[29,t.BUG_BITE],[36,t.FURY_SWIPES],[43,t.MIND_READER],[50,t.SLASH],[57,t.SWORDS_DANCE],[64,t.X_SCISSOR]],[e.SHEDINJA]:[[1,t.SHADOW_CLAW],[1,t.GRUDGE],[1,t.MUD_SLAP],[1,t.METAL_CLAW],[1,t.DIG],[1,t.SCRATCH],[1,t.SAND_ATTACK],[1,t.HARDEN],[1,t.FALSE_SWIPE],[15,t.CONFUSE_RAY],[23,t.ABSORB],[29,t.SHADOW_SNEAK],[36,t.FURY_SWIPES],[43,t.MIND_READER],[50,t.SHADOW_BALL],[57,t.SPITE],[64,t.PHANTOM_FORCE]],[e.WHISMUR]:[[1,t.ASTONISH],[1,t.POUND],[5,t.ECHOED_VOICE],[10,t.HOWL],[15,t.REST],[15,t.SLEEP_TALK],[21,t.STOMP],[25,t.ROAR],[30,t.SUPERSONIC],[35,t.UPROAR],[40,t.SCREECH],[45,t.HYPER_VOICE]],[e.LOUDRED]:[[Ee,t.BITE],[1,t.ASTONISH],[1,t.POUND],[1,t.ECHOED_VOICE],[1,t.HOWL],[15,t.REST],[15,t.SLEEP_TALK],[23,t.STOMP],[29,t.ROAR],[36,t.SUPERSONIC],[43,t.UPROAR],[50,t.SCREECH],[57,t.HYPER_VOICE]],[e.EXPLOUD]:[[Ee,t.CRUNCH],[1,t.BITE],[1,t.ICE_FANG],[1,t.FIRE_FANG],[1,t.THUNDER_FANG],[1,t.ASTONISH],[1,t.POUND],[1,t.ECHOED_VOICE],[1,t.HOWL],[15,t.REST],[15,t.SLEEP_TALK],[23,t.STOMP],[29,t.ROAR],[36,t.SUPERSONIC],[45,t.UPROAR],[54,t.SCREECH],[63,t.HYPER_VOICE],[72,t.BOOMBURST],[81,t.HYPER_BEAM]],[e.MAKUHITA]:[[1,t.TACKLE],[1,t.FOCUS_ENERGY],[4,t.SAND_ATTACK],[7,t.ARM_THRUST],[10,t.FAKE_OUT],[13,t.FORCE_PALM],[16,t.WHIRLWIND],[19,t.KNOCK_OFF],[22,t.BULK_UP],[25,t.BELLY_DRUM],[28,t.DETECT],[31,t.SEISMIC_TOSS],[34,t.FOCUS_PUNCH],[37,t.ENDURE],[40,t.CLOSE_COMBAT],[43,t.REVERSAL],[46,t.HEAVY_SLAM]],[e.HARIYAMA]:[[1,t.BRINE],[1,t.TACKLE],[1,t.FOCUS_ENERGY],[1,t.SAND_ATTACK],[1,t.ARM_THRUST],[10,t.FAKE_OUT],[13,t.FORCE_PALM],[16,t.WHIRLWIND],[19,t.KNOCK_OFF],[22,t.BULK_UP],[26,t.BELLY_DRUM],[30,t.DETECT],[34,t.SEISMIC_TOSS],[38,t.FOCUS_PUNCH],[42,t.ENDURE],[46,t.CLOSE_COMBAT],[50,t.REVERSAL],[54,t.HEAVY_SLAM],[60,t.HEADLONG_RUSH]],[e.AZURILL]:[[1,t.SPLASH],[1,t.WATER_GUN],[1,t.TAIL_WHIP],[3,t.HELPING_HAND],[6,t.BUBBLE_BEAM],[9,t.CHARM],[12,t.SLAM],[15,t.BOUNCE]],[e.NOSEPASS]:[[1,t.TACKLE],[4,t.HARDEN],[7,t.BLOCK],[10,t.ROCK_THROW],[13,t.THUNDER_WAVE],[16,t.REST],[19,t.SPARK],[22,t.ROCK_SLIDE],[25,t.POWER_GEM],[28,t.ROCK_BLAST],[31,t.DISCHARGE],[34,t.SANDSTORM],[37,t.EARTH_POWER],[40,t.STONE_EDGE],[43,t.LOCK_ON],[43,t.ZAP_CANNON]],[e.SKITTY]:[[1,t.FAKE_OUT],[1,t.GROWL],[1,t.TAIL_WHIP],[4,t.TACKLE],[7,t.SING],[10,t.ATTRACT],[13,t.DISARMING_VOICE],[16,t.FURY_SWIPES],[19,t.COPYCAT],[22,t.PAYBACK],[25,t.CHARM],[31,t.FACADE],[34,t.COVET],[37,t.HEAL_BELL],[40,t.DOUBLE_EDGE],[43,t.BABY_DOLL_EYES],[46,t.PLAY_ROUGH]],[e.DELCATTY]:[[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.FAKE_OUT],[1,t.TACKLE],[1,t.SING],[1,t.ATTRACT],[1,t.DISARMING_VOICE],[1,t.FURY_SWIPES],[1,t.COPYCAT],[1,t.PAYBACK],[1,t.CHARM],[1,t.FACADE],[1,t.COVET],[1,t.HEAL_BELL],[1,t.DOUBLE_EDGE],[1,t.BABY_DOLL_EYES],[1,t.PLAY_ROUGH]],[e.SABLEYE]:[[1,t.LEER],[1,t.SCRATCH],[3,t.ASTONISH],[9,t.SHADOW_SNEAK],[12,t.FAKE_OUT],[15,t.DISABLE],[18,t.DETECT],[21,t.NIGHT_SHADE],[24,t.FURY_SWIPES],[27,t.KNOCK_OFF],[30,t.QUASH],[33,t.SHADOW_CLAW],[36,t.MEAN_LOOK],[39,t.POWER_GEM],[42,t.ZEN_HEADBUTT],[45,t.SHADOW_BALL],[48,t.FOUL_PLAY]],[e.MAWILE]:[[1,t.ASTONISH],[1,t.GROWL],[4,t.FAIRY_WIND],[8,t.BATON_PASS],[12,t.BITE],[16,t.STOCKPILE],[16,t.SPIT_UP],[16,t.SWALLOW],[20,t.SUCKER_PUNCH],[24,t.IRON_DEFENSE],[28,t.CRUNCH],[32,t.SWEET_SCENT],[36,t.IRON_HEAD],[40,t.TAUNT],[44,t.FAKE_TEARS],[48,t.PLAY_ROUGH]],[e.ARON]:[[1,t.TACKLE],[1,t.HARDEN],[4,t.METAL_CLAW],[8,t.ROCK_TOMB],[12,t.ROAR],[16,t.HEADBUTT],[20,t.PROTECT],[24,t.ROCK_SLIDE],[28,t.IRON_HEAD],[33,t.METAL_SOUND],[36,t.TAKE_DOWN],[40,t.AUTOTOMIZE],[44,t.IRON_TAIL],[48,t.IRON_DEFENSE],[52,t.HEAVY_SLAM],[56,t.DOUBLE_EDGE],[60,t.METAL_BURST]],[e.LAIRON]:[[1,t.TACKLE],[1,t.HARDEN],[1,t.METAL_CLAW],[1,t.ROCK_TOMB],[12,t.ROAR],[16,t.HEADBUTT],[20,t.PROTECT],[24,t.ROCK_SLIDE],[28,t.IRON_HEAD],[35,t.METAL_SOUND],[40,t.TAKE_DOWN],[46,t.AUTOTOMIZE],[52,t.IRON_TAIL],[58,t.IRON_DEFENSE],[64,t.HEAVY_SLAM],[70,t.DOUBLE_EDGE],[76,t.METAL_BURST]],[e.AGGRON]:[[1,t.TACKLE],[1,t.HARDEN],[1,t.METAL_CLAW],[1,t.ROCK_TOMB],[12,t.ROAR],[16,t.HEADBUTT],[20,t.PROTECT],[24,t.ROCK_SLIDE],[28,t.IRON_HEAD],[35,t.METAL_SOUND],[40,t.TAKE_DOWN],[48,t.AUTOTOMIZE],[56,t.IRON_TAIL],[64,t.IRON_DEFENSE],[72,t.HEAVY_SLAM],[80,t.DOUBLE_EDGE],[88,t.METAL_BURST]],[e.MEDITITE]:[[1,t.CONFUSION],[1,t.WORK_UP],[1,t.BIDE],[9,t.DETECT],[12,t.ENDURE],[15,t.FEINT],[17,t.FORCE_PALM],[20,t.PSYBEAM],[23,t.CALM_MIND],[25,t.ZEN_HEADBUTT],[28,t.HIGH_JUMP_KICK],[31,t.PSYCH_UP],[33,t.ACUPRESSURE],[36,t.POWER_TRICK],[39,t.REVERSAL],[41,t.RECOVER],[44,t.COUNTER]],[e.MEDICHAM]:[[1,t.FIRE_PUNCH],[1,t.ICE_PUNCH],[1,t.THUNDER_PUNCH],[1,t.CONFUSION],[1,t.DETECT],[1,t.WORK_UP],[1,t.BIDE],[1,t.REVERSAL],[12,t.ENDURE],[15,t.FEINT],[17,t.FORCE_PALM],[20,t.PSYBEAM],[23,t.CALM_MIND],[25,t.ZEN_HEADBUTT],[28,t.HIGH_JUMP_KICK],[31,t.PSYCH_UP],[33,t.ACUPRESSURE],[36,t.POWER_TRICK],[47,t.RECOVER],[53,t.COUNTER],[53,t.AXE_KICK]],[e.ELECTRIKE]:[[1,t.TACKLE],[1,t.THUNDER_WAVE],[4,t.LEER],[8,t.HOWL],[12,t.QUICK_ATTACK],[16,t.SHOCK_WAVE],[20,t.BITE],[24,t.THUNDER_FANG],[28,t.ROAR],[32,t.DISCHARGE],[36,t.CHARGE],[40,t.WILD_CHARGE],[44,t.THUNDER]],[e.MANECTRIC]:[[1,t.FIRE_FANG],[1,t.TACKLE],[1,t.THUNDER_WAVE],[1,t.LEER],[1,t.HOWL],[12,t.QUICK_ATTACK],[16,t.SHOCK_WAVE],[20,t.BITE],[24,t.THUNDER_FANG],[30,t.ROAR],[36,t.DISCHARGE],[42,t.CHARGE],[48,t.WILD_CHARGE],[54,t.THUNDER],[60,t.ELECTRIC_TERRAIN]],[e.PLUSLE]:[[X,t.NUZZLE],[1,t.PLAY_NICE],[1,t.GROWL],[1,t.THUNDER_WAVE],[1,t.QUICK_ATTACK],[4,t.HELPING_HAND],[7,t.SPARK],[10,t.ENCORE],[13,t.SWITCHEROO],[16,t.SWIFT],[19,t.ELECTRO_BALL],[22,t.COPYCAT],[26,t.CHARGE],[31,t.DISCHARGE],[34,t.BATON_PASS],[37,t.AGILITY],[40,t.LAST_RESORT],[43,t.THUNDER],[46,t.NASTY_PLOT],[49,t.ENTRAINMENT]],[e.MINUN]:[[X,t.NUZZLE],[1,t.PLAY_NICE],[1,t.GROWL],[1,t.THUNDER_WAVE],[1,t.QUICK_ATTACK],[4,t.HELPING_HAND],[7,t.SPARK],[10,t.ENCORE],[13,t.SWITCHEROO],[16,t.SWIFT],[19,t.ELECTRO_BALL],[22,t.COPYCAT],[26,t.CHARGE],[31,t.DISCHARGE],[34,t.BATON_PASS],[37,t.AGILITY],[40,t.LAST_RESORT],[43,t.THUNDER],[46,t.NASTY_PLOT],[49,t.ENTRAINMENT]],[e.VOLBEAT]:[[1,t.FLASH],[1,t.TACKLE],[5,t.DOUBLE_TEAM],[8,t.CONFUSE_RAY],[12,t.QUICK_ATTACK],[15,t.STRUGGLE_BUG],[19,t.MOONLIGHT],[22,t.TAIL_GLOW],[26,t.PROTECT],[29,t.ZEN_HEADBUTT],[33,t.HELPING_HAND],[36,t.BUG_BUZZ],[40,t.PLAY_ROUGH],[43,t.DOUBLE_EDGE],[47,t.INFESTATION]],[e.ILLUMISE]:[[1,t.TACKLE],[1,t.PLAY_NICE],[5,t.SWEET_SCENT],[9,t.CHARM],[12,t.QUICK_ATTACK],[15,t.STRUGGLE_BUG],[19,t.MOONLIGHT],[22,t.WISH],[26,t.ENCORE],[29,t.FLATTER],[33,t.ZEN_HEADBUTT],[36,t.HELPING_HAND],[40,t.BUG_BUZZ],[43,t.PLAY_ROUGH],[47,t.INFESTATION]],[e.ROSELIA]:[[Ee,t.POISON_STING],[1,t.ABSORB],[1,t.GROWTH],[1,t.STUN_SPORE],[1,t.WORRY_SEED],[5,t.MEGA_DRAIN],[10,t.LEECH_SEED],[15,t.MAGICAL_LEAF],[20,t.TOXIC_SPIKES],[25,t.SWEET_SCENT],[30,t.GIGA_DRAIN],[35,t.SYNTHESIS],[40,t.TOXIC],[45,t.PETAL_BLIZZARD],[50,t.AROMATHERAPY],[55,t.INGRAIN],[60,t.PETAL_DANCE]],[e.GULPIN]:[[1,t.POUND],[5,t.YAWN],[8,t.POISON_GAS],[10,t.SLUDGE],[12,t.AMNESIA],[17,t.ACID_SPRAY],[20,t.ENCORE],[25,t.TOXIC],[28,t.STOCKPILE],[28,t.SPIT_UP],[28,t.SWALLOW],[33,t.SLUDGE_BOMB],[36,t.GASTRO_ACID],[41,t.BELCH],[44,t.PAIN_SPLIT],[49,t.GUNK_SHOT]],[e.SWALOT]:[[Ee,t.BODY_SLAM],[1,t.GUNK_SHOT],[1,t.POUND],[1,t.YAWN],[1,t.POISON_GAS],[1,t.WRING_OUT],[1,t.SLUDGE],[1,t.PAIN_SPLIT],[12,t.AMNESIA],[17,t.ACID_SPRAY],[20,t.ENCORE],[25,t.TOXIC],[30,t.STOCKPILE],[30,t.SPIT_UP],[30,t.SWALLOW],[37,t.SLUDGE_BOMB],[42,t.GASTRO_ACID],[49,t.BELCH]],[e.CARVANHA]:[[1,t.AQUA_JET],[1,t.LEER],[4,t.POISON_FANG],[8,t.FOCUS_ENERGY],[12,t.SCARY_FACE],[16,t.BITE],[20,t.ICE_FANG],[24,t.SCREECH],[28,t.SWAGGER],[32,t.CRUNCH],[36,t.AGILITY],[40,t.LIQUIDATION],[44,t.TAKE_DOWN]],[e.SHARPEDO]:[[Ee,t.SLASH],[1,t.NIGHT_SLASH],[1,t.AQUA_JET],[1,t.LEER],[1,t.POISON_FANG],[1,t.FOCUS_ENERGY],[12,t.SCARY_FACE],[16,t.BITE],[20,t.ICE_FANG],[24,t.SCREECH],[28,t.SWAGGER],[34,t.CRUNCH],[40,t.AGILITY],[46,t.LIQUIDATION],[52,t.TAKE_DOWN]],[e.WAILMER]:[[1,t.SPLASH],[1,t.TACKLE],[3,t.GROWL],[6,t.ASTONISH],[12,t.WATER_GUN],[15,t.MIST],[18,t.WATER_PULSE],[21,t.HEAVY_SLAM],[24,t.BRINE],[27,t.WHIRLPOOL],[30,t.DIVE],[33,t.BOUNCE],[36,t.BODY_SLAM],[39,t.REST],[42,t.AMNESIA],[45,t.HYDRO_PUMP],[48,t.WATER_SPOUT]],[e.WAILORD]:[[1,t.SOAK],[1,t.NOBLE_ROAR],[1,t.SPLASH],[1,t.TACKLE],[1,t.GROWL],[1,t.ASTONISH],[1,t.WATER_GUN],[15,t.MIST],[18,t.WATER_PULSE],[21,t.HEAVY_SLAM],[24,t.BRINE],[27,t.WHIRLPOOL],[30,t.DIVE],[33,t.BOUNCE],[36,t.BODY_SLAM],[39,t.REST],[44,t.AMNESIA],[49,t.HYDRO_PUMP],[54,t.WATER_SPOUT]],[e.NUMEL]:[[1,t.GROWL],[1,t.TACKLE],[5,t.EMBER],[8,t.FOCUS_ENERGY],[12,t.BULLDOZE],[15,t.INCINERATE],[19,t.AMNESIA],[22,t.LAVA_PLUME],[26,t.EARTH_POWER],[29,t.CURSE],[31,t.TAKE_DOWN],[40,t.EARTHQUAKE],[43,t.FLAMETHROWER],[47,t.DOUBLE_EDGE]],[e.CAMERUPT]:[[Ee,t.ROCK_SLIDE],[X,t.FLAMETHROWER],[X,t.DOUBLE_EDGE],[1,t.FISSURE],[1,t.ERUPTION],[1,t.GROWL],[1,t.TACKLE],[1,t.EMBER],[1,t.FOCUS_ENERGY],[12,t.BULLDOZE],[15,t.INCINERATE],[19,t.AMNESIA],[22,t.LAVA_PLUME],[26,t.EARTH_POWER],[29,t.CURSE],[31,t.TAKE_DOWN],[39,t.YAWN],[46,t.EARTHQUAKE]],[e.TORKOAL]:[[1,t.SMOG],[1,t.EMBER],[4,t.WITHDRAW],[8,t.RAPID_SPIN],[12,t.SMOKESCREEN],[16,t.CLEAR_SMOG],[20,t.FLAME_WHEEL],[24,t.PROTECT],[28,t.LAVA_PLUME],[32,t.BODY_SLAM],[36,t.IRON_DEFENSE],[40,t.FLAMETHROWER],[44,t.CURSE],[48,t.HEAT_WAVE],[52,t.AMNESIA],[56,t.INFERNO],[60,t.SHELL_SMASH],[64,t.ERUPTION]],[e.SPOINK]:[[1,t.SPLASH],[5,t.CONFUSION],[10,t.GROWL],[14,t.PSYBEAM],[18,t.PSYCH_UP],[22,t.CONFUSE_RAY],[29,t.REST],[29,t.POWER_GEM],[33,t.SNORE],[38,t.PSYSHOCK],[40,t.PAYBACK],[44,t.PSYCHIC],[50,t.BOUNCE]],[e.GRUMPIG]:[[Ee,t.TEETER_DANCE],[1,t.BELCH],[1,t.SPLASH],[1,t.CONFUSION],[1,t.GROWL],[1,t.PSYBEAM],[18,t.PSYCH_UP],[22,t.CONFUSE_RAY],[26,t.ZEN_HEADBUTT],[29,t.POWER_GEM],[35,t.REST],[35,t.SNORE],[42,t.PSYSHOCK],[46,t.PAYBACK],[52,t.PSYCHIC],[60,t.BOUNCE]],[e.SPINDA]:[[1,t.TACKLE],[5,t.COPYCAT],[10,t.DIZZY_PUNCH],[14,t.PSYBEAM],[19,t.HYPNOSIS],[23,t.BODY_SLAM],[28,t.SUCKER_PUNCH],[32,t.TEETER_DANCE],[37,t.UPROAR],[41,t.PSYCH_UP],[46,t.DOUBLE_EDGE],[50,t.FLAIL],[55,t.THRASH]],[e.TRAPINCH]:[[1,t.SAND_ATTACK],[1,t.ASTONISH],[1,t.BIDE],[1,t.FEINT_ATTACK],[8,t.BITE],[12,t.MUD_SLAP],[16,t.SAND_TOMB],[20,t.BULLDOZE],[24,t.DIG],[28,t.CRUNCH],[32,t.SANDSTORM],[36,t.EARTH_POWER],[40,t.EARTHQUAKE],[44,t.SUPERPOWER],[48,t.FISSURE]],[e.VIBRAVA]:[[Ee,t.DRAGON_BREATH],[X,t.SUPERSONIC],[X,t.FISSURE],[X,t.CRUNCH],[X,t.SUPERPOWER],[X,t.ASTONISH],[X,t.BULLDOZE],[1,t.DIG],[1,t.SAND_ATTACK],[1,t.BITE],[1,t.BIDE],[1,t.FEINT_ATTACK],[12,t.MUD_SLAP],[16,t.SAND_TOMB],[20,t.DRAGON_TAIL],[24,t.SCREECH],[28,t.BUG_BUZZ],[32,t.SANDSTORM],[38,t.EARTH_POWER],[44,t.EARTHQUAKE],[50,t.UPROAR],[56,t.DRAGON_RUSH],[62,t.BOOMBURST]],[e.FLYGON]:[[Ee,t.DRAGON_CLAW],[X,t.BITE],[X,t.FISSURE],[X,t.DIG],[X,t.CRUNCH],[X,t.SUPERPOWER],[X,t.ASTONISH],[X,t.DRAGON_DANCE],[X,t.FEINT],[1,t.DRAGON_BREATH],[1,t.BULLDOZE],[1,t.SAND_ATTACK],[1,t.SUPERSONIC],[1,t.BIDE],[1,t.FEINT_ATTACK],[12,t.MUD_SLAP],[16,t.SAND_TOMB],[20,t.DRAGON_TAIL],[24,t.SCREECH],[28,t.BUG_BUZZ],[32,t.SANDSTORM],[38,t.EARTH_POWER],[44,t.EARTHQUAKE],[52,t.UPROAR],[60,t.DRAGON_RUSH],[68,t.BOOMBURST]],[e.CACNEA]:[[1,t.POISON_STING],[1,t.LEER],[4,t.ABSORB],[7,t.GROWTH],[10,t.LEECH_SEED],[13,t.SAND_ATTACK],[16,t.BULLET_SEED],[19,t.POWER_TRIP],[22,t.INGRAIN],[26,t.PAYBACK],[30,t.SPIKES],[34,t.SUCKER_PUNCH],[38,t.PIN_MISSILE],[42,t.ENERGY_BALL],[46,t.COTTON_SPORE],[50,t.SANDSTORM],[54,t.DESTINY_BOND]],[e.CACTURNE]:[[Ee,t.SPIKY_SHIELD],[1,t.DESTINY_BOND],[1,t.POISON_STING],[1,t.LEER],[1,t.ABSORB],[1,t.GROWTH],[10,t.LEECH_SEED],[13,t.SAND_ATTACK],[16,t.BULLET_SEED],[19,t.POWER_TRIP],[22,t.INGRAIN],[26,t.PAYBACK],[30,t.SPIKES],[35,t.SUCKER_PUNCH],[38,t.PIN_MISSILE],[44,t.ENERGY_BALL],[49,t.COTTON_SPORE],[54,t.SANDSTORM]],[e.SWABLU]:[[1,t.PECK],[1,t.GROWL],[4,t.DISARMING_VOICE],[8,t.MIST],[12,t.FURY_ATTACK],[16,t.ROUND],[20,t.DRAGON_BREATH],[24,t.SAFEGUARD],[28,t.SING],[32,t.COTTON_GUARD],[36,t.TAKE_DOWN],[40,t.MOONBLAST],[44,t.PERISH_SONG]],[e.ALTARIA]:[[Ee,t.DRAGON_PULSE],[1,t.PLUCK],[1,t.PECK],[1,t.GROWL],[1,t.DISARMING_VOICE],[1,t.MIST],[12,t.FURY_ATTACK],[16,t.ROUND],[20,t.DRAGON_BREATH],[24,t.SAFEGUARD],[28,t.SING],[32,t.COTTON_GUARD],[38,t.TAKE_DOWN],[44,t.MOONBLAST],[50,t.PERISH_SONG],[56,t.SKY_ATTACK]],[e.ZANGOOSE]:[[X,t.DOUBLE_KICK],[X,t.DISABLE],[X,t.COUNTER],[X,t.FURY_SWIPES],[X,t.CURSE],[X,t.FLAIL],[X,t.BELLY_DRUM],[X,t.FEINT],[X,t.NIGHT_SLASH],[X,t.DOUBLE_HIT],[X,t.QUICK_GUARD],[X,t.FINAL_GAMBIT],[1,t.SCRATCH],[1,t.LEER],[5,t.QUICK_ATTACK],[8,t.FURY_CUTTER],[12,t.METAL_CLAW],[15,t.HONE_CLAWS],[19,t.SLASH],[22,t.POWER_TRIP],[26,t.CRUSH_CLAW],[29,t.FALSE_SWIPE],[33,t.SWITCHEROO],[36,t.DETECT],[40,t.X_SCISSOR],[43,t.TAUNT],[47,t.SWORDS_DANCE],[50,t.CLOSE_COMBAT]],[e.SEVIPER]:[[1,t.WRAP],[1,t.SWAGGER],[4,t.BITE],[6,t.LICK],[9,t.POISON_TAIL],[11,t.FEINT],[14,t.SCREECH],[19,t.GLARE],[21,t.POISON_FANG],[24,t.VENOSHOCK],[29,t.GASTRO_ACID],[31,t.POISON_JAB],[34,t.HAZE],[39,t.CRUNCH],[41,t.BELCH],[44,t.COIL],[46,t.SLUDGE_BOMB]],[e.LUNATONE]:[[1,t.MOONBLAST],[1,t.MOONLIGHT],[1,t.TACKLE],[1,t.HARDEN],[1,t.CONFUSION],[1,t.ROCK_THROW],[5,t.HYPNOSIS],[10,t.ROCK_POLISH],[15,t.ROCK_SLIDE],[20,t.PSYSHOCK],[25,t.COSMIC_POWER],[30,t.PSYCHIC],[35,t.STONE_EDGE],[40,t.FUTURE_SIGHT],[45,t.MAGIC_ROOM],[50,t.EXPLOSION]],[e.SOLROCK]:[[1,t.FLARE_BLITZ],[1,t.MORNING_SUN],[1,t.TACKLE],[1,t.HARDEN],[1,t.CONFUSION],[1,t.ROCK_THROW],[5,t.HYPNOSIS],[10,t.ROCK_POLISH],[15,t.ROCK_SLIDE],[20,t.ZEN_HEADBUTT],[25,t.COSMIC_POWER],[30,t.PSYCHIC],[35,t.STONE_EDGE],[40,t.SOLAR_BEAM],[45,t.WONDER_ROOM],[50,t.EXPLOSION]],[e.BARBOACH]:[[1,t.MUD_SLAP],[1,t.WATER_GUN],[6,t.REST],[6,t.SNORE],[12,t.WATER_PULSE],[18,t.AMNESIA],[24,t.AQUA_TAIL],[31,t.MUDDY_WATER],[36,t.EARTHQUAKE],[42,t.FUTURE_SIGHT],[48,t.FISSURE]],[e.WHISCASH]:[[Ee,t.THRASH],[1,t.BELCH],[1,t.ZEN_HEADBUTT],[1,t.TICKLE],[1,t.MUD_SLAP],[1,t.WATER_GUN],[1,t.REST],[1,t.SNORE],[12,t.WATER_PULSE],[18,t.AMNESIA],[24,t.AQUA_TAIL],[33,t.MUDDY_WATER],[40,t.EARTHQUAKE],[48,t.FUTURE_SIGHT],[56,t.FISSURE]],[e.CORPHISH]:[[1,t.WATER_GUN],[1,t.HARDEN],[4,t.LEER],[8,t.TAUNT],[12,t.BUBBLE_BEAM],[16,t.KNOCK_OFF],[20,t.DOUBLE_HIT],[24,t.PROTECT],[28,t.NIGHT_SLASH],[32,t.RAZOR_SHELL],[36,t.SWORDS_DANCE],[40,t.CRUNCH],[44,t.CRABHAMMER],[48,t.ENDEAVOR],[52,t.GUILLOTINE]],[e.CRAWDAUNT]:[[Ee,t.SWIFT],[1,t.WATER_GUN],[1,t.HARDEN],[1,t.LEER],[1,t.TAUNT],[12,t.BUBBLE_BEAM],[16,t.KNOCK_OFF],[20,t.DOUBLE_HIT],[24,t.PROTECT],[28,t.NIGHT_SLASH],[34,t.RAZOR_SHELL],[40,t.SWORDS_DANCE],[46,t.CRUNCH],[52,t.CRABHAMMER],[58,t.ENDEAVOR],[64,t.GUILLOTINE]],[e.BALTOY]:[[1,t.HARDEN],[1,t.MUD_SLAP],[3,t.RAPID_SPIN],[6,t.CONFUSION],[9,t.ROCK_TOMB],[12,t.POWER_TRICK],[15,t.PSYBEAM],[18,t.ANCIENT_POWER],[21,t.IMPRISON],[24,t.COSMIC_POWER],[27,t.EXTRASENSORY],[30,t.EARTH_POWER],[33,t.SELF_DESTRUCT],[36,t.GUARD_SPLIT],[36,t.POWER_SPLIT],[39,t.SANDSTORM],[42,t.EXPLOSION]],[e.CLAYDOL]:[[Ee,t.HYPER_BEAM],[1,t.TELEPORT],[1,t.HARDEN],[1,t.MUD_SLAP],[1,t.RAPID_SPIN],[1,t.CONFUSION],[9,t.ROCK_TOMB],[12,t.POWER_TRICK],[15,t.PSYBEAM],[18,t.ANCIENT_POWER],[21,t.IMPRISON],[24,t.COSMIC_POWER],[27,t.EXTRASENSORY],[30,t.EARTH_POWER],[33,t.SELF_DESTRUCT],[38,t.GUARD_SPLIT],[38,t.POWER_SPLIT],[43,t.SANDSTORM],[48,t.EXPLOSION]],[e.LILEEP]:[[1,t.WRAP],[1,t.ASTONISH],[1,t.CONSTRICT],[4,t.ACID],[8,t.CONFUSE_RAY],[12,t.INGRAIN],[16,t.ANCIENT_POWER],[20,t.MEGA_DRAIN],[24,t.BRINE],[28,t.AMNESIA],[32,t.GASTRO_ACID],[36,t.GIGA_DRAIN],[41,t.STOCKPILE],[41,t.SPIT_UP],[41,t.SWALLOW],[44,t.ENERGY_BALL]],[e.CRADILY]:[[1,t.LEECH_SEED],[1,t.WRAP],[1,t.ASTONISH],[1,t.CONSTRICT],[1,t.ACID],[1,t.CONFUSE_RAY],[12,t.INGRAIN],[16,t.ANCIENT_POWER],[20,t.MEGA_DRAIN],[24,t.BRINE],[28,t.AMNESIA],[32,t.GASTRO_ACID],[36,t.GIGA_DRAIN],[43,t.STOCKPILE],[43,t.SPIT_UP],[43,t.SWALLOW],[48,t.ENERGY_BALL]],[e.ANORITH]:[[1,t.FURY_CUTTER],[1,t.HARDEN],[4,t.WATER_GUN],[8,t.SMACK_DOWN],[12,t.METAL_CLAW],[16,t.ANCIENT_POWER],[20,t.BUG_BITE],[24,t.BRINE],[28,t.SLASH],[32,t.CRUSH_CLAW],[36,t.ROCK_BLAST],[41,t.PROTECT],[44,t.X_SCISSOR]],[e.ARMALDO]:[[1,t.FURY_CUTTER],[1,t.HARDEN],[1,t.WATER_GUN],[1,t.SMACK_DOWN],[12,t.METAL_CLAW],[16,t.ANCIENT_POWER],[20,t.BUG_BITE],[24,t.BRINE],[28,t.SLASH],[32,t.CRUSH_CLAW],[36,t.ROCK_BLAST],[43,t.PROTECT],[48,t.X_SCISSOR]],[e.FEEBAS]:[[1,t.SPLASH],[15,t.TACKLE],[25,t.FLAIL]],[e.MILOTIC]:[[Ee,t.WATER_PULSE],[1,t.FLAIL],[1,t.SPLASH],[1,t.TACKLE],[1,t.WRAP],[1,t.WATER_GUN],[1,t.WATER_SPORT],[4,t.DISARMING_VOICE],[8,t.TWISTER],[12,t.AQUA_RING],[16,t.ATTRACT],[20,t.LIFE_DEW],[24,t.DRAGON_TAIL],[28,t.RECOVER],[32,t.AQUA_TAIL],[36,t.SAFEGUARD],[40,t.SURF],[44,t.RAIN_DANCE],[48,t.COIL],[52,t.HYDRO_PUMP]],[e.CASTFORM]:[[1,t.TACKLE],[10,t.WATER_GUN],[10,t.EMBER],[10,t.POWDER_SNOW],[15,t.HEADBUTT],[20,t.RAIN_DANCE],[20,t.SUNNY_DAY],[20,t.HAIL],[25,t.WEATHER_BALL],[35,t.HYDRO_PUMP],[35,t.FIRE_BLAST],[35,t.BLIZZARD],[45,t.HURRICANE]],[e.KECLEON]:[[1,t.THIEF],[1,t.TAIL_WHIP],[1,t.ASTONISH],[1,t.LICK],[1,t.SCRATCH],[4,t.BIND],[7,t.SHADOW_SNEAK],[10,t.FEINT],[13,t.FURY_SWIPES],[16,t.DISABLE],[18,t.PSYBEAM],[21,t.ANCIENT_POWER],[25,t.SLASH],[30,t.DETECT],[33,t.SHADOW_CLAW],[38,t.SCREECH],[42,t.SUBSTITUTE],[46,t.SUCKER_PUNCH],[50,t.FOUL_PLAY]],[e.SHUPPET]:[[1,t.ASTONISH],[1,t.PURSUIT],[4,t.SCREECH],[7,t.NIGHT_SHADE],[10,t.SPITE],[16,t.WILL_O_WISP],[19,t.SHADOW_SNEAK],[22,t.HEX],[26,t.CURSE],[30,t.SHADOW_BALL],[34,t.ROLE_PLAY],[38,t.SUCKER_PUNCH],[42,t.TRICK],[48,t.PHANTOM_FORCE]],[e.BANETTE]:[[Ee,t.KNOCK_OFF],[1,t.ASTONISH],[1,t.PURSUIT],[1,t.SCREECH],[1,t.NIGHT_SHADE],[1,t.SPITE],[16,t.WILL_O_WISP],[19,t.SHADOW_SNEAK],[22,t.HEX],[26,t.CURSE],[30,t.SHADOW_BALL],[34,t.ROLE_PLAY],[40,t.SUCKER_PUNCH],[46,t.TRICK],[53,t.PHANTOM_FORCE]],[e.DUSKULL]:[[1,t.ASTONISH],[1,t.LEER],[1,t.PURSUIT],[4,t.DISABLE],[8,t.SHADOW_SNEAK],[12,t.CONFUSE_RAY],[16,t.NIGHT_SHADE],[20,t.PAYBACK],[24,t.WILL_O_WISP],[28,t.MEAN_LOOK],[32,t.HEX],[36,t.CURSE],[40,t.SHADOW_BALL],[44,t.FUTURE_SIGHT]],[e.DUSCLOPS]:[[Ee,t.SHADOW_PUNCH],[1,t.FIRE_PUNCH],[1,t.ICE_PUNCH],[1,t.THUNDER_PUNCH],[1,t.GRAVITY],[1,t.BIND],[1,t.ASTONISH],[1,t.LEER],[1,t.PURSUIT],[1,t.DISABLE],[1,t.SHADOW_SNEAK],[12,t.CONFUSE_RAY],[16,t.NIGHT_SHADE],[20,t.PAYBACK],[24,t.WILL_O_WISP],[28,t.MEAN_LOOK],[32,t.HEX],[36,t.CURSE],[42,t.SHADOW_BALL],[48,t.FUTURE_SIGHT]],[e.TROPIUS]:[[1,t.LEAF_STORM],[1,t.GUST],[1,t.LEER],[1,t.GROWTH],[1,t.RAZOR_LEAF],[6,t.SWEET_SCENT],[10,t.STOMP],[16,t.MAGICAL_LEAF],[21,t.WHIRLWIND],[30,t.WIDE_GUARD],[36,t.AIR_SLASH],[41,t.BODY_SLAM],[46,t.OUTRAGE],[50,t.SYNTHESIS],[56,t.SOLAR_BEAM]],[e.CHIMECHO]:[[1,t.HEALING_WISH],[1,t.LAST_RESORT],[1,t.ENTRAINMENT],[1,t.WRAP],[1,t.PSYWAVE],[1,t.GROWL],[1,t.ASTONISH],[1,t.CONFUSION],[1,t.SYNCHRONOISE],[13,t.YAWN],[16,t.STORED_POWER],[19,t.TAKE_DOWN],[22,t.EXTRASENSORY],[27,t.HEAL_BELL],[32,t.UPROAR],[37,t.SAFEGUARD],[42,t.DOUBLE_EDGE],[47,t.HEAL_PULSE]],[e.ABSOL]:[[1,t.QUICK_ATTACK],[1,t.LEER],[5,t.DOUBLE_TEAM],[10,t.KNOCK_OFF],[15,t.DETECT],[20,t.TAUNT],[25,t.SLASH],[30,t.NIGHT_SLASH],[35,t.FOCUS_ENERGY],[40,t.SUCKER_PUNCH],[45,t.SWORDS_DANCE],[50,t.FUTURE_SIGHT],[55,t.PERISH_SONG]],[e.WYNAUT]:[[1,t.COUNTER],[1,t.MIRROR_COAT],[1,t.SAFEGUARD],[1,t.DESTINY_BOND],[1,t.SPLASH],[1,t.CHARM],[1,t.ENCORE],[1,t.AMNESIA]],[e.SNORUNT]:[[1,t.POWDER_SNOW],[1,t.ASTONISH],[1,t.HEADBUTT],[5,t.LEER],[10,t.DOUBLE_TEAM],[15,t.ICE_SHARD],[20,t.PROTECT],[25,t.ICY_WIND],[30,t.FROST_BREATH],[35,t.BITE],[40,t.ICE_FANG],[45,t.SNOWSCAPE],[50,t.WEATHER_BALL],[55,t.CRUNCH],[60,t.BLIZZARD]],[e.GLALIE]:[[Ee,t.FREEZE_DRY],[1,t.SHEER_COLD],[1,t.POWDER_SNOW],[1,t.HEADBUTT],[1,t.ASTONISH],[1,t.LEER],[1,t.DOUBLE_TEAM],[1,t.ICE_BALL],[15,t.ICE_SHARD],[20,t.PROTECT],[25,t.ICY_WIND],[30,t.FROST_BREATH],[35,t.BITE],[40,t.ICE_FANG],[47,t.SNOWSCAPE],[54,t.WEATHER_BALL],[61,t.CRUNCH],[68,t.BLIZZARD]],[e.SPHEAL]:[[1,t.ROLLOUT],[1,t.DEFENSE_CURL],[4,t.GROWL],[8,t.WATER_GUN],[12,t.POWDER_SNOW],[16,t.REST],[20,t.SNORE],[24,t.BRINE],[28,t.AURORA_BEAM],[33,t.ENCORE],[36,t.BODY_SLAM],[40,t.SURF],[44,t.BLIZZARD],[48,t.HAIL],[52,t.SHEER_COLD]],[e.SEALEO]:[[Ee,t.SWAGGER],[1,t.ROLLOUT],[1,t.DEFENSE_CURL],[1,t.GROWL],[1,t.WATER_GUN],[12,t.POWDER_SNOW],[16,t.REST],[20,t.SNORE],[24,t.BRINE],[28,t.AURORA_BEAM],[35,t.ENCORE],[40,t.BODY_SLAM],[46,t.SURF],[52,t.BLIZZARD],[58,t.HAIL],[64,t.SHEER_COLD]],[e.WALREIN]:[[1,t.SWAGGER],[1,t.CRUNCH],[1,t.ICE_FANG],[1,t.ROLLOUT],[1,t.DEFENSE_CURL],[1,t.GROWL],[1,t.WATER_GUN],[12,t.POWDER_SNOW],[16,t.REST],[20,t.SNORE],[24,t.BRINE],[28,t.AURORA_BEAM],[35,t.ENCORE],[40,t.BODY_SLAM],[48,t.SURF],[56,t.BLIZZARD],[64,t.HAIL],[72,t.SHEER_COLD]],[e.CLAMPERL]:[[1,t.CLAMP],[1,t.WATER_GUN],[1,t.WHIRLPOOL],[1,t.IRON_DEFENSE],[50,t.SHELL_SMASH]],[e.HUNTAIL]:[[1,t.CLAMP],[1,t.WATER_GUN],[1,t.IRON_DEFENSE],[1,t.SHELL_SMASH],[1,t.WHIRLPOOL],[1,t.BITE],[5,t.SCREECH],[9,t.SCARY_FACE],[11,t.RAIN_DANCE],[14,t.WATER_PULSE],[16,t.ICE_FANG],[19,t.BRINE],[23,t.SUCKER_PUNCH],[26,t.DIVE],[29,t.BATON_PASS],[34,t.CRUNCH],[39,t.AQUA_TAIL],[45,t.COIL],[50,t.HYDRO_PUMP]],[e.GOREBYSS]:[[1,t.CLAMP],[1,t.WATER_GUN],[1,t.IRON_DEFENSE],[1,t.SHELL_SMASH],[1,t.WHIRLPOOL],[1,t.CONFUSION],[5,t.RAIN_DANCE],[9,t.AGILITY],[11,t.DRAINING_KISS],[14,t.WATER_PULSE],[16,t.AMNESIA],[19,t.AQUA_RING],[23,t.SAFEGUARD],[26,t.DIVE],[29,t.BATON_PASS],[34,t.PSYCHIC],[39,t.AQUA_TAIL],[45,t.COIL],[50,t.HYDRO_PUMP]],[e.RELICANTH]:[[1,t.TACKLE],[1,t.HARDEN],[5,t.WATER_GUN],[10,t.ANCIENT_POWER],[15,t.YAWN],[20,t.DIVE],[25,t.TAKE_DOWN],[30,t.AQUA_TAIL],[35,t.REST],[40,t.FLAIL],[45,t.HYDRO_PUMP],[50,t.DOUBLE_EDGE],[55,t.HEAD_SMASH]],[e.LUVDISC]:[[1,t.TACKLE],[1,t.CHARM],[4,t.WATER_GUN],[7,t.AGILITY],[13,t.WISH],[17,t.WATER_PULSE],[20,t.ATTRACT],[22,t.DRAINING_KISS],[26,t.FLAIL],[31,t.SWEET_KISS],[34,t.TAKE_DOWN],[37,t.BABY_DOLL_EYES],[40,t.AQUA_RING],[42,t.SOAK],[46,t.HYDRO_PUMP],[49,t.SAFEGUARD]],[e.BAGON]:[[1,t.EMBER],[1,t.LEER],[5,t.BITE],[10,t.DRAGON_BREATH],[15,t.HEADBUTT],[20,t.SCARY_FACE],[25,t.CRUNCH],[31,t.DRAGON_CLAW],[35,t.ZEN_HEADBUTT],[40,t.FOCUS_ENERGY],[45,t.FLAMETHROWER],[50,t.OUTRAGE],[55,t.DOUBLE_EDGE]],[e.SHELGON]:[[Ee,t.PROTECT],[1,t.EMBER],[1,t.LEER],[1,t.BITE],[1,t.DRAGON_BREATH],[15,t.HEADBUTT],[20,t.SCARY_FACE],[25,t.CRUNCH],[33,t.DRAGON_CLAW],[39,t.ZEN_HEADBUTT],[46,t.FOCUS_ENERGY],[53,t.FLAMETHROWER],[60,t.OUTRAGE],[67,t.DOUBLE_EDGE]],[e.SALAMENCE]:[[Ee,t.FLY],[X,t.OUTRAGE],[1,t.PROTECT],[1,t.DRAGON_TAIL],[1,t.DUAL_WINGBEAT],[1,t.ROOST],[1,t.EMBER],[1,t.LEER],[1,t.BITE],[1,t.DRAGON_BREATH],[15,t.HEADBUTT],[20,t.SCARY_FACE],[25,t.CRUNCH],[33,t.DRAGON_CLAW],[39,t.ZEN_HEADBUTT],[46,t.FOCUS_ENERGY],[55,t.FLAMETHROWER],[73,t.DOUBLE_EDGE]],[e.BELDUM]:[[1,t.TACKLE]],[e.METANG]:[[Ee,t.CONFUSION],[Ee,t.METAL_CLAW],[1,t.TACKLE],[1,t.BULLET_PUNCH],[1,t.HONE_CLAWS],[6,t.ZEN_HEADBUTT],[12,t.MAGNET_RISE],[18,t.FLASH_CANNON],[26,t.TAKE_DOWN],[34,t.PSYCHIC],[42,t.SCARY_FACE],[50,t.METEOR_MASH],[58,t.IRON_DEFENSE],[66,t.AGILITY],[74,t.HYPER_BEAM]],[e.METAGROSS]:[[Ee,t.HAMMER_ARM],[X,t.EXPLOSION],[X,t.HONE_CLAWS],[1,t.CONFUSION],[1,t.METAL_CLAW],[1,t.BULLET_PUNCH],[1,t.TACKLE],[6,t.ZEN_HEADBUTT],[12,t.MAGNET_RISE],[16,t.FLASH_CANNON],[26,t.TAKE_DOWN],[34,t.PSYCHIC],[42,t.SCARY_FACE],[52,t.METEOR_MASH],[62,t.IRON_DEFENSE],[72,t.AGILITY],[82,t.HYPER_BEAM]],[e.REGIROCK]:[[1,t.CHARGE_BEAM],[1,t.ROCK_THROW],[6,t.BULLDOZE],[12,t.ANCIENT_POWER],[18,t.STOMP],[24,t.ROCK_SLIDE],[30,t.CURSE],[36,t.IRON_DEFENSE],[42,t.HAMMER_ARM],[48,t.STONE_EDGE],[54,t.SUPERPOWER],[60,t.LOCK_ON],[66,t.ZAP_CANNON],[72,t.HYPER_BEAM],[78,t.EXPLOSION]],[e.REGICE]:[[1,t.CHARGE_BEAM],[1,t.ICY_WIND],[6,t.BULLDOZE],[12,t.ANCIENT_POWER],[18,t.STOMP],[24,t.ICE_BEAM],[30,t.CURSE],[36,t.AMNESIA],[42,t.HAMMER_ARM],[48,t.BLIZZARD],[54,t.SUPERPOWER],[60,t.LOCK_ON],[66,t.ZAP_CANNON],[72,t.HYPER_BEAM],[78,t.EXPLOSION]],[e.REGISTEEL]:[[1,t.CHARGE_BEAM],[1,t.METAL_CLAW],[6,t.BULLDOZE],[12,t.ANCIENT_POWER],[18,t.STOMP],[24,t.IRON_HEAD],[24,t.FLASH_CANNON],[30,t.CURSE],[36,t.AMNESIA],[36,t.IRON_DEFENSE],[42,t.HAMMER_ARM],[48,t.HEAVY_SLAM],[54,t.SUPERPOWER],[60,t.LOCK_ON],[66,t.ZAP_CANNON],[72,t.HYPER_BEAM],[78,t.EXPLOSION]],[e.LATIAS]:[[1,t.STORED_POWER],[1,t.CHARM],[1,t.PSYWAVE],[5,t.HELPING_HAND],[10,t.RECOVER],[15,t.CONFUSION],[20,t.TAILWIND],[25,t.DRAGON_BREATH],[30,t.WISH],[35,t.MIST_BALL],[40,t.ZEN_HEADBUTT],[45,t.DRAGON_PULSE],[50,t.HEAL_PULSE],[55,t.REFLECT_TYPE],[60,t.PSYCHIC],[65,t.GUARD_SPLIT],[70,t.HEALING_WISH]],[e.LATIOS]:[[1,t.STORED_POWER],[1,t.DRAGON_DANCE],[1,t.HEAL_BLOCK],[1,t.PSYWAVE],[5,t.HELPING_HAND],[10,t.RECOVER],[15,t.CONFUSION],[20,t.TAILWIND],[25,t.DRAGON_BREATH],[30,t.ALLY_SWITCH],[35,t.LUSTER_PURGE],[40,t.ZEN_HEADBUTT],[45,t.DRAGON_PULSE],[50,t.HEAL_PULSE],[55,t.SIMPLE_BEAM],[60,t.PSYCHIC],[65,t.POWER_SPLIT],[70,t.MEMENTO]],[e.KYOGRE]:[[1,t.ORIGIN_PULSE],[1,t.WATER_PULSE],[1,t.ANCIENT_POWER],[1,t.BODY_SLAM],[1,t.SCARY_FACE],[9,t.AQUA_TAIL],[18,t.CALM_MIND],[27,t.MUDDY_WATER],[36,t.ICE_BEAM],[45,t.SHEER_COLD],[54,t.AQUA_RING],[72,t.HYDRO_PUMP],[81,t.DOUBLE_EDGE],[90,t.WATER_SPOUT]],[e.GROUDON]:[[1,t.PRECIPICE_BLADES],[1,t.MUD_SHOT],[1,t.ANCIENT_POWER],[1,t.LAVA_PLUME],[1,t.SCARY_FACE],[9,t.EARTH_POWER],[18,t.BULK_UP],[27,t.EARTHQUAKE],[36,t.HAMMER_ARM],[45,t.FISSURE],[54,t.REST],[72,t.FIRE_BLAST],[81,t.SOLAR_BEAM],[90,t.ERUPTION]],[e.RAYQUAZA]:[[1,t.DRAGON_ASCENT],[1,t.TWISTER],[1,t.ANCIENT_POWER],[1,t.AIR_SLASH],[1,t.SCARY_FACE],[9,t.CRUNCH],[18,t.DRAGON_DANCE],[27,t.EXTREME_SPEED],[36,t.DRAGON_PULSE],[45,t.HYPER_VOICE],[54,t.REST],[63,t.FLY],[72,t.HURRICANE],[81,t.OUTRAGE],[90,t.HYPER_BEAM]],[e.JIRACHI]:[[1,t.CONFUSION],[1,t.WISH],[7,t.SWIFT],[21,t.LIFE_DEW],[28,t.ZEN_HEADBUTT],[35,t.GRAVITY],[42,t.PSYCHIC],[49,t.METEOR_MASH],[56,t.HEALING_WISH],[63,t.REST],[70,t.FUTURE_SIGHT],[77,t.DOUBLE_EDGE],[84,t.COSMIC_POWER],[91,t.LAST_RESORT],[98,t.DOOM_DESIRE]],[e.DEOXYS]:[[1,t.CONFUSION],[1,t.LEER],[1,t.WRAP],[7,t.NIGHT_SHADE],[13,t.TELEPORT],[19,t.KNOCK_OFF],[25,t.PSYSHOCK],[31,t.PSYCHIC],[37,t.GRAVITY],[43,t.SKILL_SWAP],[49,t.ZEN_HEADBUTT],[55,t.COSMIC_POWER],[61,t.RECOVER],[67,t.PSYCHO_BOOST],[73,t.HYPER_BEAM]],[e.TURTWIG]:[[1,t.TACKLE],[5,t.WITHDRAW],[5,t.LEAFAGE],[9,t.GROWTH],[13,t.RAZOR_LEAF],[17,t.CURSE],[21,t.BITE],[25,t.MEGA_DRAIN],[29,t.LEECH_SEED],[33,t.SYNTHESIS],[37,t.CRUNCH],[41,t.GIGA_DRAIN],[45,t.LEAF_STORM]],[e.GROTLE]:[[1,t.TACKLE],[1,t.ABSORB],[1,t.WITHDRAW],[1,t.LEAFAGE],[1,t.GROWTH],[13,t.RAZOR_LEAF],[17,t.CURSE],[22,t.BITE],[27,t.MEGA_DRAIN],[32,t.LEECH_SEED],[37,t.SYNTHESIS],[42,t.CRUNCH],[47,t.GIGA_DRAIN],[52,t.LEAF_STORM]],[e.TORTERRA]:[[Ee,t.EARTHQUAKE],[1,t.TACKLE],[1,t.ABSORB],[1,t.LEAFAGE],[1,t.GROWTH],[1,t.RAZOR_LEAF],[1,t.WITHDRAW],[1,t.WOOD_HAMMER],[17,t.CURSE],[22,t.BITE],[27,t.MEGA_DRAIN],[33,t.LEECH_SEED],[39,t.SYNTHESIS],[45,t.CRUNCH],[51,t.GIGA_DRAIN],[57,t.LEAF_STORM],[63,t.HEADLONG_RUSH]],[e.CHIMCHAR]:[[1,t.SCRATCH],[1,t.LEER],[5,t.EMBER],[9,t.TAUNT],[15,t.FURY_SWIPES],[17,t.FLAME_WHEEL],[23,t.NASTY_PLOT],[25,t.TORMENT],[31,t.FACADE],[33,t.FIRE_SPIN],[39,t.ACROBATICS],[41,t.SLACK_OFF],[47,t.FLAMETHROWER]],[e.MONFERNO]:[[Ee,t.MACH_PUNCH],[X,t.NASTY_PLOT],[X,t.FACADE],[X,t.FLAMETHROWER],[1,t.SCRATCH],[1,t.LEER],[1,t.EMBER],[9,t.TAUNT],[16,t.FURY_SWIPES],[19,t.FLAME_WHEEL],[26,t.FEINT],[29,t.TORMENT],[36,t.CLOSE_COMBAT],[39,t.FIRE_SPIN],[46,t.ACROBATICS],[49,t.SLACK_OFF],[56,t.FLARE_BLITZ]],[e.INFERNAPE]:[[Ee,t.CLOSE_COMBAT],[X,t.TAUNT],[X,t.NASTY_PLOT],[X,t.FACADE],[X,t.SLACK_OFF],[X,t.FLAMETHROWER],[1,t.SCRATCH],[1,t.LEER],[1,t.EMBER],[1,t.MACH_PUNCH],[16,t.FURY_SWIPES],[19,t.FLAME_WHEEL],[26,t.FEINT],[29,t.TORMENT],[42,t.FIRE_SPIN],[47,t.FLARE_BLITZ],[52,t.ACROBATICS],[58,t.CALM_MIND],[65,t.RAGING_FURY]],[e.PIPLUP]:[[1,t.POUND],[4,t.GROWL],[5,t.WATER_GUN],[11,t.CHARM],[15,t.PECK],[18,t.BUBBLE_BEAM],[22,t.SWAGGER],[25,t.FURY_ATTACK],[29,t.BRINE],[32,t.WHIRLPOOL],[36,t.MIST],[39,t.DRILL_PECK],[43,t.HYDRO_PUMP]],[e.PRINPLUP]:[[Ee,t.METAL_CLAW],[1,t.TACKLE],[1,t.GROWL],[1,t.WATER_GUN],[1,t.CHARM],[15,t.PECK],[19,t.BUBBLE_BEAM],[24,t.SWAGGER],[28,t.FURY_ATTACK],[33,t.BRINE],[37,t.WHIRLPOOL],[42,t.MIST],[46,t.DRILL_PECK],[50,t.HYDRO_PUMP]],[e.EMPOLEON]:[[Ee,t.AQUA_JET],[1,t.TACKLE],[1,t.GROWL],[1,t.WATER_GUN],[1,t.CHARM],[1,t.METAL_CLAW],[11,t.SWORDS_DANCE],[15,t.PECK],[19,t.BUBBLE_BEAM],[24,t.SWAGGER],[28,t.FURY_ATTACK],[33,t.BRINE],[39,t.WHIRLPOOL],[46,t.MIST],[52,t.DRILL_PECK],[59,t.HYDRO_PUMP],[66,t.WAVE_CRASH]],[e.STARLY]:[[1,t.TACKLE],[1,t.GROWL],[5,t.QUICK_ATTACK],[9,t.WING_ATTACK],[13,t.DOUBLE_TEAM],[17,t.ENDEAVOR],[21,t.WHIRLWIND],[25,t.AERIAL_ACE],[29,t.TAKE_DOWN],[33,t.AGILITY],[37,t.BRAVE_BIRD],[41,t.FINAL_GAMBIT]],[e.STARAVIA]:[[1,t.TACKLE],[1,t.GROWL],[1,t.QUICK_ATTACK],[9,t.WING_ATTACK],[13,t.DOUBLE_TEAM],[18,t.ENDEAVOR],[23,t.WHIRLWIND],[28,t.AERIAL_ACE],[33,t.TAKE_DOWN],[38,t.AGILITY],[43,t.BRAVE_BIRD],[48,t.FINAL_GAMBIT]],[e.STARAPTOR]:[[Ee,t.CLOSE_COMBAT],[1,t.WING_ATTACK],[1,t.TACKLE],[1,t.GROWL],[1,t.QUICK_ATTACK],[13,t.DOUBLE_TEAM],[18,t.ENDEAVOR],[23,t.WHIRLWIND],[28,t.AERIAL_ACE],[33,t.TAKE_DOWN],[41,t.AGILITY],[49,t.BRAVE_BIRD],[57,t.FINAL_GAMBIT]],[e.BIDOOF]:[[1,t.TACKLE],[1,t.GROWL],[5,t.DEFENSE_CURL],[9,t.ROLLOUT],[13,t.HEADBUTT],[17,t.HYPER_FANG],[21,t.YAWN],[25,t.CRUNCH],[29,t.TAKE_DOWN],[33,t.SUPER_FANG],[37,t.SWORDS_DANCE],[41,t.AMNESIA],[45,t.SUPERPOWER],[49,t.CURSE]],[e.BIBAREL]:[[Ee,t.WATER_GUN],[1,t.TACKLE],[1,t.GROWL],[1,t.AQUA_JET],[1,t.ROTOTILLER],[5,t.DEFENSE_CURL],[9,t.ROLLOUT],[13,t.HEADBUTT],[18,t.HYPER_FANG],[23,t.YAWN],[28,t.CRUNCH],[33,t.TAKE_DOWN],[38,t.SUPER_FANG],[43,t.SWORDS_DANCE],[48,t.AMNESIA],[53,t.SUPERPOWER],[58,t.CURSE]],[e.KRICKETOT]:[[1,t.TACKLE],[1,t.GROWL],[1,t.BIDE],[6,t.STRUGGLE_BUG],[16,t.BUG_BITE]],[e.KRICKETUNE]:[[Ee,t.FURY_CUTTER],[1,t.TACKLE],[1,t.GROWL],[1,t.BIDE],[1,t.STRUGGLE_BUG],[1,t.BUG_BITE],[14,t.ABSORB],[18,t.SING],[22,t.FOCUS_ENERGY],[26,t.SLASH],[30,t.X_SCISSOR],[34,t.SCREECH],[36,t.FELL_STINGER],[38,t.TAUNT],[42,t.NIGHT_SLASH],[44,t.STICKY_WEB],[46,t.BUG_BUZZ],[50,t.PERISH_SONG]],[e.SHINX]:[[1,t.TACKLE],[1,t.LEER],[4,t.THUNDER_SHOCK],[8,t.CHARGE],[12,t.BITE],[16,t.SPARK],[20,t.ROAR],[24,t.VOLT_SWITCH],[28,t.SCARY_FACE],[32,t.THUNDER_WAVE],[36,t.CRUNCH],[40,t.DISCHARGE],[44,t.SWAGGER],[48,t.WILD_CHARGE]],[e.LUXIO]:[[1,t.TACKLE],[1,t.LEER],[1,t.THUNDER_SHOCK],[1,t.CHARGE],[12,t.BITE],[18,t.SPARK],[24,t.ROAR],[31,t.VOLT_SWITCH],[36,t.SCARY_FACE],[42,t.THUNDER_WAVE],[48,t.CRUNCH],[54,t.DISCHARGE],[60,t.SWAGGER],[68,t.WILD_CHARGE]],[e.LUXRAY]:[[1,t.TACKLE],[1,t.LEER],[1,t.THUNDER_SHOCK],[1,t.CHARGE],[1,t.ELECTRIC_TERRAIN],[12,t.BITE],[18,t.SPARK],[24,t.ROAR],[33,t.VOLT_SWITCH],[40,t.SCARY_FACE],[48,t.THUNDER_WAVE],[56,t.CRUNCH],[64,t.DISCHARGE],[72,t.SWAGGER],[80,t.WILD_CHARGE]],[e.BUDEW]:[[1,t.ABSORB],[1,t.GROWTH],[1,t.STUN_SPORE],[1,t.WORRY_SEED]],[e.ROSERADE]:[[1,t.POISON_STING],[1,t.ABSORB],[1,t.MEGA_DRAIN],[1,t.LEECH_SEED],[1,t.GROWTH],[1,t.STUN_SPORE],[1,t.PETAL_DANCE],[1,t.TOXIC],[1,t.GIGA_DRAIN],[1,t.SWEET_SCENT],[1,t.SYNTHESIS],[1,t.INGRAIN],[1,t.AROMATHERAPY],[1,t.MAGICAL_LEAF],[1,t.WORRY_SEED],[1,t.TOXIC_SPIKES],[1,t.PETAL_BLIZZARD],[1,t.GRASSY_TERRAIN],[1,t.VENOM_DRENCH]],[e.CRANIDOS]:[[1,t.HEADBUTT],[1,t.LEER],[6,t.FOCUS_ENERGY],[10,t.PURSUIT],[15,t.TAKE_DOWN],[19,t.SCARY_FACE],[24,t.ASSURANCE],[28,t.CHIP_AWAY],[33,t.ANCIENT_POWER],[37,t.ZEN_HEADBUTT],[42,t.SCREECH],[46,t.HEAD_SMASH]],[e.RAMPARDOS]:[[Ee,t.ENDEAVOR],[1,t.HEADBUTT],[1,t.LEER],[1,t.FOCUS_ENERGY],[1,t.PURSUIT],[15,t.TAKE_DOWN],[19,t.SCARY_FACE],[24,t.ASSURANCE],[28,t.CHIP_AWAY],[36,t.ANCIENT_POWER],[43,t.ZEN_HEADBUTT],[51,t.SCREECH],[58,t.HEAD_SMASH]],[e.SHIELDON]:[[1,t.TACKLE],[1,t.PROTECT],[6,t.TAUNT],[10,t.METAL_SOUND],[15,t.TAKE_DOWN],[19,t.IRON_DEFENSE],[24,t.SWAGGER],[28,t.ANCIENT_POWER],[33,t.ENDURE],[37,t.METAL_BURST],[42,t.IRON_HEAD],[46,t.HEAVY_SLAM]],[e.BASTIODON]:[[Ee,t.BLOCK],[X,t.WIDE_GUARD],[1,t.TACKLE],[1,t.PROTECT],[1,t.TAUNT],[1,t.METAL_SOUND],[15,t.TAKE_DOWN],[19,t.IRON_DEFENSE],[24,t.SWAGGER],[28,t.ANCIENT_POWER],[36,t.ENDURE],[43,t.METAL_BURST],[51,t.IRON_HEAD],[58,t.HEAVY_SLAM]],[e.BURMY]:[[1,t.PROTECT],[1,t.STRUGGLE_BUG],[10,t.TACKLE],[15,t.BUG_BITE],[20,t.STRING_SHOT]],[e.WORMADAM]:[[Ee,t.QUIVER_DANCE],[1,t.STRUGGLE_BUG],[1,t.TACKLE],[1,t.PROTECT],[1,t.SUCKER_PUNCH],[1,t.BUG_BITE],[1,t.PROTECT],[10,t.TACKLE],[20,t.STRING_SHOT],[23,t.CONFUSION],[26,t.RAZOR_LEAF],[29,t.GROWTH],[32,t.PSYBEAM],[35,t.INFESTATION],[38,t.FLAIL],[41,t.ATTRACT],[44,t.PSYCHIC],[47,t.LEAF_STORM],[50,t.BUG_BUZZ]],[e.MOTHIM]:[[Ee,t.QUIVER_DANCE],[1,t.STRUGGLE_BUG],[1,t.TACKLE],[1,t.PROTECT],[1,t.BUG_BITE],[10,t.PROTECT],[15,t.BUG_BITE],[20,t.STRING_SHOT],[23,t.CONFUSION],[26,t.GUST],[29,t.POISON_POWDER],[32,t.PSYBEAM],[35,t.ROOST],[38,t.STRUGGLE_BUG],[41,t.AIR_SLASH],[44,t.PSYCHIC],[47,t.LUNGE],[50,t.BUG_BUZZ]],[e.COMBEE]:[[1,t.GUST],[1,t.SWEET_SCENT],[1,t.BUG_BITE],[1,t.STRUGGLE_BUG]],[e.VESPIQUEN]:[[Ee,t.SLASH],[1,t.GUST],[1,t.POISON_STING],[1,t.CONFUSE_RAY],[1,t.SWEET_SCENT],[1,t.BUG_BITE],[1,t.STRUGGLE_BUG],[4,t.FURY_CUTTER],[8,t.AROMATIC_MIST],[12,t.FELL_STINGER],[16,t.FURY_SWIPES],[20,t.SWAGGER],[24,t.ROOST],[28,t.AIR_SLASH],[32,t.POWER_GEM],[36,t.TOXIC],[40,t.ATTACK_ORDER],[40,t.DEFEND_ORDER],[40,t.HEAL_ORDER],[44,t.DESTINY_BOND]],[e.PACHIRISU]:[[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.BIDE],[5,t.QUICK_ATTACK],[9,t.CHARM],[13,t.SPARK],[17,t.ENDURE],[19,t.NUZZLE],[21,t.SWIFT],[25,t.ELECTRO_BALL],[29,t.SWEET_KISS],[33,t.THUNDER_WAVE],[37,t.SUPER_FANG],[41,t.DISCHARGE],[45,t.LAST_RESORT],[49,t.THUNDER]],[e.BUIZEL]:[[1,t.TACKLE],[4,t.GROWL],[7,t.SOAK],[11,t.QUICK_ATTACK],[15,t.WATER_GUN],[18,t.BITE],[21,t.SWIFT],[24,t.AQUA_JET],[27,t.DOUBLE_HIT],[31,t.WHIRLPOOL],[35,t.LIQUIDATION],[38,t.AQUA_TAIL],[41,t.AGILITY],[45,t.HYDRO_PUMP],[49,t.WAVE_CRASH]],[e.FLOATZEL]:[[1,t.TACKLE],[1,t.GROWL],[1,t.QUICK_ATTACK],[1,t.CRUNCH],[1,t.ICE_FANG],[1,t.SOAK],[15,t.WATER_GUN],[18,t.BITE],[21,t.SWIFT],[24,t.AQUA_JET],[29,t.DOUBLE_HIT],[35,t.WHIRLPOOL],[41,t.LIQUIDATION],[46,t.AQUA_TAIL],[51,t.AGILITY],[57,t.HYDRO_PUMP],[62,t.WAVE_CRASH]],[e.CHERUBI]:[[1,t.TACKLE],[1,t.MORNING_SUN],[5,t.LEAFAGE],[10,t.GROWTH],[15,t.HELPING_HAND],[20,t.MAGICAL_LEAF],[26,t.LEECH_SEED],[30,t.TAKE_DOWN],[35,t.PETAL_BLIZZARD],[40,t.WORRY_SEED],[45,t.SOLAR_BEAM]],[e.CHERRIM]:[[Ee,t.SUNNY_DAY],[1,t.TACKLE],[1,t.GROWTH],[1,t.MORNING_SUN],[1,t.FLOWER_SHIELD],[1,t.LEAFAGE],[15,t.HELPING_HAND],[20,t.MAGICAL_LEAF],[28,t.LEECH_SEED],[34,t.TAKE_DOWN],[41,t.PETAL_BLIZZARD],[48,t.WORRY_SEED],[55,t.SOLAR_BEAM],[62,t.PETAL_DANCE]],[e.SHELLOS]:[[1,t.WATER_GUN],[1,t.MUD_SLAP],[5,t.HARDEN],[10,t.RECOVER],[15,t.WATER_PULSE],[20,t.ANCIENT_POWER],[25,t.BODY_SLAM],[31,t.MUDDY_WATER],[35,t.EARTH_POWER],[40,t.RAIN_DANCE],[45,t.MEMENTO]],[e.GASTRODON]:[[1,t.WATER_GUN],[1,t.RECOVER],[1,t.HARDEN],[1,t.MUD_SLAP],[1,t.MUD_SPORT],[15,t.WATER_PULSE],[20,t.ANCIENT_POWER],[25,t.BODY_SLAM],[33,t.MUDDY_WATER],[39,t.EARTH_POWER],[46,t.RAIN_DANCE],[53,t.MEMENTO]],[e.AMBIPOM]:[[1,t.SCRATCH],[1,t.SAND_ATTACK],[1,t.TAIL_WHIP],[1,t.ASTONISH],[11,t.BATON_PASS],[15,t.TICKLE],[18,t.FURY_SWIPES],[22,t.SWIFT],[25,t.SCREECH],[29,t.AGILITY],[32,t.DOUBLE_HIT],[36,t.FLING],[39,t.NASTY_PLOT],[43,t.LAST_RESORT]],[e.DRIFLOON]:[[1,t.MINIMIZE],[1,t.ASTONISH],[1,t.CONSTRICT],[4,t.GUST],[8,t.FOCUS_ENERGY],[12,t.PAYBACK],[16,t.HEX],[20,t.SHADOW_BALL],[24,t.STOCKPILE],[24,t.SPIT_UP],[24,t.SWALLOW],[29,t.SELF_DESTRUCT],[32,t.DESTINY_BOND],[36,t.BATON_PASS],[40,t.TAILWIND],[44,t.EXPLOSION]],[e.DRIFBLIM]:[[Ee,t.PHANTOM_FORCE],[1,t.GUST],[1,t.MINIMIZE],[1,t.FOCUS_ENERGY],[1,t.ASTONISH],[1,t.CONSTRICT],[1,t.STRENGTH_SAP],[12,t.PAYBACK],[16,t.HEX],[20,t.SHADOW_BALL],[24,t.STOCKPILE],[24,t.SPIT_UP],[24,t.SWALLOW],[31,t.SELF_DESTRUCT],[36,t.DESTINY_BOND],[42,t.BATON_PASS],[48,t.TAILWIND],[54,t.EXPLOSION]],[e.BUNEARY]:[[1,t.FRUSTRATION],[1,t.POUND],[1,t.SPLASH],[4,t.DEFENSE_CURL],[8,t.BABY_DOLL_EYES],[12,t.AFTER_YOU],[16,t.QUICK_ATTACK],[20,t.DOUBLE_KICK],[24,t.CHARM],[28,t.BATON_PASS],[32,t.HEADBUTT],[36,t.AGILITY],[40,t.ENTRAINMENT],[44,t.FLATTER],[48,t.BOUNCE],[52,t.HEALING_WISH]],[e.LOPUNNY]:[[Ee,t.RETURN],[1,t.FRUSTRATION],[1,t.POUND],[1,t.DEFENSE_CURL],[1,t.SPLASH],[1,t.MIRROR_COAT],[1,t.MAGIC_COAT],[1,t.BABY_DOLL_EYES],[1,t.ROTOTILLER],[12,t.AFTER_YOU],[16,t.QUICK_ATTACK],[20,t.DOUBLE_KICK],[24,t.CHARM],[28,t.BATON_PASS],[32,t.HEADBUTT],[36,t.AGILITY],[40,t.ENTRAINMENT],[44,t.FLATTER],[48,t.BOUNCE],[52,t.HEALING_WISH],[56,t.HIGH_JUMP_KICK]],[e.MISMAGIUS]:[[X,t.CONFUSION],[X,t.CONFUSE_RAY],[X,t.MEAN_LOOK],[X,t.HEX],[X,t.PSYBEAM],[X,t.PAIN_SPLIT],[X,t.PAYBACK],[X,t.SHADOW_BALL],[X,t.PERISH_SONG],[1,t.GROWL],[1,t.SPITE],[1,t.PSYWAVE],[1,t.LUCKY_CHANT],[1,t.ASTONISH],[1,t.MAGICAL_LEAF],[1,t.POWER_GEM],[1,t.PHANTOM_FORCE],[1,t.MYSTICAL_FIRE]],[e.HONCHKROW]:[[1,t.PECK],[1,t.ASTONISH],[1,t.GUST],[1,t.HAZE],[1,t.WING_ATTACK],[1,t.NIGHT_SHADE],[1,t.ASSURANCE],[1,t.TAUNT],[1,t.MEAN_LOOK],[1,t.SUCKER_PUNCH],[1,t.NIGHT_SLASH],[1,t.TORMENT],[1,t.QUASH],[1,t.PURSUIT],[25,t.SWAGGER],[35,t.NASTY_PLOT],[45,t.FOUL_PLAY],[55,t.DARK_PULSE],[65,t.COMEUPPANCE]],[e.GLAMEOW]:[[1,t.FAKE_OUT],[5,t.SCRATCH],[8,t.GROWL],[13,t.HYPNOSIS],[17,t.AERIAL_ACE],[20,t.FURY_SWIPES],[25,t.CHARM],[29,t.TAUNT],[32,t.RETALIATE],[37,t.SLASH],[41,t.SUCKER_PUNCH],[44,t.ATTRACT],[48,t.HONE_CLAWS],[50,t.PLAY_ROUGH]],[e.PURUGLY]:[[Ee,t.SWAGGER],[1,t.SCRATCH],[1,t.PLAY_ROUGH],[1,t.SUCKER_PUNCH],[1,t.GROWL],[1,t.FAKE_OUT],[13,t.HYPNOSIS],[17,t.AERIAL_ACE],[20,t.FURY_SWIPES],[25,t.CHARM],[29,t.TAUNT],[32,t.RETALIATE],[37,t.SLASH],[45,t.BODY_SLAM],[52,t.ATTRACT],[60,t.HONE_CLAWS]],[e.CHINGLING]:[[1,t.WRAP],[1,t.PSYWAVE],[4,t.GROWL],[7,t.ASTONISH],[10,t.CONFUSION],[13,t.YAWN],[16,t.LAST_RESORT],[19,t.ENTRAINMENT],[32,t.UPROAR]],[e.STUNKY]:[[1,t.SCRATCH],[1,t.POISON_GAS],[3,t.FEINT],[6,t.SMOKESCREEN],[9,t.ACID_SPRAY],[12,t.FURY_SWIPES],[15,t.FOCUS_ENERGY],[18,t.BITE],[21,t.VENOSHOCK],[24,t.SCREECH],[27,t.TOXIC],[30,t.SUCKER_PUNCH],[33,t.MEMENTO],[36,t.NIGHT_SLASH],[39,t.BELCH],[42,t.EXPLOSION]],[e.SKUNTANK]:[[Ee,t.FLAMETHROWER],[1,t.SCRATCH],[1,t.SMOKESCREEN],[1,t.POISON_GAS],[1,t.FEINT],[1,t.ACID_SPRAY],[12,t.FURY_SWIPES],[15,t.FOCUS_ENERGY],[18,t.BITE],[21,t.VENOSHOCK],[24,t.SCREECH],[27,t.TOXIC],[30,t.SUCKER_PUNCH],[33,t.MEMENTO],[38,t.NIGHT_SLASH],[43,t.BELCH],[48,t.EXPLOSION]],[e.BRONZOR]:[[1,t.TACKLE],[1,t.CONFUSION],[4,t.CONFUSE_RAY],[8,t.PAYBACK],[12,t.IMPRISON],[16,t.GYRO_BALL],[20,t.HYPNOSIS],[24,t.SAFEGUARD],[28,t.EXTRASENSORY],[32,t.HEAVY_SLAM],[36,t.IRON_DEFENSE],[40,t.METAL_SOUND],[44,t.FUTURE_SIGHT],[45,t.HEAL_BLOCK]],[e.BRONZONG]:[[Ee,t.BLOCK],[1,t.TACKLE],[1,t.CONFUSION],[1,t.CONFUSE_RAY],[1,t.SUNNY_DAY],[1,t.WEATHER_BALL],[1,t.PAYBACK],[12,t.IMPRISON],[16,t.GYRO_BALL],[20,t.HYPNOSIS],[24,t.SAFEGUARD],[28,t.EXTRASENSORY],[32,t.HEAVY_SLAM],[38,t.IRON_DEFENSE],[44,t.METAL_SOUND],[50,t.FUTURE_SIGHT],[52,t.HEAL_BLOCK],[56,t.RAIN_DANCE]],[e.BONSLY]:[[1,t.FAKE_TEARS],[1,t.COPYCAT],[1,t.TACKLE],[4,t.FLAIL],[8,t.ROCK_THROW],[12,t.BLOCK],[16,t.MIMIC],[20,t.ROCK_TOMB],[24,t.TEARFUL_LOOK],[28,t.SUCKER_PUNCH],[32,t.ROCK_SLIDE],[36,t.LOW_KICK],[40,t.COUNTER],[44,t.DOUBLE_EDGE]],[e.MIME_JR]:[[1,t.POUND],[1,t.COPYCAT],[1,t.BARRIER],[1,t.TICKLE],[4,t.BATON_PASS],[8,t.ENCORE],[12,t.CONFUSION],[16,t.MIMIC],[20,t.PROTECT],[24,t.RECYCLE],[28,t.PSYBEAM],[32,t.ROLE_PLAY],[36,t.LIGHT_SCREEN],[36,t.REFLECT],[36,t.SAFEGUARD],[40,t.SUCKER_PUNCH],[44,t.DAZZLING_GLEAM],[48,t.PSYCHIC],[52,t.TEETER_DANCE]],[e.HAPPINY]:[[1,t.POUND],[1,t.COPYCAT],[4,t.DEFENSE_CURL],[8,t.SWEET_KISS],[12,t.DISARMING_VOICE],[16,t.COVET],[20,t.CHARM]],[e.CHATOT]:[[1,t.PECK],[1,t.TAUNT],[1,t.HYPER_VOICE],[1,t.CHATTER],[1,t.CONFIDE],[5,t.GROWL],[9,t.MIRROR_MOVE],[13,t.SING],[17,t.FURY_ATTACK],[29,t.ROUND],[33,t.MIMIC],[37,t.ECHOED_VOICE],[41,t.ROOST],[45,t.UPROAR],[49,t.SYNCHRONOISE],[50,t.FEATHER_DANCE]],[e.SPIRITOMB]:[[1,t.NIGHT_SHADE],[1,t.CONFUSE_RAY],[1,t.PURSUIT],[5,t.SHADOW_SNEAK],[10,t.SPITE],[15,t.PAYBACK],[20,t.NASTY_PLOT],[25,t.HEX],[30,t.MEMENTO],[35,t.SUCKER_PUNCH],[40,t.CURSE],[45,t.SHADOW_BALL],[50,t.DARK_PULSE],[55,t.HYPNOSIS],[60,t.DREAM_EATER]],[e.GIBLE]:[[1,t.TACKLE],[1,t.SAND_TOMB],[6,t.SAND_ATTACK],[12,t.DRAGON_BREATH],[18,t.BULLDOZE],[25,t.BITE],[30,t.SLASH],[36,t.DRAGON_CLAW],[42,t.DIG],[48,t.SANDSTORM],[54,t.TAKE_DOWN],[60,t.DRAGON_RUSH]],[e.GABITE]:[[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.DRAGON_BREATH],[1,t.SAND_TOMB],[1,t.DUAL_CHOP],[18,t.BULLDOZE],[27,t.BITE],[34,t.SLASH],[42,t.DRAGON_CLAW],[50,t.DIG],[58,t.SANDSTORM],[66,t.TAKE_DOWN],[74,t.DRAGON_RUSH]],[e.GARCHOMP]:[[Ee,t.CRUNCH],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.DRAGON_BREATH],[1,t.SAND_TOMB],[1,t.DUAL_CHOP],[18,t.BULLDOZE],[27,t.BITE],[34,t.SLASH],[42,t.DRAGON_CLAW],[52,t.DIG],[62,t.SANDSTORM],[72,t.TAKE_DOWN],[82,t.DRAGON_RUSH]],[e.MUNCHLAX]:[[1,t.TACKLE],[1,t.LICK],[1,t.ODOR_SLEUTH],[4,t.DEFENSE_CURL],[8,t.RECYCLE],[12,t.COVET],[16,t.BITE],[20,t.STOCKPILE],[20,t.SWALLOW],[24,t.SCREECH],[28,t.BODY_SLAM],[32,t.FLING],[36,t.AMNESIA],[40,t.METRONOME],[44,t.FLAIL],[48,t.BELLY_DRUM],[52,t.LAST_RESORT]],[e.RIOLU]:[[1,t.QUICK_ATTACK],[1,t.ENDURE],[4,t.FEINT],[8,t.METAL_CLAW],[12,t.COUNTER],[16,t.WORK_UP],[20,t.ROCK_SMASH],[24,t.VACUUM_WAVE],[28,t.SCREECH],[32,t.QUICK_GUARD],[36,t.FORCE_PALM],[40,t.SWORDS_DANCE],[44,t.HELPING_HAND],[48,t.COPYCAT],[52,t.FINAL_GAMBIT],[56,t.REVERSAL]],[e.LUCARIO]:[[Ee,t.AURA_SPHERE],[1,t.QUICK_ATTACK],[1,t.ENDURE],[1,t.SCREECH],[1,t.REVERSAL],[1,t.DETECT],[1,t.METAL_CLAW],[1,t.ROCK_SMASH],[1,t.HELPING_HAND],[1,t.FEINT],[1,t.COPYCAT],[1,t.VACUUM_WAVE],[1,t.FINAL_GAMBIT],[1,t.LIFE_DEW],[12,t.COUNTER],[16,t.WORK_UP],[20,t.FORCE_PALM],[24,t.CALM_MIND],[28,t.METAL_SOUND],[32,t.QUICK_GUARD],[36,t.BONE_RUSH],[40,t.SWORDS_DANCE],[44,t.HEAL_PULSE],[48,t.METEOR_MASH],[52,t.DRAGON_PULSE],[56,t.EXTREME_SPEED],[60,t.CLOSE_COMBAT]],[e.HIPPOPOTAS]:[[1,t.SAND_ATTACK],[1,t.TACKLE],[4,t.BITE],[8,t.YAWN],[12,t.SAND_TOMB],[16,t.DIG],[20,t.CRUNCH],[24,t.SANDSTORM],[28,t.TAKE_DOWN],[32,t.ROAR],[36,t.REST],[40,t.EARTHQUAKE],[44,t.DOUBLE_EDGE],[48,t.FISSURE],[52,t.SLACK_OFF]],[e.HIPPOWDON]:[[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.BITE],[1,t.YAWN],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[12,t.SAND_TOMB],[16,t.DIG],[20,t.CRUNCH],[24,t.SANDSTORM],[28,t.TAKE_DOWN],[32,t.ROAR],[38,t.REST],[44,t.EARTHQUAKE],[50,t.DOUBLE_EDGE],[56,t.FISSURE],[62,t.SLACK_OFF]],[e.SKORUPI]:[[1,t.POISON_STING],[1,t.LEER],[3,t.HONE_CLAWS],[6,t.FELL_STINGER],[9,t.POISON_FANG],[12,t.BITE],[15,t.TOXIC_SPIKES],[18,t.BUG_BITE],[21,t.VENOSHOCK],[24,t.KNOCK_OFF],[27,t.SCARY_FACE],[30,t.PIN_MISSILE],[33,t.TOXIC],[36,t.NIGHT_SLASH],[39,t.CROSS_POISON],[42,t.X_SCISSOR],[45,t.ACUPRESSURE],[48,t.CRUNCH]],[e.DRAPION]:[[1,t.POISON_STING],[1,t.LEER],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[1,t.HONE_CLAWS],[1,t.FELL_STINGER],[9,t.POISON_FANG],[12,t.BITE],[15,t.TOXIC_SPIKES],[18,t.BUG_BITE],[21,t.VENOSHOCK],[24,t.KNOCK_OFF],[27,t.SCARY_FACE],[30,t.PIN_MISSILE],[33,t.TOXIC],[36,t.NIGHT_SLASH],[39,t.CROSS_POISON],[44,t.X_SCISSOR],[49,t.ACUPRESSURE],[54,t.CRUNCH]],[e.CROAGUNK]:[[1,t.POISON_STING],[1,t.MUD_SLAP],[4,t.ASTONISH],[8,t.TAUNT],[12,t.FLATTER],[16,t.LOW_KICK],[20,t.VENOSHOCK],[24,t.SUCKER_PUNCH],[28,t.SWAGGER],[32,t.POISON_JAB],[36,t.TOXIC],[40,t.NASTY_PLOT],[44,t.SLUDGE_BOMB],[48,t.BELCH]],[e.TOXICROAK]:[[1,t.POISON_STING],[1,t.MUD_SLAP],[1,t.TAUNT],[1,t.ASTONISH],[12,t.FLATTER],[16,t.LOW_KICK],[20,t.VENOSHOCK],[24,t.SUCKER_PUNCH],[28,t.SWAGGER],[32,t.POISON_JAB],[36,t.TOXIC],[42,t.NASTY_PLOT],[48,t.SLUDGE_BOMB],[54,t.BELCH]],[e.CARNIVINE]:[[1,t.BIND],[1,t.GROWTH],[1,t.LEAFAGE],[7,t.BITE],[11,t.VINE_WHIP],[17,t.SWEET_SCENT],[21,t.INGRAIN],[27,t.GRASS_KNOT],[31,t.LEAF_TORNADO],[37,t.STOCKPILE],[37,t.SPIT_UP],[37,t.SWALLOW],[41,t.CRUNCH],[47,t.SEED_BOMB],[50,t.POWER_WHIP]],[e.FINNEON]:[[1,t.POUND],[6,t.WATER_GUN],[13,t.RAIN_DANCE],[17,t.GUST],[22,t.WATER_PULSE],[26,t.ATTRACT],[29,t.SAFEGUARD],[33,t.AQUA_RING],[38,t.WHIRLPOOL],[42,t.U_TURN],[45,t.BOUNCE],[49,t.TAILWIND],[54,t.SOAK]],[e.LUMINEON]:[[1,t.POUND],[1,t.GUST],[1,t.WATER_GUN],[1,t.SOAK],[13,t.RAIN_DANCE],[22,t.WATER_PULSE],[26,t.ATTRACT],[29,t.SAFEGUARD],[35,t.AQUA_RING],[42,t.WHIRLPOOL],[48,t.U_TURN],[53,t.BOUNCE],[59,t.TAILWIND]],[e.MANTYKE]:[[1,t.TACKLE],[1,t.WATER_GUN],[4,t.SUPERSONIC],[8,t.WING_ATTACK],[12,t.WATER_PULSE],[16,t.WIDE_GUARD],[20,t.AGILITY],[24,t.BUBBLE_BEAM],[28,t.HEADBUTT],[32,t.AIR_SLASH],[36,t.AQUA_RING],[40,t.BOUNCE],[44,t.TAKE_DOWN],[48,t.HYDRO_PUMP]],[e.SNOVER]:[[1,t.LEER],[1,t.POWDER_SNOW],[5,t.LEAFAGE],[10,t.MIST],[15,t.ICE_SHARD],[20,t.RAZOR_LEAF],[25,t.ICY_WIND],[30,t.SWAGGER],[35,t.INGRAIN],[41,t.WOOD_HAMMER],[45,t.BLIZZARD],[50,t.SHEER_COLD]],[e.ABOMASNOW]:[[Ee,t.ICE_PUNCH],[1,t.LEER],[1,t.MIST],[1,t.POWDER_SNOW],[1,t.LEAFAGE],[1,t.AURORA_VEIL],[15,t.ICE_SHARD],[20,t.RAZOR_LEAF],[25,t.ICY_WIND],[30,t.SWAGGER],[35,t.INGRAIN],[43,t.WOOD_HAMMER],[49,t.BLIZZARD],[56,t.SHEER_COLD]],[e.WEAVILE]:[[1,t.SCRATCH],[1,t.LEER],[1,t.AGILITY],[1,t.QUICK_ATTACK],[1,t.SLASH],[1,t.BEAT_UP],[1,t.TAUNT],[1,t.ASSURANCE],[1,t.ICE_SHARD],[1,t.EMBARGO],[18,t.METAL_CLAW],[24,t.ICY_WIND],[30,t.FURY_SWIPES],[36,t.HONE_CLAWS],[42,t.FLING],[48,t.NASTY_PLOT],[54,t.SCREECH],[60,t.NIGHT_SLASH],[66,t.DARK_PULSE]],[e.MAGNEZONE]:[[1,t.TACKLE],[1,t.SUPERSONIC],[1,t.THUNDER_SHOCK],[1,t.THUNDER_WAVE],[1,t.BARRIER],[1,t.TRI_ATTACK],[1,t.MIRROR_COAT],[1,t.MAGNETIC_FLUX],[1,t.ELECTRIC_TERRAIN],[12,t.ELECTRO_BALL],[16,t.GYRO_BALL],[20,t.SPARK],[24,t.SCREECH],[28,t.MAGNET_RISE],[34,t.FLASH_CANNON],[40,t.DISCHARGE],[46,t.METAL_SOUND],[52,t.LIGHT_SCREEN],[58,t.LOCK_ON],[64,t.ZAP_CANNON]],[e.LICKILICKY]:[[1,t.SUPERSONIC],[1,t.DEFENSE_CURL],[1,t.LICK],[1,t.TACKLE],[1,t.ROLLOUT],[1,t.WRING_OUT],[6,t.REST],[18,t.WRAP],[24,t.DISABLE],[30,t.STOMP],[36,t.KNOCK_OFF],[42,t.SCREECH],[48,t.SLAM],[54,t.POWER_WHIP],[60,t.BELLY_DRUM]],[e.RHYPERIOR]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.HAMMER_ARM],[1,t.SMACK_DOWN],[1,t.BULLDOZE],[15,t.HORN_ATTACK],[20,t.SCARY_FACE],[25,t.STOMP],[30,t.ROCK_BLAST],[35,t.DRILL_RUN],[40,t.TAKE_DOWN],[47,t.EARTHQUAKE],[54,t.STONE_EDGE],[61,t.MEGAHORN],[68,t.HORN_DRILL],[75,t.ROCK_WRECKER]],[e.TANGROWTH]:[[1,t.BIND],[1,t.ABSORB],[1,t.GROWTH],[1,t.STUN_SPORE],[1,t.BLOCK],[1,t.CONSTRICT],[12,t.MEGA_DRAIN],[16,t.VINE_WHIP],[20,t.POISON_POWDER],[24,t.DOUBLE_HIT],[28,t.KNOCK_OFF],[32,t.GIGA_DRAIN],[34,t.ANCIENT_POWER],[36,t.SLEEP_POWDER],[40,t.SLAM],[44,t.TICKLE],[48,t.POWER_WHIP],[52,t.INGRAIN],[56,t.GRASSY_TERRAIN]],[e.ELECTIVIRE]:[[1,t.LEER],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.CHARGE],[1,t.ION_DELUGE],[12,t.SWIFT],[16,t.SHOCK_WAVE],[20,t.THUNDER_WAVE],[24,t.SCREECH],[28,t.THUNDER_PUNCH],[34,t.DISCHARGE],[40,t.LOW_KICK],[46,t.THUNDERBOLT],[52,t.LIGHT_SCREEN],[58,t.THUNDER],[64,t.GIGA_IMPACT]],[e.MAGMORTAR]:[[1,t.LEER],[1,t.EMBER],[1,t.SMOKESCREEN],[1,t.SMOG],[12,t.CLEAR_SMOG],[16,t.FLAME_WHEEL],[20,t.CONFUSE_RAY],[24,t.SCARY_FACE],[28,t.FIRE_PUNCH],[34,t.LAVA_PLUME],[40,t.LOW_KICK],[46,t.FLAMETHROWER],[52,t.SUNNY_DAY],[58,t.FIRE_BLAST],[64,t.HYPER_BEAM]],[e.TOGEKISS]:[[Ee,t.AIR_SLASH],[1,t.POUND],[1,t.DOUBLE_EDGE],[1,t.GROWL],[1,t.METRONOME],[1,t.SKY_ATTACK],[1,t.TRI_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.SAFEGUARD],[1,t.BATON_PASS],[1,t.EXTREME_SPEED],[1,t.ANCIENT_POWER],[1,t.FOLLOW_ME],[1,t.WISH],[1,t.YAWN],[1,t.LAST_RESORT],[1,t.AURA_SPHERE],[1,t.AFTER_YOU],[1,t.FAIRY_WIND],[1,t.LIFE_DEW]],[e.YANMEGA]:[[X,t.HYPNOSIS],[1,t.TACKLE],[1,t.DOUBLE_TEAM],[1,t.AIR_CUTTER],[1,t.NIGHT_SLASH],[1,t.WING_ATTACK],[1,t.AIR_SLASH],[1,t.BUG_BUZZ],[14,t.QUICK_ATTACK],[17,t.DETECT],[22,t.SUPERSONIC],[27,t.UPROAR],[30,t.BUG_BITE],[33,t.ANCIENT_POWER],[38,t.FEINT],[43,t.SLASH],[46,t.SCREECH],[49,t.U_TURN]],[e.LEAFEON]:[[Ee,t.SAPPY_SEED],[X,t.VEEVEE_VOLLEY],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.BITE],[1,t.GROWL],[1,t.SWIFT],[1,t.CHARM],[1,t.BATON_PASS],[1,t.HELPING_HAND],[1,t.COVET],[1,t.COPYCAT],[5,t.SAND_ATTACK],[10,t.RAZOR_LEAF],[15,t.QUICK_ATTACK],[20,t.BABY_DOLL_EYES],[25,t.LEECH_SEED],[30,t.MAGICAL_LEAF],[35,t.SYNTHESIS],[40,t.SUNNY_DAY],[45,t.GIGA_DRAIN],[50,t.SWORDS_DANCE],[55,t.LEAF_BLADE],[60,t.LAST_RESORT]],[e.GLACEON]:[[Ee,t.FREEZY_FROST],[X,t.VEEVEE_VOLLEY],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.SWIFT],[1,t.CHARM],[1,t.BATON_PASS],[1,t.HELPING_HAND],[1,t.COVET],[1,t.COPYCAT],[5,t.SAND_ATTACK],[10,t.ICY_WIND],[15,t.QUICK_ATTACK],[20,t.BABY_DOLL_EYES],[25,t.ICE_SHARD],[30,t.BITE],[35,t.ICE_FANG],[40,t.SNOWSCAPE],[45,t.FREEZE_DRY],[50,t.MIRROR_COAT],[55,t.BLIZZARD],[60,t.LAST_RESORT]],[e.GLISCOR]:[[1,t.POISON_STING],[1,t.SAND_ATTACK],[1,t.HARDEN],[1,t.POISON_TAIL],[1,t.SLASH],[1,t.POISON_JAB],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[13,t.QUICK_ATTACK],[16,t.FURY_CUTTER],[19,t.KNOCK_OFF],[22,t.ACROBATICS],[27,t.NIGHT_SLASH],[30,t.U_TURN],[35,t.SCREECH],[40,t.X_SCISSOR],[45,t.CRABHAMMER],[50,t.SWORDS_DANCE]],[e.MAMOSWINE]:[[Ee,t.DOUBLE_HIT],[1,t.TACKLE],[1,t.FLAIL],[1,t.POWDER_SNOW],[1,t.MUD_SLAP],[1,t.ODOR_SLEUTH],[1,t.ANCIENT_POWER],[1,t.ICE_FANG],[15,t.ICE_SHARD],[20,t.MIST],[25,t.ENDURE],[30,t.ICY_WIND],[37,t.AMNESIA],[44,t.TAKE_DOWN],[51,t.EARTHQUAKE],[58,t.BLIZZARD],[65,t.THRASH]],[e.PORYGON_Z]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[1,t.CONVERSION],[1,t.RECYCLE],[1,t.MAGNET_RISE],[1,t.NASTY_PLOT],[1,t.TRICK_ROOM],[15,t.THUNDER_SHOCK],[20,t.PSYBEAM],[25,t.CONVERSION_2],[30,t.AGILITY],[35,t.RECOVER],[40,t.DISCHARGE],[45,t.TRI_ATTACK],[50,t.MAGIC_COAT],[55,t.LOCK_ON],[60,t.ZAP_CANNON],[65,t.HYPER_BEAM]],[e.GALLADE]:[[Ee,t.SLASH],[1,t.LEER],[1,t.GROWL],[1,t.PSYBEAM],[1,t.CONFUSION],[1,t.PSYCHIC],[1,t.HYPNOSIS],[1,t.DOUBLE_TEAM],[1,t.DREAM_EATER],[1,t.CHARM],[1,t.FURY_CUTTER],[1,t.FUTURE_SIGHT],[1,t.IMPRISON],[1,t.CALM_MIND],[1,t.LEAF_BLADE],[1,t.NIGHT_SLASH],[1,t.SACRED_SWORD],[1,t.DISARMING_VOICE],[1,t.DRAINING_KISS],[1,t.LIFE_DEW],[1,t.AQUA_CUTTER],[9,t.HELPING_HAND],[12,t.FEINT],[15,t.TELEPORT],[18,t.AERIAL_ACE],[23,t.FALSE_SWIPE],[28,t.PROTECT],[35,t.SWORDS_DANCE],[42,t.PSYCHO_CUT],[49,t.HEAL_PULSE],[56,t.WIDE_GUARD],[56,t.QUICK_GUARD],[63,t.CLOSE_COMBAT]],[e.PROBOPASS]:[[Ee,t.TRI_ATTACK],[1,t.TACKLE],[1,t.HARDEN],[1,t.IRON_DEFENSE],[1,t.BLOCK],[1,t.ROCK_THROW],[1,t.GRAVITY],[1,t.MAGNET_RISE],[1,t.WIDE_GUARD],[1,t.MAGNETIC_FLUX],[13,t.THUNDER_WAVE],[16,t.REST],[19,t.SPARK],[22,t.ROCK_SLIDE],[25,t.POWER_GEM],[28,t.ROCK_BLAST],[31,t.DISCHARGE],[34,t.SANDSTORM],[37,t.EARTH_POWER],[40,t.STONE_EDGE],[43,t.ZAP_CANNON],[43,t.LOCK_ON]],[e.DUSKNOIR]:[[1,t.FIRE_PUNCH],[1,t.ICE_PUNCH],[1,t.THUNDER_PUNCH],[1,t.BIND],[1,t.LEER],[1,t.DISABLE],[1,t.ASTONISH],[1,t.PURSUIT],[1,t.SHADOW_PUNCH],[1,t.GRAVITY],[1,t.SHADOW_SNEAK],[12,t.CONFUSE_RAY],[16,t.NIGHT_SHADE],[20,t.PAYBACK],[24,t.WILL_O_WISP],[28,t.MEAN_LOOK],[32,t.HEX],[36,t.CURSE],[42,t.SHADOW_BALL],[48,t.FUTURE_SIGHT],[54,t.DESTINY_BOND]],[e.FROSLASS]:[[Ee,t.HEX],[1,t.HEADBUTT],[1,t.LEER],[1,t.BITE],[1,t.DOUBLE_TEAM],[1,t.POWDER_SNOW],[1,t.PROTECT],[1,t.DESTINY_BOND],[1,t.WEATHER_BALL],[1,t.CRUNCH],[1,t.ASTONISH],[1,t.ICE_FANG],[1,t.OMINOUS_WIND],[15,t.ICE_SHARD],[20,t.DRAINING_KISS],[25,t.ICY_WIND],[30,t.FROST_BREATH],[35,t.CONFUSE_RAY],[40,t.SNOWSCAPE],[47,t.WILL_O_WISP],[54,t.AURORA_VEIL],[61,t.SHADOW_BALL],[68,t.BLIZZARD]],[e.ROTOM]:[[1,t.DOUBLE_TEAM],[1,t.ASTONISH],[5,t.THUNDER_SHOCK],[10,t.CONFUSE_RAY],[15,t.CHARGE],[20,t.ELECTRO_BALL],[25,t.THUNDER_WAVE],[30,t.SHOCK_WAVE],[35,t.HEX],[40,t.SUBSTITUTE],[45,t.TRICK],[50,t.DISCHARGE],[55,t.UPROAR]],[e.UXIE]:[[X,t.TRI_ATTACK],[X,t.SNORE],[X,t.SAFEGUARD],[X,t.IRON_TAIL],[X,t.PSYCHO_CUT],[X,t.WONDER_ROOM],[X,t.MAGIC_ROOM],[X,t.ROUND],[X,t.ALLY_SWITCH],[X,t.EXPANDING_FORCE],[1,t.CONFUSION],[1,t.REST],[7,t.SWIFT],[14,t.ENDURE],[21,t.PSYBEAM],[28,t.IMPRISON],[35,t.EXTRASENSORY],[42,t.AMNESIA],[49,t.PSYCHIC],[56,t.YAWN],[63,t.FUTURE_SIGHT],[70,t.FLAIL],[77,t.MEMENTO],[84,t.MYSTICAL_POWER]],[e.MESPRIT]:[[X,t.TRI_ATTACK],[X,t.SNORE],[X,t.SAFEGUARD],[X,t.IRON_TAIL],[X,t.PSYCHO_CUT],[X,t.WONDER_ROOM],[X,t.MAGIC_ROOM],[X,t.ROUND],[X,t.ALLY_SWITCH],[X,t.EXPANDING_FORCE],[1,t.CONFUSION],[1,t.REST],[7,t.SWIFT],[14,t.PROTECT],[21,t.PSYBEAM],[28,t.IMPRISON],[35,t.EXTRASENSORY],[42,t.CHARM],[49,t.PSYCHIC],[56,t.FLATTER],[63,t.FUTURE_SIGHT],[70,t.COPYCAT],[77,t.HEALING_WISH],[84,t.MYSTICAL_POWER]],[e.AZELF]:[[X,t.SELF_DESTRUCT],[X,t.TRI_ATTACK],[X,t.SNORE],[X,t.SAFEGUARD],[X,t.IRON_TAIL],[X,t.PAYBACK],[X,t.ASSURANCE],[X,t.PSYCHO_CUT],[X,t.WONDER_ROOM],[X,t.MAGIC_ROOM],[X,t.ROUND],[X,t.ALLY_SWITCH],[X,t.EXPANDING_FORCE],[1,t.CONFUSION],[1,t.REST],[7,t.SWIFT],[14,t.DETECT],[21,t.PSYBEAM],[28,t.IMPRISON],[35,t.EXTRASENSORY],[42,t.NASTY_PLOT],[49,t.PSYCHIC],[56,t.UPROAR],[63,t.FUTURE_SIGHT],[70,t.LAST_RESORT],[77,t.EXPLOSION],[84,t.MYSTICAL_POWER]],[e.DIALGA]:[[1,t.SCARY_FACE],[1,t.METAL_CLAW],[8,t.DRAGON_BREATH],[16,t.ANCIENT_POWER],[24,t.SLASH],[32,t.FLASH_CANNON],[40,t.DRAGON_CLAW],[48,t.AURA_SPHERE],[56,t.POWER_GEM],[64,t.METAL_BURST],[72,t.EARTH_POWER],[80,t.IRON_TAIL],[88,t.ROAR_OF_TIME]],[e.PALKIA]:[[1,t.SCARY_FACE],[1,t.WATER_PULSE],[8,t.DRAGON_BREATH],[16,t.ANCIENT_POWER],[24,t.SLASH],[32,t.AQUA_RING],[48,t.AURA_SPHERE],[56,t.POWER_GEM],[64,t.AQUA_TAIL],[72,t.EARTH_POWER],[80,t.SPACIAL_REND],[88,t.HYDRO_PUMP]],[e.HEATRAN]:[[1,t.LEER],[1,t.FIRE_SPIN],[6,t.METAL_CLAW],[12,t.ANCIENT_POWER],[18,t.FIRE_FANG],[24,t.SCARY_FACE],[30,t.IRON_HEAD],[36,t.CRUNCH],[42,t.LAVA_PLUME],[48,t.METAL_SOUND],[54,t.EARTH_POWER],[60,t.HEAT_WAVE],[66,t.STONE_EDGE],[72,t.MAGMA_STORM]],[e.REGIGIGAS]:[[1,t.POUND],[1,t.CONFUSE_RAY],[1,t.DIZZY_PUNCH],[1,t.FORESIGHT],[6,t.PAYBACK],[12,t.REVENGE],[18,t.STOMP],[24,t.PROTECT],[30,t.KNOCK_OFF],[36,t.MEGA_PUNCH],[42,t.BODY_PRESS],[48,t.WIDE_GUARD],[54,t.ZEN_HEADBUTT],[60,t.HEAVY_SLAM],[66,t.HAMMER_ARM],[72,t.GIGA_IMPACT],[78,t.CRUSH_GRIP]],[e.GIRATINA]:[[1,t.SHADOW_SNEAK],[1,t.DEFOG],[1,t.DRAGON_BREATH],[7,t.OMINOUS_WIND],[14,t.ANCIENT_POWER],[21,t.HEX],[28,t.SLASH],[35,t.SCARY_FACE],[42,t.SHADOW_CLAW],[49,t.PAIN_SPLIT],[56,t.AURA_SPHERE],[63,t.DRAGON_CLAW],[70,t.EARTH_POWER],[77,t.SHADOW_FORCE],[84,t.DESTINY_BOND]],[e.CRESSELIA]:[[1,t.CONFUSION],[1,t.DOUBLE_TEAM],[6,t.MIST],[12,t.AURORA_BEAM],[18,t.PSYBEAM],[24,t.ALLY_SWITCH],[30,t.SLASH],[36,t.PSYCHO_CUT],[42,t.MOONLIGHT],[48,t.SAFEGUARD],[54,t.PSYCHIC],[60,t.MOONBLAST],[66,t.FUTURE_SIGHT],[72,t.LUNAR_DANCE],[72,t.LUNAR_BLESSING]],[e.PHIONE]:[[1,t.WATER_GUN],[9,t.CHARM],[16,t.SUPERSONIC],[24,t.BUBBLE_BEAM],[31,t.ACID_ARMOR],[39,t.WHIRLPOOL],[46,t.WATER_PULSE],[54,t.AQUA_RING],[61,t.DIVE],[69,t.RAIN_DANCE],[75,t.TAKE_HEART]],[e.MANAPHY]:[[1,t.HEART_SWAP],[1,t.TAIL_GLOW],[1,t.WATER_GUN],[9,t.CHARM],[16,t.SUPERSONIC],[24,t.BUBBLE_BEAM],[31,t.ACID_ARMOR],[39,t.WHIRLPOOL],[46,t.WATER_PULSE],[54,t.AQUA_RING],[61,t.DIVE],[69,t.RAIN_DANCE],[76,t.TAKE_HEART]],[e.DARKRAI]:[[1,t.DISABLE],[1,t.OMINOUS_WIND],[1,t.PURSUIT],[11,t.QUICK_ATTACK],[20,t.HYPNOSIS],[29,t.SUCKER_PUNCH],[38,t.NIGHT_SHADE],[47,t.DOUBLE_TEAM],[57,t.HAZE],[66,t.DARK_VOID],[75,t.NASTY_PLOT],[84,t.DREAM_EATER],[93,t.DARK_PULSE]],[e.SHAYMIN]:[[1,t.LEAFAGE],[1,t.GROWTH],[10,t.MAGICAL_LEAF],[19,t.LEECH_SEED],[28,t.SYNTHESIS],[37,t.SWEET_SCENT],[46,t.NATURAL_GIFT],[55,t.WORRY_SEED],[64,t.AROMATHERAPY],[73,t.ENERGY_BALL],[82,t.SWEET_KISS],[91,t.HEALING_WISH],[100,t.SEED_FLARE]],[e.ARCEUS]:[[1,t.SEISMIC_TOSS],[1,t.COSMIC_POWER],[1,t.PUNISHMENT],[10,t.GRAVITY],[20,t.EARTH_POWER],[30,t.HYPER_VOICE],[40,t.EXTREME_SPEED],[50,t.HEALING_WISH],[60,t.FUTURE_SIGHT],[70,t.RECOVER],[80,t.HYPER_BEAM],[90,t.PERISH_SONG],[100,t.JUDGMENT]],[e.VICTINI]:[[1,t.CONFUSION],[1,t.QUICK_ATTACK],[1,t.FOCUS_ENERGY],[1,t.FLAME_CHARGE],[1,t.V_CREATE],[7,t.WORK_UP],[14,t.INCINERATE],[21,t.STORED_POWER],[28,t.HEADBUTT],[35,t.ENDURE],[42,t.ZEN_HEADBUTT],[49,t.INFERNO],[56,t.REVERSAL],[63,t.SEARING_SHOT],[70,t.DOUBLE_EDGE],[77,t.FLARE_BLITZ],[84,t.OVERHEAT],[91,t.FINAL_GAMBIT]],[e.SNIVY]:[[1,t.TACKLE],[4,t.LEER],[5,t.VINE_WHIP],[10,t.WRAP],[13,t.GROWTH],[16,t.MAGICAL_LEAF],[19,t.LEECH_SEED],[22,t.MEGA_DRAIN],[25,t.SLAM],[28,t.LEAF_BLADE],[31,t.COIL],[34,t.GIGA_DRAIN],[37,t.GASTRO_ACID],[40,t.LEAF_STORM]],[e.SERVINE]:[[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.WRAP],[1,t.LEER],[13,t.GROWTH],[16,t.MAGICAL_LEAF],[20,t.LEECH_SEED],[24,t.MEGA_DRAIN],[28,t.SLAM],[32,t.LEAF_BLADE],[36,t.COIL],[40,t.GIGA_DRAIN],[44,t.GASTRO_ACID],[48,t.LEAF_STORM]],[e.SERPERIOR]:[[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.WRAP],[1,t.LEER],[13,t.GROWTH],[16,t.MAGICAL_LEAF],[20,t.LEECH_SEED],[24,t.MEGA_DRAIN],[28,t.SLAM],[32,t.LEAF_BLADE],[38,t.COIL],[44,t.GIGA_DRAIN],[50,t.GASTRO_ACID],[56,t.LEAF_STORM]],[e.TEPIG]:[[1,t.TACKLE],[3,t.TAIL_WHIP],[5,t.EMBER],[9,t.ENDURE],[13,t.DEFENSE_CURL],[15,t.FLAME_CHARGE],[19,t.SMOG],[21,t.ROLLOUT],[25,t.TAKE_DOWN],[27,t.HEAT_CRASH],[31,t.ASSURANCE],[33,t.FLAMETHROWER],[37,t.HEAD_SMASH],[39,t.ROAR],[43,t.FLARE_BLITZ]],[e.PIGNITE]:[[Ee,t.ARM_THRUST],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.EMBER],[1,t.ENDURE],[13,t.DEFENSE_CURL],[15,t.FLAME_CHARGE],[20,t.SMOG],[23,t.ROLLOUT],[28,t.TAKE_DOWN],[31,t.HEAT_CRASH],[36,t.ASSURANCE],[39,t.FLAMETHROWER],[44,t.HEAD_SMASH],[47,t.ROAR],[52,t.FLARE_BLITZ]],[e.EMBOAR]:[[X,t.ENDURE],[X,t.HAMMER_ARM],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.EMBER],[1,t.ARM_THRUST],[13,t.DEFENSE_CURL],[15,t.FLAME_CHARGE],[20,t.SMOG],[23,t.ROLLOUT],[28,t.TAKE_DOWN],[31,t.HEAT_CRASH],[38,t.ASSURANCE],[43,t.FLAMETHROWER],[50,t.HEAD_SMASH],[55,t.ROAR],[62,t.FLARE_BLITZ]],[e.OSHAWOTT]:[[1,t.TACKLE],[5,t.TAIL_WHIP],[5,t.WATER_GUN],[11,t.SOAK],[13,t.FOCUS_ENERGY],[17,t.RAZOR_SHELL],[19,t.FURY_CUTTER],[23,t.WATER_PULSE],[25,t.AERIAL_ACE],[29,t.AQUA_JET],[31,t.ENCORE],[35,t.AQUA_TAIL],[37,t.RETALIATE],[41,t.SWORDS_DANCE],[43,t.HYDRO_PUMP]],[e.DEWOTT]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.SOAK],[13,t.FOCUS_ENERGY],[18,t.RAZOR_SHELL],[21,t.FURY_CUTTER],[26,t.WATER_PULSE],[29,t.AERIAL_ACE],[34,t.AQUA_JET],[37,t.ENCORE],[42,t.AQUA_TAIL],[45,t.RETALIATE],[50,t.SWORDS_DANCE],[53,t.HYDRO_PUMP]],[e.SAMUROTT]:[[Ee,t.SLASH],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.MEGAHORN],[1,t.SOAK],[13,t.FOCUS_ENERGY],[18,t.RAZOR_SHELL],[21,t.FURY_CUTTER],[25,t.WATER_PULSE],[29,t.AERIAL_ACE],[34,t.AQUA_JET],[39,t.ENCORE],[46,t.AQUA_TAIL],[51,t.RETALIATE],[58,t.SWORDS_DANCE],[63,t.HYDRO_PUMP]],[e.PATRAT]:[[1,t.TACKLE],[3,t.LEER],[6,t.BITE],[8,t.BIDE],[11,t.DETECT],[13,t.SAND_ATTACK],[16,t.CRUNCH],[18,t.HYPNOSIS],[21,t.SUPER_FANG],[23,t.AFTER_YOU],[26,t.FOCUS_ENERGY],[28,t.WORK_UP],[31,t.HYPER_FANG],[33,t.NASTY_PLOT],[36,t.MEAN_LOOK],[38,t.BATON_PASS],[41,t.SLAM]],[e.WATCHOG]:[[Ee,t.CONFUSE_RAY],[X,t.WORK_UP],[1,t.TACKLE],[1,t.LEER],[1,t.BITE],[1,t.LOW_KICK],[1,t.ROTOTILLER],[8,t.BIDE],[11,t.DETECT],[13,t.SAND_ATTACK],[16,t.CRUNCH],[18,t.HYPNOSIS],[22,t.SUPER_FANG],[25,t.AFTER_YOU],[29,t.FOCUS_ENERGY],[32,t.PSYCH_UP],[36,t.HYPER_FANG],[39,t.NASTY_PLOT],[43,t.MEAN_LOOK],[46,t.BATON_PASS],[50,t.SLAM]],[e.LILLIPUP]:[[1,t.TACKLE],[1,t.LEER],[4,t.WORK_UP],[8,t.BITE],[12,t.RETALIATE],[17,t.BABY_DOLL_EYES],[20,t.PLAY_ROUGH],[24,t.CRUNCH],[28,t.TAKE_DOWN],[32,t.HELPING_HAND],[36,t.REVERSAL],[40,t.ROAR],[44,t.LAST_RESORT],[48,t.GIGA_IMPACT]],[e.HERDIER]:[[1,t.TACKLE],[1,t.LEER],[1,t.BITE],[1,t.WORK_UP],[12,t.RETALIATE],[19,t.BABY_DOLL_EYES],[24,t.PLAY_ROUGH],[30,t.CRUNCH],[36,t.TAKE_DOWN],[42,t.HELPING_HAND],[48,t.REVERSAL],[54,t.ROAR],[60,t.LAST_RESORT],[66,t.GIGA_IMPACT]],[e.STOUTLAND]:[[1,t.TACKLE],[1,t.LEER],[1,t.BITE],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[1,t.WORK_UP],[12,t.RETALIATE],[19,t.BABY_DOLL_EYES],[24,t.PLAY_ROUGH],[30,t.CRUNCH],[38,t.TAKE_DOWN],[46,t.HELPING_HAND],[54,t.REVERSAL],[62,t.ROAR],[70,t.LAST_RESORT],[78,t.GIGA_IMPACT]],[e.PURRLOIN]:[[1,t.SCRATCH],[1,t.GROWL],[4,t.SAND_ATTACK],[5,t.FAKE_OUT],[12,t.FURY_SWIPES],[16,t.TORMENT],[21,t.ASSURANCE],[24,t.HONE_CLAWS],[28,t.SUCKER_PUNCH],[32,t.NASTY_PLOT],[36,t.NIGHT_SLASH],[40,t.PLAY_ROUGH]],[e.LIEPARD]:[[1,t.ASSIST],[1,t.SCRATCH],[1,t.SAND_ATTACK],[1,t.GROWL],[1,t.FAKE_OUT],[12,t.FURY_SWIPES],[16,t.TORMENT],[23,t.ASSURANCE],[28,t.HONE_CLAWS],[34,t.SUCKER_PUNCH],[40,t.NASTY_PLOT],[46,t.NIGHT_SLASH],[52,t.PLAY_ROUGH]],[e.PANSAGE]:[[1,t.SCRATCH],[1,t.PLAY_NICE],[4,t.LEER],[7,t.LICK],[10,t.VINE_WHIP],[13,t.FURY_SWIPES],[16,t.LEECH_SEED],[19,t.BITE],[22,t.SEED_BOMB],[25,t.TORMENT],[28,t.FLING],[31,t.ACROBATICS],[34,t.GRASS_KNOT],[37,t.RECYCLE],[40,t.NATURAL_GIFT],[43,t.CRUNCH]],[e.SIMISAGE]:[[X,t.SCRATCH],[X,t.PLAY_NICE],[X,t.VINE_WHIP],[X,t.LEECH_SEED],[X,t.BITE],[X,t.TORMENT],[X,t.FLING],[X,t.ACROBATICS],[X,t.GRASS_KNOT],[X,t.RECYCLE],[X,t.NATURAL_GIFT],[X,t.CRUNCH],[1,t.LEER],[1,t.LICK],[1,t.FURY_SWIPES],[1,t.SEED_BOMB]],[e.PANSEAR]:[[1,t.SCRATCH],[1,t.PLAY_NICE],[4,t.LEER],[7,t.LICK],[10,t.INCINERATE],[13,t.FURY_SWIPES],[16,t.YAWN],[19,t.BITE],[22,t.FLAME_BURST],[25,t.AMNESIA],[28,t.FLING],[31,t.ACROBATICS],[34,t.FIRE_BLAST],[37,t.RECYCLE],[40,t.NATURAL_GIFT],[43,t.CRUNCH]],[e.SIMISEAR]:[[X,t.SCRATCH],[X,t.PLAY_NICE],[X,t.INCINERATE],[X,t.YAWN],[X,t.BITE],[X,t.AMNESIA],[X,t.FLING],[X,t.ACROBATICS],[X,t.FIRE_BLAST],[X,t.RECYCLE],[X,t.NATURAL_GIFT],[X,t.CRUNCH],[1,t.LEER],[1,t.LICK],[1,t.FURY_SWIPES],[1,t.FLAME_BURST]],[e.PANPOUR]:[[1,t.SCRATCH],[1,t.PLAY_NICE],[4,t.LEER],[7,t.LICK],[10,t.WATER_GUN],[13,t.FURY_SWIPES],[16,t.WATER_SPORT],[19,t.BITE],[22,t.SCALD],[25,t.TAUNT],[28,t.FLING],[31,t.ACROBATICS],[34,t.BRINE],[37,t.RECYCLE],[40,t.NATURAL_GIFT],[43,t.CRUNCH]],[e.SIMIPOUR]:[[X,t.SCRATCH],[X,t.PLAY_NICE],[X,t.WATER_GUN],[X,t.WATER_SPORT],[X,t.BITE],[X,t.TAUNT],[X,t.FLING],[X,t.ACROBATICS],[X,t.BRINE],[X,t.RECYCLE],[X,t.NATURAL_GIFT],[X,t.CRUNCH],[1,t.LEER],[1,t.LICK],[1,t.FURY_SWIPES],[1,t.SCALD]],[e.MUNNA]:[[1,t.DEFENSE_CURL],[1,t.STORED_POWER],[1,t.PSYWAVE],[4,t.HYPNOSIS],[8,t.PSYBEAM],[12,t.IMPRISON],[16,t.MOONLIGHT],[20,t.MAGIC_COAT],[24,t.ZEN_HEADBUTT],[28,t.CALM_MIND],[32,t.YAWN],[36,t.PSYCHIC],[40,t.MOONBLAST],[44,t.DREAM_EATER],[48,t.FUTURE_SIGHT],[52,t.WONDER_ROOM]],[e.MUSHARNA]:[[1,t.PSYWAVE],[1,t.PSYBEAM],[1,t.PSYCHIC],[1,t.HYPNOSIS],[1,t.DEFENSE_CURL],[1,t.LUCKY_CHANT],[1,t.DREAM_EATER],[1,t.MOONLIGHT],[1,t.FUTURE_SIGHT],[1,t.MAGIC_COAT],[1,t.YAWN],[1,t.IMPRISON],[1,t.CALM_MIND],[1,t.ZEN_HEADBUTT],[1,t.WONDER_ROOM],[1,t.STORED_POWER],[1,t.MOONBLAST],[1,t.PSYCHIC_TERRAIN]],[e.PIDOVE]:[[1,t.GUST],[1,t.GROWL],[4,t.LEER],[8,t.QUICK_ATTACK],[12,t.TAUNT],[16,t.AIR_CUTTER],[20,t.SWAGGER],[24,t.FEATHER_DANCE],[28,t.DETECT],[32,t.AIR_SLASH],[36,t.ROOST],[40,t.TAILWIND],[44,t.SKY_ATTACK]],[e.TRANQUILL]:[[1,t.GUST],[1,t.LEER],[1,t.GROWL],[1,t.QUICK_ATTACK],[12,t.TAUNT],[16,t.AIR_CUTTER],[20,t.SWAGGER],[26,t.FEATHER_DANCE],[34,t.DETECT],[38,t.AIR_SLASH],[44,t.ROOST],[50,t.TAILWIND],[56,t.SKY_ATTACK]],[e.UNFEZANT]:[[1,t.GUST],[1,t.LEER],[1,t.GROWL],[1,t.QUICK_ATTACK],[12,t.TAUNT],[16,t.AIR_CUTTER],[20,t.SWAGGER],[26,t.FEATHER_DANCE],[36,t.DETECT],[42,t.AIR_SLASH],[50,t.ROOST],[58,t.TAILWIND],[66,t.SKY_ATTACK]],[e.BLITZLE]:[[1,t.QUICK_ATTACK],[4,t.TAIL_WHIP],[8,t.CHARGE],[11,t.SHOCK_WAVE],[15,t.THUNDER_WAVE],[18,t.FLAME_CHARGE],[22,t.SPARK],[25,t.STOMP],[29,t.DISCHARGE],[33,t.AGILITY],[35,t.WILD_CHARGE],[40,t.THRASH]],[e.ZEBSTRIKA]:[[1,t.TAIL_WHIP],[1,t.THUNDER_WAVE],[1,t.QUICK_ATTACK],[1,t.CHARGE],[1,t.ION_DELUGE],[11,t.SHOCK_WAVE],[18,t.FLAME_CHARGE],[25,t.SPARK],[31,t.STOMP],[36,t.DISCHARGE],[42,t.AGILITY],[47,t.WILD_CHARGE],[53,t.THRASH]],[e.ROGGENROLA]:[[1,t.SAND_ATTACK],[1,t.TACKLE],[4,t.HARDEN],[8,t.STEALTH_ROCK],[12,t.MUD_SLAP],[16,t.SMACK_DOWN],[20,t.IRON_DEFENSE],[24,t.HEADBUTT],[28,t.ROCK_SLIDE],[32,t.ROCK_BLAST],[36,t.SANDSTORM],[40,t.STONE_EDGE],[44,t.EXPLOSION]],[e.BOLDORE]:[[Ee,t.POWER_GEM],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.HARDEN],[1,t.STEALTH_ROCK],[12,t.MUD_SLAP],[16,t.SMACK_DOWN],[20,t.IRON_DEFENSE],[24,t.HEADBUTT],[30,t.ROCK_SLIDE],[36,t.ROCK_BLAST],[42,t.SANDSTORM],[48,t.STONE_EDGE],[54,t.EXPLOSION]],[e.GIGALITH]:[[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.HARDEN],[1,t.POWER_GEM],[1,t.STEALTH_ROCK],[12,t.MUD_SLAP],[16,t.SMACK_DOWN],[20,t.IRON_DEFENSE],[24,t.HEADBUTT],[30,t.ROCK_SLIDE],[36,t.ROCK_BLAST],[42,t.SANDSTORM],[48,t.STONE_EDGE],[54,t.EXPLOSION]],[e.WOOBAT]:[[1,t.GUST],[1,t.ATTRACT],[5,t.CONFUSION],[10,t.ENDEAVOR],[15,t.AIR_CUTTER],[20,t.IMPRISON],[25,t.ASSURANCE],[30,t.AMNESIA],[35,t.AIR_SLASH],[40,t.PSYCHIC],[45,t.CALM_MIND],[50,t.FUTURE_SIGHT],[55,t.SIMPLE_BEAM]],[e.SWOOBAT]:[[1,t.GUST],[1,t.CONFUSION],[1,t.ATTRACT],[1,t.ENDEAVOR],[15,t.AIR_CUTTER],[20,t.IMPRISON],[25,t.ASSURANCE],[30,t.AMNESIA],[35,t.AIR_SLASH],[40,t.PSYCHIC],[45,t.CALM_MIND],[50,t.FUTURE_SIGHT],[55,t.SIMPLE_BEAM]],[e.DRILBUR]:[[1,t.MUD_SLAP],[1,t.RAPID_SPIN],[1,t.MUD_SPORT],[4,t.SCRATCH],[8,t.HONE_CLAWS],[12,t.FURY_SWIPES],[16,t.METAL_CLAW],[20,t.SANDSTORM],[24,t.CRUSH_CLAW],[28,t.ROCK_SLIDE],[32,t.DIG],[36,t.SWORDS_DANCE],[40,t.DRILL_RUN],[44,t.EARTHQUAKE],[48,t.FISSURE]],[e.EXCADRILL]:[[Ee,t.HORN_DRILL],[1,t.SCRATCH],[1,t.MUD_SLAP],[1,t.RAPID_SPIN],[1,t.MUD_SPORT],[1,t.ROTOTILLER],[1,t.HONE_CLAWS],[12,t.FURY_SWIPES],[16,t.METAL_CLAW],[20,t.SANDSTORM],[24,t.CRUSH_CLAW],[28,t.ROCK_SLIDE],[34,t.DIG],[40,t.SWORDS_DANCE],[46,t.DRILL_RUN],[52,t.EARTHQUAKE],[58,t.FISSURE]],[e.AUDINO]:[[1,t.POUND],[1,t.PLAY_NICE],[4,t.DISARMING_VOICE],[9,t.BABY_DOLL_EYES],[12,t.HELPING_HAND],[16,t.GROWL],[20,t.ZEN_HEADBUTT],[24,t.LIFE_DEW],[28,t.AFTER_YOU],[32,t.TAKE_DOWN],[36,t.SIMPLE_BEAM],[40,t.HYPER_VOICE],[44,t.HEAL_PULSE],[48,t.DOUBLE_EDGE],[52,t.ENTRAINMENT],[56,t.MISTY_TERRAIN],[60,t.LAST_RESORT]],[e.TIMBURR]:[[1,t.POUND],[1,t.LEER],[4,t.LOW_KICK],[8,t.ROCK_THROW],[12,t.FOCUS_ENERGY],[16,t.BULK_UP],[20,t.ROCK_SLIDE],[24,t.SLAM],[28,t.SCARY_FACE],[32,t.DYNAMIC_PUNCH],[36,t.HAMMER_ARM],[40,t.STONE_EDGE],[44,t.SUPERPOWER],[48,t.FOCUS_PUNCH]],[e.GURDURR]:[[1,t.POUND],[1,t.LEER],[1,t.LOW_KICK],[1,t.ROCK_THROW],[1,t.BIDE],[12,t.FOCUS_ENERGY],[16,t.BULK_UP],[20,t.ROCK_SLIDE],[24,t.SLAM],[30,t.SCARY_FACE],[36,t.DYNAMIC_PUNCH],[42,t.HAMMER_ARM],[48,t.STONE_EDGE],[54,t.SUPERPOWER],[60,t.FOCUS_PUNCH]],[e.CONKELDURR]:[[1,t.POUND],[1,t.LEER],[1,t.LOW_KICK],[1,t.ROCK_THROW],[1,t.BIDE],[12,t.FOCUS_ENERGY],[16,t.BULK_UP],[20,t.ROCK_SLIDE],[24,t.SLAM],[30,t.SCARY_FACE],[36,t.DYNAMIC_PUNCH],[42,t.HAMMER_ARM],[48,t.STONE_EDGE],[54,t.SUPERPOWER],[60,t.FOCUS_PUNCH]],[e.TYMPOLE]:[[1,t.BUBBLE],[1,t.GROWL],[1,t.ECHOED_VOICE],[4,t.ACID],[8,t.SUPERSONIC],[12,t.MUD_SHOT],[16,t.ROUND],[20,t.BUBBLE_BEAM],[24,t.FLAIL],[28,t.UPROAR],[32,t.AQUA_RING],[36,t.HYPER_VOICE],[40,t.MUDDY_WATER],[44,t.RAIN_DANCE],[48,t.HYDRO_PUMP]],[e.PALPITOAD]:[[1,t.BUBBLE],[1,t.GROWL],[1,t.SUPERSONIC],[1,t.ACID],[1,t.ECHOED_VOICE],[12,t.MUD_SHOT],[16,t.ROUND],[20,t.BUBBLE_BEAM],[24,t.FLAIL],[30,t.UPROAR],[37,t.AQUA_RING],[42,t.HYPER_VOICE],[48,t.MUDDY_WATER],[54,t.RAIN_DANCE],[60,t.HYDRO_PUMP]],[e.SEISMITOAD]:[[Ee,t.DRAIN_PUNCH],[1,t.BUBBLE],[1,t.GROWL],[1,t.SUPERSONIC],[1,t.ACID],[1,t.GASTRO_ACID],[1,t.ECHOED_VOICE],[12,t.MUD_SHOT],[16,t.ROUND],[20,t.BUBBLE_BEAM],[24,t.FLAIL],[30,t.UPROAR],[39,t.AQUA_RING],[46,t.HYPER_VOICE],[54,t.MUDDY_WATER],[62,t.RAIN_DANCE],[70,t.HYDRO_PUMP]],[e.THROH]:[[1,t.ROCK_SMASH],[1,t.LEER],[1,t.BIDE],[1,t.MAT_BLOCK],[1,t.BIND],[5,t.FOCUS_ENERGY],[10,t.CIRCLE_THROW],[15,t.WIDE_GUARD],[20,t.REVENGE],[25,t.BULK_UP],[30,t.STORM_THROW],[35,t.VITAL_THROW],[40,t.SEISMIC_TOSS],[45,t.ENDURE],[50,t.REVERSAL],[55,t.SUPERPOWER]],[e.SAWK]:[[1,t.LEER],[1,t.ROCK_SMASH],[1,t.BIDE],[5,t.FOCUS_ENERGY],[10,t.DOUBLE_KICK],[15,t.QUICK_GUARD],[20,t.LOW_SWEEP],[25,t.BULK_UP],[30,t.RETALIATE],[35,t.BRICK_BREAK],[40,t.COUNTER],[45,t.ENDURE],[50,t.REVERSAL],[55,t.CLOSE_COMBAT]],[e.SEWADDLE]:[[1,t.TACKLE],[1,t.STRING_SHOT],[8,t.BUG_BITE],[15,t.RAZOR_LEAF],[22,t.STRUGGLE_BUG],[29,t.ENDURE],[31,t.STICKY_WEB],[36,t.BUG_BUZZ],[43,t.FLAIL]],[e.SWADLOON]:[[Ee,t.PROTECT],[1,t.TACKLE],[1,t.RAZOR_LEAF],[1,t.STRING_SHOT],[1,t.BUG_BITE],[1,t.GRASS_WHISTLE],[22,t.STRUGGLE_BUG],[29,t.ENDURE],[31,t.STICKY_WEB],[36,t.BUG_BUZZ],[43,t.FLAIL]],[e.LEAVANNY]:[[Ee,t.SLASH],[X,t.BUG_BITE],[X,t.STICKY_WEB],[X,t.BUG_BUZZ],[1,t.PROTECT],[1,t.TACKLE],[1,t.RAZOR_LEAF],[1,t.STRING_SHOT],[1,t.GRASS_WHISTLE],[1,t.ENDURE],[1,t.FLAIL],[1,t.FALSE_SWIPE],[22,t.STRUGGLE_BUG],[29,t.FELL_STINGER],[32,t.HELPING_HAND],[36,t.LEAF_BLADE],[39,t.X_SCISSOR],[43,t.ENTRAINMENT],[46,t.SWORDS_DANCE],[50,t.LEAF_STORM]],[e.VENIPEDE]:[[1,t.POISON_STING],[1,t.DEFENSE_CURL],[4,t.ROLLOUT],[8,t.PROTECT],[12,t.POISON_TAIL],[16,t.SCREECH],[20,t.BUG_BITE],[24,t.VENOSHOCK],[28,t.TAKE_DOWN],[32,t.AGILITY],[36,t.TOXIC],[40,t.VENOM_DRENCH],[44,t.DOUBLE_EDGE]],[e.WHIRLIPEDE]:[[Ee,t.IRON_DEFENSE],[1,t.POISON_STING],[1,t.DEFENSE_CURL],[1,t.PROTECT],[1,t.ROLLOUT],[12,t.POISON_TAIL],[16,t.SCREECH],[20,t.BUG_BITE],[26,t.VENOSHOCK],[32,t.TAKE_DOWN],[38,t.AGILITY],[44,t.TOXIC],[50,t.VENOM_DRENCH],[56,t.DOUBLE_EDGE]],[e.SCOLIPEDE]:[[1,t.POISON_STING],[1,t.DEFENSE_CURL],[1,t.PROTECT],[1,t.ROLLOUT],[1,t.BATON_PASS],[1,t.IRON_DEFENSE],[12,t.POISON_TAIL],[16,t.SCREECH],[20,t.BUG_BITE],[26,t.VENOSHOCK],[34,t.TAKE_DOWN],[42,t.AGILITY],[50,t.TOXIC],[58,t.VENOM_DRENCH],[66,t.DOUBLE_EDGE],[74,t.MEGAHORN]],[e.COTTONEE]:[[1,t.ABSORB],[1,t.HELPING_HAND],[3,t.FAIRY_WIND],[6,t.STUN_SPORE],[12,t.MEGA_DRAIN],[15,t.RAZOR_LEAF],[18,t.GROWTH],[21,t.POISON_POWDER],[24,t.GIGA_DRAIN],[27,t.CHARM],[30,t.LEECH_SEED],[33,t.COTTON_SPORE],[36,t.ENERGY_BALL],[39,t.SUNNY_DAY],[42,t.ENDEAVOR],[45,t.COTTON_GUARD],[48,t.SOLAR_BEAM]],[e.WHIMSICOTT]:[[1,t.GUST],[1,t.ABSORB],[1,t.MEGA_DRAIN],[1,t.LEECH_SEED],[1,t.GROWTH],[1,t.RAZOR_LEAF],[1,t.SOLAR_BEAM],[1,t.POISON_POWDER],[1,t.STUN_SPORE],[1,t.COTTON_SPORE],[1,t.GIGA_DRAIN],[1,t.CHARM],[1,t.SUNNY_DAY],[1,t.MEMENTO],[1,t.HELPING_HAND],[1,t.ENDEAVOR],[1,t.TAILWIND],[1,t.ENERGY_BALL],[1,t.COTTON_GUARD],[1,t.HURRICANE],[1,t.FAIRY_WIND],[1,t.MOONBLAST]],[e.PETILIL]:[[1,t.ABSORB],[1,t.GROWTH],[3,t.HELPING_HAND],[6,t.STUN_SPORE],[9,t.MEGA_DRAIN],[12,t.CHARM],[15,t.MAGICAL_LEAF],[18,t.SLEEP_POWDER],[21,t.GIGA_DRAIN],[24,t.LEECH_SEED],[27,t.AFTER_YOU],[30,t.ENERGY_BALL],[33,t.SYNTHESIS],[36,t.SUNNY_DAY],[39,t.ENTRAINMENT],[42,t.LEAF_STORM]],[e.LILLIGANT]:[[Ee,t.PETAL_DANCE],[1,t.ABSORB],[1,t.MEGA_DRAIN],[1,t.LEECH_SEED],[1,t.GROWTH],[1,t.STUN_SPORE],[1,t.SLEEP_POWDER],[1,t.GIGA_DRAIN],[1,t.CHARM],[1,t.SYNTHESIS],[1,t.SUNNY_DAY],[1,t.HELPING_HAND],[1,t.TEETER_DANCE],[1,t.ENERGY_BALL],[1,t.LEAF_STORM],[1,t.QUIVER_DANCE],[1,t.ENTRAINMENT],[1,t.AFTER_YOU],[1,t.PETAL_BLIZZARD],[5,t.MAGICAL_LEAF]],[e.BASCULIN]:[[1,t.TAIL_WHIP],[1,t.WATER_GUN],[4,t.TACKLE],[8,t.FLAIL],[12,t.AQUA_JET],[16,t.BITE],[20,t.SCARY_FACE],[24,t.HEADBUTT],[28,t.SOAK],[32,t.CRUNCH],[36,t.TAKE_DOWN],[40,t.FINAL_GAMBIT],[44,t.WAVE_CRASH],[48,t.THRASH],[52,t.DOUBLE_EDGE],[56,t.HEAD_SMASH]],[e.SANDILE]:[[1,t.LEER],[1,t.POWER_TRIP],[3,t.SAND_ATTACK],[6,t.HONE_CLAWS],[9,t.SAND_TOMB],[12,t.SCARY_FACE],[15,t.BITE],[18,t.TORMENT],[21,t.DIG],[24,t.SWAGGER],[27,t.CRUNCH],[30,t.SANDSTORM],[33,t.FOUL_PLAY],[36,t.EARTHQUAKE],[39,t.THRASH]],[e.KROKOROK]:[[1,t.SAND_ATTACK],[1,t.LEER],[1,t.HONE_CLAWS],[1,t.POWER_TRIP],[9,t.SAND_TOMB],[12,t.SCARY_FACE],[15,t.BITE],[18,t.TORMENT],[21,t.DIG],[24,t.SWAGGER],[27,t.CRUNCH],[32,t.SANDSTORM],[35,t.FOUL_PLAY],[42,t.EARTHQUAKE],[47,t.THRASH]],[e.KROOKODILE]:[[1,t.SAND_ATTACK],[1,t.LEER],[1,t.HONE_CLAWS],[1,t.POWER_TRIP],[9,t.SAND_TOMB],[12,t.SCARY_FACE],[15,t.BITE],[18,t.TORMENT],[21,t.DIG],[24,t.SWAGGER],[27,t.CRUNCH],[32,t.SANDSTORM],[35,t.FOUL_PLAY],[44,t.EARTHQUAKE],[51,t.THRASH],[58,t.OUTRAGE]],[e.DARUMAKA]:[[1,t.TACKLE],[1,t.EMBER],[4,t.TAUNT],[8,t.BITE],[12,t.INCINERATE],[16,t.WORK_UP],[20,t.FIRE_FANG],[24,t.HEADBUTT],[28,t.FIRE_PUNCH],[32,t.UPROAR],[36,t.BELLY_DRUM],[40,t.FLARE_BLITZ],[44,t.THRASH],[48,t.SUPERPOWER]],[e.DARMANITAN]:[[Ee,t.HAMMER_ARM],[1,t.TACKLE],[1,t.BITE],[1,t.EMBER],[1,t.TAUNT],[12,t.INCINERATE],[16,t.WORK_UP],[20,t.FIRE_FANG],[24,t.HEADBUTT],[28,t.FIRE_PUNCH],[32,t.UPROAR],[38,t.BELLY_DRUM],[44,t.FLARE_BLITZ],[50,t.THRASH],[56,t.SUPERPOWER]],[e.MARACTUS]:[[1,t.PECK],[1,t.ABSORB],[1,t.INGRAIN],[1,t.AFTER_YOU],[1,t.SPIKY_SHIELD],[4,t.GROWTH],[8,t.MEGA_DRAIN],[12,t.LEECH_SEED],[16,t.SUCKER_PUNCH],[20,t.PIN_MISSILE],[24,t.GIGA_DRAIN],[28,t.SWEET_SCENT],[32,t.SYNTHESIS],[36,t.PETAL_BLIZZARD],[40,t.COTTON_SPORE],[44,t.SUNNY_DAY],[48,t.SOLAR_BEAM],[52,t.ACUPRESSURE],[56,t.PETAL_DANCE],[60,t.COTTON_GUARD]],[e.DWEBBLE]:[[1,t.SAND_ATTACK],[1,t.FURY_CUTTER],[4,t.WITHDRAW],[8,t.SMACK_DOWN],[12,t.BUG_BITE],[16,t.FLAIL],[20,t.SLASH],[24,t.ROCK_SLIDE],[28,t.STEALTH_ROCK],[32,t.ROCK_BLAST],[36,t.X_SCISSOR],[40,t.ROCK_POLISH],[44,t.SHELL_SMASH],[48,t.ROCK_WRECKER]],[e.CRUSTLE]:[[1,t.SAND_ATTACK],[1,t.WITHDRAW],[1,t.FURY_CUTTER],[1,t.SMACK_DOWN],[12,t.BUG_BITE],[16,t.FLAIL],[20,t.SLASH],[24,t.ROCK_SLIDE],[28,t.STEALTH_ROCK],[32,t.ROCK_BLAST],[38,t.X_SCISSOR],[44,t.ROCK_POLISH],[50,t.SHELL_SMASH],[56,t.ROCK_WRECKER]],[e.SCRAGGY]:[[1,t.LEER],[1,t.LOW_KICK],[4,t.PAYBACK],[8,t.HEADBUTT],[12,t.SAND_ATTACK],[16,t.FACADE],[20,t.PROTECT],[24,t.BEAT_UP],[28,t.SCARY_FACE],[32,t.BRICK_BREAK],[36,t.SWAGGER],[40,t.CRUNCH],[44,t.HIGH_JUMP_KICK],[48,t.FOCUS_PUNCH],[52,t.HEAD_SMASH]],[e.SCRAFTY]:[[1,t.HEADBUTT],[1,t.LEER],[1,t.LOW_KICK],[1,t.PAYBACK],[1,t.FEINT_ATTACK],[12,t.SAND_ATTACK],[16,t.FACADE],[20,t.PROTECT],[24,t.BEAT_UP],[28,t.SCARY_FACE],[32,t.BRICK_BREAK],[36,t.SWAGGER],[42,t.CRUNCH],[48,t.HIGH_JUMP_KICK],[54,t.FOCUS_PUNCH],[60,t.HEAD_SMASH]],[e.SIGILYPH]:[[1,t.GUST],[1,t.CONFUSION],[5,t.GRAVITY],[10,t.HYPNOSIS],[15,t.AIR_CUTTER],[20,t.PSYBEAM],[25,t.WHIRLWIND],[30,t.COSMIC_POWER],[35,t.AIR_SLASH],[40,t.PSYCHIC],[45,t.TAILWIND],[50,t.LIGHT_SCREEN],[50,t.REFLECT],[55,t.SKY_ATTACK],[60,t.SKILL_SWAP]],[e.YAMASK]:[[1,t.PROTECT],[1,t.ASTONISH],[1,t.HEAL_BLOCK],[4,t.HAZE],[8,t.NIGHT_SHADE],[12,t.DISABLE],[16,t.WILL_O_WISP],[20,t.CRAFTY_SHIELD],[24,t.HEX],[28,t.MEAN_LOOK],[32,t.GRUDGE],[36,t.CURSE],[40,t.SHADOW_BALL],[44,t.DARK_PULSE],[48,t.GUARD_SPLIT],[48,t.POWER_SPLIT],[52,t.DESTINY_BOND]],[e.COFAGRIGUS]:[[Ee,t.SHADOW_CLAW],[1,t.NIGHT_SHADE],[1,t.HAZE],[1,t.PROTECT],[1,t.SCARY_FACE],[1,t.ASTONISH],[1,t.HEAL_BLOCK],[12,t.DISABLE],[16,t.WILL_O_WISP],[20,t.CRAFTY_SHIELD],[24,t.HEX],[28,t.MEAN_LOOK],[32,t.GRUDGE],[38,t.CURSE],[44,t.SHADOW_BALL],[50,t.DARK_PULSE],[56,t.GUARD_SPLIT],[56,t.POWER_SPLIT],[62,t.DESTINY_BOND]],[e.TIRTOUGA]:[[1,t.WATER_GUN],[1,t.WITHDRAW],[1,t.BIDE],[3,t.PROTECT],[6,t.AQUA_JET],[9,t.SMACK_DOWN],[12,t.ANCIENT_POWER],[15,t.BITE],[18,t.WIDE_GUARD],[21,t.BRINE],[24,t.ROCK_SLIDE],[27,t.CRUNCH],[30,t.CURSE],[33,t.IRON_DEFENSE],[36,t.AQUA_TAIL],[39,t.RAIN_DANCE],[42,t.HYDRO_PUMP],[45,t.SHELL_SMASH]],[e.CARRACOSTA]:[[1,t.WATER_GUN],[1,t.WITHDRAW],[1,t.PROTECT],[1,t.AQUA_JET],[1,t.BIDE],[9,t.SMACK_DOWN],[12,t.ANCIENT_POWER],[15,t.BITE],[18,t.WIDE_GUARD],[21,t.BRINE],[24,t.ROCK_SLIDE],[27,t.CRUNCH],[30,t.CURSE],[33,t.IRON_DEFENSE],[36,t.AQUA_TAIL],[41,t.RAIN_DANCE],[46,t.HYDRO_PUMP],[51,t.SHELL_SMASH]],[e.ARCHEN]:[[1,t.LEER],[1,t.QUICK_ATTACK],[3,t.ROCK_THROW],[6,t.WING_ATTACK],[9,t.DRAGON_BREATH],[12,t.ANCIENT_POWER],[15,t.PLUCK],[18,t.QUICK_GUARD],[21,t.U_TURN],[24,t.ROCK_SLIDE],[27,t.SCARY_FACE],[30,t.CRUNCH],[33,t.AGILITY],[36,t.TAILWIND],[39,t.DRAGON_CLAW],[42,t.THRASH],[45,t.ENDEAVOR]],[e.ARCHEOPS]:[[1,t.WING_ATTACK],[1,t.LEER],[1,t.ROCK_THROW],[1,t.QUICK_ATTACK],[9,t.DRAGON_BREATH],[12,t.ANCIENT_POWER],[15,t.PLUCK],[18,t.QUICK_GUARD],[21,t.U_TURN],[24,t.ROCK_SLIDE],[27,t.SCARY_FACE],[30,t.CRUNCH],[33,t.AGILITY],[36,t.TAILWIND],[41,t.DRAGON_CLAW],[46,t.THRASH],[51,t.ENDEAVOR]],[e.TRUBBISH]:[[1,t.POUND],[1,t.POISON_GAS],[3,t.RECYCLE],[6,t.ACID_SPRAY],[9,t.AMNESIA],[12,t.CLEAR_SMOG],[15,t.TOXIC_SPIKES],[18,t.SLUDGE],[21,t.STOCKPILE],[21,t.SWALLOW],[24,t.TAKE_DOWN],[27,t.SLUDGE_BOMB],[30,t.TOXIC],[33,t.BELCH],[37,t.PAIN_SPLIT],[39,t.GUNK_SHOT],[42,t.EXPLOSION]],[e.GARBODOR]:[[1,t.POUND],[1,t.TAKE_DOWN],[1,t.POISON_GAS],[1,t.METAL_CLAW],[1,t.RECYCLE],[1,t.ACID_SPRAY],[9,t.AMNESIA],[12,t.CLEAR_SMOG],[15,t.TOXIC_SPIKES],[18,t.SLUDGE],[21,t.STOCKPILE],[21,t.SWALLOW],[24,t.BODY_SLAM],[27,t.SLUDGE_BOMB],[30,t.TOXIC],[33,t.BELCH],[39,t.PAIN_SPLIT],[43,t.GUNK_SHOT],[48,t.EXPLOSION]],[e.ZORUA]:[[1,t.SCRATCH],[1,t.LEER],[4,t.TORMENT],[8,t.HONE_CLAWS],[12,t.FURY_SWIPES],[16,t.SCARY_FACE],[20,t.TAUNT],[24,t.KNOCK_OFF],[28,t.FAKE_TEARS],[32,t.AGILITY],[36,t.IMPRISON],[40,t.NIGHT_DAZE],[44,t.NASTY_PLOT],[48,t.FOUL_PLAY]],[e.ZOROARK]:[[Ee,t.NIGHT_SLASH],[1,t.SCRATCH],[1,t.LEER],[1,t.TORMENT],[1,t.U_TURN],[1,t.HONE_CLAWS],[1,t.SCARY_FACE],[1,t.PURSUIT],[12,t.FURY_SWIPES],[20,t.TAUNT],[24,t.KNOCK_OFF],[28,t.FAKE_TEARS],[34,t.AGILITY],[40,t.IMPRISON],[46,t.NIGHT_DAZE],[52,t.NASTY_PLOT],[58,t.FOUL_PLAY]],[e.MINCCINO]:[[1,t.POUND],[1,t.BABY_DOLL_EYES],[4,t.HELPING_HAND],[8,t.ECHOED_VOICE],[12,t.SING],[16,t.CHARM],[20,t.SWIFT],[24,t.ENCORE],[28,t.AFTER_YOU],[32,t.TAIL_SLAP],[36,t.TICKLE],[40,t.SLAM],[44,t.HYPER_VOICE],[48,t.LAST_RESORT]],[e.CINCCINO]:[[Ee,t.TAIL_SLAP],[X,t.SLAM],[X,t.SWIFT],[X,t.ENCORE],[X,t.HELPING_HAND],[X,t.HYPER_VOICE],[X,t.TICKLE],[X,t.ROCK_BLAST],[X,t.LAST_RESORT],[X,t.AFTER_YOU],[X,t.ECHOED_VOICE],[X,t.BABY_DOLL_EYES],[1,t.BULLET_SEED],[1,t.SING],[1,t.CHARM],[1,t.POUND]],[e.GOTHITA]:[[1,t.POUND],[1,t.CONFUSION],[4,t.PLAY_NICE],[8,t.TICKLE],[12,t.PSYBEAM],[16,t.CHARM],[20,t.PSYSHOCK],[24,t.HYPNOSIS],[28,t.FAKE_TEARS],[33,t.PSYCH_UP],[34,t.HEAL_BLOCK],[36,t.PSYCHIC],[40,t.FLATTER],[44,t.FUTURE_SIGHT],[48,t.MAGIC_ROOM]],[e.GOTHORITA]:[[1,t.POUND],[1,t.CONFUSION],[1,t.TICKLE],[1,t.PLAY_NICE],[12,t.PSYBEAM],[16,t.CHARM],[20,t.PSYSHOCK],[24,t.HYPNOSIS],[28,t.FAKE_TEARS],[34,t.HEAL_BLOCK],[35,t.PSYCH_UP],[40,t.PSYCHIC],[46,t.FLATTER],[52,t.FUTURE_SIGHT],[58,t.MAGIC_ROOM]],[e.GOTHITELLE]:[[1,t.POUND],[1,t.CONFUSION],[1,t.TICKLE],[1,t.PLAY_NICE],[12,t.PSYBEAM],[16,t.CHARM],[20,t.PSYSHOCK],[24,t.HYPNOSIS],[28,t.FAKE_TEARS],[34,t.HEAL_BLOCK],[35,t.PSYCH_UP],[40,t.PSYCHIC],[48,t.FLATTER],[56,t.FUTURE_SIGHT],[64,t.MAGIC_ROOM]],[e.SOLOSIS]:[[1,t.CONFUSION],[1,t.PROTECT],[1,t.PSYWAVE],[4,t.RECOVER],[8,t.ENDEAVOR],[12,t.PSYBEAM],[16,t.CHARM],[20,t.PSYSHOCK],[24,t.LIGHT_SCREEN],[24,t.REFLECT],[28,t.ALLY_SWITCH],[33,t.PAIN_SPLIT],[36,t.PSYCHIC],[40,t.SKILL_SWAP],[44,t.FUTURE_SIGHT],[46,t.HEAL_BLOCK],[48,t.WONDER_ROOM]],[e.DUOSION]:[[1,t.CONFUSION],[1,t.RECOVER],[1,t.PSYWAVE],[1,t.PROTECT],[1,t.ENDEAVOR],[1,t.SNATCH],[12,t.PSYBEAM],[16,t.CHARM],[20,t.PSYSHOCK],[24,t.LIGHT_SCREEN],[24,t.REFLECT],[28,t.ALLY_SWITCH],[35,t.PAIN_SPLIT],[40,t.PSYCHIC],[46,t.SKILL_SWAP],[50,t.HEAL_BLOCK],[52,t.FUTURE_SIGHT],[58,t.WONDER_ROOM]],[e.REUNICLUS]:[[Ee,t.HAMMER_ARM],[1,t.CONFUSION],[1,t.RECOVER],[1,t.PROTECT],[1,t.ENDEAVOR],[1,t.DIZZY_PUNCH],[1,t.PSYWAVE],[1,t.SNATCH],[12,t.PSYBEAM],[16,t.CHARM],[20,t.PSYSHOCK],[24,t.LIGHT_SCREEN],[24,t.REFLECT],[28,t.ALLY_SWITCH],[35,t.PAIN_SPLIT],[40,t.PSYCHIC],[48,t.SKILL_SWAP],[54,t.HEAL_BLOCK],[56,t.FUTURE_SIGHT],[64,t.WONDER_ROOM]],[e.DUCKLETT]:[[1,t.WATER_GUN],[6,t.DEFOG],[9,t.WING_ATTACK],[13,t.WATER_PULSE],[15,t.AERIAL_ACE],[19,t.BUBBLE_BEAM],[21,t.FEATHER_DANCE],[24,t.AQUA_RING],[27,t.AIR_SLASH],[30,t.ROOST],[34,t.RAIN_DANCE],[37,t.TAILWIND],[41,t.BRAVE_BIRD],[46,t.HURRICANE]],[e.SWANNA]:[[1,t.WING_ATTACK],[1,t.WATER_GUN],[1,t.DEFOG],[13,t.WATER_PULSE],[15,t.AERIAL_ACE],[19,t.BUBBLE_BEAM],[21,t.FEATHER_DANCE],[24,t.AQUA_RING],[27,t.AIR_SLASH],[30,t.ROOST],[34,t.RAIN_DANCE],[40,t.TAILWIND],[47,t.BRAVE_BIRD],[55,t.HURRICANE]],[e.VANILLITE]:[[1,t.HARDEN],[1,t.ASTONISH],[1,t.POWDER_SNOW],[4,t.TAUNT],[8,t.MIST],[12,t.ICY_WIND],[16,t.AVALANCHE],[20,t.HAIL],[24,t.ICICLE_SPEAR],[28,t.UPROAR],[32,t.ACID_ARMOR],[36,t.MIRROR_COAT],[40,t.ICE_BEAM],[44,t.BLIZZARD],[48,t.SHEER_COLD]],[e.VANILLISH]:[[1,t.MIST],[1,t.HARDEN],[1,t.TAUNT],[1,t.ASTONISH],[1,t.POWDER_SNOW],[12,t.ICY_WIND],[16,t.AVALANCHE],[20,t.HAIL],[24,t.ICICLE_SPEAR],[28,t.UPROAR],[32,t.ACID_ARMOR],[38,t.MIRROR_COAT],[44,t.ICE_BEAM],[50,t.BLIZZARD],[56,t.SHEER_COLD]],[e.VANILLUXE]:[[1,t.MIST],[1,t.HARDEN],[1,t.TAUNT],[1,t.ASTONISH],[1,t.POWDER_SNOW],[1,t.WEATHER_BALL],[1,t.ICICLE_CRASH],[1,t.FREEZE_DRY],[12,t.ICY_WIND],[16,t.AVALANCHE],[20,t.HAIL],[24,t.ICICLE_SPEAR],[28,t.UPROAR],[32,t.ACID_ARMOR],[38,t.MIRROR_COAT],[44,t.ICE_BEAM],[52,t.BLIZZARD],[60,t.SHEER_COLD]],[e.DEERLING]:[[1,t.TACKLE],[1,t.CAMOUFLAGE],[4,t.GROWL],[7,t.SAND_ATTACK],[10,t.DOUBLE_KICK],[13,t.LEECH_SEED],[16,t.BULLET_SEED],[20,t.TAKE_DOWN],[24,t.ZEN_HEADBUTT],[28,t.ENERGY_BALL],[32,t.CHARM],[37,t.DOUBLE_EDGE],[42,t.SOLAR_BEAM]],[e.SAWSBUCK]:[[Ee,t.HORN_LEECH],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.GROWL],[1,t.CAMOUFLAGE],[1,t.MEGAHORN],[10,t.DOUBLE_KICK],[13,t.LEECH_SEED],[16,t.BULLET_SEED],[20,t.TAKE_DOWN],[24,t.ZEN_HEADBUTT],[28,t.ENERGY_BALL],[36,t.CHARM],[44,t.DOUBLE_EDGE],[52,t.SOLAR_BEAM]],[e.EMOLGA]:[[1,t.TAIL_WHIP],[1,t.NUZZLE],[5,t.DOUBLE_TEAM],[10,t.QUICK_ATTACK],[15,t.THUNDER_SHOCK],[20,t.CHARGE],[25,t.ACROBATICS],[30,t.SPARK],[35,t.ENCORE],[40,t.VOLT_SWITCH],[45,t.LIGHT_SCREEN],[50,t.DISCHARGE],[55,t.AGILITY]],[e.KARRABLAST]:[[1,t.LEER],[1,t.PECK],[4,t.FURY_CUTTER],[8,t.ENDURE],[12,t.FALSE_SWIPE],[16,t.ACID_SPRAY],[20,t.HEADBUTT],[24,t.FLAIL],[28,t.SCARY_FACE],[32,t.X_SCISSOR],[36,t.SWORDS_DANCE],[40,t.TAKE_DOWN],[44,t.BUG_BUZZ],[48,t.DOUBLE_EDGE]],[e.ESCAVALIER]:[[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.LEER],[1,t.PECK],[1,t.FLAIL],[1,t.SCARY_FACE],[1,t.ENDURE],[1,t.FURY_CUTTER],[1,t.QUICK_GUARD],[1,t.FELL_STINGER],[1,t.TWINEEDLE],[12,t.FALSE_SWIPE],[16,t.ACID_SPRAY],[20,t.HEADBUTT],[24,t.REVERSAL],[28,t.IRON_DEFENSE],[32,t.X_SCISSOR],[36,t.SWORDS_DANCE],[40,t.IRON_HEAD],[44,t.BUG_BUZZ],[48,t.GIGA_IMPACT],[52,t.METAL_BURST]],[e.FOONGUS]:[[1,t.ABSORB],[1,t.ASTONISH],[4,t.GROWTH],[8,t.STUN_SPORE],[12,t.MEGA_DRAIN],[16,t.SYNTHESIS],[20,t.CLEAR_SMOG],[24,t.SWEET_SCENT],[28,t.GIGA_DRAIN],[32,t.INGRAIN],[36,t.TOXIC],[40,t.RAGE_POWDER],[44,t.SOLAR_BEAM],[48,t.SPORE]],[e.AMOONGUSS]:[[1,t.ABSORB],[1,t.GROWTH],[1,t.STUN_SPORE],[1,t.ASTONISH],[1,t.BIDE],[12,t.MEGA_DRAIN],[16,t.SYNTHESIS],[20,t.CLEAR_SMOG],[24,t.SWEET_SCENT],[28,t.GIGA_DRAIN],[32,t.INGRAIN],[36,t.TOXIC],[42,t.RAGE_POWDER],[48,t.SOLAR_BEAM],[54,t.SPORE]],[e.FRILLISH]:[[1,t.WATER_GUN],[1,t.ABSORB],[1,t.WATER_SPORT],[4,t.POISON_STING],[8,t.NIGHT_SHADE],[12,t.WATER_PULSE],[16,t.RAIN_DANCE],[20,t.HEX],[24,t.BRINE],[28,t.RECOVER],[32,t.SHADOW_BALL],[36,t.WHIRLPOOL],[41,t.HYDRO_PUMP],[44,t.DESTINY_BOND],[48,t.WATER_SPOUT]],[e.JELLICENT]:[[1,t.POISON_STING],[1,t.WATER_GUN],[1,t.WATER_SPORT],[1,t.WRING_OUT],[1,t.ABSORB],[1,t.NIGHT_SHADE],[1,t.ACID_ARMOR],[12,t.WATER_PULSE],[16,t.RAIN_DANCE],[20,t.HEX],[24,t.BRINE],[28,t.RECOVER],[32,t.SHADOW_BALL],[36,t.WHIRLPOOL],[43,t.HYDRO_PUMP],[48,t.DESTINY_BOND],[54,t.WATER_SPOUT]],[e.ALOMOMOLA]:[[1,t.POUND],[1,t.PLAY_NICE],[1,t.WATER_SPORT],[5,t.AQUA_RING],[9,t.AQUA_JET],[13,t.HELPING_HAND],[13,t.WIDE_GUARD],[21,t.PROTECT],[25,t.WATER_PULSE],[29,t.HEALING_WISH],[33,t.SOAK],[37,t.WISH],[41,t.BRINE],[45,t.SAFEGUARD],[49,t.WHIRLPOOL],[55,t.HYDRO_PUMP]],[e.JOLTIK]:[[1,t.ABSORB],[1,t.FURY_CUTTER],[1,t.SPIDER_WEB],[4,t.ELECTROWEB],[8,t.BUG_BITE],[12,t.STRING_SHOT],[16,t.THUNDER_WAVE],[20,t.ELECTRO_BALL],[24,t.AGILITY],[28,t.SUCKER_PUNCH],[32,t.SLASH],[37,t.DISCHARGE],[40,t.SCREECH],[44,t.GASTRO_ACID],[48,t.BUG_BUZZ]],[e.GALVANTULA]:[[Ee,t.STICKY_WEB],[1,t.ABSORB],[1,t.FURY_CUTTER],[1,t.BUG_BITE],[1,t.ELECTROWEB],[1,t.SPIDER_WEB],[12,t.STRING_SHOT],[16,t.THUNDER_WAVE],[20,t.ELECTRO_BALL],[24,t.AGILITY],[28,t.SUCKER_PUNCH],[32,t.SLASH],[39,t.DISCHARGE],[44,t.SCREECH],[50,t.GASTRO_ACID],[56,t.BUG_BUZZ]],[e.FERROSEED]:[[1,t.TACKLE],[1,t.HARDEN],[5,t.METAL_CLAW],[10,t.PIN_MISSILE],[15,t.INGRAIN],[20,t.FLASH_CANNON],[25,t.IRON_HEAD],[30,t.SELF_DESTRUCT],[35,t.IRON_DEFENSE],[41,t.CURSE],[45,t.GYRO_BALL],[50,t.EXPLOSION]],[e.FERROTHORN]:[[Ee,t.POWER_WHIP],[1,t.TACKLE],[1,t.PIN_MISSILE],[1,t.HARDEN],[1,t.METAL_CLAW],[1,t.ROCK_CLIMB],[15,t.INGRAIN],[20,t.FLASH_CANNON],[25,t.IRON_HEAD],[30,t.SELF_DESTRUCT],[35,t.IRON_DEFENSE],[43,t.CURSE],[49,t.GYRO_BALL],[56,t.EXPLOSION]],[e.KLINK]:[[1,t.VISE_GRIP],[1,t.THUNDER_SHOCK],[4,t.BIND],[8,t.CHARGE],[12,t.CHARGE_BEAM],[16,t.METAL_SOUND],[20,t.AUTOTOMIZE],[24,t.DISCHARGE],[28,t.SCREECH],[32,t.GEAR_GRIND],[36,t.LOCK_ON],[40,t.SHIFT_GEAR],[44,t.ZAP_CANNON],[48,t.HYPER_BEAM]],[e.KLANG]:[[1,t.VISE_GRIP],[1,t.BIND],[1,t.THUNDER_SHOCK],[1,t.CHARGE],[12,t.CHARGE_BEAM],[16,t.METAL_SOUND],[20,t.AUTOTOMIZE],[24,t.DISCHARGE],[28,t.SCREECH],[32,t.GEAR_GRIND],[36,t.LOCK_ON],[42,t.SHIFT_GEAR],[48,t.ZAP_CANNON],[54,t.HYPER_BEAM]],[e.KLINKLANG]:[[1,t.VISE_GRIP],[1,t.BIND],[1,t.THUNDER_SHOCK],[1,t.CHARGE],[1,t.MAGNETIC_FLUX],[1,t.GEAR_UP],[12,t.CHARGE_BEAM],[16,t.METAL_SOUND],[20,t.AUTOTOMIZE],[24,t.DISCHARGE],[28,t.SCREECH],[32,t.GEAR_GRIND],[36,t.LOCK_ON],[42,t.SHIFT_GEAR],[48,t.ZAP_CANNON],[56,t.HYPER_BEAM],[64,t.ELECTRIC_TERRAIN]],[e.TYNAMO]:[[1,t.TACKLE],[1,t.THUNDER_WAVE],[1,t.SPARK],[1,t.CHARGE_BEAM]],[e.EELEKTRIK]:[[Ee,t.CRUNCH],[1,t.TACKLE],[1,t.HEADBUTT],[1,t.THUNDER_WAVE],[1,t.SPARK],[1,t.CHARGE_BEAM],[1,t.ION_DELUGE],[9,t.BIND],[19,t.ACID],[29,t.DISCHARGE],[44,t.THUNDERBOLT],[49,t.ACID_SPRAY],[54,t.COIL],[59,t.WILD_CHARGE],[64,t.GASTRO_ACID],[69,t.ZAP_CANNON],[74,t.THRASH]],[e.EELEKTROSS]:[[X,t.THUNDERBOLT],[X,t.ACID_SPRAY],[1,t.TACKLE],[1,t.HEADBUTT],[1,t.THUNDER_WAVE],[1,t.SPARK],[1,t.CHARGE_BEAM],[1,t.ION_DELUGE],[1,t.BIND],[1,t.THRASH],[1,t.ACID],[1,t.ZAP_CANNON],[1,t.CRUNCH],[1,t.CRUSH_CLAW],[1,t.GASTRO_ACID],[1,t.DISCHARGE],[1,t.COIL],[5,t.WILD_CHARGE]],[e.ELGYEM]:[[1,t.GROWL],[1,t.CONFUSION],[6,t.IMPRISON],[8,t.HEAL_BLOCK],[12,t.TELEPORT],[18,t.PSYBEAM],[24,t.GUARD_SPLIT],[24,t.POWER_SPLIT],[30,t.HEADBUTT],[36,t.ZEN_HEADBUTT],[43,t.RECOVER],[48,t.CALM_MIND],[54,t.WONDER_ROOM],[60,t.PSYCHIC]],[e.BEHEEYEM]:[[1,t.GROWL],[1,t.CONFUSION],[1,t.SYNCHRONOISE],[1,t.TELEPORT],[1,t.IMPRISON],[1,t.PSYCHIC_TERRAIN],[8,t.HEAL_BLOCK],[18,t.PSYBEAM],[24,t.GUARD_SPLIT],[24,t.POWER_SPLIT],[30,t.HEADBUTT],[36,t.ZEN_HEADBUTT],[45,t.RECOVER],[52,t.CALM_MIND],[60,t.WONDER_ROOM],[68,t.PSYCHIC]],[e.LITWICK]:[[1,t.SMOG],[1,t.ASTONISH],[4,t.EMBER],[8,t.MINIMIZE],[12,t.CONFUSE_RAY],[16,t.HEX],[20,t.WILL_O_WISP],[24,t.FIRE_SPIN],[28,t.NIGHT_SHADE],[32,t.CURSE],[36,t.SHADOW_BALL],[40,t.INFERNO],[44,t.IMPRISON],[48,t.PAIN_SPLIT],[52,t.OVERHEAT],[56,t.MEMENTO]],[e.LAMPENT]:[[1,t.EMBER],[1,t.MINIMIZE],[1,t.SMOG],[1,t.ASTONISH],[12,t.CONFUSE_RAY],[16,t.HEX],[20,t.WILL_O_WISP],[24,t.FIRE_SPIN],[28,t.NIGHT_SHADE],[32,t.CURSE],[36,t.SHADOW_BALL],[40,t.INFERNO],[46,t.IMPRISON],[52,t.PAIN_SPLIT],[58,t.OVERHEAT],[64,t.MEMENTO]],[e.CHANDELURE]:[[1,t.EMBER],[1,t.FIRE_SPIN],[1,t.NIGHT_SHADE],[1,t.MINIMIZE],[1,t.CONFUSE_RAY],[1,t.SMOG],[1,t.CURSE],[1,t.PAIN_SPLIT],[1,t.SHADOW_BALL],[1,t.WILL_O_WISP],[1,t.MEMENTO],[1,t.IMPRISON],[1,t.ASTONISH],[1,t.OVERHEAT],[1,t.HEX],[1,t.INFERNO]],[e.AXEW]:[[1,t.SCRATCH],[1,t.LEER],[3,t.BITE],[6,t.FALSE_SWIPE],[9,t.ASSURANCE],[12,t.TAUNT],[15,t.SLASH],[18,t.DRAGON_CLAW],[21,t.SCARY_FACE],[24,t.CRUNCH],[27,t.DRAGON_DANCE],[30,t.DUAL_CHOP],[33,t.FOCUS_ENERGY],[36,t.DRAGON_PULSE],[39,t.SWORDS_DANCE],[42,t.OUTRAGE],[45,t.GUILLOTINE],[48,t.GIGA_IMPACT]],[e.FRAXURE]:[[1,t.SCRATCH],[1,t.LEER],[1,t.BITE],[1,t.FALSE_SWIPE],[1,t.DUAL_CHOP],[9,t.ASSURANCE],[12,t.TAUNT],[15,t.SLASH],[18,t.DRAGON_CLAW],[21,t.SCARY_FACE],[24,t.CRUNCH],[27,t.DRAGON_DANCE],[30,t.BREAKING_SWIPE],[33,t.FOCUS_ENERGY],[36,t.DRAGON_PULSE],[41,t.SWORDS_DANCE],[46,t.OUTRAGE],[51,t.GUILLOTINE],[56,t.GIGA_IMPACT]],[e.HAXORUS]:[[1,t.SCRATCH],[1,t.LEER],[1,t.BITE],[1,t.FALSE_SWIPE],[1,t.DUAL_CHOP],[9,t.ASSURANCE],[12,t.TAUNT],[15,t.SLASH],[18,t.DRAGON_CLAW],[21,t.SCARY_FACE],[24,t.CRUNCH],[27,t.DRAGON_DANCE],[30,t.BREAKING_SWIPE],[33,t.FOCUS_ENERGY],[36,t.DRAGON_PULSE],[41,t.SWORDS_DANCE],[46,t.OUTRAGE],[53,t.GUILLOTINE],[60,t.GIGA_IMPACT]],[e.CUBCHOO]:[[1,t.GROWL],[1,t.POWDER_SNOW],[3,t.ENDURE],[6,t.FURY_SWIPES],[9,t.ICY_WIND],[12,t.PLAY_NICE],[15,t.BRINE],[18,t.FROST_BREATH],[21,t.SLASH],[24,t.FLAIL],[27,t.CHARM],[30,t.SNOWSCAPE],[33,t.THRASH],[36,t.REST],[39,t.BLIZZARD],[42,t.SHEER_COLD]],[e.BEARTIC]:[[Ee,t.ICICLE_CRASH],[1,t.GROWL],[1,t.FURY_SWIPES],[1,t.POWDER_SNOW],[1,t.ENDURE],[1,t.CHARM],[1,t.AQUA_JET],[1,t.BIDE],[9,t.ICY_WIND],[12,t.PLAY_NICE],[15,t.BRINE],[18,t.FROST_BREATH],[21,t.SLASH],[24,t.FLAIL],[27,t.SWAGGER],[30,t.SNOWSCAPE],[33,t.THRASH],[36,t.REST],[41,t.BLIZZARD],[46,t.SHEER_COLD],[51,t.SUPERPOWER]],[e.CRYOGONAL]:[[1,t.BIND],[1,t.ICE_SHARD],[4,t.CONFUSE_RAY],[8,t.RAPID_SPIN],[12,t.ICY_WIND],[16,t.MIST],[16,t.HAZE],[20,t.ANCIENT_POWER],[24,t.AURORA_BEAM],[28,t.SLASH],[32,t.NIGHT_SLASH],[36,t.FREEZE_DRY],[40,t.LIGHT_SCREEN],[40,t.REFLECT],[44,t.RECOVER],[48,t.ICE_BEAM],[52,t.ACID_ARMOR],[56,t.SOLAR_BEAM],[60,t.SHEER_COLD]],[e.SHELMET]:[[1,t.ABSORB],[1,t.PROTECT],[4,t.ACID],[8,t.CURSE],[12,t.MEGA_DRAIN],[16,t.STRUGGLE_BUG],[20,t.YAWN],[24,t.ACID_ARMOR],[28,t.GIGA_DRAIN],[32,t.GUARD_SWAP],[36,t.BODY_SLAM],[40,t.RECOVER],[44,t.BUG_BUZZ],[48,t.FINAL_GAMBIT]],[e.ACCELGOR]:[[1,t.BODY_SLAM],[1,t.ACID],[1,t.ABSORB],[1,t.PROTECT],[1,t.QUICK_ATTACK],[1,t.DOUBLE_TEAM],[1,t.ACID_ARMOR],[1,t.CURSE],[1,t.YAWN],[1,t.GUARD_SWAP],[1,t.ACID_SPRAY],[1,t.WATER_SHURIKEN],[12,t.MEGA_DRAIN],[16,t.STRUGGLE_BUG],[20,t.SWIFT],[24,t.AGILITY],[28,t.GIGA_DRAIN],[32,t.POWER_SWAP],[36,t.U_TURN],[40,t.RECOVER],[44,t.BUG_BUZZ],[48,t.FINAL_GAMBIT],[52,t.TOXIC]],[e.STUNFISK]:[[1,t.TACKLE],[1,t.WATER_GUN],[1,t.THUNDER_SHOCK],[1,t.MUD_SLAP],[1,t.MUD_SPORT],[5,t.ENDURE],[10,t.MUD_SHOT],[15,t.REVENGE],[20,t.CHARGE],[25,t.SUCKER_PUNCH],[30,t.ELECTRIC_TERRAIN],[35,t.BOUNCE],[40,t.MUDDY_WATER],[45,t.DISCHARGE],[50,t.FLAIL],[55,t.FISSURE]],[e.MIENFOO]:[[1,t.POUND],[1,t.DETECT],[5,t.FAKE_OUT],[10,t.REVERSAL],[15,t.FURY_SWIPES],[20,t.QUICK_GUARD],[25,t.FORCE_PALM],[30,t.U_TURN],[35,t.DRAIN_PUNCH],[40,t.HONE_CLAWS],[45,t.AURA_SPHERE],[51,t.BOUNCE],[55,t.CALM_MIND],[60,t.HIGH_JUMP_KICK]],[e.MIENSHAO]:[[1,t.POUND],[1,t.REVERSAL],[1,t.DETECT],[1,t.FAKE_OUT],[1,t.QUICK_GUARD],[15,t.FURY_SWIPES],[20,t.WIDE_GUARD],[25,t.FORCE_PALM],[30,t.U_TURN],[35,t.DRAIN_PUNCH],[40,t.HONE_CLAWS],[45,t.AURA_SPHERE],[53,t.BOUNCE],[59,t.CALM_MIND],[66,t.HIGH_JUMP_KICK]],[e.DRUDDIGON]:[[1,t.SCRATCH],[1,t.LEER],[5,t.BITE],[10,t.DRAGON_TAIL],[15,t.METAL_CLAW],[20,t.SCARY_FACE],[25,t.SLASH],[30,t.DRAGON_CLAW],[35,t.HONE_CLAWS],[40,t.CRUNCH],[45,t.IRON_HEAD],[50,t.OUTRAGE],[55,t.SUPERPOWER]],[e.GOLETT]:[[1,t.MUD_SLAP],[1,t.ASTONISH],[4,t.DEFENSE_CURL],[8,t.POUND],[12,t.SHADOW_PUNCH],[16,t.CURSE],[20,t.NIGHT_SHADE],[24,t.STOMPING_TANTRUM],[28,t.IRON_DEFENSE],[32,t.MEGA_PUNCH],[36,t.SHADOW_BALL],[40,t.HEAVY_SLAM],[44,t.PHANTOM_FORCE],[48,t.HAMMER_ARM],[52,t.EARTHQUAKE],[56,t.DYNAMIC_PUNCH]],[e.GOLURK]:[[X,t.MUD_SLAP],[X,t.FOCUS_PUNCH],[1,t.POUND],[1,t.DEFENSE_CURL],[1,t.ASTONISH],[1,t.HIGH_HORSEPOWER],[12,t.SHADOW_PUNCH],[16,t.CURSE],[20,t.NIGHT_SHADE],[24,t.STOMPING_TANTRUM],[28,t.IRON_DEFENSE],[32,t.MEGA_PUNCH],[36,t.SHADOW_BALL],[40,t.HEAVY_SLAM],[46,t.PHANTOM_FORCE],[52,t.HAMMER_ARM],[58,t.EARTHQUAKE],[64,t.DYNAMIC_PUNCH]],[e.PAWNIARD]:[[1,t.SCRATCH],[1,t.LEER],[5,t.FURY_CUTTER],[10,t.METAL_CLAW],[15,t.TORMENT],[20,t.SCARY_FACE],[25,t.ASSURANCE],[30,t.METAL_SOUND],[35,t.SLASH],[40,t.NIGHT_SLASH],[45,t.IRON_DEFENSE],[50,t.RETALIATE],[55,t.IRON_HEAD],[60,t.SWORDS_DANCE],[65,t.GUILLOTINE]],[e.BISHARP]:[[1,t.SCRATCH],[1,t.LEER],[1,t.FURY_CUTTER],[1,t.METAL_CLAW],[1,t.METAL_BURST],[15,t.TORMENT],[20,t.SCARY_FACE],[25,t.ASSURANCE],[30,t.METAL_SOUND],[35,t.SLASH],[40,t.NIGHT_SLASH],[45,t.IRON_DEFENSE],[50,t.RETALIATE],[57,t.IRON_HEAD],[64,t.SWORDS_DANCE],[71,t.GUILLOTINE]],[e.BOUFFALANT]:[[1,t.TACKLE],[1,t.LEER],[1,t.PURSUIT],[5,t.FOCUS_ENERGY],[10,t.FURY_ATTACK],[15,t.REVENGE],[20,t.SCARY_FACE],[25,t.HORN_ATTACK],[30,t.REVERSAL],[35,t.THROAT_CHOP],[40,t.HEAD_CHARGE],[45,t.SWORDS_DANCE],[50,t.MEGAHORN],[55,t.GIGA_IMPACT]],[e.RUFFLET]:[[1,t.LEER],[1,t.PECK],[6,t.HONE_CLAWS],[12,t.WING_ATTACK],[18,t.TAILWIND],[24,t.SCARY_FACE],[30,t.AERIAL_ACE],[36,t.SLASH],[42,t.WHIRLWIND],[48,t.CRUSH_CLAW],[55,t.AIR_SLASH],[60,t.DEFOG],[66,t.THRASH],[72,t.BRAVE_BIRD]],[e.BRAVIARY]:[[Ee,t.SUPERPOWER],[X,t.BRAVE_BIRD],[1,t.WING_ATTACK],[1,t.LEER],[1,t.PECK],[1,t.SKY_ATTACK],[1,t.HONE_CLAWS],[18,t.TAILWIND],[24,t.SCARY_FACE],[30,t.AERIAL_ACE],[36,t.SLASH],[42,t.WHIRLWIND],[48,t.CRUSH_CLAW],[57,t.AIR_SLASH],[64,t.DEFOG],[72,t.THRASH]],[e.VULLABY]:[[1,t.GUST],[1,t.LEER],[6,t.FLATTER],[12,t.PLUCK],[18,t.TAILWIND],[24,t.KNOCK_OFF],[30,t.IRON_DEFENSE],[36,t.WHIRLWIND],[42,t.AIR_SLASH],[48,t.DARK_PULSE],[54,t.NASTY_PLOT],[60,t.DEFOG],[66,t.ATTRACT],[72,t.BRAVE_BIRD]],[e.MANDIBUZZ]:[[Ee,t.BONE_RUSH],[1,t.GUST],[1,t.LEER],[1,t.TOXIC],[1,t.SKY_ATTACK],[1,t.FLATTER],[1,t.PLUCK],[18,t.TAILWIND],[24,t.KNOCK_OFF],[30,t.IRON_DEFENSE],[36,t.WHIRLWIND],[42,t.AIR_SLASH],[48,t.DARK_PULSE],[57,t.NASTY_PLOT],[64,t.DEFOG],[72,t.ATTRACT],[80,t.BRAVE_BIRD]],[e.HEATMOR]:[[1,t.TACKLE],[1,t.LICK],[5,t.FURY_SWIPES],[10,t.INCINERATE],[15,t.BUG_BITE],[20,t.STOCKPILE],[20,t.SPIT_UP],[20,t.SWALLOW],[25,t.SLASH],[30,t.BIND],[35,t.FIRE_LASH],[40,t.HONE_CLAWS],[45,t.AMNESIA],[50,t.FIRE_SPIN],[55,t.INFERNO],[60,t.FLARE_BLITZ]],[e.DURANT]:[[1,t.SAND_ATTACK],[1,t.FURY_CUTTER],[4,t.VISE_GRIP],[8,t.METAL_CLAW],[12,t.BEAT_UP],[16,t.BUG_BITE],[20,t.BITE],[24,t.AGILITY],[28,t.DIG],[32,t.X_SCISSOR],[36,t.CRUNCH],[40,t.METAL_SOUND],[44,t.IRON_HEAD],[48,t.ENTRAINMENT],[52,t.IRON_DEFENSE],[56,t.GUILLOTINE]],[e.DEINO]:[[1,t.TACKLE],[1,t.FOCUS_ENERGY],[4,t.DRAGON_BREATH],[8,t.BITE],[12,t.ROAR],[16,t.ASSURANCE],[20,t.HEADBUTT],[24,t.WORK_UP],[28,t.SLAM],[32,t.CRUNCH],[36,t.SCARY_FACE],[40,t.DRAGON_PULSE],[44,t.BODY_SLAM],[48,t.HYPER_VOICE],[52,t.DRAGON_RUSH],[56,t.NASTY_PLOT],[60,t.OUTRAGE]],[e.ZWEILOUS]:[[1,t.TACKLE],[1,t.BITE],[1,t.FOCUS_ENERGY],[1,t.DRAGON_BREATH],[1,t.DOUBLE_HIT],[12,t.ROAR],[16,t.ASSURANCE],[20,t.HEADBUTT],[24,t.WORK_UP],[28,t.SLAM],[32,t.CRUNCH],[36,t.SCARY_FACE],[40,t.DRAGON_PULSE],[44,t.BODY_SLAM],[48,t.HYPER_VOICE],[54,t.DRAGON_RUSH],[60,t.NASTY_PLOT],[66,t.OUTRAGE]],[e.HYDREIGON]:[[1,t.TACKLE],[1,t.BITE],[1,t.FOCUS_ENERGY],[1,t.TRI_ATTACK],[1,t.DRAGON_BREATH],[1,t.DOUBLE_HIT],[12,t.ROAR],[16,t.ASSURANCE],[20,t.HEADBUTT],[24,t.WORK_UP],[28,t.SLAM],[32,t.CRUNCH],[36,t.SCARY_FACE],[40,t.DRAGON_PULSE],[44,t.BODY_SLAM],[48,t.HYPER_VOICE],[54,t.DRAGON_RUSH],[60,t.NASTY_PLOT],[68,t.OUTRAGE],[76,t.HYPER_BEAM]],[e.LARVESTA]:[[1,t.EMBER],[1,t.STRING_SHOT],[6,t.FLAME_CHARGE],[12,t.STRUGGLE_BUG],[18,t.FLAME_WHEEL],[24,t.BUG_BITE],[30,t.SCREECH],[36,t.LEECH_LIFE],[42,t.BUG_BUZZ],[48,t.TAKE_DOWN],[54,t.AMNESIA],[60,t.DOUBLE_EDGE],[66,t.FLARE_BLITZ]],[e.VOLCARONA]:[[Ee,t.QUIVER_DANCE],[1,t.GUST],[1,t.WHIRLWIND],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.EMBER],[1,t.STRING_SHOT],[1,t.FIRE_SPIN],[1,t.FLARE_BLITZ],[1,t.FLAME_CHARGE],[1,t.STRUGGLE_BUG],[1,t.FIERY_DANCE],[18,t.FLAME_WHEEL],[24,t.BUG_BITE],[30,t.SCREECH],[36,t.LEECH_LIFE],[42,t.BUG_BUZZ],[48,t.HEAT_WAVE],[54,t.AMNESIA],[62,t.HURRICANE],[70,t.FIRE_BLAST],[78,t.RAGE_POWDER]],[e.COBALION]:[[1,t.LEER],[1,t.QUICK_ATTACK],[1,t.HELPING_HAND],[1,t.WORK_UP],[7,t.METAL_CLAW],[14,t.QUICK_GUARD],[21,t.DOUBLE_KICK],[28,t.RETALIATE],[35,t.METAL_BURST],[42,t.TAKE_DOWN],[49,t.SACRED_SWORD],[56,t.SWORDS_DANCE],[63,t.IRON_HEAD],[70,t.CLOSE_COMBAT]],[e.TERRAKION]:[[1,t.LEER],[1,t.QUICK_ATTACK],[1,t.HELPING_HAND],[1,t.WORK_UP],[7,t.SMACK_DOWN],[14,t.QUICK_GUARD],[21,t.DOUBLE_KICK],[28,t.RETALIATE],[35,t.ROCK_SLIDE],[42,t.TAKE_DOWN],[49,t.SACRED_SWORD],[56,t.SWORDS_DANCE],[63,t.STONE_EDGE],[70,t.CLOSE_COMBAT]],[e.VIRIZION]:[[X,t.TAKE_DOWN],[1,t.LEER],[1,t.QUICK_ATTACK],[1,t.HELPING_HAND],[1,t.WORK_UP],[7,t.MAGICAL_LEAF],[14,t.QUICK_GUARD],[21,t.DOUBLE_KICK],[28,t.RETALIATE],[35,t.GIGA_DRAIN],[42,t.TAKE_DOWN],[49,t.SACRED_SWORD],[56,t.SWORDS_DANCE],[63,t.LEAF_BLADE],[70,t.CLOSE_COMBAT]],[e.TORNADUS]:[[1,t.GUST],[1,t.ASTONISH],[5,t.LEER],[10,t.SWAGGER],[15,t.BITE],[20,t.AIR_CUTTER],[25,t.AGILITY],[30,t.TAILWIND],[35,t.AIR_SLASH],[40,t.CRUNCH],[45,t.EXTRASENSORY],[50,t.UPROAR],[55,t.HAMMER_ARM],[60,t.RAIN_DANCE],[65,t.HURRICANE],[70,t.THRASH],[77,t.BLEAKWIND_STORM]],[e.THUNDURUS]:[[1,t.THUNDER_SHOCK],[1,t.ASTONISH],[5,t.LEER],[10,t.SWAGGER],[15,t.BITE],[20,t.SHOCK_WAVE],[25,t.AGILITY],[30,t.CHARGE],[31,t.HEAL_BLOCK],[35,t.VOLT_SWITCH],[40,t.CRUNCH],[45,t.DISCHARGE],[50,t.UPROAR],[55,t.HAMMER_ARM],[60,t.RAIN_DANCE],[65,t.THUNDER],[70,t.THRASH],[75,t.WILDBOLT_STORM]],[e.RESHIRAM]:[[1,t.DRAGON_BREATH],[1,t.ANCIENT_POWER],[1,t.FIRE_FANG],[1,t.NOBLE_ROAR],[8,t.SLASH],[16,t.CRUNCH],[24,t.EXTRASENSORY],[32,t.DRAGON_PULSE],[40,t.FLAMETHROWER],[48,t.FUSION_FLARE],[56,t.HYPER_VOICE],[64,t.FIRE_BLAST],[72,t.IMPRISON],[80,t.OUTRAGE],[88,t.BLUE_FLARE]],[e.ZEKROM]:[[1,t.DRAGON_BREATH],[1,t.ANCIENT_POWER],[1,t.THUNDER_FANG],[1,t.NOBLE_ROAR],[8,t.SLASH],[16,t.CRUNCH],[24,t.ZEN_HEADBUTT],[32,t.DRAGON_CLAW],[40,t.THUNDERBOLT],[48,t.FUSION_BOLT],[56,t.HYPER_VOICE],[64,t.THUNDER],[72,t.IMPRISON],[80,t.OUTRAGE],[88,t.BOLT_STRIKE]],[e.LANDORUS]:[[1,t.SAND_TOMB],[1,t.SMACK_DOWN],[5,t.LEER],[10,t.BLOCK],[15,t.BULLDOZE],[20,t.ROCK_TOMB],[30,t.IMPRISON],[35,t.ROCK_SLIDE],[40,t.EARTH_POWER],[45,t.EXTRASENSORY],[50,t.STONE_EDGE],[55,t.HAMMER_ARM],[60,t.SANDSTORM],[65,t.EARTHQUAKE],[70,t.OUTRAGE],[75,t.FISSURE],[80,t.SANDSEAR_STORM]],[e.KYUREM]:[[1,t.DRAGON_BREATH],[1,t.ANCIENT_POWER],[1,t.NOBLE_ROAR],[1,t.FREEZE_DRY],[8,t.SLASH],[16,t.ENDEAVOR],[24,t.DRAGON_PULSE],[32,t.ICE_BEAM],[40,t.HYPER_VOICE],[48,t.SCARY_FACE],[56,t.BLIZZARD],[64,t.IMPRISON],[72,t.OUTRAGE],[80,t.GLACIATE],[88,t.SHEER_COLD]],[e.KELDEO]:[[1,t.LEER],[1,t.HELPING_HAND],[1,t.AQUA_JET],[1,t.WORK_UP],[1,t.SECRET_SWORD],[7,t.BUBBLE_BEAM],[14,t.QUICK_GUARD],[21,t.DOUBLE_KICK],[28,t.RETALIATE],[35,t.AQUA_TAIL],[42,t.TAKE_DOWN],[49,t.SACRED_SWORD],[56,t.SWORDS_DANCE],[63,t.HYDRO_PUMP],[70,t.CLOSE_COMBAT]],[e.MELOETTA]:[[1,t.SING],[1,t.CONFUSION],[1,t.QUICK_ATTACK],[1,t.ROUND],[21,t.TEETER_DANCE],[26,t.ACROBATICS],[31,t.PSYBEAM],[36,t.ECHOED_VOICE],[43,t.U_TURN],[50,t.RELIC_SONG],[57,t.PSYCHIC],[64,t.HYPER_VOICE],[71,t.ROLE_PLAY],[78,t.CLOSE_COMBAT],[85,t.PERISH_SONG]],[e.GENESECT]:[[1,t.QUICK_ATTACK],[1,t.FURY_CUTTER],[7,t.SCREECH],[14,t.METAL_CLAW],[21,t.FELL_STINGER],[28,t.FLAME_CHARGE],[35,t.METAL_SOUND],[42,t.X_SCISSOR],[49,t.MAGNET_RISE],[56,t.BUG_BUZZ],[63,t.SIMPLE_BEAM],[70,t.ZAP_CANNON],[77,t.LOCK_ON],[84,t.TECHNO_BLAST],[91,t.SELF_DESTRUCT]],[e.CHESPIN]:[[1,t.TACKLE],[1,t.GROWL],[1,t.VINE_WHIP],[8,t.ROLLOUT],[11,t.BITE],[15,t.LEECH_SEED],[18,t.PIN_MISSILE],[27,t.TAKE_DOWN],[32,t.SEED_BOMB],[35,t.MUD_SHOT],[42,t.BODY_SLAM],[45,t.PAIN_SPLIT],[48,t.WOOD_HAMMER]],[e.QUILLADIN]:[[Ee,t.NEEDLE_ARM],[1,t.TACKLE],[1,t.GROWL],[1,t.VINE_WHIP],[8,t.ROLLOUT],[11,t.BITE],[15,t.LEECH_SEED],[20,t.SEED_BOMB],[24,t.PIN_MISSILE],[29,t.TAKE_DOWN],[34,t.MUD_SHOT],[38,t.BULK_UP],[43,t.BODY_SLAM],[47,t.PAIN_SPLIT],[53,t.WOOD_HAMMER]],[e.CHESNAUGHT]:[[Ee,t.SPIKY_SHIELD],[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.GROWL],[1,t.ROLLOUT],[1,t.HAMMER_ARM],[1,t.FEINT],[1,t.NEEDLE_ARM],[11,t.BITE],[15,t.LEECH_SEED],[19,t.PIN_MISSILE],[29,t.TAKE_DOWN],[35,t.SEED_BOMB],[41,t.MUD_SHOT],[48,t.BULK_UP],[54,t.BODY_SLAM],[60,t.PAIN_SPLIT],[66,t.WOOD_HAMMER],[78,t.GIGA_IMPACT]],[e.FENNEKIN]:[[1,t.SCRATCH],[1,t.TAIL_WHIP],[5,t.EMBER],[11,t.HOWL],[14,t.FLAME_CHARGE],[17,t.PSYBEAM],[20,t.FIRE_SPIN],[25,t.LIGHT_SCREEN],[31,t.PSYSHOCK],[35,t.FLAMETHROWER],[38,t.WILL_O_WISP],[41,t.PSYCHIC],[43,t.SUNNY_DAY],[48,t.FIRE_BLAST]],[e.BRAIXEN]:[[1,t.SCRATCH],[1,t.TAIL_WHIP],[1,t.EMBER],[11,t.HOWL],[14,t.FLAME_CHARGE],[18,t.PSYBEAM],[22,t.FIRE_SPIN],[28,t.LIGHT_SCREEN],[36,t.PSYSHOCK],[41,t.FLAMETHROWER],[45,t.WILL_O_WISP],[49,t.PSYCHIC],[52,t.SUNNY_DAY],[56,t.MAGIC_ROOM],[59,t.FIRE_BLAST]],[e.DELPHOX]:[[Ee,t.MYSTICAL_FIRE],[1,t.SCRATCH],[1,t.TAIL_WHIP],[1,t.EMBER],[1,t.SHADOW_BALL],[1,t.FUTURE_SIGHT],[1,t.ROLE_PLAY],[1,t.HOWL],[1,t.SWITCHEROO],[14,t.FLAME_CHARGE],[18,t.PSYBEAM],[22,t.FIRE_SPIN],[28,t.LIGHT_SCREEN],[38,t.PSYSHOCK],[45,t.FLAMETHROWER],[51,t.WILL_O_WISP],[57,t.PSYCHIC],[62,t.SUNNY_DAY],[68,t.MAGIC_ROOM],[74,t.FIRE_BLAST]],[e.FROAKIE]:[[1,t.POUND],[1,t.GROWL],[5,t.WATER_GUN],[8,t.QUICK_ATTACK],[10,t.LICK],[14,t.WATER_PULSE],[18,t.SMOKESCREEN],[21,t.ROUND],[25,t.FLING],[29,t.SMACK_DOWN],[35,t.SUBSTITUTE],[39,t.BOUNCE],[43,t.DOUBLE_TEAM],[48,t.HYDRO_PUMP]],[e.FROGADIER]:[[1,t.POUND],[1,t.GROWL],[1,t.WATER_GUN],[8,t.QUICK_ATTACK],[10,t.LICK],[14,t.WATER_PULSE],[19,t.SMOKESCREEN],[23,t.ROUND],[28,t.FLING],[33,t.SMACK_DOWN],[40,t.SUBSTITUTE],[45,t.BOUNCE],[50,t.DOUBLE_TEAM],[56,t.HYDRO_PUMP]],[e.GRENINJA]:[[Ee,t.WATER_SHURIKEN],[1,t.POUND],[1,t.GROWL],[1,t.WATER_GUN],[1,t.QUICK_ATTACK],[1,t.ROUND],[1,t.FLING],[1,t.SMACK_DOWN],[1,t.BOUNCE],[1,t.HAZE],[1,t.MAT_BLOCK],[1,t.ROLE_PLAY],[1,t.NIGHT_SLASH],[10,t.LICK],[14,t.WATER_PULSE],[19,t.SMOKESCREEN],[23,t.SHADOW_SNEAK],[28,t.SPIKES],[33,t.AERIAL_ACE],[42,t.SUBSTITUTE],[49,t.EXTRASENSORY],[56,t.DOUBLE_TEAM],[68,t.HYDRO_PUMP]],[e.BUNNELBY]:[[1,t.LEER],[1,t.MUD_SLAP],[3,t.TACKLE],[6,t.LASER_FOCUS],[9,t.QUICK_ATTACK],[12,t.MUD_SHOT],[15,t.FLAIL],[18,t.DOUBLE_KICK],[21,t.BULLDOZE],[24,t.DIG],[27,t.BOUNCE],[30,t.TAKE_DOWN],[33,t.SWORDS_DANCE],[36,t.EARTHQUAKE],[39,t.SUPER_FANG]],[e.DIGGERSBY]:[[1,t.TACKLE],[1,t.LEER],[1,t.MUD_SLAP],[1,t.LASER_FOCUS],[1,t.ROTOTILLER],[9,t.QUICK_ATTACK],[12,t.MUD_SHOT],[15,t.FLAIL],[18,t.DOUBLE_KICK],[23,t.BULLDOZE],[28,t.DIG],[33,t.BOUNCE],[38,t.TAKE_DOWN],[43,t.SWORDS_DANCE],[48,t.EARTHQUAKE],[53,t.SUPER_FANG],[58,t.HAMMER_ARM]],[e.FLETCHLING]:[[1,t.GROWL],[1,t.PECK],[5,t.QUICK_ATTACK],[10,t.EMBER],[15,t.FLAIL],[20,t.ACROBATICS],[25,t.AGILITY],[30,t.AERIAL_ACE],[35,t.TAILWIND],[40,t.STEEL_WING],[45,t.ROOST],[50,t.FLY]],[e.FLETCHINDER]:[[Ee,t.FLAME_CHARGE],[1,t.GROWL],[1,t.EMBER],[1,t.PECK],[1,t.QUICK_ATTACK],[1,t.FEINT],[15,t.FLAIL],[22,t.ACROBATICS],[29,t.AGILITY],[36,t.AERIAL_ACE],[43,t.TAILWIND],[50,t.STEEL_WING],[57,t.ROOST],[64,t.FLY]],[e.TALONFLAME]:[[1,t.GROWL],[1,t.EMBER],[1,t.PECK],[1,t.QUICK_ATTACK],[1,t.FEINT],[1,t.FLARE_BLITZ],[1,t.FLAME_CHARGE],[15,t.FLAIL],[22,t.ACROBATICS],[29,t.AGILITY],[38,t.AERIAL_ACE],[47,t.TAILWIND],[56,t.STEEL_WING],[65,t.ROOST],[74,t.FLY],[83,t.BRAVE_BIRD]],[e.SCATTERBUG]:[[1,t.TACKLE],[1,t.STRING_SHOT],[6,t.STUN_SPORE],[15,t.BUG_BITE]],[e.SPEWPA]:[[Ee,t.PROTECT],[X,t.TACKLE],[X,t.STRING_SHOT],[X,t.STUN_SPORE],[X,t.BUG_BITE],[1,t.HARDEN]],[e.VIVILLON]:[[Ee,t.GUST],[1,t.PROTECT],[1,t.TACKLE],[1,t.STRING_SHOT],[1,t.HARDEN],[1,t.BUG_BITE],[1,t.POISON_POWDER],[1,t.STUN_SPORE],[1,t.SLEEP_POWDER],[1,t.STRUGGLE_BUG],[1,t.POWDER],[12,t.LIGHT_SCREEN],[17,t.PSYBEAM],[21,t.SUPERSONIC],[25,t.DRAINING_KISS],[31,t.SAFEGUARD],[35,t.BUG_BUZZ],[45,t.QUIVER_DANCE],[50,t.HURRICANE]],[e.LITLEO]:[[1,t.TACKLE],[1,t.LEER],[5,t.EMBER],[8,t.WORK_UP],[11,t.HEADBUTT],[15,t.NOBLE_ROAR],[20,t.TAKE_DOWN],[23,t.FIRE_FANG],[28,t.ENDEAVOR],[33,t.ECHOED_VOICE],[36,t.FLAMETHROWER],[39,t.CRUNCH],[43,t.HYPER_VOICE],[46,t.INCINERATE],[50,t.OVERHEAT]],[e.PYROAR]:[[1,t.TACKLE],[1,t.LEER],[1,t.EMBER],[1,t.HYPER_BEAM],[1,t.WORK_UP],[11,t.HEADBUTT],[15,t.NOBLE_ROAR],[20,t.TAKE_DOWN],[23,t.FIRE_FANG],[28,t.ENDEAVOR],[33,t.ECHOED_VOICE],[38,t.FLAMETHROWER],[42,t.CRUNCH],[48,t.HYPER_VOICE],[51,t.INCINERATE],[57,t.OVERHEAT]],[e.FLABEBE]:[[1,t.VINE_WHIP],[1,t.TACKLE],[6,t.FAIRY_WIND],[10,t.SAFEGUARD],[15,t.RAZOR_LEAF],[20,t.WISH],[22,t.MAGICAL_LEAF],[24,t.GRASSY_TERRAIN],[28,t.PETAL_BLIZZARD],[33,t.SYNTHESIS],[37,t.MISTY_TERRAIN],[41,t.MOONBLAST],[45,t.PETAL_DANCE],[48,t.SOLAR_BEAM]],[e.FLOETTE]:[[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.FAIRY_WIND],[10,t.SAFEGUARD],[15,t.RAZOR_LEAF],[20,t.WISH],[25,t.MAGICAL_LEAF],[27,t.GRASSY_TERRAIN],[33,t.PETAL_BLIZZARD],[38,t.SYNTHESIS],[43,t.MISTY_TERRAIN],[46,t.MOONBLAST],[51,t.PETAL_DANCE],[58,t.SOLAR_BEAM]],[e.FLORGES]:[[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.FAIRY_WIND],[1,t.RAZOR_LEAF],[1,t.SOLAR_BEAM],[1,t.PETAL_DANCE],[1,t.SAFEGUARD],[1,t.SYNTHESIS],[1,t.WISH],[1,t.LUCKY_CHANT],[1,t.MAGICAL_LEAF],[1,t.GRASS_KNOT],[1,t.PETAL_BLIZZARD],[1,t.DISARMING_VOICE],[1,t.GRASSY_TERRAIN],[1,t.MISTY_TERRAIN],[5,t.MOONBLAST]],[e.SKIDDO]:[[1,t.TACKLE],[1,t.GROWTH],[7,t.VINE_WHIP],[9,t.TAIL_WHIP],[12,t.LEECH_SEED],[13,t.RAZOR_LEAF],[16,t.WORRY_SEED],[20,t.SYNTHESIS],[22,t.TAKE_DOWN],[26,t.BULLDOZE],[30,t.SEED_BOMB],[34,t.BULK_UP],[38,t.DOUBLE_EDGE],[42,t.HORN_LEECH],[45,t.LEAF_BLADE]],[e.GOGOAT]:[[Ee,t.AERIAL_ACE],[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.GROWTH],[1,t.EARTHQUAKE],[12,t.LEECH_SEED],[13,t.RAZOR_LEAF],[16,t.WORRY_SEED],[20,t.SYNTHESIS],[22,t.TAKE_DOWN],[26,t.BULLDOZE],[30,t.SEED_BOMB],[34,t.BULK_UP],[40,t.DOUBLE_EDGE],[47,t.HORN_LEECH],[55,t.LEAF_BLADE],[58,t.MILK_DRINK]],[e.PANCHAM]:[[1,t.TACKLE],[1,t.LEER],[4,t.ARM_THRUST],[8,t.TAUNT],[12,t.CIRCLE_THROW],[16,t.LOW_SWEEP],[20,t.WORK_UP],[24,t.SLASH],[28,t.VITAL_THROW],[33,t.CRUNCH],[36,t.BODY_SLAM],[40,t.PARTING_SHOT],[44,t.ENTRAINMENT]],[e.PANGORO]:[[Ee,t.NIGHT_SLASH],[1,t.TACKLE],[1,t.LEER],[1,t.TAUNT],[1,t.ARM_THRUST],[1,t.BULLET_PUNCH],[12,t.CIRCLE_THROW],[16,t.LOW_SWEEP],[20,t.WORK_UP],[24,t.SLASH],[28,t.VITAL_THROW],[35,t.CRUNCH],[40,t.BODY_SLAM],[46,t.PARTING_SHOT],[52,t.ENTRAINMENT],[58,t.HAMMER_ARM]],[e.FURFROU]:[[1,t.TACKLE],[1,t.GROWL],[5,t.SAND_ATTACK],[9,t.BABY_DOLL_EYES],[12,t.HEADBUTT],[15,t.TAIL_WHIP],[22,t.BITE],[27,t.ODOR_SLEUTH],[33,t.RETALIATE],[35,t.TAKE_DOWN],[38,t.CHARM],[42,t.SUCKER_PUNCH],[48,t.COTTON_GUARD]],[e.ESPURR]:[[1,t.SCRATCH],[1,t.LEER],[3,t.FAKE_OUT],[6,t.DISARMING_VOICE],[9,t.CONFUSION],[18,t.COVET],[21,t.PSYBEAM],[30,t.LIGHT_SCREEN],[30,t.REFLECT],[33,t.PSYSHOCK]],[e.MEOWSTIC]:[[1,t.SCRATCH],[1,t.LEER],[1,t.MEAN_LOOK],[1,t.FAKE_OUT],[1,t.DISARMING_VOICE],[9,t.CONFUSION],[12,t.HELPING_HAND],[15,t.CHARM],[18,t.COVET],[21,t.PSYBEAM],[24,t.SUCKER_PUNCH],[29,t.ROLE_PLAY],[34,t.LIGHT_SCREEN],[34,t.REFLECT],[39,t.PSYSHOCK],[44,t.IMPRISON],[49,t.QUICK_GUARD],[54,t.PSYCHIC],[59,t.MISTY_TERRAIN]],[e.HONEDGE]:[[1,t.TACKLE],[1,t.FURY_CUTTER],[4,t.SHADOW_SNEAK],[8,t.AUTOTOMIZE],[12,t.AERIAL_ACE],[16,t.METAL_SOUND],[20,t.SLASH],[24,t.NIGHT_SLASH],[28,t.RETALIATE],[32,t.IRON_DEFENSE],[36,t.IRON_HEAD],[40,t.POWER_TRICK],[44,t.SWORDS_DANCE],[48,t.SACRED_SWORD]],[e.DOUBLADE]:[[1,t.TACKLE],[1,t.FURY_CUTTER],[1,t.SHADOW_SNEAK],[1,t.AUTOTOMIZE],[12,t.AERIAL_ACE],[16,t.METAL_SOUND],[20,t.SLASH],[24,t.NIGHT_SLASH],[28,t.RETALIATE],[32,t.IRON_DEFENSE],[38,t.IRON_HEAD],[44,t.POWER_TRICK],[50,t.SWORDS_DANCE],[56,t.SACRED_SWORD]],[e.AEGISLASH]:[[Ee,t.KINGS_SHIELD],[1,t.SWORDS_DANCE],[1,t.PURSUIT],[1,t.TACKLE],[1,t.SLASH],[1,t.FURY_CUTTER],[1,t.METAL_SOUND],[1,t.AERIAL_ACE],[1,t.IRON_DEFENSE],[1,t.POWER_TRICK],[1,t.NIGHT_SLASH],[1,t.SHADOW_SNEAK],[1,t.IRON_HEAD],[1,t.HEAD_SMASH],[1,t.AUTOTOMIZE],[1,t.RETALIATE],[1,t.SACRED_SWORD]],[e.SPRITZEE]:[[1,t.SWEET_SCENT],[1,t.FAIRY_WIND],[3,t.SWEET_KISS],[6,t.ECHOED_VOICE],[9,t.DRAINING_KISS],[12,t.AROMATHERAPY],[18,t.ATTRACT],[21,t.FLAIL],[24,t.MISTY_TERRAIN],[27,t.PSYCHIC],[30,t.CHARM],[33,t.CALM_MIND],[36,t.MOONBLAST],[39,t.SKILL_SWAP]],[e.AROMATISSE]:[[1,t.SWEET_KISS],[1,t.SWEET_SCENT],[1,t.ECHOED_VOICE],[1,t.HEAL_PULSE],[1,t.FAIRY_WIND],[1,t.AROMATIC_MIST],[9,t.DISARMING_VOICE],[12,t.AROMATHERAPY],[15,t.DRAINING_KISS],[18,t.ATTRACT],[21,t.FLAIL],[24,t.MISTY_TERRAIN],[27,t.PSYCHIC],[30,t.CHARM],[33,t.CALM_MIND],[36,t.MOONBLAST],[39,t.SKILL_SWAP],[42,t.PSYCH_UP]],[e.SWIRLIX]:[[1,t.TACKLE],[1,t.SWEET_SCENT],[3,t.PLAY_NICE],[6,t.FAIRY_WIND],[9,t.AROMATHERAPY],[12,t.DRAINING_KISS],[15,t.FAKE_TEARS],[18,t.ROUND],[21,t.STRING_SHOT],[24,t.COTTON_SPORE],[27,t.ENERGY_BALL],[30,t.WISH],[33,t.PLAY_ROUGH],[36,t.COTTON_GUARD],[39,t.ENDEAVOR]],[e.SLURPUFF]:[[1,t.TACKLE],[1,t.SWEET_SCENT],[1,t.FAIRY_WIND],[1,t.PLAY_NICE],[9,t.AROMATHERAPY],[12,t.DRAINING_KISS],[15,t.FAKE_TEARS],[18,t.ROUND],[21,t.STRING_SHOT],[24,t.COTTON_SPORE],[27,t.ENERGY_BALL],[30,t.WISH],[33,t.PLAY_ROUGH],[36,t.COTTON_GUARD],[39,t.ENDEAVOR],[42,t.STICKY_WEB]],[e.INKAY]:[[1,t.TACKLE],[1,t.PECK],[1,t.CONSTRICT],[3,t.HYPNOSIS],[6,t.WRAP],[9,t.PAYBACK],[12,t.PLUCK],[15,t.PSYBEAM],[18,t.SWAGGER],[21,t.SLASH],[24,t.NIGHT_SLASH],[27,t.PSYCHO_CUT],[31,t.SWITCHEROO],[33,t.FOUL_PLAY],[36,t.TOPSY_TURVY],[39,t.SUPERPOWER]],[e.MALAMAR]:[[1,t.TACKLE],[1,t.WRAP],[1,t.PECK],[1,t.CONSTRICT],[1,t.HYPNOSIS],[1,t.REVERSAL],[9,t.PAYBACK],[12,t.PLUCK],[15,t.PSYBEAM],[18,t.SWAGGER],[21,t.SLASH],[24,t.NIGHT_SLASH],[27,t.PSYCHO_CUT],[33,t.SWITCHEROO],[37,t.FOUL_PLAY],[42,t.TOPSY_TURVY],[47,t.SUPERPOWER]],[e.BINACLE]:[[1,t.SCRATCH],[1,t.MUD_SLAP],[4,t.WITHDRAW],[8,t.WATER_GUN],[12,t.FURY_CUTTER],[16,t.FURY_SWIPES],[20,t.ANCIENT_POWER],[24,t.ROCK_POLISH],[28,t.SLASH],[32,t.HONE_CLAWS],[36,t.RAZOR_SHELL],[40,t.SHELL_SMASH],[44,t.CROSS_CHOP]],[e.BARBARACLE]:[[1,t.SCRATCH],[1,t.WATER_GUN],[1,t.WITHDRAW],[1,t.SKULL_BASH],[1,t.MUD_SLAP],[12,t.FURY_CUTTER],[16,t.FURY_SWIPES],[20,t.ANCIENT_POWER],[24,t.ROCK_POLISH],[28,t.SLASH],[32,t.HONE_CLAWS],[36,t.RAZOR_SHELL],[42,t.SHELL_SMASH],[48,t.CROSS_CHOP],[54,t.STONE_EDGE]],[e.SKRELP]:[[1,t.TACKLE],[1,t.SMOKESCREEN],[5,t.ACID],[10,t.WATER_GUN],[15,t.TAIL_WHIP],[20,t.DOUBLE_TEAM],[25,t.POISON_TAIL],[30,t.WATER_PULSE],[35,t.TOXIC],[40,t.DRAGON_PULSE],[45,t.AQUA_TAIL],[50,t.SLUDGE_BOMB],[55,t.HYDRO_PUMP]],[e.DRAGALGE]:[[1,t.TACKLE],[1,t.ACID],[1,t.WATER_GUN],[1,t.SMOKESCREEN],[1,t.FEINT_ATTACK],[15,t.TAIL_WHIP],[20,t.DOUBLE_TEAM],[25,t.POISON_TAIL],[30,t.WATER_PULSE],[35,t.TOXIC],[40,t.DRAGON_PULSE],[45,t.AQUA_TAIL],[52,t.SLUDGE_BOMB],[59,t.HYDRO_PUMP],[66,t.OUTRAGE]],[e.CLAUNCHER]:[[1,t.WATER_GUN],[1,t.SPLASH],[10,t.FLAIL],[15,t.AQUA_JET],[20,t.SMACK_DOWN],[25,t.HONE_CLAWS],[30,t.WATER_PULSE],[35,t.SWORDS_DANCE],[40,t.AURA_SPHERE],[45,t.BOUNCE],[50,t.MUDDY_WATER],[55,t.CRABHAMMER]],[e.CLAWITZER]:[[1,t.WATER_GUN],[1,t.SPLASH],[1,t.FLAIL],[1,t.DARK_PULSE],[1,t.DRAGON_PULSE],[1,t.HEAL_PULSE],[15,t.AQUA_JET],[20,t.SMACK_DOWN],[25,t.HONE_CLAWS],[30,t.WATER_PULSE],[35,t.SWORDS_DANCE],[42,t.AURA_SPHERE],[49,t.BOUNCE],[56,t.MUDDY_WATER],[63,t.CRABHAMMER]],[e.HELIOPTILE]:[[1,t.TAIL_WHIP],[1,t.MUD_SLAP],[4,t.POUND],[8,t.THUNDER_SHOCK],[12,t.QUICK_ATTACK],[16,t.CHARGE],[20,t.BULLDOZE],[24,t.VOLT_SWITCH],[28,t.PARABOLIC_CHARGE],[32,t.THUNDER_WAVE],[36,t.THUNDERBOLT],[40,t.ELECTRIFY],[44,t.THUNDER]],[e.HELIOLISK]:[[1,t.POUND],[1,t.TAIL_WHIP],[1,t.RAZOR_WIND],[1,t.THUNDER_SHOCK],[1,t.THUNDERBOLT],[1,t.THUNDER_WAVE],[1,t.THUNDER],[1,t.QUICK_ATTACK],[1,t.MUD_SLAP],[1,t.CHARGE],[1,t.DISCHARGE],[1,t.VOLT_SWITCH],[1,t.BULLDOZE],[1,t.PARABOLIC_CHARGE],[1,t.ELECTRIFY],[1,t.EERIE_IMPULSE]],[e.TYRUNT]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[4,t.ROAR],[8,t.ANCIENT_POWER],[12,t.CHARM],[16,t.BITE],[20,t.DRAGON_TAIL],[24,t.STOMP],[28,t.ROCK_SLIDE],[32,t.CRUNCH],[36,t.DRAGON_CLAW],[40,t.THRASH],[44,t.EARTHQUAKE],[48,t.HORN_DRILL]],[e.TYRANTRUM]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.ROAR],[1,t.ANCIENT_POWER],[12,t.CHARM],[16,t.BITE],[20,t.DRAGON_TAIL],[24,t.STOMP],[28,t.ROCK_SLIDE],[32,t.CRUNCH],[36,t.DRAGON_CLAW],[42,t.THRASH],[48,t.EARTHQUAKE],[54,t.HORN_DRILL],[60,t.GIGA_IMPACT],[66,t.HEAD_SMASH]],[e.AMAURA]:[[1,t.GROWL],[1,t.POWDER_SNOW],[4,t.ENCORE],[8,t.ANCIENT_POWER],[12,t.ICY_WIND],[16,t.ROUND],[20,t.MIST],[24,t.AURORA_BEAM],[28,t.THUNDER_WAVE],[32,t.NATURE_POWER],[36,t.FREEZE_DRY],[40,t.ICE_BEAM],[44,t.LIGHT_SCREEN],[48,t.HAIL],[52,t.BLIZZARD],[56,t.HYPER_BEAM]],[e.AURORUS]:[[1,t.GROWL],[1,t.POWDER_SNOW],[1,t.ENCORE],[1,t.ANCIENT_POWER],[12,t.ICY_WIND],[16,t.ROUND],[20,t.MIST],[24,t.AURORA_BEAM],[28,t.THUNDER_WAVE],[32,t.NATURE_POWER],[36,t.FREEZE_DRY],[42,t.ICE_BEAM],[48,t.LIGHT_SCREEN],[54,t.HAIL],[60,t.BLIZZARD],[66,t.HYPER_BEAM]],[e.SYLVEON]:[[Ee,t.SPARKLY_SWIRL],[X,t.VEEVEE_VOLLEY],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.BITE],[1,t.GROWL],[1,t.CHARM],[1,t.BATON_PASS],[1,t.HELPING_HAND],[1,t.COVET],[1,t.COPYCAT],[5,t.SAND_ATTACK],[10,t.DISARMING_VOICE],[15,t.QUICK_ATTACK],[20,t.BABY_DOLL_EYES],[25,t.SWIFT],[30,t.LIGHT_SCREEN],[35,t.DRAINING_KISS],[40,t.MISTY_TERRAIN],[45,t.SKILL_SWAP],[50,t.PSYCH_UP],[55,t.MOONBLAST],[60,t.LAST_RESORT]],[e.HAWLUCHA]:[[1,t.TACKLE],[1,t.HONE_CLAWS],[4,t.WING_ATTACK],[8,t.DETECT],[12,t.AERIAL_ACE],[16,t.ENCORE],[20,t.FEATHER_DANCE],[24,t.BRICK_BREAK],[28,t.BOUNCE],[32,t.TAUNT],[36,t.ROOST],[40,t.SWORDS_DANCE],[44,t.FLYING_PRESS],[48,t.HIGH_JUMP_KICK],[52,t.ENDEAVOR],[56,t.SKY_ATTACK]],[e.DEDENNE]:[[1,t.TAIL_WHIP],[1,t.NUZZLE],[5,t.TACKLE],[10,t.CHARGE],[15,t.THUNDER_SHOCK],[20,t.CHARM],[25,t.PARABOLIC_CHARGE],[30,t.VOLT_SWITCH],[35,t.REST],[35,t.SNORE],[40,t.DISCHARGE],[45,t.PLAY_ROUGH],[50,t.SUPER_FANG],[55,t.ENTRAINMENT],[60,t.THUNDER]],[e.CARBINK]:[[1,t.TACKLE],[1,t.HARDEN],[5,t.GUARD_SPLIT],[10,t.SMACK_DOWN],[15,t.FLAIL],[20,t.ANCIENT_POWER],[25,t.ROCK_POLISH],[30,t.LIGHT_SCREEN],[35,t.ROCK_SLIDE],[40,t.SKILL_SWAP],[45,t.POWER_GEM],[50,t.STEALTH_ROCK],[55,t.MOONBLAST],[60,t.STONE_EDGE]],[e.GOOMY]:[[1,t.TACKLE],[1,t.ABSORB],[5,t.WATER_GUN],[10,t.DRAGON_BREATH],[15,t.PROTECT],[20,t.FLAIL],[25,t.WATER_PULSE],[30,t.RAIN_DANCE],[35,t.DRAGON_PULSE],[41,t.CURSE],[45,t.BODY_SLAM],[50,t.MUDDY_WATER]],[e.SLIGGOO]:[[Ee,t.ACID_SPRAY],[1,t.TACKLE],[1,t.WATER_GUN],[1,t.ABSORB],[1,t.ACID_ARMOR],[1,t.DRAGON_BREATH],[15,t.PROTECT],[20,t.FLAIL],[25,t.WATER_PULSE],[30,t.RAIN_DANCE],[35,t.DRAGON_PULSE],[43,t.CURSE],[49,t.BODY_SLAM],[56,t.MUDDY_WATER]],[e.GOODRA]:[[Ee,t.AQUA_TAIL],[1,t.TACKLE],[1,t.WATER_GUN],[1,t.ABSORB],[1,t.ACID_ARMOR],[1,t.DRAGON_BREATH],[1,t.POISON_TAIL],[1,t.FEINT],[1,t.ACID_SPRAY],[1,t.TEARFUL_LOOK],[15,t.PROTECT],[20,t.FLAIL],[25,t.WATER_PULSE],[30,t.RAIN_DANCE],[35,t.DRAGON_PULSE],[43,t.CURSE],[49,t.BODY_SLAM],[58,t.MUDDY_WATER],[67,t.POWER_WHIP]],[e.KLEFKI]:[[1,t.ASTONISH],[4,t.TACKLE],[8,t.FAIRY_WIND],[12,t.TORMENT],[16,t.FAIRY_LOCK],[20,t.METAL_SOUND],[24,t.DRAINING_KISS],[28,t.RECYCLE],[32,t.IMPRISON],[36,t.FLASH_CANNON],[40,t.PLAY_ROUGH],[44,t.MAGIC_ROOM],[48,t.FOUL_PLAY],[50,t.HEAL_BLOCK],[52,t.LAST_RESORT]],[e.PHANTUMP]:[[1,t.TACKLE],[1,t.ASTONISH],[4,t.BRANCH_POKE],[8,t.LEECH_SEED],[12,t.CONFUSE_RAY],[16,t.WILL_O_WISP],[20,t.HEX],[24,t.GROWTH],[28,t.HORN_LEECH],[32,t.CURSE],[36,t.PHANTOM_FORCE],[40,t.INGRAIN],[44,t.WOOD_HAMMER],[48,t.DESTINY_BOND],[52,t.FORESTS_CURSE]],[e.TREVENANT]:[[Ee,t.SHADOW_CLAW],[1,t.TACKLE],[1,t.LEECH_SEED],[1,t.ASTONISH],[1,t.BRANCH_POKE],[12,t.CONFUSE_RAY],[16,t.WILL_O_WISP],[20,t.HEX],[24,t.GROWTH],[28,t.HORN_LEECH],[32,t.CURSE],[36,t.PHANTOM_FORCE],[40,t.INGRAIN],[44,t.WOOD_HAMMER],[48,t.DESTINY_BOND],[52,t.FORESTS_CURSE]],[e.PUMPKABOO]:[[1,t.ASTONISH],[1,t.TRICK_OR_TREAT],[1,t.LEAFAGE],[4,t.SHADOW_SNEAK],[8,t.CONFUSE_RAY],[12,t.RAZOR_LEAF],[16,t.LEECH_SEED],[20,t.BULLET_SEED],[24,t.SCARY_FACE],[28,t.WORRY_SEED],[32,t.SEED_BOMB],[36,t.SHADOW_BALL],[40,t.TRICK],[44,t.PAIN_SPLIT]],[e.GOURGEIST]:[[1,t.CONFUSE_RAY],[1,t.EXPLOSION],[1,t.ASTONISH],[1,t.LEAFAGE],[1,t.SHADOW_SNEAK],[1,t.TRICK_OR_TREAT],[1,t.MOONBLAST],[12,t.RAZOR_LEAF],[16,t.LEECH_SEED],[20,t.BULLET_SEED],[24,t.SCARY_FACE],[28,t.WORRY_SEED],[32,t.SEED_BOMB],[36,t.SHADOW_BALL],[40,t.TRICK],[44,t.PAIN_SPLIT],[48,t.PHANTOM_FORCE]],[e.BERGMITE]:[[1,t.HARDEN],[1,t.RAPID_SPIN],[3,t.TACKLE],[6,t.POWDER_SNOW],[9,t.CURSE],[12,t.ICY_WIND],[15,t.PROTECT],[18,t.AVALANCHE],[21,t.BITE],[24,t.ICE_FANG],[27,t.IRON_DEFENSE],[30,t.RECOVER],[33,t.CRUNCH],[36,t.TAKE_DOWN],[39,t.BLIZZARD],[42,t.DOUBLE_EDGE]],[e.AVALUGG]:[[Ee,t.BODY_SLAM],[1,t.TACKLE],[1,t.HARDEN],[1,t.POWDER_SNOW],[1,t.RAPID_SPIN],[1,t.WIDE_GUARD],[9,t.CURSE],[12,t.ICY_WIND],[15,t.PROTECT],[18,t.AVALANCHE],[21,t.BITE],[24,t.ICE_FANG],[27,t.IRON_DEFENSE],[30,t.RECOVER],[33,t.CRUNCH],[36,t.TAKE_DOWN],[41,t.BLIZZARD],[46,t.DOUBLE_EDGE],[51,t.ICICLE_CRASH]],[e.NOIBAT]:[[1,t.TACKLE],[1,t.ABSORB],[4,t.GUST],[8,t.SUPERSONIC],[12,t.DOUBLE_TEAM],[16,t.WING_ATTACK],[20,t.BITE],[24,t.AIR_CUTTER],[28,t.WHIRLWIND],[32,t.SUPER_FANG],[36,t.AIR_SLASH],[40,t.SCREECH],[44,t.ROOST],[49,t.TAILWIND],[52,t.HURRICANE]],[e.NOIVERN]:[[Ee,t.DRAGON_PULSE],[1,t.GUST],[1,t.TACKLE],[1,t.SUPERSONIC],[1,t.ABSORB],[1,t.MOONLIGHT],[12,t.DOUBLE_TEAM],[16,t.WING_ATTACK],[20,t.BITE],[24,t.AIR_CUTTER],[28,t.WHIRLWIND],[32,t.SUPER_FANG],[36,t.AIR_SLASH],[40,t.SCREECH],[44,t.ROOST],[51,t.TAILWIND],[56,t.HURRICANE],[62,t.BOOMBURST]],[e.XERNEAS]:[[1,t.TACKLE],[1,t.GRAVITY],[5,t.LIGHT_SCREEN],[10,t.AURORA_BEAM],[15,t.NATURE_POWER],[20,t.NIGHT_SLASH],[25,t.AROMATHERAPY],[30,t.PSYCH_UP],[35,t.HORN_LEECH],[40,t.MISTY_TERRAIN],[45,t.INGRAIN],[50,t.TAKE_DOWN],[55,t.GEOMANCY],[60,t.MOONBLAST],[65,t.HEAL_PULSE],[70,t.MEGAHORN],[75,t.CLOSE_COMBAT],[80,t.OUTRAGE],[85,t.GIGA_IMPACT]],[e.YVELTAL]:[[1,t.GUST],[1,t.DOUBLE_TEAM],[1,t.RAZOR_WIND],[5,t.TAUNT],[10,t.SNARL],[15,t.DISABLE],[20,t.SUCKER_PUNCH],[25,t.TAILWIND],[30,t.ROOST],[35,t.AIR_SLASH],[40,t.DARK_PULSE],[45,t.PSYCHIC],[50,t.OBLIVION_WING],[55,t.PHANTOM_FORCE],[60,t.FOUL_PLAY],[65,t.DRAGON_RUSH],[70,t.HURRICANE],[75,t.FOCUS_BLAST],[80,t.SKY_ATTACK],[85,t.HYPER_BEAM]],[e.ZYGARDE]:[[1,t.BIND],[1,t.BITE],[1,t.DRAGON_BREATH],[1,t.BULLDOZE],[1,t.THOUSAND_ARROWS],[1,t.THOUSAND_WAVES],[1,t.CORE_ENFORCER],[8,t.HAZE],[16,t.DIG],[24,t.SAFEGUARD],[32,t.CRUNCH],[40,t.DRAGON_PULSE],[48,t.LANDS_WRATH],[56,t.GLARE],[64,t.SANDSTORM],[72,t.COIL],[80,t.EARTHQUAKE],[88,t.OUTRAGE]],[e.DIANCIE]:[[1,t.TACKLE],[1,t.HARDEN],[1,t.DIAMOND_STORM],[7,t.GUARD_SPLIT],[14,t.SMACK_DOWN],[21,t.FLAIL],[28,t.ANCIENT_POWER],[35,t.ROCK_POLISH],[42,t.LIGHT_SCREEN],[49,t.ROCK_SLIDE],[56,t.SKILL_SWAP],[63,t.POWER_GEM],[70,t.STEALTH_ROCK],[77,t.MOONBLAST],[84,t.STONE_EDGE]],[e.HOOPA]:[[1,t.CONFUSION],[1,t.DESTINY_BOND],[1,t.ALLY_SWITCH],[6,t.ASTONISH],[10,t.TRICK],[15,t.LIGHT_SCREEN],[19,t.PSYBEAM],[25,t.SKILL_SWAP],[29,t.GUARD_SPLIT],[29,t.POWER_SPLIT],[35,t.PHANTOM_FORCE],[46,t.ZEN_HEADBUTT],[50,t.TRICK_ROOM],[50,t.WONDER_ROOM],[55,t.SHADOW_BALL],[68,t.NASTY_PLOT],[75,t.PSYCHIC],[85,t.HYPERSPACE_HOLE]],[e.VOLCANION]:[[1,t.WATER_GUN],[1,t.FIRE_SPIN],[1,t.STEAM_ERUPTION],[6,t.LEER],[12,t.WEATHER_BALL],[18,t.FLAME_CHARGE],[24,t.WATER_PULSE],[30,t.SCARY_FACE],[36,t.INCINERATE],[42,t.STOMP],[48,t.SCALD],[54,t.TAKE_DOWN],[60,t.MIST],[60,t.HAZE],[66,t.HYDRO_PUMP],[78,t.FLARE_BLITZ],[84,t.OVERHEAT],[90,t.EXPLOSION]],[e.ROWLET]:[[1,t.TACKLE],[1,t.GROWL],[3,t.LEAFAGE],[6,t.ASTONISH],[9,t.PECK],[12,t.SHADOW_SNEAK],[15,t.RAZOR_LEAF],[18,t.SYNTHESIS],[21,t.PLUCK],[24,t.NASTY_PLOT],[27,t.SUCKER_PUNCH],[30,t.LEAF_BLADE],[33,t.FEATHER_DANCE],[36,t.BRAVE_BIRD]],[e.DARTRIX]:[[1,t.TACKLE],[1,t.GROWL],[1,t.ASTONISH],[1,t.LEAFAGE],[9,t.PECK],[12,t.SHADOW_SNEAK],[15,t.RAZOR_LEAF],[20,t.SYNTHESIS],[25,t.PLUCK],[30,t.NASTY_PLOT],[35,t.SUCKER_PUNCH],[40,t.LEAF_BLADE],[45,t.FEATHER_DANCE],[50,t.BRAVE_BIRD]],[e.DECIDUEYE]:[[Ee,t.SPIRIT_SHACKLE],[1,t.TACKLE],[1,t.GROWL],[1,t.SPITE],[1,t.ASTONISH],[1,t.U_TURN],[1,t.LEAF_STORM],[1,t.PHANTOM_FORCE],[1,t.LEAFAGE],[9,t.PECK],[12,t.SHADOW_SNEAK],[15,t.RAZOR_LEAF],[20,t.SYNTHESIS],[25,t.PLUCK],[30,t.NASTY_PLOT],[37,t.SUCKER_PUNCH],[44,t.LEAF_BLADE],[51,t.FEATHER_DANCE],[58,t.BRAVE_BIRD]],[e.LITTEN]:[[1,t.SCRATCH],[1,t.GROWL],[3,t.EMBER],[6,t.LICK],[9,t.ROAR],[12,t.FURY_SWIPES],[15,t.BITE],[18,t.DOUBLE_KICK],[21,t.FIRE_FANG],[24,t.SCARY_FACE],[27,t.SWAGGER],[30,t.FLAMETHROWER],[33,t.THRASH],[36,t.FLARE_BLITZ]],[e.TORRACAT]:[[1,t.SCRATCH],[1,t.GROWL],[1,t.EMBER],[1,t.LICK],[9,t.ROAR],[12,t.FURY_SWIPES],[15,t.BITE],[20,t.DOUBLE_KICK],[25,t.FIRE_FANG],[30,t.SCARY_FACE],[35,t.SWAGGER],[40,t.FLAMETHROWER],[45,t.THRASH],[50,t.FLARE_BLITZ]],[e.INCINEROAR]:[[Ee,t.DARKEST_LARIAT],[X,t.SCRATCH],[X,t.GROWL],[X,t.THROAT_CHOP],[1,t.EMBER],[1,t.LICK],[1,t.CROSS_CHOP],[1,t.BULK_UP],[9,t.ROAR],[12,t.FURY_SWIPES],[15,t.BITE],[20,t.DOUBLE_KICK],[25,t.FIRE_FANG],[30,t.SCARY_FACE],[32,t.SWAGGER],[44,t.FLAMETHROWER],[51,t.THRASH],[58,t.FLARE_BLITZ]],[e.POPPLIO]:[[1,t.POUND],[1,t.GROWL],[3,t.WATER_GUN],[6,t.DISARMING_VOICE],[9,t.AQUA_JET],[12,t.BABY_DOLL_EYES],[15,t.ICY_WIND],[18,t.SING],[21,t.BUBBLE_BEAM],[24,t.ENCORE],[27,t.MISTY_TERRAIN],[30,t.HYPER_VOICE],[33,t.MOONBLAST],[36,t.HYDRO_PUMP]],[e.BRIONNE]:[[1,t.POUND],[1,t.GROWL],[1,t.WATER_GUN],[1,t.DISARMING_VOICE],[9,t.AQUA_JET],[12,t.BABY_DOLL_EYES],[15,t.ICY_WIND],[20,t.SING],[25,t.BUBBLE_BEAM],[30,t.ENCORE],[35,t.MISTY_TERRAIN],[40,t.HYPER_VOICE],[45,t.MOONBLAST],[50,t.HYDRO_PUMP]],[e.PRIMARINA]:[[Ee,t.SPARKLING_ARIA],[1,t.POUND],[1,t.GROWL],[1,t.WATER_GUN],[1,t.DISARMING_VOICE],[9,t.AQUA_JET],[12,t.BABY_DOLL_EYES],[15,t.ICY_WIND],[20,t.SING],[25,t.BUBBLE_BEAM],[30,t.ENCORE],[37,t.MISTY_TERRAIN],[44,t.HYPER_VOICE],[51,t.MOONBLAST],[58,t.HYDRO_PUMP]],[e.PIKIPEK]:[[1,t.PECK],[3,t.GROWL],[7,t.ECHOED_VOICE],[9,t.ROCK_SMASH],[13,t.SUPERSONIC],[15,t.PLUCK],[19,t.ROOST],[21,t.FURY_ATTACK],[25,t.SCREECH],[27,t.DRILL_PECK],[31,t.BULLET_SEED],[33,t.FEATHER_DANCE],[37,t.HYPER_VOICE]],[e.TRUMBEAK]:[[X,t.ECHOED_VOICE],[1,t.GROWL],[1,t.PECK],[1,t.ROCK_SMASH],[1,t.ROCK_BLAST],[13,t.SUPERSONIC],[16,t.PLUCK],[21,t.ROOST],[24,t.FURY_ATTACK],[29,t.SCREECH],[32,t.DRILL_PECK],[37,t.BULLET_SEED],[40,t.FEATHER_DANCE],[45,t.HYPER_VOICE]],[e.TOUCANNON]:[[Ee,t.BEAK_BLAST],[1,t.GROWL],[1,t.PECK],[1,t.ROCK_SMASH],[1,t.ROCK_BLAST],[1,t.ECHOED_VOICE],[13,t.SUPERSONIC],[16,t.PLUCK],[21,t.ROOST],[24,t.FURY_ATTACK],[30,t.SCREECH],[34,t.DRILL_PECK],[40,t.BULLET_SEED],[44,t.FEATHER_DANCE],[50,t.HYPER_VOICE]],[e.YUNGOOS]:[[1,t.TACKLE],[3,t.LEER],[7,t.PAYBACK],[10,t.SAND_ATTACK],[13,t.WORK_UP],[19,t.BITE],[22,t.MUD_SLAP],[25,t.SUPER_FANG],[28,t.TAKE_DOWN],[31,t.SCARY_FACE],[34,t.CRUNCH],[37,t.YAWN],[40,t.THRASH],[43,t.REST]],[e.GUMSHOOS]:[[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.LEER],[1,t.PAYBACK],[1,t.PURSUIT],[13,t.WORK_UP],[19,t.BITE],[23,t.MUD_SLAP],[27,t.SUPER_FANG],[31,t.TAKE_DOWN],[35,t.SCARY_FACE],[39,t.CRUNCH],[43,t.YAWN],[47,t.THRASH],[52,t.REST]],[e.GRUBBIN]:[[1,t.VISE_GRIP],[1,t.MUD_SLAP],[5,t.STRING_SHOT],[10,t.BUG_BITE],[15,t.BITE],[21,t.SPARK],[25,t.STICKY_WEB],[30,t.X_SCISSOR],[35,t.CRUNCH],[40,t.DIG]],[e.CHARJABUG]:[[Ee,t.CHARGE],[1,t.VISE_GRIP],[1,t.STRING_SHOT],[1,t.MUD_SLAP],[1,t.BUG_BITE],[15,t.BITE],[23,t.SPARK],[29,t.STICKY_WEB],[36,t.X_SCISSOR],[43,t.CRUNCH],[50,t.DIG],[57,t.IRON_DEFENSE],[64,t.DISCHARGE]],[e.VIKAVOLT]:[[Ee,t.THUNDERBOLT],[X,t.VISE_GRIP],[X,t.DIG],[X,t.MUD_SLAP],[X,t.IRON_DEFENSE],[X,t.X_SCISSOR],[X,t.BUG_BITE],[1,t.CHARGE],[1,t.CRUNCH],[1,t.DISCHARGE],[1,t.STRING_SHOT],[15,t.BITE],[23,t.SPARK],[29,t.STICKY_WEB],[36,t.BUG_BUZZ],[43,t.GUILLOTINE],[50,t.FLY],[57,t.AGILITY],[64,t.ZAP_CANNON]],[e.CRABRAWLER]:[[1,t.BUBBLE],[1,t.VISE_GRIP],[5,t.ROCK_SMASH],[9,t.LEER],[13,t.BUBBLE_BEAM],[17,t.PROTECT],[22,t.BRICK_BREAK],[25,t.SLAM],[29,t.PAYBACK],[33,t.REVERSAL],[37,t.CRABHAMMER],[42,t.IRON_DEFENSE],[45,t.DYNAMIC_PUNCH],[49,t.CLOSE_COMBAT]],[e.CRABOMINABLE]:[[Ee,t.ICE_PUNCH],[X,t.CRABHAMMER],[1,t.VISE_GRIP],[1,t.LEER],[1,t.PROTECT],[1,t.ROCK_SMASH],[1,t.BUBBLE],[1,t.PURSUIT],[1,t.PAYBACK],[17,t.BUBBLE_BEAM],[22,t.BRICK_BREAK],[25,t.SLAM],[29,t.AVALANCHE],[33,t.REVERSAL],[37,t.ICE_HAMMER],[42,t.IRON_DEFENSE],[45,t.DYNAMIC_PUNCH],[49,t.CLOSE_COMBAT]],[e.ORICORIO]:[[1,t.POUND],[4,t.GROWL],[6,t.PECK],[10,t.HELPING_HAND],[13,t.AIR_CUTTER],[16,t.BATON_PASS],[20,t.FEATHER_DANCE],[23,t.ACROBATICS],[26,t.TEETER_DANCE],[30,t.ROOST],[33,t.FLATTER],[36,t.AIR_SLASH],[40,t.REVELATION_DANCE],[43,t.AGILITY],[47,t.HURRICANE]],[e.CUTIEFLY]:[[1,t.ABSORB],[1,t.FAIRY_WIND],[6,t.STUN_SPORE],[12,t.SWEET_SCENT],[18,t.DRAINING_KISS],[24,t.STRUGGLE_BUG],[30,t.COVET],[36,t.SWITCHEROO],[42,t.DAZZLING_GLEAM],[48,t.BUG_BUZZ],[54,t.QUIVER_DANCE]],[e.RIBOMBEE]:[[Ee,t.POLLEN_PUFF],[1,t.ABSORB],[1,t.STUN_SPORE],[1,t.SWEET_SCENT],[1,t.FAIRY_WIND],[18,t.DRAINING_KISS],[24,t.STRUGGLE_BUG],[32,t.COVET],[40,t.SWITCHEROO],[48,t.DAZZLING_GLEAM],[56,t.BUG_BUZZ],[64,t.QUIVER_DANCE]],[e.ROCKRUFF]:[[1,t.TACKLE],[1,t.LEER],[4,t.SAND_ATTACK],[8,t.DOUBLE_TEAM],[12,t.ROCK_THROW],[16,t.HOWL],[20,t.BITE],[24,t.ROCK_TOMB],[28,t.ROAR],[32,t.ROCK_SLIDE],[36,t.CRUNCH],[40,t.SCARY_FACE],[44,t.STEALTH_ROCK],[48,t.STONE_EDGE]],[e.LYCANROC]:[[Ee,t.SUCKER_PUNCH],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.LEER],[1,t.QUICK_ATTACK],[1,t.DOUBLE_TEAM],[1,t.QUICK_GUARD],[1,t.ACCELEROCK],[12,t.ROCK_THROW],[16,t.HOWL],[20,t.BITE],[24,t.ROCK_TOMB],[30,t.ROAR],[36,t.ROCK_SLIDE],[42,t.CRUNCH],[48,t.SCARY_FACE],[54,t.STEALTH_ROCK],[60,t.STONE_EDGE]],[e.WISHIWASHI]:[[1,t.GROWL],[1,t.WATER_GUN],[4,t.HELPING_HAND],[8,t.BEAT_UP],[12,t.BRINE],[16,t.TEARFUL_LOOK],[20,t.DIVE],[24,t.SOAK],[28,t.UPROAR],[32,t.AQUA_TAIL],[36,t.AQUA_RING],[40,t.ENDEAVOR],[44,t.HYDRO_PUMP],[48,t.DOUBLE_EDGE]],[e.MAREANIE]:[[1,t.POISON_STING],[1,t.PECK],[5,t.WIDE_GUARD],[10,t.BITE],[15,t.VENOSHOCK],[20,t.RECOVER],[25,t.PIN_MISSILE],[30,t.TOXIC_SPIKES],[35,t.LIQUIDATION],[40,t.ACID_SPRAY],[45,t.POISON_JAB],[50,t.TOXIC]],[e.TOXAPEX]:[[Ee,t.BANEFUL_BUNKER],[1,t.POISON_STING],[1,t.BITE],[1,t.PECK],[1,t.WIDE_GUARD],[15,t.VENOSHOCK],[20,t.RECOVER],[25,t.PIN_MISSILE],[30,t.TOXIC_SPIKES],[35,t.LIQUIDATION],[42,t.ACID_SPRAY],[49,t.POISON_JAB],[56,t.TOXIC]],[e.MUDBRAY]:[[1,t.MUD_SLAP],[1,t.ROCK_SMASH],[4,t.IRON_DEFENSE],[8,t.DOUBLE_KICK],[12,t.BULLDOZE],[16,t.STOMP],[20,t.STRENGTH],[24,t.COUNTER],[28,t.HIGH_HORSEPOWER],[32,t.HEAVY_SLAM],[36,t.EARTHQUAKE],[40,t.MEGA_KICK],[44,t.SUPERPOWER]],[e.MUDSDALE]:[[1,t.DOUBLE_KICK],[1,t.MUD_SLAP],[1,t.ROCK_SMASH],[1,t.IRON_DEFENSE],[12,t.BULLDOZE],[16,t.STOMP],[20,t.STRENGTH],[24,t.COUNTER],[28,t.HIGH_HORSEPOWER],[34,t.HEAVY_SLAM],[40,t.EARTHQUAKE],[46,t.MEGA_KICK],[52,t.SUPERPOWER]],[e.DEWPIDER]:[[1,t.WATER_GUN],[1,t.INFESTATION],[1,t.WATER_SPORT],[4,t.BUG_BITE],[8,t.BITE],[12,t.BUBBLE_BEAM],[16,t.AQUA_RING],[20,t.HEADBUTT],[24,t.CRUNCH],[28,t.SOAK],[32,t.ENTRAINMENT],[36,t.LUNGE],[40,t.LIQUIDATION],[44,t.LEECH_LIFE],[48,t.MIRROR_COAT]],[e.ARAQUANID]:[[1,t.BITE],[1,t.WATER_GUN],[1,t.BUG_BITE],[1,t.WIDE_GUARD],[1,t.INFESTATION],[1,t.WATER_SPORT],[1,t.SPIDER_WEB],[12,t.BUBBLE_BEAM],[16,t.AQUA_RING],[20,t.HEADBUTT],[26,t.CRUNCH],[32,t.SOAK],[38,t.ENTRAINMENT],[44,t.LUNGE],[50,t.LIQUIDATION],[56,t.LEECH_LIFE],[62,t.MIRROR_COAT]],[e.FOMANTIS]:[[1,t.FURY_CUTTER],[1,t.LEAFAGE],[5,t.GROWTH],[10,t.INGRAIN],[15,t.RAZOR_LEAF],[20,t.SWEET_SCENT],[25,t.SLASH],[30,t.X_SCISSOR],[35,t.SYNTHESIS],[40,t.LEAF_BLADE],[45,t.SUNNY_DAY],[50,t.SOLAR_BEAM]],[e.LURANTIS]:[[Ee,t.PETAL_BLIZZARD],[1,t.GROWTH],[1,t.SOLAR_BEAM],[1,t.FURY_CUTTER],[1,t.INGRAIN],[1,t.NIGHT_SLASH],[1,t.LEAFAGE],[1,t.DUAL_CHOP],[15,t.RAZOR_LEAF],[20,t.SWEET_SCENT],[25,t.SLASH],[30,t.X_SCISSOR],[37,t.SYNTHESIS],[44,t.LEAF_BLADE],[51,t.SUNNY_DAY],[63,t.SOLAR_BLADE]],[e.MORELULL]:[[1,t.ABSORB],[1,t.ASTONISH],[4,t.CONFUSE_RAY],[8,t.INGRAIN],[12,t.MEGA_DRAIN],[16,t.SLEEP_POWDER],[20,t.MOONLIGHT],[25,t.STRENGTH_SAP],[28,t.GIGA_DRAIN],[32,t.DAZZLING_GLEAM],[36,t.SPORE],[40,t.MOONBLAST],[44,t.DREAM_EATER]],[e.SHIINOTIC]:[[1,t.ABSORB],[1,t.CONFUSE_RAY],[1,t.INGRAIN],[1,t.ASTONISH],[1,t.FLASH],[12,t.MEGA_DRAIN],[16,t.SLEEP_POWDER],[20,t.MOONLIGHT],[27,t.STRENGTH_SAP],[32,t.GIGA_DRAIN],[38,t.DAZZLING_GLEAM],[44,t.SPORE],[50,t.MOONBLAST],[56,t.DREAM_EATER]],[e.SALANDIT]:[[1,t.SCRATCH],[1,t.POISON_GAS],[5,t.SMOG],[10,t.EMBER],[15,t.POISON_FANG],[20,t.SWEET_SCENT],[25,t.NASTY_PLOT],[30,t.INCINERATE],[35,t.VENOSHOCK],[40,t.DRAGON_PULSE],[45,t.FLAMETHROWER],[50,t.TOXIC],[55,t.ENDEAVOR]],[e.SALAZZLE]:[[Ee,t.FIRE_LASH],[1,t.POUND],[1,t.SCRATCH],[1,t.DISABLE],[1,t.EMBER],[1,t.SMOG],[1,t.POISON_GAS],[1,t.SWAGGER],[1,t.ENCORE],[1,t.TORMENT],[1,t.KNOCK_OFF],[1,t.ENDEAVOR],[1,t.CAPTIVATE],[15,t.POISON_FANG],[20,t.SWEET_SCENT],[25,t.NASTY_PLOT],[30,t.INCINERATE],[37,t.VENOSHOCK],[44,t.DRAGON_PULSE],[51,t.FLAMETHROWER],[58,t.TOXIC]],[e.STUFFUL]:[[1,t.TACKLE],[1,t.LEER],[4,t.BABY_DOLL_EYES],[8,t.PAYBACK],[12,t.BRUTAL_SWING],[16,t.ENDURE],[20,t.STRENGTH],[24,t.TAKE_DOWN],[28,t.FLAIL],[32,t.HAMMER_ARM],[36,t.THRASH],[40,t.PAIN_SPLIT],[44,t.DOUBLE_EDGE],[48,t.SUPERPOWER]],[e.BEWEAR]:[[Ee,t.BIND],[1,t.TACKLE],[1,t.LEER],[1,t.PAYBACK],[1,t.BABY_DOLL_EYES],[12,t.BRUTAL_SWING],[16,t.ENDURE],[20,t.STRENGTH],[24,t.TAKE_DOWN],[30,t.FLAIL],[36,t.HAMMER_ARM],[42,t.THRASH],[48,t.PAIN_SPLIT],[54,t.DOUBLE_EDGE],[60,t.SUPERPOWER]],[e.BOUNSWEET]:[[1,t.SPLASH],[1,t.LEAFAGE],[4,t.PLAY_NICE],[8,t.RAPID_SPIN],[12,t.RAZOR_LEAF],[16,t.SWEET_SCENT],[20,t.MAGICAL_LEAF],[24,t.FLAIL],[28,t.TEETER_DANCE],[32,t.AROMATIC_MIST]],[e.STEENEE]:[[1,t.LEAFAGE],[1,t.RAZOR_LEAF],[1,t.SPLASH],[1,t.FLAIL],[1,t.RAPID_SPIN],[1,t.PLAY_NICE],[16,t.SWEET_SCENT],[22,t.MAGICAL_LEAF],[28,t.STOMP],[34,t.TEETER_DANCE],[40,t.AROMATIC_MIST],[46,t.LEAF_STORM]],[e.TSAREENA]:[[Ee,t.TROP_KICK],[1,t.LEAFAGE],[1,t.RAZOR_LEAF],[1,t.SPLASH],[1,t.FLAIL],[1,t.SWAGGER],[1,t.RAPID_SPIN],[1,t.POWER_WHIP],[1,t.PLAY_NICE],[1,t.PUNISHMENT],[16,t.SWEET_SCENT],[22,t.MAGICAL_LEAF],[28,t.STOMP],[34,t.TEETER_DANCE],[40,t.AROMATIC_MIST],[46,t.LEAF_STORM],[58,t.HIGH_JUMP_KICK]],[e.COMFEY]:[[1,t.WRAP],[1,t.GROWTH],[3,t.VINE_WHIP],[6,t.HELPING_HAND],[9,t.DRAINING_KISS],[12,t.FLOWER_SHIELD],[15,t.MAGICAL_LEAF],[18,t.SYNTHESIS],[21,t.LEECH_SEED],[24,t.GRASS_KNOT],[27,t.SWEET_KISS],[30,t.FLORAL_HEALING],[33,t.PETAL_BLIZZARD],[36,t.AROMATHERAPY],[39,t.PLAY_ROUGH],[42,t.SWEET_SCENT],[45,t.PETAL_DANCE],[48,t.GRASSY_TERRAIN]],[e.ORANGURU]:[[1,t.CONFUSION],[1,t.TAUNT],[5,t.AFTER_YOU],[10,t.CALM_MIND],[15,t.STORED_POWER],[20,t.PSYCH_UP],[25,t.QUASH],[30,t.NASTY_PLOT],[35,t.ZEN_HEADBUTT],[40,t.TRICK_ROOM],[45,t.PSYCHIC],[50,t.INSTRUCT],[55,t.FOUL_PLAY],[60,t.FUTURE_SIGHT]],[e.PASSIMIAN]:[[1,t.TACKLE],[1,t.LEER],[5,t.ROCK_SMASH],[10,t.FOCUS_ENERGY],[15,t.BEAT_UP],[20,t.SCARY_FACE],[25,t.TAKE_DOWN],[30,t.FLING],[35,t.BULK_UP],[40,t.THRASH],[45,t.DOUBLE_EDGE],[50,t.CLOSE_COMBAT],[55,t.REVERSAL],[60,t.GIGA_IMPACT]],[e.WIMPOD]:[[1,t.SAND_ATTACK],[1,t.DEFENSE_CURL],[1,t.STRUGGLE_BUG]],[e.GOLISOPOD]:[[Ee,t.FIRST_IMPRESSION],[1,t.SAND_ATTACK],[1,t.DEFENSE_CURL],[1,t.SPITE],[1,t.STRUGGLE_BUG],[4,t.ROCK_SMASH],[8,t.FURY_CUTTER],[12,t.MUD_SHOT],[16,t.BUG_BITE],[20,t.IRON_DEFENSE],[24,t.SUCKER_PUNCH],[28,t.SLASH],[32,t.RAZOR_SHELL],[36,t.PIN_MISSILE],[40,t.SWORDS_DANCE],[44,t.LIQUIDATION]],[e.SANDYGAST]:[[1,t.ABSORB],[1,t.HARDEN],[5,t.ASTONISH],[10,t.SAND_TOMB],[15,t.MEGA_DRAIN],[20,t.SAND_ATTACK],[25,t.BULLDOZE],[30,t.HYPNOSIS],[35,t.GIGA_DRAIN],[40,t.IRON_DEFENSE],[45,t.SHADOW_BALL],[50,t.EARTH_POWER],[55,t.SHORE_UP],[60,t.SANDSTORM]],[e.PALOSSAND]:[[1,t.ABSORB],[1,t.HARDEN],[1,t.ASTONISH],[1,t.SAND_TOMB],[15,t.MEGA_DRAIN],[20,t.SAND_ATTACK],[25,t.BULLDOZE],[30,t.HYPNOSIS],[35,t.GIGA_DRAIN],[40,t.IRON_DEFENSE],[47,t.SHADOW_BALL],[54,t.EARTH_POWER],[61,t.SHORE_UP],[68,t.SANDSTORM]],[e.PYUKUMUKU]:[[1,t.COUNTER],[1,t.HARDEN],[1,t.BATON_PASS],[1,t.BIDE],[1,t.MUD_SPORT],[1,t.WATER_SPORT],[5,t.HELPING_HAND],[10,t.TAUNT],[15,t.SAFEGUARD],[20,t.MIRROR_COAT],[25,t.PURIFY],[30,t.CURSE],[35,t.GASTRO_ACID],[40,t.PAIN_SPLIT],[45,t.RECOVER],[50,t.SOAK],[55,t.TOXIC],[60,t.MEMENTO]],[e.TYPE_NULL]:[[1,t.TACKLE],[1,t.IMPRISON],[5,t.AERIAL_ACE],[10,t.SCARY_FACE],[15,t.DOUBLE_HIT],[20,t.METAL_SOUND],[25,t.CRUSH_CLAW],[30,t.AIR_SLASH],[35,t.TRI_ATTACK],[40,t.X_SCISSOR],[45,t.IRON_HEAD],[50,t.TAKE_DOWN],[55,t.DOUBLE_EDGE],[60,t.HEAL_BLOCK]],[e.SILVALLY]:[[Ee,t.MULTI_ATTACK],[1,t.TACKLE],[1,t.BITE],[1,t.EXPLOSION],[1,t.SCARY_FACE],[1,t.IMPRISON],[1,t.POISON_FANG],[1,t.AERIAL_ACE],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[1,t.IRON_HEAD],[1,t.HEAL_BLOCK],[15,t.DOUBLE_HIT],[20,t.METAL_SOUND],[25,t.CRUSH_CLAW],[30,t.AIR_SLASH],[35,t.TRI_ATTACK],[40,t.X_SCISSOR],[45,t.CRUNCH],[50,t.TAKE_DOWN],[55,t.DOUBLE_EDGE],[60,t.PARTING_SHOT]],[e.MINIOR]:[[1,t.TACKLE],[3,t.DEFENSE_CURL],[8,t.ROLLOUT],[10,t.CONFUSE_RAY],[15,t.SWIFT],[17,t.ANCIENT_POWER],[22,t.SELF_DESTRUCT],[24,t.STEALTH_ROCK],[29,t.TAKE_DOWN],[31,t.AUTOTOMIZE],[36,t.COSMIC_POWER],[38,t.POWER_GEM],[43,t.DOUBLE_EDGE],[45,t.SHELL_SMASH],[50,t.EXPLOSION]],[e.KOMALA]:[[1,t.DEFENSE_CURL],[1,t.ROLLOUT],[6,t.STOCKPILE],[6,t.SPIT_UP],[6,t.SWALLOW],[11,t.RAPID_SPIN],[16,t.YAWN],[21,t.SLAM],[26,t.FLAIL],[31,t.SUCKER_PUNCH],[36,t.PSYCH_UP],[41,t.WOOD_HAMMER],[46,t.THRASH]],[e.TURTONATOR]:[[1,t.TACKLE],[1,t.SMOG],[4,t.EMBER],[8,t.PROTECT],[12,t.ENDURE],[16,t.FLAIL],[20,t.INCINERATE],[24,t.IRON_DEFENSE],[28,t.DRAGON_PULSE],[32,t.BODY_SLAM],[36,t.FLAMETHROWER],[40,t.SHELL_TRAP],[44,t.SHELL_SMASH],[48,t.OVERHEAT],[52,t.EXPLOSION]],[e.TOGEDEMARU]:[[1,t.TACKLE],[1,t.NUZZLE],[5,t.DEFENSE_CURL],[10,t.CHARGE],[15,t.THUNDER_SHOCK],[20,t.FELL_STINGER],[25,t.SPARK],[30,t.PIN_MISSILE],[35,t.MAGNET_RISE],[40,t.ZING_ZAP],[45,t.DISCHARGE],[50,t.ELECTRIC_TERRAIN],[55,t.WILD_CHARGE],[60,t.SPIKY_SHIELD]],[e.MIMIKYU]:[[1,t.SCRATCH],[1,t.SPLASH],[1,t.ASTONISH],[1,t.COPYCAT],[1,t.WOOD_HAMMER],[6,t.SHADOW_SNEAK],[12,t.DOUBLE_TEAM],[18,t.BABY_DOLL_EYES],[24,t.MIMIC],[30,t.HONE_CLAWS],[36,t.SLASH],[42,t.SHADOW_CLAW],[48,t.CHARM],[54,t.PLAY_ROUGH],[60,t.PAIN_SPLIT]],[e.BRUXISH]:[[1,t.WATER_GUN],[4,t.ASTONISH],[9,t.CONFUSION],[12,t.BITE],[17,t.AQUA_JET],[20,t.DISABLE],[25,t.PSYSHOCK],[28,t.CRUNCH],[33,t.AQUA_TAIL],[36,t.SCREECH],[41,t.PSYCHIC_FANGS],[44,t.WAVE_CRASH]],[e.DRAMPA]:[[1,t.ECHOED_VOICE],[1,t.PLAY_NICE],[5,t.TWISTER],[10,t.PROTECT],[15,t.GLARE],[20,t.SAFEGUARD],[25,t.DRAGON_BREATH],[30,t.EXTRASENSORY],[35,t.DRAGON_PULSE],[40,t.LIGHT_SCREEN],[45,t.FLY],[50,t.HYPER_VOICE],[55,t.OUTRAGE]],[e.DHELMISE]:[[1,t.ABSORB],[1,t.RAPID_SPIN],[4,t.ASTONISH],[8,t.WRAP],[12,t.MEGA_DRAIN],[16,t.GROWTH],[20,t.GYRO_BALL],[24,t.SWITCHEROO],[28,t.GIGA_DRAIN],[32,t.WHIRLPOOL],[36,t.HEAVY_SLAM],[40,t.SLAM],[44,t.SHADOW_BALL],[48,t.METAL_SOUND],[52,t.ANCHOR_SHOT],[56,t.ENERGY_BALL],[60,t.PHANTOM_FORCE],[64,t.POWER_WHIP]],[e.JANGMO_O]:[[1,t.TACKLE],[1,t.LEER],[4,t.PROTECT],[8,t.DRAGON_TAIL],[12,t.SCARY_FACE],[16,t.HEADBUTT],[20,t.WORK_UP],[24,t.SCREECH],[28,t.IRON_DEFENSE],[32,t.DRAGON_CLAW],[36,t.NOBLE_ROAR],[40,t.DRAGON_DANCE],[44,t.OUTRAGE]],[e.HAKAMO_O]:[[Ee,t.SKY_UPPERCUT],[1,t.TACKLE],[1,t.LEER],[1,t.PROTECT],[1,t.DRAGON_TAIL],[1,t.BIDE],[12,t.SCARY_FACE],[16,t.HEADBUTT],[20,t.WORK_UP],[24,t.SCREECH],[28,t.IRON_DEFENSE],[32,t.DRAGON_CLAW],[38,t.NOBLE_ROAR],[44,t.DRAGON_DANCE],[50,t.OUTRAGE],[56,t.CLOSE_COMBAT]],[e.KOMMO_O]:[[Ee,t.CLANGING_SCALES],[X,t.BELLY_DRUM],[1,t.TACKLE],[1,t.LEER],[1,t.PROTECT],[1,t.DRAGON_TAIL],[1,t.BIDE],[1,t.SKY_UPPERCUT],[12,t.SCARY_FACE],[16,t.HEADBUTT],[20,t.WORK_UP],[24,t.SCREECH],[28,t.IRON_DEFENSE],[32,t.DRAGON_CLAW],[38,t.NOBLE_ROAR],[44,t.DRAGON_DANCE],[52,t.OUTRAGE],[60,t.CLOSE_COMBAT],[68,t.CLANGOROUS_SOUL],[76,t.BOOMBURST]],[e.TAPU_KOKO]:[[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[5,t.WITHDRAW],[10,t.FAIRY_WIND],[15,t.FALSE_SWIPE],[20,t.SPARK],[25,t.SHOCK_WAVE],[30,t.CHARGE],[35,t.AGILITY],[40,t.SCREECH],[45,t.DISCHARGE],[50,t.MEAN_LOOK],[55,t.NATURES_MADNESS],[60,t.WILD_CHARGE],[65,t.BRAVE_BIRD],[70,t.POWER_SWAP],[75,t.ELECTRIC_TERRAIN]],[e.TAPU_LELE]:[[1,t.CONFUSION],[1,t.ASTONISH],[5,t.WITHDRAW],[10,t.AROMATHERAPY],[15,t.DRAINING_KISS],[20,t.PSYBEAM],[25,t.FLATTER],[30,t.AROMATIC_MIST],[35,t.SWEET_SCENT],[40,t.EXTRASENSORY],[45,t.PSYSHOCK],[50,t.MEAN_LOOK],[55,t.NATURES_MADNESS],[60,t.MOONBLAST],[65,t.TICKLE],[70,t.SKILL_SWAP],[75,t.PSYCHIC_TERRAIN]],[e.TAPU_BULU]:[[1,t.ROCK_SMASH],[1,t.LEAFAGE],[5,t.WITHDRAW],[10,t.DISABLE],[15,t.LEECH_SEED],[20,t.MEGA_DRAIN],[25,t.WHIRLWIND],[30,t.HORN_ATTACK],[35,t.SCARY_FACE],[40,t.HORN_LEECH],[45,t.ZEN_HEADBUTT],[50,t.MEAN_LOOK],[55,t.NATURES_MADNESS],[60,t.WOOD_HAMMER],[65,t.MEGAHORN],[70,t.SKULL_BASH],[75,t.GRASSY_TERRAIN]],[e.TAPU_FINI]:[[1,t.WATER_GUN],[1,t.DISARMING_VOICE],[5,t.WITHDRAW],[10,t.MIST],[10,t.HAZE],[15,t.AQUA_RING],[20,t.WATER_PULSE],[25,t.BRINE],[30,t.DEFOG],[35,t.HEAL_PULSE],[40,t.SURF],[45,t.MUDDY_WATER],[50,t.MEAN_LOOK],[55,t.NATURES_MADNESS],[60,t.MOONBLAST],[65,t.HYDRO_PUMP],[70,t.SOAK],[75,t.MISTY_TERRAIN]],[e.COSMOG]:[[1,t.TELEPORT],[1,t.SPLASH],[1,t.STORED_POWER]],[e.COSMOEM]:[[Ee,t.COSMIC_POWER],[1,t.TELEPORT],[1,t.SPLASH],[1,t.STORED_POWER]],[e.SOLGALEO]:[[Ee,t.SUNSTEEL_STRIKE],[1,t.TELEPORT],[1,t.SPLASH],[1,t.STORED_POWER],[1,t.METAL_CLAW],[1,t.COSMIC_POWER],[1,t.NOBLE_ROAR],[1,t.WAKE_UP_SLAP],[7,t.IRON_HEAD],[14,t.METAL_SOUND],[21,t.ZEN_HEADBUTT],[28,t.FLASH_CANNON],[35,t.MORNING_SUN],[42,t.CRUNCH],[49,t.METAL_BURST],[56,t.WILD_CHARGE],[63,t.SOLAR_BEAM],[70,t.FLARE_BLITZ],[77,t.WIDE_GUARD],[84,t.GIGA_IMPACT]],[e.LUNALA]:[[Ee,t.MOONGEIST_BEAM],[1,t.CONFUSION],[1,t.HYPNOSIS],[1,t.TELEPORT],[1,t.SPLASH],[1,t.STORED_POWER],[1,t.COSMIC_POWER],[7,t.NIGHT_SHADE],[14,t.CONFUSE_RAY],[21,t.AIR_SLASH],[28,t.SHADOW_BALL],[35,t.MOONLIGHT],[42,t.NIGHT_DAZE],[49,t.MAGIC_COAT],[56,t.MOONBLAST],[63,t.PHANTOM_FORCE],[70,t.DREAM_EATER],[77,t.WIDE_GUARD],[84,t.HYPER_BEAM]],[e.NIHILEGO]:[[1,t.POUND],[1,t.WRAP],[1,t.CONSTRICT],[5,t.ACID],[10,t.TICKLE],[15,t.ACID_SPRAY],[20,t.CLEAR_SMOG],[25,t.GUARD_SPLIT],[25,t.POWER_SPLIT],[30,t.VENOSHOCK],[35,t.HEADBUTT],[40,t.TOXIC_SPIKES],[45,t.VENOM_DRENCH],[50,t.POWER_GEM],[55,t.STEALTH_ROCK],[60,t.MIRROR_COAT],[65,t.WONDER_ROOM],[70,t.HEAD_SMASH]],[e.BUZZWOLE]:[[1,t.HARDEN],[1,t.POWER_UP_PUNCH],[5,t.TAUNT],[10,t.FELL_STINGER],[15,t.VITAL_THROW],[20,t.BULK_UP],[25,t.ENDURE],[30,t.REVERSAL],[35,t.MEGA_PUNCH],[40,t.LUNGE],[45,t.FOCUS_ENERGY],[50,t.DYNAMIC_PUNCH],[55,t.COUNTER],[60,t.HAMMER_ARM],[65,t.SUPERPOWER],[70,t.FOCUS_PUNCH]],[e.PHEROMOSA]:[[1,t.RAPID_SPIN],[1,t.FEINT],[5,t.LEER],[10,t.QUICK_GUARD],[15,t.BUG_BITE],[20,t.LOW_KICK],[25,t.DOUBLE_KICK],[30,t.TRIPLE_KICK],[35,t.STOMP],[40,t.AGILITY],[45,t.LUNGE],[50,t.BOUNCE],[55,t.SPEED_SWAP],[60,t.BUG_BUZZ],[65,t.QUIVER_DANCE],[70,t.HIGH_JUMP_KICK]],[e.XURKITREE]:[[1,t.WRAP],[1,t.THUNDER_SHOCK],[5,t.CHARGE],[10,t.THUNDER_WAVE],[15,t.INGRAIN],[20,t.SPARK],[25,t.SHOCK_WAVE],[30,t.HYPNOSIS],[35,t.EERIE_IMPULSE],[40,t.THUNDER_PUNCH],[45,t.DISCHARGE],[50,t.MAGNET_RISE],[55,t.THUNDERBOLT],[60,t.ELECTRIC_TERRAIN],[65,t.POWER_WHIP],[70,t.ZAP_CANNON]],[e.CELESTEELA]:[[1,t.TACKLE],[1,t.ABSORB],[5,t.HARDEN],[10,t.WIDE_GUARD],[15,t.MEGA_DRAIN],[20,t.SMACK_DOWN],[25,t.INGRAIN],[30,t.AUTOTOMIZE],[35,t.GIGA_DRAIN],[40,t.FLASH_CANNON],[45,t.METAL_SOUND],[50,t.IRON_DEFENSE],[55,t.LEECH_SEED],[60,t.HEAVY_SLAM],[65,t.DOUBLE_EDGE],[70,t.SKULL_BASH]],[e.KARTANA]:[[1,t.FURY_CUTTER],[1,t.VACUUM_WAVE],[5,t.RAZOR_LEAF],[10,t.FALSE_SWIPE],[15,t.CUT],[20,t.AIR_CUTTER],[25,t.AERIAL_ACE],[30,t.DETECT],[35,t.NIGHT_SLASH],[40,t.SYNTHESIS],[45,t.LASER_FOCUS],[50,t.DEFOG],[55,t.LEAF_BLADE],[60,t.SACRED_SWORD],[65,t.SWORDS_DANCE],[70,t.GUILLOTINE]],[e.GUZZLORD]:[[1,t.BITE],[1,t.DRAGON_TAIL],[5,t.STOCKPILE],[5,t.SWALLOW],[10,t.KNOCK_OFF],[15,t.STOMP],[20,t.STOMPING_TANTRUM],[25,t.WIDE_GUARD],[30,t.CRUNCH],[35,t.BODY_SLAM],[40,t.GASTRO_ACID],[45,t.HAMMER_ARM],[50,t.HEAVY_SLAM],[55,t.DRAGON_RUSH],[60,t.BELCH],[65,t.THRASH],[70,t.GIGA_IMPACT]],[e.NECROZMA]:[[1,t.CONFUSION],[1,t.METAL_CLAW],[1,t.MORNING_SUN],[1,t.MOONLIGHT],[1,t.GRAVITY],[1,t.CHARGE_BEAM],[1,t.MIRROR_SHOT],[8,t.STEALTH_ROCK],[16,t.SLASH],[24,t.NIGHT_SLASH],[32,t.PSYCHO_CUT],[40,t.STORED_POWER],[48,t.ROCK_BLAST],[56,t.IRON_DEFENSE],[64,t.POWER_GEM],[72,t.PHOTON_GEYSER],[80,t.AUTOTOMIZE],[88,t.PRISMATIC_LASER]],[e.MAGEARNA]:[[1,t.HELPING_HAND],[1,t.GYRO_BALL],[1,t.DISARMING_VOICE],[1,t.CRAFTY_SHIELD],[1,t.GEAR_UP],[6,t.DEFENSE_CURL],[12,t.ROLLOUT],[18,t.IRON_DEFENSE],[24,t.MAGNETIC_FLUX],[30,t.PSYBEAM],[36,t.AURORA_BEAM],[42,t.LOCK_ON],[48,t.SHIFT_GEAR],[54,t.TRICK],[60,t.IRON_HEAD],[66,t.AURA_SPHERE],[72,t.FLASH_CANNON],[78,t.PAIN_SPLIT],[84,t.ZAP_CANNON],[90,t.FLEUR_CANNON]],[e.MARSHADOW]:[[1,t.FIRE_PUNCH],[1,t.ICE_PUNCH],[1,t.THUNDER_PUNCH],[1,t.COUNTER],[1,t.FEINT],[1,t.COPYCAT],[1,t.SHADOW_SNEAK],[1,t.PURSUIT],[9,t.ROLE_PLAY],[18,t.SHADOW_PUNCH],[27,t.FORCE_PALM],[36,t.ASSURANCE],[45,t.SUCKER_PUNCH],[54,t.DRAIN_PUNCH],[63,t.PSYCH_UP],[72,t.SPECTRAL_THIEF],[81,t.LASER_FOCUS],[90,t.ENDEAVOR],[99,t.CLOSE_COMBAT]],[e.POIPOLE]:[[X,t.DRAGON_PULSE],[1,t.GROWL],[1,t.ACID],[1,t.PECK],[1,t.HELPING_HAND],[7,t.FURY_ATTACK],[14,t.FELL_STINGER],[21,t.CHARM],[28,t.VENOSHOCK],[35,t.VENOM_DRENCH],[42,t.NASTY_PLOT],[49,t.POISON_JAB],[56,t.GASTRO_ACID],[63,t.TOXIC]],[e.NAGANADEL]:[[Ee,t.AIR_CUTTER],[1,t.GROWL],[1,t.ACID],[1,t.PECK],[1,t.HELPING_HAND],[1,t.AIR_SLASH],[1,t.DRAGON_PULSE],[7,t.FURY_ATTACK],[14,t.FELL_STINGER],[21,t.CHARM],[28,t.VENOSHOCK],[35,t.VENOM_DRENCH],[42,t.NASTY_PLOT],[49,t.POISON_JAB],[56,t.GASTRO_ACID],[63,t.TOXIC],[70,t.DRAGON_RUSH]],[e.STAKATAKA]:[[1,t.TACKLE],[1,t.HARDEN],[5,t.ROCK_THROW],[10,t.PROTECT],[15,t.STOMP],[20,t.BLOCK],[25,t.ROCK_SLIDE],[30,t.WIDE_GUARD],[35,t.AUTOTOMIZE],[40,t.ROCK_BLAST],[45,t.MAGNET_RISE],[50,t.IRON_DEFENSE],[55,t.IRON_HEAD],[60,t.TAKE_DOWN],[65,t.STEALTH_ROCK],[70,t.DOUBLE_EDGE]],[e.BLACEPHALON]:[[1,t.FIRE_SPIN],[1,t.ASTONISH],[5,t.LIGHT_SCREEN],[10,t.EMBER],[15,t.NIGHT_SHADE],[20,t.CONFUSE_RAY],[25,t.MAGIC_COAT],[30,t.INCINERATE],[35,t.HYPNOSIS],[40,t.MYSTICAL_FIRE],[45,t.SHADOW_BALL],[50,t.CALM_MIND],[55,t.WILL_O_WISP],[60,t.TRICK],[65,t.FIRE_BLAST],[70,t.MIND_BLOWN]],[e.ZERAORA]:[[1,t.SCRATCH],[1,t.QUICK_ATTACK],[1,t.SPARK],[1,t.FAKE_OUT],[1,t.SNARL],[1,t.POWER_UP_PUNCH],[8,t.FURY_SWIPES],[16,t.QUICK_GUARD],[24,t.SLASH],[32,t.VOLT_SWITCH],[40,t.CHARGE],[48,t.THUNDER_PUNCH],[56,t.HONE_CLAWS],[64,t.DISCHARGE],[72,t.WILD_CHARGE],[80,t.AGILITY],[88,t.PLASMA_FISTS],[96,t.CLOSE_COMBAT]],[e.MELTAN]:[[1,t.THUNDER_SHOCK],[1,t.HARDEN],[8,t.TAIL_WHIP],[16,t.HEADBUTT],[24,t.THUNDER_WAVE],[32,t.ACID_ARMOR],[40,t.FLASH_CANNON]],[e.MELMETAL]:[[Ee,t.THUNDER_PUNCH],[1,t.HEADBUTT],[1,t.TAIL_WHIP],[1,t.THUNDER_SHOCK],[1,t.HARDEN],[24,t.THUNDER_WAVE],[32,t.ACID_ARMOR],[40,t.FLASH_CANNON],[48,t.MEGA_PUNCH],[56,t.PROTECT],[64,t.DISCHARGE],[72,t.DYNAMIC_PUNCH],[80,t.SUPERPOWER],[88,t.DOUBLE_IRON_BASH],[96,t.HYPER_BEAM]],[e.GROOKEY]:[[1,t.SCRATCH],[1,t.GROWL],[5,t.BRANCH_POKE],[8,t.TAUNT],[12,t.RAZOR_LEAF],[17,t.SCREECH],[20,t.KNOCK_OFF],[24,t.SLAM],[28,t.UPROAR],[32,t.WOOD_HAMMER],[36,t.ENDEAVOR]],[e.THWACKEY]:[[Ee,t.DOUBLE_HIT],[1,t.SCRATCH],[1,t.GROWL],[1,t.TAUNT],[1,t.BRANCH_POKE],[12,t.RAZOR_LEAF],[19,t.SCREECH],[24,t.KNOCK_OFF],[30,t.SLAM],[36,t.UPROAR],[42,t.WOOD_HAMMER],[48,t.ENDEAVOR]],[e.RILLABOOM]:[[Ee,t.DRUM_BEATING],[1,t.SCRATCH],[1,t.GROWL],[1,t.TAUNT],[1,t.DOUBLE_HIT],[1,t.NOBLE_ROAR],[1,t.GRASSY_TERRAIN],[1,t.BRANCH_POKE],[12,t.RAZOR_LEAF],[19,t.SCREECH],[24,t.KNOCK_OFF],[30,t.SLAM],[38,t.UPROAR],[46,t.WOOD_HAMMER],[54,t.ENDEAVOR],[62,t.BOOMBURST]],[e.SCORBUNNY]:[[1,t.TACKLE],[1,t.GROWL],[5,t.EMBER],[8,t.QUICK_ATTACK],[12,t.DOUBLE_KICK],[17,t.FLAME_CHARGE],[20,t.AGILITY],[24,t.HEADBUTT],[28,t.COUNTER],[32,t.BOUNCE],[36,t.DOUBLE_EDGE]],[e.RABOOT]:[[1,t.TACKLE],[1,t.GROWL],[1,t.EMBER],[1,t.QUICK_ATTACK],[12,t.DOUBLE_KICK],[19,t.FLAME_CHARGE],[24,t.AGILITY],[30,t.HEADBUTT],[36,t.COUNTER],[42,t.BOUNCE],[48,t.DOUBLE_EDGE]],[e.CINDERACE]:[[Ee,t.PYRO_BALL],[1,t.TACKLE],[1,t.GROWL],[1,t.EMBER],[1,t.QUICK_ATTACK],[1,t.FEINT],[12,t.DOUBLE_KICK],[19,t.FLAME_CHARGE],[24,t.AGILITY],[30,t.HEADBUTT],[38,t.COUNTER],[46,t.BOUNCE],[54,t.DOUBLE_EDGE],[62,t.COURT_CHANGE]],[e.SOBBLE]:[[1,t.POUND],[1,t.GROWL],[5,t.WATER_GUN],[8,t.BIND],[12,t.WATER_PULSE],[17,t.TEARFUL_LOOK],[20,t.SUCKER_PUNCH],[24,t.U_TURN],[28,t.LIQUIDATION],[32,t.SOAK],[36,t.RAIN_DANCE]],[e.DRIZZILE]:[[1,t.POUND],[1,t.BIND],[1,t.GROWL],[1,t.WATER_GUN],[12,t.WATER_PULSE],[19,t.TEARFUL_LOOK],[24,t.SUCKER_PUNCH],[30,t.U_TURN],[36,t.LIQUIDATION],[42,t.SOAK],[48,t.RAIN_DANCE]],[e.INTELEON]:[[Ee,t.SNIPE_SHOT],[1,t.POUND],[1,t.BIND],[1,t.GROWL],[1,t.WATER_GUN],[1,t.ACROBATICS],[12,t.WATER_PULSE],[19,t.TEARFUL_LOOK],[24,t.SUCKER_PUNCH],[30,t.U_TURN],[38,t.LIQUIDATION],[46,t.SOAK],[54,t.RAIN_DANCE],[62,t.HYDRO_PUMP]],[e.SKWOVET]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.BITE],[10,t.STUFF_CHEEKS],[15,t.STOCKPILE],[15,t.SPIT_UP],[15,t.SWALLOW],[20,t.BODY_SLAM],[25,t.REST],[30,t.COUNTER],[35,t.BULLET_SEED],[40,t.SUPER_FANG],[45,t.BELCH]],[e.GREEDENT]:[[Ee,t.COVET],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.BITE],[1,t.STUFF_CHEEKS],[15,t.STOCKPILE],[15,t.SPIT_UP],[15,t.SWALLOW],[20,t.BODY_SLAM],[27,t.REST],[34,t.COUNTER],[41,t.BULLET_SEED],[48,t.SUPER_FANG],[55,t.BELCH]],[e.ROOKIDEE]:[[1,t.LEER],[1,t.PECK],[4,t.POWER_TRIP],[8,t.HONE_CLAWS],[12,t.FURY_ATTACK],[16,t.PLUCK],[20,t.TAUNT],[24,t.SCARY_FACE],[28,t.DRILL_PECK],[32,t.SWAGGER],[36,t.BRAVE_BIRD]],[e.CORVISQUIRE]:[[1,t.LEER],[1,t.PECK],[1,t.HONE_CLAWS],[1,t.POWER_TRIP],[12,t.FURY_ATTACK],[16,t.PLUCK],[22,t.TAUNT],[28,t.SCARY_FACE],[34,t.DRILL_PECK],[40,t.SWAGGER],[46,t.BRAVE_BIRD]],[e.CORVIKNIGHT]:[[Ee,t.STEEL_WING],[1,t.LEER],[1,t.PECK],[1,t.SCREECH],[1,t.METAL_SOUND],[1,t.IRON_DEFENSE],[1,t.HONE_CLAWS],[1,t.POWER_TRIP],[12,t.FURY_ATTACK],[16,t.PLUCK],[22,t.TAUNT],[28,t.SCARY_FACE],[34,t.DRILL_PECK],[42,t.SWAGGER],[50,t.BRAVE_BIRD]],[e.BLIPBUG]:[[1,t.STRUGGLE_BUG]],[e.DOTTLER]:[[Ee,t.CONFUSION],[Ee,t.LIGHT_SCREEN],[Ee,t.REFLECT],[1,t.CONFUSION],[1,t.LIGHT_SCREEN],[1,t.REFLECT],[1,t.STRUGGLE_BUG]],[e.ORBEETLE]:[[1,t.CONFUSION],[1,t.LIGHT_SCREEN],[1,t.REFLECT],[1,t.STRUGGLE_BUG],[4,t.CONFUSE_RAY],[8,t.MAGIC_COAT],[12,t.AGILITY],[16,t.PSYBEAM],[20,t.HYPNOSIS],[24,t.ALLY_SWITCH],[28,t.BUG_BUZZ],[32,t.MIRROR_COAT],[36,t.PSYCHIC],[40,t.AFTER_YOU],[44,t.CALM_MIND],[48,t.PSYCHIC_TERRAIN]],[e.NICKIT]:[[1,t.TAIL_WHIP],[1,t.QUICK_ATTACK],[4,t.BEAT_UP],[8,t.HONE_CLAWS],[12,t.SNARL],[16,t.ASSURANCE],[20,t.NASTY_PLOT],[24,t.SUCKER_PUNCH],[28,t.NIGHT_SLASH],[32,t.TAIL_SLAP],[36,t.FOUL_PLAY]],[e.THIEVUL]:[[Ee,t.THIEF],[1,t.TAIL_WHIP],[1,t.QUICK_ATTACK],[1,t.BEAT_UP],[1,t.HONE_CLAWS],[12,t.SNARL],[16,t.ASSURANCE],[22,t.NASTY_PLOT],[28,t.SUCKER_PUNCH],[34,t.NIGHT_SLASH],[40,t.TAIL_SLAP],[46,t.FOUL_PLAY],[52,t.PARTING_SHOT]],[e.GOSSIFLEUR]:[[1,t.SING],[1,t.LEAFAGE],[4,t.RAPID_SPIN],[8,t.SWEET_SCENT],[12,t.RAZOR_LEAF],[16,t.ROUND],[21,t.LEAF_TORNADO],[24,t.SYNTHESIS],[28,t.HYPER_VOICE],[32,t.AROMATHERAPY],[36,t.LEAF_STORM]],[e.ELDEGOSS]:[[Ee,t.COTTON_SPORE],[1,t.SING],[1,t.RAPID_SPIN],[1,t.SWEET_SCENT],[1,t.LEAFAGE],[12,t.RAZOR_LEAF],[16,t.ROUND],[23,t.LEAF_TORNADO],[28,t.SYNTHESIS],[34,t.HYPER_VOICE],[40,t.AROMATHERAPY],[46,t.LEAF_STORM],[52,t.COTTON_GUARD]],[e.WOOLOO]:[[1,t.TACKLE],[1,t.GROWL],[4,t.DEFENSE_CURL],[8,t.COPYCAT],[12,t.GUARD_SPLIT],[16,t.DOUBLE_KICK],[21,t.HEADBUTT],[25,t.TAKE_DOWN],[28,t.GUARD_SWAP],[32,t.REVERSAL],[36,t.COTTON_GUARD],[40,t.DOUBLE_EDGE]],[e.DUBWOOL]:[[1,t.TACKLE],[1,t.GROWL],[1,t.DEFENSE_CURL],[1,t.COPYCAT],[12,t.GUARD_SPLIT],[16,t.DOUBLE_KICK],[21,t.HEADBUTT],[27,t.TAKE_DOWN],[32,t.GUARD_SWAP],[38,t.REVERSAL],[44,t.COTTON_GUARD],[50,t.DOUBLE_EDGE],[56,t.LAST_RESORT]],[e.CHEWTLE]:[[1,t.TACKLE],[1,t.WATER_GUN],[7,t.BITE],[14,t.PROTECT],[21,t.HEADBUTT],[28,t.COUNTER],[35,t.JAW_LOCK],[42,t.LIQUIDATION],[49,t.BODY_SLAM]],[e.DREDNAW]:[[Ee,t.ROCK_TOMB],[1,t.TACKLE],[1,t.BITE],[1,t.WATER_GUN],[1,t.PROTECT],[1,t.CRUNCH],[1,t.ROCK_POLISH],[1,t.RAZOR_SHELL],[21,t.HEADBUTT],[30,t.COUNTER],[39,t.JAW_LOCK],[48,t.LIQUIDATION],[57,t.BODY_SLAM],[66,t.HEAD_SMASH]],[e.YAMPER]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.NUZZLE],[10,t.BITE],[15,t.ROAR],[20,t.SPARK],[26,t.CHARM],[30,t.CRUNCH],[35,t.CHARGE],[40,t.WILD_CHARGE],[45,t.PLAY_ROUGH]],[e.BOLTUND]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.BITE],[1,t.ELECTRIFY],[1,t.NUZZLE],[15,t.ROAR],[20,t.SPARK],[28,t.CHARM],[34,t.CRUNCH],[41,t.CHARGE],[48,t.WILD_CHARGE],[55,t.PLAY_ROUGH],[62,t.ELECTRIC_TERRAIN]],[e.ROLYCOLY]:[[1,t.TACKLE],[1,t.SMOKESCREEN],[5,t.RAPID_SPIN],[10,t.SMACK_DOWN],[15,t.ROCK_POLISH],[20,t.ANCIENT_POWER],[25,t.INCINERATE],[30,t.STEALTH_ROCK],[35,t.HEAT_CRASH],[40,t.ROCK_BLAST]],[e.CARKOL]:[[Ee,t.FLAME_CHARGE],[1,t.TACKLE],[1,t.SMOKESCREEN],[1,t.RAPID_SPIN],[1,t.SMACK_DOWN],[15,t.ROCK_POLISH],[20,t.ANCIENT_POWER],[27,t.INCINERATE],[35,t.STEALTH_ROCK],[41,t.HEAT_CRASH],[48,t.ROCK_BLAST],[55,t.STONE_EDGE]],[e.COALOSSAL]:[[Ee,t.TAR_SHOT],[1,t.TACKLE],[1,t.SMOKESCREEN],[1,t.RAPID_SPIN],[1,t.SMACK_DOWN],[1,t.FLAME_CHARGE],[15,t.ROCK_POLISH],[20,t.ANCIENT_POWER],[27,t.INCINERATE],[37,t.STEALTH_ROCK],[45,t.HEAT_CRASH],[54,t.ROCK_BLAST],[63,t.STONE_EDGE]],[e.APPLIN]:[[1,t.WITHDRAW],[1,t.ASTONISH],[1,t.LEAFAGE]],[e.FLAPPLE]:[[Ee,t.WING_ATTACK],[1,t.LEAFAGE],[1,t.GROWTH],[1,t.WITHDRAW],[1,t.TWISTER],[1,t.RECYCLE],[1,t.ASTONISH],[4,t.ACID_SPRAY],[8,t.ACROBATICS],[12,t.LEECH_SEED],[16,t.PROTECT],[20,t.DRAGON_BREATH],[24,t.DRAGON_DANCE],[28,t.DRAGON_PULSE],[32,t.GRAV_APPLE],[36,t.IRON_DEFENSE],[40,t.FLY],[44,t.DRAGON_RUSH]],[e.APPLETUN]:[[Ee,t.HEADBUTT],[1,t.LEAFAGE],[1,t.GROWTH],[1,t.WITHDRAW],[1,t.SWEET_SCENT],[1,t.RECYCLE],[1,t.ASTONISH],[4,t.CURSE],[8,t.STOMP],[12,t.LEECH_SEED],[16,t.PROTECT],[20,t.BULLET_SEED],[24,t.RECOVER],[28,t.APPLE_ACID],[32,t.BODY_SLAM],[36,t.IRON_DEFENSE],[40,t.DRAGON_PULSE],[44,t.ENERGY_BALL]],[e.SILICOBRA]:[[1,t.SAND_ATTACK],[1,t.WRAP],[1,t.MUD_SLAP],[5,t.MINIMIZE],[10,t.BRUTAL_SWING],[15,t.BULLDOZE],[20,t.HEADBUTT],[25,t.GLARE],[30,t.DIG],[35,t.SANDSTORM],[40,t.SLAM],[45,t.COIL],[50,t.SAND_TOMB]],[e.SANDACONDA]:[[1,t.SAND_ATTACK],[1,t.WRAP],[1,t.MUD_SLAP],[1,t.MINIMIZE],[1,t.BRUTAL_SWING],[15,t.BULLDOZE],[20,t.HEADBUTT],[25,t.GLARE],[30,t.DIG],[35,t.SANDSTORM],[42,t.SLAM],[49,t.COIL],[51,t.SAND_TOMB]],[e.CRAMORANT]:[[X,t.BELCH],[1,t.PECK],[1,t.STOCKPILE],[1,t.SPIT_UP],[1,t.SWALLOW],[7,t.WATER_GUN],[14,t.FURY_ATTACK],[21,t.PLUCK],[28,t.DIVE],[35,t.DRILL_PECK],[42,t.AMNESIA],[49,t.THRASH],[56,t.HYDRO_PUMP]],[e.ARROKUDA]:[[1,t.PECK],[1,t.AQUA_JET],[6,t.FURY_ATTACK],[12,t.BITE],[18,t.AGILITY],[24,t.DIVE],[30,t.FOCUS_ENERGY],[36,t.CRUNCH],[42,t.LIQUIDATION],[48,t.DOUBLE_EDGE]],[e.BARRASKEWDA]:[[1,t.FURY_ATTACK],[1,t.BITE],[1,t.PECK],[1,t.AQUA_JET],[1,t.THROAT_CHOP],[18,t.AGILITY],[24,t.DIVE],[32,t.FOCUS_ENERGY],[40,t.CRUNCH],[48,t.LIQUIDATION],[56,t.DOUBLE_EDGE]],[e.TOXEL]:[[1,t.GROWL],[1,t.ACID],[1,t.FLAIL],[1,t.BELCH],[1,t.NUZZLE],[1,t.TEARFUL_LOOK]],[e.TOXTRICITY]:[[Ee,t.SPARK],[1,t.LEER],[1,t.GROWL],[1,t.ACID],[1,t.THUNDER_SHOCK],[1,t.FLAIL],[1,t.ACID_SPRAY],[1,t.BELCH],[1,t.NOBLE_ROAR],[1,t.NUZZLE],[1,t.TEARFUL_LOOK],[4,t.CHARGE],[8,t.SHOCK_WAVE],[12,t.SCARY_FACE],[16,t.TAUNT],[24,t.SCREECH],[28,t.SWAGGER],[32,t.TOXIC],[36,t.DISCHARGE],[40,t.POISON_JAB],[44,t.OVERDRIVE],[48,t.BOOMBURST],[52,t.SHIFT_GEAR]],[e.SIZZLIPEDE]:[[1,t.EMBER],[1,t.SMOKESCREEN],[5,t.WRAP],[10,t.BITE],[15,t.FLAME_WHEEL],[20,t.BUG_BITE],[25,t.COIL],[30,t.SLAM],[35,t.FIRE_SPIN],[40,t.CRUNCH],[45,t.FIRE_LASH],[50,t.LUNGE],[55,t.BURN_UP]],[e.CENTISKORCH]:[[1,t.WRAP],[1,t.BITE],[1,t.EMBER],[1,t.SMOKESCREEN],[1,t.INFERNO],[15,t.FLAME_WHEEL],[20,t.BUG_BITE],[25,t.COIL],[32,t.SLAM],[39,t.FIRE_SPIN],[46,t.CRUNCH],[53,t.FIRE_LASH],[60,t.LUNGE],[67,t.BURN_UP]],[e.CLOBBOPUS]:[[1,t.LEER],[1,t.ROCK_SMASH],[5,t.FEINT],[10,t.BIND],[15,t.DETECT],[20,t.BRICK_BREAK],[25,t.BULK_UP],[30,t.SUBMISSION],[35,t.TAUNT],[40,t.REVERSAL],[45,t.SUPERPOWER]],[e.GRAPPLOCT]:[[Ee,t.OCTOLOCK],[1,t.BIND],[1,t.LEER],[1,t.OCTAZOOKA],[1,t.ROCK_SMASH],[1,t.FEINT],[15,t.DETECT],[20,t.BRICK_BREAK],[25,t.BULK_UP],[30,t.SUBMISSION],[35,t.TAUNT],[40,t.REVERSAL],[45,t.SUPERPOWER],[50,t.TOPSY_TURVY]],[e.SINISTEA]:[[1,t.WITHDRAW],[1,t.ASTONISH],[1,t.ABSORB],[6,t.AROMATIC_MIST],[12,t.MEGA_DRAIN],[24,t.SUCKER_PUNCH],[30,t.SWEET_SCENT],[36,t.GIGA_DRAIN],[42,t.NASTY_PLOT],[48,t.SHADOW_BALL],[54,t.MEMENTO],[60,t.SHELL_SMASH]],[e.POLTEAGEIST]:[[Ee,t.TEATIME],[1,t.ABSORB],[1,t.MEGA_DRAIN],[1,t.WITHDRAW],[1,t.ASTONISH],[1,t.AROMATIC_MIST],[1,t.STRENGTH_SAP],[18,t.PROTECT],[24,t.SUCKER_PUNCH],[30,t.SWEET_SCENT],[36,t.GIGA_DRAIN],[42,t.NASTY_PLOT],[48,t.SHADOW_BALL],[54,t.MEMENTO],[60,t.SHELL_SMASH],[66,t.CURSE]],[e.HATENNA]:[[1,t.CONFUSION],[1,t.PLAY_NICE],[5,t.LIFE_DEW],[10,t.DISARMING_VOICE],[15,t.AROMATIC_MIST],[20,t.PSYBEAM],[25,t.HEAL_PULSE],[30,t.DAZZLING_GLEAM],[35,t.CALM_MIND],[40,t.PSYCHIC],[45,t.HEALING_WISH]],[e.HATTREM]:[[Ee,t.BRUTAL_SWING],[1,t.CONFUSION],[1,t.DISARMING_VOICE],[1,t.PLAY_NICE],[1,t.LIFE_DEW],[15,t.AROMATIC_MIST],[20,t.PSYBEAM],[25,t.HEAL_PULSE],[30,t.DAZZLING_GLEAM],[37,t.CALM_MIND],[44,t.PSYCHIC],[51,t.HEALING_WISH]],[e.HATTERENE]:[[Ee,t.PSYCHO_CUT],[1,t.CONFUSION],[1,t.DISARMING_VOICE],[1,t.PLAY_NICE],[1,t.BRUTAL_SWING],[1,t.LIFE_DEW],[15,t.AROMATIC_MIST],[20,t.PSYBEAM],[25,t.HEAL_PULSE],[30,t.DAZZLING_GLEAM],[37,t.CALM_MIND],[46,t.PSYCHIC],[55,t.HEALING_WISH],[64,t.MAGIC_POWDER]],[e.IMPIDIMP]:[[1,t.FAKE_OUT],[1,t.CONFIDE],[4,t.BITE],[8,t.FLATTER],[12,t.FAKE_TEARS],[16,t.ASSURANCE],[20,t.SWAGGER],[24,t.SUCKER_PUNCH],[28,t.TORMENT],[33,t.DARK_PULSE],[36,t.NASTY_PLOT],[40,t.PLAY_ROUGH],[44,t.FOUL_PLAY]],[e.MORGREM]:[[Ee,t.FALSE_SURRENDER],[1,t.BITE],[1,t.FAKE_OUT],[1,t.FLATTER],[1,t.CONFIDE],[12,t.FAKE_TEARS],[16,t.ASSURANCE],[20,t.SWAGGER],[24,t.SUCKER_PUNCH],[28,t.TORMENT],[35,t.DARK_PULSE],[40,t.NASTY_PLOT],[46,t.PLAY_ROUGH],[52,t.FOUL_PLAY]],[e.GRIMMSNARL]:[[Ee,t.SPIRIT_BREAK],[1,t.BITE],[1,t.FAKE_OUT],[1,t.FLATTER],[1,t.BULK_UP],[1,t.CONFIDE],[1,t.FALSE_SURRENDER],[12,t.FAKE_TEARS],[16,t.ASSURANCE],[20,t.SWAGGER],[24,t.SUCKER_PUNCH],[28,t.TORMENT],[35,t.DARK_PULSE],[40,t.NASTY_PLOT],[48,t.PLAY_ROUGH],[56,t.FOUL_PLAY],[64,t.HAMMER_ARM]],[e.OBSTAGOON]:[[Ee,t.OBSTRUCT],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.PIN_MISSILE],[1,t.LEER],[1,t.SUBMISSION],[1,t.LICK],[1,t.CROSS_CHOP],[1,t.NIGHT_SLASH],[1,t.SWITCHEROO],[1,t.BABY_DOLL_EYES],[9,t.SNARL],[12,t.HEADBUTT],[15,t.HONE_CLAWS],[18,t.FURY_SWIPES],[23,t.REST],[28,t.TAKE_DOWN],[35,t.SCARY_FACE],[42,t.COUNTER],[49,t.TAUNT],[56,t.DOUBLE_EDGE]],[e.PERRSERKER]:[[Ee,t.IRON_HEAD],[1,t.SCRATCH],[1,t.GROWL],[1,t.FAKE_OUT],[1,t.IRON_DEFENSE],[1,t.METAL_BURST],[1,t.HONE_CLAWS],[12,t.PAY_DAY],[16,t.METAL_CLAW],[20,t.TAUNT],[24,t.SWAGGER],[31,t.FURY_SWIPES],[36,t.SCREECH],[42,t.SLASH],[48,t.METAL_SOUND],[54,t.THRASH]],[e.CURSOLA]:[[1,t.TACKLE],[1,t.DISABLE],[1,t.HARDEN],[1,t.PERISH_SONG],[1,t.ASTONISH],[15,t.SPITE],[20,t.ANCIENT_POWER],[25,t.HEX],[30,t.CURSE],[35,t.STRENGTH_SAP],[40,t.POWER_GEM],[45,t.NIGHT_SHADE],[50,t.GRUDGE],[55,t.MIRROR_COAT]],[e.SIRFETCHD]:[[Ee,t.IRON_DEFENSE],[1,t.SAND_ATTACK],[1,t.LEER],[1,t.PECK],[1,t.FURY_CUTTER],[1,t.FIRST_IMPRESSION],[15,t.ROCK_SMASH],[20,t.BRUTAL_SWING],[25,t.DETECT],[30,t.KNOCK_OFF],[35,t.DEFOG],[40,t.BRICK_BREAK],[45,t.SWORDS_DANCE],[50,t.SLAM],[55,t.LEAF_BLADE],[60,t.FINAL_GAMBIT],[65,t.BRAVE_BIRD],[70,t.METEOR_ASSAULT]],[e.MR_RIME]:[[1,t.POUND],[1,t.BARRIER],[1,t.TICKLE],[1,t.MIMIC],[1,t.LIGHT_SCREEN],[1,t.REFLECT],[1,t.PROTECT],[1,t.SAFEGUARD],[1,t.BATON_PASS],[1,t.ENCORE],[1,t.RAPID_SPIN],[1,t.ROLE_PLAY],[1,t.RECYCLE],[1,t.SLACK_OFF],[1,t.FAKE_TEARS],[1,t.BLOCK],[1,t.COPYCAT],[1,t.ICE_SHARD],[1,t.AFTER_YOU],[1,t.MISTY_TERRAIN],[1,t.DAZZLING_GLEAM],[12,t.CONFUSION],[16,t.ALLY_SWITCH],[20,t.ICY_WIND],[24,t.DOUBLE_KICK],[28,t.PSYBEAM],[32,t.HYPNOSIS],[36,t.MIRROR_COAT],[40,t.SUCKER_PUNCH],[44,t.FREEZE_DRY],[48,t.PSYCHIC],[52,t.TEETER_DANCE]],[e.RUNERIGUS]:[[Ee,t.SHADOW_CLAW],[1,t.NIGHT_SHADE],[1,t.HAZE],[1,t.PROTECT],[1,t.SCARY_FACE],[1,t.ASTONISH],[12,t.DISABLE],[16,t.BRUTAL_SWING],[20,t.CRAFTY_SHIELD],[24,t.HEX],[28,t.MEAN_LOOK],[32,t.SLAM],[38,t.CURSE],[44,t.SHADOW_BALL],[50,t.EARTHQUAKE],[56,t.GUARD_SPLIT],[56,t.POWER_SPLIT],[62,t.DESTINY_BOND]],[e.MILCERY]:[[1,t.TACKLE],[1,t.AROMATIC_MIST],[5,t.SWEET_KISS],[10,t.SWEET_SCENT],[15,t.DRAINING_KISS],[20,t.AROMATHERAPY],[25,t.ATTRACT],[30,t.ACID_ARMOR],[35,t.DAZZLING_GLEAM],[40,t.RECOVER],[45,t.MISTY_TERRAIN],[50,t.ENTRAINMENT]],[e.ALCREMIE]:[[Ee,t.DECORATE],[1,t.TACKLE],[1,t.SWEET_KISS],[1,t.SWEET_SCENT],[1,t.AROMATIC_MIST],[15,t.DRAINING_KISS],[20,t.AROMATHERAPY],[25,t.ATTRACT],[30,t.ACID_ARMOR],[35,t.DAZZLING_GLEAM],[40,t.RECOVER],[45,t.MISTY_TERRAIN],[50,t.ENTRAINMENT]],[e.FALINKS]:[[1,t.TACKLE],[1,t.PROTECT],[5,t.ROCK_SMASH],[10,t.FOCUS_ENERGY],[15,t.HEADBUTT],[20,t.BULK_UP],[25,t.ENDURE],[30,t.REVERSAL],[35,t.FIRST_IMPRESSION],[40,t.NO_RETREAT],[45,t.IRON_DEFENSE],[50,t.CLOSE_COMBAT],[55,t.MEGAHORN],[60,t.COUNTER]],[e.PINCURCHIN]:[[1,t.PECK],[1,t.THUNDER_SHOCK],[5,t.WATER_GUN],[10,t.CHARGE],[15,t.FURY_ATTACK],[20,t.SPARK],[25,t.BUBBLE_BEAM],[30,t.RECOVER],[35,t.CURSE],[40,t.ELECTRIC_TERRAIN],[45,t.POISON_JAB],[50,t.ZING_ZAP],[55,t.ACUPRESSURE],[60,t.DISCHARGE]],[e.SNOM]:[[1,t.POWDER_SNOW],[1,t.STRUGGLE_BUG]],[e.FROSMOTH]:[[Ee,t.ICY_WIND],[1,t.POWDER_SNOW],[1,t.ATTRACT],[1,t.HELPING_HAND],[1,t.STRUGGLE_BUG],[4,t.STUN_SPORE],[8,t.INFESTATION],[12,t.MIST],[16,t.DEFOG],[21,t.FEATHER_DANCE],[24,t.AURORA_BEAM],[28,t.SNOWSCAPE],[32,t.BUG_BUZZ],[36,t.AURORA_VEIL],[40,t.BLIZZARD],[44,t.TAILWIND],[48,t.WIDE_GUARD],[52,t.QUIVER_DANCE]],[e.STONJOURNER]:[[1,t.ROCK_THROW],[1,t.BLOCK],[6,t.ROCK_POLISH],[12,t.ROCK_TOMB],[18,t.GRAVITY],[24,t.STOMP],[30,t.STEALTH_ROCK],[36,t.ROCK_SLIDE],[42,t.BODY_SLAM],[48,t.WIDE_GUARD],[54,t.HEAVY_SLAM],[60,t.STONE_EDGE],[66,t.MEGA_KICK]],[e.EISCUE]:[[1,t.TACKLE],[1,t.POWDER_SNOW],[6,t.MIST],[12,t.WEATHER_BALL],[18,t.ICY_WIND],[24,t.HEADBUTT],[30,t.AMNESIA],[36,t.FREEZE_DRY],[42,t.SNOWSCAPE],[48,t.AURORA_VEIL],[54,t.SURF],[60,t.BLIZZARD]],[e.INDEEDEE]:[[1,t.STORED_POWER],[1,t.PLAY_NICE],[5,t.ENCORE],[10,t.DISARMING_VOICE],[15,t.PSYBEAM],[20,t.HELPING_HAND],[25,t.AFTER_YOU],[30,t.HEALING_WISH],[35,t.PSYCHIC],[40,t.CALM_MIND],[45,t.POWER_SPLIT],[50,t.PSYCHIC_TERRAIN],[55,t.LAST_RESORT]],[e.MORPEKO]:[[1,t.TAIL_WHIP],[1,t.THUNDER_SHOCK],[5,t.LEER],[10,t.POWER_TRIP],[15,t.QUICK_ATTACK],[20,t.FLATTER],[25,t.BITE],[30,t.SPARK],[35,t.TORMENT],[40,t.AGILITY],[45,t.BULLET_SEED],[50,t.CRUNCH],[55,t.AURA_WHEEL],[60,t.THRASH]],[e.CUFANT]:[[1,t.TACKLE],[1,t.GROWL],[5,t.ROLLOUT],[10,t.ROCK_SMASH],[15,t.BULLDOZE],[20,t.STOMP],[25,t.IRON_DEFENSE],[30,t.DIG],[35,t.STRENGTH],[40,t.IRON_HEAD],[45,t.PLAY_ROUGH],[50,t.HIGH_HORSEPOWER],[55,t.SUPERPOWER]],[e.COPPERAJAH]:[[Ee,t.HEAVY_SLAM],[1,t.TACKLE],[1,t.GROWL],[1,t.ROLLOUT],[1,t.ROCK_SMASH],[15,t.BULLDOZE],[20,t.STOMP],[25,t.IRON_DEFENSE],[30,t.DIG],[37,t.STRENGTH],[44,t.IRON_HEAD],[51,t.PLAY_ROUGH],[58,t.HIGH_HORSEPOWER],[65,t.SUPERPOWER]],[e.DRACOZOLT]:[[1,t.TACKLE],[1,t.THUNDER_SHOCK],[7,t.CHARGE],[14,t.AERIAL_ACE],[21,t.ANCIENT_POWER],[28,t.PLUCK],[35,t.DRAGON_TAIL],[42,t.STOMP],[49,t.SLAM],[56,t.DISCHARGE],[63,t.BOLT_BEAK],[70,t.DRAGON_PULSE],[77,t.DRAGON_RUSH]],[e.ARCTOZOLT]:[[1,t.THUNDER_SHOCK],[1,t.POWDER_SNOW],[7,t.CHARGE],[14,t.ECHOED_VOICE],[21,t.ANCIENT_POWER],[28,t.PLUCK],[35,t.AVALANCHE],[42,t.FREEZE_DRY],[49,t.SLAM],[56,t.DISCHARGE],[63,t.BOLT_BEAK],[70,t.ICICLE_CRASH],[77,t.BLIZZARD]],[e.DRACOVISH]:[[1,t.TACKLE],[1,t.WATER_GUN],[7,t.PROTECT],[14,t.BRUTAL_SWING],[21,t.ANCIENT_POWER],[28,t.BITE],[35,t.DRAGON_BREATH],[42,t.STOMP],[49,t.SUPER_FANG],[56,t.CRUNCH],[63,t.FISHIOUS_REND],[70,t.DRAGON_PULSE],[77,t.DRAGON_RUSH]],[e.ARCTOVISH]:[[1,t.WATER_GUN],[1,t.POWDER_SNOW],[7,t.PROTECT],[14,t.ICY_WIND],[21,t.ANCIENT_POWER],[28,t.BITE],[35,t.AURORA_VEIL],[42,t.FREEZE_DRY],[49,t.SUPER_FANG],[56,t.CRUNCH],[63,t.FISHIOUS_REND],[70,t.ICICLE_CRASH],[77,t.BLIZZARD]],[e.DURALUDON]:[[1,t.LEER],[1,t.METAL_CLAW],[6,t.ROCK_SMASH],[12,t.HONE_CLAWS],[18,t.METAL_SOUND],[24,t.BREAKING_SWIPE],[30,t.DRAGON_TAIL],[36,t.IRON_DEFENSE],[42,t.LASER_FOCUS],[48,t.DRAGON_CLAW],[54,t.FLASH_CANNON],[60,t.METAL_BURST],[66,t.HYPER_BEAM]],[e.DREEPY]:[[1,t.BITE],[1,t.QUICK_ATTACK],[1,t.ASTONISH],[1,t.INFESTATION]],[e.DRAKLOAK]:[[Ee,t.DRAGON_PULSE],[1,t.BITE],[1,t.QUICK_ATTACK],[1,t.ASTONISH],[1,t.INFESTATION],[6,t.LOCK_ON],[12,t.ASSURANCE],[18,t.HEX],[24,t.AGILITY],[30,t.DOUBLE_HIT],[36,t.U_TURN],[42,t.DRAGON_DANCE],[48,t.PHANTOM_FORCE],[54,t.TAKE_DOWN],[61,t.DRAGON_RUSH],[66,t.DOUBLE_EDGE],[72,t.LAST_RESORT]],[e.DRAGAPULT]:[[Ee,t.DRAGON_DARTS],[X,t.DRAGON_PULSE],[1,t.BITE],[1,t.QUICK_ATTACK],[1,t.DRAGON_BREATH],[1,t.ASTONISH],[1,t.INFESTATION],[6,t.LOCK_ON],[12,t.ASSURANCE],[18,t.HEX],[24,t.AGILITY],[30,t.DOUBLE_HIT],[36,t.U_TURN],[42,t.DRAGON_DANCE],[48,t.PHANTOM_FORCE],[54,t.TAKE_DOWN],[63,t.DRAGON_RUSH],[70,t.DOUBLE_EDGE],[78,t.LAST_RESORT]],[e.ZACIAN]:[[1,t.BITE],[1,t.QUICK_ATTACK],[1,t.METAL_CLAW],[1,t.HOWL],[1,t.QUICK_GUARD],[1,t.SACRED_SWORD],[11,t.SLASH],[22,t.SWORDS_DANCE],[33,t.IRON_HEAD],[44,t.NOBLE_ROAR],[55,t.CRUNCH],[66,t.MOONBLAST],[77,t.CLOSE_COMBAT],[88,t.GIGA_IMPACT]],[e.ZAMAZENTA]:[[1,t.BITE],[1,t.QUICK_ATTACK],[1,t.METAL_CLAW],[1,t.HOWL],[1,t.WIDE_GUARD],[11,t.SLASH],[22,t.IRON_DEFENSE],[33,t.IRON_HEAD],[44,t.METAL_BURST],[55,t.CRUNCH],[66,t.MOONBLAST],[77,t.CLOSE_COMBAT],[88,t.GIGA_IMPACT]],[e.ETERNATUS]:[[1,t.AGILITY],[1,t.CONFUSE_RAY],[1,t.POISON_TAIL],[1,t.DRAGON_TAIL],[8,t.TOXIC],[16,t.VENOSHOCK],[24,t.DRAGON_DANCE],[32,t.CROSS_POISON],[40,t.DRAGON_PULSE],[48,t.FLAMETHROWER],[56,t.DYNAMAX_CANNON],[64,t.COSMIC_POWER],[72,t.RECOVER],[80,t.HYPER_BEAM],[88,t.OUTRAGE]],[e.KUBFU]:[[1,t.LEER],[1,t.ROCK_SMASH],[4,t.ENDURE],[8,t.FOCUS_ENERGY],[12,t.AERIAL_ACE],[16,t.SCARY_FACE],[20,t.HEADBUTT],[24,t.BRICK_BREAK],[28,t.DETECT],[32,t.BULK_UP],[36,t.IRON_HEAD],[40,t.DYNAMIC_PUNCH],[44,t.COUNTER],[48,t.CLOSE_COMBAT],[52,t.FOCUS_PUNCH]],[e.URSHIFU]:[[Ee,t.WICKED_BLOW],[1,t.LEER],[1,t.FOCUS_ENERGY],[1,t.ENDURE],[1,t.ROCK_SMASH],[1,t.SUCKER_PUNCH],[12,t.AERIAL_ACE],[16,t.SCARY_FACE],[20,t.HEADBUTT],[24,t.BRICK_BREAK],[28,t.DETECT],[32,t.BULK_UP],[36,t.IRON_HEAD],[40,t.DYNAMIC_PUNCH],[44,t.COUNTER],[48,t.CLOSE_COMBAT],[52,t.FOCUS_PUNCH]],[e.ZARUDE]:[[1,t.SCRATCH],[1,t.BIND],[6,t.LEER],[12,t.VINE_WHIP],[18,t.GROWTH],[24,t.FURY_SWIPES],[30,t.SCARY_FACE],[36,t.GRASS_KNOT],[42,t.BITE],[48,t.U_TURN],[54,t.SWAGGER],[60,t.ENERGY_BALL],[66,t.SYNTHESIS],[72,t.HAMMER_ARM],[78,t.THRASH],[84,t.POWER_WHIP],[90,t.JUNGLE_HEALING]],[e.REGIELEKI]:[[1,t.THUNDER_SHOCK],[1,t.RAPID_SPIN],[6,t.ELECTROWEB],[12,t.ANCIENT_POWER],[18,t.SHOCK_WAVE],[24,t.THUNDER_WAVE],[30,t.EXTREME_SPEED],[36,t.THUNDER_CAGE],[42,t.THUNDERBOLT],[48,t.MAGNET_RISE],[54,t.THRASH],[60,t.LOCK_ON],[66,t.ZAP_CANNON],[72,t.HYPER_BEAM],[78,t.EXPLOSION]],[e.REGIDRAGO]:[[1,t.TWISTER],[6,t.BITE],[12,t.ANCIENT_POWER],[18,t.DRAGON_BREATH],[30,t.CRUNCH],[36,t.DRAGON_CLAW],[42,t.HAMMER_ARM],[48,t.DRAGON_DANCE],[54,t.THRASH],[60,t.FOCUS_ENERGY],[66,t.DRAGON_ENERGY],[72,t.HYPER_BEAM],[78,t.EXPLOSION]],[e.GLASTRIER]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[6,t.DOUBLE_KICK],[12,t.AVALANCHE],[18,t.STOMP],[24,t.TORMENT],[30,t.MIST],[36,t.ICICLE_CRASH],[42,t.TAKE_DOWN],[48,t.IRON_DEFENSE],[54,t.THRASH],[60,t.TAUNT],[66,t.DOUBLE_EDGE],[72,t.SWORDS_DANCE]],[e.SPECTRIER]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[6,t.DOUBLE_KICK],[12,t.HEX],[18,t.STOMP],[24,t.CONFUSE_RAY],[30,t.HAZE],[36,t.SHADOW_BALL],[42,t.TAKE_DOWN],[48,t.AGILITY],[54,t.THRASH],[60,t.DISABLE],[66,t.DOUBLE_EDGE],[72,t.NASTY_PLOT]],[e.CALYREX]:[[1,t.POUND],[1,t.MEGA_DRAIN],[1,t.GROWTH],[1,t.CONFUSION],[8,t.LIFE_DEW],[16,t.GIGA_DRAIN],[24,t.PSYSHOCK],[32,t.HELPING_HAND],[40,t.GRASSY_TERRAIN],[40,t.PSYCHIC_TERRAIN],[48,t.ENERGY_BALL],[56,t.PSYCHIC],[64,t.LEECH_SEED],[72,t.HEAL_PULSE],[80,t.SOLAR_BEAM],[88,t.FUTURE_SIGHT]],[e.WYRDEER]:[[Ee,t.PSYSHIELD_BASH],[1,t.TACKLE],[1,t.ME_FIRST],[3,t.LEER],[7,t.ASTONISH],[10,t.HYPNOSIS],[13,t.STOMP],[16,t.SAND_ATTACK],[21,t.TAKE_DOWN],[23,t.CONFUSE_RAY],[27,t.CALM_MIND],[32,t.ROLE_PLAY],[37,t.ZEN_HEADBUTT],[49,t.IMPRISON],[55,t.DOUBLE_EDGE],[62,t.MEGAHORN]],[e.KLEAVOR]:[[Ee,t.STONE_AXE],[1,t.WING_ATTACK],[1,t.AIR_SLASH],[1,t.LEER],[1,t.QUICK_ATTACK],[4,t.FURY_CUTTER],[8,t.FALSE_SWIPE],[12,t.SMACK_DOWN],[16,t.DOUBLE_TEAM],[20,t.DOUBLE_HIT],[24,t.SLASH],[28,t.FOCUS_ENERGY],[30,t.STEEL_WING],[32,t.AGILITY],[36,t.ROCK_SLIDE],[40,t.X_SCISSOR],[44,t.SWORDS_DANCE]],[e.URSALUNA]:[[Ee,t.HEADLONG_RUSH],[1,t.SCRATCH],[1,t.LEER],[1,t.LICK],[1,t.COVET],[1,t.FLING],[1,t.BABY_DOLL_EYES],[1,t.FAKE_TEARS],[1,t.CHARM],[8,t.FURY_SWIPES],[13,t.PAYBACK],[17,t.SWEET_SCENT],[22,t.SLASH],[25,t.PLAY_NICE],[29,t.PLAY_ROUGH],[35,t.SCARY_FACE],[41,t.REST],[41,t.SNORE],[48,t.HIGH_HORSEPOWER],[56,t.THRASH],[64,t.HAMMER_ARM]],[e.BASCULEGION]:[[X,t.FINAL_GAMBIT],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.SHADOW_BALL],[1,t.PHANTOM_FORCE],[4,t.TACKLE],[8,t.FLAIL],[12,t.AQUA_JET],[16,t.BITE],[20,t.SCARY_FACE],[24,t.HEADBUTT],[28,t.SOAK],[32,t.CRUNCH],[36,t.TAKE_DOWN],[40,t.UPROAR],[44,t.WAVE_CRASH],[48,t.THRASH],[52,t.DOUBLE_EDGE],[56,t.HEAD_SMASH]],[e.SNEASLER]:[[Ee,t.DIRE_CLAW],[1,t.SCRATCH],[1,t.LEER],[1,t.ROCK_SMASH],[1,t.FLING],[6,t.TAUNT],[12,t.QUICK_ATTACK],[18,t.METAL_CLAW],[24,t.POISON_JAB],[30,t.BRICK_BREAK],[36,t.HONE_CLAWS],[42,t.SLASH],[48,t.AGILITY],[54,t.SCREECH],[60,t.CLOSE_COMBAT]],[e.OVERQWIL]:[[1,t.TACKLE],[1,t.POISON_STING],[4,t.HARDEN],[8,t.BITE],[12,t.FELL_STINGER],[16,t.MINIMIZE],[20,t.SPIKES],[24,t.BRINE],[28,t.BARB_BARRAGE],[32,t.PIN_MISSILE],[36,t.TOXIC_SPIKES],[40,t.STOCKPILE],[40,t.SPIT_UP],[44,t.TOXIC],[48,t.CRUNCH],[52,t.ACUPRESSURE],[56,t.DESTINY_BOND]],[e.ENAMORUS]:[[1,t.ASTONISH],[1,t.FAIRY_WIND],[5,t.TORMENT],[10,t.FLATTER],[15,t.TWISTER],[20,t.DRAINING_KISS],[25,t.IRON_DEFENSE],[30,t.IMPRISON],[35,t.MYSTICAL_FIRE],[40,t.DAZZLING_GLEAM],[45,t.EXTRASENSORY],[50,t.UPROAR],[55,t.SUPERPOWER],[60,t.HEALING_WISH],[65,t.MOONBLAST],[70,t.OUTRAGE],[75,t.SPRINGTIDE_STORM]],[e.SPRIGATITO]:[[1,t.SCRATCH],[1,t.TAIL_WHIP],[1,t.LEAFAGE],[7,t.BITE],[10,t.HONE_CLAWS],[13,t.MAGICAL_LEAF],[15,t.QUICK_ATTACK],[17,t.SEED_BOMB],[21,t.U_TURN],[25,t.WORRY_SEED],[28,t.SLASH],[32,t.ENERGY_BALL],[36,t.PLAY_ROUGH]],[e.FLORAGATO]:[[1,t.SCRATCH],[1,t.TAIL_WHIP],[1,t.LEAFAGE],[7,t.BITE],[10,t.HONE_CLAWS],[13,t.MAGICAL_LEAF],[15,t.QUICK_ATTACK],[20,t.SEED_BOMB],[24,t.U_TURN],[28,t.WORRY_SEED],[33,t.SLASH],[38,t.ENERGY_BALL],[42,t.PLAY_ROUGH],[46,t.LEAF_STORM]],[e.MEOWSCARADA]:[[Ee,t.FLOWER_TRICK],[X,t.DOUBLE_TEAM],[X,t.TRICK],[1,t.SCRATCH],[1,t.TAIL_WHIP],[1,t.LEAFAGE],[7,t.BITE],[10,t.HONE_CLAWS],[13,t.MAGICAL_LEAF],[15,t.QUICK_ATTACK],[20,t.SEED_BOMB],[24,t.U_TURN],[29,t.WORRY_SEED],[33,t.SLASH],[38,t.NIGHT_SLASH],[42,t.ENERGY_BALL],[47,t.PLAY_ROUGH],[52,t.KNOCK_OFF],[58,t.GRASSY_TERRAIN],[64,t.LEAF_STORM]],[e.FUECOCO]:[[1,t.TACKLE],[1,t.LEER],[1,t.EMBER],[7,t.ROUND],[12,t.BITE],[15,t.INCINERATE],[17,t.YAWN],[21,t.SNARL],[25,t.ROAR],[28,t.FLAMETHROWER],[32,t.HYPER_VOICE],[36,t.FIRE_BLAST]],[e.CROCALOR]:[[1,t.TACKLE],[1,t.LEER],[1,t.EMBER],[7,t.LICK],[10,t.ROUND],[12,t.BITE],[15,t.YAWN],[17,t.INCINERATE],[24,t.SNARL],[28,t.ROAR],[32,t.FLAMETHROWER],[38,t.HYPER_VOICE],[42,t.WILL_O_WISP],[47,t.FIRE_BLAST]],[e.SKELEDIRGE]:[[Ee,t.TORCH_SONG],[X,t.SING],[X,t.YAWN],[1,t.TACKLE],[1,t.LEER],[1,t.EMBER],[7,t.LICK],[10,t.ROUND],[12,t.SCARY_FACE],[15,t.BITE],[17,t.INCINERATE],[24,t.SNARL],[28,t.ROAR],[32,t.FLAMETHROWER],[38,t.SHADOW_BALL],[42,t.HYPER_VOICE],[47,t.WILL_O_WISP],[47,t.HEX],[58,t.FIRE_BLAST],[64,t.OVERHEAT]],[e.QUAXLY]:[[1,t.POUND],[1,t.GROWL],[1,t.WATER_GUN],[7,t.WORK_UP],[10,t.WING_ATTACK],[13,t.AQUA_JET],[17,t.DOUBLE_HIT],[21,t.AQUA_CUTTER],[24,t.AIR_SLASH],[28,t.FOCUS_ENERGY],[31,t.ACROBATICS],[35,t.LIQUIDATION]],[e.QUAXWELL]:[[1,t.POUND],[1,t.GROWL],[1,t.WATER_GUN],[1,t.DOUBLE_HIT],[7,t.WORK_UP],[10,t.WING_ATTACK],[13,t.AQUA_JET],[17,t.WATER_PULSE],[19,t.LOW_SWEEP],[23,t.AQUA_CUTTER],[27,t.AIR_SLASH],[32,t.FOCUS_ENERGY],[38,t.ACROBATICS],[43,t.LIQUIDATION],[48,t.FEATHER_DANCE]],[e.QUAQUAVAL]:[[Ee,t.AQUA_STEP],[X,t.COUNTER],[1,t.POUND],[1,t.GROWL],[1,t.WATER_GUN],[1,t.DOUBLE_HIT],[7,t.WORK_UP],[10,t.WING_ATTACK],[13,t.AQUA_JET],[17,t.WATER_PULSE],[17,t.LOW_SWEEP],[21,t.AQUA_CUTTER],[27,t.AIR_SLASH],[32,t.FOCUS_ENERGY],[38,t.MEGA_KICK],[43,t.ACROBATICS],[47,t.LIQUIDATION],[52,t.FEATHER_DANCE],[58,t.CLOSE_COMBAT],[64,t.WAVE_CRASH]],[e.LECHONK]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.DISARMING_VOICE],[8,t.ECHOED_VOICE],[12,t.MUD_SHOT],[15,t.COVET],[17,t.DIG],[21,t.HEADBUTT],[24,t.YAWN],[27,t.TAKE_DOWN],[30,t.WORK_UP],[32,t.UPROAR],[35,t.DOUBLE_EDGE]],[e.OINKOLOGNE]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.DISARMING_VOICE],[8,t.ECHOED_VOICE],[12,t.MUD_SHOT],[15,t.COVET],[17,t.DIG],[23,t.HEADBUTT],[26,t.TAKE_DOWN],[27,t.YAWN],[34,t.WORK_UP],[38,t.UPROAR],[42,t.DOUBLE_EDGE],[48,t.EARTH_POWER],[54,t.BELCH]],[e.TAROUNTULA]:[[1,t.TACKLE],[1,t.STRING_SHOT],[5,t.STRUGGLE_BUG],[8,t.ASSURANCE],[11,t.FEINT],[14,t.BUG_BITE],[18,t.BLOCK],[22,t.COUNTER],[25,t.HEADBUTT],[29,t.STICKY_WEB],[33,t.GASTRO_ACID],[36,t.CIRCLE_THROW],[40,t.THROAT_CHOP],[44,t.SKITTER_SMACK]],[e.SPIDOPS]:[[Ee,t.SILK_TRAP],[1,t.TACKLE],[1,t.STRING_SHOT],[5,t.STRUGGLE_BUG],[8,t.ASSURANCE],[11,t.FEINT],[14,t.BUG_BITE],[19,t.BLOCK],[24,t.COUNTER],[28,t.HEADBUTT],[33,t.STICKY_WEB],[37,t.GASTRO_ACID],[41,t.CIRCLE_THROW],[45,t.THROAT_CHOP],[49,t.SKITTER_SMACK]],[e.NYMBLE]:[[1,t.TACKLE],[1,t.LEER],[4,t.STRUGGLE_BUG],[6,t.ASTONISH],[9,t.ASSURANCE],[11,t.DOUBLE_KICK],[14,t.SCREECH],[18,t.ENDURE],[22,t.BUG_BITE],[26,t.FEINT],[30,t.AGILITY],[38,t.SUCKER_PUNCH],[41,t.FIRST_IMPRESSION]],[e.LOKIX]:[[Ee,t.LUNGE],[1,t.TACKLE],[1,t.LEER],[1,t.LOW_KICK],[1,t.DETECT],[4,t.STRUGGLE_BUG],[6,t.ASTONISH],[9,t.ASSURANCE],[11,t.DOUBLE_KICK],[14,t.SCREECH],[18,t.ENDURE],[22,t.BUG_BITE],[28,t.FEINT],[32,t.AGILITY],[36,t.THROAT_CHOP],[40,t.SUCKER_PUNCH],[44,t.FIRST_IMPRESSION],[48,t.BOUNCE],[53,t.AXE_KICK]],[e.PAWMI]:[[1,t.SCRATCH],[1,t.GROWL],[3,t.THUNDER_SHOCK],[6,t.QUICK_ATTACK],[8,t.CHARGE],[12,t.NUZZLE],[15,t.DIG],[19,t.BITE],[23,t.SPARK],[27,t.THUNDER_WAVE],[31,t.ENTRAINMENT],[35,t.SLAM],[38,t.DISCHARGE],[40,t.AGILITY],[44,t.WILD_CHARGE]],[e.PAWMO]:[[Ee,t.ARM_THRUST],[1,t.SCRATCH],[1,t.GROWL],[3,t.THUNDER_SHOCK],[6,t.QUICK_ATTACK],[8,t.CHARGE],[12,t.NUZZLE],[15,t.DIG],[19,t.BITE],[23,t.SPARK],[27,t.THUNDER_WAVE],[32,t.SLAM],[38,t.ENTRAINMENT],[42,t.DISCHARGE],[46,t.AGILITY],[52,t.WILD_CHARGE]],[e.PAWMOT]:[[Ee,t.REVIVAL_BLESSING],[1,t.SCRATCH],[1,t.GROWL],[1,t.WILD_CHARGE],[3,t.THUNDER_SHOCK],[6,t.QUICK_ATTACK],[8,t.CHARGE],[12,t.NUZZLE],[15,t.DIG],[19,t.BITE],[23,t.SPARK],[25,t.ARM_THRUST],[29,t.THUNDER_WAVE],[33,t.SLAM],[39,t.ENTRAINMENT],[44,t.CLOSE_COMBAT],[49,t.DISCHARGE],[54,t.AGILITY],[60,t.DOUBLE_SHOCK]],[e.TANDEMAUS]:[[1,t.POUND],[1,t.BABY_DOLL_EYES],[5,t.ECHOED_VOICE],[8,t.HELPING_HAND],[11,t.SUPER_FANG],[14,t.DOUBLE_HIT],[18,t.BULLET_SEED],[22,t.ENCORE],[26,t.PLAY_ROUGH],[30,t.HYPER_VOICE],[33,t.CHARM],[37,t.BEAT_UP],[41,t.COPYCAT],[46,t.POPULATION_BOMB]],[e.MAUSHOLD]:[[1,t.POUND],[1,t.FOLLOW_ME],[1,t.BABY_DOLL_EYES],[1,t.TIDY_UP],[5,t.ECHOED_VOICE],[8,t.HELPING_HAND],[11,t.SUPER_FANG],[14,t.DOUBLE_HIT],[18,t.BULLET_SEED],[22,t.ENCORE],[29,t.PLAY_ROUGH],[33,t.HYPER_VOICE],[37,t.CHARM],[41,t.BEAT_UP],[46,t.COPYCAT],[53,t.POPULATION_BOMB]],[e.FIDOUGH]:[[1,t.TACKLE],[1,t.GROWL],[3,t.LICK],[6,t.TAIL_WHIP],[8,t.COVET],[11,t.BITE],[15,t.BABY_DOLL_EYES],[18,t.PLAY_ROUGH],[22,t.WORK_UP],[26,t.BATON_PASS],[30,t.ROAR],[33,t.DOUBLE_EDGE],[36,t.CHARM],[40,t.CRUNCH],[45,t.LAST_RESORT]],[e.DACHSBUN]:[[1,t.TACKLE],[1,t.GROWL],[3,t.LICK],[6,t.TAIL_WHIP],[8,t.COVET],[11,t.BITE],[15,t.BABY_DOLL_EYES],[18,t.PLAY_ROUGH],[22,t.WORK_UP],[29,t.BATON_PASS],[33,t.ROAR],[38,t.DOUBLE_EDGE],[42,t.CHARM],[47,t.CRUNCH],[53,t.LAST_RESORT]],[e.SMOLIV]:[[1,t.TACKLE],[1,t.SWEET_SCENT],[5,t.ABSORB],[7,t.GROWTH],[10,t.RAZOR_LEAF],[13,t.HELPING_HAND],[16,t.FLAIL],[20,t.MEGA_DRAIN],[23,t.GRASSY_TERRAIN],[27,t.SEED_BOMB],[30,t.ENERGY_BALL],[34,t.LEECH_SEED],[38,t.TERRAIN_PULSE]],[e.DOLLIV]:[[1,t.TACKLE],[1,t.SWEET_SCENT],[5,t.ABSORB],[7,t.GROWTH],[10,t.RAZOR_LEAF],[13,t.HELPING_HAND],[16,t.FLAIL],[20,t.MEGA_DRAIN],[23,t.GRASSY_TERRAIN],[29,t.SEED_BOMB],[34,t.ENERGY_BALL],[37,t.LEECH_SEED],[42,t.TERRAIN_PULSE]],[e.ARBOLIVA]:[[1,t.TACKLE],[1,t.SAFEGUARD],[1,t.SWEET_SCENT],[1,t.MIRROR_COAT],[5,t.ABSORB],[7,t.GROWTH],[10,t.RAZOR_LEAF],[13,t.HELPING_HAND],[16,t.FLAIL],[20,t.MEGA_DRAIN],[23,t.GRASSY_TERRAIN],[29,t.SEED_BOMB],[34,t.ENERGY_BALL],[39,t.LEECH_SEED],[46,t.TERRAIN_PULSE],[52,t.PETAL_BLIZZARD],[58,t.PETAL_DANCE]],[e.SQUAWKABILLY]:[[1,t.GROWL],[1,t.PECK],[1,t.MIMIC],[6,t.QUICK_ATTACK],[10,t.TORMENT],[13,t.AERIAL_ACE],[17,t.FURY_ATTACK],[20,t.TAUNT],[24,t.UPROAR],[27,t.COPYCAT],[30,t.FLY],[34,t.FACADE],[38,t.SWAGGER],[42,t.BRAVE_BIRD],[47,t.ROOST],[52,t.REVERSAL]],[e.NACLI]:[[1,t.TACKLE],[1,t.HARDEN],[5,t.ROCK_THROW],[7,t.MUD_SHOT],[10,t.SMACK_DOWN],[13,t.ROCK_POLISH],[16,t.HEADBUTT],[20,t.IRON_DEFENSE],[25,t.RECOVER],[30,t.ROCK_SLIDE],[33,t.STEALTH_ROCK],[35,t.HEAVY_SLAM],[40,t.EARTHQUAKE],[45,t.STONE_EDGE]],[e.NACLSTACK]:[[Ee,t.SALT_CURE],[1,t.TACKLE],[1,t.HARDEN],[5,t.ROCK_THROW],[7,t.MUD_SHOT],[10,t.SMACK_DOWN],[13,t.ROCK_POLISH],[16,t.HEADBUTT],[20,t.IRON_DEFENSE],[30,t.RECOVER],[34,t.ROCK_SLIDE],[38,t.STEALTH_ROCK],[41,t.HEAVY_SLAM],[45,t.EARTHQUAKE],[51,t.STONE_EDGE]],[e.GARGANACL]:[[Ee,t.HAMMER_ARM],[X,t.IRON_DEFENSE],[1,t.TACKLE],[1,t.HARDEN],[1,t.BLOCK],[1,t.ROCK_BLAST],[1,t.SMACK_DOWN],[1,t.WIDE_GUARD],[5,t.ROCK_THROW],[7,t.MUD_SHOT],[10,t.ROCK_TOMB],[13,t.ROCK_POLISH],[16,t.HEADBUTT],[24,t.SALT_CURE],[30,t.RECOVER],[34,t.ROCK_SLIDE],[40,t.STEALTH_ROCK],[44,t.HEAVY_SLAM],[49,t.EARTHQUAKE],[54,t.STONE_EDGE],[60,t.EXPLOSION]],[e.CHARCADET]:[[1,t.LEER],[1,t.EMBER],[1,t.ASTONISH],[8,t.CLEAR_SMOG],[12,t.FIRE_SPIN],[16,t.WILL_O_WISP],[20,t.NIGHT_SHADE],[24,t.FLAME_CHARGE],[28,t.INCINERATE],[32,t.LAVA_PLUME]],[e.ARMAROUGE]:[[Ee,t.PSYSHOCK],[1,t.LEER],[1,t.EMBER],[1,t.ASTONISH],[1,t.WIDE_GUARD],[1,t.MYSTICAL_FIRE],[8,t.CLEAR_SMOG],[12,t.FIRE_SPIN],[16,t.WILL_O_WISP],[20,t.NIGHT_SHADE],[24,t.FLAME_CHARGE],[28,t.INCINERATE],[32,t.LAVA_PLUME],[37,t.CALM_MIND],[42,t.ALLY_SWITCH],[48,t.FLAMETHROWER],[56,t.EXPANDING_FORCE],[62,t.ARMOR_CANNON]],[e.CERULEDGE]:[[Ee,t.SHADOW_CLAW],[X,t.NIGHT_SLASH],[X,t.SHADOW_SNEAK],[X,t.QUICK_GUARD],[X,t.SOLAR_BLADE],[1,t.EMBER],[1,t.LEER],[1,t.ASTONISH],[8,t.CLEAR_SMOG],[12,t.FIRE_SPIN],[16,t.WILL_O_WISP],[20,t.NIGHT_SHADE],[24,t.FLAME_CHARGE],[28,t.INCINERATE],[32,t.LAVA_PLUME],[37,t.SWORDS_DANCE],[42,t.ALLY_SWITCH],[48,t.BITTER_BLADE],[56,t.PSYCHO_CUT],[62,t.FLARE_BLITZ]],[e.TADBULB]:[[1,t.TACKLE],[1,t.MUD_SLAP],[7,t.THUNDER_SHOCK],[11,t.WATER_GUN],[17,t.CHARGE],[21,t.SPARK],[24,t.MUD_SHOT],[25,t.FLAIL],[32,t.DISCHARGE],[36,t.WEATHER_BALL],[40,t.ELECTRIC_TERRAIN],[45,t.SUCKER_PUNCH],[50,t.ZAP_CANNON]],[e.BELLIBOLT]:[[1,t.TACKLE],[1,t.MUD_SLAP],[1,t.SLACK_OFF],[7,t.THUNDER_SHOCK],[11,t.WATER_GUN],[17,t.CHARGE],[21,t.SPARK],[24,t.MUD_SHOT],[25,t.FLAIL],[32,t.DISCHARGE],[36,t.WEATHER_BALL],[40,t.ELECTRIC_TERRAIN],[45,t.SUCKER_PUNCH],[50,t.ZAP_CANNON]],[e.WATTREL]:[[1,t.GROWL],[1,t.PECK],[4,t.THUNDER_SHOCK],[7,t.QUICK_ATTACK],[11,t.PLUCK],[15,t.SPARK],[19,t.UPROAR],[23,t.ROOST],[27,t.DUAL_WINGBEAT],[32,t.AGILITY],[37,t.VOLT_SWITCH],[43,t.DISCHARGE]],[e.KILOWATTREL]:[[Ee,t.ELECTRO_BALL],[1,t.GROWL],[1,t.PECK],[4,t.THUNDER_SHOCK],[7,t.QUICK_ATTACK],[11,t.PLUCK],[15,t.SPARK],[19,t.UPROAR],[24,t.ROOST],[30,t.DUAL_WINGBEAT],[36,t.AGILITY],[43,t.VOLT_SWITCH],[48,t.DISCHARGE],[55,t.HURRICANE]],[e.MASCHIFF]:[[1,t.TACKLE],[1,t.LEER],[1,t.SCARY_FACE],[4,t.LICK],[7,t.SNARL],[10,t.HONE_CLAWS],[14,t.BITE],[18,t.ROAR],[22,t.HEADBUTT],[26,t.PAYBACK],[31,t.CRUNCH],[35,t.SWAGGER],[39,t.REVERSAL],[43,t.JAW_LOCK],[49,t.DOUBLE_EDGE]],[e.MABOSSTIFF]:[[Ee,t.COMEUPPANCE],[1,t.TACKLE],[1,t.LEER],[1,t.SCARY_FACE],[4,t.LICK],[7,t.SNARL],[10,t.HONE_CLAWS],[14,t.BITE],[18,t.ROAR],[22,t.HEADBUTT],[26,t.PAYBACK],[34,t.CRUNCH],[39,t.SWAGGER],[43,t.REVERSAL],[48,t.JAW_LOCK],[55,t.DOUBLE_EDGE],[60,t.OUTRAGE]],[e.SHROODLE]:[[1,t.SCRATCH],[1,t.LEER],[5,t.ACID_SPRAY],[8,t.BITE],[8,t.FURY_SWIPES],[11,t.SWITCHEROO],[14,t.POISON_FANG],[18,t.FLATTER],[21,t.SLASH],[25,t.U_TURN],[29,t.POISON_JAB],[33,t.TAUNT],[36,t.SUBSTITUTE],[40,t.KNOCK_OFF],[45,t.GUNK_SHOT]],[e.GRAFAIAI]:[[Ee,t.DOODLE],[1,t.SCRATCH],[1,t.LEER],[1,t.BITE],[5,t.ACID_SPRAY],[8,t.FURY_SWIPES],[11,t.SWITCHEROO],[14,t.POISON_FANG],[18,t.FLATTER],[21,t.SLASH],[25,t.U_TURN],[33,t.POISON_JAB],[37,t.TAUNT],[40,t.SUBSTITUTE],[45,t.KNOCK_OFF],[51,t.GUNK_SHOT]],[e.BRAMBLIN]:[[1,t.DEFENSE_CURL],[1,t.ROLLOUT],[1,t.ASTONISH],[5,t.ABSORB],[9,t.RAPID_SPIN],[13,t.BULLET_SEED],[17,t.INFESTATION],[21,t.HEX],[25,t.MEGA_DRAIN],[29,t.DISABLE],[35,t.PHANTOM_FORCE],[40,t.GIGA_DRAIN],[45,t.CURSE],[50,t.PAIN_SPLIT],[55,t.POWER_WHIP]],[e.BRAMBLEGHAST]:[[1,t.DEFENSE_CURL],[1,t.ROLLOUT],[1,t.ASTONISH],[5,t.ABSORB],[9,t.RAPID_SPIN],[13,t.BULLET_SEED],[17,t.INFESTATION],[21,t.HEX],[25,t.MEGA_DRAIN],[29,t.DISABLE],[35,t.PHANTOM_FORCE],[40,t.GIGA_DRAIN],[45,t.CURSE],[50,t.PAIN_SPLIT],[55,t.POWER_WHIP]],[e.TOEDSCOOL]:[[1,t.WRAP],[1,t.MUD_SLAP],[4,t.ABSORB],[8,t.POISON_POWDER],[8,t.STUN_SPORE],[12,t.SUPERSONIC],[15,t.TACKLE],[16,t.MEGA_DRAIN],[20,t.SCREECH],[24,t.MUD_SHOT],[28,t.HEX],[32,t.SEED_BOMB],[36,t.SPORE],[40,t.GROWTH],[44,t.GIGA_DRAIN],[48,t.EARTH_POWER],[52,t.POWER_WHIP]],[e.TOEDSCRUEL]:[[1,t.WRAP],[1,t.MUD_SLAP],[1,t.REFLECT_TYPE],[4,t.ABSORB],[8,t.POISON_POWDER],[8,t.STUN_SPORE],[12,t.SUPERSONIC],[15,t.TACKLE],[16,t.MEGA_DRAIN],[20,t.SCREECH],[24,t.MUD_SHOT],[28,t.HEX],[34,t.SEED_BOMB],[40,t.SPORE],[44,t.GROWTH],[48,t.GIGA_DRAIN],[54,t.EARTH_POWER],[58,t.POWER_WHIP]],[e.KLAWF]:[[1,t.ROCK_THROW],[6,t.HARDEN],[9,t.ROCK_SMASH],[13,t.ROCK_TOMB],[17,t.METAL_CLAW],[21,t.PROTECT],[24,t.ROCK_BLAST],[29,t.X_SCISSOR],[33,t.SWORDS_DANCE],[37,t.FLAIL],[42,t.ROCK_SLIDE],[47,t.HIGH_HORSEPOWER],[51,t.IRON_DEFENSE],[56,t.GUILLOTINE]],[e.CAPSAKID]:[[1,t.LEER],[1,t.LEAFAGE],[4,t.BITE],[10,t.GROWTH],[13,t.RAZOR_LEAF],[17,t.SUNNY_DAY],[21,t.BULLET_SEED],[24,t.HEADBUTT],[28,t.ZEN_HEADBUTT],[38,t.CRUNCH],[44,t.SEED_BOMB],[48,t.SOLAR_BEAM]],[e.SCOVILLAIN]:[[Ee,t.FLAMETHROWER],[Ee,t.SPICY_EXTRACT],[1,t.LEER],[1,t.FIRE_FANG],[1,t.LEAFAGE],[4,t.BITE],[10,t.GROWTH],[13,t.RAZOR_LEAF],[17,t.SUNNY_DAY],[21,t.BULLET_SEED],[24,t.HEADBUTT],[28,t.ZEN_HEADBUTT],[33,t.WORRY_SEED],[38,t.CRUNCH],[44,t.SEED_BOMB],[48,t.SOLAR_BEAM],[48,t.OVERHEAT]],[e.RELLOR]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[4,t.SAND_ATTACK],[7,t.STRUGGLE_BUG],[11,t.ROLLOUT],[15,t.MUD_SHOT],[20,t.BUG_BITE],[24,t.TAKE_DOWN],[29,t.DIG],[35,t.LUNGE]],[e.RABSCA]:[[Ee,t.REVIVAL_BLESSING],[X,t.SAFEGUARD],[X,t.PSYCH_UP],[1,t.TACKLE],[1,t.CONFUSION],[1,t.DEFENSE_CURL],[1,t.MUD_SHOT],[1,t.DIG],[4,t.SAND_ATTACK],[7,t.STRUGGLE_BUG],[11,t.ROLLOUT],[15,t.PSYBEAM],[20,t.BUG_BITE],[24,t.TAKE_DOWN],[29,t.EXTRASENSORY],[35,t.LUNGE],[40,t.POWER_SWAP],[40,t.GUARD_SWAP],[40,t.SPEED_SWAP],[45,t.BUG_BUZZ],[50,t.PSYCHIC]],[e.FLITTLE]:[[1,t.GROWL],[1,t.PECK],[5,t.CONFUSION],[8,t.BABY_DOLL_EYES],[11,t.DISARMING_VOICE],[15,t.QUICK_ATTACK],[19,t.PSYBEAM],[24,t.PLUCK],[29,t.AGILITY],[34,t.UPROAR]],[e.ESPATHRA]:[[Ee,t.LUMINA_CRASH],[1,t.GROWL],[1,t.PECK],[1,t.DRILL_PECK],[1,t.FEATHER_DANCE],[5,t.CONFUSION],[8,t.BABY_DOLL_EYES],[11,t.DISARMING_VOICE],[15,t.QUICK_ATTACK],[19,t.PSYBEAM],[24,t.PLUCK],[29,t.AGILITY],[34,t.UPROAR],[43,t.DAZZLING_GLEAM],[49,t.PSYCHIC],[54,t.LAST_RESORT]],[e.TINKATINK]:[[1,t.ASTONISH],[1,t.FAIRY_WIND],[5,t.BABY_DOLL_EYES],[8,t.METAL_CLAW],[11,t.COVET],[14,t.ROCK_SMASH],[17,t.DRAINING_KISS],[21,t.SWEET_KISS],[24,t.BRUTAL_SWING],[27,t.SLAM],[31,t.FLASH_CANNON],[35,t.PLAY_ROUGH],[39,t.FAKE_OUT],[43,t.FLATTER],[47,t.SKITTER_SMACK],[52,t.KNOCK_OFF]],[e.TINKATUFF]:[[1,t.ASTONISH],[1,t.FAIRY_WIND],[5,t.BABY_DOLL_EYES],[8,t.METAL_CLAW],[11,t.COVET],[14,t.ROCK_SMASH],[17,t.DRAINING_KISS],[21,t.SWEET_KISS],[24,t.BRUTAL_SWING],[27,t.SLAM],[31,t.FLASH_CANNON],[35,t.PLAY_ROUGH],[39,t.FAKE_OUT],[43,t.FLATTER],[47,t.SKITTER_SMACK],[52,t.KNOCK_OFF]],[e.TINKATON]:[[Ee,t.GIGATON_HAMMER],[1,t.ASTONISH],[1,t.FAIRY_WIND],[5,t.BABY_DOLL_EYES],[8,t.METAL_CLAW],[11,t.COVET],[14,t.ROCK_SMASH],[17,t.DRAINING_KISS],[21,t.SWEET_KISS],[24,t.BRUTAL_SWING],[27,t.SLAM],[31,t.FLASH_CANNON],[35,t.PLAY_ROUGH],[39,t.FAKE_OUT],[43,t.FLATTER],[47,t.SKITTER_SMACK],[52,t.KNOCK_OFF]],[e.WIGLETT]:[[1,t.SAND_ATTACK],[1,t.WATER_GUN],[4,t.MUD_SLAP],[8,t.WRAP],[12,t.AQUA_JET],[20,t.SLAM],[20,t.WATER_PULSE],[24,t.HEADBUTT],[28,t.DIG],[32,t.SUCKER_PUNCH],[36,t.THROAT_CHOP],[40,t.LIQUIDATION]],[e.WUGTRIO]:[[1,t.SAND_ATTACK],[1,t.WRAP],[1,t.WATER_GUN],[1,t.MUD_SLAP],[12,t.AQUA_JET],[16,t.SLAM],[20,t.WATER_PULSE],[24,t.HEADBUTT],[30,t.TRIPLE_DIVE],[36,t.DIG],[42,t.SUCKER_PUNCH],[48,t.THROAT_CHOP],[54,t.LIQUIDATION]],[e.BOMBIRDIER]:[[1,t.WING_ATTACK],[1,t.LEER],[1,t.PECK],[1,t.MEMENTO],[1,t.HONE_CLAWS],[7,t.THIEF],[11,t.ROCK_THROW],[16,t.WHIRLWIND],[20,t.PLUCK],[24,t.TORMENT],[29,t.ROCK_TOMB],[36,t.PAYBACK],[42,t.DUAL_WINGBEAT],[47,t.ROCK_SLIDE],[53,t.KNOCK_OFF],[60,t.PARTING_SHOT]],[e.FINIZEN]:[[1,t.SUPERSONIC],[1,t.WATER_GUN],[7,t.ASTONISH],[10,t.FOCUS_ENERGY],[13,t.AQUA_JET],[17,t.DOUBLE_HIT],[21,t.DIVE],[25,t.CHARM],[29,t.ACROBATICS],[34,t.ENCORE],[39,t.AQUA_TAIL],[44,t.MIST],[50,t.HYDRO_PUMP]],[e.PALAFIN]:[[Ee,t.FLIP_TURN],[1,t.SUPERSONIC],[1,t.WATER_GUN],[1,t.JET_PUNCH],[7,t.ASTONISH],[10,t.FOCUS_ENERGY],[13,t.AQUA_JET],[17,t.DOUBLE_HIT],[21,t.DIVE],[25,t.CHARM],[29,t.ACROBATICS],[34,t.ENCORE],[39,t.AQUA_TAIL],[44,t.MIST],[50,t.HYDRO_PUMP],[55,t.FOCUS_PUNCH],[61,t.WAVE_CRASH]],[e.VAROOM]:[[1,t.LICK],[1,t.POISON_GAS],[4,t.SMOG],[7,t.TAUNT],[10,t.ASSURANCE],[13,t.SLUDGE],[17,t.GYRO_BALL],[21,t.HEADBUTT],[25,t.SCREECH],[28,t.IRON_HEAD],[32,t.SWAGGER],[36,t.POISON_JAB],[41,t.UPROAR],[46,t.SPIN_OUT],[50,t.GUNK_SHOT]],[e.REVAVROOM]:[[Ee,t.SHIFT_GEAR],[1,t.LICK],[1,t.POISON_GAS],[1,t.MAGNET_RISE],[4,t.SMOG],[7,t.TAUNT],[10,t.ASSURANCE],[13,t.SLUDGE],[17,t.GYRO_BALL],[21,t.HEADBUTT],[25,t.SCREECH],[28,t.IRON_HEAD],[32,t.SWAGGER],[36,t.POISON_JAB],[46,t.UPROAR],[52,t.SPIN_OUT],[58,t.GUNK_SHOT]],[e.CYCLIZAR]:[[1,t.TACKLE],[1,t.GROWL],[7,t.RAPID_SPIN],[11,t.TAUNT],[14,t.BREAKING_SWIPE],[18,t.QUICK_ATTACK],[23,t.BITE],[27,t.U_TURN],[31,t.SHED_TAIL],[36,t.DRAGON_CLAW],[40,t.SHIFT_GEAR],[45,t.DRAGON_PULSE],[51,t.DOUBLE_EDGE],[57,t.DRAGON_RUSH]],[e.ORTHWORM]:[[1,t.TACKLE],[1,t.WRAP],[1,t.HARDEN],[7,t.MUD_SLAP],[12,t.SMACK_DOWN],[16,t.BULLDOZE],[21,t.IRON_HEAD],[26,t.TAKE_DOWN],[30,t.DIG],[34,t.SANDSTORM],[38,t.IRON_DEFENSE],[43,t.IRON_TAIL],[47,t.EARTHQUAKE],[52,t.SHED_TAIL]],[e.GLIMMET]:[[1,t.ROCK_THROW],[1,t.HARDEN],[1,t.SMACK_DOWN],[7,t.ACID_SPRAY],[11,t.ANCIENT_POWER],[15,t.ROCK_POLISH],[18,t.STEALTH_ROCK],[22,t.VENOSHOCK],[26,t.SANDSTORM],[29,t.SELF_DESTRUCT],[33,t.ROCK_SLIDE],[37,t.POWER_GEM],[41,t.ACID_ARMOR],[46,t.SLUDGE_WAVE]],[e.GLIMMORA]:[[Ee,t.MORTAL_SPIN],[1,t.ROCK_THROW],[1,t.HARDEN],[1,t.TOXIC_SPIKES],[1,t.SMACK_DOWN],[1,t.SPIKY_SHIELD],[7,t.ACID_SPRAY],[11,t.ANCIENT_POWER],[15,t.ROCK_POLISH],[18,t.STEALTH_ROCK],[22,t.VENOSHOCK],[26,t.SANDSTORM],[29,t.SELF_DESTRUCT],[33,t.ROCK_SLIDE],[39,t.POWER_GEM],[44,t.ACID_ARMOR],[50,t.SLUDGE_WAVE]],[e.GREAVARD]:[[1,t.TACKLE],[1,t.GROWL],[3,t.LICK],[6,t.TAIL_WHIP],[6,t.BITE],[9,t.ROAR],[12,t.HEADBUTT],[16,t.DIG],[24,t.REST],[28,t.CRUNCH],[32,t.PLAY_ROUGH],[37,t.HELPING_HAND],[41,t.PHANTOM_FORCE],[46,t.CHARM],[52,t.DOUBLE_EDGE]],[e.HOUNDSTONE]:[[Ee,t.LAST_RESPECTS],[1,t.TACKLE],[1,t.GROWL],[3,t.LICK],[6,t.TAIL_WHIP],[6,t.BITE],[9,t.ROAR],[12,t.HEADBUTT],[16,t.DIG],[24,t.REST],[28,t.CRUNCH],[36,t.PLAY_ROUGH],[41,t.HELPING_HAND],[46,t.PHANTOM_FORCE],[51,t.CHARM],[58,t.DOUBLE_EDGE]],[e.FLAMIGO]:[[1,t.PECK],[1,t.COPYCAT],[5,t.DOUBLE_KICK],[9,t.DETECT],[12,t.WING_ATTACK],[15,t.FOCUS_ENERGY],[18,t.LOW_KICK],[21,t.FEINT],[27,t.PAYBACK],[31,t.ROOST],[35,t.AIR_SLASH],[39,t.MEGA_KICK],[44,t.WIDE_GUARD],[48,t.THROAT_CHOP],[54,t.BRAVE_BIRD]],[e.CETODDLE]:[[1,t.TACKLE],[1,t.POWDER_SNOW],[6,t.GROWL],[9,t.ECHOED_VOICE],[12,t.ICE_SHARD],[15,t.REST],[19,t.TAKE_DOWN],[25,t.FLAIL],[27,t.AVALANCHE],[31,t.BOUNCE],[36,t.BODY_SLAM],[40,t.AMNESIA],[44,t.ICE_SPINNER],[49,t.DOUBLE_EDGE],[53,t.BLIZZARD]],[e.CETITAN]:[[1,t.TACKLE],[1,t.POWDER_SNOW],[6,t.GROWL],[9,t.ECHOED_VOICE],[12,t.ICE_SHARD],[15,t.REST],[19,t.TAKE_DOWN],[25,t.FLAIL],[27,t.AVALANCHE],[31,t.BOUNCE],[36,t.BODY_SLAM],[40,t.AMNESIA],[44,t.ICE_SPINNER],[49,t.DOUBLE_EDGE],[53,t.BLIZZARD]],[e.VELUZA]:[[1,t.TACKLE],[1,t.AQUA_JET],[7,t.PLUCK],[11,t.WATER_PULSE],[15,t.FOCUS_ENERGY],[20,t.SLASH],[25,t.AQUA_CUTTER],[30,t.FILLET_AWAY],[35,t.NIGHT_SLASH],[40,t.PSYCHO_CUT],[45,t.LIQUIDATION],[50,t.CRUNCH],[55,t.FINAL_GAMBIT]],[e.DONDOZO]:[[1,t.TACKLE],[1,t.SUPERSONIC],[1,t.WATER_GUN],[5,t.TICKLE],[10,t.FLAIL],[15,t.REST],[15,t.SLEEP_TALK],[20,t.DIVE],[25,t.NOBLE_ROAR],[30,t.SOAK],[35,t.BODY_SLAM],[40,t.AQUA_TAIL],[45,t.RAIN_DANCE],[50,t.ORDER_UP],[55,t.HEAVY_SLAM],[60,t.DOUBLE_EDGE],[65,t.WAVE_CRASH]],[e.TATSUGIRI]:[[1,t.WATER_GUN],[1,t.SPLASH],[6,t.HARDEN],[12,t.HELPING_HAND],[17,t.WATER_PULSE],[23,t.SOAK],[28,t.TAUNT],[34,t.MEMENTO],[39,t.MUDDY_WATER],[43,t.NASTY_PLOT],[47,t.MIRROR_COAT],[52,t.DRAGON_PULSE]],[e.ANNIHILAPE]:[[Ee,t.SHADOW_PUNCH],[1,t.SCRATCH],[1,t.LEER],[1,t.COUNTER],[1,t.FOCUS_ENERGY],[1,t.COVET],[1,t.FLING],[5,t.FURY_SWIPES],[8,t.LOW_KICK],[12,t.SEISMIC_TOSS],[17,t.SWAGGER],[22,t.CROSS_CHOP],[26,t.ASSURANCE],[30,t.THRASH],[35,t.RAGE_FIST],[39,t.CLOSE_COMBAT],[44,t.SCREECH],[48,t.STOMPING_TANTRUM],[53,t.OUTRAGE],[57,t.FINAL_GAMBIT]],[e.CLODSIRE]:[[Ee,t.AMNESIA],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.POISON_STING],[4,t.TOXIC_SPIKES],[8,t.MUD_SHOT],[12,t.POISON_TAIL],[16,t.SLAM],[21,t.YAWN],[24,t.POISON_JAB],[30,t.SLUDGE_WAVE],[36,t.MEGAHORN],[40,t.TOXIC],[48,t.EARTHQUAKE]],[e.FARIGIRAF]:[[1,t.TACKLE],[1,t.GROWL],[1,t.ASTONISH],[1,t.POWER_SWAP],[1,t.GUARD_SWAP],[5,t.CONFUSION],[10,t.ASSURANCE],[14,t.STOMP],[19,t.PSYBEAM],[23,t.AGILITY],[28,t.DOUBLE_HIT],[32,t.TWIN_BEAM],[37,t.CRUNCH],[41,t.BATON_PASS],[46,t.NASTY_PLOT],[50,t.PSYCHIC]],[e.DUDUNSPARCE]:[[1,t.DEFENSE_CURL],[1,t.FLAIL],[1,t.TACKLE],[4,t.MUD_SLAP],[8,t.ROLLOUT],[12,t.GLARE],[16,t.SCREECH],[20,t.ANCIENT_POWER],[24,t.DRILL_RUN],[28,t.YAWN],[32,t.HYPER_DRILL],[36,t.ROOST],[40,t.DRAGON_RUSH],[44,t.COIL],[48,t.DOUBLE_EDGE],[52,t.ENDEAVOR],[56,t.HURRICANE],[62,t.BOOMBURST]],[e.KINGAMBIT]:[[Ee,t.KOWTOW_CLEAVE],[1,t.SCRATCH],[1,t.LEER],[1,t.FURY_CUTTER],[1,t.METAL_CLAW],[1,t.METAL_BURST],[15,t.TORMENT],[20,t.SCARY_FACE],[25,t.ASSURANCE],[30,t.METAL_SOUND],[35,t.SLASH],[40,t.NIGHT_SLASH],[45,t.IRON_DEFENSE],[50,t.RETALIATE],[57,t.IRON_HEAD],[64,t.SWORDS_DANCE],[71,t.GUILLOTINE]],[e.GREAT_TUSK]:[[1,t.HORN_ATTACK],[1,t.DEFENSE_CURL],[1,t.ROLLOUT],[1,t.SUNNY_DAY],[7,t.BULLDOZE],[14,t.TAUNT],[21,t.RAPID_SPIN],[28,t.BRICK_BREAK],[35,t.STOMPING_TANTRUM],[42,t.KNOCK_OFF],[49,t.EARTHQUAKE],[56,t.GIGA_IMPACT],[63,t.CLOSE_COMBAT],[70,t.ENDEAVOR],[77,t.MEGAHORN],[84,t.HEAD_SMASH],[91,t.HEADLONG_RUSH]],[e.SCREAM_TAIL]:[[X,t.SUNNY_DAY],[1,t.POUND],[1,t.SING],[1,t.DISABLE],[7,t.HOWL],[14,t.NOBLE_ROAR],[21,t.BITE],[28,t.BODY_SLAM],[35,t.REST],[42,t.PLAY_ROUGH],[49,t.HYPER_VOICE],[56,t.PSYCHIC_FANGS],[63,t.CRUNCH],[70,t.WISH],[77,t.GYRO_BALL],[84,t.PERISH_SONG],[91,t.BOOMBURST]],[e.BRUTE_BONNET]:[[X,t.SUNNY_DAY],[1,t.ABSORB],[1,t.GROWTH],[1,t.ASTONISH],[7,t.STUN_SPORE],[14,t.MEGA_DRAIN],[21,t.SYNTHESIS],[28,t.CLEAR_SMOG],[35,t.PAYBACK],[42,t.THRASH],[49,t.GIGA_DRAIN],[56,t.SUCKER_PUNCH],[63,t.SPORE],[70,t.INGRAIN],[77,t.RAGE_POWDER],[91,t.SOLAR_BEAM]],[e.FLUTTER_MANE]:[[X,t.SUNNY_DAY],[1,t.CONFUSE_RAY],[1,t.SPITE],[1,t.ASTONISH],[1,t.PSYBEAM],[14,t.MEAN_LOOK],[21,t.MEMENTO],[28,t.WISH],[35,t.DAZZLING_GLEAM],[42,t.SHADOW_BALL],[49,t.MYSTICAL_FIRE],[56,t.POWER_GEM],[63,t.PSYSHOCK],[70,t.PHANTOM_FORCE],[77,t.PAIN_SPLIT],[84,t.MOONBLAST],[91,t.PERISH_SONG]],[e.SLITHER_WING]:[[X,t.SUNNY_DAY],[1,t.GUST],[1,t.EMBER],[1,t.BUG_BITE],[7,t.POISON_POWDER],[7,t.STUN_SPORE],[14,t.FLAME_CHARGE],[21,t.STOMP],[28,t.LOW_SWEEP],[35,t.MORNING_SUN],[42,t.LUNGE],[49,t.SUPERPOWER],[56,t.BULK_UP],[63,t.DUAL_WINGBEAT],[70,t.FIRST_IMPRESSION],[77,t.WHIRLWIND],[84,t.LEECH_LIFE],[91,t.THRASH]],[e.SANDY_SHOCKS]:[[X,t.SUNNY_DAY],[1,t.SUPERSONIC],[1,t.THUNDER_SHOCK],[1,t.THUNDER_WAVE],[1,t.ELECTRIC_TERRAIN],[7,t.SPARK],[14,t.BULLDOZE],[21,t.CHARGE_BEAM],[28,t.TRI_ATTACK],[35,t.SCREECH],[42,t.HEAVY_SLAM],[49,t.METAL_SOUND],[56,t.DISCHARGE],[63,t.EARTH_POWER],[70,t.MIRROR_COAT],[77,t.GRAVITY],[84,t.ZAP_CANNON],[91,t.MAGNETIC_FLUX]],[e.IRON_TREADS]:[[1,t.HORN_ATTACK],[1,t.DEFENSE_CURL],[1,t.ROLLOUT],[1,t.ELECTRIC_TERRAIN],[7,t.BULLDOZE],[21,t.RAPID_SPIN],[28,t.IRON_HEAD],[35,t.STOMPING_TANTRUM],[42,t.KNOCK_OFF],[49,t.EARTHQUAKE],[56,t.HEAVY_SLAM],[63,t.WILD_CHARGE],[70,t.ENDEAVOR],[77,t.MEGAHORN],[84,t.GIGA_IMPACT],[91,t.STEEL_ROLLER]],[e.IRON_BUNDLE]:[[X,t.ELECTRIC_TERRAIN],[1,t.PRESENT],[1,t.WATER_GUN],[7,t.POWDER_SNOW],[14,t.WHIRLPOOL],[21,t.TAKE_DOWN],[28,t.DRILL_PECK],[35,t.HELPING_HAND],[42,t.FREEZE_DRY],[49,t.FLIP_TURN],[56,t.ICE_BEAM],[63,t.AGILITY],[70,t.SNOWSCAPE],[77,t.HYDRO_PUMP],[84,t.AURORA_VEIL],[91,t.BLIZZARD]],[e.IRON_HANDS]:[[X,t.ELECTRIC_TERRAIN],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.FOCUS_ENERGY],[1,t.ARM_THRUST],[7,t.FAKE_OUT],[14,t.WHIRLWIND],[21,t.THUNDER_PUNCH],[28,t.SLAM],[35,t.FORCE_PALM],[42,t.SEISMIC_TOSS],[49,t.CHARGE],[56,t.WILD_CHARGE],[63,t.CLOSE_COMBAT],[70,t.DETECT],[77,t.HEAVY_SLAM],[84,t.BELLY_DRUM],[91,t.FOCUS_PUNCH]],[e.IRON_JUGULIS]:[[X,t.ELECTRIC_TERRAIN],[1,t.FOCUS_ENERGY],[1,t.TRI_ATTACK],[1,t.AIR_CUTTER],[1,t.WORK_UP],[1,t.ELECTRIC_TERRAIN],[7,t.ROAR],[14,t.ASSURANCE],[21,t.DRAGON_BREATH],[28,t.SNARL],[35,t.CRUNCH],[42,t.HYPER_VOICE],[56,t.AIR_SLASH],[63,t.KNOCK_OFF],[70,t.DARK_PULSE],[77,t.OUTRAGE],[84,t.DRAGON_PULSE],[91,t.HYPER_BEAM]],[e.IRON_MOTH]:[[X,t.ELECTRIC_TERRAIN],[1,t.GUST],[1,t.WHIRLWIND],[1,t.EMBER],[1,t.ACID_SPRAY],[7,t.STRUGGLE_BUG],[14,t.FIRE_SPIN],[21,t.TAKE_DOWN],[28,t.LUNGE],[35,t.SCREECH],[42,t.DISCHARGE],[49,t.SLUDGE_WAVE],[56,t.FIERY_DANCE],[63,t.METAL_SOUND],[70,t.MORNING_SUN],[77,t.HURRICANE],[84,t.BUG_BUZZ],[91,t.OVERHEAT]],[e.IRON_THORNS]:[[X,t.ELECTRIC_TERRAIN],[1,t.ROCK_THROW],[1,t.IRON_DEFENSE],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[7,t.SCREECH],[21,t.ROCK_TOMB],[28,t.BITE],[35,t.CHARGE],[42,t.ROCK_SLIDE],[49,t.SANDSTORM],[56,t.WILD_CHARGE],[63,t.PIN_MISSILE],[70,t.EARTHQUAKE],[77,t.STEALTH_ROCK],[84,t.STONE_EDGE],[91,t.GIGA_IMPACT]],[e.FRIGIBAX]:[[1,t.TACKLE],[1,t.LEER],[1,t.DRAGON_TAIL],[6,t.ICY_WIND],[12,t.DRAGON_BREATH],[18,t.FOCUS_ENERGY],[24,t.BITE],[29,t.ICE_FANG],[32,t.DRAGON_CLAW],[36,t.TAKE_DOWN],[40,t.ICE_BEAM],[44,t.CRUNCH],[48,t.ICICLE_CRASH]],[e.ARCTIBAX]:[[1,t.TACKLE],[1,t.LEER],[1,t.DRAGON_TAIL],[6,t.ICY_WIND],[12,t.DRAGON_BREATH],[18,t.FOCUS_ENERGY],[24,t.BITE],[29,t.ICE_FANG],[32,t.DRAGON_CLAW],[40,t.TAKE_DOWN],[45,t.ICE_BEAM],[50,t.CRUNCH],[55,t.ICICLE_CRASH]],[e.BAXCALIBUR]:[[Ee,t.GLAIVE_RUSH],[1,t.TACKLE],[1,t.LEER],[1,t.ICE_SHARD],[1,t.DRAGON_TAIL],[1,t.BREAKING_SWIPE],[1,t.SNOWSCAPE],[6,t.ICY_WIND],[12,t.DRAGON_BREATH],[18,t.FOCUS_ENERGY],[24,t.BITE],[29,t.ICE_FANG],[35,t.DRAGON_CLAW],[42,t.TAKE_DOWN],[48,t.ICE_BEAM],[55,t.CRUNCH],[62,t.ICICLE_CRASH]],[e.GIMMIGHOUL]:[[1,t.TACKLE],[1,t.ASTONISH]],[e.GHOLDENGO]:[[1,t.TACKLE],[1,t.ASTONISH],[7,t.NIGHT_SHADE],[14,t.CONFUSE_RAY],[21,t.SUBSTITUTE],[28,t.METAL_SOUND],[35,t.SHADOW_BALL],[42,t.RECOVER],[49,t.POWER_GEM],[56,t.MAKE_IT_RAIN],[63,t.NASTY_PLOT],[70,t.MEMENTO]],[e.WO_CHIEN]:[[1,t.ABSORB],[1,t.SPITE],[1,t.MEAN_LOOK],[5,t.TICKLE],[10,t.PAYBACK],[15,t.POISON_POWDER],[15,t.STUN_SPORE],[20,t.MEGA_DRAIN],[25,t.LEECH_SEED],[30,t.GROWTH],[35,t.INGRAIN],[40,t.DARK_PULSE],[45,t.GIGA_DRAIN],[50,t.RUINATION],[55,t.FOUL_PLAY],[60,t.POWER_WHIP],[65,t.GRASSY_TERRAIN],[70,t.KNOCK_OFF],[75,t.LEAF_STORM]],[e.CHIEN_PAO]:[[1,t.SPITE],[1,t.POWDER_SNOW],[1,t.MEAN_LOOK],[5,t.ICY_WIND],[10,t.PAYBACK],[15,t.MIST],[15,t.HAZE],[20,t.ICE_SHARD],[25,t.SWORDS_DANCE],[30,t.SNOWSCAPE],[35,t.NIGHT_SLASH],[40,t.DARK_PULSE],[45,t.ICICLE_CRASH],[50,t.RUINATION],[55,t.SUCKER_PUNCH],[60,t.SACRED_SWORD],[65,t.RECOVER],[70,t.THROAT_CHOP],[75,t.SHEER_COLD]],[e.TING_LU]:[[1,t.SPITE],[1,t.MEAN_LOOK],[1,t.SAND_TOMB],[5,t.SPIKES],[10,t.PAYBACK],[15,t.STOMP],[20,t.BULLDOZE],[25,t.WHIRLWIND],[30,t.TAUNT],[35,t.THRASH],[40,t.DARK_PULSE],[45,t.STOMPING_TANTRUM],[50,t.RUINATION],[55,t.THROAT_CHOP],[60,t.ROCK_SLIDE],[65,t.MEMENTO],[70,t.EARTHQUAKE],[75,t.FISSURE]],[e.CHI_YU]:[[1,t.EMBER],[1,t.SPITE],[1,t.MEAN_LOOK],[5,t.FLAME_WHEEL],[10,t.PAYBACK],[15,t.WILL_O_WISP],[20,t.FLAME_CHARGE],[25,t.INCINERATE],[30,t.CONFUSE_RAY],[35,t.NASTY_PLOT],[40,t.DARK_PULSE],[45,t.LAVA_PLUME],[50,t.RUINATION],[55,t.BOUNCE],[60,t.SWAGGER],[65,t.INFERNO],[70,t.MEMENTO],[75,t.OVERHEAT]],[e.ROARING_MOON]:[[X,t.SUNNY_DAY],[X,t.JAW_LOCK],[X,t.BREAKING_SWIPE],[X,t.SCALE_SHOT],[1,t.LEER],[1,t.BITE],[1,t.FOCUS_ENERGY],[1,t.DRAGON_BREATH],[7,t.INCINERATE],[14,t.HEADBUTT],[21,t.SCARY_FACE],[28,t.DRAGON_CLAW],[35,t.ZEN_HEADBUTT],[42,t.FLAMETHROWER],[49,t.NIGHT_SLASH],[56,t.DRAGON_DANCE],[63,t.DRAGON_RUSH],[70,t.FLY],[77,t.THROAT_CHOP],[84,t.ROOST],[91,t.DOUBLE_EDGE]],[e.IRON_VALIANT]:[[X,t.ELECTRIC_TERRAIN],[1,t.DISABLE],[1,t.DOUBLE_TEAM],[1,t.FURY_CUTTER],[1,t.SHADOW_SNEAK],[7,t.HYPNOSIS],[14,t.FEINT],[21,t.FUTURE_SIGHT],[28,t.DAZZLING_GLEAM],[35,t.PSYCHO_CUT],[42,t.NIGHT_SLASH],[49,t.LEAF_BLADE],[56,t.MOONBLAST],[63,t.CLOSE_COMBAT],[70,t.KNOCK_OFF],[77,t.DESTINY_BOND],[84,t.WIDE_GUARD],[84,t.QUICK_GUARD],[91,t.SPIRIT_BREAK]],[e.KORAIDON]:[[1,t.SUNNY_DAY],[1,t.BREAKING_SWIPE],[7,t.ROCK_SMASH],[14,t.ANCIENT_POWER],[21,t.DRAIN_PUNCH],[28,t.BRICK_BREAK],[35,t.AGILITY],[42,t.DRAGON_CLAW],[49,t.FLAMETHROWER],[56,t.COLLISION_COURSE],[63,t.SCREECH],[70,t.COUNTER],[77,t.OUTRAGE],[84,t.CLOSE_COMBAT],[91,t.FLARE_BLITZ],[98,t.GIGA_IMPACT]],[e.MIRAIDON]:[[1,t.THUNDER_SHOCK],[1,t.DRAGON_BREATH],[1,t.ELECTRIC_TERRAIN],[7,t.SHOCK_WAVE],[14,t.CHARGE],[21,t.PARABOLIC_CHARGE],[28,t.DISCHARGE],[35,t.AGILITY],[42,t.DRAGON_PULSE],[56,t.ELECTRO_DRIFT],[63,t.METAL_SOUND],[70,t.MIRROR_COAT],[77,t.OUTRAGE],[84,t.THUNDER],[91,t.OVERHEAT],[98,t.HYPER_BEAM]],[e.WALKING_WAKE]:[[X,t.SUNNY_DAY],[X,t.HONE_CLAWS],[1,t.LEER],[1,t.ROAR],[1,t.TWISTER],[1,t.AQUA_JET],[7,t.BITE],[14,t.WATER_PULSE],[21,t.NOBLE_ROAR],[28,t.DRAGON_BREATH],[35,t.BREAKING_SWIPE],[42,t.DRAGON_RUSH],[56,t.HYDRO_STEAM],[63,t.DRAGON_PULSE],[70,t.OUTRAGE],[77,t.FLAMETHROWER],[84,t.HYDRO_PUMP]],[e.IRON_LEAVES]:[[X,t.ELECTRIC_TERRAIN],[X,t.QUASH],[1,t.LEER],[1,t.QUICK_ATTACK],[1,t.HELPING_HAND],[1,t.WORK_UP],[7,t.MAGICAL_LEAF],[14,t.RETALIATE],[21,t.QUICK_GUARD],[28,t.NIGHT_SLASH],[35,t.SWORDS_DANCE],[42,t.SACRED_SWORD],[49,t.LEAF_BLADE],[56,t.PSYBLADE],[63,t.CLOSE_COMBAT],[70,t.IMPRISON],[77,t.MEGAHORN],[84,t.ALLY_SWITCH],[91,t.SOLAR_BLADE]],[e.DIPPLIN]:[[Ee,t.DOUBLE_HIT],[X,t.DRAGON_CHEER],[1,t.LEAFAGE],[1,t.WITHDRAW],[1,t.SWEET_SCENT],[1,t.RECYCLE],[1,t.ASTONISH],[4,t.DRAGON_TAIL],[8,t.GROWTH],[12,t.DRAGON_BREATH],[16,t.PROTECT],[20,t.BULLET_SEED],[28,t.SYRUP_BOMB],[32,t.DRAGON_PULSE],[36,t.RECOVER],[40,t.ENERGY_BALL],[44,t.SUBSTITUTE]],[e.POLTCHAGEIST]:[[1,t.STUN_SPORE],[1,t.WITHDRAW],[1,t.ASTONISH],[5,t.ABSORB],[12,t.LIFE_DEW],[18,t.FOUL_PLAY],[24,t.MEGA_DRAIN],[30,t.HEX],[36,t.RAGE_POWDER],[42,t.GIGA_DRAIN],[48,t.SHADOW_BALL],[54,t.MEMENTO],[60,t.LEAF_STORM]],[e.SINISTCHA]:[[Ee,t.MATCHA_GOTCHA],[X,t.GIGA_DRAIN],[1,t.STUN_SPORE],[1,t.WITHDRAW],[1,t.ASTONISH],[6,t.ABSORB],[12,t.LIFE_DEW],[18,t.FOUL_PLAY],[24,t.MEGA_DRAIN],[30,t.HEX],[36,t.RAGE_POWDER],[42,t.STRENGTH_SAP],[48,t.SHADOW_BALL],[54,t.MEMENTO],[60,t.LEAF_STORM]],[e.OKIDOGI]:[[1,t.BITE],[1,t.LOW_KICK],[1,t.BULK_UP],[8,t.HOWL],[16,t.POISON_FANG],[24,t.FORCE_PALM],[32,t.COUNTER],[40,t.POISON_JAB],[48,t.BRUTAL_SWING],[56,t.CRUNCH],[64,t.SUPERPOWER],[72,t.GIGA_IMPACT]],[e.MUNKIDORI]:[[1,t.SCRATCH],[1,t.CONFUSION],[1,t.FAKE_OUT],[1,t.FLATTER],[8,t.HELPING_HAND],[16,t.PSYBEAM],[24,t.CLEAR_SMOG],[32,t.POISON_JAB],[40,t.PSYCHIC],[48,t.SLUDGE_WAVE],[56,t.NASTY_PLOT],[64,t.FUTURE_SIGHT],[72,t.PARTING_SHOT]],[e.FEZANDIPITI]:[[1,t.DOUBLE_KICK],[1,t.PECK],[1,t.POISON_GAS],[1,t.DISARMING_VOICE],[8,t.QUICK_ATTACK],[16,t.ATTRACT],[24,t.WING_ATTACK],[32,t.CROSS_POISON],[40,t.TAIL_SLAP],[48,t.BEAT_UP],[56,t.SWAGGER],[56,t.FLATTER],[64,t.ROOST],[72,t.MOONBLAST]],[e.OGERPON]:[[X,t.DOUBLE_KICK],[X,t.COUNTER],[X,t.RETALIATE],[X,t.HORN_LEECH],[1,t.VINE_WHIP],[1,t.LEECH_SEED],[1,t.QUICK_ATTACK],[1,t.FOLLOW_ME],[6,t.FOCUS_ENERGY],[12,t.GROWTH],[18,t.SLAM],[24,t.LOW_SWEEP],[30,t.IVY_CUDGEL],[36,t.THROAT_CHOP],[42,t.SYNTHESIS],[48,t.SPIKY_SHIELD],[54,t.POWER_WHIP],[60,t.SUPERPOWER],[66,t.WOOD_HAMMER]],[e.ARCHALUDON]:[[Ee,t.ELECTRO_SHOT],[X,t.LASER_FOCUS],[1,t.LEER],[1,t.METAL_CLAW],[6,t.ROCK_SMASH],[12,t.HONE_CLAWS],[18,t.METAL_SOUND],[24,t.BREAKING_SWIPE],[30,t.DRAGON_TAIL],[36,t.IRON_DEFENSE],[42,t.FOCUS_ENERGY],[48,t.DRAGON_CLAW],[54,t.FLASH_CANNON],[60,t.METAL_BURST],[66,t.HYPER_BEAM]],[e.HYDRAPPLE]:[[Ee,t.FICKLE_BEAM],[X,t.YAWN],[X,t.DOUBLE_HIT],[X,t.INFESTATION],[X,t.DRAGON_CHEER],[1,t.LEAFAGE],[1,t.WITHDRAW],[1,t.SWEET_SCENT],[1,t.RECYCLE],[1,t.ASTONISH],[4,t.DRAGON_TAIL],[8,t.GROWTH],[12,t.DRAGON_BREATH],[16,t.PROTECT],[20,t.BULLET_SEED],[28,t.SYRUP_BOMB],[32,t.DRAGON_PULSE],[36,t.RECOVER],[40,t.ENERGY_BALL],[44,t.SUBSTITUTE],[54,t.POWER_WHIP]],[e.GOUGING_FIRE]:[[X,t.DOUBLE_KICK],[X,t.ANCIENT_POWER],[X,t.NOBLE_ROAR],[1,t.STOMP],[1,t.LEER],[1,t.INCINERATE],[1,t.SUNNY_DAY],[7,t.FIRE_FANG],[14,t.HOWL],[21,t.BITE],[28,t.DRAGON_CLAW],[35,t.CRUSH_CLAW],[42,t.MORNING_SUN],[49,t.BURNING_BULWARK],[56,t.DRAGON_RUSH],[63,t.FIRE_BLAST],[70,t.LAVA_PLUME],[77,t.OUTRAGE],[84,t.FLARE_BLITZ],[91,t.RAGING_FURY]],[e.RAGING_BOLT]:[[X,t.ANCIENT_POWER],[1,t.TWISTER],[1,t.SUNNY_DAY],[1,t.SHOCK_WAVE],[1,t.STOMP],[7,t.CHARGE],[14,t.DRAGON_BREATH],[21,t.ELECTRIC_TERRAIN],[28,t.DISCHARGE],[35,t.DRAGON_TAIL],[42,t.CALM_MIND],[49,t.THUNDERCLAP],[56,t.DRAGON_HAMMER],[63,t.RISING_VOLTAGE],[70,t.DRAGON_PULSE],[77,t.ZAP_CANNON],[84,t.BODY_PRESS],[91,t.THUNDER]],[e.IRON_BOULDER]:[[1,t.HORN_ATTACK],[1,t.LEER],[1,t.ROCK_THROW],[1,t.ELECTRIC_TERRAIN],[7,t.QUICK_ATTACK],[14,t.SLASH],[21,t.AGILITY],[28,t.PSYCHO_CUT],[35,t.COUNTER],[42,t.ROCK_TOMB],[49,t.SACRED_SWORD],[56,t.MIGHTY_CLEAVE],[63,t.SWORDS_DANCE],[70,t.MEGAHORN],[77,t.QUICK_GUARD],[84,t.STONE_EDGE],[91,t.GIGA_IMPACT]],[e.IRON_CROWN]:[[1,t.LEER],[1,t.ELECTRIC_TERRAIN],[1,t.CONFUSION],[1,t.METAL_CLAW],[7,t.SMART_STRIKE],[14,t.SLASH],[21,t.IRON_DEFENSE],[28,t.PSYSHOCK],[35,t.PSYCHO_CUT],[42,t.FLASH_CANNON],[49,t.SACRED_SWORD],[56,t.TACHYON_CUTTER],[63,t.FUTURE_SIGHT],[70,t.VOLT_SWITCH],[77,t.QUICK_GUARD],[84,t.METAL_BURST],[91,t.HYPER_BEAM]],[e.TERAPAGOS]:[[1,t.WITHDRAW],[1,t.TRI_ATTACK],[1,t.RAPID_SPIN],[10,t.ANCIENT_POWER],[20,t.HEADBUTT],[30,t.PROTECT],[40,t.EARTH_POWER],[50,t.HEAVY_SLAM],[60,t.TERA_STARSTORM],[70,t.DOUBLE_EDGE],[80,t.ROCK_POLISH],[90,t.GYRO_BALL]],[e.PECHARUNT]:[[X,t.DEFENSE_CURL],[X,t.ROLLOUT],[X,t.MEAN_LOOK],[1,t.SMOG],[1,t.POISON_GAS],[1,t.MEMENTO],[1,t.ASTONISH],[8,t.WITHDRAW],[16,t.DESTINY_BOND],[24,t.FAKE_TEARS],[32,t.PARTING_SHOT],[40,t.SHADOW_BALL],[48,t.MALIGNANT_CHAIN],[56,t.TOXIC],[64,t.NASTY_PLOT],[72,t.RECOVER]],[e.ALOLA_RATTATA]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[4,t.QUICK_ATTACK],[7,t.FOCUS_ENERGY],[10,t.BITE],[13,t.PURSUIT],[16,t.HYPER_FANG],[19,t.ASSURANCE],[22,t.CRUNCH],[25,t.SUCKER_PUNCH],[28,t.SUPER_FANG],[31,t.DOUBLE_EDGE],[34,t.ENDEAVOR]],[e.ALOLA_RATICATE]:[[Ee,t.SCARY_FACE],[1,t.SWORDS_DANCE],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.QUICK_ATTACK],[1,t.FOCUS_ENERGY],[10,t.BITE],[13,t.PURSUIT],[16,t.HYPER_FANG],[19,t.ASSURANCE],[24,t.CRUNCH],[29,t.SUCKER_PUNCH],[34,t.SUPER_FANG],[39,t.DOUBLE_EDGE],[44,t.ENDEAVOR]],[e.ALOLA_RAICHU]:[[Ee,t.PSYCHIC],[Ee,t.ZIPPY_ZAP],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.THUNDER_WAVE],[1,t.THUNDER],[1,t.AGILITY],[1,t.QUICK_ATTACK],[1,t.DOUBLE_TEAM],[1,t.LIGHT_SCREEN],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.SPARK],[1,t.IRON_TAIL],[1,t.FEINT],[1,t.NASTY_PLOT],[1,t.DISCHARGE],[1,t.ELECTRO_BALL],[1,t.PLAY_NICE],[1,t.NUZZLE],[5,t.THUNDERBOLT],[50,t.PIKA_PAPOW]],[e.ALOLA_SANDSHREW]:[[1,t.SCRATCH],[1,t.DEFENSE_CURL],[3,t.MIST],[6,t.POWDER_SNOW],[9,t.ROLLOUT],[12,t.FURY_CUTTER],[15,t.RAPID_SPIN],[18,t.METAL_CLAW],[21,t.SWIFT],[24,t.FURY_SWIPES],[27,t.IRON_DEFENSE],[30,t.SLASH],[33,t.IRON_HEAD],[36,t.GYRO_BALL],[39,t.SWORDS_DANCE],[42,t.SNOWSCAPE],[45,t.BLIZZARD]],[e.ALOLA_SANDSLASH]:[[Ee,t.ICICLE_SPEAR],[X,t.SCRATCH],[X,t.MIST],[X,t.BLIZZARD],[X,t.DEFENSE_CURL],[X,t.SWIFT],[X,t.FURY_SWIPES],[X,t.POWDER_SNOW],[X,t.ROLLOUT],[X,t.FURY_CUTTER],[X,t.RAPID_SPIN],[X,t.IRON_DEFENSE],[X,t.GYRO_BALL],[X,t.METAL_BURST],[X,t.IRON_HEAD],[X,t.SNOWSCAPE],[1,t.ICICLE_CRASH],[1,t.METAL_CLAW],[1,t.SLASH],[1,t.SWORDS_DANCE],[1,t.ICE_BALL]],[e.ALOLA_VULPIX]:[[1,t.TAIL_WHIP],[1,t.POWDER_SNOW],[4,t.DISABLE],[8,t.ICE_SHARD],[12,t.SPITE],[16,t.ICY_WIND],[20,t.CONFUSE_RAY],[24,t.AURORA_BEAM],[28,t.EXTRASENSORY],[32,t.ICE_BEAM],[36,t.IMPRISON],[40,t.MIST],[44,t.AURORA_VEIL],[48,t.FREEZE_DRY],[52,t.BLIZZARD]],[e.ALOLA_NINETALES]:[[Ee,t.DAZZLING_GLEAM],[X,t.DISABLE],[X,t.MIST],[X,t.ICE_BEAM],[X,t.AURORA_BEAM],[X,t.CONFUSE_RAY],[X,t.SPITE],[X,t.POWDER_SNOW],[X,t.EXTRASENSORY],[X,t.NASTY_PLOT],[X,t.ICE_SHARD],[X,t.FREEZE_DRY],[X,t.AURORA_VEIL],[1,t.ICY_WIND],[1,t.IMPRISON],[1,t.BLIZZARD],[1,t.TAIL_WHIP]],[e.ALOLA_DIGLETT]:[[1,t.SAND_ATTACK],[1,t.METAL_CLAW],[4,t.GROWL],[8,t.ASTONISH],[12,t.MUD_SLAP],[16,t.BULLDOZE],[20,t.SUCKER_PUNCH],[24,t.IRON_HEAD],[28,t.SANDSTORM],[32,t.DIG],[36,t.EARTH_POWER],[40,t.EARTHQUAKE],[44,t.FISSURE]],[e.ALOLA_DUGTRIO]:[[Ee,t.SAND_TOMB],[1,t.SAND_ATTACK],[1,t.GROWL],[1,t.TRI_ATTACK],[1,t.METAL_CLAW],[1,t.ASTONISH],[1,t.NIGHT_SLASH],[1,t.ROTOTILLER],[12,t.MUD_SLAP],[16,t.BULLDOZE],[20,t.SUCKER_PUNCH],[24,t.IRON_HEAD],[30,t.SANDSTORM],[36,t.DIG],[42,t.EARTH_POWER],[48,t.EARTHQUAKE],[54,t.FISSURE]],[e.ALOLA_MEOWTH]:[[1,t.GROWL],[1,t.FAKE_OUT],[4,t.FEINT],[8,t.SCRATCH],[12,t.PAY_DAY],[16,t.BITE],[20,t.TAUNT],[24,t.ASSURANCE],[29,t.FURY_SWIPES],[32,t.SCREECH],[36,t.NIGHT_SLASH],[40,t.NASTY_PLOT],[44,t.PLAY_ROUGH]],[e.ALOLA_PERSIAN]:[[Ee,t.POWER_GEM],[1,t.SCRATCH],[1,t.GROWL],[1,t.FAKE_OUT],[1,t.FEINT],[1,t.SWITCHEROO],[1,t.QUASH],[12,t.PAY_DAY],[16,t.BITE],[20,t.TAUNT],[24,t.ASSURANCE],[31,t.FURY_SWIPES],[36,t.SCREECH],[42,t.NIGHT_SLASH],[48,t.NASTY_PLOT],[54,t.PLAY_ROUGH]],[e.ALOLA_GEODUDE]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[4,t.CHARGE],[6,t.ROCK_POLISH],[10,t.ROLLOUT],[12,t.SPARK],[16,t.ROCK_THROW],[18,t.SMACK_DOWN],[22,t.THUNDER_PUNCH],[24,t.SELF_DESTRUCT],[28,t.STEALTH_ROCK],[30,t.ROCK_BLAST],[34,t.DISCHARGE],[36,t.EXPLOSION],[40,t.DOUBLE_EDGE],[42,t.STONE_EDGE]],[e.ALOLA_GRAVELER]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[1,t.CHARGE],[1,t.ROCK_POLISH],[10,t.ROLLOUT],[12,t.SPARK],[16,t.ROCK_THROW],[18,t.SMACK_DOWN],[22,t.THUNDER_PUNCH],[24,t.SELF_DESTRUCT],[30,t.STEALTH_ROCK],[34,t.ROCK_BLAST],[40,t.DISCHARGE],[44,t.EXPLOSION],[50,t.DOUBLE_EDGE],[54,t.STONE_EDGE]],[e.ALOLA_GOLEM]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[1,t.CHARGE],[1,t.ROCK_POLISH],[1,t.ROLLOUT],[1,t.HEAVY_SLAM],[12,t.SPARK],[16,t.ROCK_THROW],[18,t.SMACK_DOWN],[22,t.THUNDER_PUNCH],[24,t.SELF_DESTRUCT],[30,t.STEALTH_ROCK],[34,t.ROCK_BLAST],[40,t.DISCHARGE],[44,t.EXPLOSION],[50,t.DOUBLE_EDGE],[54,t.STONE_EDGE]],[e.ALOLA_GRIMER]:[[1,t.POUND],[1,t.POISON_GAS],[4,t.HARDEN],[7,t.BITE],[12,t.DISABLE],[15,t.ACID_SPRAY],[18,t.POISON_FANG],[21,t.MINIMIZE],[26,t.TOXIC],[29,t.KNOCK_OFF],[32,t.CRUNCH],[37,t.SCREECH],[40,t.GUNK_SHOT],[43,t.ACID_ARMOR],[46,t.BELCH],[48,t.MEMENTO]],[e.ALOLA_MUK]:[[1,t.POUND],[1,t.BITE],[1,t.HARDEN],[1,t.POISON_GAS],[12,t.DISABLE],[15,t.ACID_SPRAY],[18,t.POISON_FANG],[21,t.MINIMIZE],[26,t.TOXIC],[29,t.KNOCK_OFF],[32,t.CRUNCH],[37,t.SCREECH],[40,t.GUNK_SHOT],[46,t.ACID_ARMOR],[52,t.BELCH],[57,t.MEMENTO]],[e.ALOLA_EXEGGUTOR]:[[Ee,t.DRAGON_HAMMER],[X,t.GROWTH],[1,t.BARRAGE],[1,t.SEED_BOMB],[1,t.PSYSHOCK],[1,t.WOOD_HAMMER],[1,t.LEAF_STORM],[1,t.MEGA_DRAIN],[1,t.CONFUSION],[1,t.SYNTHESIS],[1,t.BULLET_SEED],[1,t.GIGA_DRAIN],[1,t.EXTRASENSORY],[1,t.UPROAR],[1,t.WORRY_SEED],[1,t.SOLAR_BEAM],[1,t.ABSORB],[1,t.HYPNOSIS],[1,t.REFLECT],[1,t.LEECH_SEED]],[e.ALOLA_MAROWAK]:[[Ee,t.SHADOW_BONE],[1,t.BONE_CLUB],[1,t.HEADBUTT],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.FIRE_SPIN],[1,t.FOCUS_ENERGY],[1,t.MUD_SLAP],[1,t.FALSE_SWIPE],[1,t.RETALIATE],[12,t.FLAME_WHEEL],[16,t.HEX],[20,t.FLING],[24,t.STOMPING_TANTRUM],[31,t.BONE_RUSH],[36,t.WILL_O_WISP],[42,t.ENDEAVOR],[48,t.BONEMERANG],[54,t.THRASH],[60,t.FLARE_BLITZ]],[e.ETERNAL_FLOETTE]:[[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.FAIRY_WIND],[10,t.LUCKY_CHANT],[15,t.RAZOR_LEAF],[20,t.WISH],[25,t.MAGICAL_LEAF],[27,t.GRASSY_TERRAIN],[33,t.PETAL_BLIZZARD],[38,t.AROMATHERAPY],[43,t.MISTY_TERRAIN],[46,t.MOONBLAST],[50,t.LIGHT_OF_RUIN],[51,t.PETAL_DANCE],[58,t.SOLAR_BEAM]],[e.GALAR_MEOWTH]:[[1,t.GROWL],[1,t.FAKE_OUT],[4,t.HONE_CLAWS],[8,t.SCRATCH],[12,t.PAY_DAY],[16,t.METAL_CLAW],[20,t.TAUNT],[24,t.SWAGGER],[29,t.FURY_SWIPES],[32,t.SCREECH],[36,t.SLASH],[40,t.METAL_SOUND],[44,t.THRASH]],[e.GALAR_PONYTA]:[[1,t.TACKLE],[1,t.GROWL],[5,t.TAIL_WHIP],[10,t.CONFUSION],[15,t.FAIRY_WIND],[20,t.AGILITY],[25,t.PSYBEAM],[30,t.STOMP],[35,t.HEAL_PULSE],[41,t.TAKE_DOWN],[45,t.DAZZLING_GLEAM],[50,t.PSYCHIC],[55,t.HEALING_WISH]],[e.GALAR_RAPIDASH]:[[Ee,t.PSYCHO_CUT],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.CONFUSION],[1,t.QUICK_ATTACK],[1,t.MEGAHORN],[15,t.FAIRY_WIND],[20,t.AGILITY],[25,t.PSYBEAM],[30,t.STOMP],[35,t.HEAL_PULSE],[43,t.TAKE_DOWN],[49,t.DAZZLING_GLEAM],[56,t.PSYCHIC],[63,t.HEALING_WISH]],[e.GALAR_SLOWPOKE]:[[1,t.TACKLE],[1,t.CURSE],[3,t.GROWL],[6,t.ACID],[9,t.YAWN],[12,t.CONFUSION],[15,t.DISABLE],[18,t.WATER_PULSE],[21,t.HEADBUTT],[24,t.ZEN_HEADBUTT],[27,t.AMNESIA],[30,t.SURF],[33,t.SLACK_OFF],[36,t.PSYCHIC],[39,t.PSYCH_UP],[42,t.RAIN_DANCE],[45,t.HEAL_PULSE]],[e.GALAR_SLOWBRO]:[[Ee,t.SHELL_SIDE_ARM],[1,t.TACKLE],[1,t.GROWL],[1,t.ACID],[1,t.WITHDRAW],[1,t.CURSE],[9,t.YAWN],[12,t.CONFUSION],[15,t.DISABLE],[18,t.WATER_PULSE],[21,t.HEADBUTT],[24,t.ZEN_HEADBUTT],[27,t.AMNESIA],[30,t.SURF],[33,t.SLACK_OFF],[36,t.PSYCHIC],[39,t.PSYCH_UP],[42,t.RAIN_DANCE],[45,t.HEAL_PULSE]],[e.GALAR_FARFETCHD]:[[1,t.SAND_ATTACK],[1,t.PECK],[5,t.LEER],[10,t.FURY_CUTTER],[15,t.ROCK_SMASH],[20,t.BRUTAL_SWING],[25,t.DETECT],[30,t.KNOCK_OFF],[35,t.DEFOG],[40,t.BRICK_BREAK],[45,t.SWORDS_DANCE],[50,t.SLAM],[55,t.LEAF_BLADE],[60,t.FINAL_GAMBIT],[65,t.BRAVE_BIRD]],[e.GALAR_WEEZING]:[[Ee,t.DOUBLE_HIT],[1,t.TACKLE],[1,t.SMOKESCREEN],[1,t.HAZE],[1,t.SMOG],[1,t.POISON_GAS],[1,t.HEAT_WAVE],[1,t.DEFOG],[1,t.AROMATIC_MIST],[1,t.STRANGE_STEAM],[12,t.CLEAR_SMOG],[16,t.ASSURANCE],[20,t.SLUDGE],[24,t.FAIRY_WIND],[28,t.SELF_DESTRUCT],[32,t.SLUDGE_BOMB],[38,t.TOXIC],[44,t.BELCH],[50,t.EXPLOSION],[56,t.MEMENTO],[62,t.DESTINY_BOND],[68,t.MISTY_TERRAIN]],[e.GALAR_MR_MIME]:[[1,t.POUND],[1,t.BARRIER],[1,t.TICKLE],[1,t.MIMIC],[1,t.LIGHT_SCREEN],[1,t.REFLECT],[1,t.PROTECT],[1,t.SAFEGUARD],[1,t.BATON_PASS],[1,t.ENCORE],[1,t.RAPID_SPIN],[1,t.ROLE_PLAY],[1,t.RECYCLE],[1,t.COPYCAT],[1,t.ICE_SHARD],[1,t.MISTY_TERRAIN],[1,t.DAZZLING_GLEAM],[12,t.CONFUSION],[16,t.ALLY_SWITCH],[20,t.ICY_WIND],[24,t.DOUBLE_KICK],[28,t.PSYBEAM],[32,t.HYPNOSIS],[36,t.MIRROR_COAT],[40,t.SUCKER_PUNCH],[44,t.FREEZE_DRY],[48,t.PSYCHIC],[52,t.TEETER_DANCE]],[e.GALAR_ARTICUNO]:[[1,t.GUST],[5,t.CONFUSION],[10,t.REFLECT],[15,t.HYPNOSIS],[20,t.AGILITY],[25,t.ANCIENT_POWER],[30,t.TAILWIND],[35,t.PSYCHO_CUT],[40,t.RECOVER],[45,t.FREEZING_GLARE],[50,t.DREAM_EATER],[55,t.HURRICANE],[60,t.DOUBLE_TEAM],[65,t.FUTURE_SIGHT],[70,t.TRICK_ROOM]],[e.GALAR_ZAPDOS]:[[1,t.PECK],[1,t.FOCUS_ENERGY],[5,t.ROCK_SMASH],[10,t.LIGHT_SCREEN],[15,t.PLUCK],[20,t.AGILITY],[25,t.ANCIENT_POWER],[30,t.BRICK_BREAK],[35,t.DRILL_PECK],[40,t.QUICK_GUARD],[45,t.THUNDEROUS_KICK],[50,t.BULK_UP],[55,t.COUNTER],[60,t.DETECT],[65,t.CLOSE_COMBAT],[70,t.REVERSAL]],[e.GALAR_MOLTRES]:[[1,t.GUST],[1,t.LEER],[5,t.PAYBACK],[10,t.SAFEGUARD],[15,t.WING_ATTACK],[20,t.AGILITY],[25,t.ANCIENT_POWER],[30,t.SUCKER_PUNCH],[35,t.AIR_SLASH],[40,t.AFTER_YOU],[45,t.FIERY_WRATH],[50,t.NASTY_PLOT],[55,t.HURRICANE],[60,t.ENDURE],[65,t.MEMENTO],[70,t.SKY_ATTACK]],[e.GALAR_SLOWKING]:[[Ee,t.EERIE_SPELL],[X,t.FUTURE_SIGHT],[X,t.CHILLY_RECEPTION],[X,t.TOXIC],[1,t.POWER_GEM],[1,t.NASTY_PLOT],[1,t.SWAGGER],[1,t.TACKLE],[1,t.CURSE],[1,t.GROWL],[1,t.ACID],[9,t.YAWN],[12,t.CONFUSION],[15,t.DISABLE],[18,t.WATER_PULSE],[21,t.HEADBUTT],[24,t.ZEN_HEADBUTT],[27,t.AMNESIA],[30,t.SURF],[33,t.SLACK_OFF],[36,t.PSYCHIC],[39,t.PSYCH_UP],[42,t.RAIN_DANCE],[45,t.HEAL_PULSE]],[e.GALAR_CORSOLA]:[[1,t.TACKLE],[1,t.HARDEN],[5,t.ASTONISH],[10,t.DISABLE],[15,t.SPITE],[20,t.ANCIENT_POWER],[25,t.HEX],[30,t.CURSE],[35,t.STRENGTH_SAP],[40,t.POWER_GEM],[45,t.NIGHT_SHADE],[50,t.GRUDGE],[55,t.MIRROR_COAT]],[e.GALAR_ZIGZAGOON]:[[1,t.TACKLE],[1,t.LEER],[3,t.SAND_ATTACK],[6,t.LICK],[9,t.SNARL],[12,t.HEADBUTT],[15,t.BABY_DOLL_EYES],[18,t.PIN_MISSILE],[21,t.REST],[24,t.TAKE_DOWN],[27,t.SCARY_FACE],[30,t.COUNTER],[33,t.TAUNT],[36,t.DOUBLE_EDGE]],[e.GALAR_LINOONE]:[[Ee,t.NIGHT_SLASH],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.PIN_MISSILE],[1,t.LEER],[1,t.LICK],[1,t.SWITCHEROO],[1,t.BABY_DOLL_EYES],[9,t.SNARL],[12,t.HEADBUTT],[15,t.HONE_CLAWS],[18,t.FURY_SWIPES],[23,t.REST],[28,t.TAKE_DOWN],[33,t.SCARY_FACE],[38,t.COUNTER],[43,t.TAUNT],[48,t.DOUBLE_EDGE]],[e.GALAR_DARUMAKA]:[[1,t.TACKLE],[1,t.POWDER_SNOW],[4,t.TAUNT],[8,t.BITE],[12,t.AVALANCHE],[16,t.WORK_UP],[20,t.ICE_FANG],[24,t.HEADBUTT],[28,t.ICE_PUNCH],[32,t.UPROAR],[36,t.BELLY_DRUM],[40,t.BLIZZARD],[44,t.THRASH],[48,t.SUPERPOWER]],[e.GALAR_DARMANITAN]:[[Ee,t.ICICLE_CRASH],[1,t.TACKLE],[1,t.BITE],[1,t.POWDER_SNOW],[1,t.TAUNT],[12,t.AVALANCHE],[16,t.WORK_UP],[20,t.ICE_FANG],[24,t.HEADBUTT],[28,t.ICE_PUNCH],[32,t.UPROAR],[38,t.BELLY_DRUM],[44,t.BLIZZARD],[50,t.THRASH],[56,t.SUPERPOWER]],[e.GALAR_YAMASK]:[[1,t.PROTECT],[1,t.ASTONISH],[4,t.HAZE],[8,t.NIGHT_SHADE],[12,t.DISABLE],[16,t.BRUTAL_SWING],[20,t.CRAFTY_SHIELD],[24,t.HEX],[28,t.MEAN_LOOK],[32,t.SLAM],[36,t.CURSE],[40,t.SHADOW_BALL],[44,t.EARTHQUAKE],[48,t.GUARD_SPLIT],[48,t.POWER_SPLIT],[52,t.DESTINY_BOND]],[e.GALAR_STUNFISK]:[[1,t.TACKLE],[1,t.WATER_GUN],[1,t.MUD_SLAP],[1,t.METAL_CLAW],[5,t.ENDURE],[10,t.MUD_SHOT],[15,t.REVENGE],[20,t.METAL_SOUND],[25,t.SUCKER_PUNCH],[30,t.IRON_DEFENSE],[35,t.BOUNCE],[40,t.MUDDY_WATER],[45,t.SNAP_TRAP],[50,t.FLAIL],[55,t.FISSURE]],[e.HISUI_GROWLITHE]:[[1,t.LEER],[1,t.EMBER],[4,t.HOWL],[8,t.BITE],[12,t.FLAME_WHEEL],[16,t.HELPING_HAND],[24,t.FIRE_FANG],[28,t.RETALIATE],[32,t.CRUNCH],[36,t.TAKE_DOWN],[40,t.FLAMETHROWER],[44,t.ROAR],[48,t.ROCK_SLIDE],[52,t.REVERSAL],[56,t.FLARE_BLITZ]],[e.HISUI_ARCANINE]:[[Ee,t.EXTREME_SPEED],[1,t.TAKE_DOWN],[1,t.LEER],[1,t.BITE],[1,t.ROAR],[1,t.EMBER],[1,t.ROCK_THROW],[1,t.AGILITY],[1,t.ROCK_SLIDE],[1,t.FLAME_WHEEL],[1,t.REVERSAL],[1,t.CRUNCH],[1,t.HELPING_HAND],[1,t.HOWL],[1,t.FLARE_BLITZ],[1,t.FIRE_FANG],[1,t.RETALIATE],[5,t.FLAMETHROWER],[64,t.RAGING_FURY]],[e.HISUI_VOLTORB]:[[1,t.TACKLE],[1,t.CHARGE],[4,t.THUNDER_SHOCK],[6,t.STUN_SPORE],[9,t.BULLET_SEED],[11,t.ROLLOUT],[13,t.SCREECH],[16,t.CHARGE_BEAM],[20,t.SWIFT],[22,t.ELECTRO_BALL],[26,t.SELF_DESTRUCT],[29,t.ENERGY_BALL],[34,t.SEED_BOMB],[34,t.DISCHARGE],[41,t.EXPLOSION],[46,t.GYRO_BALL],[50,t.GRASSY_TERRAIN]],[e.HISUI_ELECTRODE]:[[Ee,t.CHLOROBLAST],[1,t.TACKLE],[1,t.CHARGE],[4,t.THUNDER_SHOCK],[6,t.STUN_SPORE],[9,t.BULLET_SEED],[11,t.ROLLOUT],[13,t.SCREECH],[16,t.CHARGE_BEAM],[20,t.SWIFT],[22,t.ELECTRO_BALL],[26,t.SELF_DESTRUCT],[29,t.ENERGY_BALL],[34,t.SEED_BOMB],[34,t.DISCHARGE],[41,t.EXPLOSION],[46,t.GYRO_BALL],[50,t.GRASSY_TERRAIN]],[e.HISUI_TYPHLOSION]:[[Ee,t.INFERNAL_PARADE],[1,t.TACKLE],[1,t.DOUBLE_EDGE],[1,t.LEER],[1,t.EMBER],[1,t.SMOKESCREEN],[1,t.ERUPTION],[1,t.GYRO_BALL],[13,t.QUICK_ATTACK],[20,t.FLAME_WHEEL],[24,t.DEFENSE_CURL],[31,t.SWIFT],[35,t.FLAME_CHARGE],[43,t.LAVA_PLUME],[48,t.FLAMETHROWER],[56,t.INFERNO],[61,t.ROLLOUT],[74,t.OVERHEAT]],[e.HISUI_QWILFISH]:[[1,t.TACKLE],[1,t.POISON_STING],[4,t.HARDEN],[8,t.BITE],[12,t.FELL_STINGER],[16,t.MINIMIZE],[20,t.SPIKES],[24,t.BRINE],[28,t.BARB_BARRAGE],[32,t.PIN_MISSILE],[36,t.TOXIC_SPIKES],[40,t.STOCKPILE],[40,t.SPIT_UP],[44,t.TOXIC],[48,t.CRUNCH],[52,t.ACUPRESSURE],[56,t.DESTINY_BOND]],[e.HISUI_SNEASEL]:[[1,t.SCRATCH],[1,t.LEER],[1,t.ROCK_SMASH],[6,t.TAUNT],[12,t.QUICK_ATTACK],[18,t.METAL_CLAW],[24,t.POISON_JAB],[30,t.BRICK_BREAK],[36,t.HONE_CLAWS],[42,t.SLASH],[48,t.AGILITY],[54,t.SCREECH],[60,t.CLOSE_COMBAT]],[e.HISUI_SAMUROTT]:[[Ee,t.CEASELESS_EDGE],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.SOAK],[1,t.SLASH],[1,t.MEGAHORN],[1,t.SUCKER_PUNCH],[13,t.FOCUS_ENERGY],[18,t.RAZOR_SHELL],[21,t.FURY_CUTTER],[25,t.WATER_PULSE],[29,t.AERIAL_ACE],[34,t.AQUA_JET],[39,t.ENCORE],[46,t.AQUA_TAIL],[51,t.RETALIATE],[58,t.SWORDS_DANCE],[63,t.HYDRO_PUMP]],[e.HISUI_LILLIGANT]:[[Ee,t.VICTORY_DANCE],[1,t.MEGA_KICK],[1,t.ABSORB],[1,t.MEGA_DRAIN],[1,t.LEECH_SEED],[1,t.GROWTH],[1,t.STUN_SPORE],[1,t.SLEEP_POWDER],[1,t.GIGA_DRAIN],[1,t.CHARM],[1,t.SYNTHESIS],[1,t.SUNNY_DAY],[1,t.HELPING_HAND],[1,t.TEETER_DANCE],[1,t.MAGICAL_LEAF],[1,t.LEAF_BLADE],[1,t.ENERGY_BALL],[1,t.DEFOG],[1,t.LEAF_STORM],[1,t.ENTRAINMENT],[1,t.AFTER_YOU],[1,t.PETAL_BLIZZARD],[1,t.SOLAR_BLADE],[5,t.AXE_KICK]],[e.HISUI_ZORUA]:[[1,t.SCRATCH],[1,t.LEER],[4,t.TORMENT],[8,t.HONE_CLAWS],[12,t.SHADOW_SNEAK],[16,t.CURSE],[20,t.TAUNT],[24,t.KNOCK_OFF],[28,t.SPITE],[32,t.AGILITY],[36,t.SHADOW_BALL],[40,t.BITTER_MALICE],[44,t.NASTY_PLOT],[48,t.FOUL_PLAY]],[e.HISUI_ZOROARK]:[[Ee,t.SHADOW_CLAW],[1,t.SCRATCH],[1,t.LEER],[1,t.TORMENT],[1,t.U_TURN],[1,t.HONE_CLAWS],[12,t.SHADOW_SNEAK],[16,t.CURSE],[20,t.TAUNT],[24,t.KNOCK_OFF],[28,t.SPITE],[34,t.AGILITY],[40,t.SHADOW_BALL],[46,t.BITTER_MALICE],[52,t.NASTY_PLOT],[58,t.FOUL_PLAY]],[e.HISUI_BRAVIARY]:[[Ee,t.ESPER_WING],[X,t.BRAVE_BIRD],[1,t.WING_ATTACK],[1,t.LEER],[1,t.PECK],[1,t.SKY_ATTACK],[1,t.SUPERPOWER],[1,t.HONE_CLAWS],[18,t.TAILWIND],[24,t.SCARY_FACE],[30,t.AERIAL_ACE],[36,t.SLASH],[42,t.WHIRLWIND],[48,t.CRUSH_CLAW],[57,t.AIR_SLASH],[64,t.DEFOG],[72,t.THRASH],[80,t.HURRICANE]],[e.HISUI_SLIGGOO]:[[Ee,t.SHELTER],[1,t.TACKLE],[1,t.WATER_GUN],[1,t.ABSORB],[1,t.ACID_ARMOR],[1,t.DRAGON_BREATH],[1,t.BODY_SLAM],[15,t.PROTECT],[20,t.FLAIL],[25,t.WATER_PULSE],[30,t.RAIN_DANCE],[35,t.DRAGON_PULSE],[43,t.CURSE],[49,t.IRON_HEAD],[56,t.MUDDY_WATER]],[e.HISUI_GOODRA]:[[Ee,t.IRON_TAIL],[1,t.TACKLE],[1,t.WATER_GUN],[1,t.ABSORB],[1,t.ACID_ARMOR],[1,t.DRAGON_BREATH],[1,t.FEINT],[1,t.ACID_SPRAY],[1,t.TEARFUL_LOOK],[1,t.SHELTER],[15,t.PROTECT],[20,t.FLAIL],[25,t.WATER_PULSE],[30,t.RAIN_DANCE],[35,t.DRAGON_PULSE],[43,t.CURSE],[49,t.BODY_SLAM],[49,t.IRON_HEAD],[58,t.MUDDY_WATER],[67,t.HEAVY_SLAM]],[e.HISUI_AVALUGG]:[[Ee,t.ROCK_SLIDE],[1,t.TACKLE],[1,t.HARDEN],[1,t.POWDER_SNOW],[1,t.RAPID_SPIN],[1,t.WIDE_GUARD],[9,t.CURSE],[12,t.ICY_WIND],[15,t.PROTECT],[18,t.AVALANCHE],[21,t.BITE],[24,t.ICE_FANG],[27,t.IRON_DEFENSE],[30,t.RECOVER],[33,t.CRUNCH],[36,t.TAKE_DOWN],[41,t.BLIZZARD],[46,t.DOUBLE_EDGE],[51,t.STONE_EDGE],[61,t.MOUNTAIN_GALE]],[e.HISUI_DECIDUEYE]:[[Ee,t.TRIPLE_ARROWS],[X,t.NASTY_PLOT],[1,t.TACKLE],[1,t.GROWL],[1,t.U_TURN],[1,t.ASTONISH],[1,t.LEAF_STORM],[1,t.LEAFAGE],[9,t.PECK],[12,t.SHADOW_SNEAK],[15,t.RAZOR_LEAF],[20,t.SYNTHESIS],[25,t.PLUCK],[30,t.BULK_UP],[37,t.SUCKER_PUNCH],[44,t.LEAF_BLADE],[51,t.FEATHER_DANCE],[58,t.BRAVE_BIRD]],[e.PALDEA_TAUROS]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.WORK_UP],[10,t.DOUBLE_KICK],[15,t.ASSURANCE],[20,t.HEADBUTT],[25,t.SCARY_FACE],[30,t.ZEN_HEADBUTT],[35,t.RAGING_BULL],[40,t.REST],[45,t.SWAGGER],[50,t.THRASH],[55,t.DOUBLE_EDGE],[60,t.CLOSE_COMBAT]],[e.PALDEA_WOOPER]:[[1,t.TAIL_WHIP],[1,t.MUD_SHOT],[4,t.TACKLE],[8,t.POISON_TAIL],[12,t.TOXIC_SPIKES],[16,t.SLAM],[21,t.YAWN],[24,t.POISON_JAB],[28,t.SLUDGE_WAVE],[32,t.AMNESIA],[36,t.TOXIC],[40,t.EARTHQUAKE]],[e.BLOODMOON_URSALUNA]:[[X,t.MOONLIGHT],[1,t.HEADLONG_RUSH],[1,t.SCRATCH],[1,t.LEER],[1,t.LICK],[8,t.FURY_SWIPES],[13,t.PAYBACK],[17,t.HARDEN],[22,t.SLASH],[25,t.PLAY_NICE],[35,t.SCARY_FACE],[41,t.REST],[41,t.SNORE],[48,t.EARTH_POWER],[56,t.MOONBLAST],[64,t.HAMMER_ARM],[70,t.BLOOD_MOON]]},Nn={[e.PIKACHU]:{1:[[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.ZIPPY_ZAP],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[34,t.FLOATY_FALL],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[42,t.SPLISHY_SPLASH],[44,t.THUNDER],[48,t.PIKA_PAPOW]],2:[[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.SPARK],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[44,t.THUNDER],[48,t.PIKA_PAPOW]],3:[[1,t.METEOR_MASH],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.SPARK],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[44,t.THUNDER],[48,t.PIKA_PAPOW]],4:[[1,t.ICICLE_CRASH],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.SPARK],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[44,t.THUNDER],[48,t.PIKA_PAPOW]],5:[[1,t.DRAINING_KISS],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.SPARK],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[44,t.THUNDER],[48,t.PIKA_PAPOW]],6:[[1,t.ELECTRIC_TERRAIN],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.SPARK],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[44,t.THUNDER],[48,t.PIKA_PAPOW]],7:[[1,t.FLYING_PRESS],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.SPARK],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[44,t.THUNDER],[48,t.PIKA_PAPOW]],8:[[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.ZIPPY_ZAP],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[34,t.FLOATY_FALL],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[42,t.SPLISHY_SPLASH],[44,t.THUNDER],[48,t.PIKA_PAPOW]]},[e.EEVEE]:{1:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.HELPING_HAND],[1,t.COVET],[5,t.SAND_ATTACK],[10,t.QUICK_ATTACK],[15,t.BABY_DOLL_EYES],[18,t.BOUNCY_BUBBLE],[18,t.SIZZLY_SLIDE],[18,t.BUZZY_BUZZ],[20,t.SWIFT],[25,t.BITE],[30,t.COPYCAT],[33,t.BADDY_BAD],[33,t.GLITZY_GLOW],[35,t.BATON_PASS],[40,t.VEEVEE_VOLLEY],[43,t.FREEZY_FROST],[43,t.SAPPY_SEED],[45,t.CHARM],[50,t.DOUBLE_EDGE],[53,t.SPARKLY_SWIRL],[55,t.LAST_RESORT]],2:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.HELPING_HAND],[1,t.COVET],[5,t.SAND_ATTACK],[10,t.QUICK_ATTACK],[15,t.BABY_DOLL_EYES],[18,t.BOUNCY_BUBBLE],[18,t.SIZZLY_SLIDE],[18,t.BUZZY_BUZZ],[20,t.SWIFT],[25,t.BITE],[30,t.COPYCAT],[33,t.BADDY_BAD],[33,t.GLITZY_GLOW],[35,t.BATON_PASS],[40,t.VEEVEE_VOLLEY],[43,t.FREEZY_FROST],[43,t.SAPPY_SEED],[45,t.CHARM],[50,t.DOUBLE_EDGE],[53,t.SPARKLY_SWIRL],[55,t.LAST_RESORT]]},[e.DEOXYS]:{1:[[1,t.CONFUSION],[1,t.WRAP],[1,t.LEER],[7,t.NIGHT_SHADE],[13,t.TELEPORT],[19,t.TAUNT],[25,t.PURSUIT],[31,t.PSYCHIC],[37,t.SUPERPOWER],[43,t.PSYCHO_SHIFT],[49,t.ZEN_HEADBUTT],[55,t.COSMIC_POWER],[61,t.ZAP_CANNON],[67,t.PSYCHO_BOOST],[73,t.HYPER_BEAM]],2:[[1,t.CONFUSION],[1,t.WRAP],[1,t.LEER],[7,t.NIGHT_SHADE],[13,t.TELEPORT],[19,t.KNOCK_OFF],[25,t.SPIKES],[31,t.PSYCHIC],[37,t.SNATCH],[43,t.PSYCHO_SHIFT],[49,t.ZEN_HEADBUTT],[55,t.AMNESIA],[55,t.IRON_DEFENSE],[61,t.RECOVER],[67,t.PSYCHO_BOOST],[73,t.COUNTER],[73,t.MIRROR_COAT]],3:[[1,t.CONFUSION],[1,t.WRAP],[1,t.LEER],[7,t.NIGHT_SHADE],[13,t.DOUBLE_TEAM],[19,t.KNOCK_OFF],[25,t.PURSUIT],[31,t.PSYCHIC],[37,t.SWIFT],[43,t.PSYCHO_SHIFT],[49,t.ZEN_HEADBUTT],[55,t.AGILITY],[61,t.RECOVER],[67,t.PSYCHO_BOOST],[73,t.EXTREME_SPEED]]},[e.WORMADAM]:{1:[[Ee,t.QUIVER_DANCE],[1,t.STRUGGLE_BUG],[1,t.TACKLE],[1,t.PROTECT],[1,t.SUCKER_PUNCH],[1,t.BUG_BITE],[1,t.PROTECT],[10,t.TACKLE],[20,t.STRING_SHOT],[23,t.CONFUSION],[26,t.ROCK_BLAST],[29,t.HARDEN],[32,t.PSYBEAM],[35,t.INFESTATION],[38,t.FLAIL],[41,t.ATTRACT],[44,t.PSYCHIC],[47,t.FISSURE],[50,t.BUG_BUZZ]],2:[[Ee,t.QUIVER_DANCE],[1,t.STRUGGLE_BUG],[1,t.METAL_BURST],[1,t.TACKLE],[1,t.PROTECT],[1,t.SUCKER_PUNCH],[1,t.BUG_BITE],[1,t.PROTECT],[10,t.TACKLE],[20,t.STRING_SHOT],[23,t.CONFUSION],[26,t.METAL_BURST],[29,t.METAL_SOUND],[32,t.PSYBEAM],[35,t.INFESTATION],[38,t.FLAIL],[41,t.ATTRACT],[44,t.PSYCHIC],[47,t.IRON_HEAD],[50,t.BUG_BUZZ]]},[e.ROTOM]:{1:[[1,t.OVERHEAT],[1,t.DOUBLE_TEAM],[1,t.ASTONISH],[5,t.THUNDER_SHOCK],[10,t.CONFUSE_RAY],[15,t.CHARGE],[20,t.ELECTRO_BALL],[25,t.THUNDER_WAVE],[30,t.SHOCK_WAVE],[35,t.HEX],[40,t.SUBSTITUTE],[45,t.TRICK],[50,t.DISCHARGE],[55,t.UPROAR]],2:[[1,t.HYDRO_PUMP],[1,t.DOUBLE_TEAM],[1,t.ASTONISH],[5,t.THUNDER_SHOCK],[10,t.CONFUSE_RAY],[15,t.CHARGE],[20,t.ELECTRO_BALL],[25,t.THUNDER_WAVE],[30,t.SHOCK_WAVE],[35,t.HEX],[40,t.SUBSTITUTE],[45,t.TRICK],[50,t.DISCHARGE],[55,t.UPROAR]],3:[[1,t.BLIZZARD],[1,t.DOUBLE_TEAM],[1,t.ASTONISH],[5,t.THUNDER_SHOCK],[10,t.CONFUSE_RAY],[15,t.CHARGE],[20,t.ELECTRO_BALL],[25,t.THUNDER_WAVE],[30,t.SHOCK_WAVE],[35,t.HEX],[40,t.SUBSTITUTE],[45,t.TRICK],[50,t.DISCHARGE],[55,t.UPROAR]],4:[[1,t.AIR_SLASH],[1,t.DOUBLE_TEAM],[1,t.ASTONISH],[5,t.THUNDER_SHOCK],[10,t.CONFUSE_RAY],[15,t.CHARGE],[20,t.ELECTRO_BALL],[25,t.THUNDER_WAVE],[30,t.SHOCK_WAVE],[35,t.HEX],[40,t.SUBSTITUTE],[45,t.TRICK],[50,t.DISCHARGE],[55,t.UPROAR]],5:[[1,t.LEAF_STORM],[1,t.DOUBLE_TEAM],[1,t.ASTONISH],[5,t.THUNDER_SHOCK],[10,t.CONFUSE_RAY],[15,t.CHARGE],[20,t.ELECTRO_BALL],[25,t.THUNDER_WAVE],[30,t.SHOCK_WAVE],[35,t.HEX],[40,t.SUBSTITUTE],[45,t.TRICK],[50,t.DISCHARGE],[55,t.UPROAR]]},[e.SHAYMIN]:{1:[[1,t.LEAFAGE],[1,t.GROWTH],[10,t.MAGICAL_LEAF],[19,t.LEECH_SEED],[28,t.QUICK_ATTACK],[37,t.SWEET_SCENT],[46,t.NATURAL_GIFT],[55,t.WORRY_SEED],[64,t.AIR_SLASH],[73,t.ENERGY_BALL],[82,t.SWEET_KISS],[91,t.LEAF_STORM],[100,t.SEED_FLARE]]},[e.KYUREM]:{1:[[1,t.DRAGON_BREATH],[1,t.ANCIENT_POWER],[1,t.NOBLE_ROAR],[1,t.FREEZE_DRY],[8,t.SLASH],[16,t.ENDEAVOR],[24,t.DRAGON_PULSE],[32,t.ICE_BEAM],[40,t.HYPER_VOICE],[48,t.FUSION_BOLT],[56,t.BLIZZARD],[64,t.IMPRISON],[72,t.OUTRAGE],[80,t.FREEZE_SHOCK],[88,t.SHEER_COLD]],2:[[1,t.DRAGON_BREATH],[1,t.ANCIENT_POWER],[1,t.NOBLE_ROAR],[1,t.FREEZE_DRY],[8,t.SLASH],[16,t.ENDEAVOR],[24,t.DRAGON_PULSE],[32,t.ICE_BEAM],[40,t.HYPER_VOICE],[48,t.FUSION_FLARE],[56,t.BLIZZARD],[64,t.IMPRISON],[72,t.OUTRAGE],[80,t.ICE_BURN],[88,t.SHEER_COLD]]},[e.MEOWSTIC]:{1:[[1,t.SCRATCH],[1,t.LEER],[1,t.FAKE_OUT],[1,t.MAGICAL_LEAF],[1,t.DISARMING_VOICE],[9,t.CONFUSION],[12,t.STORED_POWER],[15,t.CHARGE_BEAM],[18,t.COVET],[21,t.PSYBEAM],[24,t.SUCKER_PUNCH],[29,t.ROLE_PLAY],[34,t.LIGHT_SCREEN],[34,t.REFLECT],[39,t.PSYSHOCK],[44,t.EXTRASENSORY],[49,t.SHADOW_BALL],[54,t.PSYCHIC],[59,t.FUTURE_SIGHT]]},[e.HOOPA]:{1:[[1,t.CONFUSION],[1,t.DESTINY_BOND],[1,t.ALLY_SWITCH],[6,t.ASTONISH],[10,t.TRICK],[15,t.LIGHT_SCREEN],[19,t.PSYBEAM],[25,t.SKILL_SWAP],[29,t.GUARD_SPLIT],[29,t.POWER_SPLIT],[46,t.KNOCK_OFF],[50,t.TRICK_ROOM],[50,t.WONDER_ROOM],[55,t.DARK_PULSE],[75,t.PSYCHIC],[85,t.HYPERSPACE_FURY]]},[e.GRENINJA]:{1:[[Ee,t.WATER_SHURIKEN],[1,t.POUND],[1,t.GROWL],[1,t.WATER_GUN],[1,t.QUICK_ATTACK],[1,t.ROUND],[1,t.FLING],[1,t.SMACK_DOWN],[1,t.BOUNCE],[1,t.HAZE],[1,t.MAT_BLOCK],[1,t.ROLE_PLAY],[1,t.NIGHT_SLASH],[10,t.LICK],[14,t.WATER_PULSE],[19,t.SMOKESCREEN],[23,t.SHADOW_SNEAK],[28,t.SPIKES],[33,t.AERIAL_ACE],[42,t.SUBSTITUTE],[49,t.EXTRASENSORY],[56,t.DOUBLE_TEAM],[68,t.HYDRO_PUMP]]},[e.LYCANROC]:{1:[[Ee,t.COUNTER],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.LEER],[1,t.DOUBLE_TEAM],[1,t.REVERSAL],[1,t.ENDURE],[1,t.TAUNT],[12,t.ROCK_THROW],[16,t.HOWL],[20,t.BITE],[24,t.ROCK_TOMB],[30,t.ROAR],[36,t.ROCK_SLIDE],[42,t.CRUNCH],[48,t.SCARY_FACE],[54,t.STEALTH_ROCK],[60,t.STONE_EDGE]],2:[[Ee,t.CRUSH_CLAW],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.LEER],[1,t.COUNTER],[1,t.QUICK_ATTACK],[1,t.DOUBLE_TEAM],[1,t.REVERSAL],[1,t.ENDURE],[1,t.TAUNT],[1,t.SUCKER_PUNCH],[1,t.QUICK_GUARD],[1,t.ACCELEROCK],[12,t.ROCK_THROW],[16,t.HOWL],[20,t.BITE],[24,t.ROCK_TOMB],[30,t.ROAR],[36,t.ROCK_SLIDE],[42,t.CRUNCH],[48,t.SCARY_FACE],[54,t.STEALTH_ROCK],[60,t.STONE_EDGE]]},[e.NECROZMA]:{1:[[Ee,t.SUNSTEEL_STRIKE],[1,t.CONFUSION],[1,t.METAL_CLAW],[1,t.MORNING_SUN],[1,t.MOONLIGHT],[1,t.GRAVITY],[1,t.CHARGE_BEAM],[8,t.STEALTH_ROCK],[16,t.SLASH],[24,t.NIGHT_SLASH],[32,t.PSYCHO_CUT],[40,t.STORED_POWER],[48,t.ROCK_BLAST],[56,t.IRON_DEFENSE],[64,t.POWER_GEM],[72,t.PHOTON_GEYSER],[80,t.AUTOTOMIZE],[88,t.PRISMATIC_LASER]],2:[[Ee,t.MOONGEIST_BEAM],[1,t.CONFUSION],[1,t.METAL_CLAW],[1,t.MORNING_SUN],[1,t.MOONLIGHT],[1,t.GRAVITY],[1,t.CHARGE_BEAM],[8,t.STEALTH_ROCK],[16,t.SLASH],[24,t.NIGHT_SLASH],[32,t.PSYCHO_CUT],[40,t.STORED_POWER],[48,t.ROCK_BLAST],[56,t.IRON_DEFENSE],[64,t.POWER_GEM],[72,t.PHOTON_GEYSER],[80,t.AUTOTOMIZE],[88,t.PRISMATIC_LASER]],3:[[Ee,t.SUNSTEEL_STRIKE],[Ee,t.MOONGEIST_BEAM],[1,t.CONFUSION],[1,t.METAL_CLAW],[1,t.MORNING_SUN],[1,t.MOONLIGHT],[1,t.GRAVITY],[1,t.CHARGE_BEAM],[8,t.STEALTH_ROCK],[16,t.SLASH],[24,t.NIGHT_SLASH],[32,t.PSYCHO_CUT],[40,t.STORED_POWER],[48,t.ROCK_BLAST],[56,t.IRON_DEFENSE],[64,t.POWER_GEM],[72,t.PHOTON_GEYSER],[80,t.AUTOTOMIZE],[88,t.PRISMATIC_LASER]]},[e.TOXTRICITY]:{1:[[Ee,t.SPARK],[1,t.LEER],[1,t.GROWL],[1,t.ACID],[1,t.THUNDER_SHOCK],[1,t.FLAIL],[1,t.ACID_SPRAY],[1,t.BELCH],[1,t.NOBLE_ROAR],[1,t.NUZZLE],[1,t.TEARFUL_LOOK],[4,t.CHARGE],[8,t.SHOCK_WAVE],[12,t.SCARY_FACE],[16,t.TAUNT],[24,t.SCREECH],[28,t.SWAGGER],[32,t.TOXIC],[36,t.DISCHARGE],[40,t.POISON_JAB],[44,t.OVERDRIVE],[48,t.BOOMBURST],[52,t.MAGNETIC_FLUX]]},[e.INDEEDEE]:{1:[[1,t.STORED_POWER],[1,t.PLAY_NICE],[5,t.BATON_PASS],[10,t.DISARMING_VOICE],[15,t.PSYBEAM],[20,t.HELPING_HAND],[25,t.FOLLOW_ME],[30,t.HEALING_WISH],[35,t.PSYCHIC],[40,t.CALM_MIND],[45,t.GUARD_SPLIT],[50,t.PSYCHIC_TERRAIN]]},[e.ZACIAN]:{1:[[Ee,t.BEHEMOTH_BLADE],[1,t.BITE],[1,t.QUICK_ATTACK],[1,t.METAL_CLAW],[1,t.HOWL],[1,t.QUICK_GUARD],[1,t.SACRED_SWORD],[11,t.SLASH],[22,t.SWORDS_DANCE],[33,t.IRON_HEAD],[44,t.NOBLE_ROAR],[55,t.CRUNCH],[66,t.MOONBLAST],[77,t.CLOSE_COMBAT],[88,t.GIGA_IMPACT]]},[e.ZAMAZENTA]:{1:[[Ee,t.BEHEMOTH_BASH],[1,t.BITE],[1,t.QUICK_ATTACK],[1,t.METAL_CLAW],[1,t.HOWL],[1,t.WIDE_GUARD],[11,t.SLASH],[22,t.IRON_DEFENSE],[33,t.IRON_HEAD],[44,t.METAL_BURST],[55,t.CRUNCH],[66,t.MOONBLAST],[77,t.CLOSE_COMBAT],[88,t.GIGA_IMPACT]]},[e.ETERNATUS]:{1:[[1,t.AGILITY],[1,t.CONFUSE_RAY],[1,t.POISON_TAIL],[1,t.DRAGON_TAIL],[8,t.TOXIC],[16,t.VENOSHOCK],[24,t.DRAGON_DANCE],[32,t.CROSS_POISON],[40,t.DRAGON_PULSE],[48,t.FLAMETHROWER],[56,t.DYNAMAX_CANNON],[64,t.COSMIC_POWER],[72,t.RECOVER],[80,t.HYPER_BEAM],[88,t.ETERNABEAM]]},[e.URSHIFU]:{1:[[Ee,t.SURGING_STRIKES],[1,t.LEER],[1,t.FOCUS_ENERGY],[1,t.ENDURE],[1,t.ROCK_SMASH],[1,t.AQUA_JET],[12,t.AERIAL_ACE],[16,t.SCARY_FACE],[20,t.HEADBUTT],[24,t.BRICK_BREAK],[28,t.DETECT],[32,t.BULK_UP],[36,t.IRON_HEAD],[40,t.DYNAMIC_PUNCH],[44,t.COUNTER],[48,t.CLOSE_COMBAT],[52,t.FOCUS_PUNCH]],2:[[Ee,t.WICKED_BLOW],[1,t.LEER],[1,t.FOCUS_ENERGY],[1,t.ENDURE],[1,t.ROCK_SMASH],[1,t.SUCKER_PUNCH],[12,t.AERIAL_ACE],[16,t.SCARY_FACE],[20,t.HEADBUTT],[24,t.BRICK_BREAK],[28,t.DETECT],[32,t.BULK_UP],[36,t.IRON_HEAD],[40,t.DYNAMIC_PUNCH],[44,t.COUNTER],[48,t.CLOSE_COMBAT],[52,t.FOCUS_PUNCH]],3:[[Ee,t.SURGING_STRIKES],[1,t.LEER],[1,t.FOCUS_ENERGY],[1,t.ENDURE],[1,t.ROCK_SMASH],[1,t.AQUA_JET],[12,t.AERIAL_ACE],[16,t.SCARY_FACE],[20,t.HEADBUTT],[24,t.BRICK_BREAK],[28,t.DETECT],[32,t.BULK_UP],[36,t.IRON_HEAD],[40,t.DYNAMIC_PUNCH],[44,t.COUNTER],[48,t.CLOSE_COMBAT],[52,t.FOCUS_PUNCH]]},[e.CALYREX]:{1:[[1,t.POUND],[1,t.SWORDS_DANCE],[1,t.STOMP],[1,t.DOUBLE_KICK],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.THRASH],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.MIST],[1,t.MEGA_DRAIN],[1,t.GROWTH],[1,t.CONFUSION],[1,t.TORMENT],[1,t.TAUNT],[1,t.IRON_DEFENSE],[1,t.AVALANCHE],[1,t.ICICLE_CRASH],[1,t.GLACIAL_LANCE],[8,t.LIFE_DEW],[16,t.GIGA_DRAIN],[24,t.PSYSHOCK],[32,t.HELPING_HAND],[40,t.AROMATHERAPY],[40,t.GRASSY_TERRAIN],[48,t.ENERGY_BALL],[56,t.PSYCHIC],[64,t.LEECH_SEED],[72,t.HEAL_PULSE],[80,t.SOLAR_BEAM],[88,t.FUTURE_SIGHT]],2:[[1,t.POUND],[1,t.STOMP],[1,t.DOUBLE_KICK],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.THRASH],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.DISABLE],[1,t.MEGA_DRAIN],[1,t.GROWTH],[1,t.CONFUSION],[1,t.AGILITY],[1,t.CONFUSE_RAY],[1,t.HAZE],[1,t.SHADOW_BALL],[1,t.NASTY_PLOT],[1,t.HEX],[1,t.ASTRAL_BARRAGE],[8,t.LIFE_DEW],[16,t.GIGA_DRAIN],[24,t.PSYSHOCK],[32,t.HELPING_HAND],[40,t.GRASSY_TERRAIN],[40,t.PSYCHIC_TERRAIN],[48,t.ENERGY_BALL],[56,t.PSYCHIC],[64,t.LEECH_SEED],[72,t.HEAL_PULSE],[80,t.SOLAR_BEAM],[88,t.FUTURE_SIGHT]]},[e.OINKOLOGNE]:{1:[[1,t.TACKLE],[1,t.TAIL_WHIP],[3,t.DISARMING_VOICE],[6,t.ECHOED_VOICE],[9,t.MUD_SHOT],[12,t.COVET],[15,t.DIG],[17,t.HEADBUTT],[23,t.YAWN],[28,t.TAKE_DOWN],[30,t.WORK_UP],[34,t.UPROAR],[39,t.DOUBLE_EDGE],[45,t.EARTH_POWER],[51,t.BELCH]]},[e.REVAVROOM]:{1:[[Ee,t.WICKED_TORQUE],[Ee,t.SHIFT_GEAR],[1,t.LICK],[1,t.POISON_GAS],[1,t.MAGNET_RISE],[4,t.SMOG],[7,t.TAUNT],[10,t.ASSURANCE],[13,t.SLUDGE],[17,t.GYRO_BALL],[21,t.HEADBUTT],[25,t.SCREECH],[28,t.IRON_HEAD],[32,t.SWAGGER],[36,t.POISON_JAB],[46,t.UPROAR],[52,t.SPIN_OUT],[58,t.GUNK_SHOT]],2:[[Ee,t.BLAZING_TORQUE],[Ee,t.SHIFT_GEAR],[1,t.LICK],[1,t.POISON_GAS],[1,t.MAGNET_RISE],[4,t.SMOG],[7,t.TAUNT],[10,t.ASSURANCE],[13,t.SLUDGE],[17,t.GYRO_BALL],[21,t.HEADBUTT],[25,t.SCREECH],[28,t.IRON_HEAD],[32,t.SWAGGER],[36,t.POISON_JAB],[46,t.UPROAR],[52,t.SPIN_OUT],[58,t.GUNK_SHOT]],3:[[Ee,t.NOXIOUS_TORQUE],[Ee,t.SHIFT_GEAR],[1,t.LICK],[1,t.POISON_GAS],[1,t.MAGNET_RISE],[4,t.SMOG],[7,t.TAUNT],[10,t.ASSURANCE],[13,t.SLUDGE],[17,t.GYRO_BALL],[21,t.HEADBUTT],[25,t.SCREECH],[28,t.IRON_HEAD],[32,t.SWAGGER],[36,t.POISON_JAB],[46,t.UPROAR],[52,t.SPIN_OUT],[58,t.GUNK_SHOT]],4:[[Ee,t.MAGICAL_TORQUE],[Ee,t.SHIFT_GEAR],[1,t.LICK],[1,t.POISON_GAS],[1,t.MAGNET_RISE],[4,t.SMOG],[7,t.TAUNT],[10,t.ASSURANCE],[13,t.SLUDGE],[17,t.GYRO_BALL],[21,t.HEADBUTT],[25,t.SCREECH],[28,t.IRON_HEAD],[32,t.SWAGGER],[36,t.POISON_JAB],[46,t.UPROAR],[52,t.SPIN_OUT],[58,t.GUNK_SHOT]],5:[[Ee,t.COMBAT_TORQUE],[Ee,t.SHIFT_GEAR],[1,t.LICK],[1,t.POISON_GAS],[1,t.MAGNET_RISE],[4,t.SMOG],[7,t.TAUNT],[10,t.ASSURANCE],[13,t.SLUDGE],[17,t.GYRO_BALL],[21,t.HEADBUTT],[25,t.SCREECH],[28,t.IRON_HEAD],[32,t.SWAGGER],[36,t.POISON_JAB],[46,t.UPROAR],[52,t.SPIN_OUT],[58,t.GUNK_SHOT]]},[e.PALDEA_TAUROS]:{1:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.WORK_UP],[10,t.DOUBLE_KICK],[15,t.FLAME_CHARGE],[20,t.HEADBUTT],[25,t.SCARY_FACE],[30,t.ZEN_HEADBUTT],[35,t.RAGING_BULL],[40,t.REST],[45,t.SWAGGER],[50,t.THRASH],[55,t.FLARE_BLITZ],[60,t.CLOSE_COMBAT]],2:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.WORK_UP],[10,t.DOUBLE_KICK],[15,t.AQUA_JET],[20,t.HEADBUTT],[25,t.SCARY_FACE],[30,t.ZEN_HEADBUTT],[35,t.RAGING_BULL],[40,t.REST],[45,t.SWAGGER],[50,t.THRASH],[55,t.WAVE_CRASH],[60,t.CLOSE_COMBAT]]}},w6=5,sk=3,Rk=3,Ok=6,nk=5;function H1(E){switch(E){case 1:return 25;case 2:return 50;case 3:return 75;case 4:return 100;case 5:return 150;case 6:return 200;case 7:return 300;case 8:case 9:return 450;default:return 600}}N(H1,"getStarterValueFriendshipCap");const KA={[e.BULBASAUR]:3,[e.CHARMANDER]:3,[e.SQUIRTLE]:3,[e.CATERPIE]:2,[e.WEEDLE]:1,[e.PIDGEY]:1,[e.RATTATA]:1,[e.SPEAROW]:1,[e.EKANS]:2,[e.PIKACHU]:4,[e.SANDSHREW]:2,[e.NIDORAN_F]:3,[e.NIDORAN_M]:3,[e.VULPIX]:3,[e.ZUBAT]:3,[e.ODDISH]:3,[e.PARAS]:2,[e.VENONAT]:2,[e.DIGLETT]:2,[e.MEOWTH]:3,[e.PSYDUCK]:2,[e.MANKEY]:4,[e.GROWLITHE]:4,[e.POLIWAG]:2,[e.ABRA]:4,[e.MACHOP]:3,[e.BELLSPROUT]:2,[e.TENTACOOL]:3,[e.GEODUDE]:3,[e.PONYTA]:2,[e.SLOWPOKE]:3,[e.MAGNEMITE]:4,[e.FARFETCHD]:2,[e.DODUO]:3,[e.SEEL]:1,[e.GRIMER]:2,[e.SHELLDER]:5,[e.GASTLY]:4,[e.ONIX]:3,[e.DROWZEE]:2,[e.KRABBY]:3,[e.VOLTORB]:2,[e.EXEGGCUTE]:3,[e.CUBONE]:3,[e.LICKITUNG]:3,[e.KOFFING]:2,[e.RHYHORN]:4,[e.TANGELA]:3,[e.KANGASKHAN]:4,[e.HORSEA]:3,[e.GOLDEEN]:2,[e.STARYU]:3,[e.SCYTHER]:5,[e.PINSIR]:4,[e.TAUROS]:4,[e.MAGIKARP]:4,[e.LAPRAS]:4,[e.DITTO]:2,[e.EEVEE]:3,[e.PORYGON]:4,[e.OMANYTE]:3,[e.KABUTO]:3,[e.AERODACTYL]:5,[e.ARTICUNO]:5,[e.ZAPDOS]:6,[e.MOLTRES]:6,[e.DRATINI]:4,[e.MEWTWO]:8,[e.MEW]:5,[e.CHIKORITA]:2,[e.CYNDAQUIL]:3,[e.TOTODILE]:3,[e.SENTRET]:1,[e.HOOTHOOT]:2,[e.LEDYBA]:1,[e.SPINARAK]:1,[e.CHINCHOU]:2,[e.PICHU]:4,[e.CLEFFA]:2,[e.IGGLYBUFF]:1,[e.TOGEPI]:3,[e.NATU]:2,[e.MAREEP]:2,[e.HOPPIP]:2,[e.AIPOM]:2,[e.SUNKERN]:1,[e.YANMA]:3,[e.WOOPER]:2,[e.MURKROW]:3,[e.MISDREAVUS]:2,[e.UNOWN]:1,[e.GIRAFARIG]:3,[e.PINECO]:2,[e.DUNSPARCE]:3,[e.GLIGAR]:3,[e.SNUBBULL]:2,[e.QWILFISH]:3,[e.SHUCKLE]:3,[e.HERACROSS]:5,[e.SNEASEL]:4,[e.TEDDIURSA]:4,[e.SLUGMA]:2,[e.SWINUB]:3,[e.CORSOLA]:2,[e.REMORAID]:2,[e.DELIBIRD]:2,[e.SKARMORY]:4,[e.HOUNDOUR]:3,[e.PHANPY]:3,[e.STANTLER]:3,[e.SMEARGLE]:1,[e.TYROGUE]:3,[e.SMOOCHUM]:3,[e.ELEKID]:3,[e.MAGBY]:3,[e.MILTANK]:4,[e.RAIKOU]:6,[e.ENTEI]:6,[e.SUICUNE]:6,[e.LARVITAR]:4,[e.LUGIA]:8,[e.HO_OH]:8,[e.CELEBI]:5,[e.TREECKO]:3,[e.TORCHIC]:4,[e.MUDKIP]:3,[e.POOCHYENA]:2,[e.ZIGZAGOON]:2,[e.WURMPLE]:1,[e.LOTAD]:3,[e.SEEDOT]:2,[e.TAILLOW]:3,[e.WINGULL]:2,[e.RALTS]:4,[e.SURSKIT]:2,[e.SHROOMISH]:3,[e.SLAKOTH]:4,[e.NINCADA]:4,[e.WHISMUR]:2,[e.MAKUHITA]:3,[e.AZURILL]:4,[e.NOSEPASS]:2,[e.SKITTY]:1,[e.SABLEYE]:2,[e.MAWILE]:2,[e.ARON]:3,[e.MEDITITE]:3,[e.ELECTRIKE]:2,[e.PLUSLE]:2,[e.MINUN]:2,[e.VOLBEAT]:2,[e.ILLUMISE]:2,[e.GULPIN]:1,[e.CARVANHA]:3,[e.WAILMER]:2,[e.NUMEL]:2,[e.TORKOAL]:3,[e.SPOINK]:2,[e.SPINDA]:1,[e.TRAPINCH]:3,[e.CACNEA]:2,[e.SWABLU]:2,[e.ZANGOOSE]:4,[e.SEVIPER]:3,[e.LUNATONE]:3,[e.SOLROCK]:3,[e.BARBOACH]:2,[e.CORPHISH]:3,[e.BALTOY]:2,[e.LILEEP]:3,[e.ANORITH]:3,[e.FEEBAS]:4,[e.CASTFORM]:1,[e.KECLEON]:2,[e.SHUPPET]:2,[e.DUSKULL]:3,[e.TROPIUS]:3,[e.ABSOL]:4,[e.WYNAUT]:2,[e.SNORUNT]:2,[e.SPHEAL]:2,[e.CLAMPERL]:3,[e.RELICANTH]:3,[e.LUVDISC]:1,[e.BAGON]:4,[e.BELDUM]:4,[e.REGIROCK]:6,[e.REGICE]:5,[e.REGISTEEL]:6,[e.LATIAS]:7,[e.LATIOS]:7,[e.KYOGRE]:9,[e.GROUDON]:9,[e.RAYQUAZA]:9,[e.JIRACHI]:7,[e.DEOXYS]:7,[e.TURTWIG]:3,[e.CHIMCHAR]:3,[e.PIPLUP]:3,[e.STARLY]:3,[e.BIDOOF]:2,[e.KRICKETOT]:1,[e.SHINX]:2,[e.BUDEW]:3,[e.CRANIDOS]:3,[e.SHIELDON]:3,[e.BURMY]:2,[e.COMBEE]:2,[e.PACHIRISU]:2,[e.BUIZEL]:2,[e.CHERUBI]:1,[e.SHELLOS]:3,[e.DRIFLOON]:2,[e.BUNEARY]:2,[e.GLAMEOW]:2,[e.CHINGLING]:2,[e.STUNKY]:2,[e.BRONZOR]:3,[e.BONSLY]:2,[e.MIME_JR]:2,[e.HAPPINY]:2,[e.CHATOT]:2,[e.SPIRITOMB]:4,[e.GIBLE]:4,[e.MUNCHLAX]:4,[e.RIOLU]:3,[e.HIPPOPOTAS]:3,[e.SKORUPI]:3,[e.CROAGUNK]:2,[e.CARNIVINE]:2,[e.FINNEON]:1,[e.MANTYKE]:2,[e.SNOVER]:2,[e.ROTOM]:5,[e.UXIE]:5,[e.MESPRIT]:5,[e.AZELF]:6,[e.DIALGA]:8,[e.PALKIA]:8,[e.HEATRAN]:7,[e.REGIGIGAS]:7,[e.GIRATINA]:8,[e.CRESSELIA]:6,[e.PHIONE]:4,[e.MANAPHY]:7,[e.DARKRAI]:7,[e.SHAYMIN]:5,[e.ARCEUS]:9,[e.VICTINI]:7,[e.SNIVY]:3,[e.TEPIG]:3,[e.OSHAWOTT]:3,[e.PATRAT]:1,[e.LILLIPUP]:3,[e.PURRLOIN]:2,[e.PANSAGE]:2,[e.PANSEAR]:2,[e.PANPOUR]:2,[e.MUNNA]:2,[e.PIDOVE]:1,[e.BLITZLE]:2,[e.ROGGENROLA]:3,[e.WOOBAT]:3,[e.DRILBUR]:4,[e.AUDINO]:3,[e.TIMBURR]:4,[e.TYMPOLE]:3,[e.THROH]:4,[e.SAWK]:4,[e.SEWADDLE]:2,[e.VENIPEDE]:3,[e.COTTONEE]:3,[e.PETILIL]:3,[e.BASCULIN]:4,[e.SANDILE]:4,[e.DARUMAKA]:4,[e.MARACTUS]:2,[e.DWEBBLE]:2,[e.SCRAGGY]:3,[e.SIGILYPH]:4,[e.YAMASK]:3,[e.TIRTOUGA]:3,[e.ARCHEN]:3,[e.TRUBBISH]:2,[e.ZORUA]:3,[e.MINCCINO]:3,[e.GOTHITA]:3,[e.SOLOSIS]:3,[e.DUCKLETT]:2,[e.VANILLITE]:3,[e.DEERLING]:2,[e.EMOLGA]:2,[e.KARRABLAST]:3,[e.FOONGUS]:3,[e.FRILLISH]:3,[e.ALOMOMOLA]:4,[e.JOLTIK]:3,[e.FERROSEED]:3,[e.KLINK]:3,[e.TYNAMO]:2,[e.ELGYEM]:2,[e.LITWICK]:3,[e.AXEW]:4,[e.CUBCHOO]:2,[e.CRYOGONAL]:4,[e.SHELMET]:2,[e.STUNFISK]:3,[e.MIENFOO]:3,[e.DRUDDIGON]:4,[e.GOLETT]:3,[e.PAWNIARD]:4,[e.BOUFFALANT]:4,[e.RUFFLET]:3,[e.VULLABY]:3,[e.HEATMOR]:3,[e.DURANT]:4,[e.DEINO]:4,[e.LARVESTA]:4,[e.COBALION]:6,[e.TERRAKION]:6,[e.VIRIZION]:6,[e.TORNADUS]:7,[e.THUNDURUS]:7,[e.RESHIRAM]:8,[e.ZEKROM]:8,[e.LANDORUS]:7,[e.KYUREM]:8,[e.KELDEO]:6,[e.MELOETTA]:7,[e.GENESECT]:6,[e.CHESPIN]:3,[e.FENNEKIN]:3,[e.FROAKIE]:4,[e.BUNNELBY]:3,[e.FLETCHLING]:3,[e.SCATTERBUG]:2,[e.LITLEO]:2,[e.FLABEBE]:3,[e.SKIDDO]:2,[e.PANCHAM]:3,[e.FURFROU]:3,[e.ESPURR]:2,[e.HONEDGE]:4,[e.SPRITZEE]:2,[e.SWIRLIX]:3,[e.INKAY]:3,[e.BINACLE]:3,[e.SKRELP]:2,[e.CLAUNCHER]:3,[e.HELIOPTILE]:3,[e.TYRUNT]:3,[e.AMAURA]:2,[e.HAWLUCHA]:4,[e.DEDENNE]:2,[e.CARBINK]:2,[e.GOOMY]:4,[e.KLEFKI]:3,[e.PHANTUMP]:2,[e.PUMPKABOO]:2,[e.BERGMITE]:3,[e.NOIBAT]:3,[e.XERNEAS]:8,[e.YVELTAL]:8,[e.ZYGARDE]:8,[e.DIANCIE]:7,[e.HOOPA]:7,[e.VOLCANION]:7,[e.ETERNAL_FLOETTE]:4,[e.ROWLET]:3,[e.LITTEN]:3,[e.POPPLIO]:4,[e.PIKIPEK]:2,[e.YUNGOOS]:2,[e.GRUBBIN]:3,[e.CRABRAWLER]:3,[e.ORICORIO]:3,[e.CUTIEFLY]:3,[e.ROCKRUFF]:3,[e.WISHIWASHI]:2,[e.MAREANIE]:2,[e.MUDBRAY]:3,[e.DEWPIDER]:3,[e.FOMANTIS]:2,[e.MORELULL]:2,[e.SALANDIT]:3,[e.STUFFUL]:3,[e.BOUNSWEET]:3,[e.COMFEY]:4,[e.ORANGURU]:4,[e.PASSIMIAN]:4,[e.WIMPOD]:3,[e.SANDYGAST]:3,[e.PYUKUMUKU]:2,[e.TYPE_NULL]:5,[e.MINIOR]:4,[e.KOMALA]:3,[e.TURTONATOR]:4,[e.TOGEDEMARU]:3,[e.MIMIKYU]:4,[e.BRUXISH]:4,[e.DRAMPA]:4,[e.DHELMISE]:4,[e.JANGMO_O]:4,[e.TAPU_KOKO]:6,[e.TAPU_LELE]:7,[e.TAPU_BULU]:6,[e.TAPU_FINI]:5,[e.COSMOG]:7,[e.NIHILEGO]:6,[e.BUZZWOLE]:6,[e.PHEROMOSA]:7,[e.XURKITREE]:6,[e.CELESTEELA]:6,[e.KARTANA]:8,[e.GUZZLORD]:6,[e.NECROZMA]:8,[e.MAGEARNA]:7,[e.MARSHADOW]:7,[e.POIPOLE]:8,[e.STAKATAKA]:6,[e.BLACEPHALON]:7,[e.ZERAORA]:6,[e.MELTAN]:6,[e.ALOLA_RATTATA]:1,[e.ALOLA_SANDSHREW]:2,[e.ALOLA_VULPIX]:3,[e.ALOLA_DIGLETT]:2,[e.ALOLA_MEOWTH]:3,[e.ALOLA_GEODUDE]:3,[e.ALOLA_GRIMER]:3,[e.GROOKEY]:3,[e.SCORBUNNY]:4,[e.SOBBLE]:3,[e.SKWOVET]:2,[e.ROOKIDEE]:3,[e.BLIPBUG]:2,[e.NICKIT]:1,[e.GOSSIFLEUR]:2,[e.WOOLOO]:2,[e.CHEWTLE]:3,[e.YAMPER]:2,[e.ROLYCOLY]:3,[e.APPLIN]:3,[e.SILICOBRA]:3,[e.CRAMORANT]:3,[e.ARROKUDA]:3,[e.TOXEL]:3,[e.SIZZLIPEDE]:3,[e.CLOBBOPUS]:2,[e.SINISTEA]:3,[e.HATENNA]:3,[e.IMPIDIMP]:3,[e.MILCERY]:3,[e.FALINKS]:4,[e.PINCURCHIN]:3,[e.SNOM]:3,[e.STONJOURNER]:3,[e.EISCUE]:3,[e.INDEEDEE]:4,[e.MORPEKO]:3,[e.CUFANT]:3,[e.DRACOZOLT]:5,[e.ARCTOZOLT]:4,[e.DRACOVISH]:5,[e.ARCTOVISH]:4,[e.DURALUDON]:5,[e.DREEPY]:4,[e.ZACIAN]:9,[e.ZAMAZENTA]:8,[e.ETERNATUS]:10,[e.KUBFU]:6,[e.ZARUDE]:5,[e.REGIELEKI]:6,[e.REGIDRAGO]:6,[e.GLASTRIER]:6,[e.SPECTRIER]:8,[e.CALYREX]:8,[e.ENAMORUS]:7,[e.GALAR_MEOWTH]:3,[e.GALAR_PONYTA]:2,[e.GALAR_SLOWPOKE]:3,[e.GALAR_FARFETCHD]:3,[e.GALAR_ARTICUNO]:6,[e.GALAR_ZAPDOS]:6,[e.GALAR_MOLTRES]:6,[e.GALAR_CORSOLA]:3,[e.GALAR_ZIGZAGOON]:3,[e.GALAR_DARUMAKA]:4,[e.GALAR_YAMASK]:3,[e.GALAR_STUNFISK]:2,[e.HISUI_GROWLITHE]:4,[e.HISUI_VOLTORB]:3,[e.HISUI_QWILFISH]:4,[e.HISUI_SNEASEL]:5,[e.HISUI_ZORUA]:3,[e.SPRIGATITO]:4,[e.FUECOCO]:4,[e.QUAXLY]:4,[e.LECHONK]:2,[e.TAROUNTULA]:1,[e.NYMBLE]:3,[e.PAWMI]:3,[e.TANDEMAUS]:4,[e.FIDOUGH]:2,[e.SMOLIV]:3,[e.SQUAWKABILLY]:2,[e.NACLI]:4,[e.CHARCADET]:4,[e.TADBULB]:3,[e.WATTREL]:3,[e.MASCHIFF]:3,[e.SHROODLE]:2,[e.BRAMBLIN]:3,[e.TOEDSCOOL]:3,[e.KLAWF]:3,[e.CAPSAKID]:3,[e.RELLOR]:2,[e.FLITTLE]:3,[e.TINKATINK]:4,[e.WIGLETT]:2,[e.BOMBIRDIER]:3,[e.FINIZEN]:3,[e.VAROOM]:4,[e.CYCLIZAR]:4,[e.ORTHWORM]:4,[e.GLIMMET]:4,[e.GREAVARD]:3,[e.FLAMIGO]:4,[e.CETODDLE]:3,[e.VELUZA]:4,[e.DONDOZO]:4,[e.TATSUGIRI]:4,[e.GREAT_TUSK]:7,[e.SCREAM_TAIL]:5,[e.BRUTE_BONNET]:5,[e.FLUTTER_MANE]:7,[e.SLITHER_WING]:6,[e.SANDY_SHOCKS]:6,[e.IRON_TREADS]:6,[e.IRON_BUNDLE]:6,[e.IRON_HANDS]:6,[e.IRON_JUGULIS]:6,[e.IRON_MOTH]:6,[e.IRON_THORNS]:5,[e.FRIGIBAX]:4,[e.GIMMIGHOUL]:4,[e.WO_CHIEN]:5,[e.CHIEN_PAO]:7,[e.TING_LU]:6,[e.CHI_YU]:7,[e.ROARING_MOON]:7,[e.IRON_VALIANT]:6,[e.KORAIDON]:9,[e.MIRAIDON]:9,[e.WALKING_WAKE]:7,[e.IRON_LEAVES]:6,[e.POLTCHAGEIST]:4,[e.OKIDOGI]:6,[e.MUNKIDORI]:6,[e.FEZANDIPITI]:5,[e.OGERPON]:7,[e.GOUGING_FIRE]:7,[e.RAGING_BOLT]:7,[e.IRON_BOULDER]:7,[e.IRON_CROWN]:7,[e.TERAPAGOS]:8,[e.PECHARUNT]:6,[e.PALDEA_TAUROS]:5,[e.PALDEA_WOOPER]:3,[e.BLOODMOON_URSALUNA]:5},d1=[{passive:40,costReduction:[25,60],egg:30},{passive:40,costReduction:[25,60],egg:30},{passive:35,costReduction:[20,50],egg:25},{passive:30,costReduction:[15,40],egg:20},{passive:25,costReduction:[12,35],egg:18},{passive:20,costReduction:[10,30],egg:15},{passive:15,costReduction:[8,20],egg:12},{passive:10,costReduction:[5,15],egg:10},{passive:10,costReduction:[5,15],egg:10},{passive:10,costReduction:[5,15],egg:10}];function hx(E){return d1[E-1].passive}N(hx,"getPassiveCandyCount");function Hx(E){return d1[E-1].costReduction}N(Hx,"getValueReductionCandyCounts");function dx(E){return d1[E-1].egg}N(dx,"getSameSpeciesEggCandyCounts");var Ue=(E=>(E.MEGA="mega",E.MEGA_X="mega-x",E.MEGA_Y="mega-y",E.PRIMAL="primal",E.ORIGIN="origin",E.INCARNATE="incarnate",E.THERIAN="therian",E.GIGANTAMAX="gigantamax",E.GIGANTAMAX_SINGLE="gigantamax-single",E.GIGANTAMAX_RAPID="gigantamax-rapid",E.ETERNAMAX="eternamax",E))(Ue||{});function ke(E){if(!E)throw new Error("`species` must not be undefined in `getPokemonSpecies()`");return Array.isArray(E)&&(E=E[Math.floor(Math.random()*E.length)]),E>=2e3?wR.find(A=>A.speciesId===E):wR[E-1]}N(ke,"getPokemonSpecies");function Vn(E,A){var R;const s=E>=2e3?wR.find(a=>a.speciesId===E):wR[E-1];return A<((R=s.forms)==null?void 0:R.length)?s.forms[A]:s}N(Vn,"getPokemonSpeciesForm");function Ik(E,A){const s=/([a-z]{2}.*?[aeiou(?:y$)\-\']+)(.*?)$/i,R=/([a-z]{2}.*?[aeiou(?:y$)\-\'])(.*?)$/i,[a,i]=[E,A].map(f=>/^(?:[^ ]+) /.exec(f)),[r,L]=[a,i].map(f=>f?f[0]:"");r&&(E=E.slice(r.length)),L&&(A=A.slice(L.length));const[o,l]=[E,A].map(f=>/ (?:[^ ]+)$/.exec(f)),[C,M]=[o,l].map(f=>f?f[0]:"");C&&(E=E.slice(0,-C.length)),M&&(A=A.slice(0,-M.length));const D=E.split(/ /g),_=A.split(/ /g),P=s.exec(E),h=R.exec(A);let H,d;if(H=D.length===1?P?P[1]:E:D[D.length-1],_.length===1)if(h){const f=H.slice(H.length-1),B=h[1].slice(h.length-1);if(d=(/[\-']/.test(B)?B:"")+h[2]||B,f===d[0])if(/[aiu]/.test(f))d=d.slice(1);else{const F=new RegExp(`[^${f}]`).exec(d);(F==null?void 0:F.index)!==void 0&&F.index>0&&(d=d.slice(F.index))}}else d=A;else d=_[_.length-1];return D.length>1&&(H=`${D.slice(0,D.length-1).join(" ")} ${H}`),d=`${d.slice(0,1).toLowerCase()}${d.slice(1)}`,`${r||L}${H}${d}${M||C}`}N(Ik,"getFusedSpeciesName");const uf=class uf{constructor(A,s,R,a,i,r,L,o,l,C,M,D,_,P,h,H,d,f,B){this.type1=A,this.type2=s,this.height=R,this.weight=a,this.ability1=i,this.ability2=r===O.NONE?i:r,this.abilityHidden=L,this.baseTotal=o,this.baseStats=[l,C,M,D,_,P],this.catchRate=h,this.baseFriendship=H,this.baseExp=d,this.genderDiffs=f,this.isStarterSelectable=B}getRootSpeciesId(A=!1){let s=this.speciesId;for(;yA.hasOwnProperty(s)&&(!A||!KA.hasOwnProperty(s));)s=yA[s];return s}get generation(){return this._generation}set generation(A){this._generation=A}get formIndex(){return this._formIndex}set formIndex(A){this._formIndex=A}isOfType(A){return this.type1===A||this.type2!==null&&this.type2===A}getAbilityCount(){return this.abilityHidden!==O.NONE?3:2}getAbility(A){let s;return A===0?s=this.ability1:A===1?s=this.ability2:s=this.abilityHidden,s}getLevelMoves(){return Nn.hasOwnProperty(this.speciesId)&&Nn[this.speciesId].hasOwnProperty(this.formIndex)?Nn[this.speciesId][this.formIndex].slice(0):B_[this.speciesId].slice(0)}getRegion(){return Math.floor(this.speciesId/2e3)}isObtainable(){return this.generation<=9||yA.hasOwnProperty(this.speciesId)}isCatchable(){return this.isObtainable()&&j8.indexOf(this.speciesId)===-1}isRegional(){return this.getRegion()>0}isTrainerForbidden(){return[e.ETERNAL_FLOETTE,e.BLOODMOON_URSALUNA].includes(this.speciesId)}isRareRegional(){switch(this.getRegion()){case 3:return!0}return!1}getBaseStatTotal(){return this.baseStats.reduce((A,s)=>s+A)}getBaseStat(A){return this.baseStats[A]}getBaseExp(){let A=this.baseExp;switch(this.getFormSpriteKey()){case Ue.MEGA:case Ue.MEGA_X:case Ue.MEGA_Y:case Ue.PRIMAL:case Ue.GIGANTAMAX:case Ue.ETERNAMAX:A*=1.5;break}return A}getSpriteAtlasPath(A,s,R,a){const i=this.getSpriteId(A,s,R,a).replace(/\_{2}/g,"/");return`${/_[1-3]$/.test(i)?"variant/":""}${i}`}getSpriteId(A,s,R,a=0,i){(s===void 0||this instanceof Y)&&(s=this.formIndex);const r=this.getFormSpriteKey(s),o=`${this.genderDiffs&&A&&![Ue.MEGA,Ue.GIGANTAMAX].find(M=>r===M)?"female__":""}${this.speciesId}${r?`-${r}`:""}`;let l=qs;`${i?"back__":""}${o}`.split("__").map(M=>l?l=l[M]:null);const C=l;return`${i?"back__":""}${R&&(!C||!a&&!C[a||0])?"shiny__":""}${o}${R&&C&&C[a]===2?`_${a+1}`:""}`}getSpriteKey(A,s,R,a){return`pkmn__${this.getSpriteId(A,s,R,a)}`}getVariantDataIndex(A){var i;let s=null,R=this.speciesId;const a=ke(this.speciesId);return a.forms.length>0&&A!==void 0&&(s=(i=a.forms[A])==null?void 0:i.getFormSpriteKey(A),s&&(R=`${this.speciesId}-${s}`)),R}getIconAtlasKey(A,s,R){const a=this.getVariantDataIndex(A),i=s&&qs[a]&&R!==void 0&&qs[a][R];return`pokemon_icons_${this.generation}${i?"v":""}`}getIconId(A,s,R,a){s===void 0&&(s=this.formIndex);const i=this.getVariantDataIndex(s);let r=this.speciesId.toString();const L=R&&qs[i]&&a!==void 0&&qs[i][a];switch(R&&!L&&(r+="s"),this.speciesId){case e.DODUO:case e.DODRIO:case e.MEGANIUM:case e.TORCHIC:case e.COMBUSKEN:case e.BLAZIKEN:case e.HIPPOPOTAS:case e.HIPPOWDON:case e.UNFEZANT:case e.FRILLISH:case e.JELLICENT:case e.PYROAR:r+=A?"-f":"";break}let o=this.getFormSpriteKey(s);if(o)switch(this.speciesId){case e.DUDUNSPARCE:break;case e.ZACIAN:case e.ZAMAZENTA:o.startsWith("behemoth")&&(o="crowned");default:r+=`-${o}`;break}return L&&(r+=`_${a+1}`),r}getCryKey(A){let s=this.speciesId;if(this.speciesId>2e3)switch(this.speciesId){case e.GALAR_SLOWPOKE:break;case e.ETERNAL_FLOETTE:break;case e.BLOODMOON_URSALUNA:break;default:s=s%2e3;break}let R=s.toString();const a=ke(s).forms;if(a.length){A!==void 0&&A>=a.length&&(console.warn(`Attempted accessing form with index ${A} of species ${ke(s).getName()} with only ${a.length||0} forms`),A=Math.min(A,a.length-1));const i=a[A||0].formKey;switch(i){case Ue.MEGA:case Ue.MEGA_X:case Ue.MEGA_Y:case Ue.GIGANTAMAX:case Ue.GIGANTAMAX_SINGLE:case Ue.GIGANTAMAX_RAPID:case"white":case"black":case"therian":case"sky":case"gorging":case"gulping":case"no-ice":case"hangry":case"crowned":case"eternamax":case"four":case"droopy":case"stretchy":case"hero":case"roaming":case"complete":case"10-complete":case"10":case"10-pc":case"super":case"unbound":case"pau":case"pompom":case"sensu":case"dusk":case"midnight":case"school":case"dawn-wings":case"dusk-mane":case"ultra":R+=`-${i}`;break}}return`cry/${R}`}validateStarterMoveset(A,s){const R=this.getRootSpeciesId();for(const a of A){if(KE.hasOwnProperty(R)){const i=KE[R].findIndex(r=>r===a);if(i>-1&&s&1<<i)continue}if(Nn.hasOwnProperty(this.speciesId)&&Nn[this.speciesId].hasOwnProperty(this.formIndex)){if(!Nn[this.speciesId][this.formIndex].find(i=>i[0]<=5&&i[1]===a))return!1}else if(!B_[this.speciesId].find(i=>i[0]<=5&&i[1]===a))return!1}return!0}loadAssets(A,s,R,a,i){return new Promise(r=>{const L=this.getSpriteKey(A,s,R,a);n.loadPokemonAtlas(L,this.getSpriteAtlasPath(A,s,R,a)),n.load.audio(`${this.getCryKey(s)}`,`audio/${this.getCryKey(s)}.m4a`),n.load.once(Phaser.Loader.Events.COMPLETE,()=>{const o=console.warn;console.warn=()=>{};const l=n.anims.generateFrameNames(L,{zeroPad:4,suffix:".png",start:1,end:400});console.warn=o,n.anims.exists(L)?n.anims.get(L).frameRate=10:n.anims.create({key:this.getSpriteKey(A,s,R,a),frames:l,frameRate:10,repeat:-1});const C=this.getSpriteAtlasPath(A,s,R,a).replace("variant/","").replace(/_[1-3]$/,"");n.loadPokemonVariantAssets(L,C,a).then(()=>r())}),i?n.load.isLoading()||n.load.start():r()})}cry(A,s){const R=this.getCryKey(this.formIndex);let a=n.sound.get(R);return a!=null&&a.pendingRemove&&(a=null),a=n.playSound(a??R,A),s&&a.stop(),a}generateCandyColors(){const A=n.textures.get(this.getSpriteKey(!1)),s=A.frames[A.firstFrame],R=A.getSourceImage(),a=document.createElement("canvas"),i=[],r=a.getContext("2d"),L=s;a.width=L.width,a.height=L.height,r==null||r.drawImage(R,L.cutX,L.cutY,L.width,L.height,0,0,L.width,L.height);const o=r==null?void 0:r.getImageData(L.cutX,L.cutY,L.width,L.height),l=o==null?void 0:o.data,C=[];if((l==null?void 0:l.length)!==void 0){for(let _=0;_<l.length;_+=4)if(l[_+3]){const P=l.slice(_,_+4),[h,H,d,f]=P;i.find(B=>B[0]===h&&B[1]===H&&B[2]===d)||i.push([h,H,d,f])}for(let _=0;_<l.length;_+=4)l.slice(_,_+3).reduce((h,H)=>h+H,0)&&C.push(js({r:l[_],g:l[_+1],b:l[_+2],a:l[_+3]}))}let M=new Map;const D=Math.random;return Math.random=()=>Phaser.Math.RND.realInRange(0,1),n.executeWithSeedOffset(()=>{M=WT.quantize(C,2)},0,"This result should not vary"),Math.random=D,Array.from(M.keys()).map(_=>Object.values(D_(_)))}};N(uf,"PokemonSpeciesForm");let Yl=uf;const Df=class Df extends Yl{constructor(A,s,R,a,i,r,L,o,l,C,M,D,_,P,h,H,d,f,B,F,W,b,x,$,j,z,se,...Z){super(L,o,l,C,M,D,_,P,h,H,d,f,B,F,W,b,x,z,!1),this.speciesId=A,this.formIndex=0,this.generation=s,this.subLegendary=R,this.legendary=a,this.mythical=i,this.species=r,this.growthRate=$,this.malePercent=j,this.genderDiffs=z,this.canChangeForm=!!se,this.forms=Z,this.localize(),Z.forEach((q,p)=>{q.speciesId=A,q.formIndex=p,q.generation=s})}getName(A){if(A!==void 0&&this.forms.length){const s=this.forms[A];let R;switch(s.formKey){case Ue.MEGA:case Ue.PRIMAL:case Ue.ETERNAMAX:case Ue.MEGA_X:case Ue.MEGA_Y:R=s.formKey;break;default:s.formKey.indexOf(Ue.GIGANTAMAX)>-1?R="gigantamax":R=null}if(R)return u.t(`battlePokemonForm:${R}`,{pokemonName:this.name})}return this.name}localize(){this.name=u.t(`pokemon:${e[this.speciesId].toLowerCase()}`)}getWildSpeciesForLevel(A,s,R,a){return this.getSpeciesForLevel(A,s,!1,(R?Ve.WEAKER:Ve.AVERAGE)+(a!=null&&a.isEndless?1:0))}getTrainerSpeciesForLevel(A,s=!1,R,a=0){return this.getSpeciesForLevel(A,s,!0,R,a)}getStrengthLevelDiff(A){switch(Math.min(A,Ve.STRONGER)){case Ve.WEAKEST:return 60;case Ve.WEAKER:return 40;case Ve.WEAK:return 20;case Ve.AVERAGE:return 8;case Ve.STRONG:return 4;default:return 0}}getSpeciesForLevel(A,s=!1,R=!1,a=Ve.WEAKER,i=0){const r=this.getPrevolutionLevels();if(r.length)for(let P=r.length-1;P>=0;P--){const h=r[P];if(A<h[1])return h[0]}if(!s||!bt.hasOwnProperty(this.speciesId))return this.speciesId;const L=bt[this.speciesId],o=Phaser.Tweens.Builders.GetEaseFunction("Sine.easeIn"),l=Phaser.Tweens.Builders.GetEaseFunction("Sine.easeOut"),C=new Map;let M=0,D=1;for(const P of L){if(P.level>A)continue;let h;const H=ke(P.speciesId),d=!this.isRegional()&&H.isRegional();if(!R&&d)h=0;else if(P.wildDelay===q8.NONE)if(a===Ve.STRONGER)h=1;else{const f=this.getStrengthLevelDiff(a),B=.875-.125*a;h=Math.min(B+o(Math.min(A-P.level,f)/f)*(1-B),1)}else{const f=Math.max(P.level-1+P.wildDelay*this.getStrengthLevelDiff(a),1);let B=Math.max(P.level>1?P.level:Math.floor(f/2),1);if(P.level<=1&&yA.hasOwnProperty(this.speciesId)){const F=bt[yA[this.speciesId]].find(W=>W.speciesId===this.speciesId).level;F>1&&(B=F)}h=Math.min(.65*o(Math.min(Math.max(A-B,0),f)/f)+.35*l(Math.min(Math.max(A-B,0),f*2.5)/(f*2.5)),1)}i>=80&&R&&a>Ve.WEAKER&&(h=1,D=0),h>0&&(d&&(h/=H.isRareRegional()?16:4),M+=h,C.set(M,P.speciesId),1-h<D&&(D=1-h))}if(D===1||Phaser.Math.RND.realInRange(0,1)<D)return this.speciesId;const _=C.size===1?0:ce(M);for(const P of C.keys())if(_<P)return ke(C.get(P)).getSpeciesForLevel(A,!0,R,a,i);return this.speciesId}getEvolutionLevels(){const A=[];if(bt.hasOwnProperty(this.speciesId))for(const s of bt[this.speciesId]){const R=s.speciesId,a=s.level;A.push([R,a]);const i=ke(R).getEvolutionLevels();for(const r of i)A.push(r)}return A}getPrevolutionLevels(){const A=[],s=Object.keys(bt);for(const R of s)for(const a of bt[R])if(a.speciesId===this.speciesId&&(!this.forms.length||!a.evoFormKey||a.evoFormKey===this.forms[this.formIndex].formKey)&&A.every(i=>i[0]!==parseInt(R))){const i=parseInt(R),r=a.level;A.push([i,r]);const L=ke(i).getPrevolutionLevels();for(const o of L)A.push(o)}return A}getSimulatedEvolutionChain(A,s=!1,R=!1,a=!1){const i=[];if(yA.hasOwnProperty(this.speciesId)){const r=this.getPrevolutionLevels().reverse(),L=a?0:s||R?s&&R?2.5:5:10;i.push([r[0][0],1]);for(let C=1;C<r.length;C++){const M=bt[r[C-1][0]].find(D=>D.speciesId===r[C][0]);i.push([r[C][0],Math.min(Math.max((M==null?void 0:M.level)+Math.round(R_(.5,1+L*.2)*Math.max(M==null?void 0:M.wildDelay,.5)*5)-1,2,M==null?void 0:M.level),A-1)])}const o=i[r.length-1][1],l=bt[r[r.length-1][0]].find(C=>C.speciesId===this.speciesId);i.push([this.speciesId,Math.min(Math.max(o+Math.round(R_(.5,1+L*.2)*Math.max(l==null?void 0:l.wildDelay,.5)*5),o+1,l==null?void 0:l.level),A)])}else i.push([this.speciesId,1]);return i}getCompatibleFusionSpeciesFilter(){const A=bt.hasOwnProperty(this.speciesId),s=yA.hasOwnProperty(this.speciesId),R=this.subLegendary,a=this.legendary,i=this.mythical;return r=>(R||a||i||bt.hasOwnProperty(r.speciesId)===A&&yA.hasOwnProperty(r.speciesId)===s)&&r.subLegendary===R&&r.legendary===a&&r.mythical===i&&(this.isTrainerForbidden()||!r.isTrainerForbidden())&&r.speciesId!==e.DITTO}isObtainable(){return super.isObtainable()}hasVariants(){var s;let A=this.speciesId;if(this.forms.length>0){const R=(s=this.forms[this.formIndex])==null?void 0:s.formKey;R&&(A=`${A}-${R}`)}return qs.hasOwnProperty(A)||qs.hasOwnProperty(this.speciesId)}getFormSpriteKey(A){var s;return this.forms.length&&A!==void 0&&A>=this.forms.length&&(console.warn(`Attempted accessing form with index ${A} of species ${this.getName()} with only ${this.forms.length||0} forms`),A=Math.min(A,this.forms.length-1)),(s=this.forms)!=null&&s.length?this.forms[A||0].getFormSpriteKey():""}};N(Df,"PokemonSpecies");let G=Df;const Mf=class Mf extends Yl{constructor(A,s,R,a,i,r,L,o,l,C,M,D,_,P,h,H,d,f,B,F=!1,W=null,b=!1){super(R,a,i,r,L,o,l,C,M,D,_,P,h,H,d,f,B,F,b||!s),this.starterSelectableKeys=["10","50","10-pc","50-pc","red","orange","yellow","green","blue","indigo","violet"],this.formName=A,this.formKey=s,this.formSpriteKey=W}getFormSpriteKey(A){return this.formSpriteKey!==null?this.formSpriteKey:this.formKey}};N(Mf,"PokemonForm");let Y=Mf;function ak(){const E=[],A=new Date;return A.setUTCHours(0,0,0,0),n.executeWithSeedOffset(()=>{for(;E.length<w6;){const s=parseInt(IE(Object.keys(KA)),10),R=ke(s);E.includes(R)||E.push(R)}},0,A.getTime().toString()),E}N(ak,"getPokerusStarters");const wR=[];function ik(){wR.push(new G(e.BULBASAUR,1,!1,!1,!1,"Seed Pokémon",I.GRASS,I.POISON,.7,6.9,O.OVERGROW,O.NONE,O.CHLOROPHYLL,318,45,49,49,65,65,45,45,50,64,c.MEDIUM_SLOW,87.5,!1),new G(e.IVYSAUR,1,!1,!1,!1,"Seed Pokémon",I.GRASS,I.POISON,1,13,O.OVERGROW,O.NONE,O.CHLOROPHYLL,405,60,62,63,80,80,60,45,50,142,c.MEDIUM_SLOW,87.5,!1),new G(e.VENUSAUR,1,!1,!1,!1,"Seed Pokémon",I.GRASS,I.POISON,2,100,O.OVERGROW,O.NONE,O.CHLOROPHYLL,525,80,82,83,100,100,80,45,50,263,c.MEDIUM_SLOW,87.5,!0,!0,new Y("Normal","",I.GRASS,I.POISON,2,100,O.OVERGROW,O.NONE,O.CHLOROPHYLL,525,80,82,83,100,100,80,45,50,263,!0,null,!0),new Y("Mega",Ue.MEGA,I.GRASS,I.POISON,2.4,155.5,O.THICK_FAT,O.THICK_FAT,O.THICK_FAT,625,80,100,123,122,120,80,45,50,263,!0),new Y("G-Max",Ue.GIGANTAMAX,I.GRASS,I.POISON,24,999.9,O.EFFECT_SPORE,O.NONE,O.EFFECT_SPORE,625,120,82,98,130,115,80,45,50,263,!0)),new G(e.CHARMANDER,1,!1,!1,!1,"Lizard Pokémon",I.FIRE,null,.6,8.5,O.BLAZE,O.NONE,O.SOLAR_POWER,309,39,52,43,60,50,65,45,50,62,c.MEDIUM_SLOW,87.5,!1),new G(e.CHARMELEON,1,!1,!1,!1,"Flame Pokémon",I.FIRE,null,1.1,19,O.BLAZE,O.NONE,O.SOLAR_POWER,405,58,64,58,80,65,80,45,50,142,c.MEDIUM_SLOW,87.5,!1),new G(e.CHARIZARD,1,!1,!1,!1,"Flame Pokémon",I.FIRE,I.FLYING,1.7,90.5,O.BLAZE,O.NONE,O.SOLAR_POWER,534,78,84,78,109,85,100,45,50,267,c.MEDIUM_SLOW,87.5,!1,!0,new Y("Normal","",I.FIRE,I.FLYING,1.7,90.5,O.BLAZE,O.NONE,O.SOLAR_POWER,534,78,84,78,109,85,100,45,50,267,!1,null,!0),new Y("Mega X",Ue.MEGA_X,I.FIRE,I.DRAGON,1.7,110.5,O.TOUGH_CLAWS,O.NONE,O.TOUGH_CLAWS,634,78,130,111,130,85,100,45,50,267),new Y("Mega Y",Ue.MEGA_Y,I.FIRE,I.FLYING,1.7,100.5,O.DROUGHT,O.NONE,O.DROUGHT,634,78,104,78,159,115,100,45,50,267),new Y("G-Max",Ue.GIGANTAMAX,I.FIRE,I.FLYING,28,999.9,O.BERSERK,O.NONE,O.BERSERK,634,118,84,93,139,100,100,45,50,267)),new G(e.SQUIRTLE,1,!1,!1,!1,"Tiny Turtle Pokémon",I.WATER,null,.5,9,O.TORRENT,O.NONE,O.RAIN_DISH,314,44,48,65,50,64,43,45,50,63,c.MEDIUM_SLOW,87.5,!1),new G(e.WARTORTLE,1,!1,!1,!1,"Turtle Pokémon",I.WATER,null,1,22.5,O.TORRENT,O.NONE,O.RAIN_DISH,405,59,63,80,65,80,58,45,50,142,c.MEDIUM_SLOW,87.5,!1),new G(e.BLASTOISE,1,!1,!1,!1,"Shellfish Pokémon",I.WATER,null,1.6,85.5,O.TORRENT,O.NONE,O.RAIN_DISH,530,79,83,100,85,105,78,45,50,265,c.MEDIUM_SLOW,87.5,!1,!0,new Y("Normal","",I.WATER,null,1.6,85.5,O.TORRENT,O.NONE,O.RAIN_DISH,530,79,83,100,85,105,78,45,50,265,!1,null,!0),new Y("Mega",Ue.MEGA,I.WATER,null,1.6,101.1,O.MEGA_LAUNCHER,O.NONE,O.MEGA_LAUNCHER,630,79,103,120,135,115,78,45,50,265),new Y("G-Max",Ue.GIGANTAMAX,I.WATER,I.STEEL,25,999.9,O.SHELL_ARMOR,O.NONE,O.SHELL_ARMOR,630,119,83,135,115,110,68,45,50,265)),new G(e.CATERPIE,1,!1,!1,!1,"Worm Pokémon",I.BUG,null,.3,2.9,O.SHIELD_DUST,O.NONE,O.RUN_AWAY,195,45,30,35,20,20,45,255,50,39,c.MEDIUM_FAST,50,!1),new G(e.METAPOD,1,!1,!1,!1,"Cocoon Pokémon",I.BUG,null,.7,9.9,O.SHED_SKIN,O.NONE,O.SHED_SKIN,205,50,20,55,25,25,30,120,50,72,c.MEDIUM_FAST,50,!1),new G(e.BUTTERFREE,1,!1,!1,!1,"Butterfly Pokémon",I.BUG,I.FLYING,1.1,32,O.COMPOUND_EYES,O.NONE,O.TINTED_LENS,395,60,45,50,90,80,70,45,50,198,c.MEDIUM_FAST,50,!0,!0,new Y("Normal","",I.BUG,I.FLYING,1.1,32,O.COMPOUND_EYES,O.NONE,O.TINTED_LENS,395,60,45,50,90,80,70,45,50,198,!0,null,!0),new Y("G-Max",Ue.GIGANTAMAX,I.BUG,I.FLYING,17,999.9,O.COMPOUND_EYES,O.NONE,O.COMPOUND_EYES,495,85,35,80,120,90,85,45,50,198,!0)),new G(e.WEEDLE,1,!1,!1,!1,"Hairy Bug Pokémon",I.BUG,I.POISON,.3,3.2,O.SHIELD_DUST,O.NONE,O.RUN_AWAY,195,40,35,30,20,20,50,255,70,39,c.MEDIUM_FAST,50,!1),new G(e.KAKUNA,1,!1,!1,!1,"Cocoon Pokémon",I.BUG,I.POISON,.6,10,O.SHED_SKIN,O.NONE,O.SHED_SKIN,205,45,25,50,25,25,35,120,70,72,c.MEDIUM_FAST,50,!1),new G(e.BEEDRILL,1,!1,!1,!1,"Poison Bee Pokémon",I.BUG,I.POISON,1,29.5,O.SWARM,O.NONE,O.SNIPER,395,65,90,40,45,80,75,45,70,178,c.MEDIUM_FAST,50,!1,!0,new Y("Normal","",I.BUG,I.POISON,1,29.5,O.SWARM,O.NONE,O.SNIPER,395,65,90,40,45,80,75,45,70,178,!1,null,!0),new Y("Mega",Ue.MEGA,I.BUG,I.POISON,1.4,40.5,O.ADAPTABILITY,O.NONE,O.ADAPTABILITY,495,65,150,40,15,80,145,45,70,178)),new G(e.PIDGEY,1,!1,!1,!1,"Tiny Bird Pokémon",I.NORMAL,I.FLYING,.3,1.8,O.KEEN_EYE,O.TANGLED_FEET,O.BIG_PECKS,251,40,45,40,35,35,56,255,70,50,c.MEDIUM_SLOW,50,!1),new G(e.PIDGEOTTO,1,!1,!1,!1,"Bird Pokémon",I.NORMAL,I.FLYING,1.1,30,O.KEEN_EYE,O.TANGLED_FEET,O.BIG_PECKS,349,63,60,55,50,50,71,120,70,122,c.MEDIUM_SLOW,50,!1),new G(e.PIDGEOT,1,!1,!1,!1,"Bird Pokémon",I.NORMAL,I.FLYING,1.5,39.5,O.KEEN_EYE,O.TANGLED_FEET,O.BIG_PECKS,479,83,80,75,70,70,101,45,70,216,c.MEDIUM_SLOW,50,!1,!0,new Y("Normal","",I.NORMAL,I.FLYING,1.5,39.5,O.KEEN_EYE,O.TANGLED_FEET,O.BIG_PECKS,479,83,80,75,70,70,101,45,70,216,!1,null,!0),new Y("Mega",Ue.MEGA,I.NORMAL,I.FLYING,2.2,50.5,O.NO_GUARD,O.NO_GUARD,O.NO_GUARD,579,83,80,80,135,80,121,45,70,216)),new G(e.RATTATA,1,!1,!1,!1,"Mouse Pokémon",I.NORMAL,null,.3,3.5,O.RUN_AWAY,O.GUTS,O.HUSTLE,253,30,56,35,25,35,72,255,70,51,c.MEDIUM_FAST,50,!0),new G(e.RATICATE,1,!1,!1,!1,"Mouse Pokémon",I.NORMAL,null,.7,18.5,O.RUN_AWAY,O.GUTS,O.HUSTLE,413,55,81,60,50,70,97,127,70,145,c.MEDIUM_FAST,50,!0),new G(e.SPEAROW,1,!1,!1,!1,"Tiny Bird Pokémon",I.NORMAL,I.FLYING,.3,2,O.KEEN_EYE,O.NONE,O.SNIPER,262,40,60,30,31,31,70,255,70,52,c.MEDIUM_FAST,50,!1),new G(e.FEAROW,1,!1,!1,!1,"Beak Pokémon",I.NORMAL,I.FLYING,1.2,38,O.KEEN_EYE,O.NONE,O.SNIPER,442,65,90,65,61,61,100,90,70,155,c.MEDIUM_FAST,50,!1),new G(e.EKANS,1,!1,!1,!1,"Snake Pokémon",I.POISON,null,2,6.9,O.INTIMIDATE,O.SHED_SKIN,O.UNNERVE,288,35,60,44,40,54,55,255,70,58,c.MEDIUM_FAST,50,!1),new G(e.ARBOK,1,!1,!1,!1,"Cobra Pokémon",I.POISON,null,3.5,65,O.INTIMIDATE,O.SHED_SKIN,O.UNNERVE,448,60,95,69,65,79,80,90,70,157,c.MEDIUM_FAST,50,!1),new G(e.PIKACHU,1,!1,!1,!1,"Mouse Pokémon",I.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,320,35,55,40,50,50,90,190,50,112,c.MEDIUM_FAST,50,!0,!0,new Y("Normal","",I.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,320,35,55,40,50,50,90,190,50,112,!0,null,!0),new Y("Partner","partner",I.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new Y("Cosplay","cosplay",I.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new Y("Cool Cosplay","cool-cosplay",I.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new Y("Beauty Cosplay","beauty-cosplay",I.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new Y("Cute Cosplay","cute-cosplay",I.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new Y("Smart Cosplay","smart-cosplay",I.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new Y("Tough Cosplay","tough-cosplay",I.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new Y("G-Max",Ue.GIGANTAMAX,I.ELECTRIC,null,21,999.9,O.LIGHTNING_ROD,O.NONE,O.LIGHTNING_ROD,530,125,95,60,90,70,90,190,50,112)),new G(e.RAICHU,1,!1,!1,!1,"Mouse Pokémon",I.ELECTRIC,null,.8,30,O.STATIC,O.NONE,O.LIGHTNING_ROD,485,60,90,55,90,80,110,75,50,243,c.MEDIUM_FAST,50,!0),new G(e.SANDSHREW,1,!1,!1,!1,"Mouse Pokémon",I.GROUND,null,.6,12,O.SAND_VEIL,O.NONE,O.SAND_RUSH,300,50,75,85,20,30,40,255,50,60,c.MEDIUM_FAST,50,!1),new G(e.SANDSLASH,1,!1,!1,!1,"Mouse Pokémon",I.GROUND,null,1,29.5,O.SAND_VEIL,O.NONE,O.SAND_RUSH,450,75,100,110,45,55,65,90,50,158,c.MEDIUM_FAST,50,!1),new G(e.NIDORAN_F,1,!1,!1,!1,"Poison Pin Pokémon",I.POISON,null,.4,7,O.POISON_POINT,O.RIVALRY,O.HUSTLE,275,55,47,52,40,40,41,235,50,55,c.MEDIUM_SLOW,0,!1),new G(e.NIDORINA,1,!1,!1,!1,"Poison Pin Pokémon",I.POISON,null,.8,20,O.POISON_POINT,O.RIVALRY,O.HUSTLE,365,70,62,67,55,55,56,120,50,128,c.MEDIUM_SLOW,0,!1),new G(e.NIDOQUEEN,1,!1,!1,!1,"Drill Pokémon",I.POISON,I.GROUND,1.3,60,O.POISON_POINT,O.RIVALRY,O.SHEER_FORCE,505,90,92,87,75,85,76,45,50,253,c.MEDIUM_SLOW,0,!1),new G(e.NIDORAN_M,1,!1,!1,!1,"Poison Pin Pokémon",I.POISON,null,.5,9,O.POISON_POINT,O.RIVALRY,O.HUSTLE,273,46,57,40,40,40,50,235,50,55,c.MEDIUM_SLOW,100,!1),new G(e.NIDORINO,1,!1,!1,!1,"Poison Pin Pokémon",I.POISON,null,.9,19.5,O.POISON_POINT,O.RIVALRY,O.HUSTLE,365,61,72,57,55,55,65,120,50,128,c.MEDIUM_SLOW,100,!1),new G(e.NIDOKING,1,!1,!1,!1,"Drill Pokémon",I.POISON,I.GROUND,1.4,62,O.POISON_POINT,O.RIVALRY,O.SHEER_FORCE,505,81,102,77,85,75,85,45,50,253,c.MEDIUM_SLOW,100,!1),new G(e.CLEFAIRY,1,!1,!1,!1,"Fairy Pokémon",I.FAIRY,null,.6,7.5,O.CUTE_CHARM,O.MAGIC_GUARD,O.FRIEND_GUARD,323,70,45,48,60,65,35,150,140,113,c.FAST,25,!1),new G(e.CLEFABLE,1,!1,!1,!1,"Fairy Pokémon",I.FAIRY,null,1.3,40,O.CUTE_CHARM,O.MAGIC_GUARD,O.UNAWARE,483,95,70,73,95,90,60,25,140,242,c.FAST,25,!1),new G(e.VULPIX,1,!1,!1,!1,"Fox Pokémon",I.FIRE,null,.6,9.9,O.FLASH_FIRE,O.NONE,O.DROUGHT,299,38,41,40,50,65,65,190,50,60,c.MEDIUM_FAST,25,!1),new G(e.NINETALES,1,!1,!1,!1,"Fox Pokémon",I.FIRE,null,1.1,19.9,O.FLASH_FIRE,O.NONE,O.DROUGHT,505,73,76,75,81,100,100,75,50,177,c.MEDIUM_FAST,25,!1),new G(e.JIGGLYPUFF,1,!1,!1,!1,"Balloon Pokémon",I.NORMAL,I.FAIRY,.5,5.5,O.CUTE_CHARM,O.COMPETITIVE,O.FRIEND_GUARD,270,115,45,20,45,25,20,170,50,95,c.FAST,25,!1),new G(e.WIGGLYTUFF,1,!1,!1,!1,"Balloon Pokémon",I.NORMAL,I.FAIRY,1,12,O.CUTE_CHARM,O.COMPETITIVE,O.FRISK,435,140,70,45,85,50,45,50,50,218,c.FAST,25,!1),new G(e.ZUBAT,1,!1,!1,!1,"Bat Pokémon",I.POISON,I.FLYING,.8,7.5,O.INNER_FOCUS,O.NONE,O.INFILTRATOR,245,40,45,35,30,40,55,255,50,49,c.MEDIUM_FAST,50,!0),new G(e.GOLBAT,1,!1,!1,!1,"Bat Pokémon",I.POISON,I.FLYING,1.6,55,O.INNER_FOCUS,O.NONE,O.INFILTRATOR,455,75,80,70,65,75,90,90,50,159,c.MEDIUM_FAST,50,!0),new G(e.ODDISH,1,!1,!1,!1,"Weed Pokémon",I.GRASS,I.POISON,.5,5.4,O.CHLOROPHYLL,O.NONE,O.RUN_AWAY,320,45,50,55,75,65,30,255,50,64,c.MEDIUM_SLOW,50,!1),new G(e.GLOOM,1,!1,!1,!1,"Weed Pokémon",I.GRASS,I.POISON,.8,8.6,O.CHLOROPHYLL,O.NONE,O.STENCH,395,60,65,70,85,75,40,120,50,138,c.MEDIUM_SLOW,50,!0),new G(e.VILEPLUME,1,!1,!1,!1,"Flower Pokémon",I.GRASS,I.POISON,1.2,18.6,O.CHLOROPHYLL,O.NONE,O.EFFECT_SPORE,490,75,80,85,110,90,50,45,50,245,c.MEDIUM_SLOW,50,!0),new G(e.PARAS,1,!1,!1,!1,"Mushroom Pokémon",I.BUG,I.GRASS,.3,5.4,O.EFFECT_SPORE,O.DRY_SKIN,O.DAMP,285,35,70,55,45,55,25,190,70,57,c.MEDIUM_FAST,50,!1),new G(e.PARASECT,1,!1,!1,!1,"Mushroom Pokémon",I.BUG,I.GRASS,1,29.5,O.EFFECT_SPORE,O.DRY_SKIN,O.DAMP,405,60,95,80,60,80,30,75,70,142,c.MEDIUM_FAST,50,!1),new G(e.VENONAT,1,!1,!1,!1,"Insect Pokémon",I.BUG,I.POISON,1,30,O.COMPOUND_EYES,O.TINTED_LENS,O.RUN_AWAY,305,60,55,50,40,55,45,190,70,61,c.MEDIUM_FAST,50,!1),new G(e.VENOMOTH,1,!1,!1,!1,"Poison Moth Pokémon",I.BUG,I.POISON,1.5,12.5,O.SHIELD_DUST,O.TINTED_LENS,O.WONDER_SKIN,450,70,65,60,90,75,90,75,70,158,c.MEDIUM_FAST,50,!1),new G(e.DIGLETT,1,!1,!1,!1,"Mole Pokémon",I.GROUND,null,.2,.8,O.SAND_VEIL,O.ARENA_TRAP,O.SAND_FORCE,265,10,55,25,35,45,95,255,50,53,c.MEDIUM_FAST,50,!1),new G(e.DUGTRIO,1,!1,!1,!1,"Mole Pokémon",I.GROUND,null,.7,33.3,O.SAND_VEIL,O.ARENA_TRAP,O.SAND_FORCE,425,35,100,50,50,70,120,50,50,149,c.MEDIUM_FAST,50,!1),new G(e.MEOWTH,1,!1,!1,!1,"Scratch Cat Pokémon",I.NORMAL,null,.4,4.2,O.PICKUP,O.TECHNICIAN,O.UNNERVE,290,40,45,35,40,40,90,255,50,58,c.MEDIUM_FAST,50,!1,!0,new Y("Normal","",I.NORMAL,null,.4,4.2,O.PICKUP,O.TECHNICIAN,O.UNNERVE,290,40,45,35,40,40,90,255,50,58,!1,null,!0),new Y("G-Max",Ue.GIGANTAMAX,I.NORMAL,null,33,999.9,O.TECHNICIAN,O.TECHNICIAN,O.TECHNICIAN,540,115,110,65,65,70,115,255,50,58)),new G(e.PERSIAN,1,!1,!1,!1,"Classy Cat Pokémon",I.NORMAL,null,1,32,O.LIMBER,O.TECHNICIAN,O.UNNERVE,440,65,70,60,65,65,115,90,50,154,c.MEDIUM_FAST,50,!1),new G(e.PSYDUCK,1,!1,!1,!1,"Duck Pokémon",I.WATER,null,.8,19.6,O.DAMP,O.CLOUD_NINE,O.SWIFT_SWIM,320,50,52,48,65,50,55,190,50,64,c.MEDIUM_FAST,50,!1),new G(e.GOLDUCK,1,!1,!1,!1,"Duck Pokémon",I.WATER,null,1.7,76.6,O.DAMP,O.CLOUD_NINE,O.SWIFT_SWIM,500,80,82,78,95,80,85,75,50,175,c.MEDIUM_FAST,50,!1),new G(e.MANKEY,1,!1,!1,!1,"Pig Monkey Pokémon",I.FIGHTING,null,.5,28,O.VITAL_SPIRIT,O.ANGER_POINT,O.DEFIANT,305,40,80,35,35,45,70,190,70,61,c.MEDIUM_FAST,50,!1),new G(e.PRIMEAPE,1,!1,!1,!1,"Pig Monkey Pokémon",I.FIGHTING,null,1,32,O.VITAL_SPIRIT,O.ANGER_POINT,O.DEFIANT,455,65,105,60,60,70,95,75,70,159,c.MEDIUM_FAST,50,!1),new G(e.GROWLITHE,1,!1,!1,!1,"Puppy Pokémon",I.FIRE,null,.7,19,O.INTIMIDATE,O.FLASH_FIRE,O.JUSTIFIED,350,55,70,45,70,50,60,190,50,70,c.SLOW,75,!1),new G(e.ARCANINE,1,!1,!1,!1,"Legendary Pokémon",I.FIRE,null,1.9,155,O.INTIMIDATE,O.FLASH_FIRE,O.JUSTIFIED,555,90,110,80,100,80,95,75,50,194,c.SLOW,75,!1),new G(e.POLIWAG,1,!1,!1,!1,"Tadpole Pokémon",I.WATER,null,.6,12.4,O.WATER_ABSORB,O.DAMP,O.SWIFT_SWIM,300,40,50,40,40,40,90,255,50,60,c.MEDIUM_SLOW,50,!1),new G(e.POLIWHIRL,1,!1,!1,!1,"Tadpole Pokémon",I.WATER,null,1,20,O.WATER_ABSORB,O.DAMP,O.SWIFT_SWIM,385,65,65,65,50,50,90,120,50,135,c.MEDIUM_SLOW,50,!1),new G(e.POLIWRATH,1,!1,!1,!1,"Tadpole Pokémon",I.WATER,I.FIGHTING,1.3,54,O.WATER_ABSORB,O.DAMP,O.SWIFT_SWIM,510,90,95,95,70,90,70,45,50,255,c.MEDIUM_SLOW,50,!1),new G(e.ABRA,1,!1,!1,!1,"Psi Pokémon",I.PSYCHIC,null,.9,19.5,O.SYNCHRONIZE,O.INNER_FOCUS,O.MAGIC_GUARD,310,25,20,15,105,55,90,200,50,62,c.MEDIUM_SLOW,75,!1),new G(e.KADABRA,1,!1,!1,!1,"Psi Pokémon",I.PSYCHIC,null,1.3,56.5,O.SYNCHRONIZE,O.INNER_FOCUS,O.MAGIC_GUARD,400,40,35,30,120,70,105,100,50,140,c.MEDIUM_SLOW,75,!0),new G(e.ALAKAZAM,1,!1,!1,!1,"Psi Pokémon",I.PSYCHIC,null,1.5,48,O.SYNCHRONIZE,O.INNER_FOCUS,O.MAGIC_GUARD,500,55,50,45,135,95,120,50,50,250,c.MEDIUM_SLOW,75,!0,!0,new Y("Normal","",I.PSYCHIC,null,1.5,48,O.SYNCHRONIZE,O.INNER_FOCUS,O.MAGIC_GUARD,500,55,50,45,135,95,120,50,50,250,!0,null,!0),new Y("Mega",Ue.MEGA,I.PSYCHIC,null,1.2,48,O.TRACE,O.TRACE,O.TRACE,600,55,50,65,175,105,150,50,50,250,!0)),new G(e.MACHOP,1,!1,!1,!1,"Superpower Pokémon",I.FIGHTING,null,.8,19.5,O.GUTS,O.NO_GUARD,O.STEADFAST,305,70,80,50,35,35,35,180,50,61,c.MEDIUM_SLOW,75,!1),new G(e.MACHOKE,1,!1,!1,!1,"Superpower Pokémon",I.FIGHTING,null,1.5,70.5,O.GUTS,O.NO_GUARD,O.STEADFAST,405,80,100,70,50,60,45,90,50,142,c.MEDIUM_SLOW,75,!1),new G(e.MACHAMP,1,!1,!1,!1,"Superpower Pokémon",I.FIGHTING,null,1.6,130,O.GUTS,O.NO_GUARD,O.STEADFAST,505,90,130,80,65,85,55,45,50,253,c.MEDIUM_SLOW,75,!1,!0,new Y("Normal","",I.FIGHTING,null,1.6,130,O.GUTS,O.NO_GUARD,O.STEADFAST,505,90,130,80,65,85,55,45,50,253,!1,null,!0),new Y("G-Max",Ue.GIGANTAMAX,I.FIGHTING,null,25,999.9,O.GUTS,O.GUTS,O.GUTS,605,115,170,95,65,95,65,45,50,253)),new G(e.BELLSPROUT,1,!1,!1,!1,"Flower Pokémon",I.GRASS,I.POISON,.7,4,O.CHLOROPHYLL,O.NONE,O.GLUTTONY,300,50,75,35,70,30,40,255,70,60,c.MEDIUM_SLOW,50,!1),new G(e.WEEPINBELL,1,!1,!1,!1,"Flycatcher Pokémon",I.GRASS,I.POISON,1,6.4,O.CHLOROPHYLL,O.NONE,O.GLUTTONY,390,65,90,50,85,45,55,120,70,137,c.MEDIUM_SLOW,50,!1),new G(e.VICTREEBEL,1,!1,!1,!1,"Flycatcher Pokémon",I.GRASS,I.POISON,1.7,15.5,O.CHLOROPHYLL,O.NONE,O.GLUTTONY,490,80,105,65,100,70,70,45,70,221,c.MEDIUM_SLOW,50,!1),new G(e.TENTACOOL,1,!1,!1,!1,"Jellyfish Pokémon",I.WATER,I.POISON,.9,45.5,O.CLEAR_BODY,O.LIQUID_OOZE,O.RAIN_DISH,335,40,40,35,50,100,70,190,50,67,c.SLOW,50,!1),new G(e.TENTACRUEL,1,!1,!1,!1,"Jellyfish Pokémon",I.WATER,I.POISON,1.6,55,O.CLEAR_BODY,O.LIQUID_OOZE,O.RAIN_DISH,515,80,70,65,80,120,100,60,50,180,c.SLOW,50,!1),new G(e.GEODUDE,1,!1,!1,!1,"Rock Pokémon",I.ROCK,I.GROUND,.4,20,O.ROCK_HEAD,O.STURDY,O.SAND_VEIL,300,40,80,100,30,30,20,255,70,60,c.MEDIUM_SLOW,50,!1),new G(e.GRAVELER,1,!1,!1,!1,"Rock Pokémon",I.ROCK,I.GROUND,1,105,O.ROCK_HEAD,O.STURDY,O.SAND_VEIL,390,55,95,115,45,45,35,120,70,137,c.MEDIUM_SLOW,50,!1),new G(e.GOLEM,1,!1,!1,!1,"Megaton Pokémon",I.ROCK,I.GROUND,1.4,300,O.ROCK_HEAD,O.STURDY,O.SAND_VEIL,495,80,120,130,55,65,45,45,70,223,c.MEDIUM_SLOW,50,!1),new G(e.PONYTA,1,!1,!1,!1,"Fire Horse Pokémon",I.FIRE,null,1,30,O.RUN_AWAY,O.FLASH_FIRE,O.FLAME_BODY,410,50,85,55,65,65,90,190,50,82,c.MEDIUM_FAST,50,!1),new G(e.RAPIDASH,1,!1,!1,!1,"Fire Horse Pokémon",I.FIRE,null,1.7,95,O.RUN_AWAY,O.FLASH_FIRE,O.FLAME_BODY,500,65,100,70,80,80,105,60,50,175,c.MEDIUM_FAST,50,!1),new G(e.SLOWPOKE,1,!1,!1,!1,"Dopey Pokémon",I.WATER,I.PSYCHIC,1.2,36,O.OBLIVIOUS,O.OWN_TEMPO,O.REGENERATOR,315,90,65,65,40,40,15,190,50,63,c.MEDIUM_FAST,50,!1),new G(e.SLOWBRO,1,!1,!1,!1,"Hermit Crab Pokémon",I.WATER,I.PSYCHIC,1.6,78.5,O.OBLIVIOUS,O.OWN_TEMPO,O.REGENERATOR,490,95,75,110,100,80,30,75,50,172,c.MEDIUM_FAST,50,!1,!0,new Y("Normal","",I.WATER,I.PSYCHIC,1.6,78.5,O.OBLIVIOUS,O.OWN_TEMPO,O.REGENERATOR,490,95,75,110,100,80,30,75,50,172,!1,null,!0),new Y("Mega",Ue.MEGA,I.WATER,I.PSYCHIC,2,120,O.SHELL_ARMOR,O.SHELL_ARMOR,O.SHELL_ARMOR,590,95,75,180,130,80,30,75,50,172)),new G(e.MAGNEMITE,1,!1,!1,!1,"Magnet Pokémon",I.ELECTRIC,I.STEEL,.3,6,O.MAGNET_PULL,O.STURDY,O.ANALYTIC,325,25,35,70,95,55,45,190,50,65,c.MEDIUM_FAST,null,!1),new G(e.MAGNETON,1,!1,!1,!1,"Magnet Pokémon",I.ELECTRIC,I.STEEL,1,60,O.MAGNET_PULL,O.STURDY,O.ANALYTIC,465,50,60,95,120,70,70,60,50,163,c.MEDIUM_FAST,null,!1),new G(e.FARFETCHD,1,!1,!1,!1,"Wild Duck Pokémon",I.NORMAL,I.FLYING,.8,15,O.KEEN_EYE,O.INNER_FOCUS,O.DEFIANT,377,52,90,55,58,62,60,45,50,132,c.MEDIUM_FAST,50,!1),new G(e.DODUO,1,!1,!1,!1,"Twin Bird Pokémon",I.NORMAL,I.FLYING,1.4,39.2,O.RUN_AWAY,O.EARLY_BIRD,O.TANGLED_FEET,310,35,85,45,35,35,75,190,70,62,c.MEDIUM_FAST,50,!0),new G(e.DODRIO,1,!1,!1,!1,"Triple Bird Pokémon",I.NORMAL,I.FLYING,1.8,85.2,O.RUN_AWAY,O.EARLY_BIRD,O.TANGLED_FEET,470,60,110,70,60,60,110,45,70,165,c.MEDIUM_FAST,50,!0),new G(e.SEEL,1,!1,!1,!1,"Sea Lion Pokémon",I.WATER,null,1.1,90,O.THICK_FAT,O.HYDRATION,O.ICE_BODY,325,65,45,55,45,70,45,190,70,65,c.MEDIUM_FAST,50,!1),new G(e.DEWGONG,1,!1,!1,!1,"Sea Lion Pokémon",I.WATER,I.ICE,1.7,120,O.THICK_FAT,O.HYDRATION,O.ICE_BODY,475,90,70,80,70,95,70,75,70,166,c.MEDIUM_FAST,50,!1),new G(e.GRIMER,1,!1,!1,!1,"Sludge Pokémon",I.POISON,null,.9,30,O.STENCH,O.STICKY_HOLD,O.POISON_TOUCH,325,80,80,50,40,50,25,190,70,65,c.MEDIUM_FAST,50,!1),new G(e.MUK,1,!1,!1,!1,"Sludge Pokémon",I.POISON,null,1.2,30,O.STENCH,O.STICKY_HOLD,O.POISON_TOUCH,500,105,105,75,65,100,50,75,70,175,c.MEDIUM_FAST,50,!1),new G(e.SHELLDER,1,!1,!1,!1,"Bivalve Pokémon",I.WATER,null,.3,4,O.SHELL_ARMOR,O.SKILL_LINK,O.OVERCOAT,305,30,65,100,45,25,40,190,50,61,c.SLOW,50,!1),new G(e.CLOYSTER,1,!1,!1,!1,"Bivalve Pokémon",I.WATER,I.ICE,1.5,132.5,O.SHELL_ARMOR,O.SKILL_LINK,O.OVERCOAT,525,50,95,180,85,45,70,60,50,184,c.SLOW,50,!1),new G(e.GASTLY,1,!1,!1,!1,"Gas Pokémon",I.GHOST,I.POISON,1.3,.1,O.LEVITATE,O.NONE,O.NONE,310,30,35,30,100,35,80,190,50,62,c.MEDIUM_SLOW,50,!1),new G(e.HAUNTER,1,!1,!1,!1,"Gas Pokémon",I.GHOST,I.POISON,1.6,.1,O.LEVITATE,O.NONE,O.NONE,405,45,50,45,115,55,95,90,50,142,c.MEDIUM_SLOW,50,!1),new G(e.GENGAR,1,!1,!1,!1,"Shadow Pokémon",I.GHOST,I.POISON,1.5,40.5,O.CURSED_BODY,O.NONE,O.NONE,500,60,65,60,130,75,110,45,50,250,c.MEDIUM_SLOW,50,!1,!0,new Y("Normal","",I.GHOST,I.POISON,1.5,40.5,O.CURSED_BODY,O.NONE,O.NONE,500,60,65,60,130,75,110,45,50,250,!1,null,!0),new Y("Mega",Ue.MEGA,I.GHOST,I.POISON,1.4,40.5,O.SHADOW_TAG,O.NONE,O.NONE,600,60,65,80,170,95,130,45,50,250),new Y("G-Max",Ue.GIGANTAMAX,I.GHOST,I.POISON,20,999.9,O.CURSED_BODY,O.NONE,O.NONE,600,140,65,70,140,85,100,45,50,250)),new G(e.ONIX,1,!1,!1,!1,"Rock Snake Pokémon",I.ROCK,I.GROUND,8.8,210,O.ROCK_HEAD,O.STURDY,O.WEAK_ARMOR,385,35,45,160,30,45,70,45,50,77,c.MEDIUM_FAST,50,!1),new G(e.DROWZEE,1,!1,!1,!1,"Hypnosis Pokémon",I.PSYCHIC,null,1,32.4,O.INSOMNIA,O.FOREWARN,O.INNER_FOCUS,328,60,48,45,43,90,42,190,70,66,c.MEDIUM_FAST,50,!1),new G(e.HYPNO,1,!1,!1,!1,"Hypnosis Pokémon",I.PSYCHIC,null,1.6,75.6,O.INSOMNIA,O.FOREWARN,O.INNER_FOCUS,483,85,73,70,73,115,67,75,70,169,c.MEDIUM_FAST,50,!0),new G(e.KRABBY,1,!1,!1,!1,"River Crab Pokémon",I.WATER,null,.4,6.5,O.HYPER_CUTTER,O.SHELL_ARMOR,O.SHEER_FORCE,325,30,105,90,25,25,50,225,50,65,c.MEDIUM_FAST,50,!1),new G(e.KINGLER,1,!1,!1,!1,"Pincer Pokémon",I.WATER,null,1.3,60,O.HYPER_CUTTER,O.SHELL_ARMOR,O.SHEER_FORCE,475,55,130,115,50,50,75,60,50,166,c.MEDIUM_FAST,50,!1,!0,new Y("Normal","",I.WATER,null,1.3,60,O.HYPER_CUTTER,O.SHELL_ARMOR,O.SHEER_FORCE,475,55,130,115,50,50,75,60,50,166,!1,null,!0),new Y("G-Max",Ue.GIGANTAMAX,I.WATER,null,19,999.9,O.TOUGH_CLAWS,O.TOUGH_CLAWS,O.TOUGH_CLAWS,575,90,155,140,50,70,70,60,50,166)),new G(e.VOLTORB,1,!1,!1,!1,"Ball Pokémon",I.ELECTRIC,null,.5,10.4,O.SOUNDPROOF,O.STATIC,O.AFTERMATH,330,40,30,50,55,55,100,190,70,66,c.MEDIUM_FAST,null,!1),new G(e.ELECTRODE,1,!1,!1,!1,"Ball Pokémon",I.ELECTRIC,null,1.2,66.6,O.SOUNDPROOF,O.STATIC,O.AFTERMATH,490,60,50,70,80,80,150,60,70,172,c.MEDIUM_FAST,null,!1),new G(e.EXEGGCUTE,1,!1,!1,!1,"Egg Pokémon",I.GRASS,I.PSYCHIC,.4,2.5,O.CHLOROPHYLL,O.NONE,O.HARVEST,325,60,40,80,60,45,40,90,50,65,c.SLOW,50,!1),new G(e.EXEGGUTOR,1,!1,!1,!1,"Coconut Pokémon",I.GRASS,I.PSYCHIC,2,120,O.CHLOROPHYLL,O.NONE,O.HARVEST,530,95,95,85,125,75,55,45,50,186,c.SLOW,50,!1),new G(e.CUBONE,1,!1,!1,!1,"Lonely Pokémon",I.GROUND,null,.4,6.5,O.ROCK_HEAD,O.LIGHTNING_ROD,O.BATTLE_ARMOR,320,50,50,95,40,50,35,190,50,64,c.MEDIUM_FAST,50,!1),new G(e.MAROWAK,1,!1,!1,!1,"Bone Keeper Pokémon",I.GROUND,null,1,45,O.ROCK_HEAD,O.LIGHTNING_ROD,O.BATTLE_ARMOR,425,60,80,110,50,80,45,75,50,149,c.MEDIUM_FAST,50,!1),new G(e.HITMONLEE,1,!1,!1,!1,"Kicking Pokémon",I.FIGHTING,null,1.5,49.8,O.LIMBER,O.RECKLESS,O.UNBURDEN,455,50,120,53,35,110,87,45,50,159,c.MEDIUM_FAST,100,!1),new G(e.HITMONCHAN,1,!1,!1,!1,"Punching Pokémon",I.FIGHTING,null,1.4,50.2,O.KEEN_EYE,O.IRON_FIST,O.INNER_FOCUS,455,50,105,79,35,110,76,45,50,159,c.MEDIUM_FAST,100,!1),new G(e.LICKITUNG,1,!1,!1,!1,"Licking Pokémon",I.NORMAL,null,1.2,65.5,O.OWN_TEMPO,O.OBLIVIOUS,O.CLOUD_NINE,385,90,55,75,60,75,30,45,50,77,c.MEDIUM_FAST,50,!1),new G(e.KOFFING,1,!1,!1,!1,"Poison Gas Pokémon",I.POISON,null,.6,1,O.LEVITATE,O.NEUTRALIZING_GAS,O.STENCH,340,40,65,95,60,45,35,190,50,68,c.MEDIUM_FAST,50,!1),new G(e.WEEZING,1,!1,!1,!1,"Poison Gas Pokémon",I.POISON,null,1.2,9.5,O.LEVITATE,O.NEUTRALIZING_GAS,O.STENCH,490,65,90,120,85,70,60,60,50,172,c.MEDIUM_FAST,50,!1),new G(e.RHYHORN,1,!1,!1,!1,"Spikes Pokémon",I.GROUND,I.ROCK,1,115,O.LIGHTNING_ROD,O.ROCK_HEAD,O.RECKLESS,345,80,85,95,30,30,25,120,50,69,c.SLOW,50,!0),new G(e.RHYDON,1,!1,!1,!1,"Drill Pokémon",I.GROUND,I.ROCK,1.9,120,O.LIGHTNING_ROD,O.ROCK_HEAD,O.RECKLESS,485,105,130,120,45,45,40,60,50,170,c.SLOW,50,!0),new G(e.CHANSEY,1,!1,!1,!1,"Egg Pokémon",I.NORMAL,null,1.1,34.6,O.NATURAL_CURE,O.SERENE_GRACE,O.HEALER,450,250,5,5,35,105,50,30,140,395,c.FAST,0,!1),new G(e.TANGELA,1,!1,!1,!1,"Vine Pokémon",I.GRASS,null,1,35,O.CHLOROPHYLL,O.LEAF_GUARD,O.REGENERATOR,435,65,55,115,100,40,60,45,50,87,c.MEDIUM_FAST,50,!1),new G(e.KANGASKHAN,1,!1,!1,!1,"Parent Pokémon",I.NORMAL,null,2.2,80,O.EARLY_BIRD,O.SCRAPPY,O.INNER_FOCUS,490,105,95,80,40,80,90,45,50,172,c.MEDIUM_FAST,0,!1,!0,new Y("Normal","",I.NORMAL,null,2.2,80,O.EARLY_BIRD,O.SCRAPPY,O.INNER_FOCUS,490,105,95,80,40,80,90,45,50,172,!1,null,!0),new Y("Mega",Ue.MEGA,I.NORMAL,null,2.2,100,O.PARENTAL_BOND,O.PARENTAL_BOND,O.PARENTAL_BOND,590,105,125,100,60,100,100,45,50,172)),new G(e.HORSEA,1,!1,!1,!1,"Dragon Pokémon",I.WATER,null,.4,8,O.SWIFT_SWIM,O.SNIPER,O.DAMP,295,30,40,70,70,25,60,225,50,59,c.MEDIUM_FAST,50,!1),new G(e.SEADRA,1,!1,!1,!1,"Dragon Pokémon",I.WATER,null,1.2,25,O.POISON_POINT,O.SNIPER,O.DAMP,440,55,65,95,95,45,85,75,50,154,c.MEDIUM_FAST,50,!1),new G(e.GOLDEEN,1,!1,!1,!1,"Goldfish Pokémon",I.WATER,null,.6,15,O.SWIFT_SWIM,O.WATER_VEIL,O.LIGHTNING_ROD,320,45,67,60,35,50,63,225,50,64,c.MEDIUM_FAST,50,!0),new G(e.SEAKING,1,!1,!1,!1,"Goldfish Pokémon",I.WATER,null,1.3,39,O.SWIFT_SWIM,O.WATER_VEIL,O.LIGHTNING_ROD,450,80,92,65,65,80,68,60,50,158,c.MEDIUM_FAST,50,!0),new G(e.STARYU,1,!1,!1,!1,"Star Shape Pokémon",I.WATER,null,.8,34.5,O.ILLUMINATE,O.NATURAL_CURE,O.ANALYTIC,340,30,45,55,70,55,85,225,50,68,c.SLOW,null,!1),new G(e.STARMIE,1,!1,!1,!1,"Mysterious Pokémon",I.WATER,I.PSYCHIC,1.1,80,O.ILLUMINATE,O.NATURAL_CURE,O.ANALYTIC,520,60,75,85,100,85,115,60,50,182,c.SLOW,null,!1),new G(e.MR_MIME,1,!1,!1,!1,"Barrier Pokémon",I.PSYCHIC,I.FAIRY,1.3,54.5,O.SOUNDPROOF,O.FILTER,O.TECHNICIAN,460,40,45,65,100,120,90,45,50,161,c.MEDIUM_FAST,50,!1),new G(e.SCYTHER,1,!1,!1,!1,"Mantis Pokémon",I.BUG,I.FLYING,1.5,56,O.SWARM,O.TECHNICIAN,O.STEADFAST,500,70,110,80,55,80,105,45,50,100,c.MEDIUM_FAST,50,!0),new G(e.JYNX,1,!1,!1,!1,"Human Shape Pokémon",I.ICE,I.PSYCHIC,1.4,40.6,O.OBLIVIOUS,O.FOREWARN,O.DRY_SKIN,455,65,50,35,115,95,95,45,50,159,c.MEDIUM_FAST,0,!1),new G(e.ELECTABUZZ,1,!1,!1,!1,"Electric Pokémon",I.ELECTRIC,null,1.1,30,O.STATIC,O.NONE,O.VITAL_SPIRIT,490,65,83,57,95,85,105,45,50,172,c.MEDIUM_FAST,75,!1),new G(e.MAGMAR,1,!1,!1,!1,"Spitfire Pokémon",I.FIRE,null,1.3,44.5,O.FLAME_BODY,O.NONE,O.VITAL_SPIRIT,495,65,95,57,100,85,93,45,50,173,c.MEDIUM_FAST,75,!1),new G(e.PINSIR,1,!1,!1,!1,"Stag Beetle Pokémon",I.BUG,null,1.5,55,O.HYPER_CUTTER,O.MOLD_BREAKER,O.MOXIE,500,65,125,100,55,70,85,45,50,175,c.SLOW,50,!1,!0,new Y("Normal","",I.BUG,null,1.5,55,O.HYPER_CUTTER,O.MOLD_BREAKER,O.MOXIE,500,65,125,100,55,70,85,45,50,175,!1,null,!0),new Y("Mega",Ue.MEGA,I.BUG,I.FLYING,1.7,59,O.AERILATE,O.AERILATE,O.AERILATE,600,65,155,120,65,90,105,45,50,175)),new G(e.TAUROS,1,!1,!1,!1,"Wild Bull Pokémon",I.NORMAL,null,1.4,88.4,O.INTIMIDATE,O.ANGER_POINT,O.SHEER_FORCE,490,75,100,95,40,70,110,45,50,172,c.SLOW,100,!1),new G(e.MAGIKARP,1,!1,!1,!1,"Fish Pokémon",I.WATER,null,.9,10,O.SWIFT_SWIM,O.NONE,O.RATTLED,200,20,10,55,15,20,80,255,50,40,c.SLOW,50,!0),new G(e.GYARADOS,1,!1,!1,!1,"Atrocious Pokémon",I.WATER,I.FLYING,6.5,235,O.INTIMIDATE,O.NONE,O.MOXIE,540,95,125,79,60,100,81,45,50,189,c.SLOW,50,!0,!0,new Y("Normal","",I.WATER,I.FLYING,6.5,235,O.INTIMIDATE,O.NONE,O.MOXIE,540,95,125,79,60,100,81,45,50,189,!0,null,!0),new Y("Mega",Ue.MEGA,I.WATER,I.DARK,6.5,305,O.MOLD_BREAKER,O.MOLD_BREAKER,O.MOLD_BREAKER,640,95,155,109,70,130,81,45,50,189,!0)),new G(e.LAPRAS,1,!1,!1,!1,"Transport Pokémon",I.WATER,I.ICE,2.5,220,O.WATER_ABSORB,O.SHELL_ARMOR,O.HYDRATION,535,130,85,80,85,95,60,45,50,187,c.SLOW,50,!1,!0,new Y("Normal","",I.WATER,I.ICE,2.5,220,O.WATER_ABSORB,O.SHELL_ARMOR,O.HYDRATION,535,130,85,80,85,95,60,45,50,187,!1,null,!0),new Y("G-Max",Ue.GIGANTAMAX,I.WATER,I.ICE,24,999.9,O.SHIELD_DUST,O.SHIELD_DUST,O.SHIELD_DUST,635,170,85,85,105,130,60,45,50,187)),new G(e.DITTO,1,!1,!1,!1,"Transform Pokémon",I.NORMAL,null,.3,4,O.LIMBER,O.NONE,O.IMPOSTER,288,48,48,48,48,48,48,35,50,101,c.MEDIUM_FAST,null,!1),new G(e.EEVEE,1,!1,!1,!1,"Evolution Pokémon",I.NORMAL,null,.3,6.5,O.RUN_AWAY,O.ADAPTABILITY,O.ANTICIPATION,325,55,55,50,45,65,55,45,50,65,c.MEDIUM_FAST,87.5,!1,!0,new Y("Normal","",I.NORMAL,null,.3,6.5,O.RUN_AWAY,O.ADAPTABILITY,O.ANTICIPATION,325,55,55,50,45,65,55,45,50,65,!1,null,!0),new Y("Partner","partner",I.NORMAL,null,.3,6.5,O.RUN_AWAY,O.ADAPTABILITY,O.ANTICIPATION,435,65,75,70,65,85,75,45,50,65,!1,null,!0),new Y("G-Max",Ue.GIGANTAMAX,I.NORMAL,null,18,999.9,O.PROTEAN,O.PROTEAN,O.PROTEAN,535,110,90,70,95,85,85,45,50,65)),new G(e.VAPOREON,1,!1,!1,!1,"Bubble Jet Pokémon",I.WATER,null,1,29,O.WATER_ABSORB,O.NONE,O.HYDRATION,525,130,65,60,110,95,65,45,50,184,c.MEDIUM_FAST,87.5,!1),new G(e.JOLTEON,1,!1,!1,!1,"Lightning Pokémon",I.ELECTRIC,null,.8,24.5,O.VOLT_ABSORB,O.NONE,O.QUICK_FEET,525,65,65,60,110,95,130,45,50,184,c.MEDIUM_FAST,87.5,!1),new G(e.FLAREON,1,!1,!1,!1,"Flame Pokémon",I.FIRE,null,.9,25,O.FLASH_FIRE,O.NONE,O.GUTS,525,65,130,60,95,110,65,45,50,184,c.MEDIUM_FAST,87.5,!1),new G(e.PORYGON,1,!1,!1,!1,"Virtual Pokémon",I.NORMAL,null,.8,36.5,O.TRACE,O.DOWNLOAD,O.ANALYTIC,395,65,60,70,85,75,40,45,50,79,c.MEDIUM_FAST,null,!1),new G(e.OMANYTE,1,!1,!1,!1,"Spiral Pokémon",I.ROCK,I.WATER,.4,7.5,O.SWIFT_SWIM,O.SHELL_ARMOR,O.WEAK_ARMOR,355,35,40,100,90,55,35,45,50,71,c.MEDIUM_FAST,87.5,!1),new G(e.OMASTAR,1,!1,!1,!1,"Spiral Pokémon",I.ROCK,I.WATER,1,35,O.SWIFT_SWIM,O.SHELL_ARMOR,O.WEAK_ARMOR,495,70,60,125,115,70,55,45,50,173,c.MEDIUM_FAST,87.5,!1),new G(e.KABUTO,1,!1,!1,!1,"Shellfish Pokémon",I.ROCK,I.WATER,.5,11.5,O.SWIFT_SWIM,O.BATTLE_ARMOR,O.WEAK_ARMOR,355,30,80,90,55,45,55,45,50,71,c.MEDIUM_FAST,87.5,!1),new G(e.KABUTOPS,1,!1,!1,!1,"Shellfish Pokémon",I.ROCK,I.WATER,1.3,40.5,O.SWIFT_SWIM,O.BATTLE_ARMOR,O.WEAK_ARMOR,495,60,115,105,65,70,80,45,50,173,c.MEDIUM_FAST,87.5,!1),new G(e.AERODACTYL,1,!1,!1,!1,"Fossil Pokémon",I.ROCK,I.FLYING,1.8,59,O.ROCK_HEAD,O.PRESSURE,O.UNNERVE,515,80,105,65,60,75,130,45,50,180,c.SLOW,87.5,!1,!0,new Y("Normal","",I.ROCK,I.FLYING,1.8,59,O.ROCK_HEAD,O.PRESSURE,O.UNNERVE,515,80,105,65,60,75,130,45,50,180,!1,null,!0),new Y("Mega",Ue.MEGA,I.ROCK,I.FLYING,2.1,79,O.TOUGH_CLAWS,O.TOUGH_CLAWS,O.TOUGH_CLAWS,615,80,135,85,70,95,150,45,50,180)),new G(e.SNORLAX,1,!1,!1,!1,"Sleeping Pokémon",I.NORMAL,null,2.1,460,O.IMMUNITY,O.THICK_FAT,O.GLUTTONY,540,160,110,65,65,110,30,25,50,189,c.SLOW,87.5,!1,!0,new Y("Normal","",I.NORMAL,null,2.1,460,O.IMMUNITY,O.THICK_FAT,O.GLUTTONY,540,160,110,65,65,110,30,25,50,189,!1,null,!0),new Y("G-Max",Ue.GIGANTAMAX,I.NORMAL,null,35,999.9,O.HARVEST,O.HARVEST,O.HARVEST,640,200,135,80,80,125,20,25,50,189)),new G(e.ARTICUNO,1,!0,!1,!1,"Freeze Pokémon",I.ICE,I.FLYING,1.7,55.4,O.PRESSURE,O.NONE,O.SNOW_CLOAK,580,90,85,100,95,125,85,3,35,290,c.SLOW,null,!1),new G(e.ZAPDOS,1,!0,!1,!1,"Electric Pokémon",I.ELECTRIC,I.FLYING,1.6,52.6,O.PRESSURE,O.NONE,O.STATIC,580,90,90,85,125,90,100,3,35,290,c.SLOW,null,!1),new G(e.MOLTRES,1,!0,!1,!1,"Flame Pokémon",I.FIRE,I.FLYING,2,60,O.PRESSURE,O.NONE,O.FLAME_BODY,580,90,100,90,125,85,90,3,35,290,c.SLOW,null,!1),new G(e.DRATINI,1,!1,!1,!1,"Dragon Pokémon",I.DRAGON,null,1.8,3.3,O.SHED_SKIN,O.NONE,O.MARVEL_SCALE,300,41,64,45,50,50,50,45,35,60,c.SLOW,50,!1),new G(e.DRAGONAIR,1,!1,!1,!1,"Dragon Pokémon",I.DRAGON,null,4,16.5,O.SHED_SKIN,O.NONE,O.MARVEL_SCALE,420,61,84,65,70,70,70,45,35,147,c.SLOW,50,!1),new G(e.DRAGONITE,1,!1,!1,!1,"Dragon Pokémon",I.DRAGON,I.FLYING,2.2,210,O.INNER_FOCUS,O.NONE,O.MULTISCALE,600,91,134,95,100,100,80,45,35,300,c.SLOW,50,!1),new G(e.MEWTWO,1,!1,!0,!1,"Genetic Pokémon",I.PSYCHIC,null,2,122,O.PRESSURE,O.NONE,O.UNNERVE,680,106,110,90,154,90,130,3,0,340,c.SLOW,null,!1,!0,new Y("Normal","",I.PSYCHIC,null,2,122,O.PRESSURE,O.NONE,O.UNNERVE,680,106,110,90,154,90,130,3,0,340,!1,null,!0),new Y("Mega X",Ue.MEGA_X,I.PSYCHIC,I.FIGHTING,2.3,127,O.STEADFAST,O.NONE,O.STEADFAST,780,106,190,100,154,100,130,3,0,340),new Y("Mega Y",Ue.MEGA_Y,I.PSYCHIC,null,1.5,33,O.INSOMNIA,O.NONE,O.INSOMNIA,780,106,150,70,194,120,140,3,0,340)),new G(e.MEW,1,!1,!1,!0,"New Species Pokémon",I.PSYCHIC,null,.4,4,O.SYNCHRONIZE,O.NONE,O.NONE,600,100,100,100,100,100,100,45,100,300,c.MEDIUM_SLOW,null,!1),new G(e.CHIKORITA,2,!1,!1,!1,"Leaf Pokémon",I.GRASS,null,.9,6.4,O.OVERGROW,O.NONE,O.LEAF_GUARD,318,45,49,65,49,65,45,45,70,64,c.MEDIUM_SLOW,87.5,!1),new G(e.BAYLEEF,2,!1,!1,!1,"Leaf Pokémon",I.GRASS,null,1.2,15.8,O.OVERGROW,O.NONE,O.LEAF_GUARD,405,60,62,80,63,80,60,45,70,142,c.MEDIUM_SLOW,87.5,!1),new G(e.MEGANIUM,2,!1,!1,!1,"Herb Pokémon",I.GRASS,null,1.8,100.5,O.OVERGROW,O.NONE,O.LEAF_GUARD,525,80,82,100,83,100,80,45,70,236,c.MEDIUM_SLOW,87.5,!0),new G(e.CYNDAQUIL,2,!1,!1,!1,"Fire Mouse Pokémon",I.FIRE,null,.5,7.9,O.BLAZE,O.NONE,O.FLASH_FIRE,309,39,52,43,60,50,65,45,70,62,c.MEDIUM_SLOW,87.5,!1),new G(e.QUILAVA,2,!1,!1,!1,"Volcano Pokémon",I.FIRE,null,.9,19,O.BLAZE,O.NONE,O.FLASH_FIRE,405,58,64,58,80,65,80,45,70,142,c.MEDIUM_SLOW,87.5,!1),new G(e.TYPHLOSION,2,!1,!1,!1,"Volcano Pokémon",I.FIRE,null,1.7,79.5,O.BLAZE,O.NONE,O.FLASH_FIRE,534,78,84,78,109,85,100,45,70,240,c.MEDIUM_SLOW,87.5,!1),new G(e.TOTODILE,2,!1,!1,!1,"Big Jaw Pokémon",I.WATER,null,.6,9.5,O.TORRENT,O.NONE,O.SHEER_FORCE,314,50,65,64,44,48,43,45,70,63,c.MEDIUM_SLOW,87.5,!1),new G(e.CROCONAW,2,!1,!1,!1,"Big Jaw Pokémon",I.WATER,null,1.1,25,O.TORRENT,O.NONE,O.SHEER_FORCE,405,65,80,80,59,63,58,45,70,142,c.MEDIUM_SLOW,87.5,!1),new G(e.FERALIGATR,2,!1,!1,!1,"Big Jaw Pokémon",I.WATER,null,2.3,88.8,O.TORRENT,O.NONE,O.SHEER_FORCE,530,85,105,100,79,83,78,45,70,239,c.MEDIUM_SLOW,87.5,!1),new G(e.SENTRET,2,!1,!1,!1,"Scout Pokémon",I.NORMAL,null,.8,6,O.RUN_AWAY,O.KEEN_EYE,O.FRISK,215,35,46,34,35,45,20,255,70,43,c.MEDIUM_FAST,50,!1),new G(e.FURRET,2,!1,!1,!1,"Long Body Pokémon",I.NORMAL,null,1.8,32.5,O.RUN_AWAY,O.KEEN_EYE,O.FRISK,415,85,76,64,45,55,90,90,70,145,c.MEDIUM_FAST,50,!1),new G(e.HOOTHOOT,2,!1,!1,!1,"Owl Pokémon",I.NORMAL,I.FLYING,.7,21.2,O.INSOMNIA,O.KEEN_EYE,O.TINTED_LENS,262,60,30,30,36,56,50,255,50,52,c.MEDIUM_FAST,50,!1),new G(e.NOCTOWL,2,!1,!1,!1,"Owl Pokémon",I.NORMAL,I.FLYING,1.6,40.8,O.INSOMNIA,O.KEEN_EYE,O.TINTED_LENS,452,100,50,50,86,96,70,90,50,158,c.MEDIUM_FAST,50,!1),new G(e.LEDYBA,2,!1,!1,!1,"Five Star Pokémon",I.BUG,I.FLYING,1,10.8,O.SWARM,O.EARLY_BIRD,O.RATTLED,265,40,20,30,40,80,55,255,70,53,c.FAST,50,!0),new G(e.LEDIAN,2,!1,!1,!1,"Five Star Pokémon",I.BUG,I.FLYING,1.4,35.6,O.SWARM,O.EARLY_BIRD,O.IRON_FIST,390,55,35,50,55,110,85,90,70,137,c.FAST,50,!0),new G(e.SPINARAK,2,!1,!1,!1,"String Spit Pokémon",I.BUG,I.POISON,.5,8.5,O.SWARM,O.INSOMNIA,O.SNIPER,250,40,60,40,40,40,30,255,70,50,c.FAST,50,!1),new G(e.ARIADOS,2,!1,!1,!1,"Long Leg Pokémon",I.BUG,I.POISON,1.1,33.5,O.SWARM,O.INSOMNIA,O.SNIPER,400,70,90,70,60,70,40,90,70,140,c.FAST,50,!1),new G(e.CROBAT,2,!1,!1,!1,"Bat Pokémon",I.POISON,I.FLYING,1.8,75,O.INNER_FOCUS,O.NONE,O.INFILTRATOR,535,85,90,80,70,80,130,90,50,268,c.MEDIUM_FAST,50,!1),new G(e.CHINCHOU,2,!1,!1,!1,"Angler Pokémon",I.WATER,I.ELECTRIC,.5,12,O.VOLT_ABSORB,O.ILLUMINATE,O.WATER_ABSORB,330,75,38,38,56,56,67,190,50,66,c.SLOW,50,!1),new G(e.LANTURN,2,!1,!1,!1,"Light Pokémon",I.WATER,I.ELECTRIC,1.2,22.5,O.VOLT_ABSORB,O.ILLUMINATE,O.WATER_ABSORB,460,125,58,58,76,76,67,75,50,161,c.SLOW,50,!1),new G(e.PICHU,2,!1,!1,!1,"Tiny Mouse Pokémon",I.ELECTRIC,null,.3,2,O.STATIC,O.NONE,O.LIGHTNING_ROD,205,20,40,15,35,35,60,190,70,41,c.MEDIUM_FAST,50,!1,!1,new Y("Normal","",I.ELECTRIC,null,1.4,61.5,O.STATIC,O.NONE,O.LIGHTNING_ROD,205,20,40,15,35,35,60,190,70,41,!1,null,!0),new Y("Spiky-Eared","spiky",I.ELECTRIC,null,1.4,61.5,O.STATIC,O.NONE,O.LIGHTNING_ROD,205,20,40,15,35,35,60,190,70,41,!1,null,!0)),new G(e.CLEFFA,2,!1,!1,!1,"Star Shape Pokémon",I.FAIRY,null,.3,3,O.CUTE_CHARM,O.MAGIC_GUARD,O.FRIEND_GUARD,218,50,25,28,45,55,15,150,140,44,c.FAST,25,!1),new G(e.IGGLYBUFF,2,!1,!1,!1,"Balloon Pokémon",I.NORMAL,I.FAIRY,.3,1,O.CUTE_CHARM,O.COMPETITIVE,O.FRIEND_GUARD,210,90,30,15,40,20,15,170,50,42,c.FAST,25,!1),new G(e.TOGEPI,2,!1,!1,!1,"Spike Ball Pokémon",I.FAIRY,null,.3,1.5,O.HUSTLE,O.SERENE_GRACE,O.SUPER_LUCK,245,35,20,65,40,65,20,190,50,49,c.FAST,87.5,!1),new G(e.TOGETIC,2,!1,!1,!1,"Happiness Pokémon",I.FAIRY,I.FLYING,.6,3.2,O.HUSTLE,O.SERENE_GRACE,O.SUPER_LUCK,405,55,40,85,80,105,40,75,50,142,c.FAST,87.5,!1),new G(e.NATU,2,!1,!1,!1,"Tiny Bird Pokémon",I.PSYCHIC,I.FLYING,.2,2,O.SYNCHRONIZE,O.EARLY_BIRD,O.MAGIC_BOUNCE,320,40,50,45,70,45,70,190,50,64,c.MEDIUM_FAST,50,!1),new G(e.XATU,2,!1,!1,!1,"Mystic Pokémon",I.PSYCHIC,I.FLYING,1.5,15,O.SYNCHRONIZE,O.EARLY_BIRD,O.MAGIC_BOUNCE,470,65,75,70,95,70,95,75,50,165,c.MEDIUM_FAST,50,!0),new G(e.MAREEP,2,!1,!1,!1,"Wool Pokémon",I.ELECTRIC,null,.6,7.8,O.STATIC,O.NONE,O.PLUS,280,55,40,40,65,45,35,235,70,56,c.MEDIUM_SLOW,50,!1),new G(e.FLAAFFY,2,!1,!1,!1,"Wool Pokémon",I.ELECTRIC,null,.8,13.3,O.STATIC,O.NONE,O.PLUS,365,70,55,55,80,60,45,120,70,128,c.MEDIUM_SLOW,50,!1),new G(e.AMPHAROS,2,!1,!1,!1,"Light Pokémon",I.ELECTRIC,null,1.4,61.5,O.STATIC,O.NONE,O.PLUS,510,90,75,85,115,90,55,45,70,230,c.MEDIUM_SLOW,50,!1,!0,new Y("Normal","",I.ELECTRIC,null,1.4,61.5,O.STATIC,O.NONE,O.PLUS,510,90,75,85,115,90,55,45,70,230,!1,null,!0),new Y("Mega",Ue.MEGA,I.ELECTRIC,I.DRAGON,1.4,61.5,O.MOLD_BREAKER,O.NONE,O.MOLD_BREAKER,610,90,95,105,165,110,45,45,70,230)),new G(e.BELLOSSOM,2,!1,!1,!1,"Flower Pokémon",I.GRASS,null,.4,5.8,O.CHLOROPHYLL,O.NONE,O.HEALER,490,75,80,95,90,100,50,45,50,245,c.MEDIUM_SLOW,50,!1),new G(e.MARILL,2,!1,!1,!1,"Aqua Mouse Pokémon",I.WATER,I.FAIRY,.4,8.5,O.THICK_FAT,O.HUGE_POWER,O.SAP_SIPPER,250,70,20,50,20,50,40,190,50,88,c.FAST,50,!1),new G(e.AZUMARILL,2,!1,!1,!1,"Aqua Rabbit Pokémon",I.WATER,I.FAIRY,.8,28.5,O.THICK_FAT,O.HUGE_POWER,O.SAP_SIPPER,420,100,50,80,60,80,50,75,50,210,c.FAST,50,!1),new G(e.SUDOWOODO,2,!1,!1,!1,"Imitation Pokémon",I.ROCK,null,1.2,38,O.STURDY,O.ROCK_HEAD,O.RATTLED,410,70,100,115,30,65,30,65,50,144,c.MEDIUM_FAST,50,!0),new G(e.POLITOED,2,!1,!1,!1,"Frog Pokémon",I.WATER,null,1.1,33.9,O.WATER_ABSORB,O.DAMP,O.DRIZZLE,500,90,75,75,90,100,70,45,50,250,c.MEDIUM_SLOW,50,!0),new G(e.HOPPIP,2,!1,!1,!1,"Cottonweed Pokémon",I.GRASS,I.FLYING,.4,.5,O.CHLOROPHYLL,O.LEAF_GUARD,O.INFILTRATOR,250,35,35,40,35,55,50,255,70,50,c.MEDIUM_SLOW,50,!1),new G(e.SKIPLOOM,2,!1,!1,!1,"Cottonweed Pokémon",I.GRASS,I.FLYING,.6,1,O.CHLOROPHYLL,O.LEAF_GUARD,O.INFILTRATOR,340,55,45,50,45,65,80,120,70,119,c.MEDIUM_SLOW,50,!1),new G(e.JUMPLUFF,2,!1,!1,!1,"Cottonweed Pokémon",I.GRASS,I.FLYING,.8,3,O.CHLOROPHYLL,O.LEAF_GUARD,O.INFILTRATOR,460,75,55,70,55,95,110,45,70,207,c.MEDIUM_SLOW,50,!1),new G(e.AIPOM,2,!1,!1,!1,"Long Tail Pokémon",I.NORMAL,null,.8,11.5,O.RUN_AWAY,O.PICKUP,O.SKILL_LINK,360,55,70,55,40,55,85,45,70,72,c.FAST,50,!0),new G(e.SUNKERN,2,!1,!1,!1,"Seed Pokémon",I.GRASS,null,.3,1.8,O.CHLOROPHYLL,O.SOLAR_POWER,O.EARLY_BIRD,180,30,30,30,30,30,30,235,70,36,c.MEDIUM_SLOW,50,!1),new G(e.SUNFLORA,2,!1,!1,!1,"Sun Pokémon",I.GRASS,null,.8,8.5,O.CHLOROPHYLL,O.SOLAR_POWER,O.EARLY_BIRD,425,75,75,55,105,85,30,120,70,149,c.MEDIUM_SLOW,50,!1),new G(e.YANMA,2,!1,!1,!1,"Clear Wing Pokémon",I.BUG,I.FLYING,1.2,38,O.SPEED_BOOST,O.COMPOUND_EYES,O.FRISK,390,65,65,45,75,45,95,75,70,78,c.MEDIUM_FAST,50,!1),new G(e.WOOPER,2,!1,!1,!1,"Water Fish Pokémon",I.WATER,I.GROUND,.4,8.5,O.DAMP,O.WATER_ABSORB,O.UNAWARE,210,55,45,45,25,25,15,255,50,42,c.MEDIUM_FAST,50,!0),new G(e.QUAGSIRE,2,!1,!1,!1,"Water Fish Pokémon",I.WATER,I.GROUND,1.4,75,O.DAMP,O.WATER_ABSORB,O.UNAWARE,430,95,85,85,65,65,35,90,50,151,c.MEDIUM_FAST,50,!0),new G(e.ESPEON,2,!1,!1,!1,"Sun Pokémon",I.PSYCHIC,null,.9,26.5,O.SYNCHRONIZE,O.NONE,O.MAGIC_BOUNCE,525,65,65,60,130,95,110,45,50,184,c.MEDIUM_FAST,87.5,!1),new G(e.UMBREON,2,!1,!1,!1,"Moonlight Pokémon",I.DARK,null,1,27,O.SYNCHRONIZE,O.NONE,O.INNER_FOCUS,525,95,65,110,60,130,65,45,35,184,c.MEDIUM_FAST,87.5,!1),new G(e.MURKROW,2,!1,!1,!1,"Darkness Pokémon",I.DARK,I.FLYING,.5,2.1,O.INSOMNIA,O.SUPER_LUCK,O.PRANKSTER,405,60,85,42,85,42,91,30,35,81,c.MEDIUM_SLOW,50,!0),new G(e.SLOWKING,2,!1,!1,!1,"Royal Pokémon",I.WATER,I.PSYCHIC,2,79.5,O.OBLIVIOUS,O.OWN_TEMPO,O.REGENERATOR,490,95,75,80,100,110,30,70,50,172,c.MEDIUM_FAST,50,!1),new G(e.MISDREAVUS,2,!1,!1,!1,"Screech Pokémon",I.GHOST,null,.7,1,O.LEVITATE,O.NONE,O.NONE,435,60,60,60,85,85,85,45,35,87,c.FAST,50,!1),new G(e.UNOWN,2,!1,!1,!1,"Symbol Pokémon",I.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,c.MEDIUM_FAST,null,!1,!1,new Y("A","a",I.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("B","b",I.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("C","c",I.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("D","d",I.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("E","e",I.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("F","f",I.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("G","g",I.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("H","h",I.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("I","i",I.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("J","j",I.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("K","k",I.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("L","l",I.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("M","m",I.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("N","n",I.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("O","o",I.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("P","p",I.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("Q","q",I.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("R","r",I.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("S","s",I.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("T","t",I.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("U","u",I.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("V","v",I.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("W","w",I.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("X","x",I.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("Y","y",I.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("Z","z",I.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("!","exclamation",I.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("?","question",I.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0)),new G(e.WOBBUFFET,2,!1,!1,!1,"Patient Pokémon",I.PSYCHIC,null,1.3,28.5,O.SHADOW_TAG,O.NONE,O.TELEPATHY,405,190,33,58,33,58,33,45,50,142,c.MEDIUM_FAST,50,!0),new G(e.GIRAFARIG,2,!1,!1,!1,"Long Neck Pokémon",I.NORMAL,I.PSYCHIC,1.5,41.5,O.INNER_FOCUS,O.EARLY_BIRD,O.SAP_SIPPER,455,70,80,65,90,65,85,60,70,159,c.MEDIUM_FAST,50,!0),new G(e.PINECO,2,!1,!1,!1,"Bagworm Pokémon",I.BUG,null,.6,7.2,O.STURDY,O.NONE,O.OVERCOAT,290,50,65,90,35,35,15,190,70,58,c.MEDIUM_FAST,50,!1),new G(e.FORRETRESS,2,!1,!1,!1,"Bagworm Pokémon",I.BUG,I.STEEL,1.2,125.8,O.STURDY,O.NONE,O.OVERCOAT,465,75,90,140,60,60,40,75,70,163,c.MEDIUM_FAST,50,!1),new G(e.DUNSPARCE,2,!1,!1,!1,"Land Snake Pokémon",I.NORMAL,null,1.5,14,O.SERENE_GRACE,O.RUN_AWAY,O.RATTLED,415,100,70,70,65,65,45,190,50,145,c.MEDIUM_FAST,50,!1),new G(e.GLIGAR,2,!1,!1,!1,"Fly Scorpion Pokémon",I.GROUND,I.FLYING,1.1,64.8,O.HYPER_CUTTER,O.SAND_VEIL,O.IMMUNITY,430,65,75,105,35,65,85,60,70,86,c.MEDIUM_SLOW,50,!0),new G(e.STEELIX,2,!1,!1,!1,"Iron Snake Pokémon",I.STEEL,I.GROUND,9.2,400,O.ROCK_HEAD,O.STURDY,O.SHEER_FORCE,510,75,85,200,55,65,30,25,50,179,c.MEDIUM_FAST,50,!0,!0,new Y("Normal","",I.STEEL,I.GROUND,9.2,400,O.ROCK_HEAD,O.STURDY,O.SHEER_FORCE,510,75,85,200,55,65,30,25,50,179,!0,null,!0),new Y("Mega",Ue.MEGA,I.STEEL,I.GROUND,10.5,740,O.SAND_FORCE,O.SAND_FORCE,O.SAND_FORCE,610,75,125,230,55,95,30,25,50,179,!0)),new G(e.SNUBBULL,2,!1,!1,!1,"Fairy Pokémon",I.FAIRY,null,.6,7.8,O.INTIMIDATE,O.RUN_AWAY,O.RATTLED,300,60,80,50,40,40,30,190,70,60,c.FAST,25,!1),new G(e.GRANBULL,2,!1,!1,!1,"Fairy Pokémon",I.FAIRY,null,1.4,48.7,O.INTIMIDATE,O.QUICK_FEET,O.RATTLED,450,90,120,75,60,60,45,75,70,158,c.FAST,25,!1),new G(e.QWILFISH,2,!1,!1,!1,"Balloon Pokémon",I.WATER,I.POISON,.5,3.9,O.POISON_POINT,O.SWIFT_SWIM,O.INTIMIDATE,440,65,95,85,55,55,85,45,50,88,c.MEDIUM_FAST,50,!1),new G(e.SCIZOR,2,!1,!1,!1,"Pincer Pokémon",I.BUG,I.STEEL,1.8,118,O.SWARM,O.TECHNICIAN,O.LIGHT_METAL,500,70,130,100,55,80,65,25,50,175,c.MEDIUM_FAST,50,!0,!0,new Y("Normal","",I.BUG,I.STEEL,1.8,118,O.SWARM,O.TECHNICIAN,O.LIGHT_METAL,500,70,130,100,55,80,65,25,50,175,!0,null,!0),new Y("Mega",Ue.MEGA,I.BUG,I.STEEL,2,125,O.TECHNICIAN,O.TECHNICIAN,O.TECHNICIAN,600,70,150,140,65,100,75,25,50,175,!0)),new G(e.SHUCKLE,2,!1,!1,!1,"Mold Pokémon",I.BUG,I.ROCK,.6,20.5,O.STURDY,O.GLUTTONY,O.CONTRARY,505,20,10,230,10,230,5,190,50,177,c.MEDIUM_SLOW,50,!1),new G(e.HERACROSS,2,!1,!1,!1,"Single Horn Pokémon",I.BUG,I.FIGHTING,1.5,54,O.SWARM,O.GUTS,O.MOXIE,500,80,125,75,40,95,85,45,50,175,c.SLOW,50,!0,!0,new Y("Normal","",I.BUG,I.FIGHTING,1.5,54,O.SWARM,O.GUTS,O.MOXIE,500,80,125,75,40,95,85,45,50,175,!0,null,!0),new Y("Mega",Ue.MEGA,I.BUG,I.FIGHTING,1.7,62.5,O.SKILL_LINK,O.SKILL_LINK,O.SKILL_LINK,600,80,185,115,40,105,75,45,50,175,!0)),new G(e.SNEASEL,2,!1,!1,!1,"Sharp Claw Pokémon",I.DARK,I.ICE,.9,28,O.INNER_FOCUS,O.KEEN_EYE,O.PICKPOCKET,430,55,95,55,35,75,115,60,35,86,c.MEDIUM_SLOW,50,!0),new G(e.TEDDIURSA,2,!1,!1,!1,"Little Bear Pokémon",I.NORMAL,null,.6,8.8,O.PICKUP,O.QUICK_FEET,O.HONEY_GATHER,330,60,80,50,50,50,40,120,70,66,c.MEDIUM_FAST,50,!1),new G(e.URSARING,2,!1,!1,!1,"Hibernator Pokémon",I.NORMAL,null,1.8,125.8,O.GUTS,O.QUICK_FEET,O.UNNERVE,500,90,130,75,75,75,55,60,70,175,c.MEDIUM_FAST,50,!0),new G(e.SLUGMA,2,!1,!1,!1,"Lava Pokémon",I.FIRE,null,.7,35,O.MAGMA_ARMOR,O.FLAME_BODY,O.WEAK_ARMOR,250,40,40,40,70,40,20,190,70,50,c.MEDIUM_FAST,50,!1),new G(e.MAGCARGO,2,!1,!1,!1,"Lava Pokémon",I.FIRE,I.ROCK,.8,55,O.MAGMA_ARMOR,O.FLAME_BODY,O.WEAK_ARMOR,430,60,50,120,90,80,30,75,70,151,c.MEDIUM_FAST,50,!1),new G(e.SWINUB,2,!1,!1,!1,"Pig Pokémon",I.ICE,I.GROUND,.4,6.5,O.OBLIVIOUS,O.SNOW_CLOAK,O.THICK_FAT,250,50,50,40,30,30,50,225,50,50,c.SLOW,50,!1),new G(e.PILOSWINE,2,!1,!1,!1,"Swine Pokémon",I.ICE,I.GROUND,1.1,55.8,O.OBLIVIOUS,O.SNOW_CLOAK,O.THICK_FAT,450,100,100,80,60,60,50,75,50,158,c.SLOW,50,!0),new G(e.CORSOLA,2,!1,!1,!1,"Coral Pokémon",I.WATER,I.ROCK,.6,5,O.HUSTLE,O.NATURAL_CURE,O.REGENERATOR,410,65,55,95,65,95,35,60,50,144,c.FAST,25,!1),new G(e.REMORAID,2,!1,!1,!1,"Jet Pokémon",I.WATER,null,.6,12,O.HUSTLE,O.SNIPER,O.MOODY,300,35,65,35,65,35,65,190,50,60,c.MEDIUM_FAST,50,!1),new G(e.OCTILLERY,2,!1,!1,!1,"Jet Pokémon",I.WATER,null,.9,28.5,O.SUCTION_CUPS,O.SNIPER,O.MOODY,480,75,105,75,105,75,45,75,50,168,c.MEDIUM_FAST,50,!0),new G(e.DELIBIRD,2,!1,!1,!1,"Delivery Pokémon",I.ICE,I.FLYING,.9,16,O.VITAL_SPIRIT,O.HUSTLE,O.INSOMNIA,330,45,55,45,65,45,75,45,50,116,c.FAST,50,!1),new G(e.MANTINE,2,!1,!1,!1,"Kite Pokémon",I.WATER,I.FLYING,2.1,220,O.SWIFT_SWIM,O.WATER_ABSORB,O.WATER_VEIL,485,85,40,70,80,140,70,25,50,170,c.SLOW,50,!1),new G(e.SKARMORY,2,!1,!1,!1,"Armor Bird Pokémon",I.STEEL,I.FLYING,1.7,50.5,O.KEEN_EYE,O.STURDY,O.WEAK_ARMOR,465,65,80,140,40,70,70,25,50,163,c.SLOW,50,!1),new G(e.HOUNDOUR,2,!1,!1,!1,"Dark Pokémon",I.DARK,I.FIRE,.6,10.8,O.EARLY_BIRD,O.FLASH_FIRE,O.UNNERVE,330,45,60,30,80,50,65,120,35,66,c.SLOW,50,!1),new G(e.HOUNDOOM,2,!1,!1,!1,"Dark Pokémon",I.DARK,I.FIRE,1.4,35,O.EARLY_BIRD,O.FLASH_FIRE,O.UNNERVE,500,75,90,50,110,80,95,45,35,175,c.SLOW,50,!0,!0,new Y("Normal","",I.DARK,I.FIRE,1.4,35,O.EARLY_BIRD,O.FLASH_FIRE,O.UNNERVE,500,75,90,50,110,80,95,45,35,175,!0,null,!0),new Y("Mega",Ue.MEGA,I.DARK,I.FIRE,1.9,49.5,O.SOLAR_POWER,O.SOLAR_POWER,O.SOLAR_POWER,600,75,90,90,140,90,115,45,35,175,!0)),new G(e.KINGDRA,2,!1,!1,!1,"Dragon Pokémon",I.WATER,I.DRAGON,1.8,152,O.SWIFT_SWIM,O.SNIPER,O.DAMP,540,75,95,95,95,95,85,45,50,270,c.MEDIUM_FAST,50,!1),new G(e.PHANPY,2,!1,!1,!1,"Long Nose Pokémon",I.GROUND,null,.5,33.5,O.PICKUP,O.NONE,O.SAND_VEIL,330,90,60,60,40,40,40,120,70,66,c.MEDIUM_FAST,50,!1),new G(e.DONPHAN,2,!1,!1,!1,"Armor Pokémon",I.GROUND,null,1.1,120,O.STURDY,O.NONE,O.SAND_VEIL,500,90,120,120,60,60,50,60,70,175,c.MEDIUM_FAST,50,!0),new G(e.PORYGON2,2,!1,!1,!1,"Virtual Pokémon",I.NORMAL,null,.6,32.5,O.TRACE,O.DOWNLOAD,O.ANALYTIC,515,85,80,90,105,95,60,45,50,180,c.MEDIUM_FAST,null,!1),new G(e.STANTLER,2,!1,!1,!1,"Big Horn Pokémon",I.NORMAL,null,1.4,71.2,O.INTIMIDATE,O.FRISK,O.SAP_SIPPER,465,73,95,62,85,65,85,45,70,163,c.SLOW,50,!1),new G(e.SMEARGLE,2,!1,!1,!1,"Painter Pokémon",I.NORMAL,null,1.2,58,O.OWN_TEMPO,O.TECHNICIAN,O.MOODY,250,55,20,35,20,45,75,45,70,88,c.FAST,50,!1),new G(e.TYROGUE,2,!1,!1,!1,"Scuffle Pokémon",I.FIGHTING,null,.7,21,O.GUTS,O.STEADFAST,O.VITAL_SPIRIT,210,35,35,35,35,35,35,75,50,42,c.MEDIUM_FAST,100,!1),new G(e.HITMONTOP,2,!1,!1,!1,"Handstand Pokémon",I.FIGHTING,null,1.4,48,O.INTIMIDATE,O.TECHNICIAN,O.STEADFAST,455,50,95,95,35,110,70,45,50,159,c.MEDIUM_FAST,100,!1),new G(e.SMOOCHUM,2,!1,!1,!1,"Kiss Pokémon",I.ICE,I.PSYCHIC,.4,6,O.OBLIVIOUS,O.FOREWARN,O.HYDRATION,305,45,30,15,85,65,65,45,50,61,c.MEDIUM_FAST,0,!1),new G(e.ELEKID,2,!1,!1,!1,"Electric Pokémon",I.ELECTRIC,null,.6,23.5,O.STATIC,O.NONE,O.VITAL_SPIRIT,360,45,63,37,65,55,95,45,50,72,c.MEDIUM_FAST,75,!1),new G(e.MAGBY,2,!1,!1,!1,"Live Coal Pokémon",I.FIRE,null,.7,21.4,O.FLAME_BODY,O.NONE,O.VITAL_SPIRIT,365,45,75,37,70,55,83,45,50,73,c.MEDIUM_FAST,75,!1),new G(e.MILTANK,2,!1,!1,!1,"Milk Cow Pokémon",I.NORMAL,null,1.2,75.5,O.THICK_FAT,O.SCRAPPY,O.SAP_SIPPER,490,95,80,105,40,70,100,45,50,172,c.SLOW,0,!1),new G(e.BLISSEY,2,!1,!1,!1,"Happiness Pokémon",I.NORMAL,null,1.5,46.8,O.NATURAL_CURE,O.SERENE_GRACE,O.HEALER,540,255,10,10,75,135,55,30,140,635,c.FAST,0,!1),new G(e.RAIKOU,2,!0,!1,!1,"Thunder Pokémon",I.ELECTRIC,null,1.9,178,O.PRESSURE,O.NONE,O.INNER_FOCUS,580,90,85,75,115,100,115,3,35,290,c.SLOW,null,!1),new G(e.ENTEI,2,!0,!1,!1,"Volcano Pokémon",I.FIRE,null,2.1,198,O.PRESSURE,O.NONE,O.INNER_FOCUS,580,115,115,85,90,75,100,3,35,290,c.SLOW,null,!1),new G(e.SUICUNE,2,!0,!1,!1,"Aurora Pokémon",I.WATER,null,2,187,O.PRESSURE,O.NONE,O.INNER_FOCUS,580,100,75,115,90,115,85,3,35,290,c.SLOW,null,!1),new G(e.LARVITAR,2,!1,!1,!1,"Rock Skin Pokémon",I.ROCK,I.GROUND,.6,72,O.GUTS,O.NONE,O.SAND_VEIL,300,50,64,50,45,50,41,45,35,60,c.SLOW,50,!1),new G(e.PUPITAR,2,!1,!1,!1,"Hard Shell Pokémon",I.ROCK,I.GROUND,1.2,152,O.SHED_SKIN,O.NONE,O.SHED_SKIN,410,70,84,70,65,70,51,45,35,144,c.SLOW,50,!1),new G(e.TYRANITAR,2,!1,!1,!1,"Armor Pokémon",I.ROCK,I.DARK,2,202,O.SAND_STREAM,O.NONE,O.UNNERVE,600,100,134,110,95,100,61,45,35,300,c.SLOW,50,!1,!0,new Y("Normal","",I.ROCK,I.DARK,2,202,O.SAND_STREAM,O.NONE,O.UNNERVE,600,100,134,110,95,100,61,45,35,300,!1,null,!0),new Y("Mega",Ue.MEGA,I.ROCK,I.DARK,2.5,255,O.SAND_STREAM,O.NONE,O.SAND_STREAM,700,100,164,150,95,120,71,45,35,300)),new G(e.LUGIA,2,!1,!0,!1,"Diving Pokémon",I.PSYCHIC,I.FLYING,5.2,216,O.PRESSURE,O.NONE,O.MULTISCALE,680,106,90,130,90,154,110,3,0,340,c.SLOW,null,!1),new G(e.HO_OH,2,!1,!0,!1,"Rainbow Pokémon",I.FIRE,I.FLYING,3.8,199,O.PRESSURE,O.NONE,O.REGENERATOR,680,106,130,90,110,154,90,3,0,340,c.SLOW,null,!1),new G(e.CELEBI,2,!1,!1,!0,"Time Travel Pokémon",I.PSYCHIC,I.GRASS,.6,5,O.NATURAL_CURE,O.NONE,O.NONE,600,100,100,100,100,100,100,45,100,300,c.MEDIUM_SLOW,null,!1),new G(e.TREECKO,3,!1,!1,!1,"Wood Gecko Pokémon",I.GRASS,null,.5,5,O.OVERGROW,O.NONE,O.UNBURDEN,310,40,45,35,65,55,70,45,50,62,c.MEDIUM_SLOW,87.5,!1),new G(e.GROVYLE,3,!1,!1,!1,"Wood Gecko Pokémon",I.GRASS,null,.9,21.6,O.OVERGROW,O.NONE,O.UNBURDEN,405,50,65,45,85,65,95,45,50,142,c.MEDIUM_SLOW,87.5,!1),new G(e.SCEPTILE,3,!1,!1,!1,"Forest Pokémon",I.GRASS,null,1.7,52.2,O.OVERGROW,O.NONE,O.UNBURDEN,530,70,85,65,105,85,120,45,50,265,c.MEDIUM_SLOW,87.5,!1,!0,new Y("Normal","",I.GRASS,null,1.7,52.2,O.OVERGROW,O.NONE,O.UNBURDEN,530,70,85,65,105,85,120,45,50,265,!1,null,!0),new Y("Mega",Ue.MEGA,I.GRASS,I.DRAGON,1.9,55.2,O.LIGHTNING_ROD,O.NONE,O.LIGHTNING_ROD,630,70,110,75,145,85,145,45,50,265)),new G(e.TORCHIC,3,!1,!1,!1,"Chick Pokémon",I.FIRE,null,.4,2.5,O.BLAZE,O.NONE,O.SPEED_BOOST,310,45,60,40,70,50,45,45,50,62,c.MEDIUM_SLOW,87.5,!0),new G(e.COMBUSKEN,3,!1,!1,!1,"Young Fowl Pokémon",I.FIRE,I.FIGHTING,.9,19.5,O.BLAZE,O.NONE,O.SPEED_BOOST,405,60,85,60,85,60,55,45,50,142,c.MEDIUM_SLOW,87.5,!0),new G(e.BLAZIKEN,3,!1,!1,!1,"Blaze Pokémon",I.FIRE,I.FIGHTING,1.9,52,O.BLAZE,O.NONE,O.SPEED_BOOST,530,80,120,70,110,70,80,45,50,265,c.MEDIUM_SLOW,87.5,!0,!0,new Y("Normal","",I.FIRE,I.FIGHTING,1.9,52,O.BLAZE,O.NONE,O.SPEED_BOOST,530,80,120,70,110,70,80,45,50,265,!0,null,!0),new Y("Mega",Ue.MEGA,I.FIRE,I.FIGHTING,1.9,52,O.SPEED_BOOST,O.NONE,O.SPEED_BOOST,630,80,160,80,130,80,100,45,50,265,!0)),new G(e.MUDKIP,3,!1,!1,!1,"Mud Fish Pokémon",I.WATER,null,.4,7.6,O.TORRENT,O.NONE,O.DAMP,310,50,70,50,50,50,40,45,50,62,c.MEDIUM_SLOW,87.5,!1),new G(e.MARSHTOMP,3,!1,!1,!1,"Mud Fish Pokémon",I.WATER,I.GROUND,.7,28,O.TORRENT,O.NONE,O.DAMP,405,70,85,70,60,70,50,45,50,142,c.MEDIUM_SLOW,87.5,!1),new G(e.SWAMPERT,3,!1,!1,!1,"Mud Fish Pokémon",I.WATER,I.GROUND,1.5,81.9,O.TORRENT,O.NONE,O.DAMP,535,100,110,90,85,90,60,45,50,268,c.MEDIUM_SLOW,87.5,!1,!0,new Y("Normal","",I.WATER,I.GROUND,1.5,81.9,O.TORRENT,O.NONE,O.DAMP,535,100,110,90,85,90,60,45,50,268,!1,null,!0),new Y("Mega",Ue.MEGA,I.WATER,I.GROUND,1.9,102,O.SWIFT_SWIM,O.NONE,O.SWIFT_SWIM,635,100,150,110,95,110,70,45,50,268)),new G(e.POOCHYENA,3,!1,!1,!1,"Bite Pokémon",I.DARK,null,.5,13.6,O.RUN_AWAY,O.QUICK_FEET,O.RATTLED,220,35,55,35,30,30,35,255,70,56,c.MEDIUM_FAST,50,!1),new G(e.MIGHTYENA,3,!1,!1,!1,"Bite Pokémon",I.DARK,null,1,37,O.INTIMIDATE,O.QUICK_FEET,O.MOXIE,420,70,90,70,60,60,70,127,70,147,c.MEDIUM_FAST,50,!1),new G(e.ZIGZAGOON,3,!1,!1,!1,"Tiny Raccoon Pokémon",I.NORMAL,null,.4,17.5,O.PICKUP,O.GLUTTONY,O.QUICK_FEET,240,38,30,41,30,41,60,255,50,56,c.MEDIUM_FAST,50,!1),new G(e.LINOONE,3,!1,!1,!1,"Rushing Pokémon",I.NORMAL,null,.5,32.5,O.PICKUP,O.GLUTTONY,O.QUICK_FEET,420,78,70,61,50,61,100,90,50,147,c.MEDIUM_FAST,50,!1),new G(e.WURMPLE,3,!1,!1,!1,"Worm Pokémon",I.BUG,null,.3,3.6,O.SHIELD_DUST,O.NONE,O.RUN_AWAY,195,45,45,35,20,30,20,255,70,56,c.MEDIUM_FAST,50,!1),new G(e.SILCOON,3,!1,!1,!1,"Cocoon Pokémon",I.BUG,null,.6,10,O.SHED_SKIN,O.NONE,O.SHED_SKIN,205,50,35,55,25,25,15,120,70,72,c.MEDIUM_FAST,50,!1),new G(e.BEAUTIFLY,3,!1,!1,!1,"Butterfly Pokémon",I.BUG,I.FLYING,1,28.4,O.SWARM,O.NONE,O.RIVALRY,395,60,70,50,100,50,65,45,70,178,c.MEDIUM_FAST,50,!0),new G(e.CASCOON,3,!1,!1,!1,"Cocoon Pokémon",I.BUG,null,.7,11.5,O.SHED_SKIN,O.NONE,O.SHED_SKIN,205,50,35,55,25,25,15,120,70,72,c.MEDIUM_FAST,50,!1),new G(e.DUSTOX,3,!1,!1,!1,"Poison Moth Pokémon",I.BUG,I.POISON,1.2,31.6,O.SHIELD_DUST,O.NONE,O.COMPOUND_EYES,385,60,50,70,50,90,65,45,70,173,c.MEDIUM_FAST,50,!0),new G(e.LOTAD,3,!1,!1,!1,"Water Weed Pokémon",I.WATER,I.GRASS,.5,2.6,O.SWIFT_SWIM,O.RAIN_DISH,O.OWN_TEMPO,220,40,30,30,40,50,30,255,50,44,c.MEDIUM_SLOW,50,!1),new G(e.LOMBRE,3,!1,!1,!1,"Jolly Pokémon",I.WATER,I.GRASS,1.2,32.5,O.SWIFT_SWIM,O.RAIN_DISH,O.OWN_TEMPO,340,60,50,50,60,70,50,120,50,119,c.MEDIUM_SLOW,50,!1),new G(e.LUDICOLO,3,!1,!1,!1,"Carefree Pokémon",I.WATER,I.GRASS,1.5,55,O.SWIFT_SWIM,O.RAIN_DISH,O.OWN_TEMPO,480,80,70,70,90,100,70,45,50,240,c.MEDIUM_SLOW,50,!0),new G(e.SEEDOT,3,!1,!1,!1,"Acorn Pokémon",I.GRASS,null,.5,4,O.CHLOROPHYLL,O.EARLY_BIRD,O.PICKPOCKET,220,40,40,50,30,30,30,255,50,44,c.MEDIUM_SLOW,50,!1),new G(e.NUZLEAF,3,!1,!1,!1,"Wily Pokémon",I.GRASS,I.DARK,1,28,O.CHLOROPHYLL,O.EARLY_BIRD,O.PICKPOCKET,340,70,70,40,60,40,60,120,50,119,c.MEDIUM_SLOW,50,!0),new G(e.SHIFTRY,3,!1,!1,!1,"Wicked Pokémon",I.GRASS,I.DARK,1.3,59.6,O.CHLOROPHYLL,O.WIND_RIDER,O.PICKPOCKET,480,90,100,60,90,60,80,45,50,240,c.MEDIUM_SLOW,50,!0),new G(e.TAILLOW,3,!1,!1,!1,"Tiny Swallow Pokémon",I.NORMAL,I.FLYING,.3,2.3,O.GUTS,O.NONE,O.SCRAPPY,270,40,55,30,30,30,85,200,70,54,c.MEDIUM_SLOW,50,!1),new G(e.SWELLOW,3,!1,!1,!1,"Swallow Pokémon",I.NORMAL,I.FLYING,.7,19.8,O.GUTS,O.NONE,O.SCRAPPY,455,60,85,60,75,50,125,45,70,159,c.MEDIUM_SLOW,50,!1),new G(e.WINGULL,3,!1,!1,!1,"Seagull Pokémon",I.WATER,I.FLYING,.6,9.5,O.KEEN_EYE,O.HYDRATION,O.RAIN_DISH,270,40,30,30,55,30,85,190,50,54,c.MEDIUM_FAST,50,!1),new G(e.PELIPPER,3,!1,!1,!1,"Water Bird Pokémon",I.WATER,I.FLYING,1.2,28,O.KEEN_EYE,O.DRIZZLE,O.RAIN_DISH,440,60,50,100,95,70,65,45,50,154,c.MEDIUM_FAST,50,!1),new G(e.RALTS,3,!1,!1,!1,"Feeling Pokémon",I.PSYCHIC,I.FAIRY,.4,6.6,O.SYNCHRONIZE,O.TRACE,O.TELEPATHY,198,28,25,25,45,35,40,235,35,40,c.SLOW,50,!1),new G(e.KIRLIA,3,!1,!1,!1,"Emotion Pokémon",I.PSYCHIC,I.FAIRY,.8,20.2,O.SYNCHRONIZE,O.TRACE,O.TELEPATHY,278,38,35,35,65,55,50,120,35,97,c.SLOW,50,!1),new G(e.GARDEVOIR,3,!1,!1,!1,"Embrace Pokémon",I.PSYCHIC,I.FAIRY,1.6,48.4,O.SYNCHRONIZE,O.TRACE,O.TELEPATHY,518,68,65,65,125,115,80,45,35,259,c.SLOW,50,!1,!0,new Y("Normal","",I.PSYCHIC,I.FAIRY,1.6,48.4,O.SYNCHRONIZE,O.TRACE,O.TELEPATHY,518,68,65,65,125,115,80,45,35,259,!1,null,!0),new Y("Mega",Ue.MEGA,I.PSYCHIC,I.FAIRY,1.6,48.4,O.PIXILATE,O.PIXILATE,O.PIXILATE,618,68,85,65,165,135,100,45,35,259)),new G(e.SURSKIT,3,!1,!1,!1,"Pond Skater Pokémon",I.BUG,I.WATER,.5,1.7,O.SWIFT_SWIM,O.NONE,O.RAIN_DISH,269,40,30,32,50,52,65,200,70,54,c.MEDIUM_FAST,50,!1),new G(e.MASQUERAIN,3,!1,!1,!1,"Eyeball Pokémon",I.BUG,I.FLYING,.8,3.6,O.INTIMIDATE,O.NONE,O.UNNERVE,454,70,60,62,100,82,80,75,70,159,c.MEDIUM_FAST,50,!1),new G(e.SHROOMISH,3,!1,!1,!1,"Mushroom Pokémon",I.GRASS,null,.4,4.5,O.EFFECT_SPORE,O.POISON_HEAL,O.QUICK_FEET,295,60,40,60,40,60,35,255,70,59,c.FLUCTUATING,50,!1),new G(e.BRELOOM,3,!1,!1,!1,"Mushroom Pokémon",I.GRASS,I.FIGHTING,1.2,39.2,O.EFFECT_SPORE,O.POISON_HEAL,O.TECHNICIAN,460,60,130,80,60,60,70,90,70,161,c.FLUCTUATING,50,!1),new G(e.SLAKOTH,3,!1,!1,!1,"Slacker Pokémon",I.NORMAL,null,.8,24,O.TRUANT,O.NONE,O.STALL,280,60,60,60,35,35,30,255,70,56,c.SLOW,50,!1),new G(e.VIGOROTH,3,!1,!1,!1,"Wild Monkey Pokémon",I.NORMAL,null,1.4,46.5,O.VITAL_SPIRIT,O.NONE,O.INSOMNIA,440,80,80,80,55,55,90,120,70,154,c.SLOW,50,!1),new G(e.SLAKING,3,!1,!1,!1,"Lazy Pokémon",I.NORMAL,null,2,130.5,O.TRUANT,O.NONE,O.STALL,670,150,160,100,95,65,100,45,70,252,c.SLOW,50,!1),new G(e.NINCADA,3,!1,!1,!1,"Trainee Pokémon",I.BUG,I.GROUND,.5,5.5,O.COMPOUND_EYES,O.NONE,O.RUN_AWAY,266,31,45,90,30,30,40,255,50,53,c.ERRATIC,50,!1),new G(e.NINJASK,3,!1,!1,!1,"Ninja Pokémon",I.BUG,I.FLYING,.8,12,O.SPEED_BOOST,O.NONE,O.INFILTRATOR,456,61,90,45,50,50,160,120,50,160,c.ERRATIC,50,!1),new G(e.SHEDINJA,3,!1,!1,!1,"Shed Pokémon",I.BUG,I.GHOST,.8,1.2,O.WONDER_GUARD,O.NONE,O.NONE,236,1,90,45,30,30,40,45,50,83,c.ERRATIC,null,!1),new G(e.WHISMUR,3,!1,!1,!1,"Whisper Pokémon",I.NORMAL,null,.6,16.3,O.SOUNDPROOF,O.NONE,O.RATTLED,240,64,51,23,51,23,28,190,50,48,c.MEDIUM_SLOW,50,!1),new G(e.LOUDRED,3,!1,!1,!1,"Big Voice Pokémon",I.NORMAL,null,1,40.5,O.SOUNDPROOF,O.NONE,O.SCRAPPY,360,84,71,43,71,43,48,120,50,126,c.MEDIUM_SLOW,50,!1),new G(e.EXPLOUD,3,!1,!1,!1,"Loud Noise Pokémon",I.NORMAL,null,1.5,84,O.SOUNDPROOF,O.NONE,O.SCRAPPY,490,104,91,63,91,73,68,45,50,245,c.MEDIUM_SLOW,50,!1),new G(e.MAKUHITA,3,!1,!1,!1,"Guts Pokémon",I.FIGHTING,null,1,86.4,O.THICK_FAT,O.GUTS,O.SHEER_FORCE,237,72,60,30,20,30,25,180,70,47,c.FLUCTUATING,75,!1),new G(e.HARIYAMA,3,!1,!1,!1,"Arm Thrust Pokémon",I.FIGHTING,null,2.3,253.8,O.THICK_FAT,O.GUTS,O.SHEER_FORCE,474,144,120,60,40,60,50,200,70,166,c.FLUCTUATING,75,!1),new G(e.AZURILL,3,!1,!1,!1,"Polka Dot Pokémon",I.NORMAL,I.FAIRY,.2,2,O.THICK_FAT,O.HUGE_POWER,O.SAP_SIPPER,190,50,20,40,20,40,20,150,50,38,c.FAST,25,!1),new G(e.NOSEPASS,3,!1,!1,!1,"Compass Pokémon",I.ROCK,null,1,97,O.STURDY,O.MAGNET_PULL,O.SAND_FORCE,375,30,45,135,45,90,30,255,70,75,c.MEDIUM_FAST,50,!1),new G(e.SKITTY,3,!1,!1,!1,"Kitten Pokémon",I.NORMAL,null,.6,11,O.CUTE_CHARM,O.NORMALIZE,O.WONDER_SKIN,260,50,45,45,35,35,50,255,70,52,c.FAST,25,!1),new G(e.DELCATTY,3,!1,!1,!1,"Prim Pokémon",I.NORMAL,null,1.1,32.6,O.CUTE_CHARM,O.NORMALIZE,O.WONDER_SKIN,400,70,65,65,55,55,90,60,70,140,c.FAST,25,!1),new G(e.SABLEYE,3,!1,!1,!1,"Darkness Pokémon",I.DARK,I.GHOST,.5,11,O.KEEN_EYE,O.STALL,O.PRANKSTER,380,50,75,75,65,65,50,45,35,133,c.MEDIUM_SLOW,50,!1,!0,new Y("Normal","",I.DARK,I.GHOST,.5,11,O.KEEN_EYE,O.STALL,O.PRANKSTER,380,50,75,75,65,65,50,45,35,133,!1,null,!0),new Y("Mega",Ue.MEGA,I.DARK,I.GHOST,.5,161,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,480,50,85,125,85,115,20,45,35,133)),new G(e.MAWILE,3,!1,!1,!1,"Deceiver Pokémon",I.STEEL,I.FAIRY,.6,11.5,O.HYPER_CUTTER,O.INTIMIDATE,O.SHEER_FORCE,380,50,85,85,55,55,50,45,50,133,c.FAST,50,!1,!0,new Y("Normal","",I.STEEL,I.FAIRY,.6,11.5,O.HYPER_CUTTER,O.INTIMIDATE,O.SHEER_FORCE,380,50,85,85,55,55,50,45,50,133,!1,null,!0),new Y("Mega",Ue.MEGA,I.STEEL,I.FAIRY,1,23.5,O.HUGE_POWER,O.HUGE_POWER,O.HUGE_POWER,480,50,105,125,55,95,50,45,50,133)),new G(e.ARON,3,!1,!1,!1,"Iron Armor Pokémon",I.STEEL,I.ROCK,.4,60,O.STURDY,O.ROCK_HEAD,O.HEAVY_METAL,330,50,70,100,40,40,30,180,35,66,c.SLOW,50,!1),new G(e.LAIRON,3,!1,!1,!1,"Iron Armor Pokémon",I.STEEL,I.ROCK,.9,120,O.STURDY,O.ROCK_HEAD,O.HEAVY_METAL,430,60,90,140,50,50,40,90,35,151,c.SLOW,50,!1),new G(e.AGGRON,3,!1,!1,!1,"Iron Armor Pokémon",I.STEEL,I.ROCK,2.1,360,O.STURDY,O.ROCK_HEAD,O.HEAVY_METAL,530,70,110,180,60,60,50,45,35,265,c.SLOW,50,!1,!0,new Y("Normal","",I.STEEL,I.ROCK,2.1,360,O.STURDY,O.ROCK_HEAD,O.HEAVY_METAL,530,70,110,180,60,60,50,45,35,265,!1,null,!0),new Y("Mega",Ue.MEGA,I.STEEL,null,2.2,395,O.FILTER,O.FILTER,O.FILTER,630,70,140,230,60,80,50,45,35,265)),new G(e.MEDITITE,3,!1,!1,!1,"Meditate Pokémon",I.FIGHTING,I.PSYCHIC,.6,11.2,O.PURE_POWER,O.NONE,O.TELEPATHY,280,30,40,55,40,55,60,180,70,56,c.MEDIUM_FAST,50,!0),new G(e.MEDICHAM,3,!1,!1,!1,"Meditate Pokémon",I.FIGHTING,I.PSYCHIC,1.3,31.5,O.PURE_POWER,O.NONE,O.TELEPATHY,410,60,60,75,60,75,80,90,70,144,c.MEDIUM_FAST,50,!0,!0,new Y("Normal","",I.FIGHTING,I.PSYCHIC,1.3,31.5,O.PURE_POWER,O.NONE,O.TELEPATHY,410,60,60,75,60,75,80,90,70,144,!0,null,!0),new Y("Mega",Ue.MEGA,I.FIGHTING,I.PSYCHIC,1.3,31.5,O.PURE_POWER,O.NONE,O.PURE_POWER,510,60,100,85,80,85,100,90,70,144,!0)),new G(e.ELECTRIKE,3,!1,!1,!1,"Lightning Pokémon",I.ELECTRIC,null,.6,15.2,O.STATIC,O.LIGHTNING_ROD,O.MINUS,295,40,45,40,65,40,65,120,50,59,c.SLOW,50,!1),new G(e.MANECTRIC,3,!1,!1,!1,"Discharge Pokémon",I.ELECTRIC,null,1.5,40.2,O.STATIC,O.LIGHTNING_ROD,O.MINUS,475,70,75,60,105,60,105,45,50,166,c.SLOW,50,!1,!0,new Y("Normal","",I.ELECTRIC,null,1.5,40.2,O.STATIC,O.LIGHTNING_ROD,O.MINUS,475,70,75,60,105,60,105,45,50,166,!1,null,!0),new Y("Mega",Ue.MEGA,I.ELECTRIC,null,1.8,44,O.INTIMIDATE,O.INTIMIDATE,O.INTIMIDATE,575,70,75,80,135,80,135,45,50,166)),new G(e.PLUSLE,3,!1,!1,!1,"Cheering Pokémon",I.ELECTRIC,null,.4,4.2,O.PLUS,O.NONE,O.LIGHTNING_ROD,405,60,50,40,85,75,95,200,70,142,c.MEDIUM_FAST,50,!1),new G(e.MINUN,3,!1,!1,!1,"Cheering Pokémon",I.ELECTRIC,null,.4,4.2,O.MINUS,O.NONE,O.VOLT_ABSORB,405,60,40,50,75,85,95,200,70,142,c.MEDIUM_FAST,50,!1),new G(e.VOLBEAT,3,!1,!1,!1,"Firefly Pokémon",I.BUG,null,.7,17.7,O.ILLUMINATE,O.SWARM,O.PRANKSTER,430,65,73,75,47,85,85,150,70,151,c.ERRATIC,100,!1),new G(e.ILLUMISE,3,!1,!1,!1,"Firefly Pokémon",I.BUG,null,.6,17.7,O.OBLIVIOUS,O.TINTED_LENS,O.PRANKSTER,430,65,47,75,73,85,85,150,70,151,c.FLUCTUATING,0,!1),new G(e.ROSELIA,3,!1,!1,!1,"Thorn Pokémon",I.GRASS,I.POISON,.3,2,O.NATURAL_CURE,O.POISON_POINT,O.LEAF_GUARD,400,50,60,45,100,80,65,150,50,140,c.MEDIUM_SLOW,50,!0),new G(e.GULPIN,3,!1,!1,!1,"Stomach Pokémon",I.POISON,null,.4,10.3,O.LIQUID_OOZE,O.STICKY_HOLD,O.GLUTTONY,302,70,43,53,43,53,40,225,70,60,c.FLUCTUATING,50,!0),new G(e.SWALOT,3,!1,!1,!1,"Poison Bag Pokémon",I.POISON,null,1.7,80,O.LIQUID_OOZE,O.STICKY_HOLD,O.GLUTTONY,467,100,73,83,73,83,55,75,70,163,c.FLUCTUATING,50,!0),new G(e.CARVANHA,3,!1,!1,!1,"Savage Pokémon",I.WATER,I.DARK,.8,20.8,O.ROUGH_SKIN,O.NONE,O.SPEED_BOOST,305,45,90,20,65,20,65,225,35,61,c.SLOW,50,!1),new G(e.SHARPEDO,3,!1,!1,!1,"Brutal Pokémon",I.WATER,I.DARK,1.8,88.8,O.ROUGH_SKIN,O.NONE,O.SPEED_BOOST,460,70,120,40,95,40,95,60,35,161,c.SLOW,50,!1,!0,new Y("Normal","",I.WATER,I.DARK,1.8,88.8,O.ROUGH_SKIN,O.NONE,O.SPEED_BOOST,460,70,120,40,95,40,95,60,35,161,!1,null,!0),new Y("Mega",Ue.MEGA,I.WATER,I.DARK,2.5,130.3,O.STRONG_JAW,O.NONE,O.STRONG_JAW,560,70,140,70,110,65,105,60,35,161)),new G(e.WAILMER,3,!1,!1,!1,"Ball Whale Pokémon",I.WATER,null,2,130,O.WATER_VEIL,O.OBLIVIOUS,O.PRESSURE,400,130,70,35,70,35,60,125,50,80,c.FLUCTUATING,50,!1),new G(e.WAILORD,3,!1,!1,!1,"Float Whale Pokémon",I.WATER,null,14.5,398,O.WATER_VEIL,O.OBLIVIOUS,O.PRESSURE,500,170,90,45,90,45,60,60,50,175,c.FLUCTUATING,50,!1),new G(e.NUMEL,3,!1,!1,!1,"Numb Pokémon",I.FIRE,I.GROUND,.7,24,O.OBLIVIOUS,O.SIMPLE,O.OWN_TEMPO,305,60,60,40,65,45,35,255,70,61,c.MEDIUM_FAST,50,!0),new G(e.CAMERUPT,3,!1,!1,!1,"Eruption Pokémon",I.FIRE,I.GROUND,1.9,220,O.MAGMA_ARMOR,O.SOLID_ROCK,O.ANGER_POINT,460,70,100,70,105,75,40,150,70,161,c.MEDIUM_FAST,50,!0,!0,new Y("Normal","",I.FIRE,I.GROUND,1.9,220,O.MAGMA_ARMOR,O.SOLID_ROCK,O.ANGER_POINT,460,70,100,70,105,75,40,150,70,161,!0,null,!0),new Y("Mega",Ue.MEGA,I.FIRE,I.GROUND,2.5,320.5,O.SHEER_FORCE,O.SHEER_FORCE,O.SHEER_FORCE,560,70,120,100,145,105,20,150,70,161)),new G(e.TORKOAL,3,!1,!1,!1,"Coal Pokémon",I.FIRE,null,.5,80.4,O.WHITE_SMOKE,O.DROUGHT,O.SHELL_ARMOR,470,70,85,140,85,70,20,90,50,165,c.MEDIUM_FAST,50,!1),new G(e.SPOINK,3,!1,!1,!1,"Bounce Pokémon",I.PSYCHIC,null,.7,30.6,O.THICK_FAT,O.OWN_TEMPO,O.GLUTTONY,330,60,25,35,70,80,60,255,70,66,c.FAST,50,!1),new G(e.GRUMPIG,3,!1,!1,!1,"Manipulate Pokémon",I.PSYCHIC,null,.9,71.5,O.THICK_FAT,O.OWN_TEMPO,O.GLUTTONY,470,80,45,65,90,110,80,60,70,165,c.FAST,50,!1),new G(e.SPINDA,3,!1,!1,!1,"Spot Panda Pokémon",I.NORMAL,null,1.1,5,O.OWN_TEMPO,O.TANGLED_FEET,O.CONTRARY,360,60,60,60,60,60,60,255,70,126,c.FAST,50,!1),new G(e.TRAPINCH,3,!1,!1,!1,"Ant Pit Pokémon",I.GROUND,null,.7,15,O.HYPER_CUTTER,O.ARENA_TRAP,O.SHEER_FORCE,290,45,100,45,45,45,10,255,50,58,c.MEDIUM_SLOW,50,!1),new G(e.VIBRAVA,3,!1,!1,!1,"Vibration Pokémon",I.GROUND,I.DRAGON,1.1,15.3,O.LEVITATE,O.NONE,O.NONE,340,50,70,50,50,50,70,120,50,119,c.MEDIUM_SLOW,50,!1),new G(e.FLYGON,3,!1,!1,!1,"Mystic Pokémon",I.GROUND,I.DRAGON,2,82,O.LEVITATE,O.NONE,O.NONE,520,80,100,80,80,80,100,45,50,260,c.MEDIUM_SLOW,50,!1),new G(e.CACNEA,3,!1,!1,!1,"Cactus Pokémon",I.GRASS,null,.4,51.3,O.SAND_VEIL,O.NONE,O.WATER_ABSORB,335,50,85,40,85,40,35,190,35,67,c.MEDIUM_SLOW,50,!1),new G(e.CACTURNE,3,!1,!1,!1,"Scarecrow Pokémon",I.GRASS,I.DARK,1.3,77.4,O.SAND_VEIL,O.NONE,O.WATER_ABSORB,475,70,115,60,115,60,55,60,35,166,c.MEDIUM_SLOW,50,!0),new G(e.SWABLU,3,!1,!1,!1,"Cotton Bird Pokémon",I.NORMAL,I.FLYING,.4,1.2,O.NATURAL_CURE,O.NONE,O.CLOUD_NINE,310,45,40,60,40,75,50,255,50,62,c.ERRATIC,50,!1),new G(e.ALTARIA,3,!1,!1,!1,"Humming Pokémon",I.DRAGON,I.FLYING,1.1,20.6,O.NATURAL_CURE,O.NONE,O.CLOUD_NINE,490,75,70,90,70,105,80,45,50,172,c.ERRATIC,50,!1,!0,new Y("Normal","",I.DRAGON,I.FLYING,1.1,20.6,O.NATURAL_CURE,O.NONE,O.CLOUD_NINE,490,75,70,90,70,105,80,45,50,172,!1,null,!0),new Y("Mega",Ue.MEGA,I.DRAGON,I.FAIRY,1.5,20.6,O.PIXILATE,O.NONE,O.PIXILATE,590,75,110,110,110,105,80,45,50,172)),new G(e.ZANGOOSE,3,!1,!1,!1,"Cat Ferret Pokémon",I.NORMAL,null,1.3,40.3,O.IMMUNITY,O.NONE,O.TOXIC_BOOST,458,73,115,60,60,60,90,90,70,160,c.ERRATIC,50,!1),new G(e.SEVIPER,3,!1,!1,!1,"Fang Snake Pokémon",I.POISON,null,2.7,52.5,O.SHED_SKIN,O.NONE,O.INFILTRATOR,458,73,100,60,100,60,65,90,70,160,c.FLUCTUATING,50,!1),new G(e.LUNATONE,3,!1,!1,!1,"Meteorite Pokémon",I.ROCK,I.PSYCHIC,1,168,O.LEVITATE,O.NONE,O.NONE,460,90,55,65,95,85,70,45,50,161,c.FAST,null,!1),new G(e.SOLROCK,3,!1,!1,!1,"Meteorite Pokémon",I.ROCK,I.PSYCHIC,1.2,154,O.LEVITATE,O.NONE,O.NONE,460,90,95,85,55,65,70,45,50,161,c.FAST,null,!1),new G(e.BARBOACH,3,!1,!1,!1,"Whiskers Pokémon",I.WATER,I.GROUND,.4,1.9,O.OBLIVIOUS,O.ANTICIPATION,O.HYDRATION,288,50,48,43,46,41,60,190,50,58,c.MEDIUM_FAST,50,!1),new G(e.WHISCASH,3,!1,!1,!1,"Whiskers Pokémon",I.WATER,I.GROUND,.9,23.6,O.OBLIVIOUS,O.ANTICIPATION,O.HYDRATION,468,110,78,73,76,71,60,75,50,164,c.MEDIUM_FAST,50,!1),new G(e.CORPHISH,3,!1,!1,!1,"Ruffian Pokémon",I.WATER,null,.6,11.5,O.HYPER_CUTTER,O.SHELL_ARMOR,O.ADAPTABILITY,308,43,80,65,50,35,35,205,50,62,c.FLUCTUATING,50,!1),new G(e.CRAWDAUNT,3,!1,!1,!1,"Rogue Pokémon",I.WATER,I.DARK,1.1,32.8,O.HYPER_CUTTER,O.SHELL_ARMOR,O.ADAPTABILITY,468,63,120,85,90,55,55,155,50,164,c.FLUCTUATING,50,!1),new G(e.BALTOY,3,!1,!1,!1,"Clay Doll Pokémon",I.GROUND,I.PSYCHIC,.5,21.5,O.LEVITATE,O.NONE,O.NONE,300,40,40,55,40,70,55,255,50,60,c.MEDIUM_FAST,null,!1),new G(e.CLAYDOL,3,!1,!1,!1,"Clay Doll Pokémon",I.GROUND,I.PSYCHIC,1.5,108,O.LEVITATE,O.NONE,O.NONE,500,60,70,105,70,120,75,90,50,175,c.MEDIUM_FAST,null,!1),new G(e.LILEEP,3,!1,!1,!1,"Sea Lily Pokémon",I.ROCK,I.GRASS,1,23.8,O.SUCTION_CUPS,O.NONE,O.STORM_DRAIN,355,66,41,77,61,87,23,45,50,71,c.ERRATIC,87.5,!1),new G(e.CRADILY,3,!1,!1,!1,"Barnacle Pokémon",I.ROCK,I.GRASS,1.5,60.4,O.SUCTION_CUPS,O.NONE,O.STORM_DRAIN,495,86,81,97,81,107,43,45,50,173,c.ERRATIC,87.5,!1),new G(e.ANORITH,3,!1,!1,!1,"Old Shrimp Pokémon",I.ROCK,I.BUG,.7,12.5,O.BATTLE_ARMOR,O.NONE,O.SWIFT_SWIM,355,45,95,50,40,50,75,45,50,71,c.ERRATIC,87.5,!1),new G(e.ARMALDO,3,!1,!1,!1,"Plate Pokémon",I.ROCK,I.BUG,1.5,68.2,O.BATTLE_ARMOR,O.NONE,O.SWIFT_SWIM,495,75,125,100,70,80,45,45,50,173,c.ERRATIC,87.5,!1),new G(e.FEEBAS,3,!1,!1,!1,"Fish Pokémon",I.WATER,null,.6,7.4,O.SWIFT_SWIM,O.OBLIVIOUS,O.ADAPTABILITY,200,20,15,20,10,55,80,255,50,40,c.ERRATIC,50,!1),new G(e.MILOTIC,3,!1,!1,!1,"Tender Pokémon",I.WATER,null,6.2,162,O.MARVEL_SCALE,O.COMPETITIVE,O.CUTE_CHARM,540,95,60,79,100,125,81,60,50,189,c.ERRATIC,50,!0),new G(e.CASTFORM,3,!1,!1,!1,"Weather Pokémon",I.NORMAL,null,.3,.8,O.FORECAST,O.NONE,O.NONE,420,70,70,70,70,70,70,45,70,147,c.MEDIUM_FAST,50,!1,!0,new Y("Normal Form","",I.NORMAL,null,.3,.8,O.FORECAST,O.NONE,O.NONE,420,70,70,70,70,70,70,45,70,147,!1,null,!0),new Y("Sunny Form","sunny",I.FIRE,null,.3,.8,O.FORECAST,O.NONE,O.NONE,420,70,70,70,70,70,70,45,70,147),new Y("Rainy Form","rainy",I.WATER,null,.3,.8,O.FORECAST,O.NONE,O.NONE,420,70,70,70,70,70,70,45,70,147),new Y("Snowy Form","snowy",I.ICE,null,.3,.8,O.FORECAST,O.NONE,O.NONE,420,70,70,70,70,70,70,45,70,147)),new G(e.KECLEON,3,!1,!1,!1,"Color Swap Pokémon",I.NORMAL,null,1,22,O.COLOR_CHANGE,O.NONE,O.PROTEAN,440,60,90,70,60,120,40,200,70,154,c.MEDIUM_SLOW,50,!1),new G(e.SHUPPET,3,!1,!1,!1,"Puppet Pokémon",I.GHOST,null,.6,2.3,O.INSOMNIA,O.FRISK,O.CURSED_BODY,295,44,75,35,63,33,45,225,35,59,c.FAST,50,!1),new G(e.BANETTE,3,!1,!1,!1,"Marionette Pokémon",I.GHOST,null,1.1,12.5,O.INSOMNIA,O.FRISK,O.CURSED_BODY,455,64,115,65,83,63,65,45,35,159,c.FAST,50,!1,!0,new Y("Normal","",I.GHOST,null,1.1,12.5,O.INSOMNIA,O.FRISK,O.CURSED_BODY,455,64,115,65,83,63,65,45,35,159,!1,null,!0),new Y("Mega",Ue.MEGA,I.GHOST,null,1.2,13,O.PRANKSTER,O.PRANKSTER,O.PRANKSTER,555,64,165,75,93,83,75,45,35,159)),new G(e.DUSKULL,3,!1,!1,!1,"Requiem Pokémon",I.GHOST,null,.8,15,O.LEVITATE,O.NONE,O.FRISK,295,20,40,90,30,90,25,190,35,59,c.FAST,50,!1),new G(e.DUSCLOPS,3,!1,!1,!1,"Beckon Pokémon",I.GHOST,null,1.6,30.6,O.PRESSURE,O.NONE,O.FRISK,455,40,70,130,60,130,25,90,35,159,c.FAST,50,!1),new G(e.TROPIUS,3,!1,!1,!1,"Fruit Pokémon",I.GRASS,I.FLYING,2,100,O.CHLOROPHYLL,O.SOLAR_POWER,O.HARVEST,460,99,68,83,72,87,51,200,70,161,c.SLOW,50,!1),new G(e.CHIMECHO,3,!1,!1,!1,"Wind Chime Pokémon",I.PSYCHIC,null,.6,1,O.LEVITATE,O.NONE,O.NONE,455,75,50,80,95,90,65,45,70,159,c.FAST,50,!1),new G(e.ABSOL,3,!1,!1,!1,"Disaster Pokémon",I.DARK,null,1.2,47,O.PRESSURE,O.SUPER_LUCK,O.JUSTIFIED,465,65,130,60,75,60,75,30,35,163,c.MEDIUM_SLOW,50,!1,!0,new Y("Normal","",I.DARK,null,1.2,47,O.PRESSURE,O.SUPER_LUCK,O.JUSTIFIED,465,65,130,60,75,60,75,30,35,163,!1,null,!0),new Y("Mega",Ue.MEGA,I.DARK,null,1.2,49,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,565,65,150,60,115,60,115,30,35,163)),new G(e.WYNAUT,3,!1,!1,!1,"Bright Pokémon",I.PSYCHIC,null,.6,14,O.SHADOW_TAG,O.NONE,O.TELEPATHY,260,95,23,48,23,48,23,125,50,52,c.MEDIUM_FAST,50,!1),new G(e.SNORUNT,3,!1,!1,!1,"Snow Hat Pokémon",I.ICE,null,.7,16.8,O.INNER_FOCUS,O.ICE_BODY,O.MOODY,300,50,50,50,50,50,50,190,50,60,c.MEDIUM_FAST,50,!1),new G(e.GLALIE,3,!1,!1,!1,"Face Pokémon",I.ICE,null,1.5,256.5,O.INNER_FOCUS,O.ICE_BODY,O.MOODY,480,80,80,80,80,80,80,75,50,168,c.MEDIUM_FAST,50,!1,!0,new Y("Normal","",I.ICE,null,1.5,256.5,O.INNER_FOCUS,O.ICE_BODY,O.MOODY,480,80,80,80,80,80,80,75,50,168,!1,null,!0),new Y("Mega",Ue.MEGA,I.ICE,null,2.1,350.2,O.REFRIGERATE,O.REFRIGERATE,O.REFRIGERATE,580,80,120,80,120,80,100,75,50,168)),new G(e.SPHEAL,3,!1,!1,!1,"Clap Pokémon",I.ICE,I.WATER,.8,39.5,O.THICK_FAT,O.ICE_BODY,O.OBLIVIOUS,290,70,40,50,55,50,25,255,50,58,c.MEDIUM_SLOW,50,!1),new G(e.SEALEO,3,!1,!1,!1,"Ball Roll Pokémon",I.ICE,I.WATER,1.1,87.6,O.THICK_FAT,O.ICE_BODY,O.OBLIVIOUS,410,90,60,70,75,70,45,120,50,144,c.MEDIUM_SLOW,50,!1),new G(e.WALREIN,3,!1,!1,!1,"Ice Break Pokémon",I.ICE,I.WATER,1.4,150.6,O.THICK_FAT,O.ICE_BODY,O.OBLIVIOUS,530,110,80,90,95,90,65,45,50,265,c.MEDIUM_SLOW,50,!1),new G(e.CLAMPERL,3,!1,!1,!1,"Bivalve Pokémon",I.WATER,null,.4,52.5,O.SHELL_ARMOR,O.NONE,O.RATTLED,345,35,64,85,74,55,32,255,70,69,c.ERRATIC,50,!1),new G(e.HUNTAIL,3,!1,!1,!1,"Deep Sea Pokémon",I.WATER,null,1.7,27,O.SWIFT_SWIM,O.NONE,O.WATER_VEIL,485,55,104,105,94,75,52,60,70,170,c.ERRATIC,50,!1),new G(e.GOREBYSS,3,!1,!1,!1,"South Sea Pokémon",I.WATER,null,1.8,22.6,O.SWIFT_SWIM,O.NONE,O.HYDRATION,485,55,84,105,114,75,52,60,70,170,c.ERRATIC,50,!1),new G(e.RELICANTH,3,!1,!1,!1,"Longevity Pokémon",I.WATER,I.ROCK,1,23.4,O.SWIFT_SWIM,O.ROCK_HEAD,O.STURDY,485,100,90,130,45,65,55,25,50,170,c.SLOW,87.5,!0),new G(e.LUVDISC,3,!1,!1,!1,"Rendezvous Pokémon",I.WATER,null,.6,8.7,O.SWIFT_SWIM,O.NONE,O.HYDRATION,330,43,30,55,40,65,97,225,70,116,c.FAST,25,!1),new G(e.BAGON,3,!1,!1,!1,"Rock Head Pokémon",I.DRAGON,null,.6,42.1,O.ROCK_HEAD,O.NONE,O.SHEER_FORCE,300,45,75,60,40,30,50,45,35,60,c.SLOW,50,!1),new G(e.SHELGON,3,!1,!1,!1,"Endurance Pokémon",I.DRAGON,null,1.1,110.5,O.ROCK_HEAD,O.NONE,O.OVERCOAT,420,65,95,100,60,50,50,45,35,147,c.SLOW,50,!1),new G(e.SALAMENCE,3,!1,!1,!1,"Dragon Pokémon",I.DRAGON,I.FLYING,1.5,102.6,O.INTIMIDATE,O.NONE,O.MOXIE,600,95,135,80,110,80,100,45,35,300,c.SLOW,50,!1,!0,new Y("Normal","",I.DRAGON,I.FLYING,1.5,102.6,O.INTIMIDATE,O.NONE,O.MOXIE,600,95,135,80,110,80,100,45,35,300,!1,null,!0),new Y("Mega",Ue.MEGA,I.DRAGON,I.FLYING,1.8,112.6,O.AERILATE,O.NONE,O.AERILATE,700,95,145,130,120,90,120,45,35,300)),new G(e.BELDUM,3,!1,!1,!1,"Iron Ball Pokémon",I.STEEL,I.PSYCHIC,.6,95.2,O.CLEAR_BODY,O.NONE,O.LIGHT_METAL,300,40,55,80,35,60,30,45,35,60,c.SLOW,null,!1),new G(e.METANG,3,!1,!1,!1,"Iron Claw Pokémon",I.STEEL,I.PSYCHIC,1.2,202.5,O.CLEAR_BODY,O.NONE,O.LIGHT_METAL,420,60,75,100,55,80,50,25,35,147,c.SLOW,null,!1),new G(e.METAGROSS,3,!1,!1,!1,"Iron Leg Pokémon",I.STEEL,I.PSYCHIC,1.6,550,O.CLEAR_BODY,O.NONE,O.LIGHT_METAL,600,80,135,130,95,90,70,10,35,300,c.SLOW,null,!1,!0,new Y("Normal","",I.STEEL,I.PSYCHIC,1.6,550,O.CLEAR_BODY,O.NONE,O.LIGHT_METAL,600,80,135,130,95,90,70,3,35,300,!1,null,!0),new Y("Mega",Ue.MEGA,I.STEEL,I.PSYCHIC,2.5,942.9,O.TOUGH_CLAWS,O.NONE,O.TOUGH_CLAWS,700,80,145,150,105,110,110,3,35,300)),new G(e.REGIROCK,3,!0,!1,!1,"Rock Peak Pokémon",I.ROCK,null,1.7,230,O.CLEAR_BODY,O.NONE,O.STURDY,580,80,100,200,50,100,50,3,35,290,c.SLOW,null,!1),new G(e.REGICE,3,!0,!1,!1,"Iceberg Pokémon",I.ICE,null,1.8,175,O.CLEAR_BODY,O.NONE,O.ICE_BODY,580,80,50,100,100,200,50,3,35,290,c.SLOW,null,!1),new G(e.REGISTEEL,3,!0,!1,!1,"Iron Pokémon",I.STEEL,null,1.9,205,O.CLEAR_BODY,O.NONE,O.LIGHT_METAL,580,80,75,150,75,150,50,3,35,290,c.SLOW,null,!1),new G(e.LATIAS,3,!0,!1,!1,"Eon Pokémon",I.DRAGON,I.PSYCHIC,1.4,40,O.LEVITATE,O.NONE,O.NONE,600,80,80,90,110,130,110,3,90,300,c.SLOW,0,!1,!0,new Y("Normal","",I.DRAGON,I.PSYCHIC,1.4,40,O.LEVITATE,O.NONE,O.NONE,600,80,80,90,110,130,110,3,90,300,!1,null,!0),new Y("Mega",Ue.MEGA,I.DRAGON,I.PSYCHIC,1.8,52,O.LEVITATE,O.NONE,O.NONE,700,80,100,120,140,150,110,3,90,300)),new G(e.LATIOS,3,!0,!1,!1,"Eon Pokémon",I.DRAGON,I.PSYCHIC,2,60,O.LEVITATE,O.NONE,O.NONE,600,80,90,80,130,110,110,3,90,300,c.SLOW,100,!1,!0,new Y("Normal","",I.DRAGON,I.PSYCHIC,2,60,O.LEVITATE,O.NONE,O.NONE,600,80,90,80,130,110,110,3,90,300,!1,null,!0),new Y("Mega",Ue.MEGA,I.DRAGON,I.PSYCHIC,2.3,70,O.LEVITATE,O.NONE,O.NONE,700,80,130,100,160,120,110,3,90,300)),new G(e.KYOGRE,3,!1,!0,!1,"Sea Basin Pokémon",I.WATER,null,4.5,352,O.DRIZZLE,O.NONE,O.NONE,670,100,100,90,150,140,90,3,0,335,c.SLOW,null,!1,!0,new Y("Normal","",I.WATER,null,4.5,352,O.DRIZZLE,O.NONE,O.NONE,670,100,100,90,150,140,90,3,0,335,!1,null,!0),new Y("Primal","primal",I.WATER,null,9.8,430,O.PRIMORDIAL_SEA,O.NONE,O.NONE,770,100,150,90,180,160,90,3,0,335)),new G(e.GROUDON,3,!1,!0,!1,"Continent Pokémon",I.GROUND,null,3.5,950,O.DROUGHT,O.NONE,O.NONE,670,100,150,140,100,90,90,3,0,335,c.SLOW,null,!1,!0,new Y("Normal","",I.GROUND,null,3.5,950,O.DROUGHT,O.NONE,O.NONE,670,100,150,140,100,90,90,3,0,335,!1,null,!0),new Y("Primal","primal",I.GROUND,I.FIRE,5,999.7,O.DESOLATE_LAND,O.NONE,O.NONE,770,100,180,160,150,90,90,3,0,335)),new G(e.RAYQUAZA,3,!1,!0,!1,"Sky High Pokémon",I.DRAGON,I.FLYING,7,206.5,O.AIR_LOCK,O.NONE,O.NONE,680,105,150,90,150,90,95,45,0,340,c.SLOW,null,!1,!0,new Y("Normal","",I.DRAGON,I.FLYING,7,206.5,O.AIR_LOCK,O.NONE,O.NONE,680,105,150,90,150,90,95,45,0,340,!1,null,!0),new Y("Mega",Ue.MEGA,I.DRAGON,I.FLYING,10.8,392,O.DELTA_STREAM,O.NONE,O.NONE,780,105,180,100,180,100,115,45,0,340)),new G(e.JIRACHI,3,!1,!1,!0,"Wish Pokémon",I.STEEL,I.PSYCHIC,.3,1.1,O.SERENE_GRACE,O.NONE,O.NONE,600,100,100,100,100,100,100,3,100,300,c.SLOW,null,!1),new G(e.DEOXYS,3,!1,!1,!0,"DNA Pokémon",I.PSYCHIC,null,1.7,60.8,O.PRESSURE,O.NONE,O.NONE,600,50,150,50,150,50,150,3,0,270,c.SLOW,null,!1,!0,new Y("Normal Forme","normal",I.PSYCHIC,null,1.7,60.8,O.PRESSURE,O.NONE,O.NONE,600,50,150,50,150,50,150,3,0,270,!1,"",!0),new Y("Attack Forme","attack",I.PSYCHIC,null,1.7,60.8,O.PRESSURE,O.NONE,O.NONE,600,50,180,20,180,20,150,3,0,270),new Y("Defense Forme","defense",I.PSYCHIC,null,1.7,60.8,O.PRESSURE,O.NONE,O.NONE,600,50,70,160,70,160,90,3,0,270),new Y("Speed Forme","speed",I.PSYCHIC,null,1.7,60.8,O.PRESSURE,O.NONE,O.NONE,600,50,95,90,95,90,180,3,0,270)),new G(e.TURTWIG,4,!1,!1,!1,"Tiny Leaf Pokémon",I.GRASS,null,.4,10.2,O.OVERGROW,O.NONE,O.SHELL_ARMOR,318,55,68,64,45,55,31,45,70,64,c.MEDIUM_SLOW,87.5,!1),new G(e.GROTLE,4,!1,!1,!1,"Grove Pokémon",I.GRASS,null,1.1,97,O.OVERGROW,O.NONE,O.SHELL_ARMOR,405,75,89,85,55,65,36,45,70,142,c.MEDIUM_SLOW,87.5,!1),new G(e.TORTERRA,4,!1,!1,!1,"Continent Pokémon",I.GRASS,I.GROUND,2.2,310,O.OVERGROW,O.NONE,O.SHELL_ARMOR,525,95,109,105,75,85,56,45,70,236,c.MEDIUM_SLOW,87.5,!1),new G(e.CHIMCHAR,4,!1,!1,!1,"Chimp Pokémon",I.FIRE,null,.5,6.2,O.BLAZE,O.NONE,O.IRON_FIST,309,44,58,44,58,44,61,45,70,62,c.MEDIUM_SLOW,87.5,!1),new G(e.MONFERNO,4,!1,!1,!1,"Playful Pokémon",I.FIRE,I.FIGHTING,.9,22,O.BLAZE,O.NONE,O.IRON_FIST,405,64,78,52,78,52,81,45,70,142,c.MEDIUM_SLOW,87.5,!1),new G(e.INFERNAPE,4,!1,!1,!1,"Flame Pokémon",I.FIRE,I.FIGHTING,1.2,55,O.BLAZE,O.NONE,O.IRON_FIST,534,76,104,71,104,71,108,45,70,240,c.MEDIUM_SLOW,87.5,!1),new G(e.PIPLUP,4,!1,!1,!1,"Penguin Pokémon",I.WATER,null,.4,5.2,O.TORRENT,O.NONE,O.COMPETITIVE,314,53,51,53,61,56,40,45,70,63,c.MEDIUM_SLOW,87.5,!1),new G(e.PRINPLUP,4,!1,!1,!1,"Penguin Pokémon",I.WATER,null,.8,23,O.TORRENT,O.NONE,O.COMPETITIVE,405,64,66,68,81,76,50,45,70,142,c.MEDIUM_SLOW,87.5,!1),new G(e.EMPOLEON,4,!1,!1,!1,"Emperor Pokémon",I.WATER,I.STEEL,1.7,84.5,O.TORRENT,O.NONE,O.COMPETITIVE,530,84,86,88,111,101,60,45,70,239,c.MEDIUM_SLOW,87.5,!1),new G(e.STARLY,4,!1,!1,!1,"Starling Pokémon",I.NORMAL,I.FLYING,.3,2,O.KEEN_EYE,O.NONE,O.RECKLESS,245,40,55,30,30,30,60,255,70,49,c.MEDIUM_SLOW,50,!0),new G(e.STARAVIA,4,!1,!1,!1,"Starling Pokémon",I.NORMAL,I.FLYING,.6,15.5,O.INTIMIDATE,O.NONE,O.RECKLESS,340,55,75,50,40,40,80,120,70,119,c.MEDIUM_SLOW,50,!0),new G(e.STARAPTOR,4,!1,!1,!1,"Predator Pokémon",I.NORMAL,I.FLYING,1.2,24.9,O.INTIMIDATE,O.NONE,O.RECKLESS,485,85,120,70,50,60,100,45,70,218,c.MEDIUM_SLOW,50,!0),new G(e.BIDOOF,4,!1,!1,!1,"Plump Mouse Pokémon",I.NORMAL,null,.5,20,O.SIMPLE,O.UNAWARE,O.MOODY,250,59,45,40,35,40,31,255,70,50,c.MEDIUM_FAST,50,!0),new G(e.BIBAREL,4,!1,!1,!1,"Beaver Pokémon",I.NORMAL,I.WATER,1,31.5,O.SIMPLE,O.UNAWARE,O.MOODY,410,79,85,60,55,60,71,127,70,144,c.MEDIUM_FAST,50,!0),new G(e.KRICKETOT,4,!1,!1,!1,"Cricket Pokémon",I.BUG,null,.3,2.2,O.SHED_SKIN,O.NONE,O.RUN_AWAY,194,37,25,41,25,41,25,255,70,39,c.MEDIUM_SLOW,50,!0),new G(e.KRICKETUNE,4,!1,!1,!1,"Cricket Pokémon",I.BUG,null,1,25.5,O.SWARM,O.NONE,O.TECHNICIAN,384,77,85,51,55,51,65,45,70,134,c.MEDIUM_SLOW,50,!0),new G(e.SHINX,4,!1,!1,!1,"Flash Pokémon",I.ELECTRIC,null,.5,9.5,O.RIVALRY,O.INTIMIDATE,O.GUTS,263,45,65,34,40,34,45,235,50,53,c.MEDIUM_SLOW,50,!0),new G(e.LUXIO,4,!1,!1,!1,"Spark Pokémon",I.ELECTRIC,null,.9,30.5,O.RIVALRY,O.INTIMIDATE,O.GUTS,363,60,85,49,60,49,60,120,100,127,c.MEDIUM_SLOW,50,!0),new G(e.LUXRAY,4,!1,!1,!1,"Gleam Eyes Pokémon",I.ELECTRIC,null,1.4,42,O.RIVALRY,O.INTIMIDATE,O.GUTS,523,80,120,79,95,79,70,45,50,262,c.MEDIUM_SLOW,50,!0),new G(e.BUDEW,4,!1,!1,!1,"Bud Pokémon",I.GRASS,I.POISON,.2,1.2,O.NATURAL_CURE,O.POISON_POINT,O.LEAF_GUARD,280,40,30,35,50,70,55,255,50,56,c.MEDIUM_SLOW,50,!1),new G(e.ROSERADE,4,!1,!1,!1,"Bouquet Pokémon",I.GRASS,I.POISON,.9,14.5,O.NATURAL_CURE,O.POISON_POINT,O.TECHNICIAN,515,60,70,65,125,105,90,75,50,258,c.MEDIUM_SLOW,50,!0),new G(e.CRANIDOS,4,!1,!1,!1,"Head Butt Pokémon",I.ROCK,null,.9,31.5,O.MOLD_BREAKER,O.NONE,O.SHEER_FORCE,350,67,125,40,30,30,58,45,70,70,c.ERRATIC,87.5,!1),new G(e.RAMPARDOS,4,!1,!1,!1,"Head Butt Pokémon",I.ROCK,null,1.6,102.5,O.MOLD_BREAKER,O.NONE,O.SHEER_FORCE,495,97,165,60,65,50,58,45,70,173,c.ERRATIC,87.5,!1),new G(e.SHIELDON,4,!1,!1,!1,"Shield Pokémon",I.ROCK,I.STEEL,.5,57,O.STURDY,O.NONE,O.SOUNDPROOF,350,30,42,118,42,88,30,45,70,70,c.ERRATIC,87.5,!1),new G(e.BASTIODON,4,!1,!1,!1,"Shield Pokémon",I.ROCK,I.STEEL,1.3,149.5,O.STURDY,O.NONE,O.SOUNDPROOF,495,60,52,168,47,138,30,45,70,173,c.ERRATIC,87.5,!1),new G(e.BURMY,4,!1,!1,!1,"Bagworm Pokémon",I.BUG,null,.2,3.4,O.SHED_SKIN,O.NONE,O.OVERCOAT,224,40,29,45,29,45,36,120,70,45,c.MEDIUM_FAST,50,!1,!0,new Y("Plant Cloak","plant",I.BUG,null,.2,3.4,O.SHED_SKIN,O.NONE,O.OVERCOAT,224,40,29,45,29,45,36,120,70,45,!1,null,!0),new Y("Sandy Cloak","sandy",I.BUG,null,.2,3.4,O.SHED_SKIN,O.NONE,O.OVERCOAT,224,40,29,45,29,45,36,120,70,45,!1,null,!0),new Y("Trash Cloak","trash",I.BUG,null,.2,3.4,O.SHED_SKIN,O.NONE,O.OVERCOAT,224,40,29,45,29,45,36,120,70,45,!1,null,!0)),new G(e.WORMADAM,4,!1,!1,!1,"Bagworm Pokémon",I.BUG,I.GRASS,.5,6.5,O.ANTICIPATION,O.NONE,O.OVERCOAT,424,60,59,85,79,105,36,45,70,148,c.MEDIUM_FAST,0,!1,!1,new Y("Plant Cloak","plant",I.BUG,I.GRASS,.5,6.5,O.ANTICIPATION,O.NONE,O.OVERCOAT,424,60,59,85,79,105,36,45,70,148,!1,null,!0),new Y("Sandy Cloak","sandy",I.BUG,I.GROUND,.5,6.5,O.ANTICIPATION,O.NONE,O.OVERCOAT,424,60,79,105,59,85,36,45,70,148,!1,null,!0),new Y("Trash Cloak","trash",I.BUG,I.STEEL,.5,6.5,O.ANTICIPATION,O.NONE,O.OVERCOAT,424,60,69,95,69,95,36,45,70,148,!1,null,!0)),new G(e.MOTHIM,4,!1,!1,!1,"Moth Pokémon",I.BUG,I.FLYING,.9,23.3,O.SWARM,O.NONE,O.TINTED_LENS,424,70,94,50,94,50,66,45,70,148,c.MEDIUM_FAST,100,!1),new G(e.COMBEE,4,!1,!1,!1,"Tiny Bee Pokémon",I.BUG,I.FLYING,.3,5.5,O.HONEY_GATHER,O.NONE,O.HUSTLE,244,30,30,42,30,42,70,120,50,49,c.MEDIUM_SLOW,87.5,!0),new G(e.VESPIQUEN,4,!1,!1,!1,"Beehive Pokémon",I.BUG,I.FLYING,1.2,38.5,O.PRESSURE,O.NONE,O.UNNERVE,474,70,80,102,80,102,40,45,50,166,c.MEDIUM_SLOW,0,!1),new G(e.PACHIRISU,4,!1,!1,!1,"EleSquirrel Pokémon",I.ELECTRIC,null,.4,3.9,O.RUN_AWAY,O.PICKUP,O.VOLT_ABSORB,405,60,45,70,45,90,95,200,100,142,c.MEDIUM_FAST,50,!0),new G(e.BUIZEL,4,!1,!1,!1,"Sea Weasel Pokémon",I.WATER,null,.7,29.5,O.SWIFT_SWIM,O.NONE,O.WATER_VEIL,330,55,65,35,60,30,85,190,70,66,c.MEDIUM_FAST,50,!0),new G(e.FLOATZEL,4,!1,!1,!1,"Sea Weasel Pokémon",I.WATER,null,1.1,33.5,O.SWIFT_SWIM,O.NONE,O.WATER_VEIL,495,85,105,55,85,50,115,75,70,173,c.MEDIUM_FAST,50,!0),new G(e.CHERUBI,4,!1,!1,!1,"Cherry Pokémon",I.GRASS,null,.4,3.3,O.CHLOROPHYLL,O.NONE,O.NONE,275,45,35,45,62,53,35,190,50,55,c.MEDIUM_FAST,50,!1),new G(e.CHERRIM,4,!1,!1,!1,"Blossom Pokémon",I.GRASS,null,.5,9.3,O.FLOWER_GIFT,O.NONE,O.NONE,450,70,60,70,87,78,85,75,50,158,c.MEDIUM_FAST,50,!1,!0,new Y("Overcast Form","overcast",I.GRASS,null,.5,9.3,O.FLOWER_GIFT,O.NONE,O.NONE,450,70,60,70,87,78,85,75,50,158,!1,null,!0),new Y("Sunshine Form","sunshine",I.GRASS,null,.5,9.3,O.FLOWER_GIFT,O.NONE,O.NONE,450,70,60,70,87,78,85,75,50,158)),new G(e.SHELLOS,4,!1,!1,!1,"Sea Slug Pokémon",I.WATER,null,.3,6.3,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,325,76,48,48,57,62,34,190,50,65,c.MEDIUM_FAST,50,!1,!1,new Y("East Sea","east",I.WATER,null,.3,6.3,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,325,76,48,48,57,62,34,190,50,65,!1,null,!0),new Y("West Sea","west",I.WATER,null,.3,6.3,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,325,76,48,48,57,62,34,190,50,65,!1,null,!0)),new G(e.GASTRODON,4,!1,!1,!1,"Sea Slug Pokémon",I.WATER,I.GROUND,.9,29.9,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,475,111,83,68,92,82,39,75,50,166,c.MEDIUM_FAST,50,!1,!1,new Y("East Sea","east",I.WATER,I.GROUND,.9,29.9,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,475,111,83,68,92,82,39,75,50,166,!1,null,!0),new Y("West Sea","west",I.WATER,I.GROUND,.9,29.9,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,475,111,83,68,92,82,39,75,50,166,!1,null,!0)),new G(e.AMBIPOM,4,!1,!1,!1,"Long Tail Pokémon",I.NORMAL,null,1.2,20.3,O.TECHNICIAN,O.PICKUP,O.SKILL_LINK,482,75,100,66,60,66,115,45,100,169,c.FAST,50,!0),new G(e.DRIFLOON,4,!1,!1,!1,"Balloon Pokémon",I.GHOST,I.FLYING,.4,1.2,O.AFTERMATH,O.UNBURDEN,O.FLARE_BOOST,348,90,50,34,60,44,70,125,50,70,c.FLUCTUATING,50,!1),new G(e.DRIFBLIM,4,!1,!1,!1,"Blimp Pokémon",I.GHOST,I.FLYING,1.2,15,O.AFTERMATH,O.UNBURDEN,O.FLARE_BOOST,498,150,80,44,90,54,80,60,50,174,c.FLUCTUATING,50,!1),new G(e.BUNEARY,4,!1,!1,!1,"Rabbit Pokémon",I.NORMAL,null,.4,5.5,O.RUN_AWAY,O.KLUTZ,O.LIMBER,350,55,66,44,44,56,85,190,0,70,c.MEDIUM_FAST,50,!1),new G(e.LOPUNNY,4,!1,!1,!1,"Rabbit Pokémon",I.NORMAL,null,1.2,33.3,O.CUTE_CHARM,O.KLUTZ,O.LIMBER,480,65,76,84,54,96,105,60,140,168,c.MEDIUM_FAST,50,!1,!0,new Y("Normal","",I.NORMAL,null,1.2,33.3,O.CUTE_CHARM,O.KLUTZ,O.LIMBER,480,65,76,84,54,96,105,60,140,168,!1,null,!0),new Y("Mega",Ue.MEGA,I.NORMAL,I.FIGHTING,1.3,28.3,O.SCRAPPY,O.SCRAPPY,O.SCRAPPY,580,65,136,94,54,96,135,60,140,168)),new G(e.MISMAGIUS,4,!1,!1,!1,"Magical Pokémon",I.GHOST,null,.9,4.4,O.LEVITATE,O.NONE,O.NONE,495,60,60,60,105,105,105,45,35,173,c.FAST,50,!1),new G(e.HONCHKROW,4,!1,!1,!1,"Big Boss Pokémon",I.DARK,I.FLYING,.9,27.3,O.INSOMNIA,O.SUPER_LUCK,O.MOXIE,505,100,125,52,105,52,71,30,35,177,c.MEDIUM_SLOW,50,!1),new G(e.GLAMEOW,4,!1,!1,!1,"Catty Pokémon",I.NORMAL,null,.5,3.9,O.LIMBER,O.OWN_TEMPO,O.KEEN_EYE,310,49,55,42,42,37,85,190,70,62,c.FAST,25,!1),new G(e.PURUGLY,4,!1,!1,!1,"Tiger Cat Pokémon",I.NORMAL,null,1,43.8,O.THICK_FAT,O.OWN_TEMPO,O.DEFIANT,452,71,82,64,64,59,112,75,70,158,c.FAST,25,!1),new G(e.CHINGLING,4,!1,!1,!1,"Bell Pokémon",I.PSYCHIC,null,.2,.6,O.LEVITATE,O.NONE,O.NONE,285,45,30,50,65,50,45,120,70,57,c.FAST,50,!1),new G(e.STUNKY,4,!1,!1,!1,"Skunk Pokémon",I.POISON,I.DARK,.4,19.2,O.STENCH,O.AFTERMATH,O.KEEN_EYE,329,63,63,47,41,41,74,225,50,66,c.MEDIUM_FAST,50,!1),new G(e.SKUNTANK,4,!1,!1,!1,"Skunk Pokémon",I.POISON,I.DARK,1,38,O.STENCH,O.AFTERMATH,O.KEEN_EYE,479,103,93,67,71,61,84,60,50,168,c.MEDIUM_FAST,50,!1),new G(e.BRONZOR,4,!1,!1,!1,"Bronze Pokémon",I.STEEL,I.PSYCHIC,.5,60.5,O.LEVITATE,O.HEATPROOF,O.HEAVY_METAL,300,57,24,86,24,86,23,255,50,60,c.MEDIUM_FAST,null,!1),new G(e.BRONZONG,4,!1,!1,!1,"Bronze Bell Pokémon",I.STEEL,I.PSYCHIC,1.3,187,O.LEVITATE,O.HEATPROOF,O.HEAVY_METAL,500,67,89,116,79,116,33,90,50,175,c.MEDIUM_FAST,null,!1),new G(e.BONSLY,4,!1,!1,!1,"Bonsai Pokémon",I.ROCK,null,.5,15,O.STURDY,O.ROCK_HEAD,O.RATTLED,290,50,80,95,10,45,10,255,50,58,c.MEDIUM_FAST,50,!1),new G(e.MIME_JR,4,!1,!1,!1,"Mime Pokémon",I.PSYCHIC,I.FAIRY,.6,13,O.SOUNDPROOF,O.FILTER,O.TECHNICIAN,310,20,25,45,70,90,60,145,50,62,c.MEDIUM_FAST,50,!1),new G(e.HAPPINY,4,!1,!1,!1,"Playhouse Pokémon",I.NORMAL,null,.6,24.4,O.NATURAL_CURE,O.SERENE_GRACE,O.FRIEND_GUARD,220,100,5,5,15,65,30,130,140,110,c.FAST,0,!1),new G(e.CHATOT,4,!1,!1,!1,"Music Note Pokémon",I.NORMAL,I.FLYING,.5,1.9,O.KEEN_EYE,O.TANGLED_FEET,O.BIG_PECKS,411,76,65,45,92,42,91,30,35,144,c.MEDIUM_SLOW,50,!1),new G(e.SPIRITOMB,4,!1,!1,!1,"Forbidden Pokémon",I.GHOST,I.DARK,1,108,O.PRESSURE,O.NONE,O.INFILTRATOR,485,50,92,108,92,108,35,100,50,170,c.MEDIUM_FAST,50,!1),new G(e.GIBLE,4,!1,!1,!1,"Land Shark Pokémon",I.DRAGON,I.GROUND,.7,20.5,O.SAND_VEIL,O.NONE,O.ROUGH_SKIN,300,58,70,45,40,45,42,45,50,60,c.SLOW,50,!0),new G(e.GABITE,4,!1,!1,!1,"Cave Pokémon",I.DRAGON,I.GROUND,1.4,56,O.SAND_VEIL,O.NONE,O.ROUGH_SKIN,410,68,90,65,50,55,82,45,50,144,c.SLOW,50,!0),new G(e.GARCHOMP,4,!1,!1,!1,"Mach Pokémon",I.DRAGON,I.GROUND,1.9,95,O.SAND_VEIL,O.NONE,O.ROUGH_SKIN,600,108,130,95,80,85,102,45,50,300,c.SLOW,50,!0,!0,new Y("Normal","",I.DRAGON,I.GROUND,1.9,95,O.SAND_VEIL,O.NONE,O.ROUGH_SKIN,600,108,130,95,80,85,102,45,50,300,!0,null,!0),new Y("Mega",Ue.MEGA,I.DRAGON,I.GROUND,1.9,95,O.SAND_FORCE,O.NONE,O.SAND_FORCE,700,108,170,115,120,95,92,45,50,300,!0)),new G(e.MUNCHLAX,4,!1,!1,!1,"Big Eater Pokémon",I.NORMAL,null,.6,105,O.PICKUP,O.THICK_FAT,O.GLUTTONY,390,135,85,40,40,85,5,50,50,78,c.SLOW,87.5,!1),new G(e.RIOLU,4,!1,!1,!1,"Emanation Pokémon",I.FIGHTING,null,.7,20.2,O.STEADFAST,O.INNER_FOCUS,O.PRANKSTER,285,40,70,40,35,40,60,75,50,57,c.MEDIUM_SLOW,87.5,!1),new G(e.LUCARIO,4,!1,!1,!1,"Aura Pokémon",I.FIGHTING,I.STEEL,1.2,54,O.STEADFAST,O.INNER_FOCUS,O.JUSTIFIED,525,70,110,70,115,70,90,45,50,184,c.MEDIUM_SLOW,87.5,!1,!0,new Y("Normal","",I.FIGHTING,I.STEEL,1.2,54,O.STEADFAST,O.INNER_FOCUS,O.JUSTIFIED,525,70,110,70,115,70,90,45,50,184,!1,null,!0),new Y("Mega",Ue.MEGA,I.FIGHTING,I.STEEL,1.3,57.5,O.ADAPTABILITY,O.ADAPTABILITY,O.ADAPTABILITY,625,70,145,88,140,70,112,45,50,184)),new G(e.HIPPOPOTAS,4,!1,!1,!1,"Hippo Pokémon",I.GROUND,null,.8,49.5,O.SAND_STREAM,O.NONE,O.SAND_FORCE,330,68,72,78,38,42,32,140,50,66,c.SLOW,50,!0),new G(e.HIPPOWDON,4,!1,!1,!1,"Heavyweight Pokémon",I.GROUND,null,2,300,O.SAND_STREAM,O.NONE,O.SAND_FORCE,525,108,112,118,68,72,47,60,50,184,c.SLOW,50,!0),new G(e.SKORUPI,4,!1,!1,!1,"Scorpion Pokémon",I.POISON,I.BUG,.8,12,O.BATTLE_ARMOR,O.SNIPER,O.KEEN_EYE,330,40,50,90,30,55,65,120,50,66,c.SLOW,50,!1),new G(e.DRAPION,4,!1,!1,!1,"Ogre Scorpion Pokémon",I.POISON,I.DARK,1.3,61.5,O.BATTLE_ARMOR,O.SNIPER,O.KEEN_EYE,500,70,90,110,60,75,95,45,50,175,c.SLOW,50,!1),new G(e.CROAGUNK,4,!1,!1,!1,"Toxic Mouth Pokémon",I.POISON,I.FIGHTING,.7,23,O.ANTICIPATION,O.DRY_SKIN,O.POISON_TOUCH,300,48,61,40,61,40,50,140,100,60,c.MEDIUM_FAST,50,!0),new G(e.TOXICROAK,4,!1,!1,!1,"Toxic Mouth Pokémon",I.POISON,I.FIGHTING,1.3,44.4,O.ANTICIPATION,O.DRY_SKIN,O.POISON_TOUCH,490,83,106,65,86,65,85,75,50,172,c.MEDIUM_FAST,50,!0),new G(e.CARNIVINE,4,!1,!1,!1,"Bug Catcher Pokémon",I.GRASS,null,1.4,27,O.LEVITATE,O.NONE,O.NONE,454,74,100,72,90,72,46,200,70,159,c.SLOW,50,!1),new G(e.FINNEON,4,!1,!1,!1,"Wing Fish Pokémon",I.WATER,null,.4,7,O.SWIFT_SWIM,O.STORM_DRAIN,O.WATER_VEIL,330,49,49,56,49,61,66,190,70,66,c.ERRATIC,50,!0),new G(e.LUMINEON,4,!1,!1,!1,"Neon Pokémon",I.WATER,null,1.2,24,O.SWIFT_SWIM,O.STORM_DRAIN,O.WATER_VEIL,460,69,69,76,69,86,91,75,70,161,c.ERRATIC,50,!0),new G(e.MANTYKE,4,!1,!1,!1,"Kite Pokémon",I.WATER,I.FLYING,1,65,O.SWIFT_SWIM,O.WATER_ABSORB,O.WATER_VEIL,345,45,20,50,60,120,50,25,50,69,c.SLOW,50,!1),new G(e.SNOVER,4,!1,!1,!1,"Frost Tree Pokémon",I.GRASS,I.ICE,1,50.5,O.SNOW_WARNING,O.NONE,O.SOUNDPROOF,334,60,62,50,62,60,40,120,50,67,c.SLOW,50,!0),new G(e.ABOMASNOW,4,!1,!1,!1,"Frost Tree Pokémon",I.GRASS,I.ICE,2.2,135.5,O.SNOW_WARNING,O.NONE,O.SOUNDPROOF,494,90,92,75,92,85,60,60,50,173,c.SLOW,50,!0,!0,new Y("Normal","",I.GRASS,I.ICE,2.2,135.5,O.SNOW_WARNING,O.NONE,O.SOUNDPROOF,494,90,92,75,92,85,60,60,50,173,!0,null,!0),new Y("Mega",Ue.MEGA,I.GRASS,I.ICE,2.7,185,O.SNOW_WARNING,O.NONE,O.SNOW_WARNING,594,90,132,105,132,105,30,60,50,173,!0)),new G(e.WEAVILE,4,!1,!1,!1,"Sharp Claw Pokémon",I.DARK,I.ICE,1.1,34,O.PRESSURE,O.NONE,O.PICKPOCKET,510,70,120,65,45,85,125,45,35,179,c.MEDIUM_SLOW,50,!0),new G(e.MAGNEZONE,4,!1,!1,!1,"Magnet Area Pokémon",I.ELECTRIC,I.STEEL,1.2,180,O.MAGNET_PULL,O.STURDY,O.ANALYTIC,535,70,70,115,130,90,60,30,50,268,c.MEDIUM_FAST,null,!1),new G(e.LICKILICKY,4,!1,!1,!1,"Licking Pokémon",I.NORMAL,null,1.7,140,O.OWN_TEMPO,O.OBLIVIOUS,O.CLOUD_NINE,515,110,85,95,80,95,50,30,50,180,c.MEDIUM_FAST,50,!1),new G(e.RHYPERIOR,4,!1,!1,!1,"Drill Pokémon",I.GROUND,I.ROCK,2.4,282.8,O.LIGHTNING_ROD,O.SOLID_ROCK,O.RECKLESS,535,115,140,130,55,55,40,30,50,268,c.SLOW,50,!0),new G(e.TANGROWTH,4,!1,!1,!1,"Vine Pokémon",I.GRASS,null,2,128.6,O.CHLOROPHYLL,O.LEAF_GUARD,O.REGENERATOR,535,100,100,125,110,50,50,30,50,187,c.MEDIUM_FAST,50,!0),new G(e.ELECTIVIRE,4,!1,!1,!1,"Thunderbolt Pokémon",I.ELECTRIC,null,1.8,138.6,O.MOTOR_DRIVE,O.NONE,O.VITAL_SPIRIT,540,75,123,67,95,85,95,30,50,270,c.MEDIUM_FAST,75,!1),new G(e.MAGMORTAR,4,!1,!1,!1,"Blast Pokémon",I.FIRE,null,1.6,68,O.FLAME_BODY,O.NONE,O.VITAL_SPIRIT,540,75,95,67,125,95,83,30,50,270,c.MEDIUM_FAST,75,!1),new G(e.TOGEKISS,4,!1,!1,!1,"Jubilee Pokémon",I.FAIRY,I.FLYING,1.5,38,O.HUSTLE,O.SERENE_GRACE,O.SUPER_LUCK,545,85,50,95,120,115,80,30,50,273,c.FAST,87.5,!1),new G(e.YANMEGA,4,!1,!1,!1,"Ogre Darner Pokémon",I.BUG,I.FLYING,1.9,51.5,O.SPEED_BOOST,O.TINTED_LENS,O.FRISK,515,86,76,86,116,56,95,30,70,180,c.MEDIUM_FAST,50,!1),new G(e.LEAFEON,4,!1,!1,!1,"Verdant Pokémon",I.GRASS,null,1,25.5,O.LEAF_GUARD,O.NONE,O.CHLOROPHYLL,525,65,110,130,60,65,95,45,35,184,c.MEDIUM_FAST,87.5,!1),new G(e.GLACEON,4,!1,!1,!1,"Fresh Snow Pokémon",I.ICE,null,.8,25.9,O.SNOW_CLOAK,O.NONE,O.ICE_BODY,525,65,60,110,130,95,65,45,35,184,c.MEDIUM_FAST,87.5,!1),new G(e.GLISCOR,4,!1,!1,!1,"Fang Scorpion Pokémon",I.GROUND,I.FLYING,2,42.5,O.HYPER_CUTTER,O.SAND_VEIL,O.POISON_HEAL,510,75,95,125,45,75,95,30,70,179,c.MEDIUM_SLOW,50,!1),new G(e.MAMOSWINE,4,!1,!1,!1,"Twin Tusk Pokémon",I.ICE,I.GROUND,2.5,291,O.OBLIVIOUS,O.SNOW_CLOAK,O.THICK_FAT,530,110,130,80,70,60,80,50,50,265,c.SLOW,50,!0),new G(e.PORYGON_Z,4,!1,!1,!1,"Virtual Pokémon",I.NORMAL,null,.9,34,O.ADAPTABILITY,O.DOWNLOAD,O.ANALYTIC,535,85,80,70,135,75,90,30,50,268,c.MEDIUM_FAST,null,!1),new G(e.GALLADE,4,!1,!1,!1,"Blade Pokémon",I.PSYCHIC,I.FIGHTING,1.6,52,O.STEADFAST,O.SHARPNESS,O.JUSTIFIED,518,68,125,65,65,115,80,45,35,259,c.SLOW,100,!1,!0,new Y("Normal","",I.PSYCHIC,I.FIGHTING,1.6,52,O.STEADFAST,O.SHARPNESS,O.JUSTIFIED,518,68,125,65,65,115,80,45,35,259,!1,null,!0),new Y("Mega",Ue.MEGA,I.PSYCHIC,I.FIGHTING,1.6,56.4,O.SHARPNESS,O.SHARPNESS,O.SHARPNESS,618,68,165,95,65,115,110,45,35,259)),new G(e.PROBOPASS,4,!1,!1,!1,"Compass Pokémon",I.ROCK,I.STEEL,1.4,340,O.STURDY,O.MAGNET_PULL,O.SAND_FORCE,525,60,55,145,75,150,40,60,70,184,c.MEDIUM_FAST,50,!1),new G(e.DUSKNOIR,4,!1,!1,!1,"Gripper Pokémon",I.GHOST,null,2.2,106.6,O.PRESSURE,O.NONE,O.FRISK,525,45,100,135,65,135,45,45,35,263,c.FAST,50,!1),new G(e.FROSLASS,4,!1,!1,!1,"Snow Land Pokémon",I.ICE,I.GHOST,1.3,26.6,O.SNOW_CLOAK,O.NONE,O.CURSED_BODY,480,70,80,70,80,70,110,75,50,168,c.MEDIUM_FAST,0,!1),new G(e.ROTOM,4,!1,!1,!1,"Plasma Pokémon",I.ELECTRIC,I.GHOST,.3,.3,O.LEVITATE,O.NONE,O.NONE,440,50,50,77,95,77,91,45,50,154,c.MEDIUM_FAST,null,!1,!1,new Y("Normal","",I.ELECTRIC,I.GHOST,.3,.3,O.LEVITATE,O.NONE,O.NONE,440,50,50,77,95,77,91,45,50,154,!1,null,!0),new Y("Heat","heat",I.ELECTRIC,I.FIRE,.3,.3,O.LEVITATE,O.NONE,O.NONE,520,50,65,107,105,107,86,45,50,154,!1,null,!0),new Y("Wash","wash",I.ELECTRIC,I.WATER,.3,.3,O.LEVITATE,O.NONE,O.NONE,520,50,65,107,105,107,86,45,50,154,!1,null,!0),new Y("Frost","frost",I.ELECTRIC,I.ICE,.3,.3,O.LEVITATE,O.NONE,O.NONE,520,50,65,107,105,107,86,45,50,154,!1,null,!0),new Y("Fan","fan",I.ELECTRIC,I.FLYING,.3,.3,O.LEVITATE,O.NONE,O.NONE,520,50,65,107,105,107,86,45,50,154,!1,null,!0),new Y("Mow","mow",I.ELECTRIC,I.GRASS,.3,.3,O.LEVITATE,O.NONE,O.NONE,520,50,65,107,105,107,86,45,50,154,!1,null,!0)),new G(e.UXIE,4,!0,!1,!1,"Knowledge Pokémon",I.PSYCHIC,null,.3,.3,O.LEVITATE,O.NONE,O.NONE,580,75,75,130,75,130,95,3,140,290,c.SLOW,null,!1),new G(e.MESPRIT,4,!0,!1,!1,"Emotion Pokémon",I.PSYCHIC,null,.3,.3,O.LEVITATE,O.NONE,O.NONE,580,80,105,105,105,105,80,3,140,290,c.SLOW,null,!1),new G(e.AZELF,4,!0,!1,!1,"Willpower Pokémon",I.PSYCHIC,null,.3,.3,O.LEVITATE,O.NONE,O.NONE,580,75,125,70,125,70,115,3,140,290,c.SLOW,null,!1),new G(e.DIALGA,4,!1,!0,!1,"Temporal Pokémon",I.STEEL,I.DRAGON,5.4,683,O.PRESSURE,O.NONE,O.TELEPATHY,680,100,120,120,150,100,90,3,0,340,c.SLOW,null,!1,!1,new Y("Normal","",I.STEEL,I.DRAGON,5.4,683,O.PRESSURE,O.NONE,O.TELEPATHY,680,100,120,120,150,100,90,3,0,340,!1,null,!0),new Y("Origin Forme","origin",I.STEEL,I.DRAGON,7,848.7,O.PRESSURE,O.NONE,O.TELEPATHY,680,100,100,120,150,120,90,3,0,340)),new G(e.PALKIA,4,!1,!0,!1,"Spatial Pokémon",I.WATER,I.DRAGON,4.2,336,O.PRESSURE,O.NONE,O.TELEPATHY,680,90,120,100,150,120,100,3,0,340,c.SLOW,null,!1,!1,new Y("Normal","",I.WATER,I.DRAGON,4.2,336,O.PRESSURE,O.NONE,O.TELEPATHY,680,90,120,100,150,120,100,3,0,340,!1,null,!0),new Y("Origin Forme","origin",I.WATER,I.DRAGON,6.3,659,O.PRESSURE,O.NONE,O.TELEPATHY,680,90,100,100,150,120,120,3,0,340)),new G(e.HEATRAN,4,!0,!1,!1,"Lava Dome Pokémon",I.FIRE,I.STEEL,1.7,430,O.FLASH_FIRE,O.NONE,O.FLAME_BODY,600,91,90,106,130,106,77,3,100,300,c.SLOW,50,!1),new G(e.REGIGIGAS,4,!0,!1,!1,"Colossal Pokémon",I.NORMAL,null,3.7,420,O.SLOW_START,O.NONE,O.NORMALIZE,670,110,160,110,80,110,100,3,0,335,c.SLOW,null,!1),new G(e.GIRATINA,4,!1,!0,!1,"Renegade Pokémon",I.GHOST,I.DRAGON,4.5,750,O.PRESSURE,O.NONE,O.TELEPATHY,680,150,100,120,100,120,90,3,0,340,c.SLOW,null,!1,!0,new Y("Altered Forme","altered",I.GHOST,I.DRAGON,4.5,750,O.PRESSURE,O.NONE,O.TELEPATHY,680,150,100,120,100,120,90,3,0,340,!1,null,!0),new Y("Origin Forme","origin",I.GHOST,I.DRAGON,6.9,650,O.LEVITATE,O.NONE,O.NONE,680,150,120,100,120,100,90,3,0,340)),new G(e.CRESSELIA,4,!0,!1,!1,"Lunar Pokémon",I.PSYCHIC,null,1.5,85.6,O.LEVITATE,O.NONE,O.NONE,580,120,70,110,75,120,85,3,100,300,c.SLOW,0,!1),new G(e.PHIONE,4,!1,!1,!0,"Sea Drifter Pokémon",I.WATER,null,.4,3.1,O.HYDRATION,O.NONE,O.NONE,480,80,80,80,80,80,80,30,70,216,c.SLOW,null,!1),new G(e.MANAPHY,4,!1,!1,!0,"Seafaring Pokémon",I.WATER,null,.3,1.4,O.HYDRATION,O.NONE,O.NONE,600,100,100,100,100,100,100,3,70,270,c.SLOW,null,!1),new G(e.DARKRAI,4,!1,!1,!0,"Pitch-Black Pokémon",I.DARK,null,1.5,50.5,O.BAD_DREAMS,O.NONE,O.NONE,600,70,90,90,135,90,125,3,0,270,c.SLOW,null,!1),new G(e.SHAYMIN,4,!1,!1,!0,"Gratitude Pokémon",I.GRASS,null,.2,2.1,O.NATURAL_CURE,O.NONE,O.NONE,600,100,100,100,100,100,100,45,100,270,c.MEDIUM_SLOW,null,!1,!0,new Y("Land Forme","land",I.GRASS,null,.2,2.1,O.NATURAL_CURE,O.NONE,O.NONE,600,100,100,100,100,100,100,45,100,270,!1,null,!0),new Y("Sky Forme","sky",I.GRASS,I.FLYING,.4,5.2,O.SERENE_GRACE,O.NONE,O.NONE,600,100,103,75,120,75,127,45,100,270)),new G(e.ARCEUS,4,!1,!1,!0,"Alpha Pokémon",I.NORMAL,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324,c.SLOW,null,!1,!0,new Y("Normal","normal",I.NORMAL,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324,!1,null,!0),new Y("Fighting","fighting",I.FIGHTING,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new Y("Flying","flying",I.FLYING,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new Y("Poison","poison",I.POISON,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new Y("Ground","ground",I.GROUND,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new Y("Rock","rock",I.ROCK,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new Y("Bug","bug",I.BUG,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new Y("Ghost","ghost",I.GHOST,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new Y("Steel","steel",I.STEEL,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new Y("Fire","fire",I.FIRE,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new Y("Water","water",I.WATER,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new Y("Grass","grass",I.GRASS,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new Y("Electric","electric",I.ELECTRIC,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new Y("Psychic","psychic",I.PSYCHIC,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new Y("Ice","ice",I.ICE,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new Y("Dragon","dragon",I.DRAGON,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new Y("Dark","dark",I.DARK,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new Y("Fairy","fairy",I.FAIRY,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new Y("???","unknown",I.UNKNOWN,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324)),new G(e.VICTINI,5,!1,!1,!0,"Victory Pokémon",I.PSYCHIC,I.FIRE,.4,4,O.VICTORY_STAR,O.NONE,O.NONE,600,100,100,100,100,100,100,3,100,300,c.SLOW,null,!1),new G(e.SNIVY,5,!1,!1,!1,"Grass Snake Pokémon",I.GRASS,null,.6,8.1,O.OVERGROW,O.NONE,O.CONTRARY,308,45,45,55,45,55,63,45,70,62,c.MEDIUM_SLOW,87.5,!1),new G(e.SERVINE,5,!1,!1,!1,"Grass Snake Pokémon",I.GRASS,null,.8,16,O.OVERGROW,O.NONE,O.CONTRARY,413,60,60,75,60,75,83,45,70,145,c.MEDIUM_SLOW,87.5,!1),new G(e.SERPERIOR,5,!1,!1,!1,"Regal Pokémon",I.GRASS,null,3.3,63,O.OVERGROW,O.NONE,O.CONTRARY,528,75,75,95,75,95,113,45,70,238,c.MEDIUM_SLOW,87.5,!1),new G(e.TEPIG,5,!1,!1,!1,"Fire Pig Pokémon",I.FIRE,null,.5,9.9,O.BLAZE,O.NONE,O.THICK_FAT,308,65,63,45,45,45,45,45,70,62,c.MEDIUM_SLOW,87.5,!1),new G(e.PIGNITE,5,!1,!1,!1,"Fire Pig Pokémon",I.FIRE,I.FIGHTING,1,55.5,O.BLAZE,O.NONE,O.THICK_FAT,418,90,93,55,70,55,55,45,70,146,c.MEDIUM_SLOW,87.5,!1),new G(e.EMBOAR,5,!1,!1,!1,"Mega Fire Pig Pokémon",I.FIRE,I.FIGHTING,1.6,150,O.BLAZE,O.NONE,O.RECKLESS,528,110,123,65,100,65,65,45,70,238,c.MEDIUM_SLOW,87.5,!1),new G(e.OSHAWOTT,5,!1,!1,!1,"Sea Otter Pokémon",I.WATER,null,.5,5.9,O.TORRENT,O.NONE,O.SHELL_ARMOR,308,55,55,45,63,45,45,45,70,62,c.MEDIUM_SLOW,87.5,!1),new G(e.DEWOTT,5,!1,!1,!1,"Discipline Pokémon",I.WATER,null,.8,24.5,O.TORRENT,O.NONE,O.SHELL_ARMOR,413,75,75,60,83,60,60,45,70,145,c.MEDIUM_SLOW,87.5,!1),new G(e.SAMUROTT,5,!1,!1,!1,"Formidable Pokémon",I.WATER,null,1.5,94.6,O.TORRENT,O.NONE,O.SHELL_ARMOR,528,95,100,85,108,70,70,45,70,238,c.MEDIUM_SLOW,87.5,!1),new G(e.PATRAT,5,!1,!1,!1,"Scout Pokémon",I.NORMAL,null,.5,11.6,O.RUN_AWAY,O.KEEN_EYE,O.ANALYTIC,255,45,55,39,35,39,42,255,70,51,c.MEDIUM_FAST,50,!1),new G(e.WATCHOG,5,!1,!1,!1,"Lookout Pokémon",I.NORMAL,null,1.1,27,O.ILLUMINATE,O.KEEN_EYE,O.ANALYTIC,420,60,85,69,60,69,77,255,70,147,c.MEDIUM_FAST,50,!1),new G(e.LILLIPUP,5,!1,!1,!1,"Puppy Pokémon",I.NORMAL,null,.4,4.1,O.VITAL_SPIRIT,O.PICKUP,O.RUN_AWAY,275,45,60,45,25,45,55,255,50,55,c.MEDIUM_SLOW,50,!1),new G(e.HERDIER,5,!1,!1,!1,"Loyal Dog Pokémon",I.NORMAL,null,.9,14.7,O.INTIMIDATE,O.SAND_RUSH,O.SCRAPPY,370,65,80,65,35,65,60,120,50,130,c.MEDIUM_SLOW,50,!1),new G(e.STOUTLAND,5,!1,!1,!1,"Big-Hearted Pokémon",I.NORMAL,null,1.2,61,O.INTIMIDATE,O.SAND_RUSH,O.SCRAPPY,500,85,110,90,45,90,80,45,50,250,c.MEDIUM_SLOW,50,!1),new G(e.PURRLOIN,5,!1,!1,!1,"Devious Pokémon",I.DARK,null,.4,10.1,O.LIMBER,O.UNBURDEN,O.PRANKSTER,281,41,50,37,50,37,66,255,50,56,c.MEDIUM_FAST,50,!1),new G(e.LIEPARD,5,!1,!1,!1,"Cruel Pokémon",I.DARK,null,1.1,37.5,O.LIMBER,O.UNBURDEN,O.PRANKSTER,446,64,88,50,88,50,106,90,50,156,c.MEDIUM_FAST,50,!1),new G(e.PANSAGE,5,!1,!1,!1,"Grass Monkey Pokémon",I.GRASS,null,.6,10.5,O.GLUTTONY,O.NONE,O.OVERGROW,316,50,53,48,53,48,64,190,70,63,c.MEDIUM_FAST,87.5,!1),new G(e.SIMISAGE,5,!1,!1,!1,"Thorn Monkey Pokémon",I.GRASS,null,1.1,30.5,O.GLUTTONY,O.NONE,O.OVERGROW,498,75,98,63,98,63,101,75,70,174,c.MEDIUM_FAST,87.5,!1),new G(e.PANSEAR,5,!1,!1,!1,"High Temp Pokémon",I.FIRE,null,.6,11,O.GLUTTONY,O.NONE,O.BLAZE,316,50,53,48,53,48,64,190,70,63,c.MEDIUM_FAST,87.5,!1),new G(e.SIMISEAR,5,!1,!1,!1,"Ember Pokémon",I.FIRE,null,1,28,O.GLUTTONY,O.NONE,O.BLAZE,498,75,98,63,98,63,101,75,70,174,c.MEDIUM_FAST,87.5,!1),new G(e.PANPOUR,5,!1,!1,!1,"Spray Pokémon",I.WATER,null,.6,13.5,O.GLUTTONY,O.NONE,O.TORRENT,316,50,53,48,53,48,64,190,70,63,c.MEDIUM_FAST,87.5,!1),new G(e.SIMIPOUR,5,!1,!1,!1,"Geyser Pokémon",I.WATER,null,1,29,O.GLUTTONY,O.NONE,O.TORRENT,498,75,98,63,98,63,101,75,70,174,c.MEDIUM_FAST,87.5,!1),new G(e.MUNNA,5,!1,!1,!1,"Dream Eater Pokémon",I.PSYCHIC,null,.6,23.3,O.FOREWARN,O.SYNCHRONIZE,O.TELEPATHY,292,76,25,45,67,55,24,190,50,58,c.FAST,50,!1),new G(e.MUSHARNA,5,!1,!1,!1,"Drowsing Pokémon",I.PSYCHIC,null,1.1,60.5,O.FOREWARN,O.SYNCHRONIZE,O.TELEPATHY,487,116,55,85,107,95,29,75,50,170,c.FAST,50,!1),new G(e.PIDOVE,5,!1,!1,!1,"Tiny Pigeon Pokémon",I.NORMAL,I.FLYING,.3,2.1,O.BIG_PECKS,O.SUPER_LUCK,O.RIVALRY,264,50,55,50,36,30,43,255,50,53,c.MEDIUM_SLOW,50,!1),new G(e.TRANQUILL,5,!1,!1,!1,"Wild Pigeon Pokémon",I.NORMAL,I.FLYING,.6,15,O.BIG_PECKS,O.SUPER_LUCK,O.RIVALRY,358,62,77,62,50,42,65,120,50,125,c.MEDIUM_SLOW,50,!1),new G(e.UNFEZANT,5,!1,!1,!1,"Proud Pokémon",I.NORMAL,I.FLYING,1.2,29,O.BIG_PECKS,O.SUPER_LUCK,O.RIVALRY,488,80,115,80,65,55,93,45,50,244,c.MEDIUM_SLOW,50,!0),new G(e.BLITZLE,5,!1,!1,!1,"Electrified Pokémon",I.ELECTRIC,null,.8,29.8,O.LIGHTNING_ROD,O.MOTOR_DRIVE,O.SAP_SIPPER,295,45,60,32,50,32,76,190,70,59,c.MEDIUM_FAST,50,!1),new G(e.ZEBSTRIKA,5,!1,!1,!1,"Thunderbolt Pokémon",I.ELECTRIC,null,1.6,79.5,O.LIGHTNING_ROD,O.MOTOR_DRIVE,O.SAP_SIPPER,497,75,100,63,80,63,116,75,70,174,c.MEDIUM_FAST,50,!1),new G(e.ROGGENROLA,5,!1,!1,!1,"Mantle Pokémon",I.ROCK,null,.4,18,O.STURDY,O.WEAK_ARMOR,O.SAND_FORCE,280,55,75,85,25,25,15,255,50,56,c.MEDIUM_SLOW,50,!1),new G(e.BOLDORE,5,!1,!1,!1,"Ore Pokémon",I.ROCK,null,.9,102,O.STURDY,O.WEAK_ARMOR,O.SAND_FORCE,390,70,105,105,50,40,20,120,50,137,c.MEDIUM_SLOW,50,!1),new G(e.GIGALITH,5,!1,!1,!1,"Compressed Pokémon",I.ROCK,null,1.7,260,O.STURDY,O.SAND_STREAM,O.SAND_FORCE,515,85,135,130,60,80,25,45,50,258,c.MEDIUM_SLOW,50,!1),new G(e.WOOBAT,5,!1,!1,!1,"Bat Pokémon",I.PSYCHIC,I.FLYING,.4,2.1,O.UNAWARE,O.KLUTZ,O.SIMPLE,323,65,45,43,55,43,72,190,50,65,c.MEDIUM_FAST,50,!1),new G(e.SWOOBAT,5,!1,!1,!1,"Courting Pokémon",I.PSYCHIC,I.FLYING,.9,10.5,O.UNAWARE,O.KLUTZ,O.SIMPLE,425,67,57,55,77,55,114,45,50,149,c.MEDIUM_FAST,50,!1),new G(e.DRILBUR,5,!1,!1,!1,"Mole Pokémon",I.GROUND,null,.3,8.5,O.SAND_RUSH,O.SAND_FORCE,O.MOLD_BREAKER,328,60,85,40,30,45,68,120,50,66,c.MEDIUM_FAST,50,!1),new G(e.EXCADRILL,5,!1,!1,!1,"Subterrene Pokémon",I.GROUND,I.STEEL,.7,40.4,O.SAND_RUSH,O.SAND_FORCE,O.MOLD_BREAKER,508,110,135,60,50,65,88,60,50,178,c.MEDIUM_FAST,50,!1),new G(e.AUDINO,5,!1,!1,!1,"Hearing Pokémon",I.NORMAL,null,1.1,31,O.HEALER,O.REGENERATOR,O.KLUTZ,445,103,60,86,60,86,50,255,50,390,c.FAST,50,!1,!0,new Y("Normal","",I.NORMAL,null,1.1,31,O.HEALER,O.REGENERATOR,O.KLUTZ,445,103,60,86,60,86,50,255,50,390,!1,null,!0),new Y("Mega",Ue.MEGA,I.NORMAL,I.FAIRY,1.5,32,O.REGENERATOR,O.REGENERATOR,O.REGENERATOR,545,103,60,126,80,126,50,255,50,390)),new G(e.TIMBURR,5,!1,!1,!1,"Muscular Pokémon",I.FIGHTING,null,.6,12.5,O.GUTS,O.SHEER_FORCE,O.IRON_FIST,305,75,80,55,25,35,35,180,70,61,c.MEDIUM_SLOW,75,!1),new G(e.GURDURR,5,!1,!1,!1,"Muscular Pokémon",I.FIGHTING,null,1.2,40,O.GUTS,O.SHEER_FORCE,O.IRON_FIST,405,85,105,85,40,50,40,90,50,142,c.MEDIUM_SLOW,75,!1),new G(e.CONKELDURR,5,!1,!1,!1,"Muscular Pokémon",I.FIGHTING,null,1.4,87,O.GUTS,O.SHEER_FORCE,O.IRON_FIST,505,105,140,95,55,65,45,45,50,253,c.MEDIUM_SLOW,75,!1),new G(e.TYMPOLE,5,!1,!1,!1,"Tadpole Pokémon",I.WATER,null,.5,4.5,O.SWIFT_SWIM,O.HYDRATION,O.WATER_ABSORB,294,50,50,40,50,40,64,255,50,59,c.MEDIUM_SLOW,50,!1),new G(e.PALPITOAD,5,!1,!1,!1,"Vibration Pokémon",I.WATER,I.GROUND,.8,17,O.SWIFT_SWIM,O.HYDRATION,O.WATER_ABSORB,384,75,65,55,65,55,69,120,50,134,c.MEDIUM_SLOW,50,!1),new G(e.SEISMITOAD,5,!1,!1,!1,"Vibration Pokémon",I.WATER,I.GROUND,1.5,62,O.SWIFT_SWIM,O.POISON_TOUCH,O.WATER_ABSORB,509,105,95,75,85,75,74,45,50,255,c.MEDIUM_SLOW,50,!1),new G(e.THROH,5,!1,!1,!1,"Judo Pokémon",I.FIGHTING,null,1.3,55.5,O.GUTS,O.INNER_FOCUS,O.MOLD_BREAKER,465,120,100,85,30,85,45,45,50,163,c.MEDIUM_FAST,100,!1),new G(e.SAWK,5,!1,!1,!1,"Karate Pokémon",I.FIGHTING,null,1.4,51,O.STURDY,O.INNER_FOCUS,O.MOLD_BREAKER,465,75,125,75,30,75,85,45,50,163,c.MEDIUM_FAST,100,!1),new G(e.SEWADDLE,5,!1,!1,!1,"Sewing Pokémon",I.BUG,I.GRASS,.3,2.5,O.SWARM,O.CHLOROPHYLL,O.OVERCOAT,310,45,53,70,40,60,42,255,70,62,c.MEDIUM_SLOW,50,!1),new G(e.SWADLOON,5,!1,!1,!1,"Leaf-Wrapped Pokémon",I.BUG,I.GRASS,.5,7.3,O.LEAF_GUARD,O.CHLOROPHYLL,O.OVERCOAT,380,55,63,90,50,80,42,120,70,133,c.MEDIUM_SLOW,50,!1),new G(e.LEAVANNY,5,!1,!1,!1,"Nurturing Pokémon",I.BUG,I.GRASS,1.2,20.5,O.SWARM,O.CHLOROPHYLL,O.OVERCOAT,500,75,103,80,70,80,92,45,70,225,c.MEDIUM_SLOW,50,!1),new G(e.VENIPEDE,5,!1,!1,!1,"Centipede Pokémon",I.BUG,I.POISON,.4,5.3,O.POISON_POINT,O.SWARM,O.SPEED_BOOST,260,30,45,59,30,39,57,255,50,52,c.MEDIUM_SLOW,50,!1),new G(e.WHIRLIPEDE,5,!1,!1,!1,"Curlipede Pokémon",I.BUG,I.POISON,1.2,58.5,O.POISON_POINT,O.SWARM,O.SPEED_BOOST,360,40,55,99,40,79,47,120,50,126,c.MEDIUM_SLOW,50,!1),new G(e.SCOLIPEDE,5,!1,!1,!1,"Megapede Pokémon",I.BUG,I.POISON,2.5,200.5,O.POISON_POINT,O.SWARM,O.SPEED_BOOST,485,60,100,89,55,69,112,45,50,243,c.MEDIUM_SLOW,50,!1),new G(e.COTTONEE,5,!1,!1,!1,"Cotton Puff Pokémon",I.GRASS,I.FAIRY,.3,.6,O.PRANKSTER,O.INFILTRATOR,O.CHLOROPHYLL,280,40,27,60,37,50,66,190,50,56,c.MEDIUM_FAST,50,!1),new G(e.WHIMSICOTT,5,!1,!1,!1,"Windveiled Pokémon",I.GRASS,I.FAIRY,.7,6.6,O.PRANKSTER,O.INFILTRATOR,O.CHLOROPHYLL,480,60,67,85,77,75,116,75,50,168,c.MEDIUM_FAST,50,!1),new G(e.PETILIL,5,!1,!1,!1,"Bulb Pokémon",I.GRASS,null,.5,6.6,O.CHLOROPHYLL,O.OWN_TEMPO,O.LEAF_GUARD,280,45,35,50,70,50,30,190,50,56,c.MEDIUM_FAST,0,!1),new G(e.LILLIGANT,5,!1,!1,!1,"Flowering Pokémon",I.GRASS,null,1.1,16.3,O.CHLOROPHYLL,O.OWN_TEMPO,O.LEAF_GUARD,480,70,60,75,110,75,90,75,50,168,c.MEDIUM_FAST,0,!1),new G(e.BASCULIN,5,!1,!1,!1,"Hostile Pokémon",I.WATER,null,1,18,O.RECKLESS,O.ADAPTABILITY,O.MOLD_BREAKER,460,70,92,65,80,55,98,25,50,161,c.MEDIUM_FAST,50,!1,!1,new Y("Red-Striped Form","red-striped",I.WATER,null,1,18,O.RECKLESS,O.ADAPTABILITY,O.MOLD_BREAKER,460,70,92,65,80,55,98,25,50,161,!1,null,!0),new Y("Blue-Striped Form","blue-striped",I.WATER,null,1,18,O.ROCK_HEAD,O.ADAPTABILITY,O.MOLD_BREAKER,460,70,92,65,80,55,98,25,50,161,!1,null,!0),new Y("White-Striped Form","white-striped",I.WATER,null,1,18,O.RATTLED,O.ADAPTABILITY,O.MOLD_BREAKER,460,70,92,65,80,55,98,25,50,161,!1,null,!0)),new G(e.SANDILE,5,!1,!1,!1,"Desert Croc Pokémon",I.GROUND,I.DARK,.7,15.2,O.INTIMIDATE,O.MOXIE,O.ANGER_POINT,292,50,72,35,35,35,65,180,50,58,c.MEDIUM_SLOW,50,!1),new G(e.KROKOROK,5,!1,!1,!1,"Desert Croc Pokémon",I.GROUND,I.DARK,1,33.4,O.INTIMIDATE,O.MOXIE,O.ANGER_POINT,351,60,82,45,45,45,74,90,50,123,c.MEDIUM_SLOW,50,!1),new G(e.KROOKODILE,5,!1,!1,!1,"Intimidation Pokémon",I.GROUND,I.DARK,1.5,96.3,O.INTIMIDATE,O.MOXIE,O.ANGER_POINT,519,95,117,80,65,70,92,45,50,260,c.MEDIUM_SLOW,50,!1),new G(e.DARUMAKA,5,!1,!1,!1,"Zen Charm Pokémon",I.FIRE,null,.6,37.5,O.HUSTLE,O.NONE,O.INNER_FOCUS,315,70,90,45,15,45,50,120,50,63,c.MEDIUM_SLOW,50,!1),new G(e.DARMANITAN,5,!1,!1,!1,"Blazing Pokémon",I.FIRE,null,1.3,92.9,O.SHEER_FORCE,O.NONE,O.ZEN_MODE,480,105,140,55,30,55,95,60,50,168,c.MEDIUM_SLOW,50,!1,!0,new Y("Standard Mode","",I.FIRE,null,1.3,92.9,O.SHEER_FORCE,O.NONE,O.ZEN_MODE,480,105,140,55,30,55,95,60,50,168,!1,null,!0),new Y("Zen Mode","zen",I.FIRE,I.PSYCHIC,1.3,92.9,O.SHEER_FORCE,O.NONE,O.ZEN_MODE,540,105,30,105,140,105,55,60,50,168)),new G(e.MARACTUS,5,!1,!1,!1,"Cactus Pokémon",I.GRASS,null,1,28,O.WATER_ABSORB,O.CHLOROPHYLL,O.STORM_DRAIN,461,75,86,67,106,67,60,255,50,161,c.MEDIUM_FAST,50,!1),new G(e.DWEBBLE,5,!1,!1,!1,"Rock Inn Pokémon",I.BUG,I.ROCK,.3,14.5,O.STURDY,O.SHELL_ARMOR,O.WEAK_ARMOR,325,50,65,85,35,35,55,190,50,65,c.MEDIUM_FAST,50,!1),new G(e.CRUSTLE,5,!1,!1,!1,"Stone Home Pokémon",I.BUG,I.ROCK,1.4,200,O.STURDY,O.SHELL_ARMOR,O.WEAK_ARMOR,485,70,105,125,65,75,45,75,50,170,c.MEDIUM_FAST,50,!1),new G(e.SCRAGGY,5,!1,!1,!1,"Shedding Pokémon",I.DARK,I.FIGHTING,.6,11.8,O.SHED_SKIN,O.MOXIE,O.INTIMIDATE,348,50,75,70,35,70,48,180,35,70,c.MEDIUM_FAST,50,!1),new G(e.SCRAFTY,5,!1,!1,!1,"Hoodlum Pokémon",I.DARK,I.FIGHTING,1.1,30,O.SHED_SKIN,O.MOXIE,O.INTIMIDATE,488,65,90,115,45,115,58,90,50,171,c.MEDIUM_FAST,50,!1),new G(e.SIGILYPH,5,!1,!1,!1,"Avianoid Pokémon",I.PSYCHIC,I.FLYING,1.4,14,O.WONDER_SKIN,O.MAGIC_GUARD,O.TINTED_LENS,490,72,58,80,103,80,97,45,50,172,c.MEDIUM_FAST,50,!1),new G(e.YAMASK,5,!1,!1,!1,"Spirit Pokémon",I.GHOST,null,.5,1.5,O.MUMMY,O.NONE,O.NONE,303,38,30,85,55,65,30,190,50,61,c.MEDIUM_FAST,50,!1),new G(e.COFAGRIGUS,5,!1,!1,!1,"Coffin Pokémon",I.GHOST,null,1.7,76.5,O.MUMMY,O.NONE,O.NONE,483,58,50,145,95,105,30,90,50,169,c.MEDIUM_FAST,50,!1),new G(e.TIRTOUGA,5,!1,!1,!1,"Prototurtle Pokémon",I.WATER,I.ROCK,.7,16.5,O.SOLID_ROCK,O.STURDY,O.SWIFT_SWIM,355,54,78,103,53,45,22,45,50,71,c.MEDIUM_FAST,87.5,!1),new G(e.CARRACOSTA,5,!1,!1,!1,"Prototurtle Pokémon",I.WATER,I.ROCK,1.2,81,O.SOLID_ROCK,O.STURDY,O.SWIFT_SWIM,495,74,108,133,83,65,32,45,50,173,c.MEDIUM_FAST,87.5,!1),new G(e.ARCHEN,5,!1,!1,!1,"First Bird Pokémon",I.ROCK,I.FLYING,.5,9.5,O.DEFEATIST,O.NONE,O.WIMP_OUT,401,55,112,45,74,45,70,45,50,71,c.MEDIUM_FAST,87.5,!1),new G(e.ARCHEOPS,5,!1,!1,!1,"First Bird Pokémon",I.ROCK,I.FLYING,1.4,32,O.DEFEATIST,O.NONE,O.EMERGENCY_EXIT,567,75,140,65,112,65,110,45,50,177,c.MEDIUM_FAST,87.5,!1),new G(e.TRUBBISH,5,!1,!1,!1,"Trash Bag Pokémon",I.POISON,null,.6,31,O.STENCH,O.STICKY_HOLD,O.AFTERMATH,329,50,50,62,40,62,65,190,50,66,c.MEDIUM_FAST,50,!1),new G(e.GARBODOR,5,!1,!1,!1,"Trash Heap Pokémon",I.POISON,null,1.9,107.3,O.STENCH,O.WEAK_ARMOR,O.AFTERMATH,474,80,95,82,60,82,75,60,50,166,c.MEDIUM_FAST,50,!1,!0,new Y("Normal","",I.POISON,null,1.9,107.3,O.STENCH,O.WEAK_ARMOR,O.AFTERMATH,474,80,95,82,60,82,75,60,50,166,!1,null,!0),new Y("G-Max",Ue.GIGANTAMAX,I.POISON,I.STEEL,21,999.9,O.TOXIC_DEBRIS,O.TOXIC_DEBRIS,O.TOXIC_DEBRIS,574,135,125,102,57,102,53,60,50,166)),new G(e.ZORUA,5,!1,!1,!1,"Tricky Fox Pokémon",I.DARK,null,.7,12.5,O.ILLUSION,O.NONE,O.NONE,330,40,65,40,80,40,65,75,50,66,c.MEDIUM_SLOW,87.5,!1),new G(e.ZOROARK,5,!1,!1,!1,"Illusion Fox Pokémon",I.DARK,null,1.6,81.1,O.ILLUSION,O.NONE,O.NONE,510,60,105,60,120,60,105,45,50,179,c.MEDIUM_SLOW,87.5,!1),new G(e.MINCCINO,5,!1,!1,!1,"Chinchilla Pokémon",I.NORMAL,null,.4,5.8,O.CUTE_CHARM,O.TECHNICIAN,O.SKILL_LINK,300,55,50,40,40,40,75,255,50,60,c.FAST,25,!1),new G(e.CINCCINO,5,!1,!1,!1,"Scarf Pokémon",I.NORMAL,null,.5,7.5,O.CUTE_CHARM,O.TECHNICIAN,O.SKILL_LINK,470,75,95,60,65,60,115,60,50,165,c.FAST,25,!1),new G(e.GOTHITA,5,!1,!1,!1,"Fixation Pokémon",I.PSYCHIC,null,.4,5.8,O.FRISK,O.COMPETITIVE,O.SHADOW_TAG,290,45,30,50,55,65,45,200,50,58,c.MEDIUM_SLOW,25,!1),new G(e.GOTHORITA,5,!1,!1,!1,"Manipulate Pokémon",I.PSYCHIC,null,.7,18,O.FRISK,O.COMPETITIVE,O.SHADOW_TAG,390,60,45,70,75,85,55,100,50,137,c.MEDIUM_SLOW,25,!1),new G(e.GOTHITELLE,5,!1,!1,!1,"Astral Body Pokémon",I.PSYCHIC,null,1.5,44,O.FRISK,O.COMPETITIVE,O.SHADOW_TAG,490,70,55,95,95,110,65,50,50,245,c.MEDIUM_SLOW,25,!1),new G(e.SOLOSIS,5,!1,!1,!1,"Cell Pokémon",I.PSYCHIC,null,.3,1,O.OVERCOAT,O.MAGIC_GUARD,O.REGENERATOR,290,45,30,40,105,50,20,200,50,58,c.MEDIUM_SLOW,50,!1),new G(e.DUOSION,5,!1,!1,!1,"Mitosis Pokémon",I.PSYCHIC,null,.6,8,O.OVERCOAT,O.MAGIC_GUARD,O.REGENERATOR,370,65,40,50,125,60,30,100,50,130,c.MEDIUM_SLOW,50,!1),new G(e.REUNICLUS,5,!1,!1,!1,"Multiplying Pokémon",I.PSYCHIC,null,1,20.1,O.OVERCOAT,O.MAGIC_GUARD,O.REGENERATOR,490,110,65,75,125,85,30,50,50,245,c.MEDIUM_SLOW,50,!1),new G(e.DUCKLETT,5,!1,!1,!1,"Water Bird Pokémon",I.WATER,I.FLYING,.5,5.5,O.KEEN_EYE,O.BIG_PECKS,O.HYDRATION,305,62,44,50,44,50,55,190,70,61,c.MEDIUM_FAST,50,!1),new G(e.SWANNA,5,!1,!1,!1,"White Bird Pokémon",I.WATER,I.FLYING,1.3,24.2,O.KEEN_EYE,O.BIG_PECKS,O.HYDRATION,473,75,87,63,87,63,98,45,70,166,c.MEDIUM_FAST,50,!1),new G(e.VANILLITE,5,!1,!1,!1,"Fresh Snow Pokémon",I.ICE,null,.4,5.7,O.ICE_BODY,O.SNOW_CLOAK,O.WEAK_ARMOR,305,36,50,50,65,60,44,255,50,61,c.SLOW,50,!1),new G(e.VANILLISH,5,!1,!1,!1,"Icy Snow Pokémon",I.ICE,null,1.1,41,O.ICE_BODY,O.SNOW_CLOAK,O.WEAK_ARMOR,395,51,65,65,80,75,59,120,50,138,c.SLOW,50,!1),new G(e.VANILLUXE,5,!1,!1,!1,"Snowstorm Pokémon",I.ICE,null,1.3,57.5,O.ICE_BODY,O.SNOW_WARNING,O.WEAK_ARMOR,535,71,95,85,110,95,79,45,50,268,c.SLOW,50,!1),new G(e.DEERLING,5,!1,!1,!1,"Season Pokémon",I.NORMAL,I.GRASS,.6,19.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,335,60,60,50,40,50,75,190,70,67,c.MEDIUM_FAST,50,!1,!0,new Y("Spring Form","spring",I.NORMAL,I.GRASS,.6,19.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,335,60,60,50,40,50,75,190,70,67,!1,null,!0),new Y("Summer Form","summer",I.NORMAL,I.GRASS,.6,19.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,335,60,60,50,40,50,75,190,70,67,!1,null,!0),new Y("Autumn Form","autumn",I.NORMAL,I.GRASS,.6,19.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,335,60,60,50,40,50,75,190,70,67,!1,null,!0),new Y("Winter Form","winter",I.NORMAL,I.GRASS,.6,19.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,335,60,60,50,40,50,75,190,70,67,!1,null,!0)),new G(e.SAWSBUCK,5,!1,!1,!1,"Season Pokémon",I.NORMAL,I.GRASS,1.9,92.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,475,80,100,70,60,70,95,75,70,166,c.MEDIUM_FAST,50,!1,!0,new Y("Spring Form","spring",I.NORMAL,I.GRASS,1.9,92.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,475,80,100,70,60,70,95,75,70,166,!1,null,!0),new Y("Summer Form","summer",I.NORMAL,I.GRASS,1.9,92.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,475,80,100,70,60,70,95,75,70,166,!1,null,!0),new Y("Autumn Form","autumn",I.NORMAL,I.GRASS,1.9,92.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,475,80,100,70,60,70,95,75,70,166,!1,null,!0),new Y("Winter Form","winter",I.NORMAL,I.GRASS,1.9,92.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,475,80,100,70,60,70,95,75,70,166,!1,null,!0)),new G(e.EMOLGA,5,!1,!1,!1,"Sky Squirrel Pokémon",I.ELECTRIC,I.FLYING,.4,5,O.STATIC,O.NONE,O.MOTOR_DRIVE,428,55,75,60,75,60,103,200,50,150,c.MEDIUM_FAST,50,!1),new G(e.KARRABLAST,5,!1,!1,!1,"Clamping Pokémon",I.BUG,null,.5,5.9,O.SWARM,O.SHED_SKIN,O.NO_GUARD,315,50,75,45,40,45,60,200,50,63,c.MEDIUM_FAST,50,!1),new G(e.ESCAVALIER,5,!1,!1,!1,"Cavalry Pokémon",I.BUG,I.STEEL,1,33,O.SWARM,O.SHELL_ARMOR,O.OVERCOAT,495,70,135,105,60,105,20,75,50,173,c.MEDIUM_FAST,50,!1),new G(e.FOONGUS,5,!1,!1,!1,"Mushroom Pokémon",I.GRASS,I.POISON,.2,1,O.EFFECT_SPORE,O.NONE,O.REGENERATOR,294,69,55,45,55,55,15,190,50,59,c.MEDIUM_FAST,50,!1),new G(e.AMOONGUSS,5,!1,!1,!1,"Mushroom Pokémon",I.GRASS,I.POISON,.6,10.5,O.EFFECT_SPORE,O.NONE,O.REGENERATOR,464,114,85,70,85,80,30,75,50,162,c.MEDIUM_FAST,50,!1),new G(e.FRILLISH,5,!1,!1,!1,"Floating Pokémon",I.WATER,I.GHOST,1.2,33,O.WATER_ABSORB,O.CURSED_BODY,O.DAMP,335,55,40,50,65,85,40,190,50,67,c.MEDIUM_FAST,50,!0),new G(e.JELLICENT,5,!1,!1,!1,"Floating Pokémon",I.WATER,I.GHOST,2.2,135,O.WATER_ABSORB,O.CURSED_BODY,O.DAMP,480,100,60,70,85,105,60,60,50,168,c.MEDIUM_FAST,50,!0),new G(e.ALOMOMOLA,5,!1,!1,!1,"Caring Pokémon",I.WATER,null,1.2,31.6,O.HEALER,O.HYDRATION,O.REGENERATOR,470,165,75,80,40,45,65,75,70,165,c.FAST,50,!1),new G(e.JOLTIK,5,!1,!1,!1,"Attaching Pokémon",I.BUG,I.ELECTRIC,.1,.6,O.COMPOUND_EYES,O.UNNERVE,O.SWARM,319,50,47,50,57,50,65,190,50,64,c.MEDIUM_FAST,50,!1),new G(e.GALVANTULA,5,!1,!1,!1,"EleSpider Pokémon",I.BUG,I.ELECTRIC,.8,14.3,O.COMPOUND_EYES,O.UNNERVE,O.SWARM,472,70,77,60,97,60,108,75,50,165,c.MEDIUM_FAST,50,!1),new G(e.FERROSEED,5,!1,!1,!1,"Thorn Seed Pokémon",I.GRASS,I.STEEL,.6,18.8,O.IRON_BARBS,O.NONE,O.ANTICIPATION,305,44,50,91,24,86,10,255,50,61,c.MEDIUM_FAST,50,!1),new G(e.FERROTHORN,5,!1,!1,!1,"Thorn Pod Pokémon",I.GRASS,I.STEEL,1,110,O.IRON_BARBS,O.NONE,O.ANTICIPATION,489,74,94,131,54,116,20,90,50,171,c.MEDIUM_FAST,50,!1),new G(e.KLINK,5,!1,!1,!1,"Gear Pokémon",I.STEEL,null,.3,21,O.PLUS,O.MINUS,O.CLEAR_BODY,300,40,55,70,45,60,30,130,50,60,c.MEDIUM_SLOW,null,!1),new G(e.KLANG,5,!1,!1,!1,"Gear Pokémon",I.STEEL,null,.6,51,O.PLUS,O.MINUS,O.CLEAR_BODY,440,60,80,95,70,85,50,60,50,154,c.MEDIUM_SLOW,null,!1),new G(e.KLINKLANG,5,!1,!1,!1,"Gear Pokémon",I.STEEL,null,.6,81,O.PLUS,O.MINUS,O.CLEAR_BODY,520,60,100,115,70,85,90,30,50,260,c.MEDIUM_SLOW,null,!1),new G(e.TYNAMO,5,!1,!1,!1,"EleFish Pokémon",I.ELECTRIC,null,.2,.3,O.LEVITATE,O.NONE,O.NONE,275,35,55,40,45,40,60,190,70,55,c.SLOW,50,!1),new G(e.EELEKTRIK,5,!1,!1,!1,"EleFish Pokémon",I.ELECTRIC,null,1.2,22,O.LEVITATE,O.NONE,O.NONE,405,65,85,70,75,70,40,60,70,142,c.SLOW,50,!1),new G(e.EELEKTROSS,5,!1,!1,!1,"EleFish Pokémon",I.ELECTRIC,null,2.1,80.5,O.LEVITATE,O.NONE,O.NONE,515,85,115,80,105,80,50,30,70,232,c.SLOW,50,!1),new G(e.ELGYEM,5,!1,!1,!1,"Cerebral Pokémon",I.PSYCHIC,null,.5,9,O.TELEPATHY,O.SYNCHRONIZE,O.ANALYTIC,335,55,55,55,85,55,30,255,50,67,c.MEDIUM_FAST,50,!1),new G(e.BEHEEYEM,5,!1,!1,!1,"Cerebral Pokémon",I.PSYCHIC,null,1,34.5,O.TELEPATHY,O.SYNCHRONIZE,O.ANALYTIC,485,75,75,75,125,95,40,90,50,170,c.MEDIUM_FAST,50,!1),new G(e.LITWICK,5,!1,!1,!1,"Candle Pokémon",I.GHOST,I.FIRE,.3,3.1,O.FLASH_FIRE,O.FLAME_BODY,O.INFILTRATOR,275,50,30,55,65,55,20,190,50,55,c.MEDIUM_SLOW,50,!1),new G(e.LAMPENT,5,!1,!1,!1,"Lamp Pokémon",I.GHOST,I.FIRE,.6,13,O.FLASH_FIRE,O.FLAME_BODY,O.INFILTRATOR,370,60,40,60,95,60,55,90,50,130,c.MEDIUM_SLOW,50,!1),new G(e.CHANDELURE,5,!1,!1,!1,"Luring Pokémon",I.GHOST,I.FIRE,1,34.3,O.FLASH_FIRE,O.FLAME_BODY,O.INFILTRATOR,520,60,55,90,145,90,80,45,50,260,c.MEDIUM_SLOW,50,!1),new G(e.AXEW,5,!1,!1,!1,"Tusk Pokémon",I.DRAGON,null,.6,18,O.RIVALRY,O.MOLD_BREAKER,O.UNNERVE,320,46,87,60,30,40,57,75,35,64,c.SLOW,50,!1),new G(e.FRAXURE,5,!1,!1,!1,"Axe Jaw Pokémon",I.DRAGON,null,1,36,O.RIVALRY,O.MOLD_BREAKER,O.UNNERVE,410,66,117,70,40,50,67,60,35,144,c.SLOW,50,!1),new G(e.HAXORUS,5,!1,!1,!1,"Axe Jaw Pokémon",I.DRAGON,null,1.8,105.5,O.RIVALRY,O.MOLD_BREAKER,O.UNNERVE,540,76,147,90,60,70,97,45,35,270,c.SLOW,50,!1),new G(e.CUBCHOO,5,!1,!1,!1,"Chill Pokémon",I.ICE,null,.5,8.5,O.SNOW_CLOAK,O.SLUSH_RUSH,O.RATTLED,305,55,70,40,60,40,40,120,50,61,c.MEDIUM_FAST,50,!1),new G(e.BEARTIC,5,!1,!1,!1,"Freezing Pokémon",I.ICE,null,2.6,260,O.SNOW_CLOAK,O.SLUSH_RUSH,O.SWIFT_SWIM,505,95,130,80,70,80,50,60,50,177,c.MEDIUM_FAST,50,!1),new G(e.CRYOGONAL,5,!1,!1,!1,"Crystallizing Pokémon",I.ICE,null,1.1,148,O.LEVITATE,O.NONE,O.NONE,515,80,50,50,95,135,105,25,50,180,c.MEDIUM_FAST,null,!1),new G(e.SHELMET,5,!1,!1,!1,"Snail Pokémon",I.BUG,null,.4,7.7,O.HYDRATION,O.SHELL_ARMOR,O.OVERCOAT,305,50,40,85,40,65,25,200,50,61,c.MEDIUM_FAST,50,!1),new G(e.ACCELGOR,5,!1,!1,!1,"Shell Out Pokémon",I.BUG,null,.8,25.3,O.HYDRATION,O.STICKY_HOLD,O.UNBURDEN,495,80,70,40,100,60,145,75,50,173,c.MEDIUM_FAST,50,!1),new G(e.STUNFISK,5,!1,!1,!1,"Trap Pokémon",I.GROUND,I.ELECTRIC,.7,11,O.STATIC,O.LIMBER,O.SAND_VEIL,471,109,66,84,81,99,32,75,70,165,c.MEDIUM_FAST,50,!1),new G(e.MIENFOO,5,!1,!1,!1,"Martial Arts Pokémon",I.FIGHTING,null,.9,20,O.INNER_FOCUS,O.REGENERATOR,O.RECKLESS,350,45,85,50,55,50,65,180,50,70,c.MEDIUM_SLOW,50,!1),new G(e.MIENSHAO,5,!1,!1,!1,"Martial Arts Pokémon",I.FIGHTING,null,1.4,35.5,O.INNER_FOCUS,O.REGENERATOR,O.RECKLESS,510,65,125,60,95,60,105,45,50,179,c.MEDIUM_SLOW,50,!1),new G(e.DRUDDIGON,5,!1,!1,!1,"Cave Pokémon",I.DRAGON,null,1.6,139,O.ROUGH_SKIN,O.SHEER_FORCE,O.MOLD_BREAKER,485,77,120,90,60,90,48,45,50,170,c.MEDIUM_FAST,50,!1),new G(e.GOLETT,5,!1,!1,!1,"Automaton Pokémon",I.GROUND,I.GHOST,1,92,O.IRON_FIST,O.KLUTZ,O.NO_GUARD,303,59,74,50,35,50,35,190,50,61,c.MEDIUM_FAST,null,!1),new G(e.GOLURK,5,!1,!1,!1,"Automaton Pokémon",I.GROUND,I.GHOST,2.8,330,O.IRON_FIST,O.KLUTZ,O.NO_GUARD,483,89,124,80,55,80,55,90,50,169,c.MEDIUM_FAST,null,!1),new G(e.PAWNIARD,5,!1,!1,!1,"Sharp Blade Pokémon",I.DARK,I.STEEL,.5,10.2,O.DEFIANT,O.INNER_FOCUS,O.PRESSURE,340,45,85,70,40,40,60,120,35,68,c.MEDIUM_FAST,50,!1),new G(e.BISHARP,5,!1,!1,!1,"Sword Blade Pokémon",I.DARK,I.STEEL,1.6,70,O.DEFIANT,O.INNER_FOCUS,O.PRESSURE,490,65,125,100,60,70,70,45,35,172,c.MEDIUM_FAST,50,!1),new G(e.BOUFFALANT,5,!1,!1,!1,"Bash Buffalo Pokémon",I.NORMAL,null,1.6,94.6,O.RECKLESS,O.SAP_SIPPER,O.SOUNDPROOF,490,95,110,95,40,95,55,45,50,172,c.MEDIUM_FAST,50,!1),new G(e.RUFFLET,5,!1,!1,!1,"Eaglet Pokémon",I.NORMAL,I.FLYING,.5,10.5,O.KEEN_EYE,O.SHEER_FORCE,O.HUSTLE,350,70,83,50,37,50,60,190,50,70,c.SLOW,100,!1),new G(e.BRAVIARY,5,!1,!1,!1,"Valiant Pokémon",I.NORMAL,I.FLYING,1.5,41,O.KEEN_EYE,O.SHEER_FORCE,O.DEFIANT,510,100,123,75,57,75,80,60,50,179,c.SLOW,100,!1),new G(e.VULLABY,5,!1,!1,!1,"Diapered Pokémon",I.DARK,I.FLYING,.5,9,O.BIG_PECKS,O.OVERCOAT,O.WEAK_ARMOR,370,70,55,75,45,65,60,190,35,74,c.SLOW,0,!1),new G(e.MANDIBUZZ,5,!1,!1,!1,"Bone Vulture Pokémon",I.DARK,I.FLYING,1.2,39.5,O.BIG_PECKS,O.OVERCOAT,O.WEAK_ARMOR,510,110,65,105,55,95,80,60,35,179,c.SLOW,0,!1),new G(e.HEATMOR,5,!1,!1,!1,"Anteater Pokémon",I.FIRE,null,1.4,58,O.GLUTTONY,O.FLASH_FIRE,O.WHITE_SMOKE,484,85,97,66,105,66,65,90,50,169,c.MEDIUM_FAST,50,!1),new G(e.DURANT,5,!1,!1,!1,"Iron Ant Pokémon",I.BUG,I.STEEL,.3,33,O.SWARM,O.HUSTLE,O.TRUANT,484,58,109,112,48,48,109,90,50,169,c.MEDIUM_FAST,50,!1),new G(e.DEINO,5,!1,!1,!1,"Irate Pokémon",I.DARK,I.DRAGON,.8,17.3,O.HUSTLE,O.NONE,O.NONE,300,52,65,50,45,50,38,45,35,60,c.SLOW,50,!1),new G(e.ZWEILOUS,5,!1,!1,!1,"Hostile Pokémon",I.DARK,I.DRAGON,1.4,50,O.HUSTLE,O.NONE,O.NONE,420,72,85,70,65,70,58,45,35,147,c.SLOW,50,!1),new G(e.HYDREIGON,5,!1,!1,!1,"Brutal Pokémon",I.DARK,I.DRAGON,1.8,160,O.LEVITATE,O.NONE,O.NONE,600,92,105,90,125,90,98,45,35,300,c.SLOW,50,!1),new G(e.LARVESTA,5,!1,!1,!1,"Torch Pokémon",I.BUG,I.FIRE,1.1,28.8,O.FLAME_BODY,O.NONE,O.SWARM,360,55,85,55,50,55,60,45,50,72,c.SLOW,50,!1),new G(e.VOLCARONA,5,!1,!1,!1,"Sun Pokémon",I.BUG,I.FIRE,1.6,46,O.FLAME_BODY,O.NONE,O.SWARM,550,85,60,65,135,105,100,15,50,275,c.SLOW,50,!1),new G(e.COBALION,5,!0,!1,!1,"Iron Will Pokémon",I.STEEL,I.FIGHTING,2.1,250,O.JUSTIFIED,O.NONE,O.NONE,580,91,90,129,90,72,108,3,35,290,c.SLOW,null,!1),new G(e.TERRAKION,5,!0,!1,!1,"Cavern Pokémon",I.ROCK,I.FIGHTING,1.9,260,O.JUSTIFIED,O.NONE,O.NONE,580,91,129,90,72,90,108,3,35,290,c.SLOW,null,!1),new G(e.VIRIZION,5,!0,!1,!1,"Grassland Pokémon",I.GRASS,I.FIGHTING,2,200,O.JUSTIFIED,O.NONE,O.NONE,580,91,90,72,90,129,108,3,35,290,c.SLOW,null,!1),new G(e.TORNADUS,5,!0,!1,!1,"Cyclone Pokémon",I.FLYING,null,1.5,63,O.PRANKSTER,O.NONE,O.DEFIANT,580,79,115,70,125,80,111,3,90,290,c.SLOW,100,!1,!0,new Y("Incarnate Forme","incarnate",I.FLYING,null,1.5,63,O.PRANKSTER,O.NONE,O.DEFIANT,580,79,115,70,125,80,111,3,90,290,!1,null,!0),new Y("Therian Forme","therian",I.FLYING,null,1.4,63,O.REGENERATOR,O.NONE,O.REGENERATOR,580,79,100,80,110,90,121,3,90,290)),new G(e.THUNDURUS,5,!0,!1,!1,"Bolt Strike Pokémon",I.ELECTRIC,I.FLYING,1.5,61,O.PRANKSTER,O.NONE,O.DEFIANT,580,79,115,70,125,80,111,3,90,290,c.SLOW,100,!1,!0,new Y("Incarnate Forme","incarnate",I.ELECTRIC,I.FLYING,1.5,61,O.PRANKSTER,O.NONE,O.DEFIANT,580,79,115,70,125,80,111,3,90,290,!1,null,!0),new Y("Therian Forme","therian",I.ELECTRIC,I.FLYING,3,61,O.VOLT_ABSORB,O.NONE,O.VOLT_ABSORB,580,79,105,70,145,80,101,3,90,290)),new G(e.RESHIRAM,5,!1,!0,!1,"Vast White Pokémon",I.DRAGON,I.FIRE,3.2,330,O.TURBOBLAZE,O.NONE,O.NONE,680,100,120,100,150,120,90,3,0,340,c.SLOW,null,!1),new G(e.ZEKROM,5,!1,!0,!1,"Deep Black Pokémon",I.DRAGON,I.ELECTRIC,2.9,345,O.TERAVOLT,O.NONE,O.NONE,680,100,150,120,120,100,90,3,0,340,c.SLOW,null,!1),new G(e.LANDORUS,5,!0,!1,!1,"Abundance Pokémon",I.GROUND,I.FLYING,1.5,68,O.SAND_FORCE,O.NONE,O.SHEER_FORCE,600,89,125,90,115,80,101,3,90,300,c.SLOW,100,!1,!0,new Y("Incarnate Forme","incarnate",I.GROUND,I.FLYING,1.5,68,O.SAND_FORCE,O.NONE,O.SHEER_FORCE,600,89,125,90,115,80,101,3,90,300,!1,null,!0),new Y("Therian Forme","therian",I.GROUND,I.FLYING,1.3,68,O.INTIMIDATE,O.NONE,O.INTIMIDATE,600,89,145,90,105,80,91,3,90,300)),new G(e.KYUREM,5,!1,!0,!1,"Boundary Pokémon",I.DRAGON,I.ICE,3,325,O.PRESSURE,O.NONE,O.NONE,660,125,130,90,130,90,95,3,0,330,c.SLOW,null,!1,!0,new Y("Normal","",I.DRAGON,I.ICE,3,325,O.PRESSURE,O.NONE,O.NONE,660,125,130,90,130,90,95,3,0,330,!1,null,!0),new Y("Black","black",I.DRAGON,I.ICE,3.3,325,O.TERAVOLT,O.NONE,O.NONE,700,125,170,100,120,90,95,3,0,330),new Y("White","white",I.DRAGON,I.ICE,3.6,325,O.TURBOBLAZE,O.NONE,O.NONE,700,125,120,90,170,100,95,3,0,330)),new G(e.KELDEO,5,!1,!1,!0,"Colt Pokémon",I.WATER,I.FIGHTING,1.4,48.5,O.JUSTIFIED,O.NONE,O.NONE,580,91,72,90,129,90,108,3,35,290,c.SLOW,null,!1,!0,new Y("Ordinary Form","ordinary",I.WATER,I.FIGHTING,1.4,48.5,O.JUSTIFIED,O.NONE,O.NONE,580,91,72,90,129,90,108,3,35,290,!1,null,!0),new Y("Resolute","resolute",I.WATER,I.FIGHTING,1.4,48.5,O.JUSTIFIED,O.NONE,O.NONE,580,91,72,90,129,90,108,3,35,290)),new G(e.MELOETTA,5,!1,!1,!0,"Melody Pokémon",I.NORMAL,I.PSYCHIC,.6,6.5,O.SERENE_GRACE,O.NONE,O.NONE,600,100,77,77,128,128,90,3,100,270,c.SLOW,null,!1,!0,new Y("Aria Forme","aria",I.NORMAL,I.PSYCHIC,.6,6.5,O.SERENE_GRACE,O.NONE,O.NONE,600,100,77,77,128,128,90,3,100,270,!1,null,!0),new Y("Pirouette Forme","pirouette",I.NORMAL,I.FIGHTING,.6,6.5,O.SERENE_GRACE,O.NONE,O.NONE,600,100,128,90,77,77,128,3,100,270,!1,null,!0)),new G(e.GENESECT,5,!1,!1,!0,"Paleozoic Pokémon",I.BUG,I.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300,c.SLOW,null,!1,!0,new Y("Normal","",I.BUG,I.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300,!1,null,!0),new Y("Shock Drive","shock",I.BUG,I.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300),new Y("Burn Drive","burn",I.BUG,I.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300),new Y("Chill Drive","chill",I.BUG,I.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300),new Y("Douse Drive","douse",I.BUG,I.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300)),new G(e.CHESPIN,6,!1,!1,!1,"Spiny Nut Pokémon",I.GRASS,null,.4,9,O.OVERGROW,O.NONE,O.BULLETPROOF,313,56,61,65,48,45,38,45,70,63,c.MEDIUM_SLOW,87.5,!1),new G(e.QUILLADIN,6,!1,!1,!1,"Spiny Armor Pokémon",I.GRASS,null,.7,29,O.OVERGROW,O.NONE,O.BULLETPROOF,405,61,78,95,56,58,57,45,70,142,c.MEDIUM_SLOW,87.5,!1),new G(e.CHESNAUGHT,6,!1,!1,!1,"Spiny Armor Pokémon",I.GRASS,I.FIGHTING,1.6,90,O.OVERGROW,O.NONE,O.BULLETPROOF,530,88,107,122,74,75,64,45,70,239,c.MEDIUM_SLOW,87.5,!1),new G(e.FENNEKIN,6,!1,!1,!1,"Fox Pokémon",I.FIRE,null,.4,9.4,O.BLAZE,O.NONE,O.MAGICIAN,307,40,45,40,62,60,60,45,70,61,c.MEDIUM_SLOW,87.5,!1),new G(e.BRAIXEN,6,!1,!1,!1,"Fox Pokémon",I.FIRE,null,1,14.5,O.BLAZE,O.NONE,O.MAGICIAN,409,59,59,58,90,70,73,45,70,143,c.MEDIUM_SLOW,87.5,!1),new G(e.DELPHOX,6,!1,!1,!1,"Fox Pokémon",I.FIRE,I.PSYCHIC,1.5,39,O.BLAZE,O.NONE,O.MAGICIAN,534,75,69,72,114,100,104,45,70,240,c.MEDIUM_SLOW,87.5,!1),new G(e.FROAKIE,6,!1,!1,!1,"Bubble Frog Pokémon",I.WATER,null,.3,7,O.TORRENT,O.NONE,O.PROTEAN,314,41,56,40,62,44,71,45,70,63,c.MEDIUM_SLOW,87.5,!1,!1,new Y("Normal","",I.WATER,null,.3,7,O.TORRENT,O.NONE,O.PROTEAN,314,41,56,40,62,44,71,45,70,63,!1,null,!0),new Y("Battle Bond","battle-bond",I.WATER,null,.3,7,O.TORRENT,O.NONE,O.PROTEAN,314,41,56,40,62,44,71,45,70,63,!1,"",!0)),new G(e.FROGADIER,6,!1,!1,!1,"Bubble Frog Pokémon",I.WATER,null,.6,10.9,O.TORRENT,O.NONE,O.PROTEAN,405,54,63,52,83,56,97,45,70,142,c.MEDIUM_SLOW,87.5,!1,!1,new Y("Normal","",I.WATER,null,.6,10.9,O.TORRENT,O.NONE,O.PROTEAN,405,54,63,52,83,56,97,45,70,142,!1,null,!0),new Y("Battle Bond","battle-bond",I.WATER,null,.6,10.9,O.TORRENT,O.NONE,O.PROTEAN,405,54,63,52,83,56,97,45,70,142,!1,"",!0)),new G(e.GRENINJA,6,!1,!1,!1,"Ninja Pokémon",I.WATER,I.DARK,1.5,40,O.TORRENT,O.NONE,O.PROTEAN,530,72,95,67,103,71,122,45,70,239,c.MEDIUM_SLOW,87.5,!1,!1,new Y("Normal","",I.WATER,I.DARK,1.5,40,O.TORRENT,O.NONE,O.PROTEAN,530,72,95,67,103,71,122,45,70,239,!1,null,!0),new Y("Battle Bond","battle-bond",I.WATER,I.DARK,1.5,40,O.BATTLE_BOND,O.NONE,O.BATTLE_BOND,530,72,95,67,103,71,122,45,70,239,!1,"",!0),new Y("Ash","ash",I.WATER,I.DARK,1.5,40,O.BATTLE_BOND,O.NONE,O.BATTLE_BOND,640,72,145,67,153,71,132,45,70,239)),new G(e.BUNNELBY,6,!1,!1,!1,"Digging Pokémon",I.NORMAL,null,.4,5,O.PICKUP,O.CHEEK_POUCH,O.HUGE_POWER,237,38,36,38,32,36,57,255,50,47,c.MEDIUM_FAST,50,!1),new G(e.DIGGERSBY,6,!1,!1,!1,"Digging Pokémon",I.NORMAL,I.GROUND,1,42.4,O.PICKUP,O.CHEEK_POUCH,O.HUGE_POWER,423,85,56,77,50,77,78,127,50,148,c.MEDIUM_FAST,50,!1),new G(e.FLETCHLING,6,!1,!1,!1,"Tiny Robin Pokémon",I.NORMAL,I.FLYING,.3,1.7,O.BIG_PECKS,O.NONE,O.GALE_WINGS,278,45,50,43,40,38,62,255,50,56,c.MEDIUM_SLOW,50,!1),new G(e.FLETCHINDER,6,!1,!1,!1,"Ember Pokémon",I.FIRE,I.FLYING,.7,16,O.FLAME_BODY,O.NONE,O.GALE_WINGS,382,62,73,55,56,52,84,120,50,134,c.MEDIUM_SLOW,50,!1),new G(e.TALONFLAME,6,!1,!1,!1,"Scorching Pokémon",I.FIRE,I.FLYING,1.2,24.5,O.FLAME_BODY,O.NONE,O.GALE_WINGS,499,78,81,71,74,69,126,45,50,175,c.MEDIUM_SLOW,50,!1),new G(e.SCATTERBUG,6,!1,!1,!1,"Scatterdust Pokémon",I.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,c.MEDIUM_FAST,50,!1,!1,new Y("Meadow Pattern","meadow",I.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("Icy Snow Pattern","icy-snow",I.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("Polar Pattern","polar",I.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("Tundra Pattern","tundra",I.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("Continental Pattern","continental",I.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("Garden Pattern","garden",I.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("Elegant Pattern","elegant",I.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("Modern Pattern","modern",I.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("Marine Pattern","marine",I.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("Archipelago Pattern","archipelago",I.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("High Plains Pattern","high-plains",I.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("Sandstorm Pattern","sandstorm",I.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("River Pattern","river",I.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("Monsoon Pattern","monsoon",I.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("Savanna Pattern","savanna",I.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("Sun Pattern","sun",I.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("Ocean Pattern","ocean",I.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("Jungle Pattern","jungle",I.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("Fancy Pattern","fancy",I.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("Poké Ball Pattern","poke-ball",I.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0)),new G(e.SPEWPA,6,!1,!1,!1,"Scatterdust Pokémon",I.BUG,null,.3,8.4,O.SHED_SKIN,O.SHED_SKIN,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,c.MEDIUM_FAST,50,!1,!1,new Y("Meadow Pattern","meadow",I.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("Icy Snow Pattern","icy-snow",I.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("Polar Pattern","polar",I.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("Tundra Pattern","tundra",I.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("Continental Pattern","continental",I.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("Garden Pattern","garden",I.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("Elegant Pattern","elegant",I.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("Modern Pattern","modern",I.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("Marine Pattern","marine",I.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("Archipelago Pattern","archipelago",I.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("High Plains Pattern","high-plains",I.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("Sandstorm Pattern","sandstorm",I.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("River Pattern","river",I.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("Monsoon Pattern","monsoon",I.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("Savanna Pattern","savanna",I.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("Sun Pattern","sun",I.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("Ocean Pattern","ocean",I.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("Jungle Pattern","jungle",I.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("Fancy Pattern","fancy",I.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("Poké Ball Pattern","poke-ball",I.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0)),new G(e.VIVILLON,6,!1,!1,!1,"Scale Pokémon",I.BUG,I.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,c.MEDIUM_FAST,50,!1,!1,new Y("Meadow Pattern","meadow",I.BUG,I.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new Y("Icy Snow Pattern","icy-snow",I.BUG,I.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new Y("Polar Pattern","polar",I.BUG,I.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new Y("Tundra Pattern","tundra",I.BUG,I.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new Y("Continental Pattern","continental",I.BUG,I.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new Y("Garden Pattern","garden",I.BUG,I.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new Y("Elegant Pattern","elegant",I.BUG,I.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new Y("Modern Pattern","modern",I.BUG,I.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new Y("Marine Pattern","marine",I.BUG,I.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new Y("Archipelago Pattern","archipelago",I.BUG,I.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new Y("High Plains Pattern","high-plains",I.BUG,I.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new Y("Sandstorm Pattern","sandstorm",I.BUG,I.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new Y("River Pattern","river",I.BUG,I.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new Y("Monsoon Pattern","monsoon",I.BUG,I.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new Y("Savanna Pattern","savanna",I.BUG,I.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new Y("Sun Pattern","sun",I.BUG,I.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new Y("Ocean Pattern","ocean",I.BUG,I.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new Y("Jungle Pattern","jungle",I.BUG,I.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new Y("Fancy Pattern","fancy",I.BUG,I.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new Y("Poké Ball Pattern","poke-ball",I.BUG,I.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0)),new G(e.LITLEO,6,!1,!1,!1,"Lion Cub Pokémon",I.FIRE,I.NORMAL,.6,13.5,O.RIVALRY,O.UNNERVE,O.MOXIE,369,62,50,58,73,54,72,220,70,74,c.MEDIUM_SLOW,12.5,!1),new G(e.PYROAR,6,!1,!1,!1,"Royal Pokémon",I.FIRE,I.NORMAL,1.5,81.5,O.RIVALRY,O.UNNERVE,O.MOXIE,507,86,68,72,109,66,106,65,70,177,c.MEDIUM_SLOW,12.5,!0),new G(e.FLABEBE,6,!1,!1,!1,"Single Bloom Pokémon",I.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,c.MEDIUM_FAST,0,!1,!1,new Y("Red Flower","red",I.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,!1,null,!0),new Y("Yellow Flower","yellow",I.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,!1,null,!0),new Y("Orange Flower","orange",I.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,!1,null,!0),new Y("Blue Flower","blue",I.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,!1,null,!0),new Y("White Flower","white",I.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,!1,null,!0)),new G(e.FLOETTE,6,!1,!1,!1,"Single Bloom Pokémon",I.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,c.MEDIUM_FAST,0,!1,!1,new Y("Red Flower","red",I.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,!1,null,!0),new Y("Yellow Flower","yellow",I.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,!1,null,!0),new Y("Orange Flower","orange",I.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,!1,null,!0),new Y("Blue Flower","blue",I.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,!1,null,!0),new Y("White Flower","white",I.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,!1,null,!0)),new G(e.FLORGES,6,!1,!1,!1,"Garden Pokémon",I.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,248,c.MEDIUM_FAST,0,!1,!1,new Y("Red Flower","red",I.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,248,!1,null,!0),new Y("Yellow Flower","yellow",I.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,248,!1,null,!0),new Y("Orange Flower","orange",I.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,248,!1,null,!0),new Y("Blue Flower","blue",I.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,248,!1,null,!0),new Y("White Flower","white",I.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,248,!1,null,!0)),new G(e.SKIDDO,6,!1,!1,!1,"Mount Pokémon",I.GRASS,null,.9,31,O.SAP_SIPPER,O.NONE,O.GRASS_PELT,350,66,65,48,62,57,52,200,70,70,c.MEDIUM_FAST,50,!1),new G(e.GOGOAT,6,!1,!1,!1,"Mount Pokémon",I.GRASS,null,1.7,91,O.SAP_SIPPER,O.NONE,O.GRASS_PELT,531,123,100,62,97,81,68,45,70,186,c.MEDIUM_FAST,50,!1),new G(e.PANCHAM,6,!1,!1,!1,"Playful Pokémon",I.FIGHTING,null,.6,8,O.IRON_FIST,O.MOLD_BREAKER,O.SCRAPPY,348,67,82,62,46,48,43,220,50,70,c.MEDIUM_FAST,50,!1),new G(e.PANGORO,6,!1,!1,!1,"Daunting Pokémon",I.FIGHTING,I.DARK,2.1,136,O.IRON_FIST,O.MOLD_BREAKER,O.SCRAPPY,495,95,124,78,69,71,58,65,50,173,c.MEDIUM_FAST,50,!1),new G(e.FURFROU,6,!1,!1,!1,"Poodle Pokémon",I.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,c.MEDIUM_FAST,50,!1,!0,new Y("Natural Form","",I.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new Y("Heart Trim","heart",I.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new Y("Star Trim","star",I.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new Y("Diamond Trim","diamond",I.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new Y("Debutante Trim","debutante",I.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new Y("Matron Trim","matron",I.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new Y("Dandy Trim","dandy",I.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new Y("La Reine Trim","la-reine",I.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new Y("Kabuki Trim","kabuki",I.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new Y("Pharaoh Trim","pharaoh",I.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0)),new G(e.ESPURR,6,!1,!1,!1,"Restraint Pokémon",I.PSYCHIC,null,.3,3.5,O.KEEN_EYE,O.INFILTRATOR,O.OWN_TEMPO,355,62,48,54,63,60,68,190,50,71,c.MEDIUM_FAST,50,!1),new G(e.MEOWSTIC,6,!1,!1,!1,"Constraint Pokémon",I.PSYCHIC,null,.6,8.5,O.KEEN_EYE,O.INFILTRATOR,O.PRANKSTER,466,74,48,76,83,81,104,75,50,163,c.MEDIUM_FAST,50,!1,!1,new Y("Male","male",I.PSYCHIC,null,.6,8.5,O.KEEN_EYE,O.INFILTRATOR,O.PRANKSTER,466,74,48,76,83,81,104,75,50,163,!1,"",!0),new Y("Female","female",I.PSYCHIC,null,.6,8.5,O.KEEN_EYE,O.INFILTRATOR,O.COMPETITIVE,466,74,48,76,83,81,104,75,50,163,!1,null,!0)),new G(e.HONEDGE,6,!1,!1,!1,"Sword Pokémon",I.STEEL,I.GHOST,.8,2,O.NO_GUARD,O.NONE,O.NONE,325,45,80,100,35,37,28,180,50,65,c.MEDIUM_FAST,50,!1),new G(e.DOUBLADE,6,!1,!1,!1,"Sword Pokémon",I.STEEL,I.GHOST,.8,4.5,O.NO_GUARD,O.NONE,O.NONE,448,59,110,150,45,49,35,90,50,157,c.MEDIUM_FAST,50,!1),new G(e.AEGISLASH,6,!1,!1,!1,"Royal Sword Pokémon",I.STEEL,I.GHOST,1.7,53,O.STANCE_CHANGE,O.NONE,O.NONE,500,60,50,140,50,140,60,45,50,250,c.MEDIUM_FAST,50,!1,!0,new Y("Shield Forme","shield",I.STEEL,I.GHOST,1.7,53,O.STANCE_CHANGE,O.NONE,O.NONE,500,60,50,140,50,140,60,45,50,250,!1,"",!0),new Y("Blade Forme","blade",I.STEEL,I.GHOST,1.7,53,O.STANCE_CHANGE,O.NONE,O.NONE,500,60,140,50,140,50,60,45,50,250)),new G(e.SPRITZEE,6,!1,!1,!1,"Perfume Pokémon",I.FAIRY,null,.2,.5,O.HEALER,O.NONE,O.AROMA_VEIL,341,78,52,60,63,65,23,200,50,68,c.MEDIUM_FAST,50,!1),new G(e.AROMATISSE,6,!1,!1,!1,"Fragrance Pokémon",I.FAIRY,null,.8,15.5,O.HEALER,O.NONE,O.AROMA_VEIL,462,101,72,72,99,89,29,140,50,162,c.MEDIUM_FAST,50,!1),new G(e.SWIRLIX,6,!1,!1,!1,"Cotton Candy Pokémon",I.FAIRY,null,.4,3.5,O.SWEET_VEIL,O.NONE,O.UNBURDEN,341,62,48,66,59,57,49,200,50,68,c.MEDIUM_FAST,50,!1),new G(e.SLURPUFF,6,!1,!1,!1,"Meringue Pokémon",I.FAIRY,null,.8,5,O.SWEET_VEIL,O.NONE,O.UNBURDEN,480,82,80,86,85,75,72,140,50,168,c.MEDIUM_FAST,50,!1),new G(e.INKAY,6,!1,!1,!1,"Revolving Pokémon",I.DARK,I.PSYCHIC,.4,3.5,O.CONTRARY,O.SUCTION_CUPS,O.INFILTRATOR,288,53,54,53,37,46,45,190,50,58,c.MEDIUM_FAST,50,!1),new G(e.MALAMAR,6,!1,!1,!1,"Overturning Pokémon",I.DARK,I.PSYCHIC,1.5,47,O.CONTRARY,O.SUCTION_CUPS,O.INFILTRATOR,482,86,92,88,68,75,73,80,50,169,c.MEDIUM_FAST,50,!1),new G(e.BINACLE,6,!1,!1,!1,"Two-Handed Pokémon",I.ROCK,I.WATER,.5,31,O.TOUGH_CLAWS,O.SNIPER,O.PICKPOCKET,306,42,52,67,39,56,50,120,50,61,c.MEDIUM_FAST,50,!1),new G(e.BARBARACLE,6,!1,!1,!1,"Collective Pokémon",I.ROCK,I.WATER,1.3,96,O.TOUGH_CLAWS,O.SNIPER,O.PICKPOCKET,500,72,105,115,54,86,68,45,50,175,c.MEDIUM_FAST,50,!1),new G(e.SKRELP,6,!1,!1,!1,"Mock Kelp Pokémon",I.POISON,I.WATER,.5,7.3,O.POISON_POINT,O.POISON_TOUCH,O.ADAPTABILITY,320,50,60,60,60,60,30,225,50,64,c.MEDIUM_FAST,50,!1),new G(e.DRAGALGE,6,!1,!1,!1,"Mock Kelp Pokémon",I.POISON,I.DRAGON,1.8,81.5,O.POISON_POINT,O.POISON_TOUCH,O.ADAPTABILITY,494,65,75,90,97,123,44,55,50,173,c.MEDIUM_FAST,50,!1),new G(e.CLAUNCHER,6,!1,!1,!1,"Water Gun Pokémon",I.WATER,null,.5,8.3,O.MEGA_LAUNCHER,O.NONE,O.NONE,330,50,53,62,58,63,44,225,50,66,c.SLOW,50,!1),new G(e.CLAWITZER,6,!1,!1,!1,"Howitzer Pokémon",I.WATER,null,1.3,35.3,O.MEGA_LAUNCHER,O.NONE,O.NONE,500,71,73,88,120,89,59,55,50,100,c.SLOW,50,!1),new G(e.HELIOPTILE,6,!1,!1,!1,"Generator Pokémon",I.ELECTRIC,I.NORMAL,.5,6,O.DRY_SKIN,O.SAND_VEIL,O.SOLAR_POWER,289,44,38,33,61,43,70,190,50,58,c.MEDIUM_FAST,50,!1),new G(e.HELIOLISK,6,!1,!1,!1,"Generator Pokémon",I.ELECTRIC,I.NORMAL,1,21,O.DRY_SKIN,O.SAND_VEIL,O.SOLAR_POWER,481,62,55,52,109,94,109,75,50,168,c.MEDIUM_FAST,50,!1),new G(e.TYRUNT,6,!1,!1,!1,"Royal Heir Pokémon",I.ROCK,I.DRAGON,.8,26,O.STRONG_JAW,O.NONE,O.STURDY,362,58,89,77,45,45,48,45,50,72,c.MEDIUM_FAST,87.5,!1),new G(e.TYRANTRUM,6,!1,!1,!1,"Despot Pokémon",I.ROCK,I.DRAGON,2.5,270,O.STRONG_JAW,O.NONE,O.ROCK_HEAD,521,82,121,119,69,59,71,45,50,182,c.MEDIUM_FAST,87.5,!1),new G(e.AMAURA,6,!1,!1,!1,"Tundra Pokémon",I.ROCK,I.ICE,1.3,25.2,O.REFRIGERATE,O.NONE,O.SNOW_WARNING,362,77,59,50,67,63,46,45,50,72,c.MEDIUM_FAST,87.5,!1),new G(e.AURORUS,6,!1,!1,!1,"Tundra Pokémon",I.ROCK,I.ICE,2.7,225,O.REFRIGERATE,O.NONE,O.SNOW_WARNING,521,123,77,72,99,92,58,45,50,104,c.MEDIUM_FAST,87.5,!1),new G(e.SYLVEON,6,!1,!1,!1,"Intertwining Pokémon",I.FAIRY,null,1,23.5,O.CUTE_CHARM,O.NONE,O.PIXILATE,525,95,65,65,110,130,60,45,50,184,c.MEDIUM_FAST,87.5,!1),new G(e.HAWLUCHA,6,!1,!1,!1,"Wrestling Pokémon",I.FIGHTING,I.FLYING,.8,21.5,O.LIMBER,O.UNBURDEN,O.MOLD_BREAKER,500,78,92,75,74,63,118,100,50,175,c.MEDIUM_FAST,50,!1),new G(e.DEDENNE,6,!1,!1,!1,"Antenna Pokémon",I.ELECTRIC,I.FAIRY,.2,2.2,O.CHEEK_POUCH,O.PICKUP,O.PLUS,431,67,58,57,81,67,101,180,50,151,c.MEDIUM_FAST,50,!1),new G(e.CARBINK,6,!1,!1,!1,"Jewel Pokémon",I.ROCK,I.FAIRY,.3,5.7,O.CLEAR_BODY,O.NONE,O.STURDY,500,50,50,150,50,150,50,60,50,100,c.SLOW,null,!1),new G(e.GOOMY,6,!1,!1,!1,"Soft Tissue Pokémon",I.DRAGON,null,.3,2.8,O.SAP_SIPPER,O.HYDRATION,O.GOOEY,300,45,50,35,55,75,40,45,35,60,c.SLOW,50,!1),new G(e.SLIGGOO,6,!1,!1,!1,"Soft Tissue Pokémon",I.DRAGON,null,.8,17.5,O.SAP_SIPPER,O.HYDRATION,O.GOOEY,452,68,75,53,83,113,60,45,35,158,c.SLOW,50,!1),new G(e.GOODRA,6,!1,!1,!1,"Dragon Pokémon",I.DRAGON,null,2,150.5,O.SAP_SIPPER,O.HYDRATION,O.GOOEY,600,90,100,70,110,150,80,45,35,300,c.SLOW,50,!1),new G(e.KLEFKI,6,!1,!1,!1,"Key Ring Pokémon",I.STEEL,I.FAIRY,.2,3,O.PRANKSTER,O.NONE,O.MAGICIAN,470,57,80,91,80,87,75,75,50,165,c.FAST,50,!1),new G(e.PHANTUMP,6,!1,!1,!1,"Stump Pokémon",I.GHOST,I.GRASS,.4,7,O.NATURAL_CURE,O.FRISK,O.HARVEST,309,43,70,48,50,60,38,120,50,62,c.MEDIUM_FAST,50,!1),new G(e.TREVENANT,6,!1,!1,!1,"Elder Tree Pokémon",I.GHOST,I.GRASS,1.5,71,O.NATURAL_CURE,O.FRISK,O.HARVEST,474,85,110,76,65,82,56,60,50,166,c.MEDIUM_FAST,50,!1),new G(e.PUMPKABOO,6,!1,!1,!1,"Pumpkin Pokémon",I.GHOST,I.GRASS,.4,5,O.PICKUP,O.FRISK,O.INSOMNIA,335,49,66,70,44,55,51,120,50,67,c.MEDIUM_FAST,50,!1,!1,new Y("Average Size","",I.GHOST,I.GRASS,.4,5,O.PICKUP,O.FRISK,O.INSOMNIA,335,49,66,70,44,55,51,120,50,67,!1,null,!0),new Y("Small Size","small",I.GHOST,I.GRASS,.3,3.5,O.PICKUP,O.FRISK,O.INSOMNIA,335,44,66,70,44,55,56,120,50,67,!1,"",!0),new Y("Large Size","large",I.GHOST,I.GRASS,.5,7.5,O.PICKUP,O.FRISK,O.INSOMNIA,335,54,66,70,44,55,46,120,50,67,!1,"",!0),new Y("Super Size","super",I.GHOST,I.GRASS,.8,15,O.PICKUP,O.FRISK,O.INSOMNIA,335,59,66,70,44,55,41,120,50,67,!1,"",!0)),new G(e.GOURGEIST,6,!1,!1,!1,"Pumpkin Pokémon",I.GHOST,I.GRASS,.9,12.5,O.PICKUP,O.FRISK,O.INSOMNIA,494,65,90,122,58,75,84,60,50,173,c.MEDIUM_FAST,50,!1,!1,new Y("Average Size","",I.GHOST,I.GRASS,.9,12.5,O.PICKUP,O.FRISK,O.INSOMNIA,494,65,90,122,58,75,84,60,50,173,!1,null,!0),new Y("Small Size","small",I.GHOST,I.GRASS,.7,9.5,O.PICKUP,O.FRISK,O.INSOMNIA,494,55,85,122,58,75,99,60,50,173,!1,"",!0),new Y("Large Size","large",I.GHOST,I.GRASS,1.1,14,O.PICKUP,O.FRISK,O.INSOMNIA,494,75,95,122,58,75,69,60,50,173,!1,"",!0),new Y("Super Size","super",I.GHOST,I.GRASS,1.7,39,O.PICKUP,O.FRISK,O.INSOMNIA,494,85,100,122,58,75,54,60,50,173,!1,"",!0)),new G(e.BERGMITE,6,!1,!1,!1,"Ice Chunk Pokémon",I.ICE,null,1,99.5,O.OWN_TEMPO,O.ICE_BODY,O.STURDY,304,55,69,85,32,35,28,190,50,61,c.MEDIUM_FAST,50,!1),new G(e.AVALUGG,6,!1,!1,!1,"Iceberg Pokémon",I.ICE,null,2,505,O.OWN_TEMPO,O.ICE_BODY,O.STURDY,514,95,117,184,44,46,28,55,50,180,c.MEDIUM_FAST,50,!1),new G(e.NOIBAT,6,!1,!1,!1,"Sound Wave Pokémon",I.FLYING,I.DRAGON,.5,8,O.FRISK,O.INFILTRATOR,O.TELEPATHY,245,40,30,35,45,40,55,190,50,49,c.MEDIUM_FAST,50,!1),new G(e.NOIVERN,6,!1,!1,!1,"Sound Wave Pokémon",I.FLYING,I.DRAGON,1.5,85,O.FRISK,O.INFILTRATOR,O.TELEPATHY,535,85,70,80,97,80,123,45,50,187,c.MEDIUM_FAST,50,!1),new G(e.XERNEAS,6,!1,!0,!1,"Life Pokémon",I.FAIRY,null,3,215,O.FAIRY_AURA,O.NONE,O.NONE,680,126,131,95,131,98,99,45,0,340,c.SLOW,null,!1,!0,new Y("Neutral Mode","neutral",I.FAIRY,null,3,215,O.FAIRY_AURA,O.NONE,O.NONE,680,126,131,95,131,98,99,45,0,340,!1,null,!0),new Y("Active Mode","active",I.FAIRY,null,3,215,O.FAIRY_AURA,O.NONE,O.NONE,680,126,131,95,131,98,99,45,0,340)),new G(e.YVELTAL,6,!1,!0,!1,"Destruction Pokémon",I.DARK,I.FLYING,5.8,203,O.DARK_AURA,O.NONE,O.NONE,680,126,131,95,131,98,99,45,0,340,c.SLOW,null,!1),new G(e.ZYGARDE,6,!1,!0,!1,"Order Pokémon",I.DRAGON,I.GROUND,5,305,O.AURA_BREAK,O.NONE,O.NONE,600,108,100,121,81,95,95,3,0,300,c.SLOW,null,!1,!1,new Y("50% Forme","50",I.DRAGON,I.GROUND,5,305,O.AURA_BREAK,O.NONE,O.NONE,600,108,100,121,81,95,95,3,0,300,!1,"",!0),new Y("10% Forme","10",I.DRAGON,I.GROUND,1.2,33.5,O.AURA_BREAK,O.NONE,O.NONE,486,54,100,71,61,85,115,3,0,300,!1,null,!0),new Y("50% Forme Power Construct","50-pc",I.DRAGON,I.GROUND,5,305,O.POWER_CONSTRUCT,O.NONE,O.NONE,600,108,100,121,81,95,95,3,0,300,!1,"",!0),new Y("10% Forme Power Construct","10-pc",I.DRAGON,I.GROUND,1.2,33.5,O.POWER_CONSTRUCT,O.NONE,O.NONE,486,54,100,71,61,85,115,3,0,300,!1,"10",!0),new Y("Complete Forme (50% PC)","complete",I.DRAGON,I.GROUND,4.5,610,O.POWER_CONSTRUCT,O.NONE,O.NONE,708,216,100,121,91,95,85,3,0,300),new Y("Complete Forme (10% PC)","10-complete",I.DRAGON,I.GROUND,4.5,610,O.POWER_CONSTRUCT,O.NONE,O.NONE,708,216,100,121,91,95,85,3,0,300,!1,"complete")),new G(e.DIANCIE,6,!1,!1,!0,"Jewel Pokémon",I.ROCK,I.FAIRY,.7,8.8,O.CLEAR_BODY,O.NONE,O.NONE,600,50,100,150,100,150,50,3,50,300,c.SLOW,null,!1,!0,new Y("Normal","",I.ROCK,I.FAIRY,.7,8.8,O.CLEAR_BODY,O.NONE,O.NONE,600,50,100,150,100,150,50,3,50,300,!1,null,!0),new Y("Mega",Ue.MEGA,I.ROCK,I.FAIRY,1.1,27.8,O.MAGIC_BOUNCE,O.NONE,O.NONE,700,50,160,110,160,110,110,3,50,300)),new G(e.HOOPA,6,!1,!1,!0,"Mischief Pokémon",I.PSYCHIC,I.GHOST,.5,9,O.MAGICIAN,O.NONE,O.NONE,600,80,110,60,150,130,70,3,100,270,c.SLOW,null,!1,!1,new Y("Hoopa Confined","",I.PSYCHIC,I.GHOST,.5,9,O.MAGICIAN,O.NONE,O.NONE,600,80,110,60,150,130,70,3,100,270,!1,null,!0),new Y("Hoopa Unbound","unbound",I.PSYCHIC,I.DARK,6.5,490,O.MAGICIAN,O.NONE,O.NONE,680,80,160,60,170,130,80,3,100,270)),new G(e.VOLCANION,6,!1,!1,!0,"Steam Pokémon",I.FIRE,I.WATER,1.7,195,O.WATER_ABSORB,O.NONE,O.NONE,600,80,110,120,130,90,70,3,100,300,c.SLOW,null,!1),new G(e.ROWLET,7,!1,!1,!1,"Grass Quill Pokémon",I.GRASS,I.FLYING,.3,1.5,O.OVERGROW,O.NONE,O.LONG_REACH,320,68,55,55,50,50,42,45,50,64,c.MEDIUM_SLOW,87.5,!1),new G(e.DARTRIX,7,!1,!1,!1,"Blade Quill Pokémon",I.GRASS,I.FLYING,.7,16,O.OVERGROW,O.NONE,O.LONG_REACH,420,78,75,75,70,70,52,45,50,147,c.MEDIUM_SLOW,87.5,!1),new G(e.DECIDUEYE,7,!1,!1,!1,"Arrow Quill Pokémon",I.GRASS,I.GHOST,1.6,36.6,O.OVERGROW,O.NONE,O.LONG_REACH,530,78,107,75,100,100,70,45,50,265,c.MEDIUM_SLOW,87.5,!1),new G(e.LITTEN,7,!1,!1,!1,"Fire Cat Pokémon",I.FIRE,null,.4,4.3,O.BLAZE,O.NONE,O.INTIMIDATE,320,45,65,40,60,40,70,45,50,64,c.MEDIUM_SLOW,87.5,!1),new G(e.TORRACAT,7,!1,!1,!1,"Fire Cat Pokémon",I.FIRE,null,.7,25,O.BLAZE,O.NONE,O.INTIMIDATE,420,65,85,50,80,50,90,45,50,147,c.MEDIUM_SLOW,87.5,!1),new G(e.INCINEROAR,7,!1,!1,!1,"Heel Pokémon",I.FIRE,I.DARK,1.8,83,O.BLAZE,O.NONE,O.INTIMIDATE,530,95,115,90,80,90,60,45,50,265,c.MEDIUM_SLOW,87.5,!1),new G(e.POPPLIO,7,!1,!1,!1,"Sea Lion Pokémon",I.WATER,null,.4,7.5,O.TORRENT,O.NONE,O.LIQUID_VOICE,320,50,54,54,66,56,40,45,50,64,c.MEDIUM_SLOW,87.5,!1),new G(e.BRIONNE,7,!1,!1,!1,"Pop Star Pokémon",I.WATER,null,.6,17.5,O.TORRENT,O.NONE,O.LIQUID_VOICE,420,60,69,69,91,81,50,45,50,147,c.MEDIUM_SLOW,87.5,!1),new G(e.PRIMARINA,7,!1,!1,!1,"Soloist Pokémon",I.WATER,I.FAIRY,1.8,44,O.TORRENT,O.NONE,O.LIQUID_VOICE,530,80,74,74,126,116,60,45,50,265,c.MEDIUM_SLOW,87.5,!1),new G(e.PIKIPEK,7,!1,!1,!1,"Woodpecker Pokémon",I.NORMAL,I.FLYING,.3,1.2,O.KEEN_EYE,O.SKILL_LINK,O.PICKUP,265,35,75,30,30,30,65,255,70,53,c.MEDIUM_FAST,50,!1),new G(e.TRUMBEAK,7,!1,!1,!1,"Bugle Beak Pokémon",I.NORMAL,I.FLYING,.6,14.8,O.KEEN_EYE,O.SKILL_LINK,O.PICKUP,355,55,85,50,40,50,75,120,70,124,c.MEDIUM_FAST,50,!1),new G(e.TOUCANNON,7,!1,!1,!1,"Cannon Pokémon",I.NORMAL,I.FLYING,1.1,26,O.KEEN_EYE,O.SKILL_LINK,O.SHEER_FORCE,485,80,120,75,75,75,60,45,70,218,c.MEDIUM_FAST,50,!1),new G(e.YUNGOOS,7,!1,!1,!1,"Loitering Pokémon",I.NORMAL,null,.4,6,O.STAKEOUT,O.STRONG_JAW,O.ADAPTABILITY,253,48,70,30,30,30,45,255,70,51,c.MEDIUM_FAST,50,!1),new G(e.GUMSHOOS,7,!1,!1,!1,"Stakeout Pokémon",I.NORMAL,null,.7,14.2,O.STAKEOUT,O.STRONG_JAW,O.ADAPTABILITY,418,88,110,60,55,60,45,127,70,146,c.MEDIUM_FAST,50,!1),new G(e.GRUBBIN,7,!1,!1,!1,"Larva Pokémon",I.BUG,null,.4,4.4,O.SWARM,O.NONE,O.NONE,300,47,62,45,55,45,46,255,50,60,c.MEDIUM_FAST,50,!1),new G(e.CHARJABUG,7,!1,!1,!1,"Battery Pokémon",I.BUG,I.ELECTRIC,.5,10.5,O.BATTERY,O.NONE,O.NONE,400,57,82,95,55,75,36,120,50,140,c.MEDIUM_FAST,50,!1),new G(e.VIKAVOLT,7,!1,!1,!1,"Stag Beetle Pokémon",I.BUG,I.ELECTRIC,1.5,45,O.LEVITATE,O.NONE,O.NONE,500,77,70,90,145,75,43,45,50,250,c.MEDIUM_FAST,50,!1),new G(e.CRABRAWLER,7,!1,!1,!1,"Boxing Pokémon",I.FIGHTING,null,.6,7,O.HYPER_CUTTER,O.IRON_FIST,O.ANGER_POINT,338,47,82,57,42,47,63,225,70,68,c.MEDIUM_FAST,50,!1),new G(e.CRABOMINABLE,7,!1,!1,!1,"Woolly Crab Pokémon",I.FIGHTING,I.ICE,1.7,180,O.HYPER_CUTTER,O.IRON_FIST,O.ANGER_POINT,478,97,132,77,62,67,43,60,70,167,c.MEDIUM_FAST,50,!1),new G(e.ORICORIO,7,!1,!1,!1,"Dancing Pokémon",I.FIRE,I.FLYING,.6,3.4,O.DANCER,O.NONE,O.NONE,476,75,70,70,98,70,93,45,70,167,c.MEDIUM_FAST,25,!1,!1,new Y("Baile Style","baile",I.FIRE,I.FLYING,.6,3.4,O.DANCER,O.NONE,O.NONE,476,75,70,70,98,70,93,45,70,167,!1,"",!0),new Y("Pom-Pom Style","pompom",I.ELECTRIC,I.FLYING,.6,3.4,O.DANCER,O.NONE,O.NONE,476,75,70,70,98,70,93,45,70,167,!1,null,!0),new Y("Pau Style","pau",I.PSYCHIC,I.FLYING,.6,3.4,O.DANCER,O.NONE,O.NONE,476,75,70,70,98,70,93,45,70,167,!1,null,!0),new Y("Sensu Style","sensu",I.GHOST,I.FLYING,.6,3.4,O.DANCER,O.NONE,O.NONE,476,75,70,70,98,70,93,45,70,167,!1,null,!0)),new G(e.CUTIEFLY,7,!1,!1,!1,"Bee Fly Pokémon",I.BUG,I.FAIRY,.1,.2,O.HONEY_GATHER,O.SHIELD_DUST,O.SWEET_VEIL,304,40,45,40,55,40,84,190,50,61,c.MEDIUM_FAST,50,!1),new G(e.RIBOMBEE,7,!1,!1,!1,"Bee Fly Pokémon",I.BUG,I.FAIRY,.2,.5,O.HONEY_GATHER,O.SHIELD_DUST,O.SWEET_VEIL,464,60,55,60,95,70,124,75,50,162,c.MEDIUM_FAST,50,!1),new G(e.ROCKRUFF,7,!1,!1,!1,"Puppy Pokémon",I.ROCK,null,.5,9.2,O.KEEN_EYE,O.VITAL_SPIRIT,O.STEADFAST,280,45,65,40,30,40,60,190,50,56,c.MEDIUM_FAST,50,!1,!1,new Y("Normal","",I.ROCK,null,.5,9.2,O.KEEN_EYE,O.VITAL_SPIRIT,O.STEADFAST,280,45,65,40,30,40,60,190,50,56,!1,null,!0),new Y("Own Tempo","own-tempo",I.ROCK,null,.5,9.2,O.OWN_TEMPO,O.NONE,O.OWN_TEMPO,280,45,65,40,30,40,60,190,50,56,!1,"",!0)),new G(e.LYCANROC,7,!1,!1,!1,"Wolf Pokémon",I.ROCK,null,.8,25,O.KEEN_EYE,O.SAND_RUSH,O.STEADFAST,487,75,115,65,55,65,112,90,50,170,c.MEDIUM_FAST,50,!1,!1,new Y("Midday Form","midday",I.ROCK,null,.8,25,O.KEEN_EYE,O.SAND_RUSH,O.STEADFAST,487,75,115,65,55,65,112,90,50,170,!1,"",!0),new Y("Midnight Form","midnight",I.ROCK,null,1.1,25,O.KEEN_EYE,O.VITAL_SPIRIT,O.NO_GUARD,487,85,115,75,55,75,82,90,50,170,!1,null,!0),new Y("Dusk Form","dusk",I.ROCK,null,.8,25,O.TOUGH_CLAWS,O.TOUGH_CLAWS,O.TOUGH_CLAWS,487,75,117,65,55,65,110,90,50,170,!1,null,!0)),new G(e.WISHIWASHI,7,!1,!1,!1,"Small Fry Pokémon",I.WATER,null,.2,.3,O.SCHOOLING,O.NONE,O.NONE,175,45,20,20,25,25,40,60,50,61,c.FAST,50,!1,!1,new Y("Solo Form","",I.WATER,null,.2,.3,O.SCHOOLING,O.NONE,O.NONE,175,45,20,20,25,25,40,60,50,61,!1,null,!0),new Y("School","school",I.WATER,null,8.2,78.6,O.SCHOOLING,O.NONE,O.NONE,620,45,140,130,140,135,30,60,50,61)),new G(e.MAREANIE,7,!1,!1,!1,"Brutal Star Pokémon",I.POISON,I.WATER,.4,8,O.MERCILESS,O.LIMBER,O.REGENERATOR,305,50,53,62,43,52,45,190,50,61,c.MEDIUM_FAST,50,!1),new G(e.TOXAPEX,7,!1,!1,!1,"Brutal Star Pokémon",I.POISON,I.WATER,.7,14.5,O.MERCILESS,O.LIMBER,O.REGENERATOR,495,50,63,152,53,142,35,75,50,173,c.MEDIUM_FAST,50,!1),new G(e.MUDBRAY,7,!1,!1,!1,"Donkey Pokémon",I.GROUND,null,1,110,O.OWN_TEMPO,O.STAMINA,O.INNER_FOCUS,385,70,100,70,45,55,45,190,50,77,c.MEDIUM_FAST,50,!1),new G(e.MUDSDALE,7,!1,!1,!1,"Draft Horse Pokémon",I.GROUND,null,2.5,920,O.OWN_TEMPO,O.STAMINA,O.INNER_FOCUS,500,100,125,100,55,85,35,60,50,175,c.MEDIUM_FAST,50,!1),new G(e.DEWPIDER,7,!1,!1,!1,"Water Bubble Pokémon",I.WATER,I.BUG,.3,4,O.WATER_BUBBLE,O.NONE,O.WATER_ABSORB,269,38,40,52,40,72,27,200,50,54,c.MEDIUM_FAST,50,!1),new G(e.ARAQUANID,7,!1,!1,!1,"Water Bubble Pokémon",I.WATER,I.BUG,1.8,82,O.WATER_BUBBLE,O.NONE,O.WATER_ABSORB,454,68,70,92,50,132,42,100,50,159,c.MEDIUM_FAST,50,!1),new G(e.FOMANTIS,7,!1,!1,!1,"Sickle Grass Pokémon",I.GRASS,null,.3,1.5,O.LEAF_GUARD,O.NONE,O.CONTRARY,250,40,55,35,50,35,35,190,50,50,c.MEDIUM_FAST,50,!1),new G(e.LURANTIS,7,!1,!1,!1,"Bloom Sickle Pokémon",I.GRASS,null,.9,18.5,O.LEAF_GUARD,O.NONE,O.CONTRARY,480,70,105,90,80,90,45,75,50,168,c.MEDIUM_FAST,50,!1),new G(e.MORELULL,7,!1,!1,!1,"Illuminating Pokémon",I.GRASS,I.FAIRY,.2,1.5,O.ILLUMINATE,O.EFFECT_SPORE,O.RAIN_DISH,285,40,35,55,65,75,15,190,50,57,c.MEDIUM_FAST,50,!1),new G(e.SHIINOTIC,7,!1,!1,!1,"Illuminating Pokémon",I.GRASS,I.FAIRY,1,11.5,O.ILLUMINATE,O.EFFECT_SPORE,O.RAIN_DISH,405,60,45,80,90,100,30,75,50,142,c.MEDIUM_FAST,50,!1),new G(e.SALANDIT,7,!1,!1,!1,"Toxic Lizard Pokémon",I.POISON,I.FIRE,.6,4.8,O.CORROSION,O.NONE,O.OBLIVIOUS,320,48,44,40,71,40,77,120,50,64,c.MEDIUM_FAST,87.5,!1),new G(e.SALAZZLE,7,!1,!1,!1,"Toxic Lizard Pokémon",I.POISON,I.FIRE,1.2,22.2,O.CORROSION,O.NONE,O.OBLIVIOUS,480,68,64,60,111,60,117,45,50,168,c.MEDIUM_FAST,0,!1),new G(e.STUFFUL,7,!1,!1,!1,"Flailing Pokémon",I.NORMAL,I.FIGHTING,.5,6.8,O.FLUFFY,O.KLUTZ,O.CUTE_CHARM,340,70,75,50,45,50,50,140,50,68,c.MEDIUM_FAST,50,!1),new G(e.BEWEAR,7,!1,!1,!1,"Strong Arm Pokémon",I.NORMAL,I.FIGHTING,2.1,135,O.FLUFFY,O.KLUTZ,O.UNNERVE,500,120,125,80,55,60,60,70,50,175,c.MEDIUM_FAST,50,!1),new G(e.BOUNSWEET,7,!1,!1,!1,"Fruit Pokémon",I.GRASS,null,.3,3.2,O.LEAF_GUARD,O.OBLIVIOUS,O.SWEET_VEIL,210,42,30,38,30,38,32,235,50,42,c.MEDIUM_SLOW,0,!1),new G(e.STEENEE,7,!1,!1,!1,"Fruit Pokémon",I.GRASS,null,.7,8.2,O.LEAF_GUARD,O.OBLIVIOUS,O.SWEET_VEIL,290,52,40,48,40,48,62,120,50,102,c.MEDIUM_SLOW,0,!1),new G(e.TSAREENA,7,!1,!1,!1,"Fruit Pokémon",I.GRASS,null,1.2,21.4,O.LEAF_GUARD,O.QUEENLY_MAJESTY,O.SWEET_VEIL,510,72,120,98,50,98,72,45,50,255,c.MEDIUM_SLOW,0,!1),new G(e.COMFEY,7,!1,!1,!1,"Posy Picker Pokémon",I.FAIRY,null,.1,.3,O.FLOWER_VEIL,O.TRIAGE,O.NATURAL_CURE,485,51,52,90,82,110,100,60,50,170,c.FAST,25,!1),new G(e.ORANGURU,7,!1,!1,!1,"Sage Pokémon",I.NORMAL,I.PSYCHIC,1.5,76,O.INNER_FOCUS,O.TELEPATHY,O.SYMBIOSIS,490,90,60,80,90,110,60,45,50,172,c.SLOW,50,!1),new G(e.PASSIMIAN,7,!1,!1,!1,"Teamwork Pokémon",I.FIGHTING,null,2,82.8,O.RECEIVER,O.NONE,O.DEFIANT,490,100,120,90,40,60,80,45,50,172,c.SLOW,50,!1),new G(e.WIMPOD,7,!1,!1,!1,"Turn Tail Pokémon",I.BUG,I.WATER,.5,12,O.WIMP_OUT,O.NONE,O.RUN_AWAY,230,25,35,40,20,30,80,90,50,46,c.MEDIUM_FAST,50,!1),new G(e.GOLISOPOD,7,!1,!1,!1,"Hard Scale Pokémon",I.BUG,I.WATER,2,108,O.EMERGENCY_EXIT,O.NONE,O.ANTICIPATION,530,75,125,140,60,90,40,45,50,186,c.MEDIUM_FAST,50,!1),new G(e.SANDYGAST,7,!1,!1,!1,"Sand Heap Pokémon",I.GHOST,I.GROUND,.5,70,O.WATER_COMPACTION,O.NONE,O.SAND_VEIL,320,55,55,80,70,45,15,140,50,64,c.MEDIUM_FAST,50,!1),new G(e.PALOSSAND,7,!1,!1,!1,"Sand Castle Pokémon",I.GHOST,I.GROUND,1.3,250,O.WATER_COMPACTION,O.NONE,O.SAND_VEIL,480,85,75,110,100,75,35,60,50,168,c.MEDIUM_FAST,50,!1),new G(e.PYUKUMUKU,7,!1,!1,!1,"Sea Cucumber Pokémon",I.WATER,null,.3,1.2,O.INNARDS_OUT,O.NONE,O.UNAWARE,410,55,60,130,30,130,5,60,50,144,c.FAST,50,!1),new G(e.TYPE_NULL,7,!0,!1,!1,"Synthetic Pokémon",I.NORMAL,null,1.9,120.5,O.BATTLE_ARMOR,O.NONE,O.NONE,534,95,95,95,95,95,59,3,0,107,c.SLOW,null,!1),new G(e.SILVALLY,7,!0,!1,!1,"Synthetic Pokémon",I.NORMAL,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285,c.SLOW,null,!1,!1,new Y("Type: Normal","normal",I.NORMAL,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285,!1,"",!0),new Y("Type: Fighting","fighting",I.FIGHTING,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new Y("Type: Flying","flying",I.FLYING,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new Y("Type: Poison","poison",I.POISON,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new Y("Type: Ground","ground",I.GROUND,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new Y("Type: Rock","rock",I.ROCK,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new Y("Type: Bug","bug",I.BUG,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new Y("Type: Ghost","ghost",I.GHOST,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new Y("Type: Steel","steel",I.STEEL,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new Y("Type: Fire","fire",I.FIRE,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new Y("Type: Water","water",I.WATER,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new Y("Type: Grass","grass",I.GRASS,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new Y("Type: Electric","electric",I.ELECTRIC,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new Y("Type: Psychic","psychic",I.PSYCHIC,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new Y("Type: Ice","ice",I.ICE,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new Y("Type: Dragon","dragon",I.DRAGON,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new Y("Type: Dark","dark",I.DARK,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new Y("Type: Fairy","fairy",I.FAIRY,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285)),new G(e.MINIOR,7,!1,!1,!1,"Meteor Pokémon",I.ROCK,I.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,c.MEDIUM_SLOW,null,!1,!1,new Y("Red Meteor Form","red-meteor",I.ROCK,I.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new Y("Orange Meteor Form","orange-meteor",I.ROCK,I.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new Y("Yellow Meteor Form","yellow-meteor",I.ROCK,I.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new Y("Green Meteor Form","green-meteor",I.ROCK,I.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new Y("Blue Meteor Form","blue-meteor",I.ROCK,I.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new Y("Indigo Meteor Form","indigo-meteor",I.ROCK,I.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new Y("Violet Meteor Form","violet-meteor",I.ROCK,I.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new Y("Red Core Form","red",I.ROCK,I.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,154,!1,null,!0),new Y("Orange Core Form","orange",I.ROCK,I.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,154,!1,null,!0),new Y("Yellow Core Form","yellow",I.ROCK,I.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,154,!1,null,!0),new Y("Green Core Form","green",I.ROCK,I.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,154,!1,null,!0),new Y("Blue Core Form","blue",I.ROCK,I.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,154,!1,null,!0),new Y("Indigo Core Form","indigo",I.ROCK,I.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,154,!1,null,!0),new Y("Violet Core Form","violet",I.ROCK,I.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,154,!1,null,!0)),new G(e.KOMALA,7,!1,!1,!1,"Drowsing Pokémon",I.NORMAL,null,.4,19.9,O.COMATOSE,O.NONE,O.NONE,480,65,115,65,75,95,65,45,70,168,c.SLOW,50,!1),new G(e.TURTONATOR,7,!1,!1,!1,"Blast Turtle Pokémon",I.FIRE,I.DRAGON,2,212,O.SHELL_ARMOR,O.NONE,O.NONE,485,60,78,135,91,85,36,70,50,170,c.MEDIUM_FAST,50,!1),new G(e.TOGEDEMARU,7,!1,!1,!1,"Roly-Poly Pokémon",I.ELECTRIC,I.STEEL,.3,3.3,O.IRON_BARBS,O.LIGHTNING_ROD,O.STURDY,435,65,98,63,40,73,96,180,50,152,c.MEDIUM_FAST,50,!1),new G(e.MIMIKYU,7,!1,!1,!1,"Disguise Pokémon",I.GHOST,I.FAIRY,.2,.7,O.DISGUISE,O.NONE,O.NONE,476,55,90,80,50,105,96,45,50,167,c.MEDIUM_FAST,50,!1,!1,new Y("Disguised Form","disguised",I.GHOST,I.FAIRY,.2,.7,O.DISGUISE,O.NONE,O.NONE,476,55,90,80,50,105,96,45,50,167,!1,null,!0),new Y("Busted Form","busted",I.GHOST,I.FAIRY,.2,.7,O.DISGUISE,O.NONE,O.NONE,476,55,90,80,50,105,96,45,50,167)),new G(e.BRUXISH,7,!1,!1,!1,"Gnash Teeth Pokémon",I.WATER,I.PSYCHIC,.9,19,O.DAZZLING,O.STRONG_JAW,O.WONDER_SKIN,475,68,105,70,70,70,92,80,70,166,c.MEDIUM_FAST,50,!1),new G(e.DRAMPA,7,!1,!1,!1,"Placid Pokémon",I.NORMAL,I.DRAGON,3,185,O.BERSERK,O.SAP_SIPPER,O.CLOUD_NINE,485,78,60,85,135,91,36,70,50,170,c.MEDIUM_FAST,50,!1),new G(e.DHELMISE,7,!1,!1,!1,"Sea Creeper Pokémon",I.GHOST,I.GRASS,3.9,210,O.STEELWORKER,O.NONE,O.NONE,517,70,131,100,86,90,40,25,50,181,c.MEDIUM_FAST,null,!1),new G(e.JANGMO_O,7,!1,!1,!1,"Scaly Pokémon",I.DRAGON,null,.6,29.7,O.BULLETPROOF,O.SOUNDPROOF,O.OVERCOAT,300,45,55,65,45,45,45,45,50,60,c.SLOW,50,!1),new G(e.HAKAMO_O,7,!1,!1,!1,"Scaly Pokémon",I.DRAGON,I.FIGHTING,1.2,47,O.BULLETPROOF,O.SOUNDPROOF,O.OVERCOAT,420,55,75,90,65,70,65,45,50,147,c.SLOW,50,!1),new G(e.KOMMO_O,7,!1,!1,!1,"Scaly Pokémon",I.DRAGON,I.FIGHTING,1.6,78.2,O.BULLETPROOF,O.SOUNDPROOF,O.OVERCOAT,600,75,110,125,100,105,85,45,50,300,c.SLOW,50,!1),new G(e.TAPU_KOKO,7,!0,!1,!1,"Land Spirit Pokémon",I.ELECTRIC,I.FAIRY,1.8,20.5,O.ELECTRIC_SURGE,O.NONE,O.TELEPATHY,570,70,115,85,95,75,130,3,50,285,c.SLOW,null,!1),new G(e.TAPU_LELE,7,!0,!1,!1,"Land Spirit Pokémon",I.PSYCHIC,I.FAIRY,1.2,18.6,O.PSYCHIC_SURGE,O.NONE,O.TELEPATHY,570,70,85,75,130,115,95,3,50,285,c.SLOW,null,!1),new G(e.TAPU_BULU,7,!0,!1,!1,"Land Spirit Pokémon",I.GRASS,I.FAIRY,1.9,45.5,O.GRASSY_SURGE,O.NONE,O.TELEPATHY,570,70,130,115,85,95,75,3,50,285,c.SLOW,null,!1),new G(e.TAPU_FINI,7,!0,!1,!1,"Land Spirit Pokémon",I.WATER,I.FAIRY,1.3,21.2,O.MISTY_SURGE,O.NONE,O.TELEPATHY,570,70,75,115,95,130,85,3,50,285,c.SLOW,null,!1),new G(e.COSMOG,7,!0,!1,!1,"Nebula Pokémon",I.PSYCHIC,null,.2,.1,O.UNAWARE,O.NONE,O.NONE,200,43,29,31,29,31,37,45,0,40,c.SLOW,null,!1),new G(e.COSMOEM,7,!0,!1,!1,"Protostar Pokémon",I.PSYCHIC,null,.1,999.9,O.STURDY,O.NONE,O.NONE,400,43,29,131,29,131,37,45,0,140,c.SLOW,null,!1),new G(e.SOLGALEO,7,!1,!0,!1,"Sunne Pokémon",I.PSYCHIC,I.STEEL,3.4,230,O.FULL_METAL_BODY,O.NONE,O.NONE,680,137,137,107,113,89,97,45,0,340,c.SLOW,null,!1),new G(e.LUNALA,7,!1,!0,!1,"Moone Pokémon",I.PSYCHIC,I.GHOST,4,120,O.SHADOW_SHIELD,O.NONE,O.NONE,680,137,113,89,137,107,97,45,0,340,c.SLOW,null,!1),new G(e.NIHILEGO,7,!0,!1,!1,"Parasite Pokémon",I.ROCK,I.POISON,1.2,55.5,O.BEAST_BOOST,O.NONE,O.NONE,570,109,53,47,127,131,103,45,0,285,c.SLOW,null,!1),new G(e.BUZZWOLE,7,!0,!1,!1,"Swollen Pokémon",I.BUG,I.FIGHTING,2.4,333.6,O.BEAST_BOOST,O.NONE,O.NONE,570,107,139,139,53,53,79,45,0,285,c.SLOW,null,!1),new G(e.PHEROMOSA,7,!0,!1,!1,"Lissome Pokémon",I.BUG,I.FIGHTING,1.8,25,O.BEAST_BOOST,O.NONE,O.NONE,570,71,137,37,137,37,151,45,0,285,c.SLOW,null,!1),new G(e.XURKITREE,7,!0,!1,!1,"Glowing Pokémon",I.ELECTRIC,null,3.8,100,O.BEAST_BOOST,O.NONE,O.NONE,570,83,89,71,173,71,83,45,0,285,c.SLOW,null,!1),new G(e.CELESTEELA,7,!0,!1,!1,"Launch Pokémon",I.STEEL,I.FLYING,9.2,999.9,O.BEAST_BOOST,O.NONE,O.NONE,570,97,101,103,107,101,61,45,0,285,c.SLOW,null,!1),new G(e.KARTANA,7,!0,!1,!1,"Drawn Sword Pokémon",I.GRASS,I.STEEL,.3,.1,O.BEAST_BOOST,O.NONE,O.NONE,570,59,181,131,59,31,109,45,0,285,c.SLOW,null,!1),new G(e.GUZZLORD,7,!0,!1,!1,"Junkivore Pokémon",I.DARK,I.DRAGON,5.5,888,O.BEAST_BOOST,O.NONE,O.NONE,570,223,101,53,97,53,43,45,0,285,c.SLOW,null,!1),new G(e.NECROZMA,7,!1,!0,!1,"Prism Pokémon",I.PSYCHIC,null,2.4,230,O.PRISM_ARMOR,O.NONE,O.NONE,600,97,107,101,127,89,79,255,0,300,c.SLOW,null,!1,!1,new Y("Normal","",I.PSYCHIC,null,2.4,230,O.PRISM_ARMOR,O.NONE,O.NONE,600,97,107,101,127,89,79,255,0,300,!1,null,!0),new Y("Dusk Mane","dusk-mane",I.PSYCHIC,I.STEEL,3.8,460,O.PRISM_ARMOR,O.NONE,O.NONE,680,97,157,127,113,109,77,255,0,300),new Y("Dawn Wings","dawn-wings",I.PSYCHIC,I.GHOST,4.2,350,O.PRISM_ARMOR,O.NONE,O.NONE,680,97,113,109,157,127,77,255,0,300),new Y("Ultra","ultra",I.PSYCHIC,I.DRAGON,7.5,230,O.NEUROFORCE,O.NONE,O.NONE,754,97,167,97,167,97,129,255,0,300)),new G(e.MAGEARNA,7,!1,!1,!0,"Artificial Pokémon",I.STEEL,I.FAIRY,1,80.5,O.SOUL_HEART,O.NONE,O.NONE,600,80,95,115,130,115,65,3,0,300,c.SLOW,null,!1,!1,new Y("Normal","",I.STEEL,I.FAIRY,1,80.5,O.SOUL_HEART,O.NONE,O.NONE,600,80,95,115,130,115,65,3,0,300,!1,null,!0),new Y("Original","original",I.STEEL,I.FAIRY,1,80.5,O.SOUL_HEART,O.NONE,O.NONE,600,80,95,115,130,115,65,3,0,300,!1,null,!0)),new G(e.MARSHADOW,7,!1,!1,!0,"Gloomdweller Pokémon",I.FIGHTING,I.GHOST,.7,22.2,O.TECHNICIAN,O.NONE,O.NONE,600,90,125,80,90,90,125,3,0,300,c.SLOW,null,!1,!0,new Y("Normal","",I.FIGHTING,I.GHOST,.7,22.2,O.TECHNICIAN,O.NONE,O.NONE,600,90,125,80,90,90,125,3,0,300,!1,null,!0),new Y("Zenith","zenith",I.FIGHTING,I.GHOST,.7,22.2,O.TECHNICIAN,O.NONE,O.NONE,600,90,125,80,90,90,125,3,0,300)),new G(e.POIPOLE,7,!0,!1,!1,"Poison Pin Pokémon",I.POISON,null,.6,1.8,O.BEAST_BOOST,O.NONE,O.NONE,420,67,73,67,73,67,73,45,0,210,c.SLOW,null,!1),new G(e.NAGANADEL,7,!0,!1,!1,"Poison Pin Pokémon",I.POISON,I.DRAGON,3.6,150,O.BEAST_BOOST,O.NONE,O.NONE,540,73,73,73,127,73,121,45,0,270,c.SLOW,null,!1),new G(e.STAKATAKA,7,!0,!1,!1,"Rampart Pokémon",I.ROCK,I.STEEL,5.5,820,O.BEAST_BOOST,O.NONE,O.NONE,570,61,131,211,53,101,13,30,0,285,c.SLOW,null,!1),new G(e.BLACEPHALON,7,!0,!1,!1,"Fireworks Pokémon",I.FIRE,I.GHOST,1.8,13,O.BEAST_BOOST,O.NONE,O.NONE,570,53,127,53,151,79,107,30,0,285,c.SLOW,null,!1),new G(e.ZERAORA,7,!1,!1,!0,"Thunderclap Pokémon",I.ELECTRIC,null,1.5,44.5,O.VOLT_ABSORB,O.NONE,O.NONE,600,88,112,75,102,80,143,3,0,300,c.SLOW,null,!1),new G(e.MELTAN,7,!1,!1,!0,"Hex Nut Pokémon",I.STEEL,null,.2,8,O.MAGNET_PULL,O.NONE,O.NONE,300,46,65,65,55,35,34,3,0,150,c.SLOW,null,!1),new G(e.MELMETAL,7,!1,!1,!0,"Hex Nut Pokémon",I.STEEL,null,2.5,800,O.IRON_FIST,O.NONE,O.NONE,600,135,143,143,80,65,34,3,0,300,c.SLOW,null,!1,!0,new Y("Normal","",I.STEEL,null,2.5,800,O.IRON_FIST,O.NONE,O.NONE,600,135,143,143,80,65,34,3,0,300,!1,null,!0),new Y("G-Max",Ue.GIGANTAMAX,I.STEEL,null,25,999.9,O.IRON_FIST,O.NONE,O.NONE,700,175,165,155,85,75,45,3,0,300)),new G(e.GROOKEY,8,!1,!1,!1,"Chimp Pokémon",I.GRASS,null,.3,5,O.OVERGROW,O.NONE,O.GRASSY_SURGE,310,50,65,50,40,40,65,45,50,62,c.MEDIUM_SLOW,87.5,!1),new G(e.THWACKEY,8,!1,!1,!1,"Beat Pokémon",I.GRASS,null,.7,14,O.OVERGROW,O.NONE,O.GRASSY_SURGE,420,70,85,70,55,60,80,45,50,147,c.MEDIUM_SLOW,87.5,!1),new G(e.RILLABOOM,8,!1,!1,!1,"Drummer Pokémon",I.GRASS,null,2.1,90,O.OVERGROW,O.NONE,O.GRASSY_SURGE,530,100,125,90,60,70,85,45,50,265,c.MEDIUM_SLOW,87.5,!1,!0,new Y("Normal","",I.GRASS,null,2.1,90,O.OVERGROW,O.NONE,O.GRASSY_SURGE,530,100,125,90,60,70,85,45,50,265,!1,null,!0),new Y("G-Max",Ue.GIGANTAMAX,I.GRASS,null,28,999.9,O.GRASSY_SURGE,O.NONE,O.GRASSY_SURGE,630,125,150,105,85,85,80,45,50,265)),new G(e.SCORBUNNY,8,!1,!1,!1,"Rabbit Pokémon",I.FIRE,null,.3,4.5,O.BLAZE,O.NONE,O.LIBERO,310,50,71,40,40,40,69,45,50,62,c.MEDIUM_SLOW,87.5,!1),new G(e.RABOOT,8,!1,!1,!1,"Rabbit Pokémon",I.FIRE,null,.6,9,O.BLAZE,O.NONE,O.LIBERO,420,65,86,60,55,60,94,45,50,147,c.MEDIUM_SLOW,87.5,!1),new G(e.CINDERACE,8,!1,!1,!1,"Striker Pokémon",I.FIRE,null,1.4,33,O.BLAZE,O.NONE,O.LIBERO,530,80,116,75,65,75,119,45,50,265,c.MEDIUM_SLOW,87.5,!1,!0,new Y("Normal","",I.FIRE,null,1.4,33,O.BLAZE,O.NONE,O.LIBERO,530,80,116,75,65,75,119,45,50,265,!1,null,!0),new Y("G-Max",Ue.GIGANTAMAX,I.FIRE,null,27,999.9,O.LIBERO,O.NONE,O.LIBERO,630,100,146,80,90,80,134,45,50,265)),new G(e.SOBBLE,8,!1,!1,!1,"Water Lizard Pokémon",I.WATER,null,.3,4,O.TORRENT,O.NONE,O.SNIPER,310,50,40,40,70,40,70,45,50,62,c.MEDIUM_SLOW,87.5,!1),new G(e.DRIZZILE,8,!1,!1,!1,"Water Lizard Pokémon",I.WATER,null,.7,11.5,O.TORRENT,O.NONE,O.SNIPER,420,65,60,55,95,55,90,45,50,147,c.MEDIUM_SLOW,87.5,!1),new G(e.INTELEON,8,!1,!1,!1,"Secret Agent Pokémon",I.WATER,null,1.9,45.2,O.TORRENT,O.NONE,O.SNIPER,530,70,85,65,125,65,120,45,50,265,c.MEDIUM_SLOW,87.5,!1,!0,new Y("Normal","",I.WATER,null,1.9,45.2,O.TORRENT,O.NONE,O.SNIPER,530,70,85,65,125,65,120,45,50,265,!1,null,!0),new Y("G-Max",Ue.GIGANTAMAX,I.WATER,null,40,999.9,O.SNIPER,O.NONE,O.SNIPER,630,95,97,77,147,77,137,45,50,265)),new G(e.SKWOVET,8,!1,!1,!1,"Cheeky Pokémon",I.NORMAL,null,.3,2.5,O.CHEEK_POUCH,O.NONE,O.GLUTTONY,275,70,55,55,35,35,25,255,50,55,c.MEDIUM_FAST,50,!1),new G(e.GREEDENT,8,!1,!1,!1,"Greedy Pokémon",I.NORMAL,null,.6,6,O.CHEEK_POUCH,O.NONE,O.GLUTTONY,460,120,95,95,55,75,20,90,50,161,c.MEDIUM_FAST,50,!1),new G(e.ROOKIDEE,8,!1,!1,!1,"Tiny Bird Pokémon",I.FLYING,null,.2,1.8,O.KEEN_EYE,O.UNNERVE,O.BIG_PECKS,245,38,47,35,33,35,57,255,50,49,c.MEDIUM_SLOW,50,!1),new G(e.CORVISQUIRE,8,!1,!1,!1,"Raven Pokémon",I.FLYING,null,.8,16,O.KEEN_EYE,O.UNNERVE,O.BIG_PECKS,365,68,67,55,43,55,77,120,50,128,c.MEDIUM_SLOW,50,!1),new G(e.CORVIKNIGHT,8,!1,!1,!1,"Raven Pokémon",I.FLYING,I.STEEL,2.2,75,O.PRESSURE,O.UNNERVE,O.MIRROR_ARMOR,495,98,87,105,53,85,67,45,50,248,c.MEDIUM_SLOW,50,!1,!0,new Y("Normal","",I.FLYING,I.STEEL,2.2,75,O.PRESSURE,O.UNNERVE,O.MIRROR_ARMOR,495,98,87,105,53,85,67,45,50,248,!1,null,!0),new Y("G-Max",Ue.GIGANTAMAX,I.FLYING,I.STEEL,14,999.9,O.MIRROR_ARMOR,O.MIRROR_ARMOR,O.MIRROR_ARMOR,595,128,102,140,53,95,77,45,50,248)),new G(e.BLIPBUG,8,!1,!1,!1,"Larva Pokémon",I.BUG,null,.4,8,O.SWARM,O.COMPOUND_EYES,O.TELEPATHY,180,25,20,20,25,45,45,255,50,36,c.MEDIUM_FAST,50,!1),new G(e.DOTTLER,8,!1,!1,!1,"Radome Pokémon",I.BUG,I.PSYCHIC,.4,19.5,O.SWARM,O.COMPOUND_EYES,O.TELEPATHY,335,50,35,80,50,90,30,120,50,117,c.MEDIUM_FAST,50,!1),new G(e.ORBEETLE,8,!1,!1,!1,"Seven Spot Pokémon",I.BUG,I.PSYCHIC,.4,40.8,O.SWARM,O.FRISK,O.TELEPATHY,505,60,45,110,80,120,90,45,50,253,c.MEDIUM_FAST,50,!1,!0,new Y("Normal","",I.BUG,I.PSYCHIC,.4,40.8,O.SWARM,O.FRISK,O.TELEPATHY,505,60,45,110,80,120,90,45,50,253,!1,null,!0),new Y("G-Max",Ue.GIGANTAMAX,I.BUG,I.PSYCHIC,14,999.9,O.TRACE,O.TRACE,O.TRACE,605,90,45,130,110,140,90,45,50,253)),new G(e.NICKIT,8,!1,!1,!1,"Fox Pokémon",I.DARK,null,.6,8.9,O.RUN_AWAY,O.UNBURDEN,O.STAKEOUT,245,40,28,28,47,52,50,255,50,49,c.FAST,50,!1),new G(e.THIEVUL,8,!1,!1,!1,"Fox Pokémon",I.DARK,null,1.2,19.9,O.RUN_AWAY,O.UNBURDEN,O.STAKEOUT,455,70,58,58,87,92,90,127,50,159,c.FAST,50,!1),new G(e.GOSSIFLEUR,8,!1,!1,!1,"Flowering Pokémon",I.GRASS,null,.4,2.2,O.COTTON_DOWN,O.REGENERATOR,O.EFFECT_SPORE,250,40,40,60,40,60,10,190,50,50,c.MEDIUM_FAST,50,!1),new G(e.ELDEGOSS,8,!1,!1,!1,"Cotton Bloom Pokémon",I.GRASS,null,.5,2.5,O.COTTON_DOWN,O.REGENERATOR,O.EFFECT_SPORE,460,60,50,90,80,120,60,75,50,161,c.MEDIUM_FAST,50,!1),new G(e.WOOLOO,8,!1,!1,!1,"Sheep Pokémon",I.NORMAL,null,.6,6,O.FLUFFY,O.RUN_AWAY,O.BULLETPROOF,270,42,40,55,40,45,48,255,50,122,c.MEDIUM_FAST,50,!1),new G(e.DUBWOOL,8,!1,!1,!1,"Sheep Pokémon",I.NORMAL,null,1.3,43,O.FLUFFY,O.STEADFAST,O.BULLETPROOF,490,72,80,100,60,90,88,127,50,172,c.MEDIUM_FAST,50,!1),new G(e.CHEWTLE,8,!1,!1,!1,"Snapping Pokémon",I.WATER,null,.3,8.5,O.STRONG_JAW,O.SHELL_ARMOR,O.SWIFT_SWIM,284,50,64,50,38,38,44,255,50,57,c.MEDIUM_FAST,50,!1),new G(e.DREDNAW,8,!1,!1,!1,"Bite Pokémon",I.WATER,I.ROCK,1,115.5,O.STRONG_JAW,O.SHELL_ARMOR,O.SWIFT_SWIM,485,90,115,90,48,68,74,75,50,170,c.MEDIUM_FAST,50,!1,!0,new Y("Normal","",I.WATER,I.ROCK,1,115.5,O.STRONG_JAW,O.SHELL_ARMOR,O.SWIFT_SWIM,485,90,115,90,48,68,74,75,50,170,!1,null,!0),new Y("G-Max",Ue.GIGANTAMAX,I.WATER,I.ROCK,24,999.9,O.STRONG_JAW,O.STRONG_JAW,O.STRONG_JAW,585,115,145,115,43,83,84,75,50,170)),new G(e.YAMPER,8,!1,!1,!1,"Puppy Pokémon",I.ELECTRIC,null,.3,13.5,O.BALL_FETCH,O.NONE,O.RATTLED,270,59,45,50,40,50,26,255,50,54,c.FAST,50,!1),new G(e.BOLTUND,8,!1,!1,!1,"Dog Pokémon",I.ELECTRIC,null,1,34,O.STRONG_JAW,O.NONE,O.COMPETITIVE,490,69,90,60,90,60,121,45,50,172,c.FAST,50,!1),new G(e.ROLYCOLY,8,!1,!1,!1,"Coal Pokémon",I.ROCK,null,.3,12,O.STEAM_ENGINE,O.HEATPROOF,O.FLASH_FIRE,240,30,40,50,40,50,30,255,50,48,c.MEDIUM_SLOW,50,!1),new G(e.CARKOL,8,!1,!1,!1,"Coal Pokémon",I.ROCK,I.FIRE,1.1,78,O.STEAM_ENGINE,O.FLAME_BODY,O.FLASH_FIRE,410,80,60,90,60,70,50,120,50,144,c.MEDIUM_SLOW,50,!1),new G(e.COALOSSAL,8,!1,!1,!1,"Coal Pokémon",I.ROCK,I.FIRE,2.8,310.5,O.STEAM_ENGINE,O.FLAME_BODY,O.FLASH_FIRE,510,110,80,120,80,90,30,45,50,255,c.MEDIUM_SLOW,50,!1,!0,new Y("Normal","",I.ROCK,I.FIRE,2.8,310.5,O.STEAM_ENGINE,O.FLAME_BODY,O.FLASH_FIRE,510,110,80,120,80,90,30,45,50,255,!1,null,!0),new Y("G-Max",Ue.GIGANTAMAX,I.ROCK,I.FIRE,42,999.9,O.STEAM_ENGINE,O.STEAM_ENGINE,O.STEAM_ENGINE,610,140,95,130,95,110,40,45,50,255)),new G(e.APPLIN,8,!1,!1,!1,"Apple Core Pokémon",I.GRASS,I.DRAGON,.2,.5,O.RIPEN,O.GLUTTONY,O.BULLETPROOF,260,40,40,80,40,40,20,255,50,52,c.ERRATIC,50,!1),new G(e.FLAPPLE,8,!1,!1,!1,"Apple Wing Pokémon",I.GRASS,I.DRAGON,.3,1,O.RIPEN,O.GLUTTONY,O.HUSTLE,485,70,110,80,95,60,70,45,50,170,c.ERRATIC,50,!1,!0,new Y("Normal","",I.GRASS,I.DRAGON,.3,1,O.RIPEN,O.GLUTTONY,O.HUSTLE,485,70,110,80,95,60,70,45,50,170,!1,null,!0),new Y("G-Max",Ue.GIGANTAMAX,I.GRASS,I.DRAGON,24,999.9,O.HUSTLE,O.HUSTLE,O.HUSTLE,585,90,130,100,85,80,100,45,50,170)),new G(e.APPLETUN,8,!1,!1,!1,"Apple Nectar Pokémon",I.GRASS,I.DRAGON,.4,13,O.RIPEN,O.GLUTTONY,O.THICK_FAT,485,110,85,80,100,80,30,45,50,170,c.ERRATIC,50,!1,!0,new Y("Normal","",I.GRASS,I.DRAGON,.4,13,O.RIPEN,O.GLUTTONY,O.THICK_FAT,485,110,85,80,100,80,30,45,50,170,!1,null,!0),new Y("G-Max",Ue.GIGANTAMAX,I.GRASS,I.DRAGON,24,999.9,O.THICK_FAT,O.THICK_FAT,O.THICK_FAT,585,130,75,115,125,115,25,45,50,170)),new G(e.SILICOBRA,8,!1,!1,!1,"Sand Snake Pokémon",I.GROUND,null,2.2,7.6,O.SAND_SPIT,O.SHED_SKIN,O.SAND_VEIL,315,52,57,75,35,50,46,255,50,63,c.MEDIUM_FAST,50,!1),new G(e.SANDACONDA,8,!1,!1,!1,"Sand Snake Pokémon",I.GROUND,null,3.8,65.5,O.SAND_SPIT,O.SHED_SKIN,O.SAND_VEIL,510,72,107,125,65,70,71,120,50,179,c.MEDIUM_FAST,50,!1,!0,new Y("Normal","",I.GROUND,null,3.8,65.5,O.SAND_SPIT,O.SHED_SKIN,O.SAND_VEIL,510,72,107,125,65,70,71,120,50,179,!1,null,!0),new Y("G-Max",Ue.GIGANTAMAX,I.GROUND,null,22,999.9,O.SAND_SPIT,O.SAND_SPIT,O.SAND_SPIT,610,117,137,140,55,80,81,120,50,179)),new G(e.CRAMORANT,8,!1,!1,!1,"Gulp Pokémon",I.FLYING,I.WATER,.8,18,O.GULP_MISSILE,O.NONE,O.NONE,475,70,85,55,85,95,85,45,50,166,c.MEDIUM_FAST,50,!1,!1,new Y("Normal","",I.FLYING,I.WATER,.8,18,O.GULP_MISSILE,O.NONE,O.NONE,475,70,85,55,85,95,85,45,50,166,!1,null,!0),new Y("Gulping Form","gulping",I.FLYING,I.WATER,.8,18,O.GULP_MISSILE,O.NONE,O.NONE,475,70,85,55,85,95,85,45,50,166),new Y("Gorging Form","gorging",I.FLYING,I.WATER,.8,18,O.GULP_MISSILE,O.NONE,O.NONE,475,70,85,55,85,95,85,45,50,166)),new G(e.ARROKUDA,8,!1,!1,!1,"Rush Pokémon",I.WATER,null,.5,1,O.SWIFT_SWIM,O.NONE,O.PROPELLER_TAIL,280,41,63,40,40,30,66,255,50,56,c.SLOW,50,!1),new G(e.BARRASKEWDA,8,!1,!1,!1,"Skewer Pokémon",I.WATER,null,1.3,30,O.SWIFT_SWIM,O.NONE,O.PROPELLER_TAIL,490,61,123,60,60,50,136,60,50,172,c.SLOW,50,!1),new G(e.TOXEL,8,!1,!1,!1,"Baby Pokémon",I.ELECTRIC,I.POISON,.4,11,O.RATTLED,O.STATIC,O.KLUTZ,242,40,38,35,54,35,40,75,50,48,c.MEDIUM_SLOW,50,!1),new G(e.TOXTRICITY,8,!1,!1,!1,"Punk Pokémon",I.ELECTRIC,I.POISON,1.6,40,O.PUNK_ROCK,O.PLUS,O.TECHNICIAN,502,75,98,70,114,70,75,45,50,176,c.MEDIUM_SLOW,50,!1,!0,new Y("Amped Form","amped",I.ELECTRIC,I.POISON,1.6,40,O.PUNK_ROCK,O.PLUS,O.TECHNICIAN,502,75,98,70,114,70,75,45,50,176,!1,"",!0),new Y("Low-Key Form","lowkey",I.ELECTRIC,I.POISON,1.6,40,O.PUNK_ROCK,O.MINUS,O.TECHNICIAN,502,75,98,70,114,70,75,45,50,176,!1,"lowkey",!0),new Y("G-Max",Ue.GIGANTAMAX,I.ELECTRIC,I.POISON,24,999.9,O.PUNK_ROCK,O.PUNK_ROCK,O.PUNK_ROCK,602,114,98,82,144,82,82,45,50,176)),new G(e.SIZZLIPEDE,8,!1,!1,!1,"Radiator Pokémon",I.FIRE,I.BUG,.7,1,O.FLASH_FIRE,O.WHITE_SMOKE,O.FLAME_BODY,305,50,65,45,50,50,45,190,50,61,c.MEDIUM_FAST,50,!1),new G(e.CENTISKORCH,8,!1,!1,!1,"Radiator Pokémon",I.FIRE,I.BUG,3,120,O.FLASH_FIRE,O.WHITE_SMOKE,O.FLAME_BODY,525,100,115,65,90,90,65,75,50,184,c.MEDIUM_FAST,50,!1,!0,new Y("Normal","",I.FIRE,I.BUG,3,120,O.FLASH_FIRE,O.WHITE_SMOKE,O.FLAME_BODY,525,100,115,65,90,90,65,75,50,184,!1,null,!0),new Y("G-Max",Ue.GIGANTAMAX,I.FIRE,I.BUG,75,999.9,O.FLASH_FIRE,O.FLASH_FIRE,O.FLASH_FIRE,625,140,145,75,90,100,75,75,50,184)),new G(e.CLOBBOPUS,8,!1,!1,!1,"Tantrum Pokémon",I.FIGHTING,null,.6,4,O.LIMBER,O.NONE,O.TECHNICIAN,310,50,68,60,50,50,32,180,50,62,c.MEDIUM_SLOW,50,!1),new G(e.GRAPPLOCT,8,!1,!1,!1,"Jujitsu Pokémon",I.FIGHTING,null,1.6,39,O.LIMBER,O.NONE,O.TECHNICIAN,480,80,118,90,70,80,42,45,50,168,c.MEDIUM_SLOW,50,!1),new G(e.SINISTEA,8,!1,!1,!1,"Black Tea Pokémon",I.GHOST,null,.1,.2,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,308,40,45,45,74,54,50,120,50,62,c.MEDIUM_FAST,null,!1,!1,new Y("Phony Form","phony",I.GHOST,null,.1,.2,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,308,40,45,45,74,54,50,120,50,62,!1,"",!0),new Y("Antique Form","antique",I.GHOST,null,.1,.2,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,308,40,45,45,74,54,50,120,50,62,!1,"",!0)),new G(e.POLTEAGEIST,8,!1,!1,!1,"Black Tea Pokémon",I.GHOST,null,.2,.4,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,508,60,65,65,134,114,70,60,50,178,c.MEDIUM_FAST,null,!1,!1,new Y("Phony Form","phony",I.GHOST,null,.2,.4,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,508,60,65,65,134,114,70,60,50,178,!1,"",!0),new Y("Antique Form","antique",I.GHOST,null,.2,.4,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,508,60,65,65,134,114,70,60,50,178,!1,"",!0)),new G(e.HATENNA,8,!1,!1,!1,"Calm Pokémon",I.PSYCHIC,null,.4,3.4,O.HEALER,O.ANTICIPATION,O.MAGIC_BOUNCE,265,42,30,45,56,53,39,235,50,53,c.SLOW,0,!1),new G(e.HATTREM,8,!1,!1,!1,"Serene Pokémon",I.PSYCHIC,null,.6,4.8,O.HEALER,O.ANTICIPATION,O.MAGIC_BOUNCE,370,57,40,65,86,73,49,120,50,130,c.SLOW,0,!1),new G(e.HATTERENE,8,!1,!1,!1,"Silent Pokémon",I.PSYCHIC,I.FAIRY,2.1,5.1,O.HEALER,O.ANTICIPATION,O.MAGIC_BOUNCE,510,57,90,95,136,103,29,45,50,255,c.SLOW,0,!1,!0,new Y("Normal","",I.PSYCHIC,I.FAIRY,2.1,5.1,O.HEALER,O.ANTICIPATION,O.MAGIC_BOUNCE,510,57,90,95,136,103,29,45,50,255,!1,null,!0),new Y("G-Max",Ue.GIGANTAMAX,I.PSYCHIC,I.FAIRY,26,999.9,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,610,97,90,105,146,122,50,45,50,255)),new G(e.IMPIDIMP,8,!1,!1,!1,"Wily Pokémon",I.DARK,I.FAIRY,.4,5.5,O.PRANKSTER,O.FRISK,O.PICKPOCKET,265,45,45,30,55,40,50,255,50,53,c.MEDIUM_FAST,100,!1),new G(e.MORGREM,8,!1,!1,!1,"Devious Pokémon",I.DARK,I.FAIRY,.8,12.5,O.PRANKSTER,O.FRISK,O.PICKPOCKET,370,65,60,45,75,55,70,120,50,130,c.MEDIUM_FAST,100,!1),new G(e.GRIMMSNARL,8,!1,!1,!1,"Bulk Up Pokémon",I.DARK,I.FAIRY,1.5,61,O.PRANKSTER,O.FRISK,O.PICKPOCKET,510,95,120,65,95,75,60,45,50,255,c.MEDIUM_FAST,100,!1,!0,new Y("Normal","",I.DARK,I.FAIRY,1.5,61,O.PRANKSTER,O.FRISK,O.PICKPOCKET,510,95,120,65,95,75,60,45,50,255,!1,null,!0),new Y("G-Max",Ue.GIGANTAMAX,I.DARK,I.FAIRY,32,999.9,O.PRANKSTER,O.PRANKSTER,O.PRANKSTER,610,135,138,77,110,85,65,45,50,255)),new G(e.OBSTAGOON,8,!1,!1,!1,"Blocking Pokémon",I.DARK,I.NORMAL,1.6,46,O.RECKLESS,O.GUTS,O.DEFIANT,520,93,90,101,60,81,95,45,50,260,c.MEDIUM_FAST,50,!1),new G(e.PERRSERKER,8,!1,!1,!1,"Viking Pokémon",I.STEEL,null,.8,28,O.BATTLE_ARMOR,O.TOUGH_CLAWS,O.STEELY_SPIRIT,440,70,110,100,50,60,50,90,50,154,c.MEDIUM_FAST,50,!1),new G(e.CURSOLA,8,!1,!1,!1,"Coral Pokémon",I.GHOST,null,1,.4,O.WEAK_ARMOR,O.NONE,O.PERISH_BODY,510,60,95,50,145,130,30,30,50,179,c.FAST,25,!1),new G(e.SIRFETCHD,8,!1,!1,!1,"Wild Duck Pokémon",I.FIGHTING,null,.8,117,O.STEADFAST,O.NONE,O.SCRAPPY,507,62,135,95,68,82,65,45,50,177,c.MEDIUM_FAST,50,!1),new G(e.MR_RIME,8,!1,!1,!1,"Comedian Pokémon",I.ICE,I.PSYCHIC,1.5,58.2,O.TANGLED_FEET,O.SCREEN_CLEANER,O.ICE_BODY,520,80,85,75,110,100,70,45,50,182,c.MEDIUM_FAST,50,!1),new G(e.RUNERIGUS,8,!1,!1,!1,"Grudge Pokémon",I.GROUND,I.GHOST,1.6,66.6,O.WANDERING_SPIRIT,O.NONE,O.NONE,483,58,95,145,50,105,30,90,50,169,c.MEDIUM_FAST,50,!1),new G(e.MILCERY,8,!1,!1,!1,"Cream Pokémon",I.FAIRY,null,.2,.3,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,270,45,40,40,50,61,34,200,50,54,c.MEDIUM_FAST,0,!1),new G(e.ALCREMIE,8,!1,!1,!1,"Cream Pokémon",I.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,c.MEDIUM_FAST,0,!1,!0,new Y("Vanilla Cream","vanilla-cream",I.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,"",!0),new Y("Ruby Cream","ruby-cream",I.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new Y("Matcha Cream","matcha-cream",I.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new Y("Mint Cream","mint-cream",I.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new Y("Lemon Cream","lemon-cream",I.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new Y("Salted Cream","salted-cream",I.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new Y("Ruby Swirl","ruby-swirl",I.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new Y("Caramel Swirl","caramel-swirl",I.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new Y("Rainbow Swirl","rainbow-swirl",I.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new Y("G-Max",Ue.GIGANTAMAX,I.FAIRY,null,30,999.9,O.MISTY_SURGE,O.NONE,O.MISTY_SURGE,595,135,60,75,130,131,64,100,50,173)),new G(e.FALINKS,8,!1,!1,!1,"Formation Pokémon",I.FIGHTING,null,3,62,O.BATTLE_ARMOR,O.NONE,O.DEFIANT,470,65,100,100,70,60,75,45,50,165,c.MEDIUM_FAST,null,!1),new G(e.PINCURCHIN,8,!1,!1,!1,"Sea Urchin Pokémon",I.ELECTRIC,null,.3,1,O.LIGHTNING_ROD,O.NONE,O.ELECTRIC_SURGE,435,48,101,95,91,85,15,75,50,152,c.MEDIUM_FAST,50,!1),new G(e.SNOM,8,!1,!1,!1,"Worm Pokémon",I.ICE,I.BUG,.3,3.8,O.SHIELD_DUST,O.NONE,O.ICE_SCALES,185,30,25,35,45,30,20,190,50,37,c.MEDIUM_FAST,50,!1),new G(e.FROSMOTH,8,!1,!1,!1,"Frost Moth Pokémon",I.ICE,I.BUG,1.3,42,O.SHIELD_DUST,O.NONE,O.ICE_SCALES,475,70,65,60,125,90,65,75,50,166,c.MEDIUM_FAST,50,!1),new G(e.STONJOURNER,8,!1,!1,!1,"Big Rock Pokémon",I.ROCK,null,2.5,520,O.POWER_SPOT,O.NONE,O.NONE,470,100,125,135,20,20,70,60,50,165,c.SLOW,50,!1),new G(e.EISCUE,8,!1,!1,!1,"Penguin Pokémon",I.ICE,null,1.4,89,O.ICE_FACE,O.NONE,O.NONE,470,75,80,110,65,90,50,60,50,165,c.SLOW,50,!1,!1,new Y("Ice Face","",I.ICE,null,1.4,89,O.ICE_FACE,O.NONE,O.NONE,470,75,80,110,65,90,50,60,50,165,!1,null,!0),new Y("No Ice","no-ice",I.ICE,null,1.4,89,O.ICE_FACE,O.NONE,O.NONE,470,75,80,70,65,50,130,60,50,165)),new G(e.INDEEDEE,8,!1,!1,!1,"Emotion Pokémon",I.PSYCHIC,I.NORMAL,.9,28,O.INNER_FOCUS,O.SYNCHRONIZE,O.PSYCHIC_SURGE,475,60,65,55,105,95,95,30,140,166,c.FAST,50,!1,!1,new Y("Male","male",I.PSYCHIC,I.NORMAL,.9,28,O.INNER_FOCUS,O.SYNCHRONIZE,O.PSYCHIC_SURGE,475,60,65,55,105,95,95,30,140,166,!1,"",!0),new Y("Female","female",I.PSYCHIC,I.NORMAL,.9,28,O.OWN_TEMPO,O.SYNCHRONIZE,O.PSYCHIC_SURGE,475,70,55,65,95,105,85,30,140,166,!1,null,!0)),new G(e.MORPEKO,8,!1,!1,!1,"Two-Sided Pokémon",I.ELECTRIC,I.DARK,.3,3,O.HUNGER_SWITCH,O.NONE,O.NONE,436,58,95,58,70,58,97,180,50,153,c.MEDIUM_FAST,50,!1,!1,new Y("Full Belly Mode","full-belly",I.ELECTRIC,I.DARK,.3,3,O.HUNGER_SWITCH,O.NONE,O.NONE,436,58,95,58,70,58,97,180,50,153,!1,"",!0),new Y("Hangry Mode","hangry",I.ELECTRIC,I.DARK,.3,3,O.HUNGER_SWITCH,O.NONE,O.NONE,436,58,95,58,70,58,97,180,50,153)),new G(e.CUFANT,8,!1,!1,!1,"Copperderm Pokémon",I.STEEL,null,1.2,100,O.SHEER_FORCE,O.NONE,O.HEAVY_METAL,330,72,80,49,40,49,40,190,50,66,c.MEDIUM_FAST,50,!1),new G(e.COPPERAJAH,8,!1,!1,!1,"Copperderm Pokémon",I.STEEL,null,3,650,O.SHEER_FORCE,O.NONE,O.HEAVY_METAL,500,122,130,69,80,69,30,90,50,175,c.MEDIUM_FAST,50,!1,!0,new Y("Normal","",I.STEEL,null,3,650,O.SHEER_FORCE,O.NONE,O.HEAVY_METAL,500,122,130,69,80,69,30,90,50,175,!1,null,!0),new Y("G-Max",Ue.GIGANTAMAX,I.STEEL,I.GROUND,23,999.9,O.MOLD_BREAKER,O.NONE,O.MOLD_BREAKER,600,167,155,89,80,89,20,90,50,175)),new G(e.DRACOZOLT,8,!1,!1,!1,"Fossil Pokémon",I.ELECTRIC,I.DRAGON,1.8,190,O.VOLT_ABSORB,O.HUSTLE,O.SAND_RUSH,505,90,100,90,80,70,75,45,50,177,c.SLOW,null,!1),new G(e.ARCTOZOLT,8,!1,!1,!1,"Fossil Pokémon",I.ELECTRIC,I.ICE,2.3,150,O.VOLT_ABSORB,O.STATIC,O.SLUSH_RUSH,505,90,100,90,90,80,55,45,50,177,c.SLOW,null,!1),new G(e.DRACOVISH,8,!1,!1,!1,"Fossil Pokémon",I.WATER,I.DRAGON,2.3,215,O.WATER_ABSORB,O.STRONG_JAW,O.SAND_RUSH,505,90,90,100,70,80,75,45,50,177,c.SLOW,null,!1),new G(e.ARCTOVISH,8,!1,!1,!1,"Fossil Pokémon",I.WATER,I.ICE,2,175,O.WATER_ABSORB,O.ICE_BODY,O.SLUSH_RUSH,505,90,90,100,80,90,55,45,50,177,c.SLOW,null,!1),new G(e.DURALUDON,8,!1,!1,!1,"Alloy Pokémon",I.STEEL,I.DRAGON,1.8,40,O.LIGHT_METAL,O.HEAVY_METAL,O.STALWART,535,70,95,115,120,50,85,45,50,187,c.MEDIUM_FAST,50,!1,!0,new Y("Normal","",I.STEEL,I.DRAGON,1.8,40,O.LIGHT_METAL,O.HEAVY_METAL,O.STALWART,535,70,95,115,120,50,85,45,50,187,!1,null,!0),new Y("G-Max",Ue.GIGANTAMAX,I.STEEL,I.DRAGON,43,999.9,O.LIGHTNING_ROD,O.LIGHTNING_ROD,O.LIGHTNING_ROD,635,100,110,120,175,60,70,45,50,187)),new G(e.DREEPY,8,!1,!1,!1,"Lingering Pokémon",I.DRAGON,I.GHOST,.5,2,O.CLEAR_BODY,O.INFILTRATOR,O.CURSED_BODY,270,28,60,30,40,30,82,45,50,54,c.SLOW,50,!1),new G(e.DRAKLOAK,8,!1,!1,!1,"Caretaker Pokémon",I.DRAGON,I.GHOST,1.4,11,O.CLEAR_BODY,O.INFILTRATOR,O.CURSED_BODY,410,68,80,50,60,50,102,45,50,144,c.SLOW,50,!1),new G(e.DRAGAPULT,8,!1,!1,!1,"Stealth Pokémon",I.DRAGON,I.GHOST,3,50,O.CLEAR_BODY,O.INFILTRATOR,O.CURSED_BODY,600,88,120,75,100,75,142,45,50,300,c.SLOW,50,!1),new G(e.ZACIAN,8,!1,!0,!1,"Warrior Pokémon",I.FAIRY,null,2.8,110,O.INTREPID_SWORD,O.NONE,O.NONE,660,92,120,115,80,115,138,10,0,335,c.SLOW,null,!1,!1,new Y("Hero of Many Battles","hero-of-many-battles",I.FAIRY,null,2.8,110,O.INTREPID_SWORD,O.NONE,O.NONE,660,92,120,115,80,115,138,10,0,335,!1,"",!0),new Y("Crowned","crowned",I.FAIRY,I.STEEL,2.8,355,O.INTREPID_SWORD,O.NONE,O.NONE,700,92,150,115,80,115,148,10,0,335)),new G(e.ZAMAZENTA,8,!1,!0,!1,"Warrior Pokémon",I.FIGHTING,null,2.9,210,O.DAUNTLESS_SHIELD,O.NONE,O.NONE,660,92,120,115,80,115,138,10,0,335,c.SLOW,null,!1,!1,new Y("Hero of Many Battles","hero-of-many-battles",I.FIGHTING,null,2.9,210,O.DAUNTLESS_SHIELD,O.NONE,O.NONE,660,92,120,115,80,115,138,10,0,335,!1,"",!0),new Y("Crowned","crowned",I.FIGHTING,I.STEEL,2.9,785,O.DAUNTLESS_SHIELD,O.NONE,O.NONE,700,92,120,140,80,140,128,10,0,335)),new G(e.ETERNATUS,8,!1,!0,!1,"Gigantic Pokémon",I.POISON,I.DRAGON,20,950,O.PRESSURE,O.NONE,O.NONE,690,140,85,95,145,95,130,255,0,345,c.SLOW,null,!1,!0,new Y("Normal","",I.POISON,I.DRAGON,20,950,O.PRESSURE,O.NONE,O.NONE,690,140,85,95,145,95,130,255,0,345,!1,null,!0),new Y("E-Max","eternamax",I.POISON,I.DRAGON,100,999.9,O.PRESSURE,O.NONE,O.NONE,1125,255,115,250,125,250,130,255,0,345)),new G(e.KUBFU,8,!0,!1,!1,"Wushu Pokémon",I.FIGHTING,null,.6,12,O.INNER_FOCUS,O.NONE,O.NONE,385,60,90,60,53,50,72,3,50,77,c.SLOW,87.5,!1),new G(e.URSHIFU,8,!0,!1,!1,"Wushu Pokémon",I.FIGHTING,I.DARK,1.9,105,O.UNSEEN_FIST,O.NONE,O.NONE,550,100,130,100,63,60,97,3,50,275,c.SLOW,87.5,!1,!0,new Y("Single Strike Style","single-strike",I.FIGHTING,I.DARK,1.9,105,O.UNSEEN_FIST,O.NONE,O.NONE,550,100,130,100,63,60,97,3,50,275,!1,"",!0),new Y("Rapid Strike Style","rapid-strike",I.FIGHTING,I.WATER,1.9,105,O.UNSEEN_FIST,O.NONE,O.NONE,550,100,130,100,63,60,97,3,50,275,!1,null,!0),new Y("G-Max Single Strike Style",Ue.GIGANTAMAX_SINGLE,I.FIGHTING,I.DARK,29,999.9,O.UNSEEN_FIST,O.NONE,O.NONE,650,125,150,115,73,70,117,3,50,275),new Y("G-Max Rapid Strike Style",Ue.GIGANTAMAX_RAPID,I.FIGHTING,I.WATER,26,999.9,O.UNSEEN_FIST,O.NONE,O.NONE,650,125,150,115,73,70,117,3,50,275)),new G(e.ZARUDE,8,!1,!1,!0,"Rogue Monkey Pokémon",I.DARK,I.GRASS,1.8,70,O.LEAF_GUARD,O.NONE,O.NONE,600,105,120,105,70,95,105,3,0,300,c.SLOW,null,!1,!1,new Y("Normal","",I.DARK,I.GRASS,1.8,70,O.LEAF_GUARD,O.NONE,O.NONE,600,105,120,105,70,95,105,3,0,300,!1,null,!0),new Y("Dada","dada",I.DARK,I.GRASS,1.8,70,O.LEAF_GUARD,O.NONE,O.NONE,600,105,120,105,70,95,105,3,0,300,!1,null,!0)),new G(e.REGIELEKI,8,!0,!1,!1,"Electron Pokémon",I.ELECTRIC,null,1.2,145,O.TRANSISTOR,O.NONE,O.NONE,580,80,100,50,100,50,200,3,35,290,c.SLOW,null,!1),new G(e.REGIDRAGO,8,!0,!1,!1,"Dragon Orb Pokémon",I.DRAGON,null,2.1,200,O.DRAGONS_MAW,O.NONE,O.NONE,580,200,100,50,100,50,80,3,35,290,c.SLOW,null,!1),new G(e.GLASTRIER,8,!0,!1,!1,"Wild Horse Pokémon",I.ICE,null,2.2,800,O.CHILLING_NEIGH,O.NONE,O.NONE,580,100,145,130,65,110,30,3,35,290,c.SLOW,null,!1),new G(e.SPECTRIER,8,!0,!1,!1,"Swift Horse Pokémon",I.GHOST,null,2,44.5,O.GRIM_NEIGH,O.NONE,O.NONE,580,100,65,60,145,80,130,3,35,290,c.SLOW,null,!1),new G(e.CALYREX,8,!1,!0,!1,"King Pokémon",I.PSYCHIC,I.GRASS,1.1,7.7,O.UNNERVE,O.NONE,O.NONE,500,100,80,80,80,80,80,3,100,250,c.SLOW,null,!1,!0,new Y("Normal","",I.PSYCHIC,I.GRASS,1.1,7.7,O.UNNERVE,O.NONE,O.NONE,500,100,80,80,80,80,80,3,100,250,!1,null,!0),new Y("Ice","ice",I.PSYCHIC,I.ICE,2.4,809.1,O.AS_ONE_GLASTRIER,O.NONE,O.NONE,680,100,165,150,85,130,50,3,100,250),new Y("Shadow","shadow",I.PSYCHIC,I.GHOST,2.4,53.6,O.AS_ONE_SPECTRIER,O.NONE,O.NONE,680,100,85,80,165,100,150,3,100,250)),new G(e.WYRDEER,8,!1,!1,!1,"Big Horn Pokémon",I.NORMAL,I.PSYCHIC,1.8,95.1,O.INTIMIDATE,O.FRISK,O.SAP_SIPPER,525,103,105,72,105,75,65,135,50,263,c.SLOW,50,!1),new G(e.KLEAVOR,8,!1,!1,!1,"Axe Pokémon",I.BUG,I.ROCK,1.8,89,O.SWARM,O.SHEER_FORCE,O.SHARPNESS,500,70,135,95,45,70,85,115,50,175,c.MEDIUM_FAST,50,!1),new G(e.URSALUNA,8,!1,!1,!1,"Peat Pokémon",I.GROUND,I.NORMAL,2.4,290,O.GUTS,O.BULLETPROOF,O.UNNERVE,550,130,140,105,45,80,50,75,50,275,c.MEDIUM_FAST,50,!1),new G(e.BASCULEGION,8,!1,!1,!1,"Big Fish Pokémon",I.WATER,I.GHOST,3,110,O.SWIFT_SWIM,O.ADAPTABILITY,O.MOLD_BREAKER,530,120,112,65,80,75,78,135,50,265,c.MEDIUM_FAST,50,!1,!1,new Y("Male","male",I.WATER,I.GHOST,3,110,O.SWIFT_SWIM,O.ADAPTABILITY,O.MOLD_BREAKER,530,120,112,65,80,75,78,135,50,265,!1,"",!0),new Y("Female","female",I.WATER,I.GHOST,3,110,O.SWIFT_SWIM,O.ADAPTABILITY,O.MOLD_BREAKER,530,120,92,65,100,75,78,135,50,265,!1,null,!0)),new G(e.SNEASLER,8,!1,!1,!1,"Free Climb Pokémon",I.FIGHTING,I.POISON,1.3,43,O.PRESSURE,O.UNBURDEN,O.POISON_TOUCH,510,80,130,60,40,80,120,135,50,102,c.MEDIUM_SLOW,50,!1),new G(e.OVERQWIL,8,!1,!1,!1,"Pin Cluster Pokémon",I.DARK,I.POISON,2.5,60.5,O.POISON_POINT,O.SWIFT_SWIM,O.INTIMIDATE,510,85,115,95,65,65,85,135,50,179,c.MEDIUM_FAST,50,!1),new G(e.ENAMORUS,8,!0,!1,!1,"Love-Hate Pokémon",I.FAIRY,I.FLYING,1.6,48,O.CUTE_CHARM,O.NONE,O.CONTRARY,580,74,115,70,135,80,106,3,50,116,c.SLOW,0,!1,!0,new Y("Incarnate Forme","incarnate",I.FAIRY,I.FLYING,1.6,48,O.CUTE_CHARM,O.NONE,O.CONTRARY,580,74,115,70,135,80,106,3,50,116,!1,null,!0),new Y("Therian Forme","therian",I.FAIRY,I.FLYING,1.6,48,O.OVERCOAT,O.NONE,O.OVERCOAT,580,74,115,110,135,100,46,3,50,116)),new G(e.SPRIGATITO,9,!1,!1,!1,"Grass Cat Pokémon",I.GRASS,null,.4,4.1,O.OVERGROW,O.NONE,O.PROTEAN,310,40,61,54,45,45,65,45,50,62,c.MEDIUM_SLOW,87.5,!1),new G(e.FLORAGATO,9,!1,!1,!1,"Grass Cat Pokémon",I.GRASS,null,.9,12.2,O.OVERGROW,O.NONE,O.PROTEAN,410,61,80,63,60,63,83,45,50,144,c.MEDIUM_SLOW,87.5,!1),new G(e.MEOWSCARADA,9,!1,!1,!1,"Magician Pokémon",I.GRASS,I.DARK,1.5,31.2,O.OVERGROW,O.NONE,O.PROTEAN,530,76,110,70,81,70,123,45,50,265,c.MEDIUM_SLOW,87.5,!1),new G(e.FUECOCO,9,!1,!1,!1,"Fire Croc Pokémon",I.FIRE,null,.4,9.8,O.BLAZE,O.NONE,O.UNAWARE,310,67,45,59,63,40,36,45,50,62,c.MEDIUM_SLOW,87.5,!1),new G(e.CROCALOR,9,!1,!1,!1,"Fire Croc Pokémon",I.FIRE,null,1,30.7,O.BLAZE,O.NONE,O.UNAWARE,411,81,55,78,90,58,49,45,50,144,c.MEDIUM_SLOW,87.5,!1),new G(e.SKELEDIRGE,9,!1,!1,!1,"Singer Pokémon",I.FIRE,I.GHOST,1.6,326.5,O.BLAZE,O.NONE,O.UNAWARE,530,104,75,100,110,75,66,45,50,265,c.MEDIUM_SLOW,87.5,!1),new G(e.QUAXLY,9,!1,!1,!1,"Duckling Pokémon",I.WATER,null,.5,6.1,O.TORRENT,O.NONE,O.MOXIE,310,55,65,45,50,45,50,45,50,62,c.MEDIUM_SLOW,87.5,!1),new G(e.QUAXWELL,9,!1,!1,!1,"Practicing Pokémon",I.WATER,null,1.2,21.5,O.TORRENT,O.NONE,O.MOXIE,410,70,85,65,65,60,65,45,50,144,c.MEDIUM_SLOW,87.5,!1),new G(e.QUAQUAVAL,9,!1,!1,!1,"Dancer Pokémon",I.WATER,I.FIGHTING,1.8,61.9,O.TORRENT,O.NONE,O.MOXIE,530,85,120,80,85,75,85,45,50,265,c.MEDIUM_SLOW,87.5,!1),new G(e.LECHONK,9,!1,!1,!1,"Hog Pokémon",I.NORMAL,null,.5,10.2,O.AROMA_VEIL,O.GLUTTONY,O.THICK_FAT,254,54,45,40,35,45,35,255,50,51,c.MEDIUM_FAST,50,!1),new G(e.OINKOLOGNE,9,!1,!1,!1,"Hog Pokémon",I.NORMAL,null,1,120,O.LINGERING_AROMA,O.GLUTTONY,O.THICK_FAT,489,110,100,75,59,80,65,100,50,171,c.MEDIUM_FAST,50,!1,!1,new Y("Male","male",I.NORMAL,null,1,120,O.LINGERING_AROMA,O.GLUTTONY,O.THICK_FAT,489,110,100,75,59,80,65,100,50,171,!1,"",!0),new Y("Female","female",I.NORMAL,null,1,120,O.AROMA_VEIL,O.GLUTTONY,O.THICK_FAT,489,115,90,70,59,90,65,100,50,171,!1,null,!0)),new G(e.TAROUNTULA,9,!1,!1,!1,"String Ball Pokémon",I.BUG,null,.3,4,O.INSOMNIA,O.NONE,O.STAKEOUT,210,35,41,45,29,40,20,255,50,42,c.ERRATIC,50,!1),new G(e.SPIDOPS,9,!1,!1,!1,"Trap Pokémon",I.BUG,null,1,16.5,O.INSOMNIA,O.NONE,O.STAKEOUT,404,60,79,92,52,86,35,120,50,141,c.ERRATIC,50,!1),new G(e.NYMBLE,9,!1,!1,!1,"Grasshopper Pokémon",I.BUG,null,.2,1,O.SWARM,O.NONE,O.TINTED_LENS,210,33,46,40,21,25,45,190,20,42,c.MEDIUM_FAST,50,!1),new G(e.LOKIX,9,!1,!1,!1,"Grasshopper Pokémon",I.BUG,I.DARK,1,17.5,O.SWARM,O.NONE,O.TINTED_LENS,450,71,102,78,52,55,92,30,0,158,c.MEDIUM_FAST,50,!1),new G(e.PAWMI,9,!1,!1,!1,"Mouse Pokémon",I.ELECTRIC,null,.3,2.5,O.STATIC,O.NATURAL_CURE,O.IRON_FIST,240,45,50,20,40,25,60,190,50,48,c.MEDIUM_FAST,50,!1),new G(e.PAWMO,9,!1,!1,!1,"Mouse Pokémon",I.ELECTRIC,I.FIGHTING,.4,6.5,O.VOLT_ABSORB,O.NATURAL_CURE,O.IRON_FIST,350,60,75,40,50,40,85,80,50,123,c.MEDIUM_FAST,50,!1),new G(e.PAWMOT,9,!1,!1,!1,"Hands-On Pokémon",I.ELECTRIC,I.FIGHTING,.9,41,O.VOLT_ABSORB,O.NATURAL_CURE,O.IRON_FIST,490,70,115,70,70,60,105,45,50,245,c.MEDIUM_FAST,50,!1),new G(e.TANDEMAUS,9,!1,!1,!1,"Couple Pokémon",I.NORMAL,null,.3,1.8,O.RUN_AWAY,O.PICKUP,O.OWN_TEMPO,305,50,50,45,40,45,75,150,50,61,c.FAST,null,!1),new G(e.MAUSHOLD,9,!1,!1,!1,"Family Pokémon",I.NORMAL,null,.3,2.3,O.FRIEND_GUARD,O.CHEEK_POUCH,O.TECHNICIAN,470,74,75,70,65,75,111,75,50,165,c.FAST,null,!1,!1,new Y("Family of Four","four",I.NORMAL,null,.3,2.8,O.FRIEND_GUARD,O.CHEEK_POUCH,O.TECHNICIAN,470,74,75,70,65,75,111,75,50,165),new Y("Family of Three","three",I.NORMAL,null,.3,2.3,O.FRIEND_GUARD,O.CHEEK_POUCH,O.TECHNICIAN,470,74,75,70,65,75,111,75,50,165)),new G(e.FIDOUGH,9,!1,!1,!1,"Puppy Pokémon",I.FAIRY,null,.3,10.9,O.OWN_TEMPO,O.NONE,O.KLUTZ,312,37,55,70,30,55,65,190,50,62,c.MEDIUM_SLOW,50,!1),new G(e.DACHSBUN,9,!1,!1,!1,"Dog Pokémon",I.FAIRY,null,.5,14.9,O.WELL_BAKED_BODY,O.NONE,O.AROMA_VEIL,477,57,80,115,50,80,95,90,50,167,c.MEDIUM_SLOW,50,!1),new G(e.SMOLIV,9,!1,!1,!1,"Olive Pokémon",I.GRASS,I.NORMAL,.3,6.5,O.EARLY_BIRD,O.NONE,O.HARVEST,260,41,35,45,58,51,30,255,50,52,c.MEDIUM_SLOW,50,!1),new G(e.DOLLIV,9,!1,!1,!1,"Olive Pokémon",I.GRASS,I.NORMAL,.6,11.9,O.EARLY_BIRD,O.NONE,O.HARVEST,354,52,53,60,78,78,33,120,50,124,c.MEDIUM_SLOW,50,!1),new G(e.ARBOLIVA,9,!1,!1,!1,"Olive Pokémon",I.GRASS,I.NORMAL,1.4,48.2,O.SEED_SOWER,O.NONE,O.HARVEST,510,78,69,90,125,109,39,45,50,255,c.MEDIUM_SLOW,50,!1),new G(e.SQUAWKABILLY,9,!1,!1,!1,"Parrot Pokémon",I.NORMAL,I.FLYING,.6,2.4,O.INTIMIDATE,O.HUSTLE,O.GUTS,417,82,96,51,45,51,92,190,50,146,c.ERRATIC,50,!1,!1,new Y("Green Plumage","green-plumage",I.NORMAL,I.FLYING,.6,2.4,O.INTIMIDATE,O.HUSTLE,O.GUTS,417,82,96,51,45,51,92,190,50,146,!1,null,!0),new Y("Blue Plumage","blue-plumage",I.NORMAL,I.FLYING,.6,2.4,O.INTIMIDATE,O.HUSTLE,O.GUTS,417,82,96,51,45,51,92,190,50,146,!1,null,!0),new Y("Yellow Plumage","yellow-plumage",I.NORMAL,I.FLYING,.6,2.4,O.INTIMIDATE,O.HUSTLE,O.SHEER_FORCE,417,82,96,51,45,51,92,190,50,146,!1,null,!0),new Y("White Plumage","white-plumage",I.NORMAL,I.FLYING,.6,2.4,O.INTIMIDATE,O.HUSTLE,O.SHEER_FORCE,417,82,96,51,45,51,92,190,50,146,!1,null,!0)),new G(e.NACLI,9,!1,!1,!1,"Rock Salt Pokémon",I.ROCK,null,.4,16,O.PURIFYING_SALT,O.STURDY,O.CLEAR_BODY,280,55,55,75,35,35,25,255,50,56,c.MEDIUM_SLOW,50,!1),new G(e.NACLSTACK,9,!1,!1,!1,"Rock Salt Pokémon",I.ROCK,null,.6,105,O.PURIFYING_SALT,O.STURDY,O.CLEAR_BODY,355,60,60,100,35,65,35,120,50,124,c.MEDIUM_SLOW,50,!1),new G(e.GARGANACL,9,!1,!1,!1,"Rock Salt Pokémon",I.ROCK,null,2.3,240,O.PURIFYING_SALT,O.STURDY,O.CLEAR_BODY,500,100,100,130,45,90,35,45,50,250,c.MEDIUM_SLOW,50,!1),new G(e.CHARCADET,9,!1,!1,!1,"Fire Child Pokémon",I.FIRE,null,.6,10.5,O.FLASH_FIRE,O.NONE,O.FLAME_BODY,255,40,50,40,50,40,35,90,50,51,c.SLOW,50,!1),new G(e.ARMAROUGE,9,!1,!1,!1,"Fire Warrior Pokémon",I.FIRE,I.PSYCHIC,1.5,85,O.FLASH_FIRE,O.NONE,O.WEAK_ARMOR,525,85,60,100,125,80,75,25,20,263,c.SLOW,50,!1),new G(e.CERULEDGE,9,!1,!1,!1,"Fire Blades Pokémon",I.FIRE,I.GHOST,1.6,62,O.FLASH_FIRE,O.NONE,O.WEAK_ARMOR,525,75,125,80,60,100,85,25,20,263,c.SLOW,50,!1),new G(e.TADBULB,9,!1,!1,!1,"EleTadpole Pokémon",I.ELECTRIC,null,.3,.4,O.OWN_TEMPO,O.STATIC,O.DAMP,272,61,31,41,59,35,45,190,50,54,c.MEDIUM_FAST,50,!1),new G(e.BELLIBOLT,9,!1,!1,!1,"EleFrog Pokémon",I.ELECTRIC,null,1.2,113,O.ELECTROMORPHOSIS,O.STATIC,O.DAMP,495,109,64,91,103,83,45,50,50,173,c.MEDIUM_FAST,50,!1),new G(e.WATTREL,9,!1,!1,!1,"Storm Petrel Pokémon",I.ELECTRIC,I.FLYING,.4,3.6,O.WIND_POWER,O.VOLT_ABSORB,O.COMPETITIVE,280,40,40,35,55,40,70,180,50,56,c.MEDIUM_SLOW,50,!1),new G(e.KILOWATTREL,9,!1,!1,!1,"Frigatebird Pokémon",I.ELECTRIC,I.FLYING,1.4,38.6,O.WIND_POWER,O.VOLT_ABSORB,O.COMPETITIVE,490,70,70,60,105,60,125,90,50,172,c.MEDIUM_SLOW,50,!1),new G(e.MASCHIFF,9,!1,!1,!1,"Rascal Pokémon",I.DARK,null,.5,16,O.INTIMIDATE,O.RUN_AWAY,O.STAKEOUT,340,60,78,60,40,51,51,150,50,68,c.MEDIUM_SLOW,50,!1),new G(e.MABOSSTIFF,9,!1,!1,!1,"Boss Pokémon",I.DARK,null,1.1,61,O.INTIMIDATE,O.GUARD_DOG,O.STAKEOUT,505,80,120,90,60,70,85,75,50,177,c.MEDIUM_SLOW,50,!1),new G(e.SHROODLE,9,!1,!1,!1,"Toxic Mouse Pokémon",I.POISON,I.NORMAL,.2,.7,O.UNBURDEN,O.PICKPOCKET,O.PRANKSTER,290,40,65,35,40,35,75,190,50,58,c.MEDIUM_SLOW,50,!1),new G(e.GRAFAIAI,9,!1,!1,!1,"Toxic Monkey Pokémon",I.POISON,I.NORMAL,.7,27.2,O.UNBURDEN,O.POISON_TOUCH,O.PRANKSTER,485,63,95,65,80,72,110,90,50,170,c.MEDIUM_SLOW,50,!1),new G(e.BRAMBLIN,9,!1,!1,!1,"Tumbleweed Pokémon",I.GRASS,I.GHOST,.6,.6,O.WIND_RIDER,O.NONE,O.INFILTRATOR,275,40,65,30,45,35,60,190,50,55,c.MEDIUM_FAST,50,!1),new G(e.BRAMBLEGHAST,9,!1,!1,!1,"Tumbleweed Pokémon",I.GRASS,I.GHOST,1.2,6,O.WIND_RIDER,O.NONE,O.INFILTRATOR,480,55,115,70,80,70,90,45,50,168,c.MEDIUM_FAST,50,!1),new G(e.TOEDSCOOL,9,!1,!1,!1,"Woodear Pokémon",I.GROUND,I.GRASS,.9,33,O.MYCELIUM_MIGHT,O.NONE,O.NONE,335,40,40,35,50,100,70,190,50,67,c.MEDIUM_SLOW,50,!1),new G(e.TOEDSCRUEL,9,!1,!1,!1,"Woodear Pokémon",I.GROUND,I.GRASS,1.9,58,O.MYCELIUM_MIGHT,O.NONE,O.NONE,515,80,70,65,80,120,100,90,50,180,c.MEDIUM_SLOW,50,!1),new G(e.KLAWF,9,!1,!1,!1,"Ambush Pokémon",I.ROCK,null,1.3,79,O.ANGER_SHELL,O.SHELL_ARMOR,O.REGENERATOR,450,70,100,115,35,55,75,120,50,158,c.MEDIUM_FAST,50,!1),new G(e.CAPSAKID,9,!1,!1,!1,"Spicy Pepper Pokémon",I.GRASS,null,.3,3,O.CHLOROPHYLL,O.INSOMNIA,O.KLUTZ,304,50,62,40,62,40,50,190,50,61,c.MEDIUM_FAST,50,!1),new G(e.SCOVILLAIN,9,!1,!1,!1,"Spicy Pepper Pokémon",I.GRASS,I.FIRE,.9,15,O.CHLOROPHYLL,O.INSOMNIA,O.MOODY,486,65,108,65,108,65,75,75,50,170,c.MEDIUM_FAST,50,!1),new G(e.RELLOR,9,!1,!1,!1,"Rolling Pokémon",I.BUG,null,.2,1,O.COMPOUND_EYES,O.NONE,O.SHED_SKIN,270,41,50,60,31,58,30,190,50,54,c.FAST,50,!1),new G(e.RABSCA,9,!1,!1,!1,"Rolling Pokémon",I.BUG,I.PSYCHIC,.3,3.5,O.SYNCHRONIZE,O.NONE,O.TELEPATHY,470,75,50,85,115,100,45,45,50,165,c.FAST,50,!1),new G(e.FLITTLE,9,!1,!1,!1,"Frill Pokémon",I.PSYCHIC,null,.2,1.5,O.ANTICIPATION,O.FRISK,O.SPEED_BOOST,255,30,35,30,55,30,75,120,50,51,c.MEDIUM_SLOW,50,!1),new G(e.ESPATHRA,9,!1,!1,!1,"Ostrich Pokémon",I.PSYCHIC,null,1.9,90,O.OPPORTUNIST,O.FRISK,O.SPEED_BOOST,481,95,60,60,101,60,105,60,50,168,c.MEDIUM_SLOW,50,!1),new G(e.TINKATINK,9,!1,!1,!1,"Metalsmith Pokémon",I.FAIRY,I.STEEL,.4,8.9,O.MOLD_BREAKER,O.OWN_TEMPO,O.PICKPOCKET,297,50,45,45,35,64,58,190,50,59,c.MEDIUM_SLOW,0,!1),new G(e.TINKATUFF,9,!1,!1,!1,"Hammer Pokémon",I.FAIRY,I.STEEL,.7,59.1,O.MOLD_BREAKER,O.OWN_TEMPO,O.PICKPOCKET,380,65,55,55,45,82,78,90,50,133,c.MEDIUM_SLOW,0,!1),new G(e.TINKATON,9,!1,!1,!1,"Hammer Pokémon",I.FAIRY,I.STEEL,.7,112.8,O.MOLD_BREAKER,O.OWN_TEMPO,O.PICKPOCKET,506,85,75,77,70,105,94,45,50,253,c.MEDIUM_SLOW,0,!1),new G(e.WIGLETT,9,!1,!1,!1,"Garden Eel Pokémon",I.WATER,null,1.2,1.8,O.GOOEY,O.RATTLED,O.SAND_VEIL,245,10,55,25,35,25,95,255,50,49,c.MEDIUM_FAST,50,!1),new G(e.WUGTRIO,9,!1,!1,!1,"Garden Eel Pokémon",I.WATER,null,1.2,5.4,O.GOOEY,O.RATTLED,O.SAND_VEIL,425,35,100,50,50,70,120,50,50,149,c.MEDIUM_FAST,50,!1),new G(e.BOMBIRDIER,9,!1,!1,!1,"Item Drop Pokémon",I.FLYING,I.DARK,1.5,42.9,O.BIG_PECKS,O.KEEN_EYE,O.ROCKY_PAYLOAD,485,70,103,85,60,85,82,25,50,243,c.SLOW,50,!1),new G(e.FINIZEN,9,!1,!1,!1,"Dolphin Pokémon",I.WATER,null,1.3,60.2,O.WATER_VEIL,O.NONE,O.NONE,315,70,45,40,45,40,75,200,50,63,c.SLOW,50,!1),new G(e.PALAFIN,9,!1,!1,!1,"Dolphin Pokémon",I.WATER,null,1.3,60.2,O.ZERO_TO_HERO,O.NONE,O.NONE,457,100,70,72,53,62,100,45,50,160,c.SLOW,50,!1,!0,new Y("Zero Form","zero",I.WATER,null,1.3,60.2,O.ZERO_TO_HERO,O.NONE,O.ZERO_TO_HERO,457,100,70,72,53,62,100,45,50,160,!1,null,!0),new Y("Hero Form","hero",I.WATER,null,1.8,97.4,O.ZERO_TO_HERO,O.NONE,O.ZERO_TO_HERO,650,100,160,97,106,87,100,45,50,160)),new G(e.VAROOM,9,!1,!1,!1,"Single-Cyl Pokémon",I.STEEL,I.POISON,1,35,O.OVERCOAT,O.NONE,O.SLOW_START,300,45,70,63,30,45,47,190,50,60,c.MEDIUM_FAST,50,!1),new G(e.REVAVROOM,9,!1,!1,!1,"Multi-Cyl Pokémon",I.STEEL,I.POISON,1.8,120,O.OVERCOAT,O.NONE,O.FILTER,500,80,119,90,54,67,90,75,50,175,c.MEDIUM_FAST,50,!1,!1,new Y("Normal","",I.STEEL,I.POISON,1.8,120,O.OVERCOAT,O.NONE,O.FILTER,500,80,119,90,54,67,90,75,50,175,!1,null,!0),new Y("Segin Starmobile","segin-starmobile",I.STEEL,I.DARK,1.8,240,O.INTIMIDATE,O.NONE,O.INTIMIDATE,600,110,129,100,77,79,105,75,50,175),new Y("Schedar Starmobile","schedar-starmobile",I.STEEL,I.FIRE,1.8,240,O.SPEED_BOOST,O.NONE,O.SPEED_BOOST,600,110,129,100,77,79,105,75,50,175),new Y("Navi Starmobile","navi-starmobile",I.STEEL,I.POISON,1.8,240,O.TOXIC_DEBRIS,O.NONE,O.TOXIC_DEBRIS,600,110,129,100,77,79,105,75,50,175),new Y("Ruchbah Starmobile","ruchbah-starmobile",I.STEEL,I.FAIRY,1.8,240,O.MISTY_SURGE,O.NONE,O.MISTY_SURGE,600,110,129,100,77,79,105,75,50,175),new Y("Caph Starmobile","caph-starmobile",I.STEEL,I.FIGHTING,1.8,240,O.STAMINA,O.NONE,O.STAMINA,600,110,129,100,77,79,105,75,50,175)),new G(e.CYCLIZAR,9,!1,!1,!1,"Mount Pokémon",I.DRAGON,I.NORMAL,1.6,63,O.SHED_SKIN,O.NONE,O.REGENERATOR,501,70,95,65,85,65,121,190,50,175,c.MEDIUM_SLOW,50,!1),new G(e.ORTHWORM,9,!1,!1,!1,"Earthworm Pokémon",I.STEEL,null,2.5,310,O.EARTH_EATER,O.NONE,O.SAND_VEIL,480,70,85,145,60,55,65,25,50,240,c.SLOW,50,!1),new G(e.GLIMMET,9,!1,!1,!1,"Ore Pokémon",I.ROCK,I.POISON,.7,8,O.TOXIC_DEBRIS,O.NONE,O.CORROSION,350,48,35,42,105,60,60,70,50,70,c.MEDIUM_SLOW,50,!1),new G(e.GLIMMORA,9,!1,!1,!1,"Ore Pokémon",I.ROCK,I.POISON,1.5,45,O.TOXIC_DEBRIS,O.NONE,O.CORROSION,525,83,55,90,130,81,86,25,50,184,c.MEDIUM_SLOW,50,!1),new G(e.GREAVARD,9,!1,!1,!1,"Ghost Dog Pokémon",I.GHOST,null,.6,35,O.PICKUP,O.NONE,O.FLUFFY,290,50,61,60,30,55,34,120,50,58,c.MEDIUM_SLOW,50,!1),new G(e.HOUNDSTONE,9,!1,!1,!1,"Ghost Dog Pokémon",I.GHOST,null,2,15,O.SAND_RUSH,O.NONE,O.FLUFFY,488,72,101,100,50,97,68,60,50,171,c.MEDIUM_SLOW,50,!1),new G(e.FLAMIGO,9,!1,!1,!1,"Synchronize Pokémon",I.FLYING,I.FIGHTING,1.6,37,O.SCRAPPY,O.TANGLED_FEET,O.COSTAR,500,82,115,74,75,64,90,100,50,175,c.MEDIUM_SLOW,50,!1),new G(e.CETODDLE,9,!1,!1,!1,"Terra Whale Pokémon",I.ICE,null,1.2,45,O.THICK_FAT,O.SNOW_CLOAK,O.SHEER_FORCE,334,108,68,45,30,40,43,150,50,67,c.MEDIUM_SLOW,50,!1),new G(e.CETITAN,9,!1,!1,!1,"Terra Whale Pokémon",I.ICE,null,4.5,700,O.THICK_FAT,O.SLUSH_RUSH,O.SHEER_FORCE,521,170,113,65,45,55,73,50,50,182,c.MEDIUM_SLOW,50,!1),new G(e.VELUZA,9,!1,!1,!1,"Jettison Pokémon",I.WATER,I.PSYCHIC,2.5,90,O.MOLD_BREAKER,O.NONE,O.SHARPNESS,478,90,102,73,78,65,70,100,50,167,c.FAST,50,!1),new G(e.DONDOZO,9,!1,!1,!1,"Big Catfish Pokémon",I.WATER,null,12,220,O.UNAWARE,O.OBLIVIOUS,O.WATER_VEIL,530,150,100,115,65,65,35,25,50,265,c.SLOW,50,!1),new G(e.TATSUGIRI,9,!1,!1,!1,"Mimicry Pokémon",I.DRAGON,I.WATER,.3,8,O.COMMANDER,O.NONE,O.STORM_DRAIN,475,68,50,60,120,95,82,100,50,166,c.MEDIUM_SLOW,50,!1,!1,new Y("Curly Form","curly",I.DRAGON,I.WATER,.3,8,O.COMMANDER,O.NONE,O.STORM_DRAIN,475,68,50,60,120,95,82,100,50,166,!1,null,!0),new Y("Droopy Form","droopy",I.DRAGON,I.WATER,.3,8,O.COMMANDER,O.NONE,O.STORM_DRAIN,475,68,50,60,120,95,82,100,50,166,!1,null,!0),new Y("Stretchy Form","stretchy",I.DRAGON,I.WATER,.3,8,O.COMMANDER,O.NONE,O.STORM_DRAIN,475,68,50,60,120,95,82,100,50,166,!1,null,!0)),new G(e.ANNIHILAPE,9,!1,!1,!1,"Rage Monkey Pokémon",I.FIGHTING,I.GHOST,1.2,56,O.VITAL_SPIRIT,O.INNER_FOCUS,O.DEFIANT,535,110,115,80,50,90,90,45,50,268,c.MEDIUM_FAST,50,!1),new G(e.CLODSIRE,9,!1,!1,!1,"Spiny Fish Pokémon",I.POISON,I.GROUND,1.8,223,O.POISON_POINT,O.WATER_ABSORB,O.UNAWARE,430,130,75,60,45,100,20,90,50,151,c.MEDIUM_FAST,50,!1),new G(e.FARIGIRAF,9,!1,!1,!1,"Long Neck Pokémon",I.NORMAL,I.PSYCHIC,3.2,160,O.CUD_CHEW,O.ARMOR_TAIL,O.SAP_SIPPER,520,120,90,70,110,70,60,45,50,260,c.MEDIUM_FAST,50,!1),new G(e.DUDUNSPARCE,9,!1,!1,!1,"Land Snake Pokémon",I.NORMAL,null,3.6,39.2,O.SERENE_GRACE,O.RUN_AWAY,O.RATTLED,520,125,100,80,85,75,55,45,50,182,c.MEDIUM_FAST,50,!1,!1,new Y("Two-Segment Form","two-segment",I.NORMAL,null,3.6,39.2,O.SERENE_GRACE,O.RUN_AWAY,O.RATTLED,520,125,100,80,85,75,55,45,50,182,!1,""),new Y("Three-Segment Form","three-segment",I.NORMAL,null,4.5,47.4,O.SERENE_GRACE,O.RUN_AWAY,O.RATTLED,520,125,100,80,85,75,55,45,50,182)),new G(e.KINGAMBIT,9,!1,!1,!1,"Big Blade Pokémon",I.DARK,I.STEEL,2,120,O.DEFIANT,O.SUPREME_OVERLORD,O.PRESSURE,550,100,135,120,60,85,50,25,50,275,c.MEDIUM_FAST,50,!1),new G(e.GREAT_TUSK,9,!1,!1,!1,"Paradox Pokémon",I.GROUND,I.FIGHTING,2.2,320,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,115,131,131,53,53,87,30,0,285,c.SLOW,null,!1),new G(e.SCREAM_TAIL,9,!1,!1,!1,"Paradox Pokémon",I.FAIRY,I.PSYCHIC,1.2,8,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,115,65,99,65,115,111,50,0,285,c.SLOW,null,!1),new G(e.BRUTE_BONNET,9,!1,!1,!1,"Paradox Pokémon",I.GRASS,I.DARK,1.2,21,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,111,127,99,79,99,55,50,0,285,c.SLOW,null,!1),new G(e.FLUTTER_MANE,9,!1,!1,!1,"Paradox Pokémon",I.GHOST,I.FAIRY,1.4,4,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,55,55,55,135,135,135,30,0,285,c.SLOW,null,!1),new G(e.SLITHER_WING,9,!1,!1,!1,"Paradox Pokémon",I.BUG,I.FIGHTING,3.2,92,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,85,135,79,85,105,81,30,0,285,c.SLOW,null,!1),new G(e.SANDY_SHOCKS,9,!1,!1,!1,"Paradox Pokémon",I.ELECTRIC,I.GROUND,2.3,60,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,85,81,97,121,85,101,30,0,285,c.SLOW,null,!1),new G(e.IRON_TREADS,9,!1,!1,!1,"Paradox Pokémon",I.GROUND,I.STEEL,.9,240,O.QUARK_DRIVE,O.NONE,O.NONE,570,90,112,120,72,70,106,30,0,285,c.SLOW,null,!1),new G(e.IRON_BUNDLE,9,!1,!1,!1,"Paradox Pokémon",I.ICE,I.WATER,.6,11,O.QUARK_DRIVE,O.NONE,O.NONE,570,56,80,114,124,60,136,50,0,285,c.SLOW,null,!1),new G(e.IRON_HANDS,9,!1,!1,!1,"Paradox Pokémon",I.FIGHTING,I.ELECTRIC,1.8,380.7,O.QUARK_DRIVE,O.NONE,O.NONE,570,154,140,108,50,68,50,50,0,285,c.SLOW,null,!1),new G(e.IRON_JUGULIS,9,!1,!1,!1,"Paradox Pokémon",I.DARK,I.FLYING,1.3,111,O.QUARK_DRIVE,O.NONE,O.NONE,570,94,80,86,122,80,108,30,0,285,c.SLOW,null,!1),new G(e.IRON_MOTH,9,!1,!1,!1,"Paradox Pokémon",I.FIRE,I.POISON,1.2,36,O.QUARK_DRIVE,O.NONE,O.NONE,570,80,70,60,140,110,110,30,0,285,c.SLOW,null,!1),new G(e.IRON_THORNS,9,!1,!1,!1,"Paradox Pokémon",I.ROCK,I.ELECTRIC,1.6,303,O.QUARK_DRIVE,O.NONE,O.NONE,570,100,134,110,70,84,72,30,0,285,c.SLOW,null,!1),new G(e.FRIGIBAX,9,!1,!1,!1,"Ice Fin Pokémon",I.DRAGON,I.ICE,.5,17,O.THERMAL_EXCHANGE,O.NONE,O.ICE_BODY,320,65,75,45,35,45,55,45,50,64,c.SLOW,50,!1),new G(e.ARCTIBAX,9,!1,!1,!1,"Ice Fin Pokémon",I.DRAGON,I.ICE,.8,30,O.THERMAL_EXCHANGE,O.NONE,O.ICE_BODY,423,90,95,66,45,65,62,25,50,148,c.SLOW,50,!1),new G(e.BAXCALIBUR,9,!1,!1,!1,"Ice Dragon Pokémon",I.DRAGON,I.ICE,2.1,210,O.THERMAL_EXCHANGE,O.NONE,O.ICE_BODY,600,115,145,92,75,86,87,10,50,300,c.SLOW,50,!1),new G(e.GIMMIGHOUL,9,!1,!1,!1,"Coin Chest Pokémon",I.GHOST,null,.3,5,O.RATTLED,O.NONE,O.NONE,300,45,30,70,75,70,10,45,50,60,c.SLOW,null,!1,!1,new Y("Chest Form","chest",I.GHOST,null,.3,5,O.RATTLED,O.NONE,O.NONE,300,45,30,70,75,70,10,45,50,60,!1,"",!0),new Y("Roaming Form","roaming",I.GHOST,null,.1,1,O.RUN_AWAY,O.NONE,O.NONE,300,45,30,25,75,45,80,45,50,60,!1,null,!0)),new G(e.GHOLDENGO,9,!1,!1,!1,"Coin Entity Pokémon",I.STEEL,I.GHOST,1.2,30,O.GOOD_AS_GOLD,O.NONE,O.NONE,550,87,60,95,133,91,84,45,50,275,c.SLOW,null,!1),new G(e.WO_CHIEN,9,!0,!1,!1,"Ruinous Pokémon",I.DARK,I.GRASS,1.5,74.2,O.TABLETS_OF_RUIN,O.NONE,O.NONE,570,85,85,100,95,135,70,6,0,285,c.SLOW,null,!1),new G(e.CHIEN_PAO,9,!0,!1,!1,"Ruinous Pokémon",I.DARK,I.ICE,1.9,152.2,O.SWORD_OF_RUIN,O.NONE,O.NONE,570,80,120,80,90,65,135,6,0,285,c.SLOW,null,!1),new G(e.TING_LU,9,!0,!1,!1,"Ruinous Pokémon",I.DARK,I.GROUND,2.7,699.7,O.VESSEL_OF_RUIN,O.NONE,O.NONE,570,155,110,125,55,80,45,6,0,285,c.SLOW,null,!1),new G(e.CHI_YU,9,!0,!1,!1,"Ruinous Pokémon",I.DARK,I.FIRE,.4,4.9,O.BEADS_OF_RUIN,O.NONE,O.NONE,570,55,80,80,135,120,100,6,0,285,c.SLOW,null,!1),new G(e.ROARING_MOON,9,!1,!1,!1,"Paradox Pokémon",I.DRAGON,I.DARK,2,380,O.PROTOSYNTHESIS,O.NONE,O.NONE,590,105,139,71,55,101,119,10,0,295,c.SLOW,null,!1),new G(e.IRON_VALIANT,9,!1,!1,!1,"Paradox Pokémon",I.FAIRY,I.FIGHTING,1.4,35,O.QUARK_DRIVE,O.NONE,O.NONE,590,74,130,90,120,60,116,10,0,295,c.SLOW,null,!1),new G(e.KORAIDON,9,!1,!0,!1,"Paradox Pokémon",I.FIGHTING,I.DRAGON,2.5,303,O.ORICHALCUM_PULSE,O.NONE,O.NONE,670,100,135,115,85,100,135,3,0,335,c.SLOW,null,!1,!1,new Y("Apex Build","apex-build",I.FIGHTING,I.DRAGON,2.5,303,O.ORICHALCUM_PULSE,O.NONE,O.NONE,670,100,135,115,85,100,135,3,0,335,!1,null,!0),new Y("Limited Build","limited-build",I.FIGHTING,I.DRAGON,3.5,303,O.ORICHALCUM_PULSE,O.NONE,O.NONE,670,100,135,115,85,100,135,3,0,335,!1,null,!0),new Y("Sprinting Build","sprinting-build",I.FIGHTING,I.DRAGON,3.5,303,O.ORICHALCUM_PULSE,O.NONE,O.NONE,670,100,135,115,85,100,135,3,0,335,!1,null,!0),new Y("Swimming Build","swimming-build",I.FIGHTING,I.DRAGON,3.5,303,O.ORICHALCUM_PULSE,O.NONE,O.NONE,670,100,135,115,85,100,135,3,0,335,!1,null,!0),new Y("Gliding Build","gliding-build",I.FIGHTING,I.DRAGON,3.5,303,O.ORICHALCUM_PULSE,O.NONE,O.NONE,670,100,135,115,85,100,135,3,0,335,!1,null,!0)),new G(e.MIRAIDON,9,!1,!0,!1,"Paradox Pokémon",I.ELECTRIC,I.DRAGON,3.5,240,O.HADRON_ENGINE,O.NONE,O.NONE,670,100,85,100,135,115,135,3,0,335,c.SLOW,null,!1,!1,new Y("Ultimate Mode","ultimate-mode",I.ELECTRIC,I.DRAGON,3.5,240,O.HADRON_ENGINE,O.NONE,O.NONE,670,100,85,100,135,115,135,3,0,335,!1,null,!0),new Y("Low-Power Mode","low-power-mode",I.ELECTRIC,I.DRAGON,2.8,240,O.HADRON_ENGINE,O.NONE,O.NONE,670,100,85,100,135,115,135,3,0,335,!1,null,!0),new Y("Drive Mode","drive-mode",I.ELECTRIC,I.DRAGON,2.8,240,O.HADRON_ENGINE,O.NONE,O.NONE,670,100,85,100,135,115,135,3,0,335,!1,null,!0),new Y("Aquatic Mode","aquatic-mode",I.ELECTRIC,I.DRAGON,2.8,240,O.HADRON_ENGINE,O.NONE,O.NONE,670,100,85,100,135,115,135,3,0,335,!1,null,!0),new Y("Glide Mode","glide-mode",I.ELECTRIC,I.DRAGON,2.8,240,O.HADRON_ENGINE,O.NONE,O.NONE,670,100,85,100,135,115,135,3,0,335,!1,null,!0)),new G(e.WALKING_WAKE,9,!1,!1,!1,"Paradox Pokémon",I.WATER,I.DRAGON,3.5,280,O.PROTOSYNTHESIS,O.NONE,O.NONE,590,99,83,91,125,83,109,10,0,295,c.SLOW,null,!1),new G(e.IRON_LEAVES,9,!1,!1,!1,"Paradox Pokémon",I.GRASS,I.PSYCHIC,1.5,125,O.QUARK_DRIVE,O.NONE,O.NONE,590,90,130,88,70,108,104,10,0,295,c.SLOW,null,!1),new G(e.DIPPLIN,9,!1,!1,!1,"Candy Apple Pokémon",I.GRASS,I.DRAGON,.4,9.7,O.SUPERSWEET_SYRUP,O.GLUTTONY,O.STICKY_HOLD,485,80,80,110,95,80,40,45,50,170,c.ERRATIC,50,!1),new G(e.POLTCHAGEIST,9,!1,!1,!1,"Matcha Pokémon",I.GRASS,I.GHOST,.1,1.1,O.HOSPITALITY,O.NONE,O.HEATPROOF,308,40,45,45,74,54,50,120,50,62,c.SLOW,null,!1,!1,new Y("Counterfeit Form","counterfeit",I.GRASS,I.GHOST,.1,1.1,O.HOSPITALITY,O.NONE,O.HEATPROOF,308,40,45,45,74,54,50,120,50,62,!1,null,!0),new Y("Artisan Form","artisan",I.GRASS,I.GHOST,.1,1.1,O.HOSPITALITY,O.NONE,O.HEATPROOF,308,40,45,45,74,54,50,120,50,62,!1,null,!0)),new G(e.SINISTCHA,9,!1,!1,!1,"Matcha Pokémon",I.GRASS,I.GHOST,.2,2.2,O.HOSPITALITY,O.NONE,O.HEATPROOF,508,71,60,106,121,80,70,60,50,178,c.SLOW,null,!1,!1,new Y("Unremarkable Form","unremarkable",I.GRASS,I.GHOST,.2,2.2,O.HOSPITALITY,O.NONE,O.HEATPROOF,508,71,60,106,121,80,70,60,50,178),new Y("Masterpiece Form","masterpiece",I.GRASS,I.GHOST,.2,2.2,O.HOSPITALITY,O.NONE,O.HEATPROOF,508,71,60,106,121,80,70,60,50,178)),new G(e.OKIDOGI,9,!0,!1,!1,"Retainer Pokémon",I.POISON,I.FIGHTING,1.8,92.2,O.TOXIC_CHAIN,O.NONE,O.GUARD_DOG,555,88,128,115,58,86,80,3,0,276,c.SLOW,100,!1),new G(e.MUNKIDORI,9,!0,!1,!1,"Retainer Pokémon",I.POISON,I.PSYCHIC,1,12.2,O.TOXIC_CHAIN,O.NONE,O.FRISK,555,88,75,66,130,90,106,3,0,276,c.SLOW,100,!1),new G(e.FEZANDIPITI,9,!0,!1,!1,"Retainer Pokémon",I.POISON,I.FAIRY,1.4,30.1,O.TOXIC_CHAIN,O.NONE,O.TECHNICIAN,555,88,91,82,70,125,99,3,0,276,c.SLOW,100,!1),new G(e.OGERPON,9,!0,!1,!1,"Mask Pokémon",I.GRASS,null,1.2,39.8,O.DEFIANT,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275,c.SLOW,0,!1,!1,new Y("Teal Mask","teal-mask",I.GRASS,null,1.2,39.8,O.DEFIANT,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275,!1,null,!0),new Y("Wellspring Mask","wellspring-mask",I.GRASS,I.WATER,1.2,39.8,O.WATER_ABSORB,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new Y("Hearthflame Mask","hearthflame-mask",I.GRASS,I.FIRE,1.2,39.8,O.MOLD_BREAKER,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new Y("Cornerstone Mask","cornerstone-mask",I.GRASS,I.ROCK,1.2,39.8,O.STURDY,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new Y("Teal Mask Terastallized","teal-mask-tera",I.GRASS,null,1.2,39.8,O.EMBODY_ASPECT_TEAL,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new Y("Wellspring Mask Terastallized","wellspring-mask-tera",I.GRASS,I.WATER,1.2,39.8,O.EMBODY_ASPECT_WELLSPRING,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new Y("Hearthflame Mask Terastallized","hearthflame-mask-tera",I.GRASS,I.FIRE,1.2,39.8,O.EMBODY_ASPECT_HEARTHFLAME,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new Y("Cornerstone Mask Terastallized","cornerstone-mask-tera",I.GRASS,I.ROCK,1.2,39.8,O.EMBODY_ASPECT_CORNERSTONE,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275)),new G(e.ARCHALUDON,9,!1,!1,!1,"Alloy Pokémon",I.STEEL,I.DRAGON,2,60,O.STAMINA,O.STURDY,O.STALWART,600,90,105,130,125,65,85,10,50,300,c.MEDIUM_FAST,50,!1),new G(e.HYDRAPPLE,9,!1,!1,!1,"Apple Hydra Pokémon",I.GRASS,I.DRAGON,1.8,93,O.SUPERSWEET_SYRUP,O.REGENERATOR,O.STICKY_HOLD,540,106,80,110,120,80,44,10,50,270,c.ERRATIC,50,!1),new G(e.GOUGING_FIRE,9,!1,!1,!1,"Paradox Pokémon",I.FIRE,I.DRAGON,3.5,590,O.PROTOSYNTHESIS,O.NONE,O.NONE,590,105,115,121,65,93,91,10,0,295,c.SLOW,null,!1),new G(e.RAGING_BOLT,9,!1,!1,!1,"Paradox Pokémon",I.ELECTRIC,I.DRAGON,5.2,480,O.PROTOSYNTHESIS,O.NONE,O.NONE,590,125,73,91,137,89,75,10,0,295,c.SLOW,null,!1),new G(e.IRON_BOULDER,9,!1,!1,!1,"Paradox Pokémon",I.ROCK,I.PSYCHIC,1.5,162.5,O.QUARK_DRIVE,O.NONE,O.NONE,590,90,120,80,68,108,124,10,0,295,c.SLOW,null,!1),new G(e.IRON_CROWN,9,!1,!1,!1,"Paradox Pokémon",I.STEEL,I.PSYCHIC,1.6,156,O.QUARK_DRIVE,O.NONE,O.NONE,590,90,72,100,122,108,98,10,0,295,c.SLOW,null,!1),new G(e.TERAPAGOS,9,!1,!0,!1,"Tera Pokémon",I.NORMAL,null,.2,6.5,O.TERA_SHIFT,O.NONE,O.NONE,450,90,65,85,65,85,60,5,50,90,c.SLOW,50,!1,!1,new Y("Normal Form","",I.NORMAL,null,.2,6.5,O.TERA_SHIFT,O.NONE,O.NONE,450,90,65,85,65,85,60,5,50,90,!1,null,!0),new Y("Terastal Form","terastal",I.NORMAL,null,.3,16,O.TERA_SHELL,O.NONE,O.NONE,600,95,95,110,105,110,85,5,50,90),new Y("Stellar Form","stellar",I.NORMAL,null,1.7,77,O.TERAFORM_ZERO,O.NONE,O.NONE,700,160,105,110,130,110,85,5,50,90)),new G(e.PECHARUNT,9,!1,!1,!0,"Subjugation Pokémon",I.POISON,I.GHOST,.3,.3,O.POISON_PUPPETEER,O.NONE,O.NONE,600,88,88,160,88,88,88,3,0,300,c.SLOW,null,!1),new G(e.ALOLA_RATTATA,7,!1,!1,!1,"Mouse Pokémon",I.DARK,I.NORMAL,.3,3.8,O.GLUTTONY,O.HUSTLE,O.THICK_FAT,253,30,56,35,25,35,72,255,70,51,c.MEDIUM_FAST,50,!1),new G(e.ALOLA_RATICATE,7,!1,!1,!1,"Mouse Pokémon",I.DARK,I.NORMAL,.7,25.5,O.GLUTTONY,O.HUSTLE,O.THICK_FAT,413,75,71,70,40,80,77,127,70,145,c.MEDIUM_FAST,50,!1),new G(e.ALOLA_RAICHU,7,!1,!1,!1,"Mouse Pokémon",I.ELECTRIC,I.PSYCHIC,.7,21,O.SURGE_SURFER,O.NONE,O.NONE,485,60,85,50,95,85,110,75,50,243,c.MEDIUM_FAST,50,!1),new G(e.ALOLA_SANDSHREW,7,!1,!1,!1,"Mouse Pokémon",I.ICE,I.STEEL,.7,40,O.SNOW_CLOAK,O.NONE,O.SLUSH_RUSH,300,50,75,90,10,35,40,255,50,60,c.MEDIUM_FAST,50,!1),new G(e.ALOLA_SANDSLASH,7,!1,!1,!1,"Mouse Pokémon",I.ICE,I.STEEL,1.2,55,O.SNOW_CLOAK,O.NONE,O.SLUSH_RUSH,450,75,100,120,25,65,65,90,50,158,c.MEDIUM_FAST,50,!1),new G(e.ALOLA_VULPIX,7,!1,!1,!1,"Fox Pokémon",I.ICE,null,.6,9.9,O.SNOW_CLOAK,O.NONE,O.SNOW_WARNING,299,38,41,40,50,65,65,190,50,60,c.MEDIUM_FAST,25,!1),new G(e.ALOLA_NINETALES,7,!1,!1,!1,"Fox Pokémon",I.ICE,I.FAIRY,1.1,19.9,O.SNOW_CLOAK,O.NONE,O.SNOW_WARNING,505,73,67,75,81,100,109,75,50,177,c.MEDIUM_FAST,25,!1),new G(e.ALOLA_DIGLETT,7,!1,!1,!1,"Mole Pokémon",I.GROUND,I.STEEL,.2,1,O.SAND_VEIL,O.TANGLING_HAIR,O.SAND_FORCE,265,10,55,30,35,45,90,255,50,53,c.MEDIUM_FAST,50,!1),new G(e.ALOLA_DUGTRIO,7,!1,!1,!1,"Mole Pokémon",I.GROUND,I.STEEL,.7,66.6,O.SAND_VEIL,O.TANGLING_HAIR,O.SAND_FORCE,425,35,100,60,50,70,110,50,50,149,c.MEDIUM_FAST,50,!1),new G(e.ALOLA_MEOWTH,7,!1,!1,!1,"Scratch Cat Pokémon",I.DARK,null,.4,4.2,O.PICKUP,O.TECHNICIAN,O.RATTLED,290,40,35,35,50,40,90,255,50,58,c.MEDIUM_FAST,50,!1),new G(e.ALOLA_PERSIAN,7,!1,!1,!1,"Classy Cat Pokémon",I.DARK,null,1.1,33,O.FUR_COAT,O.TECHNICIAN,O.RATTLED,440,65,60,60,75,65,115,90,50,154,c.MEDIUM_FAST,50,!1),new G(e.ALOLA_GEODUDE,7,!1,!1,!1,"Rock Pokémon",I.ROCK,I.ELECTRIC,.4,20.3,O.MAGNET_PULL,O.STURDY,O.GALVANIZE,300,40,80,100,30,30,20,255,70,60,c.MEDIUM_SLOW,50,!1),new G(e.ALOLA_GRAVELER,7,!1,!1,!1,"Rock Pokémon",I.ROCK,I.ELECTRIC,1,110,O.MAGNET_PULL,O.STURDY,O.GALVANIZE,390,55,95,115,45,45,35,120,70,137,c.MEDIUM_SLOW,50,!1),new G(e.ALOLA_GOLEM,7,!1,!1,!1,"Megaton Pokémon",I.ROCK,I.ELECTRIC,1.7,316,O.MAGNET_PULL,O.STURDY,O.GALVANIZE,495,80,120,130,55,65,45,45,70,223,c.MEDIUM_SLOW,50,!1),new G(e.ALOLA_GRIMER,7,!1,!1,!1,"Sludge Pokémon",I.POISON,I.DARK,.7,42,O.POISON_TOUCH,O.GLUTTONY,O.POWER_OF_ALCHEMY,325,80,80,50,40,50,25,190,70,65,c.MEDIUM_FAST,50,!1),new G(e.ALOLA_MUK,7,!1,!1,!1,"Sludge Pokémon",I.POISON,I.DARK,1,52,O.POISON_TOUCH,O.GLUTTONY,O.POWER_OF_ALCHEMY,500,105,105,75,65,100,50,75,70,175,c.MEDIUM_FAST,50,!1),new G(e.ALOLA_EXEGGUTOR,7,!1,!1,!1,"Coconut Pokémon",I.GRASS,I.DRAGON,10.9,415.6,O.FRISK,O.NONE,O.HARVEST,530,95,105,85,125,75,45,45,50,186,c.SLOW,50,!1),new G(e.ALOLA_MAROWAK,7,!1,!1,!1,"Bone Keeper Pokémon",I.FIRE,I.GHOST,1,34,O.CURSED_BODY,O.LIGHTNING_ROD,O.ROCK_HEAD,425,60,80,110,50,80,45,75,50,149,c.MEDIUM_FAST,50,!1),new G(e.ETERNAL_FLOETTE,6,!0,!1,!1,"Single Bloom Pokémon",I.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,551,74,65,67,125,128,92,120,70,130,c.MEDIUM_FAST,0,!1),new G(e.GALAR_MEOWTH,8,!1,!1,!1,"Scratch Cat Pokémon",I.STEEL,null,.4,7.5,O.PICKUP,O.TOUGH_CLAWS,O.UNNERVE,290,50,65,55,40,40,40,255,50,58,c.MEDIUM_FAST,50,!1),new G(e.GALAR_PONYTA,8,!1,!1,!1,"Fire Horse Pokémon",I.PSYCHIC,null,.8,24,O.RUN_AWAY,O.PASTEL_VEIL,O.ANTICIPATION,410,50,85,55,65,65,90,190,50,82,c.MEDIUM_FAST,50,!1),new G(e.GALAR_RAPIDASH,8,!1,!1,!1,"Fire Horse Pokémon",I.PSYCHIC,I.FAIRY,1.7,80,O.RUN_AWAY,O.PASTEL_VEIL,O.ANTICIPATION,500,65,100,70,80,80,105,60,50,175,c.MEDIUM_FAST,50,!1),new G(e.GALAR_SLOWPOKE,8,!1,!1,!1,"Dopey Pokémon",I.PSYCHIC,null,1.2,36,O.GLUTTONY,O.OWN_TEMPO,O.REGENERATOR,315,90,65,65,40,40,15,190,50,63,c.MEDIUM_FAST,50,!1),new G(e.GALAR_SLOWBRO,8,!1,!1,!1,"Hermit Crab Pokémon",I.POISON,I.PSYCHIC,1.6,70.5,O.QUICK_DRAW,O.OWN_TEMPO,O.REGENERATOR,490,95,100,95,100,70,30,75,50,172,c.MEDIUM_FAST,50,!1),new G(e.GALAR_FARFETCHD,8,!1,!1,!1,"Wild Duck Pokémon",I.FIGHTING,null,.8,42,O.STEADFAST,O.NONE,O.SCRAPPY,377,52,95,55,58,62,55,45,50,132,c.MEDIUM_FAST,50,!1),new G(e.GALAR_WEEZING,8,!1,!1,!1,"Poison Gas Pokémon",I.POISON,I.FAIRY,3,16,O.LEVITATE,O.NEUTRALIZING_GAS,O.MISTY_SURGE,490,65,90,120,85,70,60,60,50,172,c.MEDIUM_FAST,50,!1),new G(e.GALAR_MR_MIME,8,!1,!1,!1,"Barrier Pokémon",I.ICE,I.PSYCHIC,1.4,56.8,O.VITAL_SPIRIT,O.SCREEN_CLEANER,O.ICE_BODY,460,50,65,65,90,90,100,45,50,161,c.MEDIUM_FAST,50,!1),new G(e.GALAR_ARTICUNO,8,!0,!1,!1,"Freeze Pokémon",I.PSYCHIC,I.FLYING,1.7,50.9,O.COMPETITIVE,O.NONE,O.NONE,580,90,85,85,125,100,95,3,35,290,c.SLOW,null,!1),new G(e.GALAR_ZAPDOS,8,!0,!1,!1,"Electric Pokémon",I.FIGHTING,I.FLYING,1.6,58.2,O.DEFIANT,O.NONE,O.NONE,580,90,125,90,85,90,100,3,35,290,c.SLOW,null,!1),new G(e.GALAR_MOLTRES,8,!0,!1,!1,"Flame Pokémon",I.DARK,I.FLYING,2,66,O.BERSERK,O.NONE,O.NONE,580,90,85,90,100,125,90,3,35,290,c.SLOW,null,!1),new G(e.GALAR_SLOWKING,8,!1,!1,!1,"Royal Pokémon",I.POISON,I.PSYCHIC,1.8,79.5,O.CURIOUS_MEDICINE,O.OWN_TEMPO,O.REGENERATOR,490,95,65,80,110,110,30,70,50,172,c.MEDIUM_FAST,50,!1),new G(e.GALAR_CORSOLA,8,!1,!1,!1,"Coral Pokémon",I.GHOST,null,.6,.5,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,410,60,55,100,65,100,30,60,50,144,c.FAST,25,!1),new G(e.GALAR_ZIGZAGOON,8,!1,!1,!1,"Tiny Raccoon Pokémon",I.DARK,I.NORMAL,.4,17.5,O.PICKUP,O.GLUTTONY,O.QUICK_FEET,240,38,30,41,30,41,60,255,50,56,c.MEDIUM_FAST,50,!1),new G(e.GALAR_LINOONE,8,!1,!1,!1,"Rushing Pokémon",I.DARK,I.NORMAL,.5,32.5,O.PICKUP,O.GLUTTONY,O.QUICK_FEET,420,78,70,61,50,61,100,90,50,147,c.MEDIUM_FAST,50,!1),new G(e.GALAR_DARUMAKA,8,!1,!1,!1,"Zen Charm Pokémon",I.ICE,null,.7,40,O.HUSTLE,O.NONE,O.INNER_FOCUS,315,70,90,45,15,45,50,120,50,63,c.MEDIUM_SLOW,50,!1),new G(e.GALAR_DARMANITAN,8,!1,!1,!1,"Blazing Pokémon",I.ICE,null,1.7,120,O.GORILLA_TACTICS,O.NONE,O.ZEN_MODE,480,105,140,55,30,55,95,60,50,168,c.MEDIUM_SLOW,50,!1,!0,new Y("Standard Mode","",I.ICE,null,1.7,120,O.GORILLA_TACTICS,O.NONE,O.ZEN_MODE,480,105,140,55,30,55,95,60,50,168,!1,null,!0),new Y("Zen Mode","zen",I.ICE,I.FIRE,1.7,120,O.GORILLA_TACTICS,O.NONE,O.ZEN_MODE,540,105,160,55,30,55,135,60,50,189)),new G(e.GALAR_YAMASK,8,!1,!1,!1,"Spirit Pokémon",I.GROUND,I.GHOST,.5,1.5,O.WANDERING_SPIRIT,O.NONE,O.NONE,303,38,55,85,30,65,30,190,50,61,c.MEDIUM_FAST,50,!1),new G(e.GALAR_STUNFISK,8,!1,!1,!1,"Trap Pokémon",I.GROUND,I.STEEL,.7,20.5,O.MIMICRY,O.NONE,O.NONE,471,109,81,99,66,84,32,75,70,165,c.MEDIUM_FAST,50,!1),new G(e.HISUI_GROWLITHE,8,!1,!1,!1,"Puppy Pokémon",I.FIRE,I.ROCK,.8,22.7,O.INTIMIDATE,O.FLASH_FIRE,O.ROCK_HEAD,350,60,75,45,65,50,55,190,50,70,c.SLOW,75,!1),new G(e.HISUI_ARCANINE,8,!1,!1,!1,"Legendary Pokémon",I.FIRE,I.ROCK,2,168,O.INTIMIDATE,O.FLASH_FIRE,O.ROCK_HEAD,555,95,115,80,95,80,90,85,50,194,c.SLOW,75,!1),new G(e.HISUI_VOLTORB,8,!1,!1,!1,"Ball Pokémon",I.ELECTRIC,I.GRASS,.5,13,O.SOUNDPROOF,O.STATIC,O.AFTERMATH,330,40,30,50,55,55,100,190,80,66,c.MEDIUM_FAST,null,!1),new G(e.HISUI_ELECTRODE,8,!1,!1,!1,"Ball Pokémon",I.ELECTRIC,I.GRASS,1.2,81,O.SOUNDPROOF,O.STATIC,O.AFTERMATH,490,60,50,70,80,80,150,60,70,172,c.MEDIUM_FAST,null,!1),new G(e.HISUI_TYPHLOSION,8,!1,!1,!1,"Volcano Pokémon",I.FIRE,I.GHOST,1.6,69.8,O.BLAZE,O.NONE,O.FRISK,534,73,84,78,119,85,95,45,70,240,c.MEDIUM_SLOW,87.5,!1),new G(e.HISUI_QWILFISH,8,!1,!1,!1,"Balloon Pokémon",I.DARK,I.POISON,.5,3.9,O.POISON_POINT,O.SWIFT_SWIM,O.INTIMIDATE,440,65,95,85,55,55,85,45,50,88,c.MEDIUM_FAST,50,!1),new G(e.HISUI_SNEASEL,8,!1,!1,!1,"Sharp Claw Pokémon",I.FIGHTING,I.POISON,.9,27,O.INNER_FOCUS,O.KEEN_EYE,O.PICKPOCKET,430,55,95,55,35,75,115,60,35,86,c.MEDIUM_SLOW,50,!0),new G(e.HISUI_SAMUROTT,8,!1,!1,!1,"Formidable Pokémon",I.WATER,I.DARK,1.5,58.2,O.TORRENT,O.NONE,O.SHARPNESS,528,90,108,80,100,65,85,45,80,238,c.MEDIUM_SLOW,87.5,!1),new G(e.HISUI_LILLIGANT,8,!1,!1,!1,"Flowering Pokémon",I.GRASS,I.FIGHTING,1.2,19.2,O.CHLOROPHYLL,O.HUSTLE,O.LEAF_GUARD,480,70,105,75,50,75,105,75,50,168,c.MEDIUM_FAST,0,!1),new G(e.HISUI_ZORUA,8,!1,!1,!1,"Tricky Fox Pokémon",I.NORMAL,I.GHOST,.7,12.5,O.ILLUSION,O.NONE,O.NONE,330,35,60,40,85,40,70,75,50,66,c.MEDIUM_SLOW,87.5,!1),new G(e.HISUI_ZOROARK,8,!1,!1,!1,"Illusion Fox Pokémon",I.NORMAL,I.GHOST,1.6,83,O.ILLUSION,O.NONE,O.NONE,510,55,100,60,125,60,110,45,50,179,c.MEDIUM_SLOW,87.5,!1),new G(e.HISUI_BRAVIARY,8,!1,!1,!1,"Valiant Pokémon",I.PSYCHIC,I.FLYING,1.7,43.4,O.KEEN_EYE,O.SHEER_FORCE,O.TINTED_LENS,510,110,83,70,112,70,65,60,50,179,c.SLOW,100,!1),new G(e.HISUI_SLIGGOO,8,!1,!1,!1,"Soft Tissue Pokémon",I.STEEL,I.DRAGON,.7,68.5,O.SAP_SIPPER,O.SHELL_ARMOR,O.GOOEY,452,58,75,83,83,113,40,45,35,158,c.SLOW,50,!1),new G(e.HISUI_GOODRA,8,!1,!1,!1,"Dragon Pokémon",I.STEEL,I.DRAGON,1.7,334.1,O.SAP_SIPPER,O.SHELL_ARMOR,O.GOOEY,600,80,100,100,110,150,60,45,35,270,c.SLOW,50,!1),new G(e.HISUI_AVALUGG,8,!1,!1,!1,"Iceberg Pokémon",I.ICE,I.ROCK,1.4,262.4,O.STRONG_JAW,O.ICE_BODY,O.STURDY,514,95,127,184,34,36,38,55,50,180,c.MEDIUM_FAST,50,!1),new G(e.HISUI_DECIDUEYE,8,!1,!1,!1,"Arrow Quill Pokémon",I.GRASS,I.FIGHTING,1.6,37,O.OVERGROW,O.NONE,O.SCRAPPY,530,88,112,80,95,95,60,45,50,239,c.MEDIUM_SLOW,87.5,!1),new G(e.PALDEA_TAUROS,9,!1,!1,!1,"Wild Bull Pokémon",I.FIGHTING,null,1.4,115,O.INTIMIDATE,O.ANGER_POINT,O.CUD_CHEW,490,75,110,105,30,70,100,45,50,172,c.SLOW,100,!1,!1,new Y("Combat Breed","combat",I.FIGHTING,null,1.4,115,O.INTIMIDATE,O.ANGER_POINT,O.CUD_CHEW,490,75,110,105,30,70,100,45,50,172,!1,"",!0),new Y("Blaze Breed","blaze",I.FIGHTING,I.FIRE,1.4,85,O.INTIMIDATE,O.ANGER_POINT,O.CUD_CHEW,490,75,110,105,30,70,100,45,50,172,!1,null,!0),new Y("Aqua Breed","aqua",I.FIGHTING,I.WATER,1.4,110,O.INTIMIDATE,O.ANGER_POINT,O.CUD_CHEW,490,75,110,105,30,70,100,45,50,172,!1,null,!0)),new G(e.PALDEA_WOOPER,9,!1,!1,!1,"Water Fish Pokémon",I.POISON,I.GROUND,.4,11,O.POISON_POINT,O.WATER_ABSORB,O.UNAWARE,210,55,45,45,25,25,15,255,50,42,c.MEDIUM_FAST,50,!1),new G(e.BLOODMOON_URSALUNA,9,!0,!1,!1,"Peat Pokémon",I.GROUND,I.NORMAL,2.7,333,O.MINDS_EYE,O.NONE,O.NONE,555,113,70,120,135,65,52,75,50,275,c.MEDIUM_FAST,50,!1))}N(ik,"initSpecies");const _f=class _f{constructor(A=null){this.cursor=0,this.active=!1,this.mode=A}show(A){return this.active=!0,!0}getUi(){return n.ui}getTextColor(A,s=!1){return aA(A,s,n.uiTheme)}getCursor(){return this.cursor}setCursor(A){const s=this.cursor!==A;return s&&(this.cursor=A),s}setMouseCursorStyle(A){n.input.manager.canvas.style.cursor=A}clear(){this.active=!1}destroy(){}};N(_f,"UiHandler");let Vs=_f;const Pf=class Pf extends Vs{constructor(A=null){super(A),this.tutorialActive=!1}processTutorialInput(A){if((A===k.ACTION||A===k.CANCEL)&&this.onActionInput){this.getUi().playSelect();const s=this.onActionInput;return this.onActionInput=null,s(),this.awaitingActionInput=!1,!0}return!1}initTutorialOverlay(A){this.tutorialOverlay||(this.tutorialOverlay=new Phaser.GameObjects.Rectangle(n,-1,-1,n.scaledCanvas.width,n.scaledCanvas.height,460551),this.tutorialOverlay.setName("tutorial-overlay"),this.tutorialOverlay.setOrigin(0,0),this.tutorialOverlay.setAlpha(0)),A&&A.add(this.tutorialOverlay)}};N(Pf,"AwaitableUiHandler");let qn=Pf;const Gf=class Gf extends qn{constructor(A=null){super(A),this.pendingPrompt=!1}initPromptSprite(A){if(!this.prompt){const s=n.add.sprite(0,0,"prompt");s.setVisible(!1),s.setOrigin(0,0),this.prompt=s}A&&A.add(this.prompt)}showText(A,s,R,a,i,r){this.showTextInternal(A,s,R,a,i,r)}showDialogue(A,s,R,a,i,r,L){this.showTextInternal(A,R,a,i,r,L)}showTextInternal(A,s,R,a,i,r){s==null&&(s=20);const L=new Map,o=new Map,l=new Map,C=new Map,M=/@(c|d|s|f)\{(.*?)\}/;let D;for(;D=M.exec(A);){switch(D[1]){case"c":L.set(D.index,D[2]);break;case"d":o.set(D.index,parseInt(D[2]));break;case"s":l.set(D.index,D[2]);break;case"f":C.set(D.index,parseInt(D[2]));break}A=A.slice(0,D.index)+A.slice(D.index+D[2].length+4)}if(A){const _=A.split(" ");let P=1,h="";for(let H=0;H<_.length;H++){const d=h?`${h} ${_[H]}`:_[H];if(_[H].includes(`
`))h=d,P++;else{const f=this.message.runWordWrap(d).split(/\n/g).length;f>P?(P=f,h=`${h}
${_[H]}`):h=d}}A=h}if(this.textTimer&&(this.textTimer.remove(),this.textCallbackTimer&&this.textCallbackTimer.callback()),i){const _=R;R=N(()=>{const P=N(()=>this.showPrompt(_,a),"showPrompt");r?n.time.delayedCall(r,P):P()},"callback")}s?(this.clearText(),i&&(this.pendingPrompt=!0),this.textTimer=n.time.addEvent({delay:s,callback:N(()=>{var B;const _=A.length-((B=this.textTimer)==null?void 0:B.repeatCount),P=L.get(_),h=l.get(_),H=o.get(_),d=C.get(_);this.message.setText(A.slice(0,_));const f=N(()=>{var F;P&&n.charSprite.setVariant(P),h&&n.playSound(h),R&&!((F=this.textTimer)!=null&&F.repeatCount)&&(a&&!i?this.textCallbackTimer=n.time.delayedCall(a,()=>{this.textCallbackTimer&&(this.textCallbackTimer.destroy(),this.textCallbackTimer=null),R()}):R())},"advance");H?(this.textTimer.paused=!0,n.tweens.addCounter({duration:TE(H),onComplete:N(()=>{this.textTimer.paused=!1,f()},"onComplete")})):d?(this.textTimer.paused=!0,n.time.delayedCall(150,()=>{n.ui.fadeOut(750).then(()=>{const F=TE(d);n.time.delayedCall(F,()=>{n.ui.fadeIn(500).then(()=>{this.textTimer.paused=!1,f()})})})})):f()},"callback"),repeat:A.length})):(this.message.setText(A),i&&(this.pendingPrompt=!0),R&&R())}showPrompt(A,s){const R=this.message.runWordWrap(this.message.text).split(/\n/g),a=R.length,i=R[R.length-1],r=n.add.text(0,0,i,{font:"96px emerald"});r.setScale(this.message.scale);const L=r.displayWidth;r.destroy(),this.prompt&&(this.prompt.setPosition(this.message.x+L+2,this.message.y+(a-1)*18+2),this.prompt.play("prompt")),this.pendingPrompt=!1,this.awaitingActionInput=!0,this.onActionInput=()=>{this.prompt&&(this.prompt.anims.stop(),this.prompt.setVisible(!1)),A&&(s?this.textCallbackTimer=n.time.delayedCall(s,()=>{this.textCallbackTimer&&(this.textCallbackTimer.destroy(),this.textCallbackTimer=null),A()}):A())}}isTextAnimationInProgress(){return this.textTimer?this.textTimer.repeatCount<this.textTimer.repeat:!1}clearText(){this.message.setText(""),this.pendingPrompt=!1}clear(){super.clear()}};N(Gf,"MessageUiHandler");let vs=Gf;const cf=class cf extends vs{constructor(){super(Ie.MESSAGE),this.wordWrapWidth=1780}setup(){const A=this.getUi();this.textTimer=null,this.textCallbackTimer=null,this.bg=n.add.sprite(0,0,"bg",n.windowType),this.bg.setName("sprite-battle-msg-bg"),this.bg.setOrigin(0,1),A.add(this.bg),this.commandWindow=Gt(202,0,118,48),this.commandWindow.setName("window-command"),this.commandWindow.setOrigin(0,1),this.commandWindow.setVisible(!1),A.add(this.commandWindow),this.movesWindowContainer=n.add.container(0,0),this.movesWindowContainer.setName("moves-bg"),this.movesWindowContainer.setVisible(!1);const s=Gt(0,0,243,48);s.setName("moves-window"),s.setOrigin(0,1);const R=Gt(240,0,80,48,!1,!1,-1,132);R.setName("move-details-window"),R.setOrigin(0,1),this.movesWindowContainer.add([s,R]),A.add(this.movesWindowContainer);const a=n.add.container(12,-39);A.add(a);const i=le(0,0,"",Q.MESSAGE,{maxLines:2,wordWrap:{width:this.wordWrapWidth}});a.add(i),this.message=i,this.nameBoxContainer=n.add.container(0,-16),this.nameBoxContainer.setVisible(!1),this.nameBox=n.add.nineslice(0,0,"namebox",n.windowType,72,16,8,8,5,5),this.nameBox.setOrigin(0,0),this.nameText=le(8,0,"Rival",Q.MESSAGE,{maxLines:1}),this.nameBoxContainer.add(this.nameBox),this.nameBoxContainer.add(this.nameText),a.add(this.nameBoxContainer),this.initPromptSprite(a);const r=n.add.container(0,0);r.setVisible(!1),A.add(r),this.levelUpStatsContainer=r;const L=le(n.game.canvas.width/6-73,-94,"",Q.WINDOW,{maxLines:6});L.setLineSpacing(u.resolvedLanguage==="ja"?25:5);let o="";for(const D of VO)o+=`${u.t(hE(D))}
`;L.text=o,L.x-=L.displayWidth;const l=Gt(n.game.canvas.width/6,-100,80+L.displayWidth,100);l.setOrigin(1,0),r.add(l),r.add(L);const C=le(n.game.canvas.width/6-50,-94,`+
+
+
+
+
+`,Q.WINDOW,{maxLines:6});C.setLineSpacing(u.resolvedLanguage==="ja"?25:5),r.add(C),this.levelUpStatsIncrContent=C;const M=wE(n.game.canvas.width/6-7,-94,"",Q.WINDOW,{maxLines:6,lineSpacing:5});M.setLineSpacing(u.resolvedLanguage==="ja"?25:5),M.setOrigin(1,0),M.setAlign("right"),r.add(M),this.levelUpStatsValuesContent=M}show(A){return super.show(A),this.commandWindow.setVisible(!1),this.movesWindowContainer.setVisible(!1),this.message.setWordWrapWidth(this.wordWrapWidth),!0}processInput(A){const s=this.getUi();if(this.awaitingActionInput&&(A===k.CANCEL||A===k.ACTION)&&this.onActionInput){s.playSelect();const R=this.onActionInput;return this.onActionInput=null,R(),!0}return!1}clear(){super.clear()}showText(A,s,R,a,i,r){this.hideNameText(),super.showText(A,s,R,a,i,r)}showDialogue(A,s,R,a,i,r,L){s&&this.showNameText(s),super.showDialogue(A,s,R,a,i,r,L)}promptLevelUpStats(A,s,R){return new Promise(a=>{if(!n.showLevelUpStats)return a();const i=n.getPlayerParty()[A].stats;let r="";for(const L of VO)r+=`${R?i[L]:i[L]-s[L]}
`;this.levelUpStatsValuesContent.text=r,this.levelUpStatsIncrContent.setVisible(!R),this.levelUpStatsContainer.setVisible(!0),this.awaitingActionInput=!0,this.onActionInput=()=>{if(R)this.levelUpStatsContainer.setVisible(!1),a();else return this.promptLevelUpStats(A,[],!0).then(()=>a())}})}promptIvs(A,s,R){return new Promise(a=>{n.executeWithSeedOffset(()=>{let i="";const r=this.getTopIvs(s,R);for(const L of VO)i+=`${r.includes(L)?this.getIvDescriptor(s[L],L,A):"???"}
`;this.levelUpStatsValuesContent.text=i,this.levelUpStatsIncrContent.setVisible(!1),this.levelUpStatsContainer.setVisible(!0),this.awaitingActionInput=!0,this.onActionInput=()=>{this.levelUpStatsContainer.setVisible(!1),a()}},A)})}getTopIvs(A,s){let R=[];if(s<6){const a=VO.slice();a.sort((i,r)=>A[r]-A[i]);for(let i=0;i<s;i++)R.push(a[i])}else R=VO.slice();return R}getIvDescriptor(A,s,R){const a=n.getPokemonById(R).species.getRootSpeciesId(),i=n.gameData.dexData[a].ivs,r=n.uiTheme,L=N((o,l,C)=>{let M;return l?C===31?M=Q.PERFECT_IV:M=Q.SUMMARY_GREEN:M=Q.WINDOW,`[color=${aA(M,!1,r)}][shadow=${aA(M,!0,r)}]${o}[/shadow][/color]`},"coloredText");return A>30?L(u.t("battleMessageUiHandler:ivBest"),A>i[s],A):A===30?L(u.t("battleMessageUiHandler:ivFantastic"),A>i[s],A):A>20?L(u.t("battleMessageUiHandler:ivVeryGood"),A>i[s],A):A>10?L(u.t("battleMessageUiHandler:ivPrettyGood"),A>i[s],A):A>0?L(u.t("battleMessageUiHandler:ivDecent"),A>i[s],A):L(u.t("battleMessageUiHandler:ivNoGood"),A>i[s],A)}showNameText(A){this.nameBoxContainer.setVisible(!0),this.nameText.setText(A),this.nameBox.width=this.nameText.displayWidth+16}hideNameText(){this.nameBoxContainer.setVisible(!1)}};N(cf,"BattleMessageUiHandler");let g_=cf;var eR=(E=>(E[E.NONE=0]="NONE",E[E.PASSIVE=1]="PASSIVE",E[E.ACTIVE=2]="ACTIVE",E))(eR||{});const hf=class hf{setup(){this.icons=new Map,this.toggled=!1;const A=N(s=>{const R=s.getValue();this.toggled=!!R;for(const a of this.icons.keys()){const i=this.icons.get(a),r=i?this.getModeYDelta(i):0;a.y+=r*(this.toggled?1:-1)}},"onAlternate");n.tweens.addCounter({duration:st(200),from:0,to:1,yoyo:!0,repeat:-1,onRepeat:A,onYoyo:A})}getModeYDelta(A){switch(A){case 0:return 0;case 1:return-1;case 2:return-2}}addOrUpdate(A,s){Array.isArray(A)||(A=[A]);for(const R of A)if(!(this.icons.has(R)&&this.icons.get(R)===s)){if(this.toggled){const a=this.icons.has(R)?this.icons.get(R):0,i=this.getModeYDelta(s);R.y+=i+a}this.icons.set(R,s)}}remove(A){Array.isArray(A)||(A=[A]);for(const s of A){if(this.toggled){const R=this.icons.get(s),a=R?this.getModeYDelta(R):0;s.y-=a}this.icons.delete(s)}}removeAll(){for(const A of this.icons.keys()){if(this.toggled){const s=this.icons.get(A),R=s?this.getModeYDelta(s):0;A.y-=R}this.icons.delete(A)}}};N(hf,"PokemonIconAnimHandler");let cr=hf;var it=(E=>(E[E.SINGLE_GENERATION=0]="SINGLE_GENERATION",E[E.SINGLE_TYPE=1]="SINGLE_TYPE",E[E.LOWER_MAX_STARTER_COST=2]="LOWER_MAX_STARTER_COST",E[E.LOWER_STARTER_POINTS=3]="LOWER_STARTER_POINTS",E[E.FRESH_START=4]="FRESH_START",E[E.INVERSE_BATTLE=5]="INVERSE_BATTLE",E[E.FLIP_STAT=6]="FLIP_STAT",E))(it||{}),lR=(E=>(E[E.NONE=0]="NONE",E[E.ABOMASITE=1]="ABOMASITE",E[E.ABSOLITE=2]="ABSOLITE",E[E.AERODACTYLITE=3]="AERODACTYLITE",E[E.AGGRONITE=4]="AGGRONITE",E[E.ALAKAZITE=5]="ALAKAZITE",E[E.ALTARIANITE=6]="ALTARIANITE",E[E.AMPHAROSITE=7]="AMPHAROSITE",E[E.AUDINITE=8]="AUDINITE",E[E.BANETTITE=9]="BANETTITE",E[E.BEEDRILLITE=10]="BEEDRILLITE",E[E.BLASTOISINITE=11]="BLASTOISINITE",E[E.BLAZIKENITE=12]="BLAZIKENITE",E[E.CAMERUPTITE=13]="CAMERUPTITE",E[E.CHARIZARDITE_X=14]="CHARIZARDITE_X",E[E.CHARIZARDITE_Y=15]="CHARIZARDITE_Y",E[E.DIANCITE=16]="DIANCITE",E[E.GALLADITE=17]="GALLADITE",E[E.GARCHOMPITE=18]="GARCHOMPITE",E[E.GARDEVOIRITE=19]="GARDEVOIRITE",E[E.GENGARITE=20]="GENGARITE",E[E.GLALITITE=21]="GLALITITE",E[E.GYARADOSITE=22]="GYARADOSITE",E[E.HERACRONITE=23]="HERACRONITE",E[E.HOUNDOOMINITE=24]="HOUNDOOMINITE",E[E.KANGASKHANITE=25]="KANGASKHANITE",E[E.LATIASITE=26]="LATIASITE",E[E.LATIOSITE=27]="LATIOSITE",E[E.LOPUNNITE=28]="LOPUNNITE",E[E.LUCARIONITE=29]="LUCARIONITE",E[E.MANECTITE=30]="MANECTITE",E[E.MAWILITE=31]="MAWILITE",E[E.MEDICHAMITE=32]="MEDICHAMITE",E[E.METAGROSSITE=33]="METAGROSSITE",E[E.MEWTWONITE_X=34]="MEWTWONITE_X",E[E.MEWTWONITE_Y=35]="MEWTWONITE_Y",E[E.PIDGEOTITE=36]="PIDGEOTITE",E[E.PINSIRITE=37]="PINSIRITE",E[E.RAYQUAZITE=38]="RAYQUAZITE",E[E.SABLENITE=39]="SABLENITE",E[E.SALAMENCITE=40]="SALAMENCITE",E[E.SCEPTILITE=41]="SCEPTILITE",E[E.SCIZORITE=42]="SCIZORITE",E[E.SHARPEDONITE=43]="SHARPEDONITE",E[E.SLOWBRONITE=44]="SLOWBRONITE",E[E.STEELIXITE=45]="STEELIXITE",E[E.SWAMPERTITE=46]="SWAMPERTITE",E[E.TYRANITARITE=47]="TYRANITARITE",E[E.VENUSAURITE=48]="VENUSAURITE",E[E.BLUE_ORB=50]="BLUE_ORB",E[E.RED_ORB=51]="RED_ORB",E[E.ADAMANT_CRYSTAL=52]="ADAMANT_CRYSTAL",E[E.LUSTROUS_GLOBE=53]="LUSTROUS_GLOBE",E[E.GRISEOUS_CORE=54]="GRISEOUS_CORE",E[E.REVEAL_GLASS=55]="REVEAL_GLASS",E[E.MAX_MUSHROOMS=56]="MAX_MUSHROOMS",E[E.DARK_STONE=57]="DARK_STONE",E[E.LIGHT_STONE=58]="LIGHT_STONE",E[E.PRISON_BOTTLE=59]="PRISON_BOTTLE",E[E.RUSTED_SWORD=60]="RUSTED_SWORD",E[E.RUSTED_SHIELD=61]="RUSTED_SHIELD",E[E.ICY_REINS_OF_UNITY=62]="ICY_REINS_OF_UNITY",E[E.SHADOW_REINS_OF_UNITY=63]="SHADOW_REINS_OF_UNITY",E[E.ULTRANECROZIUM_Z=64]="ULTRANECROZIUM_Z",E[E.SHARP_METEORITE=100]="SHARP_METEORITE",E[E.HARD_METEORITE=101]="HARD_METEORITE",E[E.SMOOTH_METEORITE=102]="SMOOTH_METEORITE",E[E.GRACIDEA=103]="GRACIDEA",E[E.SHOCK_DRIVE=104]="SHOCK_DRIVE",E[E.BURN_DRIVE=105]="BURN_DRIVE",E[E.CHILL_DRIVE=106]="CHILL_DRIVE",E[E.DOUSE_DRIVE=107]="DOUSE_DRIVE",E[E.N_SOLARIZER=108]="N_SOLARIZER",E[E.N_LUNARIZER=109]="N_LUNARIZER",E[E.WELLSPRING_MASK=110]="WELLSPRING_MASK",E[E.HEARTHFLAME_MASK=111]="HEARTHFLAME_MASK",E[E.CORNERSTONE_MASK=112]="CORNERSTONE_MASK",E[E.FIST_PLATE=113]="FIST_PLATE",E[E.SKY_PLATE=114]="SKY_PLATE",E[E.TOXIC_PLATE=115]="TOXIC_PLATE",E[E.EARTH_PLATE=116]="EARTH_PLATE",E[E.STONE_PLATE=117]="STONE_PLATE",E[E.INSECT_PLATE=118]="INSECT_PLATE",E[E.SPOOKY_PLATE=119]="SPOOKY_PLATE",E[E.IRON_PLATE=120]="IRON_PLATE",E[E.FLAME_PLATE=121]="FLAME_PLATE",E[E.SPLASH_PLATE=122]="SPLASH_PLATE",E[E.MEADOW_PLATE=123]="MEADOW_PLATE",E[E.ZAP_PLATE=124]="ZAP_PLATE",E[E.MIND_PLATE=125]="MIND_PLATE",E[E.ICICLE_PLATE=126]="ICICLE_PLATE",E[E.DRACO_PLATE=127]="DRACO_PLATE",E[E.DREAD_PLATE=128]="DREAD_PLATE",E[E.PIXIE_PLATE=129]="PIXIE_PLATE",E[E.BLANK_PLATE=130]="BLANK_PLATE",E[E.LEGEND_PLATE=131]="LEGEND_PLATE",E[E.FIGHTING_MEMORY=132]="FIGHTING_MEMORY",E[E.FLYING_MEMORY=133]="FLYING_MEMORY",E[E.POISON_MEMORY=134]="POISON_MEMORY",E[E.GROUND_MEMORY=135]="GROUND_MEMORY",E[E.ROCK_MEMORY=136]="ROCK_MEMORY",E[E.BUG_MEMORY=137]="BUG_MEMORY",E[E.GHOST_MEMORY=138]="GHOST_MEMORY",E[E.STEEL_MEMORY=139]="STEEL_MEMORY",E[E.FIRE_MEMORY=140]="FIRE_MEMORY",E[E.WATER_MEMORY=141]="WATER_MEMORY",E[E.GRASS_MEMORY=142]="GRASS_MEMORY",E[E.ELECTRIC_MEMORY=143]="ELECTRIC_MEMORY",E[E.PSYCHIC_MEMORY=144]="PSYCHIC_MEMORY",E[E.ICE_MEMORY=145]="ICE_MEMORY",E[E.DRAGON_MEMORY=146]="DRAGON_MEMORY",E[E.DARK_MEMORY=147]="DARK_MEMORY",E[E.FAIRY_MEMORY=148]="FAIRY_MEMORY",E[E.NORMAL_MEMORY=149]="NORMAL_MEMORY",E))(lR||{});const Hf=class Hf{constructor(A,s,R,a,i=!1,...r){this.speciesId=A,this.preFormKey=s,this.formKey=R,this.trigger=a,this.quiet=i,this.conditions=r}canChange(A){if(A.species.speciesId!==this.speciesId||!A.species.forms.length)return!1;const s=A.species.forms.map(R=>R.formKey);if(s[A.formIndex]!==this.preFormKey||s[A.formIndex]===this.formKey)return!1;for(const R of this.conditions)if(!R.predicate(A))return!1;return!!this.trigger.canChange(A)}findTrigger(A){if(!this.trigger.hasTriggerType(A))return null;const s=this.trigger;return s instanceof YT?s.triggers.find(R=>R.hasTriggerType(A)):s}};N(Hf,"SpeciesFormChange");let Se=Hf;const df=class df{constructor(A,s){this.predicate=A,this.enforceFunc=s}};N(df,"SpeciesFormChangeCondition");let LR=df;const ff=class ff{constructor(){this.description=""}canChange(A){return!0}hasTriggerType(A){return this instanceof A}};N(ff,"SpeciesFormChangeTrigger");let MR=ff;const Bf=class Bf extends MR{};N(Bf,"SpeciesFormChangeManualTrigger");let yl=Bf;const gf=class gf extends MR{constructor(){super(...arguments),this.description=u.t("pokemonEvolutions:Forms.ability")}};N(gf,"SpeciesFormChangeAbilityTrigger");let Zt=gf;const Kf=class Kf{constructor(...A){this.description="",this.triggers=A,this.description=this.triggers.filter(s=>{var R;return((R=s==null?void 0:s.description)==null?void 0:R.length)>0}).map(s=>s.description).join(", ")}canChange(A){for(const s of this.triggers)if(!s.canChange(A))return!1;return!0}hasTriggerType(A){return!!this.triggers.find(s=>s.hasTriggerType(A))}};N(Kf,"SpeciesFormChangeCompoundTrigger");let YT=Kf;const mf=class mf extends MR{constructor(A,s=!0){super(),this.item=A,this.active=s,this.description=this.active?u.t("pokemonEvolutions:Forms.item",{item:u.t(`modifierType:FormChangeItem.${lR[this.item]}`)}):u.t("pokemonEvolutions:Forms.deactivateItem",{item:u.t(`modifierType:FormChangeItem.${lR[this.item]}`)})}canChange(A){return!!n.findModifier(s=>s instanceof UR&&s.pokemonId===A.id&&s.formChangeItem===this.item&&s.active===this.active)}};N(mf,"SpeciesFormChangeItemTrigger");let he=mf;const Ff=class Ff extends MR{constructor(...A){super(),this.timesOfDay=A,this.description=u.t("pokemonEvolutions:Forms.timeOfDay")}canChange(A){return this.timesOfDay.indexOf(n.arena.getTimeOfDay())>-1}};N(Ff,"SpeciesFormChangeTimeOfDayTrigger");let K_=Ff;const pf=class pf extends MR{constructor(A=!1){super(),this.active=A,this.description=this.active?u.t("pokemonEvolutions:Forms.enter"):u.t("pokemonEvolutions:Forms.leave")}canChange(A){return A.isActive(!0)===this.active}};N(pf,"SpeciesFormChangeActiveTrigger");let Ds=pf;const Wf=class Wf extends MR{constructor(A,s=!1){super(),Array.isArray(A)||(A=[A]),this.statusEffects=A,this.invert=s,this.description=u.t("pokemonEvolutions:Forms.statusEffect")}canChange(A){var s;return this.statusEffects.indexOf(((s=A.status)==null?void 0:s.effect)||ne.NONE)>-1!==this.invert}};N(Wf,"SpeciesFormChangeStatusEffectTrigger");let m_=Wf;const Yf=class Yf extends MR{constructor(A,s=!0){super(),this.move=A,this.known=s;const R=t[this.move].split("_").filter(a=>a).map((a,i)=>i?`${a[0]}${a.slice(1).toLowerCase()}`:a.toLowerCase()).join("");this.description=u.t("pokemonEvolutions:Forms.moveLearned",{move:u.t(`move:${R}.name`)})}canChange(A){return!!A.moveset.filter(s=>(s==null?void 0:s.moveId)===this.move).length===this.known}};N(Yf,"SpeciesFormChangeMoveLearnedTrigger");let qa=Yf;const yf=class yf extends MR{constructor(A,s=!0){super(),this.movePredicate=typeof A=="function"?A:R=>R===A,this.used=s}};N(yf,"SpeciesFormChangeMoveTrigger");let wl=yf;const wf=class wf extends wl{constructor(){super(...arguments),this.description=u.t("pokemonEvolutions:Forms.preMove")}canChange(A){const s=n.currentBattle.turnCommands[A.getBattlerIndex()];return!!(s!=null&&s.move)&&this.movePredicate(s.move.move)===this.used}};N(wf,"SpeciesFormChangePreMoveTrigger");let yT=wf;const vf=class vf extends wl{constructor(){super(...arguments),this.description=u.t("pokemonEvolutions:Forms.postMove")}canChange(A){return A.summonData&&!!A.getLastXMoves(1).filter(s=>this.movePredicate(s.move)).length===this.used}};N(vf,"SpeciesFormChangePostMoveTrigger");let wT=vf;const Vf=class Vf extends wT{canChange(A){return n.gameMode.hasChallenge(it.SINGLE_TYPE)||A.hasAbility(O.SHEER_FORCE)?!1:super.canChange(A)}};N(Vf,"MeloettaFormChangePostMoveTrigger");let vl=Vf;const xf=class xf extends MR{constructor(A){super(),this.formKey=A,this.description=""}canChange(A){return this.formKey===A.species.forms[n.getSpeciesFormIndex(A.species,A.gender,A.getNature(),!0)].formKey}};N(xf,"SpeciesDefaultFormMatchTrigger");let Vl=xf;const bf=class bf extends MR{constructor(A){super(),this.teraType=A,this.description=u.t("pokemonEvolutions:Forms.tera",{teraType:u.t(`pokemonInfo:Type.${I[this.teraType]}`)})}canChange(A){return!!n.findModifier(s=>s instanceof SR&&s.pokemonId===A.id&&s.teraType===this.teraType)}};N(bf,"SpeciesFormChangeTeraTrigger");let dI=bf;const kf=class kf extends MR{constructor(){super(...arguments),this.description=u.t("pokemonEvolutions:Forms.teraLapse")}canChange(A){return!!n.findModifier(s=>s instanceof SR&&s.pokemonId===A.id)}};N(kf,"SpeciesFormChangeLapseTeraTrigger");let fI=kf;const Zf=class Zf extends MR{constructor(A,s){super(),this.ability=A,this.weathers=s,this.description=u.t("pokemonEvolutions:Forms.weather")}canChange(A){var i,r;const s=((i=n.arena.weather)==null?void 0:i.weatherType)??Oe.NONE,R=(r=n.arena.weather)==null?void 0:r.isEffectSuppressed();return!A.summonData.abilitySuppressed&&!R&&A.hasAbility(this.ability)&&this.weathers.includes(s)}};N(Zf,"SpeciesFormChangeWeatherTrigger");let mR=Zf;const Xf=class Xf extends MR{constructor(A,s){super(),this.ability=A,this.weathers=s,this.description=u.t("pokemonEvolutions:Forms.weatherRevert")}canChange(A){var s,R;if(A.hasAbility(this.ability,!1,!0)){const a=((s=n.arena.weather)==null?void 0:s.weatherType)??Oe.NONE,i=(R=n.arena.weather)==null?void 0:R.isEffectSuppressed(),r=A.summonData.abilitySuppressed,L=A.summonData.ability,o=L!==this.ability&&L!==O.NONE;if(this.weathers.includes(a)||i||r||o)return!0}return!1}};N(Xf,"SpeciesFormChangeRevertWeatherFormTrigger");let xn=Xf;function F_(E,A,s){const R=A.formKey.indexOf(Ue.MEGA)>-1,a=A.formKey.indexOf(Ue.GIGANTAMAX)>-1,i=A.formKey.indexOf(Ue.ETERNAMAX)>-1,r=!R&&A.formKey===E.species.forms[0].formKey;return R?u.t("battlePokemonForm:megaChange",{preName:s,pokemonName:E.name}):a?u.t("battlePokemonForm:gigantamaxChange",{preName:s,pokemonName:E.name}):i?u.t("battlePokemonForm:eternamaxChange",{preName:s,pokemonName:E.name}):r?u.t("battlePokemonForm:revertChange",{pokemonName:te(E)}):E.getAbility().id===O.DISGUISE?u.t("battlePokemonForm:disguiseChange"):u.t("battlePokemonForm:formChange",{preName:s})}N(F_,"getSpeciesFormChangeMessage");function mi(E){return new LR(A=>!!n.gameData.dexData[E].caughtAttr)}N(mi,"getSpeciesDependentFormChangeCondition");const JO={[e.VENUSAUR]:[new Se(e.VENUSAUR,"",Ue.MEGA,new he(48)),new Se(e.VENUSAUR,"",Ue.GIGANTAMAX,new he(56))],[e.BLASTOISE]:[new Se(e.BLASTOISE,"",Ue.MEGA,new he(11)),new Se(e.BLASTOISE,"",Ue.GIGANTAMAX,new he(56))],[e.CHARIZARD]:[new Se(e.CHARIZARD,"",Ue.MEGA_X,new he(14)),new Se(e.CHARIZARD,"",Ue.MEGA_Y,new he(15)),new Se(e.CHARIZARD,"",Ue.GIGANTAMAX,new he(56))],[e.BUTTERFREE]:[new Se(e.BUTTERFREE,"",Ue.GIGANTAMAX,new he(56))],[e.BEEDRILL]:[new Se(e.BEEDRILL,"",Ue.MEGA,new he(10))],[e.PIDGEOT]:[new Se(e.PIDGEOT,"",Ue.MEGA,new he(36))],[e.PIKACHU]:[new Se(e.PIKACHU,"",Ue.GIGANTAMAX,new he(56)),new Se(e.PIKACHU,"partner",Ue.GIGANTAMAX,new he(56))],[e.MEOWTH]:[new Se(e.MEOWTH,"",Ue.GIGANTAMAX,new he(56))],[e.ALAKAZAM]:[new Se(e.ALAKAZAM,"",Ue.MEGA,new he(5))],[e.MACHAMP]:[new Se(e.MACHAMP,"",Ue.GIGANTAMAX,new he(56))],[e.SLOWBRO]:[new Se(e.SLOWBRO,"",Ue.MEGA,new he(44))],[e.GENGAR]:[new Se(e.GENGAR,"",Ue.MEGA,new he(20)),new Se(e.GENGAR,"",Ue.GIGANTAMAX,new he(56))],[e.KINGLER]:[new Se(e.KINGLER,"",Ue.GIGANTAMAX,new he(56))],[e.KANGASKHAN]:[new Se(e.KANGASKHAN,"",Ue.MEGA,new he(25))],[e.PINSIR]:[new Se(e.PINSIR,"",Ue.MEGA,new he(37))],[e.GYARADOS]:[new Se(e.GYARADOS,"",Ue.MEGA,new he(22))],[e.LAPRAS]:[new Se(e.LAPRAS,"",Ue.GIGANTAMAX,new he(56))],[e.EEVEE]:[new Se(e.EEVEE,"",Ue.GIGANTAMAX,new he(56)),new Se(e.EEVEE,"partner",Ue.GIGANTAMAX,new he(56))],[e.SNORLAX]:[new Se(e.SNORLAX,"",Ue.GIGANTAMAX,new he(56))],[e.AERODACTYL]:[new Se(e.AERODACTYL,"",Ue.MEGA,new he(3))],[e.MEWTWO]:[new Se(e.MEWTWO,"",Ue.MEGA_X,new he(34)),new Se(e.MEWTWO,"",Ue.MEGA_Y,new he(35))],[e.AMPHAROS]:[new Se(e.AMPHAROS,"",Ue.MEGA,new he(7))],[e.STEELIX]:[new Se(e.STEELIX,"",Ue.MEGA,new he(45))],[e.SCIZOR]:[new Se(e.SCIZOR,"",Ue.MEGA,new he(42))],[e.HERACROSS]:[new Se(e.HERACROSS,"",Ue.MEGA,new he(23))],[e.HOUNDOOM]:[new Se(e.HOUNDOOM,"",Ue.MEGA,new he(24))],[e.TYRANITAR]:[new Se(e.TYRANITAR,"",Ue.MEGA,new he(47))],[e.SCEPTILE]:[new Se(e.SCEPTILE,"",Ue.MEGA,new he(41))],[e.BLAZIKEN]:[new Se(e.BLAZIKEN,"",Ue.MEGA,new he(12))],[e.SWAMPERT]:[new Se(e.SWAMPERT,"",Ue.MEGA,new he(46))],[e.GARDEVOIR]:[new Se(e.GARDEVOIR,"",Ue.MEGA,new he(19))],[e.SABLEYE]:[new Se(e.SABLEYE,"",Ue.MEGA,new he(39))],[e.MAWILE]:[new Se(e.MAWILE,"",Ue.MEGA,new he(31))],[e.AGGRON]:[new Se(e.AGGRON,"",Ue.MEGA,new he(4))],[e.MEDICHAM]:[new Se(e.MEDICHAM,"",Ue.MEGA,new he(32))],[e.MANECTRIC]:[new Se(e.MANECTRIC,"",Ue.MEGA,new he(30))],[e.SHARPEDO]:[new Se(e.SHARPEDO,"",Ue.MEGA,new he(43))],[e.CAMERUPT]:[new Se(e.CAMERUPT,"",Ue.MEGA,new he(13))],[e.ALTARIA]:[new Se(e.ALTARIA,"",Ue.MEGA,new he(6))],[e.CASTFORM]:[new Se(e.CASTFORM,"","sunny",new mR(O.FORECAST,[Oe.SUNNY,Oe.HARSH_SUN]),!0),new Se(e.CASTFORM,"rainy","sunny",new mR(O.FORECAST,[Oe.SUNNY,Oe.HARSH_SUN]),!0),new Se(e.CASTFORM,"snowy","sunny",new mR(O.FORECAST,[Oe.SUNNY,Oe.HARSH_SUN]),!0),new Se(e.CASTFORM,"","rainy",new mR(O.FORECAST,[Oe.RAIN,Oe.HEAVY_RAIN]),!0),new Se(e.CASTFORM,"sunny","rainy",new mR(O.FORECAST,[Oe.RAIN,Oe.HEAVY_RAIN]),!0),new Se(e.CASTFORM,"snowy","rainy",new mR(O.FORECAST,[Oe.RAIN,Oe.HEAVY_RAIN]),!0),new Se(e.CASTFORM,"","snowy",new mR(O.FORECAST,[Oe.HAIL,Oe.SNOW]),!0),new Se(e.CASTFORM,"sunny","snowy",new mR(O.FORECAST,[Oe.HAIL,Oe.SNOW]),!0),new Se(e.CASTFORM,"rainy","snowy",new mR(O.FORECAST,[Oe.HAIL,Oe.SNOW]),!0),new Se(e.CASTFORM,"sunny","",new xn(O.FORECAST,[Oe.NONE,Oe.SANDSTORM,Oe.STRONG_WINDS,Oe.FOG]),!0),new Se(e.CASTFORM,"rainy","",new xn(O.FORECAST,[Oe.NONE,Oe.SANDSTORM,Oe.STRONG_WINDS,Oe.FOG]),!0),new Se(e.CASTFORM,"snowy","",new xn(O.FORECAST,[Oe.NONE,Oe.SANDSTORM,Oe.STRONG_WINDS,Oe.FOG]),!0),new Se(e.CASTFORM,"sunny","",new Ds,!0),new Se(e.CASTFORM,"rainy","",new Ds,!0),new Se(e.CASTFORM,"snowy","",new Ds,!0)],[e.BANETTE]:[new Se(e.BANETTE,"",Ue.MEGA,new he(9))],[e.ABSOL]:[new Se(e.ABSOL,"",Ue.MEGA,new he(2))],[e.GLALIE]:[new Se(e.GLALIE,"",Ue.MEGA,new he(21))],[e.SALAMENCE]:[new Se(e.SALAMENCE,"",Ue.MEGA,new he(40))],[e.METAGROSS]:[new Se(e.METAGROSS,"",Ue.MEGA,new he(33))],[e.LATIAS]:[new Se(e.LATIAS,"",Ue.MEGA,new he(26))],[e.LATIOS]:[new Se(e.LATIOS,"",Ue.MEGA,new he(27))],[e.KYOGRE]:[new Se(e.KYOGRE,"",Ue.PRIMAL,new he(50))],[e.GROUDON]:[new Se(e.GROUDON,"",Ue.PRIMAL,new he(51))],[e.RAYQUAZA]:[new Se(e.RAYQUAZA,"",Ue.MEGA,new he(38))],[e.DEOXYS]:[new Se(e.DEOXYS,"normal","attack",new he(100)),new Se(e.DEOXYS,"normal","defense",new he(101)),new Se(e.DEOXYS,"normal","speed",new he(102))],[e.CHERRIM]:[new Se(e.CHERRIM,"overcast","sunshine",new mR(O.FLOWER_GIFT,[Oe.SUNNY,Oe.HARSH_SUN]),!0),new Se(e.CHERRIM,"sunshine","overcast",new xn(O.FLOWER_GIFT,[Oe.NONE,Oe.SANDSTORM,Oe.STRONG_WINDS,Oe.FOG,Oe.HAIL,Oe.HEAVY_RAIN,Oe.SNOW,Oe.RAIN]),!0),new Se(e.CHERRIM,"sunshine","overcast",new Ds,!0)],[e.LOPUNNY]:[new Se(e.LOPUNNY,"",Ue.MEGA,new he(28))],[e.GARCHOMP]:[new Se(e.GARCHOMP,"",Ue.MEGA,new he(18))],[e.LUCARIO]:[new Se(e.LUCARIO,"",Ue.MEGA,new he(29))],[e.ABOMASNOW]:[new Se(e.ABOMASNOW,"",Ue.MEGA,new he(1))],[e.GALLADE]:[new Se(e.GALLADE,"",Ue.MEGA,new he(17))],[e.AUDINO]:[new Se(e.AUDINO,"",Ue.MEGA,new he(8))],[e.DIALGA]:[new Se(e.DIALGA,"",Ue.ORIGIN,new he(52))],[e.PALKIA]:[new Se(e.PALKIA,"",Ue.ORIGIN,new he(53))],[e.GIRATINA]:[new Se(e.GIRATINA,"altered",Ue.ORIGIN,new he(54))],[e.SHAYMIN]:[new Se(e.SHAYMIN,"land","sky",new he(103))],[e.ARCEUS]:[new Se(e.ARCEUS,"normal","fighting",new he(113)),new Se(e.ARCEUS,"normal","flying",new he(114)),new Se(e.ARCEUS,"normal","poison",new he(115)),new Se(e.ARCEUS,"normal","ground",new he(116)),new Se(e.ARCEUS,"normal","rock",new he(117)),new Se(e.ARCEUS,"normal","bug",new he(118)),new Se(e.ARCEUS,"normal","ghost",new he(119)),new Se(e.ARCEUS,"normal","steel",new he(120)),new Se(e.ARCEUS,"normal","fire",new he(121)),new Se(e.ARCEUS,"normal","water",new he(122)),new Se(e.ARCEUS,"normal","grass",new he(123)),new Se(e.ARCEUS,"normal","electric",new he(124)),new Se(e.ARCEUS,"normal","psychic",new he(125)),new Se(e.ARCEUS,"normal","ice",new he(126)),new Se(e.ARCEUS,"normal","dragon",new he(127)),new Se(e.ARCEUS,"normal","dark",new he(128)),new Se(e.ARCEUS,"normal","fairy",new he(129))],[e.DARMANITAN]:[new Se(e.DARMANITAN,"","zen",new Zt,!0),new Se(e.DARMANITAN,"zen","",new Zt,!0)],[e.GARBODOR]:[new Se(e.GARBODOR,"",Ue.GIGANTAMAX,new he(56))],[e.TORNADUS]:[new Se(e.TORNADUS,Ue.INCARNATE,Ue.THERIAN,new he(55))],[e.THUNDURUS]:[new Se(e.THUNDURUS,Ue.INCARNATE,Ue.THERIAN,new he(55))],[e.LANDORUS]:[new Se(e.LANDORUS,Ue.INCARNATE,Ue.THERIAN,new he(55))],[e.KYUREM]:[new Se(e.KYUREM,"","black",new he(57),!1,mi(e.ZEKROM)),new Se(e.KYUREM,"","white",new he(58),!1,mi(e.RESHIRAM))],[e.KELDEO]:[new Se(e.KELDEO,"ordinary","resolute",new qa(t.SECRET_SWORD),!1,new LR(()=>n.gameMode.isDaily!==!0)),new Se(e.KELDEO,"resolute","ordinary",new qa(t.SECRET_SWORD,!1),!1,new LR(()=>n.gameMode.isDaily!==!0))],[e.MELOETTA]:[new Se(e.MELOETTA,"aria","pirouette",new vl(t.RELIC_SONG),!0),new Se(e.MELOETTA,"pirouette","aria",new vl(t.RELIC_SONG),!0)],[e.GENESECT]:[new Se(e.GENESECT,"","shock",new he(104)),new Se(e.GENESECT,"","burn",new he(105)),new Se(e.GENESECT,"","chill",new he(106)),new Se(e.GENESECT,"","douse",new he(107))],[e.GRENINJA]:[new Se(e.GRENINJA,"battle-bond","ash",new Zt,!0),new Se(e.GRENINJA,"ash","battle-bond",new Zt,!0)],[e.PALAFIN]:[new Se(e.PALAFIN,"zero","hero",new Zt,!0),new Se(e.PALAFIN,"hero","zero",new Zt,!0)],[e.AEGISLASH]:[new Se(e.AEGISLASH,"blade","shield",new yT(t.KINGS_SHIELD),!0,new LR(E=>E.hasAbility(O.STANCE_CHANGE))),new Se(e.AEGISLASH,"shield","blade",new yT(E=>we[E].category!==Pt.STATUS),!0,new LR(E=>E.hasAbility(O.STANCE_CHANGE))),new Se(e.AEGISLASH,"blade","shield",new Ds(!1),!0)],[e.XERNEAS]:[new Se(e.XERNEAS,"neutral","active",new Ds(!0),!0),new Se(e.XERNEAS,"active","neutral",new Ds(!1),!0)],[e.ZYGARDE]:[new Se(e.ZYGARDE,"50-pc","complete",new Zt,!0),new Se(e.ZYGARDE,"complete","50-pc",new Zt,!0),new Se(e.ZYGARDE,"10-pc","10-complete",new Zt,!0),new Se(e.ZYGARDE,"10-complete","10-pc",new Zt,!0)],[e.DIANCIE]:[new Se(e.DIANCIE,"",Ue.MEGA,new he(16))],[e.HOOPA]:[new Se(e.HOOPA,"","unbound",new he(59))],[e.WISHIWASHI]:[new Se(e.WISHIWASHI,"","school",new Zt,!0),new Se(e.WISHIWASHI,"school","",new Zt,!0)],[e.SILVALLY]:[new Se(e.SILVALLY,"normal","fighting",new he(132)),new Se(e.SILVALLY,"normal","flying",new he(133)),new Se(e.SILVALLY,"normal","poison",new he(134)),new Se(e.SILVALLY,"normal","ground",new he(135)),new Se(e.SILVALLY,"normal","rock",new he(136)),new Se(e.SILVALLY,"normal","bug",new he(137)),new Se(e.SILVALLY,"normal","ghost",new he(138)),new Se(e.SILVALLY,"normal","steel",new he(139)),new Se(e.SILVALLY,"normal","fire",new he(140)),new Se(e.SILVALLY,"normal","water",new he(141)),new Se(e.SILVALLY,"normal","grass",new he(142)),new Se(e.SILVALLY,"normal","electric",new he(143)),new Se(e.SILVALLY,"normal","psychic",new he(144)),new Se(e.SILVALLY,"normal","ice",new he(145)),new Se(e.SILVALLY,"normal","dragon",new he(146)),new Se(e.SILVALLY,"normal","dark",new he(147)),new Se(e.SILVALLY,"normal","fairy",new he(148))],[e.MINIOR]:[new Se(e.MINIOR,"red-meteor","red",new Zt,!0),new Se(e.MINIOR,"red","red-meteor",new Zt,!0),new Se(e.MINIOR,"orange-meteor","orange",new Zt,!0),new Se(e.MINIOR,"orange","orange-meteor",new Zt,!0),new Se(e.MINIOR,"yellow-meteor","yellow",new Zt,!0),new Se(e.MINIOR,"yellow","yellow-meteor",new Zt,!0),new Se(e.MINIOR,"green-meteor","green",new Zt,!0),new Se(e.MINIOR,"green","green-meteor",new Zt,!0),new Se(e.MINIOR,"blue-meteor","blue",new Zt,!0),new Se(e.MINIOR,"blue","blue-meteor",new Zt,!0),new Se(e.MINIOR,"indigo-meteor","indigo",new Zt,!0),new Se(e.MINIOR,"indigo","indigo-meteor",new Zt,!0),new Se(e.MINIOR,"violet-meteor","violet",new Zt,!0),new Se(e.MINIOR,"violet","violet-meteor",new Zt,!0)],[e.MIMIKYU]:[new Se(e.MIMIKYU,"disguised","busted",new Zt,!0),new Se(e.MIMIKYU,"busted","disguised",new Zt,!0)],[e.NECROZMA]:[new Se(e.NECROZMA,"","dawn-wings",new he(109),!1,mi(e.LUNALA)),new Se(e.NECROZMA,"","dusk-mane",new he(108),!1,mi(e.SOLGALEO)),new Se(e.NECROZMA,"dawn-wings","ultra",new he(64)),new Se(e.NECROZMA,"dusk-mane","ultra",new he(64))],[e.MELMETAL]:[new Se(e.MELMETAL,"",Ue.GIGANTAMAX,new he(56))],[e.RILLABOOM]:[new Se(e.RILLABOOM,"",Ue.GIGANTAMAX,new he(56))],[e.CINDERACE]:[new Se(e.CINDERACE,"",Ue.GIGANTAMAX,new he(56))],[e.INTELEON]:[new Se(e.INTELEON,"",Ue.GIGANTAMAX,new he(56))],[e.CORVIKNIGHT]:[new Se(e.CORVIKNIGHT,"",Ue.GIGANTAMAX,new he(56))],[e.ORBEETLE]:[new Se(e.ORBEETLE,"",Ue.GIGANTAMAX,new he(56))],[e.DREDNAW]:[new Se(e.DREDNAW,"",Ue.GIGANTAMAX,new he(56))],[e.COALOSSAL]:[new Se(e.COALOSSAL,"",Ue.GIGANTAMAX,new he(56))],[e.FLAPPLE]:[new Se(e.FLAPPLE,"",Ue.GIGANTAMAX,new he(56))],[e.APPLETUN]:[new Se(e.APPLETUN,"",Ue.GIGANTAMAX,new he(56))],[e.SANDACONDA]:[new Se(e.SANDACONDA,"",Ue.GIGANTAMAX,new he(56))],[e.CRAMORANT]:[new Se(e.CRAMORANT,"","gulping",new Zt,!0,new LR(E=>E.getHpRatio()>=.5)),new Se(e.CRAMORANT,"","gorging",new Zt,!0,new LR(E=>E.getHpRatio()<.5)),new Se(e.CRAMORANT,"gulping","",new Zt,!0),new Se(e.CRAMORANT,"gorging","",new Zt,!0),new Se(e.CRAMORANT,"gulping","",new Ds(!1),!0),new Se(e.CRAMORANT,"gorging","",new Ds(!1),!0)],[e.TOXTRICITY]:[new Se(e.TOXTRICITY,"amped",Ue.GIGANTAMAX,new he(56)),new Se(e.TOXTRICITY,"lowkey",Ue.GIGANTAMAX,new he(56)),new Se(e.TOXTRICITY,Ue.GIGANTAMAX,"amped",new YT(new he(56,!1),new Vl("amped"))),new Se(e.TOXTRICITY,Ue.GIGANTAMAX,"lowkey",new YT(new he(56,!1),new Vl("lowkey")))],[e.CENTISKORCH]:[new Se(e.CENTISKORCH,"",Ue.GIGANTAMAX,new he(56))],[e.HATTERENE]:[new Se(e.HATTERENE,"",Ue.GIGANTAMAX,new he(56))],[e.GRIMMSNARL]:[new Se(e.GRIMMSNARL,"",Ue.GIGANTAMAX,new he(56))],[e.ALCREMIE]:[new Se(e.ALCREMIE,"vanilla-cream",Ue.GIGANTAMAX,new he(56)),new Se(e.ALCREMIE,"ruby-cream",Ue.GIGANTAMAX,new he(56)),new Se(e.ALCREMIE,"matcha-cream",Ue.GIGANTAMAX,new he(56)),new Se(e.ALCREMIE,"mint-cream",Ue.GIGANTAMAX,new he(56)),new Se(e.ALCREMIE,"lemon-cream",Ue.GIGANTAMAX,new he(56)),new Se(e.ALCREMIE,"salted-cream",Ue.GIGANTAMAX,new he(56)),new Se(e.ALCREMIE,"ruby-swirl",Ue.GIGANTAMAX,new he(56)),new Se(e.ALCREMIE,"caramel-swirl",Ue.GIGANTAMAX,new he(56)),new Se(e.ALCREMIE,"rainbow-swirl",Ue.GIGANTAMAX,new he(56))],[e.EISCUE]:[new Se(e.EISCUE,"","no-ice",new Zt,!0),new Se(e.EISCUE,"no-ice","",new Zt,!0)],[e.MORPEKO]:[new Se(e.MORPEKO,"full-belly","hangry",new Zt,!0),new Se(e.MORPEKO,"hangry","full-belly",new Zt,!0)],[e.COPPERAJAH]:[new Se(e.COPPERAJAH,"",Ue.GIGANTAMAX,new he(56))],[e.DURALUDON]:[new Se(e.DURALUDON,"",Ue.GIGANTAMAX,new he(56))],[e.ZACIAN]:[new Se(e.ZACIAN,"hero-of-many-battles","crowned",new he(60))],[e.ZAMAZENTA]:[new Se(e.ZAMAZENTA,"hero-of-many-battles","crowned",new he(61))],[e.ETERNATUS]:[new Se(e.ETERNATUS,"",Ue.ETERNAMAX,new yl),new Se(e.ETERNATUS,"",Ue.ETERNAMAX,new he(56))],[e.URSHIFU]:[new Se(e.URSHIFU,"single-strike",Ue.GIGANTAMAX_SINGLE,new he(56)),new Se(e.URSHIFU,"rapid-strike",Ue.GIGANTAMAX_RAPID,new he(56))],[e.CALYREX]:[new Se(e.CALYREX,"","ice",new he(62),!1,mi(e.GLASTRIER)),new Se(e.CALYREX,"","shadow",new he(63),!1,mi(e.SPECTRIER))],[e.ENAMORUS]:[new Se(e.ENAMORUS,Ue.INCARNATE,Ue.THERIAN,new he(55))],[e.OGERPON]:[new Se(e.OGERPON,"teal-mask","wellspring-mask",new he(110)),new Se(e.OGERPON,"teal-mask","hearthflame-mask",new he(111)),new Se(e.OGERPON,"teal-mask","cornerstone-mask",new he(112)),new Se(e.OGERPON,"teal-mask","teal-mask-tera",new dI(I.GRASS)),new Se(e.OGERPON,"teal-mask-tera","teal-mask",new fI,!0,new LR(E=>E.getTeraType()!==I.GRASS)),new Se(e.OGERPON,"wellspring-mask","wellspring-mask-tera",new dI(I.WATER)),new Se(e.OGERPON,"wellspring-mask-tera","wellspring-mask",new fI,!0,new LR(E=>E.getTeraType()!==I.WATER)),new Se(e.OGERPON,"hearthflame-mask","hearthflame-mask-tera",new dI(I.FIRE)),new Se(e.OGERPON,"hearthflame-mask-tera","hearthflame-mask",new fI,!0,new LR(E=>E.getTeraType()!==I.FIRE)),new Se(e.OGERPON,"cornerstone-mask","cornerstone-mask-tera",new dI(I.ROCK)),new Se(e.OGERPON,"cornerstone-mask-tera","cornerstone-mask",new fI,!0,new LR(E=>E.getTeraType()!==I.ROCK))],[e.TERAPAGOS]:[new Se(e.TERAPAGOS,"","terastal",new Zt,!0),new Se(e.TERAPAGOS,"terastal","stellar",new dI(I.STELLAR)),new Se(e.TERAPAGOS,"stellar","terastal",new fI,!0,new LR(E=>E.getTeraType()!==I.STELLAR))],[e.GALAR_DARMANITAN]:[new Se(e.GALAR_DARMANITAN,"","zen",new Zt,!0),new Se(e.GALAR_DARMANITAN,"zen","",new Zt,!0)]};function rk(){Object.keys(JO).forEach(A=>{const s=JO[A],R=[];for(const a of s){const i=a.findTrigger(he);i&&!s.find(r=>a.formKey===r.preFormKey&&a.preFormKey===r.formKey)&&R.push(new Se(a.speciesId,a.formKey,a.preFormKey,new he(i.item,!1)))}s.push(...R)})}N(rk,"initPokemonForms");const Lk={},Qf=class Qf{constructor(){this.SEED_OVERRIDE="",this.WEATHER_OVERRIDE=Oe.NONE,this.BATTLE_TYPE_OVERRIDE=null,this.STARTING_WAVE_OVERRIDE=0,this.STARTING_BIOME_OVERRIDE=T.TOWN,this.ARENA_TINT_OVERRIDE=null,this.XP_MULTIPLIER_OVERRIDE=null,this.LEVEL_CAP_OVERRIDE=0,this.NEVER_CRIT_OVERRIDE=!1,this.STARTING_MONEY_OVERRIDE=0,this.WAIVE_SHOP_FEES_OVERRIDE=!1,this.WAIVE_ROLL_FEE_OVERRIDE=!1,this.FREE_CANDY_UPGRADE_OVERRIDE=!1,this.POKEBALL_OVERRIDE={active:!1,pokeballs:{[be.POKEBALL]:5,[be.GREAT_BALL]:0,[be.ULTRA_BALL]:0,[be.ROGUE_BALL]:0,[be.MASTER_BALL]:0}},this.ITEM_UNLOCK_OVERRIDE=[],this.BYPASS_TUTORIAL_SKIP_OVERRIDE=!1,this.ACHIEVEMENTS_REUNLOCK_OVERRIDE=!1,this.STATUS_ACTIVATION_OVERRIDE=null,this.STARTER_FORM_OVERRIDES={},this.STARTING_LEVEL_OVERRIDE=0,this.STARTER_SPECIES_OVERRIDE=0,this.STARTER_FUSION_OVERRIDE=!1,this.STARTER_FUSION_SPECIES_OVERRIDE=0,this.ABILITY_OVERRIDE=O.NONE,this.PASSIVE_ABILITY_OVERRIDE=O.NONE,this.STATUS_OVERRIDE=ne.NONE,this.GENDER_OVERRIDE=null,this.MOVESET_OVERRIDE=[],this.SHINY_OVERRIDE=null,this.VARIANT_OVERRIDE=null,this.OPP_SPECIES_OVERRIDE=0,this.OPP_FUSION_OVERRIDE=!1,this.OPP_FUSION_SPECIES_OVERRIDE=0,this.OPP_LEVEL_OVERRIDE=0,this.OPP_ABILITY_OVERRIDE=O.NONE,this.OPP_PASSIVE_ABILITY_OVERRIDE=O.NONE,this.OPP_STATUS_OVERRIDE=ne.NONE,this.OPP_GENDER_OVERRIDE=null,this.OPP_MOVESET_OVERRIDE=[],this.OPP_SHINY_OVERRIDE=null,this.OPP_VARIANT_OVERRIDE=null,this.OPP_IVS_OVERRIDE=[],this.OPP_FORM_OVERRIDES={},this.OPP_HEALTH_SEGMENTS_OVERRIDE=0,this.EGG_IMMEDIATE_HATCH_OVERRIDE=!1,this.EGG_TIER_OVERRIDE=null,this.EGG_SHINY_OVERRIDE=!1,this.EGG_VARIANT_OVERRIDE=null,this.EGG_FREE_GACHA_PULLS_OVERRIDE=!1,this.EGG_GACHA_PULL_COUNT_OVERRIDE=0,this.UNLIMITED_EGG_COUNT_OVERRIDE=!1,this.MYSTERY_ENCOUNTER_RATE_OVERRIDE=null,this.MYSTERY_ENCOUNTER_TIER_OVERRIDE=null,this.MYSTERY_ENCOUNTER_OVERRIDE=null,this.STARTING_MODIFIER_OVERRIDE=[],this.OPP_MODIFIER_OVERRIDE=[],this.STARTING_HELD_ITEMS_OVERRIDE=[],this.OPP_HELD_ITEMS_OVERRIDE=[],this.ITEM_REWARD_OVERRIDE=[]}};N(Qf,"DefaultOverrides");let p_=Qf;const Nk=new p_,Ye={...Nk,...Lk},Jf=class Jf{constructor(A){ve(A)||Object.assign(this,A),this.spriteScale=this.spriteScale??-1,this.ability=this.ability??-1,this.passive=this.passive??-1,this.nature=this.nature??-1,this.types=this.types??[],this.hitsRecCount=this.hitsRecCount??0}resetHitReceivedCount(){this.hitsRecCount=0}};N(Jf,"CustomPokemonData");let rs=Jf;const $f=class $f{constructor(A,s=!1){var a,i,r;const R=A instanceof eO?A:null;this.id=A.id,this.player=R?R.isPlayer():A.player,this.species=R?R.species.speciesId:A.species,this.nickname=R?R.nickname:A.nickname,this.formIndex=Math.max(Math.min(A.formIndex,ke(this.species).forms.length-1),0),this.abilityIndex=A.abilityIndex,this.passive=A.passive,this.shiny=A.shiny,this.variant=A.variant,this.pokeball=A.pokeball,this.level=A.level,this.exp=A.exp,s||(this.levelExp=A.levelExp),this.gender=A.gender,s||(this.hp=A.hp),this.stats=A.stats,this.ivs=A.ivs,this.nature=A.nature!==void 0?A.nature:0,this.friendship=A.friendship!==void 0?A.friendship:ke(this.species).baseFriendship,this.metLevel=A.metLevel||5,this.metBiome=A.metBiome!==void 0?A.metBiome:-1,this.metSpecies=A.metSpecies,this.metWave=A.metWave??(this.metBiome===-1?-1:0),this.luck=A.luck!==void 0?A.luck:A.shiny?A.variant+1:0,s||(this.pauseEvolutions=!!A.pauseEvolutions,this.evoCounter=A.evoCounter??0),this.pokerus=!!A.pokerus,this.fusionSpecies=R?(a=R.fusionSpecies)==null?void 0:a.speciesId:A.fusionSpecies,this.fusionFormIndex=A.fusionFormIndex,this.fusionAbilityIndex=A.fusionAbilityIndex,this.fusionShiny=A.fusionShiny,this.fusionVariant=A.fusionVariant,this.fusionGender=A.fusionGender,this.fusionLuck=A.fusionLuck!==void 0?A.fusionLuck:A.fusionShiny?A.fusionVariant+1:0,this.fusionCustomPokemonData=new rs(A.fusionCustomPokemonData),this.usedTMs=A.usedTMs??[],this.customPokemonData=new rs(A.customPokemonData),this.natureOverride=A.natureOverride,this.mysteryEncounterPokemonData=A.mysteryEncounterPokemonData?new rs(A.mysteryEncounterPokemonData):null,this.fusionMysteryEncounterPokemonData=A.fusionMysteryEncounterPokemonData?new rs(A.fusionMysteryEncounterPokemonData):null,s||(this.boss=A instanceof xs&&!!A.bossSegments||!this.player&&!!A.boss,this.bossSegments=A.bossSegments),R?(this.moveset=R.moveset,s||(this.status=R.status,this.player&&(this.summonData=R.summonData))):(this.moveset=(A.moveset||[new nt(t.TACKLE),new nt(t.GROWL)]).filter(L=>L).map(L=>new nt(L.moveId,L.ppUsed,L.ppUp,L.virtual,L.maxPpOverride)),s||(this.status=A.status?new za(A.status.effect,A.status.toxicTurnCount,A.status.sleepTurnsRemaining):null),this.summonData=new so,!s&&A.summonData&&(this.summonData.stats=A.summonData.stats,this.summonData.statStages=A.summonData.statStages,this.summonData.moveQueue=A.summonData.moveQueue,this.summonData.abilitySuppressed=A.summonData.abilitySuppressed,this.summonData.abilitiesApplied=A.summonData.abilitiesApplied,this.summonData.ability=A.summonData.ability,this.summonData.moveset=(i=A.summonData.moveset)==null?void 0:i.map(L=>nt.loadMove(L)),this.summonData.types=A.summonData.types,A.summonData.tags?this.summonData.tags=(r=A.summonData.tags)==null?void 0:r.map(L=>wJ(L)):this.summonData.tags=[]))}toPokemon(A,s=0,R=!1){const a=ke(this.species),i=this.player?n.addPlayerPokemon(a,this.level,this.abilityIndex,this.formIndex,this.gender,this.shiny,this.variant,this.ivs,this.nature,this,r=>{this.nickname&&(r.nickname=this.nickname)}):n.addEnemyPokemon(a,this.level,A===Ut.TRAINER?!R||!(s%2)?lt.TRAINER:lt.TRAINER_PARTNER:lt.NONE,this.boss,!1,this);return this.summonData&&i.primeSummonData(this.summonData),i}};N($f,"PokemonData");let hs=$f;const Tk=[],ja={[t.MEGA_PUNCH]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIKACHU,e.RAICHU,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.GENGAR,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.LEDYBA,e.LEDIAN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.QUAGSIRE,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GRUMPIG,e.SPINDA,e.FLYGON,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.KECLEON,e.DUSCLOPS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.JIRACHI,e.BUNEARY,e.LOPUNNY,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.GALLADE,e.DUSKNOIR,e.REGIGIGAS,e.VICTINI,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ZOROARK,e.REUNICLUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.HELIOLISK,e.HAWLUCHA,e.GOODRA,e.INCINEROAR,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.TURTONATOR,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.BUZZWOLE,e.GUZZLORD,e.MARSHADOW,e.ZERAORA,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.COALOSSAL,e.TOXTRICITY,e.CLOBBOPUS,e.GRAPPLOCT,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.MR_RIME,e.DRACOZOLT,e.ARCTOZOLT,e.KUBFU,e.URSHIFU,e.ZARUDE,[e.DEOXYS,"attack","defense","speed"],e.ALOLA_RAICHU,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN],[t.PAY_DAY]:[e.PIKACHU,e.RAICHU,e.NIDOQUEEN,e.NIDOKING,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.RHYDON,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.MEWTWO,e.MEW,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.ESPEON,e.UMBREON,e.SLOWKING,e.SKITTY,e.DELCATTY,e.MUNCHLAX,e.RHYPERIOR,e.LEAFEON,e.GLACEON,e.PURRLOIN,e.LIEPARD,e.ESPURR,e.MEOWSTIC,e.SYLVEON,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.ZERAORA,e.PERRSERKER,e.INDEEDEE,e.CALYREX,e.ANNIHILAPE,e.ALOLA_RAICHU,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING],[t.FIRE_PUNCH]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MANKEY,e.PRIMEAPE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.ELECTABUZZ,e.MAGMAR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.SENTRET,e.FURRET,e.FLAAFFY,e.AMPHAROS,e.SUDOWOODO,e.AIPOM,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.TEDDIURSA,e.URSARING,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.COMBUSKEN,e.BLAZIKEN,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.SABLEYE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.GULPIN,e.SWALOT,e.GRUMPIG,e.SPINDA,e.FLYGON,e.ZANGOOSE,e.KECLEON,e.DUSCLOPS,e.REGIROCK,e.GROUDON,e.JIRACHI,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.MUNCHLAX,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.VICTINI,e.PIGNITE,e.EMBOAR,e.WATCHOG,e.PANSEAR,e.SIMISEAR,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.REUNICLUS,e.EELEKTROSS,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.HEATMOR,e.MELOETTA,e.BRAIXEN,e.DELPHOX,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.HELIOLISK,e.HAWLUCHA,e.GOODRA,e.HOOPA,e.INCINEROAR,e.GUMSHOOS,[e.LYCANROC,"midnight"],e.KOMMO_O,e.MARSHADOW,e.BLACEPHALON,e.ZERAORA,e.CINDERACE,e.COALOSSAL,e.TOXTRICITY,e.GRIMMSNARL,e.OBSTAGOON,e.KUBFU,e.URSHIFU,e.URSALUNA,e.SNEASLER,e.PAWMOT,e.GARGANACL,e.ANNIHILAPE,e.SCREAM_TAIL,e.IRON_HANDS,e.IRON_THORNS,e.IRON_VALIANT,e.OKIDOGI,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_TYPHLOSION,e.HISUI_GOODRA,e.BLOODMOON_URSALUNA],[t.ICE_PUNCH]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.SLOWBRO,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.SMOOCHUM,e.ELEKID,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.GRUMPIG,e.SPINDA,e.ZANGOOSE,e.KECLEON,e.DUSCLOPS,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.JIRACHI,e.DEOXYS,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.WATCHOG,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SCRAGGY,e.SCRAFTY,e.REUNICLUS,e.CUBCHOO,e.BEARTIC,e.GOLETT,e.GOLURK,e.MELOETTA,e.FROGADIER,e.GRENINJA,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.HOOPA,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.STUFFUL,e.BEWEAR,e.KOMMO_O,e.TAPU_FINI,e.BUZZWOLE,e.MARSHADOW,e.MELMETAL,e.CLOBBOPUS,e.GRAPPLOCT,e.GRIMMSNARL,e.OBSTAGOON,e.MR_RIME,e.EISCUE,e.KUBFU,e.URSHIFU,e.URSALUNA,e.PAWMOT,e.GARGANACL,e.PALAFIN,e.CETITAN,e.ANNIHILAPE,e.SCREAM_TAIL,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_THORNS,e.IRON_VALIANT,e.OKIDOGI,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.BLOODMOON_URSALUNA],[t.THUNDER_PUNCH]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.PIKACHU,e.RAICHU,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MANKEY,e.PRIMEAPE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.ELECTABUZZ,e.MAGMAR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.PICHU,e.FLAAFFY,e.AMPHAROS,e.SUDOWOODO,e.AIPOM,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.TEDDIURSA,e.URSARING,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.GRUMPIG,e.SPINDA,e.FLYGON,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.KECLEON,e.DUSCLOPS,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.JIRACHI,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.PACHIRISU,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.VICTINI,e.PIGNITE,e.EMBOAR,e.WATCHOG,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.SCRAGGY,e.SCRAFTY,e.REUNICLUS,e.EELEKTROSS,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.HEATMOR,e.THUNDURUS,e.ZEKROM,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BRAIXEN,e.DELPHOX,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.HELIOLISK,e.HAWLUCHA,e.DEDENNE,e.GOODRA,e.HOOPA,e.INCINEROAR,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.STUFFUL,e.BEWEAR,[e.LYCANROC,"midnight"],e.KOMMO_O,e.TAPU_KOKO,e.BUZZWOLE,e.XURKITREE,e.MARSHADOW,e.ZERAORA,e.MELMETAL,e.TOXTRICITY,e.GRIMMSNARL,e.OBSTAGOON,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.KUBFU,e.URSHIFU,e.URSALUNA,e.FLORAGATO,e.MEOWSCARADA,e.PAWMO,e.PAWMOT,e.GARGANACL,e.ANNIHILAPE,e.SCREAM_TAIL,e.IRON_HANDS,e.IRON_THORNS,e.GHOLDENGO,e.IRON_VALIANT,e.OKIDOGI,e.ALOLA_RAICHU,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_SLOWKING,e.HISUI_TYPHLOSION,e.HISUI_GOODRA,e.BLOODMOON_URSALUNA],[t.SWORDS_DANCE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BEEDRILL,e.RATICATE,e.SANDSHREW,e.SANDSLASH,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.DIGLETT,e.DUGTRIO,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.RAPIDASH,e.FARFETCHD,e.DODUO,e.DODRIO,e.KRABBY,e.KINGLER,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.TANGELA,e.GOLDEEN,e.SEAKING,e.SCYTHER,e.PINSIR,e.KABUTOPS,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.LEDYBA,e.LEDIAN,e.ARIADOS,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.YANMA,e.GLIGAR,e.QWILFISH,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SKARMORY,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SHROOMISH,e.BRELOOM,e.NINJASK,e.MAWILE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.SOLROCK,e.CORPHISH,e.CRAWDAUNT,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.BANETTE,e.TROPIUS,e.ABSOL,e.WALREIN,e.GROUDON,e.RAYQUAZA,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.CHERUBI,e.CHERRIM,e.GIBLE,e.GABITE,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.TOXICROAK,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.YANMEGA,e.LEAFEON,e.GLISCOR,e.GALLADE,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.DRILBUR,e.EXCADRILL,e.LEAVANNY,e.SCOLIPEDE,e.LILLIGANT,e.DWEBBLE,e.CRUSTLE,e.SCRAFTY,e.ZORUA,e.ZOROARK,e.SAWSBUCK,e.KARRABLAST,e.ESCAVALIER,e.FERROTHORN,e.AXEW,e.FRAXURE,e.HAXORUS,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.COBALION,e.TERRAKION,e.VIRIZION,e.LANDORUS,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.HAWLUCHA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.ROCKRUFF,e.LYCANROC,e.FOMANTIS,e.LURANTIS,e.STUFFUL,e.BEWEAR,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.KOMALA,e.MIMIKYU,e.BRUXISH,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.KARTANA,e.NECROZMA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.RABOOT,e.CINDERACE,e.INTELEON,e.GREEDENT,e.DUBWOOL,e.DREDNAW,e.HATTERENE,e.PERRSERKER,e.SIRFETCHD,e.FALINKS,e.DURALUDON,e.ZACIAN,e.KUBFU,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.OVERQWIL,e.QUAQUAVAL,e.LOKIX,e.CERULEDGE,e.SHROODLE,e.GRAFAIAI,e.KLAWF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.FLAMIGO,e.KINGAMBIT,e.IRON_HANDS,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.IRON_LEAVES,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.IRON_BOULDER,e.IRON_CROWN,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_RAPIDASH,e.GALAR_FARFETCHD,[e.CALYREX,"ice"],e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.CUT]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BEEDRILL,e.RATTATA,e.RATICATE,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.FARFETCHD,e.KRABBY,e.KINGLER,e.LICKITUNG,e.RHYDON,e.TANGELA,e.KANGASKHAN,e.SCYTHER,e.PINSIR,e.KABUTOPS,e.DRAGONITE,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.BELLOSSOM,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.ESPEON,e.UMBREON,e.GLIGAR,e.STEELIX,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SKARMORY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.TYRANITAR,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.ZIGZAGOON,e.LINOONE,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.ROSELIA,e.CACNEA,e.CACTURNE,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.KECLEON,e.TROPIUS,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.GROUDON,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.BUDEW,e.ROSERADE,e.RAMPARDOS,e.VESPIQUEN,e.PACHIRISU,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.GIBLE,e.GABITE,e.GARCHOMP,e.SKORUPI,e.DRAPION,e.TOXICROAK,e.CARNIVINE,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.GLISCOR,e.GALLADE,e.DIALGA,e.PALKIA,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.DRILBUR,e.EXCADRILL,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.SCOLIPEDE,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.FERROTHORN,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.COBALION,e.TERRAKION,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.VOLCANION,e.KARTANA,e.OBSTAGOON,e.PERRSERKER,e.URSALUNA,e.BASCULEGION,e.KINGAMBIT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_TYPHLOSION,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY,e.BLOODMOON_URSALUNA],[t.FLY]:[e.CHARIZARD,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.FARFETCHD,e.DODUO,e.DODRIO,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.TOGETIC,e.XATU,e.MURKROW,e.DELIBIRD,e.SKARMORY,e.LUGIA,e.HO_OH,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.TROPIUS,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.STARLY,e.STARAVIA,e.STARAPTOR,e.DRIFLOON,e.DRIFBLIM,e.HONCHKROW,e.CHATOT,e.TOGEKISS,e.GIRATINA,e.ARCEUS,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.ARCHEOPS,e.DUCKLETT,e.SWANNA,e.GOLURK,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.GENESECT,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.VIKAVOLT,e.ORICORIO,e.DRAMPA,e.TAPU_KOKO,e.LUNALA,e.CELESTEELA,e.NAGANADEL,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.FLAPPLE,e.CRAMORANT,e.DRAGAPULT,e.ETERNATUS,e.ENAMORUS,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.BOMBIRDIER,e.FLAMIGO,e.IRON_JUGULIS,e.ROARING_MOON,e.FEZANDIPITI,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_BRAVIARY],[t.MEGA_KICK]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIKACHU,e.RAICHU,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GOLEM,e.SLOWBRO,e.GENGAR,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.KABUTOPS,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.QUAGSIRE,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GRUMPIG,e.SPINDA,e.FLYGON,e.CACTURNE,e.ZANGOOSE,e.KECLEON,e.DUSCLOPS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.JIRACHI,e.BUNEARY,e.LOPUNNY,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.GALLADE,e.DUSKNOIR,e.REGIGIGAS,e.VICTINI,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ZOROARK,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.HELIOLISK,e.HAWLUCHA,e.GOODRA,e.INCINEROAR,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.TSAREENA,e.ORANGURU,e.PASSIMIAN,e.TURTONATOR,e.HAKAMO_O,e.KOMMO_O,e.GUZZLORD,e.MARSHADOW,e.STAKATAKA,e.ZERAORA,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.DUBWOOL,e.COALOSSAL,e.TOXTRICITY,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.MR_RIME,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.KUBFU,e.URSHIFU,e.ZARUDE,e.QUAQUAVAL,e.FLAMIGO,[e.DEOXYS,"attack","defense","speed"],e.ALOLA_RAICHU,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ZAPDOS,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_LILLIGANT],[t.BODY_SLAM]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.VILEPLUME,e.PARAS,e.PARASECT,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.WEEPINBELL,e.VICTREEBEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.CLOYSTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.GOLDEEN,e.SEAKING,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.NOCTOWL,e.SPINARAK,e.ARIADOS,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SHUCKLE,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.DELIBIRD,e.MANTINE,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.LUXRAY,e.ROSERADE,e.SHIELDON,e.BASTIODON,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.DRIFLOON,e.DRIFBLIM,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SNOVER,e.ABOMASNOW,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.ARCEUS,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.SAMUROTT,e.BLITZLE,e.ZEBSTRIKA,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.CONKELDURR,e.THROH,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARMANITAN,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.GARBODOR,e.ZOROARK,e.GOTHITELLE,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.ALOMOMOLA,e.EELEKTRIK,e.EELEKTROSS,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.HEATMOR,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.CLAWITZER,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.BERGMITE,e.AVALUGG,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.BRIONNE,e.PRIMARINA,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.ARAQUANID,e.SALAZZLE,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.PALOSSAND,e.KOMALA,e.TURTONATOR,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.SOLGALEO,e.NIHILEGO,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.CORVIKNIGHT,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CLOBBOPUS,e.GRAPPLOCT,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.FALINKS,e.PINCURCHIN,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.WYRDEER,e.URSALUNA,e.ENAMORUS,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.FIDOUGH,e.DACHSBUN,e.NACLI,e.NACLSTACK,e.GARGANACL,e.MASCHIFF,e.MABOSSTIFF,e.KLAWF,e.ESPATHRA,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.WO_CHIEN,e.TING_LU,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.DIPPLIN,e.OKIDOGI,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARMANITAN,[e.CALYREX,"ice","shadow"],e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SAMUROTT,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.TAKE_DOWN]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.CHINCHOU,e.LANTURN,e.PICHU,e.IGGLYBUFF,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.DELIBIRD,e.MANTINE,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.STANTLER,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.MILOTIC,e.TROPIUS,e.CHIMECHO,e.SNORUNT,e.GLALIE,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.BELDUM,e.METANG,e.METAGROSS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.HAPPINY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.CROAGUNK,e.TOXICROAK,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.RHYPERIOR,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.FROSLASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.GIRATINA,e.ARCEUS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.BLITZLE,e.ROGGENROLA,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.DEERLING,e.SAWSBUCK,e.KARRABLAST,e.ESCAVALIER,e.ALOMOMOLA,e.EELEKTRIK,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.MIENFOO,e.MIENSHAO,e.PAWNIARD,e.BISHARP,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.FURFROU,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.TREVENANT,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MUDBRAY,e.MUDSDALE,e.FOMANTIS,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.ORANGURU,e.PASSIMIAN,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.MIMIKYU,e.BRUXISH,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.MAGEARNA,e.STAKATAKA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXTRICITY,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.FALINKS,e.PINCURCHIN,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.OKIDOGI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER],[t.DOUBLE_EDGE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TYROGUE,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.FLOATZEL,e.AMBIPOM,e.HONCHKROW,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.HIPPOPOTAS,e.HIPPOWDON,e.SNOVER,e.ABOMASNOW,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.PROBOPASS,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.SHAYMIN,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.BLITZLE,e.ZEBSTRIKA,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.CINCCINO,e.DUCKLETT,e.SWANNA,e.DEERLING,e.SAWSBUCK,e.AXEW,e.FRAXURE,e.HAXORUS,e.BEARTIC,e.MIENSHAO,e.GOLETT,e.GOLURK,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.KELDEO,e.CHESNAUGHT,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.SYLVEON,e.CARBINK,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIVERN,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.PASSIMIAN,e.MINIOR,e.KOMALA,e.HAKAMO_O,e.KOMMO_O,e.SOLGALEO,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SKWOVET,e.GREEDENT,e.CORVIKNIGHT,e.DREDNAW,e.ARROKUDA,e.BARRASKEWDA,e.PERRSERKER,e.EISCUE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.KUBFU,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,[e.CALYREX,"ice","shadow"],e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.OVERQWIL,e.LECHONK,e.OINKOLOGNE,e.LOKIX,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SQUAWKABILLY,e.NACLSTACK,e.GARGANACL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.ESPATHRA,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.SLITHER_WING,e.IRON_TREADS,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_THORNS,e.BAXCALIBUR,e.TING_LU,e.ROARING_MOON,e.KORAIDON,e.WALKING_WAKE,e.OKIDOGI,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_EXEGGUTOR,e.GALAR_MEOWTH,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_ZAPDOS,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_BRAVIARY,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.PIN_MISSILE]:[e.BEEDRILL,e.SANDSLASH,e.CLOYSTER,e.JOLTEON,e.OMASTAR,e.MEW,e.SPINARAK,e.ARIADOS,e.PINECO,e.FORRETRESS,e.QWILFISH,e.HERACROSS,e.ZIGZAGOON,e.LINOONE,e.ROSELIA,e.CACNEA,e.CACTURNE,e.BUDEW,e.ROSERADE,e.VESPIQUEN,e.SKORUPI,e.DRAPION,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.MARACTUS,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.MAREANIE,e.TOXAPEX,e.GOLISOPOD,e.TOGEDEMARU,e.POIPOLE,e.NAGANADEL,e.OBSTAGOON,e.CURSOLA,e.PINCURCHIN,e.OVERQWIL,e.IRON_THORNS,e.ALOLA_SANDSLASH,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_QWILFISH],[t.ROAR]:[e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BLASTOISE,e.RATICATE,e.NIDOQUEEN,e.NIDOKING,e.VULPIX,e.NINETALES,e.PERSIAN,e.GROWLITHE,e.ARCANINE,e.GOLEM,e.ONIX,e.RHYHORN,e.RHYDON,e.KANGASKHAN,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.CROCONAW,e.FERALIGATR,e.FLAAFFY,e.AMPHAROS,e.ESPEON,e.UMBREON,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.STANTLER,e.RAIKOU,e.ENTEI,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.HO_OH,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.LINOONE,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.ARON,e.LAIRON,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.ALTARIA,e.ZANGOOSE,e.TROPIUS,e.SEALEO,e.WALREIN,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.TURTWIG,e.GROTLE,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BUIZEL,e.FLOATZEL,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.GIBLE,e.GABITE,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.RHYPERIOR,e.LEAFEON,e.GLACEON,e.MAMOSWINE,e.DIALGA,e.PALKIA,e.HEATRAN,e.GIRATINA,e.ARCEUS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.BEARTIC,e.DRUDDIGON,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.AVALUGG,e.XERNEAS,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.GUMSHOOS,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.TYPE_NULL,e.SILVALLY,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_BULU,e.SOLGALEO,e.LUNALA,e.YAMPER,e.BOLTUND,e.ZAMAZENTA,e.ZARUDE,e.GLASTRIER,e.WYRDEER,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.GREAVARD,e.HOUNDSTONE,e.FARIGIRAF,e.GREAT_TUSK,e.SCREAM_TAIL,e.IRON_JUGULIS,e.ROARING_MOON,e.KORAIDON,e.WALKING_WAKE,e.OKIDOGI,e.ARCHALUDON,e.GOUGING_FIRE,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_RATICATE,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_PERSIAN,e.ALOLA_GOLEM,[e.URSHIFU,"single-strike"],e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.BLOODMOON_URSALUNA],[t.FLAMETHROWER]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GROWLITHE,e.ARCANINE,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MAGMAR,e.TAUROS,e.GYARADOS,e.FLAREON,e.AERODACTYL,e.SNORLAX,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SENTRET,e.FURRET,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.SLOWKING,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.SLUGMA,e.MAGCARGO,e.REMORAID,e.OCTILLERY,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.BLISSEY,e.ENTEI,e.TYRANITAR,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAWILE,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.FLYGON,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.SOLROCK,e.CASTFORM,e.KECLEON,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.GROUDON,e.RAYQUAZA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.STUNKY,e.SKUNTANK,e.HAPPINY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.WATCHOG,e.PANSEAR,e.SIMISEAR,e.AUDINO,e.DARUMAKA,e.DARMANITAN,e.ZOROARK,e.EELEKTROSS,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.DRUDDIGON,e.HEATMOR,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.RESHIRAM,e.GENESECT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.GOODRA,e.PUMPKABOO,e.GOURGEIST,e.NOIVERN,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SALANDIT,e.SALAZZLE,e.SILVALLY,e.TURTONATOR,e.DRAMPA,e.KOMMO_O,e.SOLGALEO,e.CELESTEELA,e.GUZZLORD,e.NAGANADEL,e.BLACEPHALON,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.CARKOL,e.COALOSSAL,e.CENTISKORCH,e.DRACOZOLT,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.SCOVILLAIN,e.DUDUNSPARCE,e.SCREAM_TAIL,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.WALKING_WAKE,e.GOUGING_FIRE,e.TERAPAGOS,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_ZOROARK,e.HISUI_GOODRA,[e.PALDEA_TAUROS,"blaze"]],[t.HYDRO_PUMP]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SHELLDER,e.CLOYSTER,e.KINGLER,e.LICKITUNG,e.RHYDON,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MAGIKARP,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.EXPLOUD,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.MILOTIC,e.CASTFORM,e.WALREIN,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.KYOGRE,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.MUNCHLAX,e.FINNEON,e.LUMINEON,e.MANTYKE,e.LICKILICKY,e.RHYPERIOR,e.PALKIA,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.DRILBUR,e.EXCADRILL,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.SWANNA,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.HYDREIGON,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.GOODRA,e.AVALUGG,e.VOLCANION,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.GRAPPLOCT,e.CURSOLA,e.PINCURCHIN,e.EISCUE,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DRAKLOAK,e.DRAGAPULT,e.BASCULEGION,e.OVERQWIL,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.CLODSIRE,e.IRON_BUNDLE,e.IRON_JUGULIS,e.ROARING_MOON,e.WALKING_WAKE,e.HYDRAPPLE,[e.ROTOM,"wash"],e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_GOODRA,[e.PALDEA_TAUROS,"aqua"],e.PALDEA_WOOPER],[t.SURF]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIKACHU,e.RAICHU,e.NIDOQUEEN,e.NIDOKING,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.LICKITUNG,e.RHYDON,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.PICHU,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.SNEASEL,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.MILTANK,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.ZANGOOSE,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.RAMPARDOS,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.GARCHOMP,e.MUNCHLAX,e.FINNEON,e.LUMINEON,e.MANTYKE,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.HERDIER,e.STOUTLAND,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.STUNFISK,e.DRUDDIGON,e.BOUFFALANT,e.HYDREIGON,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.SWIRLIX,e.SLURPUFF,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.GOODRA,e.BERGMITE,e.AVALUGG,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.WIMPOD,e.GOLISOPOD,e.SILVALLY,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.GRAPPLOCT,e.OBSTAGOON,e.CURSOLA,e.PINCURCHIN,e.EISCUE,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DRAKLOAK,e.DRAGAPULT,e.BASCULEGION,e.OVERQWIL,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.CLODSIRE,e.WALKING_WAKE,e.TERAPAGOS,e.ALOLA_RAICHU,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_STUNFISK,e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_GOODRA,[e.PALDEA_TAUROS,"combat","aqua"],e.PALDEA_WOOPER],[t.ICE_BEAM]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.JYNX,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.ARTICUNO,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.DUNSPARCE,e.QWILFISH,e.SNEASEL,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.KINGDRA,e.PORYGON2,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.AZURILL,e.SKITTY,e.DELCATTY,e.MAWILE,e.AGGRON,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.LUNATONE,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.REGICE,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.DEOXYS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.BUNEARY,e.LOPUNNY,e.MUNCHLAX,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.GLACEON,e.MAMOSWINE,e.PORYGON_Z,e.DUSKNOIR,e.FROSLASS,e.MESPRIT,e.DIALGA,e.PALKIA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.BASCULIN,e.SIGILYPH,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.GOLETT,e.GOLURK,e.KYUREM,e.GENESECT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.SLIGGOO,e.GOODRA,e.BERGMITE,e.AVALUGG,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CRABOMINABLE,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.GOLISOPOD,e.SILVALLY,e.BRUXISH,e.DRAMPA,e.TAPU_FINI,e.LUNALA,e.PHEROMOSA,e.MAGEARNA,e.MELMETAL,e.INTELEON,e.DREDNAW,e.CRAMORANT,e.BARRASKEWDA,e.OBSTAGOON,e.CURSOLA,e.MR_RIME,e.FROSMOTH,e.EISCUE,e.ARCTOZOLT,e.ARCTOVISH,e.GLASTRIER,e.BASCULEGION,e.OVERQWIL,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.CETODDLE,e.CETITAN,e.VELUZA,e.DUDUNSPARCE,e.SCREAM_TAIL,e.IRON_BUNDLE,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,[e.CALYREX,"ice"],e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG],[t.BLIZZARD]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.JYNX,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.ARTICUNO,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.DUNSPARCE,e.QWILFISH,e.SNEASEL,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.KINGDRA,e.PORYGON2,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.AZURILL,e.SKITTY,e.DELCATTY,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.ZANGOOSE,e.LUNATONE,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.REGICE,e.KYOGRE,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.LOPUNNY,e.MUNCHLAX,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.GLACEON,e.MAMOSWINE,e.PORYGON_Z,e.DUSKNOIR,e.FROSLASS,e.MESPRIT,e.DIALGA,e.PALKIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.KYUREM,e.GENESECT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.SLIGGOO,e.GOODRA,e.BERGMITE,e.AVALUGG,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CRABOMINABLE,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.GOLISOPOD,e.BRUXISH,e.DRAMPA,e.TAPU_FINI,e.LUNALA,e.PHEROMOSA,e.INTELEON,e.DREDNAW,e.CRAMORANT,e.BARRASKEWDA,e.OBSTAGOON,e.CURSOLA,e.MR_RIME,e.FROSMOTH,e.EISCUE,e.ARCTOZOLT,e.ARCTOVISH,e.GLASTRIER,e.BASCULEGION,e.OVERQWIL,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.CETODDLE,e.CETITAN,e.VELUZA,e.DUDUNSPARCE,e.SCREAM_TAIL,e.IRON_BUNDLE,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,[e.ROTOM,"frost"],e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,[e.CALYREX,"ice"],e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG],[t.PSYBEAM]:[e.BUTTERFREE,e.CLEFAIRY,e.CLEFABLE,e.PARAS,e.VENONAT,e.VENOMOTH,e.PSYDUCK,e.GOLDUCK,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.KOFFING,e.WEEZING,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.PORYGON,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.SPINARAK,e.CHINCHOU,e.CLEFFA,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.REMORAID,e.OCTILLERY,e.MANTINE,e.PORYGON2,e.STANTLER,e.DUSTOX,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.SPINDA,e.BALTOY,e.CLAYDOL,e.KECLEON,e.SHUPPET,e.BANETTE,e.CHIMECHO,e.WORMADAM,e.MOTHIM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.FINNEON,e.LUMINEON,e.PORYGON_Z,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.MUNNA,e.MUSHARNA,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.VIVILLON,e.ESPURR,e.MEOWSTIC,e.INKAY,e.MALAMAR,e.HOOPA,e.ORANGURU,e.TAPU_LELE,e.MAGEARNA,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.MR_RIME,e.INDEEDEE,e.CALYREX,e.WYRDEER,e.ARMAROUGE,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.FARIGIRAF,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_VALIANT,e.MUNKIDORI,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.HISUI_BRAVIARY],[t.HYPER_BEAM]:[e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEOT,e.RATICATE,e.FEAROW,e.ARBOK,e.RAICHU,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.CLEFABLE,e.NINETALES,e.WIGGLYTUFF,e.GOLBAT,e.VILEPLUME,e.PARASECT,e.VENOMOTH,e.DUGTRIO,e.PERSIAN,e.GOLDUCK,e.PRIMEAPE,e.ARCANINE,e.POLIWRATH,e.ALAKAZAM,e.MACHAMP,e.VICTREEBEL,e.TENTACRUEL,e.GOLEM,e.RAPIDASH,e.SLOWBRO,e.MAGNETON,e.DODRIO,e.DEWGONG,e.MUK,e.CLOYSTER,e.GENGAR,e.HYPNO,e.KINGLER,e.ELECTRODE,e.EXEGGUTOR,e.MAROWAK,e.LICKITUNG,e.WEEZING,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.SEADRA,e.SEAKING,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMASTAR,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.FURRET,e.NOCTOWL,e.LEDIAN,e.ARIADOS,e.CROBAT,e.LANTURN,e.TOGETIC,e.XATU,e.AMPHAROS,e.BELLOSSOM,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.JUMPLUFF,e.SUNFLORA,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.FORRETRESS,e.DUNSPARCE,e.STEELIX,e.GRANBULL,e.SCIZOR,e.HERACROSS,e.URSARING,e.MAGCARGO,e.PILOSWINE,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.HOUNDOOM,e.KINGDRA,e.DONPHAN,e.PORYGON2,e.STANTLER,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.MIGHTYENA,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.SWELLOW,e.PELIPPER,e.KIRLIA,e.GARDEVOIR,e.MASQUERAIN,e.BRELOOM,e.SLAKING,e.NINJASK,e.SHEDINJA,e.EXPLOUD,e.HARIYAMA,e.DELCATTY,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDICHAM,e.MANECTRIC,e.SWALOT,e.SHARPEDO,e.WAILORD,e.CAMERUPT,e.TORKOAL,e.GRUMPIG,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACTURNE,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.WHISCASH,e.CRAWDAUNT,e.CLAYDOL,e.CRADILY,e.ARMALDO,e.MILOTIC,e.BANETTE,e.DUSCLOPS,e.TROPIUS,e.ABSOL,e.GLALIE,e.WALREIN,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.STARAPTOR,e.BIBAREL,e.KRICKETUNE,e.LUXRAY,e.ROSERADE,e.RAMPARDOS,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.FLOATZEL,e.CHERRIM,e.GASTRODON,e.AMBIPOM,e.DRIFBLIM,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.PURUGLY,e.SKUNTANK,e.BRONZONG,e.SPIRITOMB,e.GARCHOMP,e.LUCARIO,e.HIPPOWDON,e.DRAPION,e.TOXICROAK,e.CARNIVINE,e.LUMINEON,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SERPERIOR,e.EMBOAR,e.SAMUROTT,e.WATCHOG,e.STOUTLAND,e.LIEPARD,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.MUSHARNA,e.UNFEZANT,e.ZEBSTRIKA,e.GIGALITH,e.SWOOBAT,e.EXCADRILL,e.AUDINO,e.CONKELDURR,e.SEISMITOAD,e.LEAVANNY,e.SCOLIPEDE,e.WHIMSICOTT,e.LILLIGANT,e.BASCULIN,e.KROOKODILE,e.DARMANITAN,e.CRUSTLE,e.SCRAFTY,e.SIGILYPH,e.COFAGRIGUS,e.CARRACOSTA,e.ARCHEOPS,e.GARBODOR,e.ZOROARK,e.CINCCINO,e.GOTHITELLE,e.REUNICLUS,e.SWANNA,e.VANILLUXE,e.SAWSBUCK,e.ESCAVALIER,e.AMOONGUSS,e.JELLICENT,e.ALOMOMOLA,e.GALVANTULA,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTROSS,e.BEHEEYEM,e.CHANDELURE,e.HAXORUS,e.BEARTIC,e.CRYOGONAL,e.ACCELGOR,e.MIENSHAO,e.DRUDDIGON,e.GOLURK,e.BISHARP,e.BRAVIARY,e.MANDIBUZZ,e.HYDREIGON,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESNAUGHT,e.DELPHOX,e.GRENINJA,e.DIGGERSBY,e.TALONFLAME,e.VIVILLON,e.PYROAR,e.FLORGES,e.GOGOAT,e.PANGORO,e.MEOWSTIC,e.AEGISLASH,e.AROMATISSE,e.SLURPUFF,e.MALAMAR,e.BARBARACLE,e.DRAGALGE,e.CLAWITZER,e.HELIOLISK,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOODRA,e.KLEFKI,e.TREVENANT,e.GOURGEIST,e.AVALUGG,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.DECIDUEYE,e.INCINEROAR,e.PRIMARINA,e.GUMSHOOS,e.VIKAVOLT,e.CRABOMINABLE,e.RIBOMBEE,e.TOXAPEX,e.MUDSDALE,e.LURANTIS,e.SHIINOTIC,e.SALAZZLE,e.BEWEAR,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.NAGANADEL,e.BLACEPHALON,e.ZERAORA,e.MELMETAL,e.RILLABOOM,e.CINDERACE,e.INTELEON,e.GREEDENT,e.CORVIKNIGHT,e.ORBEETLE,e.THIEVUL,e.ELDEGOSS,e.DUBWOOL,e.DREDNAW,e.BOLTUND,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SANDACONDA,e.CRAMORANT,e.BARRASKEWDA,e.TOXTRICITY,e.CENTISKORCH,e.GRAPPLOCT,e.POLTEAGEIST,e.HATTERENE,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.MEOWSCARADA,e.SKELEDIRGE,e.QUAQUAVAL,e.OINKOLOGNE,e.PAWMOT,e.MAUSHOLD,e.DACHSBUN,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLSTACK,e.GARGANACL,e.BELLIBOLT,e.KILOWATTREL,e.MABOSSTIFF,e.BRAMBLEGHAST,e.TOEDSCRUEL,e.KLAWF,e.SCOVILLAIN,e.RABSCA,e.ESPATHRA,e.WUGTRIO,e.BOMBIRDIER,e.PALAFIN,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMORA,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.BAXCALIBUR,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.ARCHALUDON,e.IRON_CROWN,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSLASH,e.ALOLA_NINETALES,e.ALOLA_DUGTRIO,e.ALOLA_PERSIAN,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_RAPIDASH,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_LINOONE,e.GALAR_DARMANITAN,e.HISUI_ARCANINE,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.BLOODMOON_URSALUNA],[t.LOW_KICK]:[e.SANDSHREW,e.SANDSLASH,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.PONYTA,e.RAPIDASH,e.DODUO,e.DODRIO,e.DROWZEE,e.HYPNO,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.KANGASKHAN,e.ELECTABUZZ,e.MAGMAR,e.KABUTOPS,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.FLAAFFY,e.AMPHAROS,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.GIRAFARIG,e.SNUBBULL,e.GRANBULL,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.TYROGUE,e.HITMONTOP,e.ELEKID,e.MAGBY,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.ARMALDO,e.KECLEON,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.BONSLY,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.ELECTIVIRE,e.MAGMORTAR,e.GALLADE,e.PIGNITE,e.EMBOAR,e.PATRAT,e.WATCHOG,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.BLITZLE,e.ZEBSTRIKA,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.LEAVANNY,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.CARRACOSTA,e.ZOROARK,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.HEATMOR,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BRAIXEN,e.DELPHOX,e.FROGADIER,e.GRENINJA,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.BARBARACLE,e.HELIOLISK,e.HAWLUCHA,e.DECIDUEYE,e.INCINEROAR,e.MUDBRAY,e.MUDSDALE,e.BEWEAR,e.TSAREENA,e.PASSIMIAN,e.KOMALA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.PHEROMOSA,e.MARSHADOW,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.STONJOURNER,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.KUBFU,e.URSHIFU,e.ZARUDE,e.URSALUNA,e.SNEASLER,e.FLORAGATO,e.MEOWSCARADA,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.SPIDOPS,e.LOKIX,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.GRAFAIAI,e.ESPATHRA,e.FLAMIGO,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.KINGAMBIT,e.SLITHER_WING,e.IRON_HANDS,e.IRON_THORNS,e.GHOLDENGO,e.IRON_VALIANT,e.KORAIDON,e.WALKING_WAKE,e.OKIDOGI,e.OGERPON,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_ZAPDOS,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.COUNTER]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PARAS,e.PARASECT,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWPOKE,e.SLOWBRO,e.GENGAR,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.SNORLAX,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.LEDYBA,e.LEDIAN,e.TOGEPI,e.TOGETIC,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.WOBBUFFET,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.SNUBBULL,e.GRANBULL,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.MILTANK,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.TAILLOW,e.SWELLOW,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.CORPHISH,e.CRAWDAUNT,e.KECLEON,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.SHIELDON,e.BASTIODON,e.RIOLU,e.LUCARIO,e.SHELLOS,e.GASTRODON,e.CROAGUNK,e.TOXICROAK,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SAWK,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.ZORUA,e.ZOROARK,e.KARRABLAST,e.ESCAVALIER,e.ACCELGOR,e.AXEW,e.FRAXURE,e.HAXORUS,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.GOOMY,e.SLIGGOO,e.GOODRA,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.PASSIMIAN,e.PYUKUMUKU,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.BUZZWOLE,e.MARSHADOW,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SKWOVET,e.GREEDENT,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.FALINKS,e.KUBFU,e.URSHIFU,e.QUAQUAVAL,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.FINIZEN,e.PALAFIN,e.TATSUGIRI,e.KORAIDON,e.OKIDOGI,e.OGERPON,e.IRON_BOULDER],[t.STRENGTH]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATICATE,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.GENGAR,e.ONIX,e.KRABBY,e.KINGLER,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.JOLTEON,e.FLAREON,e.AERODACTYL,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.BAYLEEF,e.MEGANIUM,e.QUILAVA,e.TYPHLOSION,e.CROCONAW,e.FERALIGATR,e.FURRET,e.LEDIAN,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.QUAGSIRE,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.TYROGUE,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.TYRANITAR,e.LUGIA,e.HO_OH,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.MIGHTYENA,e.LINOONE,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.DELCATTY,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.GULPIN,e.SWALOT,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.CLAYDOL,e.CRADILY,e.ARMALDO,e.KECLEON,e.DUSCLOPS,e.TROPIUS,e.ABSOL,e.SPHEAL,e.SEALEO,e.WALREIN,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BUIZEL,e.FLOATZEL,e.GASTRODON,e.AMBIPOM,e.LOPUNNY,e.SKUNTANK,e.BRONZONG,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.SAMUROTT,e.WATCHOG,e.HERDIER,e.STOUTLAND,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SCOLIPEDE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.REUNICLUS,e.FERROTHORN,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.HAWLUCHA,e.GOODRA,e.PHANTUMP,e.TREVENANT,e.BERGMITE,e.AVALUGG,e.ZYGARDE,e.VOLCANION,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.OBSTAGOON,e.CUFANT,e.COPPERAJAH,e.URSALUNA,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SAMUROTT,e.HISUI_BRAVIARY,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.BLOODMOON_URSALUNA],[t.SOLAR_BEAM]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.ARCANINE,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.PONYTA,e.RAPIDASH,e.EXEGGCUTE,e.EXEGGUTOR,e.LICKITUNG,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.MR_MIME,e.TAUROS,e.LAPRAS,e.PORYGON,e.SNORLAX,e.MOLTRES,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.TYPHLOSION,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.PORYGON2,e.STANTLER,e.MILTANK,e.BLISSEY,e.ENTEI,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.BLAZIKEN,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.SKITTY,e.DELCATTY,e.MAWILE,e.AGGRON,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CAMERUPT,e.TORKOAL,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.CASTFORM,e.KECLEON,e.TROPIUS,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.INFERNAPE,e.BUDEW,e.ROSERADE,e.WORMADAM,e.MOTHIM,e.CHERUBI,e.CHERRIM,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.MUNCHLAX,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.LICKILICKY,e.TANGROWTH,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.PORYGON_Z,e.UXIE,e.HEATRAN,e.CRESSELIA,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.GIGALITH,e.AUDINO,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SIGILYPH,e.GARBODOR,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.FOONGUS,e.AMOONGUSS,e.FERROSEED,e.FERROTHORN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.CRYOGONAL,e.GOLURK,e.HEATMOR,e.LARVESTA,e.VOLCARONA,e.VIRIZION,e.RESHIRAM,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.HELIOLISK,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.NOIBAT,e.NOIVERN,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.VIKAVOLT,e.RIBOMBEE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.MINIOR,e.TURTONATOR,e.DRAMPA,e.DHELMISE,e.TAPU_BULU,e.SOLGALEO,e.LUNALA,e.XURKITREE,e.CELESTEELA,e.NECROZMA,e.MAGEARNA,e.BLACEPHALON,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.DOTTLER,e.ORBEETLE,e.GOSSIFLEUR,e.ELDEGOSS,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.CENTISKORCH,e.MR_RIME,e.ALCREMIE,e.DURALUDON,e.DRAGAPULT,e.ZAMAZENTA,e.ETERNATUS,e.ZARUDE,e.CALYREX,e.WYRDEER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.SKELEDIRGE,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.ARMAROUGE,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.GLIMMORA,e.DUDUNSPARCE,e.BRUTE_BONNET,e.IRON_MOTH,e.WO_CHIEN,e.KORAIDON,e.MIRAIDON,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_NINETALES,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_MR_MIME,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.FIRE_SPIN]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.VULPIX,e.NINETALES,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.MAGMAR,e.FLAREON,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SLUGMA,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.ENTEI,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.FLYGON,e.ALTARIA,e.SOLROCK,e.BAGON,e.SHELGON,e.SALAMENCE,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.SKUNTANK,e.MAGMORTAR,e.HEATRAN,e.VICTINI,e.PANSEAR,e.SIMISEAR,e.DARUMAKA,e.DARMANITAN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.HEATMOR,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.TURTONATOR,e.SOLGALEO,e.BLACEPHALON,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.CARKOL,e.COALOSSAL,e.SIZZLIPEDE,e.CENTISKORCH,e.DRACOZOLT,e.ETERNATUS,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.IRON_MOTH,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.GOUGING_FIRE,e.ALOLA_MAROWAK,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,[e.PALDEA_TAUROS,"blaze"]],[t.THUNDERBOLT]:[e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.MAGNEMITE,e.MAGNETON,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.VOLTORB,e.ELECTRODE,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.STARYU,e.STARMIE,e.MR_MIME,e.ELECTABUZZ,e.TAUROS,e.GYARADOS,e.LAPRAS,e.JOLTEON,e.PORYGON,e.SNORLAX,e.ZAPDOS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.AIPOM,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.PORYGON2,e.STANTLER,e.ELEKID,e.MILTANK,e.BLISSEY,e.RAIKOU,e.TYRANITAR,e.LUGIA,e.HO_OH,e.ZIGZAGOON,e.LINOONE,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ZANGOOSE,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.ABSOL,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.PACHIRISU,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.GLAMEOW,e.PURUGLY,e.MIME_JR,e.MUNCHLAX,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.BLITZLE,e.ZEBSTRIKA,e.AUDINO,e.GARBODOR,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.STUNFISK,e.GOLURK,e.THUNDURUS,e.ZEKROM,e.MELOETTA,e.GENESECT,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.SKRELP,e.DRAGALGE,e.HELIOPTILE,e.HELIOLISK,e.AMAURA,e.AURORUS,e.DEDENNE,e.GOOMY,e.SLIGGOO,e.GOODRA,e.XERNEAS,e.HOOPA,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.ORANGURU,e.SILVALLY,e.TOGEDEMARU,e.MIMIKYU,e.DRAMPA,e.TAPU_KOKO,e.TAPU_LELE,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.XURKITREE,e.MAGEARNA,e.NAGANADEL,e.ZERAORA,e.MELTAN,e.MELMETAL,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.OBSTAGOON,e.PERRSERKER,e.MR_RIME,e.PINCURCHIN,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.REGIELEKI,e.WYRDEER,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.CYCLIZAR,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.FLUTTER_MANE,e.SANDY_SHOCKS,e.IRON_HANDS,e.IRON_THORNS,e.GHOLDENGO,e.IRON_VALIANT,e.MIRAIDON,e.ARCHALUDON,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_RAICHU,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.THUNDER_WAVE]:[e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.GENGAR,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.CHANSEY,e.STARYU,e.STARMIE,e.MR_MIME,e.ELECTABUZZ,e.GYARADOS,e.JOLTEON,e.PORYGON,e.ZAPDOS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.AIPOM,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.FORRETRESS,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.REMORAID,e.OCTILLERY,e.PORYGON2,e.STANTLER,e.ELEKID,e.MILTANK,e.BLISSEY,e.RAIKOU,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.ZIGZAGOON,e.LINOONE,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.VIGOROTH,e.SLAKING,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.SPOINK,e.GRUMPIG,e.ZANGOOSE,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.CHIMECHO,e.ABSOL,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.MIME_JR,e.HAPPINY,e.MAGNEZONE,e.ELECTIVIRE,e.TOGEKISS,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.MUSHARNA,e.BLITZLE,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SIGILYPH,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.TYNAMO,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.STUNFISK,e.PAWNIARD,e.BISHARP,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.THUNDURUS,e.ZEKROM,e.MELOETTA,e.GENESECT,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HELIOPTILE,e.HELIOLISK,e.AMAURA,e.AURORUS,e.DEDENNE,e.KLEFKI,e.XERNEAS,e.HOOPA,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.TYPE_NULL,e.SILVALLY,e.TOGEDEMARU,e.MIMIKYU,e.DRAMPA,e.TAPU_KOKO,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.XURKITREE,e.NECROZMA,e.MAGEARNA,e.ZERAORA,e.MELTAN,e.MELMETAL,e.WOOLOO,e.DUBWOOL,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.MR_RIME,e.PINCURCHIN,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.REGIELEKI,e.WYRDEER,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.FARIGIRAF,e.KINGAMBIT,e.SCREAM_TAIL,e.FLUTTER_MANE,e.SANDY_SHOCKS,e.IRON_THORNS,e.GHOLDENGO,e.IRON_VALIANT,e.MIRAIDON,e.ARCHALUDON,e.RAGING_BOLT,e.ALOLA_RAICHU,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_STUNFISK,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.THUNDER]:[e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.MAGNEMITE,e.MAGNETON,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.VOLTORB,e.ELECTRODE,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.STARYU,e.STARMIE,e.MR_MIME,e.ELECTABUZZ,e.TAUROS,e.GYARADOS,e.LAPRAS,e.JOLTEON,e.PORYGON,e.SNORLAX,e.ZAPDOS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.AIPOM,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.PORYGON2,e.STANTLER,e.ELEKID,e.MILTANK,e.BLISSEY,e.RAIKOU,e.TYRANITAR,e.LUGIA,e.HO_OH,e.ZIGZAGOON,e.LINOONE,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ZANGOOSE,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.ABSOL,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.PACHIRISU,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.LOPUNNY,e.MISMAGIUS,e.GLAMEOW,e.PURUGLY,e.MIME_JR,e.MUNCHLAX,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.PORYGON_Z,e.PROBOPASS,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.WATCHOG,e.STOUTLAND,e.BLITZLE,e.ZEBSTRIKA,e.AUDINO,e.CINCCINO,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.EMOLGA,e.GALVANTULA,e.FERROTHORN,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.STUNFISK,e.THUNDURUS,e.ZEKROM,e.MELOETTA,e.GENESECT,e.AROMATISSE,e.SLURPUFF,e.DRAGALGE,e.HELIOPTILE,e.HELIOLISK,e.AURORUS,e.DEDENNE,e.SLIGGOO,e.GOODRA,e.XERNEAS,e.CHARJABUG,e.VIKAVOLT,e.ORANGURU,e.TOGEDEMARU,e.MIMIKYU,e.DRAMPA,e.TAPU_KOKO,e.TAPU_LELE,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.XURKITREE,e.ZERAORA,e.MELMETAL,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.OBSTAGOON,e.PERRSERKER,e.MR_RIME,e.PINCURCHIN,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.REGIELEKI,e.WYRDEER,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.FLUTTER_MANE,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.GHOLDENGO,e.MIRAIDON,e.ARCHALUDON,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_RAICHU,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.MAROWAK,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.EARTHQUAKE]:[e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWPOKE,e.SLOWBRO,e.ONIX,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.PINSIR,e.TAUROS,e.GYARADOS,e.AERODACTYL,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.SUDOWOODO,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SHUCKLE,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.MANTINE,e.PHANPY,e.DONPHAN,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.SCEPTILE,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.ARON,e.LAIRON,e.AGGRON,e.SWALOT,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.ALTARIA,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.CRADILY,e.ARMALDO,e.DUSCLOPS,e.TROPIUS,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.RELICANTH,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.GASTRODON,e.BRONZOR,e.BRONZONG,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.MANTYKE,e.ABOMASNOW,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.ARCEUS,e.EMBOAR,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.HAXORUS,e.BEARTIC,e.STUNFISK,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.HYDREIGON,e.TERRAKION,e.LANDORUS,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.GOGOAT,e.PANGORO,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AURORUS,e.GOODRA,e.TREVENANT,e.AVALUGG,e.ZYGARDE,e.VOLCANION,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.WISHIWASHI,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.KOMALA,e.TURTONATOR,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.SOLGALEO,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.STAKATAKA,e.MELMETAL,e.RILLABOOM,e.GREEDENT,e.DREDNAW,e.COALOSSAL,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.DRACOVISH,e.REGIDRAGO,e.WYRDEER,e.URSALUNA,e.SKELEDIRGE,e.NACLI,e.NACLSTACK,e.GARGANACL,e.ORTHWORM,e.CETODDLE,e.CETITAN,e.DONDOZO,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.GREAT_TUSK,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.BAXCALIBUR,e.TING_LU,e.ROARING_MOON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.TERAPAGOS,[e.WORMADAM,"sandy"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_TYPHLOSION,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.DIG]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PARAS,e.PARASECT,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.ONIX,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.KANGASKHAN,e.PINSIR,e.TAUROS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CLEFFA,e.IGGLYBUFF,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.SLOWKING,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.PHANPY,e.DONPHAN,e.STANTLER,e.HITMONTOP,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.MAKUHITA,e.HARIYAMA,e.SKITTY,e.DELCATTY,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.NUMEL,e.CAMERUPT,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.CRADILY,e.ANORITH,e.ARMALDO,e.KECLEON,e.REGIROCK,e.GROUDON,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.GASTRODON,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.HEATRAN,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.HEATMOR,e.DURANT,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.MEOWSTIC,e.BINACLE,e.BARBARACLE,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.PHANTUMP,e.TREVENANT,e.ZYGARDE,e.VOLCANION,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.SKWOVET,e.GREEDENT,e.NICKIT,e.THIEVUL,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.GRAPPLOCT,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.CUFANT,e.COPPERAJAH,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.ZARUDE,e.WYRDEER,e.URSALUNA,e.SNEASLER,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.NACLI,e.NACLSTACK,e.GARGANACL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.KLAWF,e.RELLOR,e.RABSCA,e.WIGLETT,e.WUGTRIO,e.ORTHWORM,e.GREAVARD,e.HOUNDSTONE,e.ANNIHILAPE,e.CLODSIRE,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.TING_LU,e.ROARING_MOON,e.KORAIDON,e.OKIDOGI,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.TOXIC]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.TOXTRICITY,e.ETERNATUS,e.SNEASLER,e.OVERQWIL,e.BELLIBOLT,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.VAROOM,e.REVAVROOM,e.GLIMMET,e.GLIMMORA,e.CLODSIRE,e.DUDUNSPARCE,e.IRON_MOTH,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.PALDEA_WOOPER],[t.PSYCHIC]:[e.BUTTERFREE,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.VENONAT,e.VENOMOTH,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.CHANSEY,e.STARYU,e.STARMIE,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.LAPRAS,e.PORYGON,e.SNORLAX,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.SPINARAK,e.ARIADOS,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.POLITOED,e.YANMA,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.BLISSEY,e.LUGIA,e.HO_OH,e.CELEBI,e.BEAUTIFLY,e.DUSTOX,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.SPINDA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.GOREBYSS,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.WORMADAM,e.MOTHIM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.MUNCHLAX,e.LUCARIO,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.GIRATINA,e.CRESSELIA,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.WHIMSICOTT,e.DARMANITAN,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.GARBODOR,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.GOLETT,e.GOLURK,e.LARVESTA,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.MELOETTA,e.GENESECT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.AURORUS,e.SYLVEON,e.CARBINK,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.DIANCIE,e.HOOPA,e.PRIMARINA,e.CUTIEFLY,e.RIBOMBEE,e.ORANGURU,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.MIMIKYU,e.BRUXISH,e.TAPU_LELE,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.NECROZMA,e.MAGEARNA,e.BLACEPHALON,e.DOTTLER,e.ORBEETLE,e.THIEVUL,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.CURSOLA,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.INDEEDEE,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.ENAMORUS,e.ARMAROUGE,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.VELUZA,e.FARIGIRAF,e.SCREAM_TAIL,e.IRON_MOTH,e.GHOLDENGO,e.CHI_YU,e.IRON_VALIANT,e.MUNKIDORI,e.IRON_BOULDER,e.IRON_CROWN,e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.HISUI_ZOROARK,e.HISUI_BRAVIARY],[t.AGILITY]:[e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.VULPIX,e.NINETALES,e.ZUBAT,e.GOLBAT,e.PARAS,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.FARFETCHD,e.DODUO,e.DODRIO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.HITMONCHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARMIE,e.SCYTHER,e.JOLTEON,e.PORYGON,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.FERALIGATR,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.AIPOM,e.GIRAFARIG,e.DUNSPARCE,e.GLIGAR,e.QWILFISH,e.SCIZOR,e.SNEASEL,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.KINGDRA,e.PORYGON2,e.STANTLER,e.HITMONTOP,e.RAIKOU,e.ENTEI,e.SUICUNE,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.NINJASK,e.SHEDINJA,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.CARVANHA,e.SHARPEDO,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.GOREBYSS,e.LUVDISC,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.LUXRAY,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.CHATOT,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.FINNEON,e.LUMINEON,e.MANTYKE,e.WEAVILE,e.GLISCOR,e.PORYGON_Z,e.GALLADE,e.ARCEUS,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.SEWADDLE,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.BASCULIN,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.ELGYEM,e.BEHEEYEM,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.RUFFLET,e.BRAVIARY,e.DURANT,e.TORNADUS,e.THUNDURUS,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.HELIOPTILE,e.HELIOLISK,e.HAWLUCHA,e.DEDENNE,e.NOIBAT,e.NOIVERN,e.VIKAVOLT,e.ORICORIO,e.RIBOMBEE,e.LYCANROC,e.SALANDIT,e.SALAZZLE,e.TOGEDEMARU,e.BRUXISH,e.TAPU_KOKO,e.SOLGALEO,e.LUNALA,e.PHEROMOSA,e.MAGEARNA,e.MARSHADOW,e.ZERAORA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.WOOLOO,e.DUBWOOL,e.BOLTUND,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.HATTERENE,e.FALINKS,e.EISCUE,e.MORPEKO,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.REGIELEKI,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.QUAQUAVAL,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.WATTREL,e.KILOWATTREL,e.FLITTLE,e.ESPATHRA,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.CYCLIZAR,e.FLAMIGO,e.VELUZA,e.FARIGIRAF,e.DUDUNSPARCE,e.IRON_BUNDLE,e.IRON_MOTH,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.FEZANDIPITI,e.IRON_BOULDER,[e.DEOXYS,"speed"],e.ALOLA_RAICHU,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY],[t.NIGHT_SHADE]:[e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.VENONAT,e.VENOMOTH,e.KADABRA,e.ALAKAZAM,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.SPINARAK,e.ARIADOS,e.NATU,e.XATU,e.MURKROW,e.MISDREAVUS,e.GARDEVOIR,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.DEOXYS,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.BRONZONG,e.CHATOT,e.SPIRITOMB,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.DARKRAI,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.GOLETT,e.GOLURK,e.DELPHOX,e.PHANTUMP,e.TREVENANT,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.SANDYGAST,e.PALOSSAND,e.MIMIKYU,e.LUNALA,e.BLACEPHALON,e.SINISTEA,e.POLTEAGEIST,e.CURSOLA,e.RUNERIGUS,e.DRAKLOAK,e.DRAGAPULT,e.SPECTRIER,e.BASCULEGION,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.BRAMBLIN,e.BRAMBLEGHAST,e.ESPATHRA,e.GREAVARD,e.HOUNDSTONE,e.ANNIHILAPE,e.FARIGIRAF,e.FLUTTER_MANE,e.GIMMIGHOUL,e.GHOLDENGO,e.POLTCHAGEIST,e.SINISTCHA,e.MUNKIDORI,e.PECHARUNT,e.GALAR_CORSOLA,e.GALAR_YAMASK,[e.CALYREX,"shadow"],e.HISUI_TYPHLOSION,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.SCREECH]:[e.RATTATA,e.EKANS,e.ARBOK,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GOLBAT,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.TENTACOOL,e.TENTACRUEL,e.MAGNEMITE,e.MAGNETON,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.ONIX,e.VOLTORB,e.ELECTRODE,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.KOFFING,e.WEEZING,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.IGGLYBUFF,e.MAREEP,e.POLITOED,e.AIPOM,e.YANMA,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNEASEL,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.ELEKID,e.MAGBY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.SHIFTRY,e.NINJASK,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.ARON,e.LAIRON,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.VIBRAVA,e.FLYGON,e.SEVIPER,e.ANORITH,e.ARMALDO,e.KECLEON,e.SHUPPET,e.BANETTE,e.HUNTAIL,e.KRICKETUNE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.VESPIQUEN,e.AMBIPOM,e.STUNKY,e.SKUNTANK,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.ELECTIVIRE,e.MAGMORTAR,e.YANMEGA,e.GLISCOR,e.OSHAWOTT,e.PATRAT,e.PURRLOIN,e.LIEPARD,e.BLITZLE,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.MARACTUS,e.GARBODOR,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.KLINK,e.KLANG,e.KLINKLANG,e.ELGYEM,e.BEHEEYEM,e.PAWNIARD,e.BISHARP,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.GENESECT,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.BINACLE,e.BARBARACLE,e.NOIBAT,e.NOIVERN,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.WIMPOD,e.GOLISOPOD,e.PYUKUMUKU,e.MIMIKYU,e.BRUXISH,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.KARTANA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.SILICOBRA,e.SANDACONDA,e.TOXTRICITY,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.MR_RIME,e.FALINKS,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.ETERNATUS,e.REGIELEKI,e.SNEASLER,e.NYMBLE,e.LOKIX,e.TOEDSCOOL,e.TOEDSCRUEL,e.VAROOM,e.REVAVROOM,e.ANNIHILAPE,e.DUDUNSPARCE,e.SANDY_SHOCKS,e.IRON_MOTH,e.IRON_THORNS,e.KORAIDON,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ZAPDOS,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_STUNFISK,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_SNEASEL],[t.DOUBLE_TEAM]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.NAGANADEL,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.CONFUSE_RAY]:[e.VULPIX,e.NINETALES,e.ZUBAT,e.GOLBAT,e.VENONAT,e.VENOMOTH,e.PSYDUCK,e.GOLDUCK,e.TENTACOOL,e.TENTACRUEL,e.MAGNEMITE,e.MAGNETON,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.HYPNO,e.STARYU,e.STARMIE,e.MR_MIME,e.MAGMAR,e.LAPRAS,e.KABUTO,e.KABUTOPS,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.CHINCHOU,e.LANTURN,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.ESPEON,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.GIRAFARIG,e.CORSOLA,e.MANTINE,e.STANTLER,e.MAGBY,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHEDINJA,e.SABLEYE,e.VOLBEAT,e.ILLUMISE,e.SPOINK,e.GRUMPIG,e.LILEEP,e.CRADILY,e.FEEBAS,e.MILOTIC,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.JIRACHI,e.SHINX,e.LUXIO,e.LUXRAY,e.VESPIQUEN,e.MISMAGIUS,e.HONCHKROW,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.SKORUPI,e.DRAPION,e.FINNEON,e.LUMINEON,e.MANTYKE,e.MAGNEZONE,e.MAGMORTAR,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.WATCHOG,e.ZORUA,e.ZOROARK,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.EELEKTROSS,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.CRYOGONAL,e.GOLETT,e.GOLURK,e.DELPHOX,e.VIVILLON,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.MORELULL,e.SHIINOTIC,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.MIMIKYU,e.LUNALA,e.MAGEARNA,e.BLACEPHALON,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.CURSOLA,e.MR_RIME,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.SPECTRIER,e.WYRDEER,e.BASCULEGION,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FARIGIRAF,e.BRUTE_BONNET,e.FLUTTER_MANE,e.IRON_MOTH,e.GIMMIGHOUL,e.GHOLDENGO,e.CHI_YU,e.IRON_VALIANT,e.MIRAIDON,e.MUNKIDORI,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MR_MIME,e.GALAR_CORSOLA,[e.CALYREX,"shadow"],e.HISUI_TYPHLOSION,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.LIGHT_SCREEN]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PARAS,e.PARASECT,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.CLOYSTER,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CHANSEY,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.JOLTEON,e.ARTICUNO,e.ZAPDOS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.LEDYBA,e.LEDIAN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.ESPEON,e.UMBREON,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.SCIZOR,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.STANTLER,e.SMOOCHUM,e.ELEKID,e.BLISSEY,e.RAIKOU,e.LUGIA,e.HO_OH,e.CELEBI,e.DUSTOX,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.AZURILL,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.FEEBAS,e.MILOTIC,e.CHIMECHO,e.SNORUNT,e.GLALIE,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.SNOVER,e.ABOMASNOW,e.MAGNEZONE,e.ELECTIVIRE,e.TOGEKISS,e.MAMOSWINE,e.GALLADE,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.MANAPHY,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.WATCHOG,e.MUNNA,e.MUSHARNA,e.BLITZLE,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.WHIMSICOTT,e.LILLIGANT,e.SIGILYPH,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.CRYOGONAL,e.LARVESTA,e.VOLCARONA,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.MELOETTA,e.GENESECT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.HELIOPTILE,e.HELIOLISK,e.AMAURA,e.AURORUS,e.SYLVEON,e.DEDENNE,e.CARBINK,e.KLEFKI,e.PUMPKABOO,e.GOURGEIST,e.XERNEAS,e.DIANCIE,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PRIMARINA,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CUTIEFLY,e.RIBOMBEE,e.TOXAPEX,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PYUKUMUKU,e.MINIOR,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.XURKITREE,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.BLACEPHALON,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.GOSSIFLEUR,e.ELDEGOSS,e.APPLETUN,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.CURSOLA,e.MR_RIME,e.ALCREMIE,e.FROSMOTH,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.ZAMAZENTA,e.ETERNATUS,e.REGIELEKI,e.REGIDRAGO,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.ARBOLIVA,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.TOEDSCOOL,e.TOEDSCRUEL,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.GLIMMET,e.GLIMMORA,e.FARIGIRAF,e.SCREAM_TAIL,e.SANDY_SHOCKS,e.IRON_MOTH,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHI_YU,e.IRON_VALIANT,e.MIRAIDON,e.MUNKIDORI,e.FEZANDIPITI,e.ARCHALUDON,e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_SLOWKING,e.GALAR_CORSOLA,[e.INDEEDEE,"female"]],[t.HAZE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.EKANS,e.ARBOK,e.ZUBAT,e.GOLBAT,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.KOFFING,e.WEEZING,e.GOLDEEN,e.SEAKING,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.ARTICUNO,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.NATU,e.XATU,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.MURKROW,e.QWILFISH,e.SWINUB,e.PILOSWINE,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SURSKIT,e.MASQUERAIN,e.SWABLU,e.ALTARIA,e.SEVIPER,e.FEEBAS,e.MILOTIC,e.DUSKULL,e.DUSCLOPS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.DRIFLOON,e.DRIFBLIM,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.MANTYKE,e.GLACEON,e.MAMOSWINE,e.DUSKNOIR,e.FROSLASS,e.PHIONE,e.MANAPHY,e.DARKRAI,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.CRYOGONAL,e.ZEKROM,e.GRENINJA,e.SKRELP,e.DRAGALGE,e.AMAURA,e.AURORUS,e.TREVENANT,e.ZYGARDE,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PRIMARINA,e.MAREANIE,e.TOXAPEX,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.RUNERIGUS,e.SPECTRIER,e.OVERQWIL,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CLODSIRE,e.CHIEN_PAO,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_CORSOLA,e.GALAR_YAMASK,[e.CALYREX,"shadow"],e.HISUI_QWILFISH,e.HISUI_DECIDUEYE,e.PALDEA_WOOPER],[t.REFLECT]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.PIKACHU,e.RAICHU,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.GROWLITHE,e.ARCANINE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SHELLDER,e.CLOYSTER,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CHANSEY,e.TANGELA,e.STARYU,e.STARMIE,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.ESPEON,e.UMBREON,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.SNUBBULL,e.GRANBULL,e.SNEASEL,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.STANTLER,e.SMOOCHUM,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LUGIA,e.HO_OH,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.CHIMECHO,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BASTIODON,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.WEAVILE,e.MAGNEZONE,e.TANGROWTH,e.ELECTIVIRE,e.TOGEKISS,e.MAMOSWINE,e.GALLADE,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.MANAPHY,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.LEAVANNY,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.CRYOGONAL,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.KELDEO,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.DELPHOX,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.INKAY,e.MALAMAR,e.AMAURA,e.AURORUS,e.SYLVEON,e.CARBINK,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.XERNEAS,e.DIANCIE,e.HOOPA,e.PRIMARINA,e.CUTIEFLY,e.RIBOMBEE,e.ARAQUANID,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.ORANGURU,e.PYUKUMUKU,e.MINIOR,e.TOGEDEMARU,e.BRUXISH,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.XURKITREE,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.CURSOLA,e.MR_RIME,e.FROSMOTH,e.EISCUE,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.ZAMAZENTA,e.ETERNATUS,e.REGIELEKI,e.REGIDRAGO,e.CALYREX,e.WYRDEER,e.ARBOLIVA,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.TOEDSCOOL,e.TOEDSCRUEL,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.GLIMMET,e.GLIMMORA,e.FARIGIRAF,e.SCREAM_TAIL,e.SANDY_SHOCKS,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHI_YU,e.IRON_VALIANT,e.MIRAIDON,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.ARCHALUDON,e.HYDRAPPLE,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_EXEGGUTOR,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_CORSOLA,[e.INDEEDEE,"female"],e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.FOCUS_ENERGY]:[e.BEEDRILL,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.MANKEY,e.PRIMEAPE,e.MACHOP,e.MACHOKE,e.MACHAMP,e.FARFETCHD,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.SCYTHER,e.MAGMAR,e.PINSIR,e.TAUROS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.MEW,e.SENTRET,e.FURRET,e.ARIADOS,e.ESPEON,e.UMBREON,e.SCIZOR,e.TEDDIURSA,e.REMORAID,e.OCTILLERY,e.KINGDRA,e.PHANPY,e.TYROGUE,e.HITMONTOP,e.MAGBY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.TAILLOW,e.SWELLOW,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.CARVANHA,e.SHARPEDO,e.NUMEL,e.CAMERUPT,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.KRICKETUNE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.DRIFLOON,e.DRIFBLIM,e.STUNKY,e.SKUNTANK,e.LUCARIO,e.MAGMORTAR,e.LEAFEON,e.GLACEON,e.VICTINI,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.AXEW,e.FRAXURE,e.HAXORUS,e.MIENFOO,e.MIENSHAO,e.BOUFFALANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.PANGORO,e.SYLVEON,e.VOLCANION,e.PASSIMIAN,e.BUZZWOLE,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.BOLTUND,e.FLAPPLE,e.ARROKUDA,e.BARRASKEWDA,e.GRIMMSNARL,e.OBSTAGOON,e.SIRFETCHD,e.FALINKS,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.REGIDRAGO,e.KLEAVOR,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.FINIZEN,e.PALAFIN,e.FLAMIGO,e.VELUZA,e.ANNIHILAPE,e.IRON_HANDS,e.IRON_JUGULIS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ROARING_MOON,e.OGERPON,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.PIKACHU,e.ALOLA_MAROWAK,[e.LYCANROC,"dusk"],e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_SAMUROTT],[t.METRONOME]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.GRIMER,e.MUK,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.HITMONLEE,e.HITMONCHAN,e.CHANSEY,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.CLEFFA,e.TOGEPI,e.TOGETIC,e.MARILL,e.AZUMARILL,e.POLITOED,e.AIPOM,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.TEDDIURSA,e.URSARING,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.CELEBI,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.SWALOT,e.GRUMPIG,e.SPINDA,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSCLOPS,e.JIRACHI,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.FLOATZEL,e.AMBIPOM,e.HAPPINY,e.MUNCHLAX,e.LUCARIO,e.WEAVILE,e.TOGEKISS,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.GOTHORITA,e.GOTHITELLE,e.TORNADUS,e.MELOETTA,e.DELPHOX,e.FLOETTE,e.FLORGES,e.AROMATISSE,e.SLURPUFF,e.DIANCIE,e.INTELEON,e.TOXTRICITY,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.MR_RIME,e.ALCREMIE,e.INDEEDEE,e.CALYREX,e.URSALUNA,e.PAWMOT,e.ARBOLIVA,e.SHROODLE,e.GRAFAIAI,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.ANNIHILAPE,e.SCREAM_TAIL,e.IRON_HANDS,e.IRON_VALIANT,e.MUNKIDORI,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.HISUI_LILLIGANT],[t.SELF_DESTRUCT]:[e.JIGGLYPUFF,e.WIGGLYTUFF,e.GEODUDE,e.GRAVELER,e.GOLEM,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.KOFFING,e.WEEZING,e.SNORLAX,e.MEWTWO,e.MEW,e.SUDOWOODO,e.PINECO,e.FORRETRESS,e.STEELIX,e.QWILFISH,e.SLUGMA,e.MAGCARGO,e.CORSOLA,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.NOSEPASS,e.GULPIN,e.SWALOT,e.WAILMER,e.WAILORD,e.CAMERUPT,e.TORKOAL,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.GLALIE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.DRIFLOON,e.DRIFBLIM,e.BONSLY,e.MUNCHLAX,e.MAGNEZONE,e.LICKILICKY,e.AZELF,e.HEATRAN,e.GIGALITH,e.TRUBBISH,e.GARBODOR,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FERROSEED,e.FERROTHORN,e.CRYOGONAL,e.GOLETT,e.GOLURK,e.LANDORUS,e.GENESECT,e.VOLCANION,e.SILVALLY,e.MINIOR,e.CELESTEELA,e.MAGEARNA,e.BLACEPHALON,e.MELMETAL,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.POLTEAGEIST,e.CURSOLA,e.PINCURCHIN,e.STONJOURNER,e.REGIELEKI,e.REGIDRAGO,e.VAROOM,e.GLIMMET,e.GLIMMORA,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.GALAR_WEEZING,e.GALAR_CORSOLA,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_QWILFISH],[t.FIRE_BLAST]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GROWLITHE,e.ARCANINE,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MAGMAR,e.TAUROS,e.GYARADOS,e.FLAREON,e.AERODACTYL,e.SNORLAX,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.SLOWKING,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.SLUGMA,e.MAGCARGO,e.REMORAID,e.OCTILLERY,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.BLISSEY,e.ENTEI,e.TYRANITAR,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAWILE,e.AGGRON,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.FLYGON,e.ALTARIA,e.ZANGOOSE,e.SOLROCK,e.CASTFORM,e.KECLEON,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.GROUDON,e.RAYQUAZA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.STUNKY,e.SKUNTANK,e.HAPPINY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.LICKILICKY,e.RHYPERIOR,e.MAGMORTAR,e.TOGEKISS,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.AUDINO,e.DARUMAKA,e.DARMANITAN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.HEATMOR,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.RESHIRAM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.GOODRA,e.PUMPKABOO,e.GOURGEIST,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SALANDIT,e.SALAZZLE,e.TURTONATOR,e.DRAMPA,e.SOLGALEO,e.CELESTEELA,e.GUZZLORD,e.NAGANADEL,e.BLACEPHALON,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.CARKOL,e.COALOSSAL,e.CENTISKORCH,e.DRACOZOLT,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.SCOVILLAIN,e.DUDUNSPARCE,e.SCREAM_TAIL,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.GOUGING_FIRE,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_GOODRA,[e.PALDEA_TAUROS,"blaze"]],[t.WATERFALL]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.REMORAID,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.SUICUNE,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.AZURILL,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.FINNEON,e.LUMINEON,e.MANTYKE,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.DEWPIDER,e.ARAQUANID,e.WIMPOD,e.GOLISOPOD,e.BRUXISH,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.ARROKUDA,e.BARRASKEWDA,e.CLOBBOPUS,e.GRAPPLOCT,e.EISCUE,e.DRACOVISH,e.ARCTOVISH,e.BASCULEGION,e.OVERQWIL,e.FINIZEN,e.PALAFIN,e.VELUZA,e.DONDOZO,e.CLODSIRE,e.WALKING_WAKE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,[e.URSHIFU,"rapid-strike"],e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.PALDEA_WOOPER],[t.SWIFT]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.VENONAT,e.VENOMOTH,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.WEEPINBELL,e.VICTREEBEL,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.MUK,e.SHELLDER,e.CLOYSTER,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.CHANSEY,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.SCYTHER,e.ELECTABUZZ,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.POLITOED,e.AIPOM,e.YANMA,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.GLIGAR,e.QWILFISH,e.SCIZOR,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.ELEKID,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.NINJASK,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.SKITTY,e.DELCATTY,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.CARVANHA,e.SHARPEDO,e.SPOINK,e.GRUMPIG,e.SPINDA,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.CHIMECHO,e.ABSOL,e.HUNTAIL,e.GOREBYSS,e.LUVDISC,e.SALAMENCE,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,[e.DEOXYS,"","speed"],e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.CHATOT,e.GIBLE,e.GABITE,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.FINNEON,e.LUMINEON,e.MANTYKE,e.WEAVILE,e.MAGNEZONE,e.ELECTIVIRE,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.COTTONEE,e.WHIMSICOTT,e.BASCULIN,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.DUCKLETT,e.SWANNA,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.COBALION,e.TERRAKION,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.HELIOPTILE,e.HELIOLISK,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.KLEFKI,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.LYCANROC,e.SALANDIT,e.SALAZZLE,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.ORANGURU,e.WIMPOD,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.TOGEDEMARU,e.DRAMPA,e.TAPU_KOKO,e.SOLGALEO,e.LUNALA,e.PHEROMOSA,e.MAGEARNA,e.MARSHADOW,e.NAGANADEL,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.YAMPER,e.BOLTUND,e.ARROKUDA,e.BARRASKEWDA,e.TOXTRICITY,e.HATENNA,e.HATTREM,e.HATTERENE,e.OBSTAGOON,e.PINCURCHIN,e.FROSMOTH,e.INDEEDEE,e.MORPEKO,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.TOEDSCOOL,e.TOEDSCRUEL,e.FLITTLE,e.ESPATHRA,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.ANNIHILAPE,e.FARIGIRAF,e.FLUTTER_MANE,e.SANDY_SHOCKS,e.IRON_BUNDLE,e.IRON_MOTH,e.IRON_VALIANT,e.WALKING_WAKE,e.IRON_LEAVES,e.MUNKIDORI,e.FEZANDIPITI,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.AMNESIA]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.SLOWPOKE,e.SLOWBRO,e.KRABBY,e.KINGLER,e.LICKITUNG,e.TANGELA,e.SNORLAX,e.MEWTWO,e.MEW,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.CHINCHOU,e.LANTURN,e.CLEFFA,e.MARILL,e.AZUMARILL,e.POLITOED,e.HOPPIP,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.WOBBUFFET,e.GIRAFARIG,e.DUNSPARCE,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.MANTINE,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.GULPIN,e.SWALOT,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.BARBOACH,e.WHISCASH,e.LILEEP,e.CRADILY,e.CASTFORM,e.WYNAUT,e.GOREBYSS,e.RELICANTH,e.REGICE,e.REGISTEEL,e.JIRACHI,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BIDOOF,e.BIBAREL,e.SHELLOS,e.GASTRODON,e.DRIFLOON,e.DRIFBLIM,e.MUNCHLAX,e.HIPPOPOTAS,e.HIPPOWDON,e.MANTYKE,e.LICKILICKY,e.TANGROWTH,e.TOGEKISS,e.MAMOSWINE,e.UXIE,e.PANSEAR,e.SIMISEAR,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SCRAGGY,e.SCRAFTY,e.TRUBBISH,e.GARBODOR,e.BOUFFALANT,e.HEATMOR,e.LARVESTA,e.VOLCARONA,e.SWIRLIX,e.SLURPUFF,e.DIANCIE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CRABRAWLER,e.CRABOMINABLE,e.MORELULL,e.SHIINOTIC,e.COMFEY,e.SANDYGAST,e.PALOSSAND,e.DRAMPA,e.GUZZLORD,e.SKWOVET,e.GREEDENT,e.APPLETUN,e.CRAMORANT,e.PERRSERKER,e.CURSOLA,e.RUNERIGUS,e.EISCUE,e.CETODDLE,e.CETITAN,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,[e.DEOXYS,"defense"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.PALDEA_WOOPER],[t.DREAM_EATER]:[e.BUTTERFREE,e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.VENOMOTH,e.MEOWTH,e.PERSIAN,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.LICKITUNG,e.CHANSEY,e.STARMIE,e.MR_MIME,e.JYNX,e.LAPRAS,e.PORYGON,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.AIPOM,e.YANMA,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.GLIGAR,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.BLISSEY,e.LUGIA,e.HO_OH,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHEDINJA,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.GULPIN,e.SWALOT,e.SPOINK,e.GRUMPIG,e.SPINDA,e.SWABLU,e.ALTARIA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.WORMADAM,e.MOTHIM,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.WEAVILE,e.LICKILICKY,e.TOGEKISS,e.YANMEGA,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.GIRATINA,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.VIVILLON,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.AMAURA,e.AURORUS,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.HOOPA,e.CUTIEFLY,e.RIBOMBEE,e.MORELULL,e.SHIINOTIC,e.ORANGURU,e.MIMIKYU,e.BRUXISH,e.LUNALA,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.MAROWAK,e.GALAR_ARTICUNO],[t.LEECH_LIFE]:[e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.ZUBAT,e.GOLBAT,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.KABUTO,e.KABUTOPS,e.MEW,e.SPINARAK,e.ARIADOS,e.CROBAT,e.YANMA,e.BEAUTIFLY,e.DUSTOX,e.SURSKIT,e.MASQUERAIN,e.NINCADA,e.NINJASK,e.SHEDINJA,e.DUSKULL,e.DUSCLOPS,e.KRICKETUNE,e.DRAPION,e.YANMEGA,e.DUSKNOIR,e.JOLTIK,e.GALVANTULA,e.SHELMET,e.ACCELGOR,e.LARVESTA,e.VOLCARONA,e.GENESECT,e.NOIBAT,e.NOIVERN,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.CUTIEFLY,e.RIBOMBEE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.WIMPOD,e.GOLISOPOD,e.MIMIKYU,e.BUZZWOLE,e.NAGANADEL,e.DOTTLER,e.ORBEETLE,e.SIZZLIPEDE,e.CENTISKORCH,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.CURSOLA,e.FROSMOTH,e.DRACOVISH,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.RELLOR,e.RABSCA,e.SLITHER_WING,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH],[t.FLASH]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BUTTERFREE,e.BEEDRILL,e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.KOFFING,e.WEEZING,e.CHANSEY,e.TANGELA,e.STARYU,e.STARMIE,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.JOLTEON,e.PORYGON,e.ZAPDOS,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.SHUCKLE,e.SKARMORY,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.ELEKID,e.BLISSEY,e.RAIKOU,e.ENTEI,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.SPOINK,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.CHERUBI,e.CHERRIM,e.GASTRODON,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.SKORUPI,e.DRAPION,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.SNOVER,e.ABOMASNOW,e.MAGNEZONE,e.TANGROWTH,e.ELECTIVIRE,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.CRESSELIA,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.WATCHOG,e.PANSAGE,e.SIMISAGE,e.MUNNA,e.MUSHARNA,e.BLITZLE,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.STUNFISK,e.GOLETT,e.GOLURK,e.VIRIZION,e.ZEKROM,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.HELIOPTILE,e.HELIOLISK,e.AMAURA,e.AURORUS,e.SYLVEON,e.DEDENNE,e.CARBINK,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.XERNEAS,e.DIANCIE,e.HOOPA,e.MORELULL,e.SHIINOTIC,e.PERRSERKER,e.MR_RIME,e.RUNERIGUS,e.WYRDEER,e.CLODSIRE,e.FARIGIRAF,e.ALOLA_RAICHU,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_YAMASK,e.HISUI_LILLIGANT,e.HISUI_AVALUGG,e.PALDEA_WOOPER],[t.EXPLOSION]:[e.GEODUDE,e.GRAVELER,e.GOLEM,e.MAGNEMITE,e.MAGNETON,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.KOFFING,e.WEEZING,e.MEW,e.SUDOWOODO,e.PINECO,e.FORRETRESS,e.STEELIX,e.QWILFISH,e.MAGCARGO,e.CORSOLA,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.NOSEPASS,e.GULPIN,e.SWALOT,e.CAMERUPT,e.TORKOAL,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.GLALIE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.DRIFLOON,e.DRIFBLIM,e.STUNKY,e.SKUNTANK,e.BRONZONG,e.BONSLY,e.MAGNEZONE,e.LICKILICKY,e.PROBOPASS,e.AZELF,e.HEATRAN,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.TRUBBISH,e.GARBODOR,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FERROSEED,e.FERROTHORN,e.CRYOGONAL,e.LANDORUS,e.GENESECT,e.CARBINK,e.PUMPKABOO,e.GOURGEIST,e.DIANCIE,e.VOLCANION,e.SILVALLY,e.MINIOR,e.TURTONATOR,e.CELESTEELA,e.MAGEARNA,e.BLACEPHALON,e.ROLYCOLY,e.REGIELEKI,e.REGIDRAGO,e.GARGANACL,e.GLIMMET,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.GALAR_WEEZING,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.REST]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.ROCK_SLIDE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.GRIMER,e.MUK,e.ONIX,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.PINSIR,e.TAUROS,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.GRANBULL,e.SHUCKLE,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.MANTINE,e.SKARMORY,e.PHANPY,e.DONPHAN,e.TYROGUE,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.ZANGOOSE,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.KECLEON,e.DUSCLOPS,e.ABSOL,e.SPHEAL,e.SEALEO,e.WALREIN,e.RELICANTH,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.EMPOLEON,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.SHELLOS,e.GASTRODON,e.BRONZOR,e.BRONZONG,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.MANTYKE,e.ABOMASNOW,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.DARKRAI,e.ARCEUS,e.PIGNITE,e.EMBOAR,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.DURANT,e.HYDREIGON,e.TERRAKION,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.HAWLUCHA,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.VOLCANION,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.SOLGALEO,e.NIHILEGO,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.STAKATAKA,e.MELMETAL,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.FALINKS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.URSHIFU,e.ZARUDE,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.BOMBIRDIER,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.DONDOZO,e.ANNIHILAPE,e.CLODSIRE,e.DUDUNSPARCE,e.GREAT_TUSK,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.TING_LU,e.ROARING_MOON,e.ARCHALUDON,e.TERAPAGOS,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_CORSOLA,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.TRI_ATTACK]:[e.SPEAROW,e.FEAROW,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DUGTRIO,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.MAGNETON,e.DODUO,e.DODRIO,e.SHELLDER,e.CLOYSTER,e.DROWZEE,e.HYPNO,e.CHANSEY,e.STARYU,e.STARMIE,e.PORYGON,e.MEWTWO,e.MEW,e.TOGEPI,e.TOGETIC,e.SLOWKING,e.PORYGON2,e.BLISSEY,e.LATIAS,e.LATIOS,e.MAGNEZONE,e.TOGEKISS,e.PORYGON_Z,e.PROBOPASS,e.UXIE,e.MESPRIT,e.AZELF,e.BEHEEYEM,e.HYDREIGON,e.GENESECT,e.TYPE_NULL,e.SILVALLY,e.MAGEARNA,e.ALCREMIE,e.INDEEDEE,e.DRAGAPULT,e.CALYREX,e.SANDY_SHOCKS,e.IRON_JUGULIS,e.ALOLA_DUGTRIO,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING],[t.SUPER_FANG]:[e.RATTATA,e.RATICATE,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.ZUBAT,e.GOLBAT,e.MEW,e.SENTRET,e.FURRET,e.CROBAT,e.SNUBBULL,e.GRANBULL,e.HOUNDOUR,e.HOUNDOOM,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.MAWILE,e.PLUSLE,e.MINUN,e.CARVANHA,e.SHARPEDO,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.HUNTAIL,e.BIDOOF,e.BIBAREL,e.PACHIRISU,e.GLAMEOW,e.PURUGLY,e.SKUNTANK,e.CROAGUNK,e.TOXICROAK,e.PATRAT,e.WATCHOG,e.WOOBAT,e.SWOOBAT,e.SCRAGGY,e.SCRAFTY,e.MINCCINO,e.CINCCINO,e.EELEKTRIK,e.EELEKTROSS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.DEDENNE,e.NOIBAT,e.NOIVERN,e.YUNGOOS,e.GUMSHOOS,e.KOMALA,e.TOGEDEMARU,e.BRUXISH,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SKWOVET,e.GREEDENT,e.DREDNAW,e.MORPEKO,e.DRACOVISH,e.ARCTOVISH,e.LECHONK,e.OINKOLOGNE,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.SHROODLE,e.GRAFAIAI,e.CAPSAKID,e.SCOVILLAIN,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH],[t.SUBSTITUTE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.THIEF]:[e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.MEW,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.NATU,e.XATU,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.YANMA,e.QUAGSIRE,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.GLIGAR,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.BLISSEY,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINJASK,e.SHEDINJA,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.SPOINK,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.BONSLY,e.MIME_JR,e.CHATOT,e.SPIRITOMB,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.YANMEGA,e.GLISCOR,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.ROTOM,e.DARKRAI,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.WOOBAT,e.SWOOBAT,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.WHIMSICOTT,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.JOLTIK,e.GALVANTULA,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.CUBCHOO,e.BEARTIC,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.PANGORO,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HAWLUCHA,e.DEDENNE,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.HOOPA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.CUTIEFLY,e.RIBOMBEE,e.SALANDIT,e.SALAZZLE,e.COMFEY,e.PASSIMIAN,e.KOMALA,e.TOGEDEMARU,e.MIMIKYU,e.DHELMISE,e.TAPU_KOKO,e.TAPU_LELE,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.NAGANADEL,e.BLACEPHALON,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.CRAMORANT,e.TOXTRICITY,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.MR_RIME,e.RUNERIGUS,e.MORPEKO,e.DRAKLOAK,e.DRAGAPULT,e.ZARUDE,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.MEOWSCARADA,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.SQUAWKABILLY,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.BOMBIRDIER,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.BRUTE_BONNET,e.IRON_BUNDLE,e.GIMMIGHOUL,e.GHOLDENGO,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_MOLTRES,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.PALDEA_TAUROS,e.BLOODMOON_URSALUNA],[t.SNORE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.CATERPIE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.WURMPLE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETOT,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BURMY,e.WORMADAM,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.URSALUNA,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK],[t.CURSE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.HARIYAMA,e.NOSEPASS,e.GULPIN,e.SWALOT,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.WHISCASH,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.REGIROCK,e.REGICE,e.REGISTEEL,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.BONSLY,e.SPIRITOMB,e.MUNCHLAX,e.HIPPOPOTAS,e.HIPPOWDON,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.GIRATINA,e.DARKRAI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.SAWSBUCK,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.BEARTIC,e.GOLETT,e.GOLURK,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.SYLVEON,e.GOOMY,e.SLIGGOO,e.GOODRA,e.PHANTUMP,e.TREVENANT,e.BERGMITE,e.AVALUGG,e.DECIDUEYE,e.GUMSHOOS,e.MUDBRAY,e.MUDSDALE,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.KOMALA,e.MIMIKYU,e.SKWOVET,e.GREEDENT,e.CORVIKNIGHT,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.SINISTEA,e.POLTEAGEIST,e.PERRSERKER,e.PINCURCHIN,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.GLASTRIER,e.SPECTRIER,[e.CALYREX,"ice","shadow"],e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.OVERQWIL,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CERULEDGE,e.MABOSSTIFF,e.BRAMBLIN,e.BRAMBLEGHAST,e.BOMBIRDIER,e.VAROOM,e.REVAVROOM,e.ORTHWORM,e.CETODDLE,e.CETITAN,e.DONDOZO,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.SLITHER_WING,e.IRON_THORNS,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.HYDRAPPLE,e.PECHARUNT,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER],[t.REVERSAL]:[e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.HITMONLEE,e.HITMONCHAN,e.RHYHORN,e.RHYDON,e.KANGASKHAN,e.SCYTHER,e.PINSIR,e.TAUROS,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SENTRET,e.FURRET,e.PICHU,e.YANMA,e.PINECO,e.FORRETRESS,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.SWINUB,e.PILOSWINE,e.DELIBIRD,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.HITMONTOP,e.MILTANK,e.ENTEI,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ZANGOOSE,e.SEVIPER,e.MONFERNO,e.INFERNAPE,e.VESPIQUEN,e.LOPUNNY,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.RHYPERIOR,e.YANMEGA,e.MAMOSWINE,e.GALLADE,e.VICTINI,e.PIGNITE,e.EMBOAR,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.BASCULIN,e.DARMANITAN,e.SCRAFTY,e.ESCAVALIER,e.AXEW,e.FRAXURE,e.HAXORUS,e.BEARTIC,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.BISHARP,e.BOUFFALANT,e.BRAVIARY,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.KELDEO,e.MELOETTA,e.CHESNAUGHT,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.MALAMAR,e.HAWLUCHA,e.ZYGARDE,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,[e.LYCANROC,"midnight","dusk"],e.BEWEAR,e.PASSIMIAN,e.SILVALLY,e.KOMALA,e.TOGEDEMARU,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.BUZZWOLE,e.MARSHADOW,e.ZERAORA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.WOOLOO,e.DUBWOOL,e.CRAMORANT,e.CLOBBOPUS,e.GRAPPLOCT,e.OBSTAGOON,e.FALINKS,e.PINCURCHIN,e.EISCUE,e.MORPEKO,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.REGIDRAGO,e.KLEAVOR,e.SNEASLER,e.OVERQWIL,e.QUAQUAVAL,e.SPIDOPS,e.LOKIX,e.SQUAWKABILLY,e.MASCHIFF,e.MABOSSTIFF,e.KLAWF,e.PALAFIN,e.FLAMIGO,e.ANNIHILAPE,e.KINGAMBIT,e.GREAT_TUSK,e.SLITHER_WING,e.IRON_HANDS,e.IRON_VALIANT,e.KORAIDON,e.IRON_LEAVES,e.OKIDOGI,e.OGERPON,e.GOUGING_FIRE,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,[e.LYCANROC,"midnight","dusk"],e.GALAR_ZAPDOS,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS],[t.SPITE]:[e.EKANS,e.ARBOK,e.VULPIX,e.NINETALES,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.KANGASKHAN,e.TAUROS,e.GYARADOS,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.HOOTHOOT,e.NOCTOWL,e.SPINARAK,e.ARIADOS,e.AIPOM,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.DUNSPARCE,e.QWILFISH,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.STANTLER,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.CACNEA,e.CACTURNE,e.CORPHISH,e.CRAWDAUNT,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.ABSOL,e.SNORUNT,e.GLALIE,e.CRANIDOS,e.RAMPARDOS,e.VESPIQUEN,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.SPIRITOMB,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.RHYPERIOR,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.GIRATINA,e.DARKRAI,e.PURRLOIN,e.LIEPARD,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.FRILLISH,e.JELLICENT,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.STUNFISK,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.INKAY,e.MALAMAR,e.SKRELP,e.DRAGALGE,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ZYGARDE,e.DECIDUEYE,e.MAREANIE,e.TOXAPEX,e.ORANGURU,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.MIMIKYU,e.DHELMISE,e.LUNALA,e.NIHILEGO,e.BLACEPHALON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.SINISTEA,e.POLTEAGEIST,e.PERRSERKER,e.CURSOLA,e.MORPEKO,e.WYRDEER,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.LOKIX,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.MABOSSTIFF,e.BRAMBLIN,e.BRAMBLEGHAST,e.ANNIHILAPE,e.DUDUNSPARCE,e.KINGAMBIT,e.FLUTTER_MANE,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.PECHARUNT,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.MAROWAK,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MOLTRES,e.GALAR_CORSOLA,e.GALAR_STUNFISK,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.PROTECT]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BURMY,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.SPEWPA,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.SCARY_FACE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.RATICATE,e.SPEAROW,e.EKANS,e.ARBOK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.VICTREEBEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.GRIMER,e.MUK,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.HYPNO,e.ELECTRODE,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.SCYTHER,e.MAGMAR,e.TAUROS,e.GYARADOS,e.FLAREON,e.AERODACTYL,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.NOCTOWL,e.SPINARAK,e.ARIADOS,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SNEASEL,e.URSARING,e.SWINUB,e.PILOSWINE,e.HOUNDOUR,e.HOUNDOOM,e.DONPHAN,e.STANTLER,e.MAGBY,e.ENTEI,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.MASQUERAIN,e.VIGOROTH,e.SLAKING,e.HARIYAMA,e.AGGRON,e.MANECTRIC,e.CARVANHA,e.SHARPEDO,e.NUMEL,e.CAMERUPT,e.CACNEA,e.CACTURNE,e.SEVIPER,e.WHISCASH,e.CRAWDAUNT,e.SHUPPET,e.BANETTE,e.GLALIE,e.HUNTAIL,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.VESPIQUEN,e.FLOATZEL,e.MISMAGIUS,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.RHYPERIOR,e.MAGMORTAR,e.YANMEGA,e.GLISCOR,e.MAMOSWINE,e.FROSLASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.GIRATINA,e.CRESSELIA,e.ARCEUS,e.SAMUROTT,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.COFAGRIGUS,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.KARRABLAST,e.ESCAVALIER,e.AMOONGUSS,e.EELEKTRIK,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.BEARTIC,e.CRYOGONAL,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.KYUREM,e.CHESNAUGHT,e.PANGORO,e.MALAMAR,e.SKRELP,e.DRAGALGE,e.CLAWITZER,e.TYRUNT,e.TYRANTRUM,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.AVALUGG,e.NOIVERN,e.HOOPA,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.TOXAPEX,e.MUDSDALE,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.BRUXISH,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.SOLGALEO,e.LUNALA,e.NECROZMA,e.ZERAORA,e.THWACKEY,e.RILLABOOM,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CHEWTLE,e.DREDNAW,e.FLAPPLE,e.SILICOBRA,e.SANDACONDA,e.BARRASKEWDA,e.TOXTRICITY,e.GRAPPLOCT,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.RUNERIGUS,e.MORPEKO,e.COPPERAJAH,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.OVERQWIL,e.ENAMORUS,e.SKELEDIRGE,e.SPIDOPS,e.LOKIX,e.DACHSBUN,e.SQUAWKABILLY,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.SCOVILLAIN,e.BOMBIRDIER,e.VAROOM,e.REVAVROOM,e.GREAVARD,e.HOUNDSTONE,e.DONDOZO,e.ANNIHILAPE,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.IRON_TREADS,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_THORNS,e.ARCTIBAX,e.BAXCALIBUR,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.OKIDOGI,e.OGERPON,e.ARCHALUDON,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.ALOLA_RATICATE,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_ELECTRODE,e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.BLOODMOON_URSALUNA],[t.SLUDGE_BOMB]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BEEDRILL,e.RATTATA,e.RATICATE,e.EKANS,e.ARBOK,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.EXEGGCUTE,e.EXEGGUTOR,e.KOFFING,e.WEEZING,e.TANGELA,e.MEW,e.SPINARAK,e.ARIADOS,e.CROBAT,e.BELLOSSOM,e.SUNKERN,e.SUNFLORA,e.WOOPER,e.QUAGSIRE,e.GLIGAR,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SHUCKLE,e.OCTILLERY,e.HOUNDOUR,e.HOUNDOOM,e.DUSTOX,e.SHROOMISH,e.BRELOOM,e.MAWILE,e.ROSELIA,e.GULPIN,e.SWALOT,e.TORKOAL,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.LILEEP,e.CRADILY,e.METANG,e.METAGROSS,e.BUDEW,e.ROSERADE,e.VESPIQUEN,e.GASTRODON,e.STUNKY,e.SKUNTANK,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.TANGROWTH,e.GLISCOR,e.DARKRAI,e.ARCEUS,e.DRILBUR,e.EXCADRILL,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.DRUDDIGON,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.GOOMY,e.SLIGGOO,e.GOODRA,e.PUMPKABOO,e.GOURGEIST,e.VOLCANION,e.MAREANIE,e.TOXAPEX,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.NIHILEGO,e.GUZZLORD,e.POIPOLE,e.NAGANADEL,e.TOXTRICITY,e.ETERNATUS,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.RELLOR,e.RABSCA,e.VAROOM,e.REVAVROOM,e.GLIMMET,e.GLIMMORA,e.CLODSIRE,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_STUNFISK,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.PALDEA_WOOPER],[t.MUD_SLAP]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWPOKE,e.SLOWBRO,e.FARFETCHD,e.DODUO,e.DODRIO,e.GRIMER,e.MUK,e.ONIX,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.GOLDEEN,e.SEAKING,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.GIRAFARIG,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SHUCKLE,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.MILOTIC,e.KECLEON,e.BANETTE,e.DUSCLOPS,e.TROPIUS,e.ABSOL,e.SPHEAL,e.SEALEO,e.WALREIN,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.BAGON,e.SHELGON,e.SALAMENCE,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETOT,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.LILLIPUP,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.TYMPOLE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.MINCCINO,e.CUBCHOO,e.BEARTIC,e.SHELMET,e.STUNFISK,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.LANDORUS,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,[e.LYCANROC,"midday","midnight"],e.MUDBRAY,e.MUDSDALE,e.SALANDIT,e.SALAZZLE,e.SANDYGAST,e.PALOSSAND,e.CINDERACE,e.SKWOVET,e.GREEDENT,e.ROLYCOLY,e.CARKOL,e.SILICOBRA,e.SANDACONDA,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.TADBULB,e.BELLIBOLT,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.WIGLETT,e.WUGTRIO,e.CYCLIZAR,e.ORTHWORM,e.GREAVARD,e.HOUNDSTONE,e.CLODSIRE,e.DUDUNSPARCE,e.GREAT_TUSK,e.IRON_TREADS,e.WO_CHIEN,e.TING_LU,e.KORAIDON,e.MUNKIDORI,[e.WORMADAM,"sandy"],e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_STUNFISK,e.PALDEA_WOOPER],[t.SPIKES]:[e.SANDSHREW,e.SANDSLASH,e.SHELLDER,e.CLOYSTER,e.OMANYTE,e.OMASTAR,e.MEW,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.PINECO,e.FORRETRESS,e.GLIGAR,e.QWILFISH,e.HERACROSS,e.DELIBIRD,e.SKARMORY,e.ROSELIA,e.CACNEA,e.CACTURNE,e.WHISCASH,e.SNORUNT,e.GLALIE,e.GROUDON,e.BUDEW,e.ROSERADE,e.VESPIQUEN,e.GASTRODON,e.BONSLY,e.GARCHOMP,e.GLISCOR,e.FROSLASS,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.TRUBBISH,e.GARBODOR,e.FERROSEED,e.FERROTHORN,e.SHELMET,e.ACCELGOR,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.CARBINK,e.KLEFKI,e.DIANCIE,e.WIMPOD,e.GOLISOPOD,e.MAGEARNA,e.NAGANADEL,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.PINCURCHIN,e.OVERQWIL,e.MEOWSCARADA,e.TAROUNTULA,e.SPIDOPS,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.CLODSIRE,e.SANDY_SHOCKS,e.IRON_THORNS,e.TING_LU,e.OGERPON,[e.DEOXYS,"defense"],e.ALOLA_SANDSLASH,e.HISUI_QWILFISH,e.PALDEA_WOOPER],[t.ICY_WIND]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.JYNX,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.ARTICUNO,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.CLEFFA,e.IGGLYBUFF,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.QWILFISH,e.SNEASEL,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.KINGDRA,e.PORYGON2,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SHIFTRY,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.AZURILL,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.SPOINK,e.GRUMPIG,e.SPINDA,e.ZANGOOSE,e.LUNATONE,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.METANG,e.METAGROSS,e.REGICE,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.JIRACHI,[e.DEOXYS,"","speed"],e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.MUNCHLAX,e.CROAGUNK,e.TOXICROAK,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.GLACEON,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.SIGILYPH,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.GOLETT,e.GOLURK,e.TORNADUS,e.KYUREM,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.BERGMITE,e.AVALUGG,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CRABOMINABLE,e.ORICORIO,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.BRUXISH,e.DRAMPA,e.TAPU_FINI,e.LUNALA,e.PHEROMOSA,e.INTELEON,e.CRAMORANT,e.OBSTAGOON,e.CURSOLA,e.MR_RIME,e.SNOM,e.FROSMOTH,e.EISCUE,e.ARCTOZOLT,e.ARCTOVISH,e.GLASTRIER,e.BASCULEGION,e.OVERQWIL,e.QUAQUAVAL,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.CETODDLE,e.CETITAN,e.VELUZA,e.TATSUGIRI,e.FLUTTER_MANE,e.IRON_BUNDLE,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.IRON_VALIANT,e.FEZANDIPITI,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,[e.CALYREX,"ice"],e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_AVALUGG],[t.OUTRAGE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BEEDRILL,e.NIDOQUEEN,e.NIDOKING,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.MAROWAK,e.RHYDON,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.MEGANIUM,e.FERALIGATR,e.AMPHAROS,e.GRANBULL,e.KINGDRA,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.SCEPTILE,e.SWAMPERT,e.VIGOROTH,e.SLAKING,e.EXPLOUD,e.AGGRON,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.BARBOACH,e.WHISCASH,e.TROPIUS,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.TORTERRA,e.RAMPARDOS,e.BASTIODON,e.GIBLE,e.GABITE,e.GARCHOMP,e.ABOMASNOW,e.RHYPERIOR,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.SERPERIOR,e.KROOKODILE,e.SCRAFTY,e.ARCHEOPS,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.BOUFFALANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.PANGORO,e.SKRELP,e.DRAGALGE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.GOOMY,e.SLIGGOO,e.GOODRA,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.ZYGARDE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SILVALLY,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.SOLGALEO,e.BUZZWOLE,e.PHEROMOSA,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.NAGANADEL,e.ZERAORA,e.FLAPPLE,e.APPLETUN,e.SANDACONDA,e.MORPEKO,e.COPPERAJAH,e.DRACOZOLT,e.DRACOVISH,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.REGIDRAGO,e.GLASTRIER,e.BASCULEGION,e.ENAMORUS,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.MABOSSTIFF,e.PALAFIN,e.CYCLIZAR,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.DUDUNSPARCE,e.BRUTE_BONNET,e.IRON_JUGULIS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.DIPPLIN,e.OKIDOGI,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight","dusk"],[e.CALYREX,"ice"],e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.PALDEA_TAUROS],[t.SANDSTORM]:[e.CHARIZARD,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DIGLETT,e.DUGTRIO,e.GEODUDE,e.GRAVELER,e.GOLEM,e.MAGNEMITE,e.MAGNETON,e.GRIMER,e.MUK,e.ONIX,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.TAUROS,e.GYARADOS,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEWTWO,e.MEW,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SCIZOR,e.SHUCKLE,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.SKARMORY,e.PHANPY,e.DONPHAN,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.NINCADA,e.NINJASK,e.SHEDINJA,e.NOSEPASS,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.CASTFORM,e.ABSOL,e.RELICANTH,e.METANG,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.TORTERRA,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.SHELLOS,e.GASTRODON,e.BRONZOR,e.BRONZONG,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.HIPPOPOTAS,e.HIPPOWDON,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.GLISCOR,e.MAMOSWINE,e.PROBOPASS,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.ARCEUS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.ACCELGOR,e.STUNFISK,e.PAWNIARD,e.BISHARP,e.MANDIBUZZ,e.DURANT,e.COBALION,e.TERRAKION,e.TORNADUS,e.LANDORUS,e.BUNNELBY,e.DIGGERSBY,e.BINACLE,e.BARBARACLE,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.CARBINK,e.KLEFKI,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.YUNGOOS,e.GUMSHOOS,e.ORICORIO,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.NIHILEGO,e.STAKATAKA,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.ZAMAZENTA,e.KLEAVOR,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.VAROOM,e.REVAVROOM,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.CLODSIRE,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_THORNS,e.GHOLDENGO,e.TING_LU,e.OGERPON,e.IRON_BOULDER,[e.WORMADAM,"sandy"],e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_SLOWBRO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_CORSOLA,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER],[t.GIGA_DRAIN]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BUTTERFREE,e.BEEDRILL,e.EKANS,e.ARBOK,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.KABUTO,e.KABUTOPS,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.NATU,e.XATU,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.YANMA,e.PINECO,e.FORRETRESS,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.LILEEP,e.CRADILY,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.KRICKETUNE,e.BUDEW,e.ROSERADE,e.WORMADAM,e.MOTHIM,e.CHERUBI,e.CHERRIM,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.YANMEGA,e.LEAFEON,e.UXIE,e.SHAYMIN,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.WOOBAT,e.SWOOBAT,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.TRUBBISH,e.GARBODOR,e.DEERLING,e.SAWSBUCK,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.EELEKTRIK,e.EELEKTROSS,e.SHELMET,e.ACCELGOR,e.HEATMOR,e.LARVESTA,e.VOLCARONA,e.VIRIZION,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.SANDYGAST,e.PALOSSAND,e.MIMIKYU,e.DHELMISE,e.TAPU_BULU,e.CELESTEELA,e.KARTANA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.ORBEETLE,e.GOSSIFLEUR,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.CURSOLA,e.ALCREMIE,e.FROSMOTH,e.ZARUDE,e.CALYREX,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.TAROUNTULA,e.SPIDOPS,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.BRUTE_BONNET,e.SLITHER_WING,e.WO_CHIEN,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OGERPON,e.HYDRAPPLE,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_CORSOLA,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.ENDURE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.CHARM]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.PIKACHU,e.RAICHU,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.CHANSEY,e.MR_MIME,e.JYNX,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.MEW,e.SENTRET,e.FURRET,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.ESPEON,e.UMBREON,e.MISDREAVUS,e.WOBBUFFET,e.SNUBBULL,e.GRANBULL,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.PHANPY,e.DONPHAN,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHROOMISH,e.BRELOOM,e.AZURILL,e.SKITTY,e.DELCATTY,e.PLUSLE,e.MINUN,e.ILLUMISE,e.NUMEL,e.CAMERUPT,e.CHIMECHO,e.WYNAUT,e.LUVDISC,e.LATIAS,e.JIRACHI,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.PACHIRISU,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.GLAMEOW,e.PURUGLY,e.MIME_JR,e.HAPPINY,e.MUNCHLAX,e.FINNEON,e.LUMINEON,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.MAMOSWINE,e.GALLADE,e.FROSLASS,e.MESPRIT,e.PHIONE,e.MANAPHY,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.WOOBAT,e.SWOOBAT,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.CUBCHOO,e.BEARTIC,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLABEBE,e.FLOETTE,e.FLORGES,e.FURFROU,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.TYRUNT,e.TYRANTRUM,e.SYLVEON,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.DIANCIE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.KOMALA,e.MIMIKYU,e.TAPU_LELE,e.POIPOLE,e.NAGANADEL,e.GOSSIFLEUR,e.ELDEGOSS,e.YAMPER,e.BOLTUND,e.TOXEL,e.TOXTRICITY,e.HATENNA,e.HATTREM,e.HATTERENE,e.PERRSERKER,e.MR_RIME,e.MILCERY,e.ALCREMIE,e.URSALUNA,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.MASCHIFF,e.MABOSSTIFF,e.FINIZEN,e.PALAFIN,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.FLUTTER_MANE,e.FEZANDIPITI,e.OGERPON,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_MR_MIME,[e.INDEEDEE,"female"],e.HISUI_LILLIGANT,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.FALSE_SWIPE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BEEDRILL,e.SPEAROW,e.FEAROW,e.SANDSHREW,e.SANDSLASH,e.PARAS,e.PARASECT,e.MEOWTH,e.PERSIAN,e.FARFETCHD,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.SCYTHER,e.PINSIR,e.JOLTEON,e.MEW,e.GLIGAR,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.GROVYLE,e.SCEPTILE,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.MAWILE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.ABSOL,e.EMPOLEON,e.KRICKETUNE,e.GIBLE,e.GABITE,e.GARCHOMP,e.SKORUPI,e.DRAPION,e.WEAVILE,e.GLISCOR,e.GALLADE,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.LEAVANNY,e.KARRABLAST,e.ESCAVALIER,e.AXEW,e.FRAXURE,e.HAXORUS,e.PAWNIARD,e.BISHARP,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.FOMANTIS,e.LURANTIS,e.GOLISOPOD,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_BULU,e.BUZZWOLE,e.PHEROMOSA,e.KARTANA,e.MAGEARNA,e.MARSHADOW,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.CHEWTLE,e.DREDNAW,e.PERRSERKER,e.FALINKS,e.ZACIAN,e.URSHIFU,e.KLEAVOR,e.SNEASLER,e.TAROUNTULA,e.SPIDOPS,e.CERULEDGE,e.KINGAMBIT,e.BAXCALIBUR,e.CHIEN_PAO,e.IRON_VALIANT,e.IRON_LEAVES,e.OGERPON,e.ALOLA_SANDSLASH,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_DECIDUEYE],[t.SWAGGER]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.BLACEPHALON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.WOOLOO,e.TOXTRICITY,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.MORPEKO,e.CUFANT,e.ZARUDE,e.SQUAWKABILLY,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.VAROOM,e.REVAVROOM,e.ANNIHILAPE,e.CHI_YU,e.FEZANDIPITI,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_SLOWKING,e.PALDEA_TAUROS],[t.STEEL_WING]:[e.CHARIZARD,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.FARFETCHD,e.DODUO,e.DODRIO,e.SCYTHER,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.TOGETIC,e.NATU,e.XATU,e.YANMA,e.MURKROW,e.GLIGAR,e.SCIZOR,e.DELIBIRD,e.SKARMORY,e.LUGIA,e.HO_OH,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.TROPIUS,e.SALAMENCE,e.LATIAS,e.LATIOS,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.HONCHKROW,e.CHATOT,e.TOGEKISS,e.YANMEGA,e.GLISCOR,e.GIRATINA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.LEAVANNY,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.DUCKLETT,e.SWANNA,e.ELGYEM,e.BEHEEYEM,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.SILVALLY,e.DRAMPA,e.TAPU_KOKO,e.CORVIKNIGHT,e.CRAMORANT,e.SIRFETCHD,e.DRAKLOAK,e.DRAGAPULT,e.GALAR_FARFETCHD,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES],[t.ATTRACT]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINJASK,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.HEATRAN,e.CRESSELIA,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLIN,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.KUBFU,e.URSHIFU,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.DIPPLIN,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.SLEEP_TALK]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.HEAL_BELL]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.LICKITUNG,e.CHANSEY,e.JYNX,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.ARTICUNO,e.DRAGONITE,e.MEW,e.CHINCHOU,e.LANTURN,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.ESPEON,e.UMBREON,e.MISDREAVUS,e.SNUBBULL,e.GRANBULL,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.CELEBI,e.POOCHYENA,e.MIGHTYENA,e.GARDEVOIR,e.SKITTY,e.DELCATTY,e.SPOINK,e.GRUMPIG,e.SWABLU,e.ALTARIA,e.CHIMECHO,e.KRICKETUNE,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.CHINGLING,e.HAPPINY,e.LICKILICKY,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.UXIE,e.PHIONE,e.MANAPHY,e.MUNNA,e.MUSHARNA,e.AUDINO,e.PETILIL,e.LILLIGANT,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.MELOETTA,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.SYLVEON,e.DIANCIE,e.COMFEY,e.MAGEARNA,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.HISUI_LILLIGANT,e.ETERNAL_FLOETTE],[t.RETURN]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.FRUSTRATION]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.SAFEGUARD]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BUTTERFREE,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.VILEPLUME,e.GROWLITHE,e.ARCANINE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.DROWZEE,e.HYPNO,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.SCYTHER,e.LAPRAS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.LEDYBA,e.LEDIAN,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.SUNKERN,e.SUNFLORA,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.WOBBUFFET,e.SCIZOR,e.SHUCKLE,e.CORSOLA,e.BLISSEY,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.BEAUTIFLY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHROOMISH,e.BRELOOM,e.SKITTY,e.DELCATTY,e.SPINDA,e.SWABLU,e.ALTARIA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.MILOTIC,e.TROPIUS,e.CHIMECHO,e.WYNAUT,e.SNORUNT,e.GLALIE,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.WORMADAM,e.MOTHIM,e.CHERUBI,e.CHERRIM,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.FINNEON,e.LUMINEON,e.SNOVER,e.ABOMASNOW,e.TOGEKISS,e.GALLADE,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.GOLETT,e.GOLURK,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.KELDEO,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SWIRLIX,e.SLURPUFF,e.BINACLE,e.BARBARACLE,e.AMAURA,e.AURORUS,e.SYLVEON,e.CARBINK,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.MAREANIE,e.TOXAPEX,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PYUKUMUKU,e.MINIOR,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.STAKATAKA,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.DOTTLER,e.ORBEETLE,e.APPLETUN,e.HATENNA,e.HATTREM,e.HATTERENE,e.CURSOLA,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.FROSMOTH,e.STONJOURNER,e.ZAMAZENTA,e.CALYREX,e.ARBOLIVA,e.RABSCA,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ETERNAL_FLOETTE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_YAMASK,[e.INDEEDEE,"female"]],[t.PAIN_SPLIT]:[e.ARBOK,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.TANGELA,e.STARYU,e.STARMIE,e.PORYGON,e.MEW,e.IGGLYBUFF,e.NATU,e.XATU,e.MISDREAVUS,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.QWILFISH,e.SLUGMA,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.PORYGON2,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.NOSEPASS,e.SABLEYE,e.MAWILE,e.MEDITITE,e.MEDICHAM,e.GULPIN,e.SWALOT,e.LUNATONE,e.SOLROCK,e.LILEEP,e.CRADILY,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.DEOXYS,e.RAMPARDOS,e.SHELLOS,e.GASTRODON,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.SPIRITOMB,e.TANGROWTH,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.GIRATINA,e.MUNNA,e.MUSHARNA,e.AUDINO,e.THROH,e.SAWK,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.STUNFISK,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ZYGARDE,e.MAREANIE,e.TOXAPEX,e.STUFFUL,e.BEWEAR,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.MIMIKYU,e.BRUXISH,e.DHELMISE,e.NIHILEGO,e.MAGEARNA,e.BLACEPHALON,e.CLOBBOPUS,e.GRAPPLOCT,e.POLTEAGEIST,e.HATTERENE,e.ALCREMIE,e.PINCURCHIN,e.SPECTRIER,e.BASCULEGION,e.OVERQWIL,e.SPIDOPS,e.MABOSSTIFF,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.WUGTRIO,e.GREAVARD,e.HOUNDSTONE,e.VELUZA,e.DUDUNSPARCE,e.FLUTTER_MANE,e.POLTCHAGEIST,e.SINISTCHA,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_WEEZING,e.GALAR_MOLTRES,e.GALAR_STUNFISK,e.HISUI_QWILFISH,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.MEGAHORN]:[e.NIDOKING,e.RAPIDASH,e.SEEL,e.DEWGONG,e.RHYHORN,e.RHYDON,e.GOLDEEN,e.SEAKING,e.TAUROS,e.LAPRAS,e.MEW,e.SPINARAK,e.ARIADOS,e.HERACROSS,e.STANTLER,e.ABSOL,e.RHYPERIOR,e.SAMUROTT,e.SCOLIPEDE,e.SAWSBUCK,e.KARRABLAST,e.ESCAVALIER,e.BOUFFALANT,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.XERNEAS,e.TAPU_BULU,e.CELESTEELA,e.DREDNAW,e.FALINKS,e.GLASTRIER,e.WYRDEER,e.CLODSIRE,e.GREAT_TUSK,e.IRON_TREADS,e.IRON_LEAVES,e.IRON_BOULDER,e.GALAR_RAPIDASH,[e.CALYREX,"ice"],e.HISUI_SAMUROTT],[t.BATON_PASS]:[e.BUTTERFREE,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.VENONAT,e.VENOMOTH,e.POLIWRATH,e.RAPIDASH,e.FARFETCHD,e.HYPNO,e.MR_MIME,e.SCYTHER,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.ZAPDOS,e.MEW,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.ESPEON,e.UMBREON,e.GIRAFARIG,e.DUNSPARCE,e.GLIGAR,e.SCIZOR,e.DELIBIRD,e.CELEBI,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.SURSKIT,e.MASQUERAIN,e.NINJASK,e.SKITTY,e.MAWILE,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.SPINDA,e.ZANGOOSE,e.LUNATONE,e.SOLROCK,e.CHIMECHO,e.ABSOL,e.HUNTAIL,e.GOREBYSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.KRICKETUNE,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.CHINGLING,e.MIME_JR,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GLISCOR,e.UXIE,e.MESPRIT,e.AZELF,e.VICTINI,e.PATRAT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.WOOBAT,e.SWOOBAT,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.SCOLIPEDE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.ALOMOMOLA,e.SHELMET,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.DURANT,e.MELOETTA,e.FLABEBE,e.FLOETTE,e.FLORGES,e.INKAY,e.MALAMAR,e.SYLVEON,e.HAWLUCHA,e.DIANCIE,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.PASSIMIAN,e.PYUKUMUKU,e.MAGEARNA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.DUBWOOL,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.PERRSERKER,e.MR_RIME,e.MORPEKO,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.CALYREX,e.KLEAVOR,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.FIDOUGH,e.DACHSBUN,e.SHROODLE,e.GRAFAIAI,e.FLITTLE,e.ESPATHRA,e.TATSUGIRI,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.MUNKIDORI,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ETERNAL_FLOETTE,e.GALAR_RAPIDASH,e.GALAR_MR_MIME,[e.INDEEDEE,"female"],e.HISUI_DECIDUEYE],[t.ENCORE]:[e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.SEEL,e.DEWGONG,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.HITMONCHAN,e.MR_MIME,e.JYNX,e.SNORLAX,e.DRAGONITE,e.MEW,e.LEDYBA,e.LEDIAN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.WOOPER,e.QUAGSIRE,e.WOBBUFFET,e.SNUBBULL,e.GRANBULL,e.SHUCKLE,e.PHANPY,e.DONPHAN,e.SMOOCHUM,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.AZURILL,e.SABLEYE,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.SPOINK,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.SHUPPET,e.BANETTE,e.CHIMECHO,e.WYNAUT,e.SPHEAL,e.SEALEO,e.WALREIN,e.JIRACHI,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PACHIRISU,e.BUNEARY,e.LOPUNNY,e.MIME_JR,e.CHATOT,e.MUNCHLAX,e.CROAGUNK,e.TOXICROAK,e.LUMINEON,e.TOGEKISS,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.VICTINI,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PURRLOIN,e.LIEPARD,e.AUDINO,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.CUBCHOO,e.BEARTIC,e.SHELMET,e.ACCELGOR,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.SPRITZEE,e.AROMATISSE,e.AMAURA,e.AURORUS,e.HAWLUCHA,e.DIANCIE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.TOUCANNON,e.SALAZZLE,e.COMFEY,e.ORANGURU,e.TOGEDEMARU,e.MAGEARNA,e.BLACEPHALON,e.TOXEL,e.TOXTRICITY,e.MR_RIME,e.ALCREMIE,[e.INDEEDEE,"male"],e.ZARUDE,e.CALYREX,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.ARBOLIVA,e.SHROODLE,e.GRAFAIAI,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.FINIZEN,e.PALAFIN,e.ANNIHILAPE,e.SCREAM_TAIL,e.IRON_BUNDLE,e.IRON_VALIANT,e.OGERPON,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.GALAR_MR_MIME,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT],[t.IRON_TAIL]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.FARFETCHD,e.SEEL,e.DEWGONG,e.ONIX,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.ELECTABUZZ,e.MAGMAR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.AERODACTYL,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.PICHU,e.CLEFFA,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.SLOWKING,e.GIRAFARIG,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.GRANBULL,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BRELOOM,e.AZURILL,e.SKITTY,e.DELCATTY,e.ARON,e.LAIRON,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.FLYGON,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.KECLEON,e.ABSOL,e.SPHEAL,e.SEALEO,e.WALREIN,e.SALAMENCE,e.GROUDON,e.RAYQUAZA,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.GIBLE,e.GABITE,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.LEAFEON,e.GLACEON,e.GLISCOR,e.PORYGON_Z,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.GIRATINA,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.MINCCINO,e.CINCCINO,e.EMOLGA,e.EELEKTRIK,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.DEDENNE,e.GOOMY,e.SLIGGOO,e.GOODRA,e.NOIBAT,e.NOIVERN,e.ZYGARDE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.YUNGOOS,e.GUMSHOOS,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.SALANDIT,e.SALAZZLE,e.PASSIMIAN,e.TURTONATOR,e.TOGEDEMARU,e.BRUXISH,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.SOLGALEO,e.GUZZLORD,e.POIPOLE,e.NAGANADEL,e.ZERAORA,e.SKWOVET,e.GREEDENT,e.DREDNAW,e.OBSTAGOON,e.PERRSERKER,e.DRACOZOLT,e.ARCTOZOLT,e.ZACIAN,e.ZAMAZENTA,e.ZARUDE,e.WYRDEER,e.SNEASLER,e.CYCLIZAR,e.ORTHWORM,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.METAL_CLAW]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SANDSHREW,e.SANDSLASH,e.PARAS,e.MEOWTH,e.PERSIAN,e.KRABBY,e.KINGLER,e.MEW,e.TOTODILE,e.GLIGAR,e.SCIZOR,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SKARMORY,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.ZANGOOSE,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.METANG,e.METAGROSS,e.REGISTEEL,e.GROUDON,e.PRINPLUP,e.EMPOLEON,e.GIBLE,e.GABITE,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.WEAVILE,e.GLISCOR,e.DIALGA,e.HEATRAN,e.DRILBUR,e.EXCADRILL,e.GARBODOR,e.FERROSEED,e.FERROTHORN,e.CUBCHOO,e.BEARTIC,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BRAVIARY,e.DURANT,e.COBALION,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.WIMPOD,e.KOMALA,e.HAKAMO_O,e.KOMMO_O,e.SOLGALEO,e.NECROZMA,e.CORVIKNIGHT,e.PERRSERKER,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.URSALUNA,e.SNEASLER,e.PAWMI,e.PAWMO,e.PAWMOT,e.KLAWF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.KINGAMBIT,e.IRON_THORNS,e.ROARING_MOON,e.OKIDOGI,e.ARCHALUDON,e.IRON_CROWN,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_STUNFISK,e.HISUI_SNEASEL,e.HISUI_BRAVIARY,e.BLOODMOON_URSALUNA],[t.SYNTHESIS]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SHROOMISH,e.BRELOOM,e.ROSELIA,e.CACNEA,e.CACTURNE,e.LILEEP,e.CRADILY,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,[e.WORMADAM,"plant"],e.CHERUBI,e.CHERRIM,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.LEAFEON,e.SHAYMIN,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.VIRIZION,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PUMPKABOO,e.GOURGEIST,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.DHELMISE,e.TAPU_BULU,e.KARTANA,e.GOSSIFLEUR,e.ELDEGOSS,e.ZARUDE,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.BRUTE_BONNET,e.OGERPON,e.ALOLA_EXEGGUTOR,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.HIDDEN_POWER]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BURMY,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.RAIN_DANCE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.POLITOED,e.HOPPIP,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.SPOINK,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.BASCULIN,e.MARACTUS,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.BERGMITE,e.AVALUGG,e.XERNEAS,e.YVELTAL,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.LURANTIS,e.SHIINOTIC,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.KOMALA,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_FINI,e.XURKITREE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.GREEDENT,e.CORVIKNIGHT,e.CHEWTLE,e.DREDNAW,e.APPLETUN,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXTRICITY,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.MR_RIME,e.RUNERIGUS,e.FALINKS,e.PINCURCHIN,e.EISCUE,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.ZAMAZENTA,e.ETERNATUS,e.REGIELEKI,e.WYRDEER,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.NACLI,e.NACLSTACK,e.GARGANACL,e.TADBULB,e.BELLIBOLT,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.SCREAM_TAIL,e.SLITHER_WING,e.IRON_BUNDLE,e.IRON_JUGULIS,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.WO_CHIEN,e.CHIEN_PAO,e.WALKING_WAKE,e.OGERPON,e.HYDRAPPLE,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_YAMASK,e.GALAR_STUNFISK,[e.URSHIFU,"rapid-strike"],e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.SUNNY_DAY]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.MR_MIME,e.SCYTHER,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.SUDOWOODO,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.CHERUBI,e.CHERRIM,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.SCRAGGY,e.SCRAFTY,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.FERROSEED,e.FERROTHORN,e.EELEKTROSS,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,[e.LYCANROC,"midday","midnight"],e.MUDBRAY,e.MUDSDALE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.KOMALA,e.TURTONATOR,e.MIMIKYU,e.DRAMPA,e.DHELMISE,e.HAKAMO_O,e.KOMMO_O,e.TAPU_LELE,e.TAPU_BULU,e.SOLGALEO,e.LUNALA,e.XURKITREE,e.MAGEARNA,e.BLACEPHALON,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.GREEDENT,e.CORVISQUIRE,e.CORVIKNIGHT,e.GOSSIFLEUR,e.ELDEGOSS,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.FALINKS,e.STONJOURNER,e.DRACOZOLT,e.DRAKLOAK,e.DRAGAPULT,e.ZAMAZENTA,e.ETERNATUS,e.ZARUDE,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.ENAMORUS,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.BOMBIRDIER,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.WO_CHIEN,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.WALKING_WAKE,e.DIPPLIN,e.OGERPON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_DECIDUEYE,[e.PALDEA_TAUROS,"combat","blaze"],e.BLOODMOON_URSALUNA],[t.CRUNCH]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BLASTOISE,e.RATTATA,e.RATICATE,e.EKANS,e.ARBOK,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.ZUBAT,e.GOLBAT,e.GROWLITHE,e.ARCANINE,e.RHYHORN,e.RHYDON,e.KANGASKHAN,e.GYARADOS,e.OMASTAR,e.AERODACTYL,e.SNORLAX,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CROBAT,e.UMBREON,e.GIRAFARIG,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.TEDDIURSA,e.URSARING,e.HOUNDOUR,e.HOUNDOOM,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.POOCHYENA,e.MIGHTYENA,e.EXPLOUD,e.MAWILE,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.CARVANHA,e.SHARPEDO,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.SNORUNT,e.GLALIE,e.WALREIN,e.HUNTAIL,e.BAGON,e.SHELGON,e.SALAMENCE,e.GROUDON,e.RAYQUAZA,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.BUIZEL,e.FLOATZEL,e.STUNKY,e.SKUNTANK,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CARNIVINE,e.RHYPERIOR,e.YANMEGA,e.GLISCOR,e.FROSLASS,e.HEATRAN,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISAGE,e.PANPOUR,e.SIMIPOUR,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.ZOROARK,e.EELEKTRIK,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.DRUDDIGON,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.CHESNAUGHT,e.LITLEO,e.PYROAR,e.PANCHAM,e.PANGORO,e.TYRUNT,e.TYRANTRUM,e.BERGMITE,e.AVALUGG,e.ZYGARDE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.ROCKRUFF,e.LYCANROC,e.DEWPIDER,e.ARAQUANID,e.SILVALLY,e.BRUXISH,e.SOLGALEO,e.GUZZLORD,e.SKWOVET,e.GREEDENT,e.THIEVUL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ARROKUDA,e.BARRASKEWDA,e.SIZZLIPEDE,e.CENTISKORCH,e.GRIMMSNARL,e.PERRSERKER,e.MORPEKO,e.DRACOVISH,e.ARCTOVISH,e.ZACIAN,e.ZAMAZENTA,e.ZARUDE,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.URSALUNA,e.BASCULEGION,e.OVERQWIL,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.CAPSAKID,e.SCOVILLAIN,e.CYCLIZAR,e.GREAVARD,e.HOUNDSTONE,e.VELUZA,e.DONDOZO,e.FARIGIRAF,e.SCREAM_TAIL,e.BRUTE_BONNET,e.IRON_JUGULIS,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.OKIDOGI,e.GOUGING_FIRE,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_MEOWTH,e.GALAR_STUNFISK,[e.URSHIFU,"single-strike"],[e.CALYREX,"ice","shadow"],e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_QWILFISH,e.HISUI_ZOROARK,e.HISUI_AVALUGG,e.BLOODMOON_URSALUNA],[t.PSYCH_UP]:[e.BUTTERFREE,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.LICKITUNG,e.CHANSEY,e.TANGELA,e.STARYU,e.STARMIE,e.MR_MIME,e.JYNX,e.PORYGON,e.SNORLAX,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.SUDOWOODO,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.STEELIX,e.SNEASEL,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LUGIA,e.HO_OH,e.CELEBI,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.SPOINK,e.GRUMPIG,e.SPINDA,e.SWABLU,e.ALTARIA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.BUDEW,e.ROSERADE,e.WORMADAM,e.MOTHIM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.FINNEON,e.LUMINEON,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.TANGROWTH,e.TOGEKISS,e.YANMEGA,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.MUSHARNA,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.MIENFOO,e.MIENSHAO,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.VIVILLON,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.HELIOPTILE,e.HELIOLISK,e.AMAURA,e.AURORUS,e.SYLVEON,e.CARBINK,e.KLEFKI,e.XERNEAS,e.DIANCIE,e.HOOPA,e.PRIMARINA,e.CUTIEFLY,e.RIBOMBEE,e.COMFEY,e.ORANGURU,e.GOLISOPOD,e.PYUKUMUKU,e.MINIOR,e.KOMALA,e.MIMIKYU,e.DRAMPA,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.MARSHADOW,e.INDEEDEE,e.RABSCA,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_EXEGGUTOR,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING],[t.SHADOW_BALL]:[e.BUTTERFREE,e.RATTATA,e.RATICATE,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.MEOWTH,e.PERSIAN,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.LICKITUNG,e.KOFFING,e.WEEZING,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.TAUROS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.SNORLAX,e.MEWTWO,e.MEW,e.TYPHLOSION,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.AIPOM,e.YANMA,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SNEASEL,e.CORSOLA,e.HOUNDOUR,e.HOUNDOOM,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LUGIA,e.HO_OH,e.CELEBI,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.SPOINK,e.GRUMPIG,e.SPINDA,e.CACTURNE,e.ZANGOOSE,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.GOREBYSS,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.BIDOOF,e.BIBAREL,e.BUDEW,e.ROSERADE,e.WORMADAM,e.MOTHIM,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.MUNCHLAX,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.GIRATINA,e.CRESSELIA,e.MANAPHY,e.DARKRAI,e.ARCEUS,e.VICTINI,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.WHIMSICOTT,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.GOLETT,e.GOLURK,e.VULLABY,e.MANDIBUZZ,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.MELOETTA,e.DELPHOX,e.MEOWSTIC,e.AEGISLASH,e.SKRELP,e.DRAGALGE,e.CLAWITZER,e.SYLVEON,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.HOOPA,e.DECIDUEYE,e.PRIMARINA,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.SILVALLY,e.MIMIKYU,e.DRAMPA,e.DHELMISE,e.TAPU_LELE,e.TAPU_FINI,e.LUNALA,e.MAGEARNA,e.MARSHADOW,e.BLACEPHALON,e.CINDERACE,e.INTELEON,e.DOTTLER,e.ORBEETLE,e.THIEVUL,e.SINISTEA,e.POLTEAGEIST,e.HATTERENE,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.MR_RIME,e.RUNERIGUS,e.INDEEDEE,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.SPECTRIER,e.WYRDEER,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.MEOWSCARADA,e.SKELEDIRGE,e.ARMAROUGE,e.CERULEDGE,e.BRAMBLIN,e.BRAMBLEGHAST,e.RABSCA,e.ESPATHRA,e.GREAVARD,e.HOUNDSTONE,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.FLUTTER_MANE,e.GIMMIGHOUL,e.GHOLDENGO,e.IRON_VALIANT,e.POLTCHAGEIST,e.SINISTCHA,e.MUNKIDORI,e.FEZANDIPITI,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.MAROWAK,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_YAMASK,[e.CALYREX,"shadow"],e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY],[t.FUTURE_SIGHT]:[e.PSYDUCK,e.GOLDUCK,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.EXEGGUTOR,e.MR_MIME,e.JYNX,e.LAPRAS,e.MEWTWO,e.MEW,e.NOCTOWL,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MARILL,e.AZUMARILL,e.ESPEON,e.SLOWKING,e.GIRAFARIG,e.DELIBIRD,e.LUGIA,e.HO_OH,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SPOINK,e.LUNATONE,e.BARBOACH,e.WHISCASH,e.CLAYDOL,e.CASTFORM,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.TOGEKISS,e.GALLADE,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.ARCEUS,e.VICTINI,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.DARMANITAN,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.BEHEEYEM,e.DELPHOX,e.INKAY,e.MALAMAR,e.ORANGURU,e.TAPU_LELE,e.SOLGALEO,e.LUNALA,e.NECROZMA,e.DOTTLER,e.ORBEETLE,e.HATTERENE,e.MR_RIME,e.INDEEDEE,e.CALYREX,e.IRON_VALIANT,e.MUNKIDORI,e.IRON_CROWN,[e.MEOWSTIC,"female"],e.ALOLA_RAICHU,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING],[t.ROCK_SMASH]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BEEDRILL,e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.PARAS,e.PARASECT,e.DIGLETT,e.DUGTRIO,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.MUK,e.GENGAR,e.ONIX,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.SCYTHER,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.JOLTEON,e.FLAREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEWTWO,e.MEW,e.BAYLEEF,e.MEGANIUM,e.QUILAVA,e.TYPHLOSION,e.CROCONAW,e.FERALIGATR,e.FURRET,e.LEDIAN,e.TOGEPI,e.TOGETIC,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.TYROGUE,e.HITMONTOP,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.GULPIN,e.SWALOT,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.CLAYDOL,e.CRADILY,e.ANORITH,e.ARMALDO,e.KECLEON,e.DUSCLOPS,e.TROPIUS,e.ABSOL,e.SPHEAL,e.SEALEO,e.WALREIN,e.RELICANTH,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BUIZEL,e.FLOATZEL,e.GASTRODON,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.STUNKY,e.SKUNTANK,e.BRONZONG,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.ZOROARK,e.REUNICLUS,e.SAWSBUCK,e.ESCAVALIER,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.GOODRA,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.ZYGARDE,e.VOLCANION,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.CRABRAWLER,e.CRABOMINABLE,e.MUDBRAY,e.MUDSDALE,e.PASSIMIAN,e.GOLISOPOD,e.TAPU_BULU,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CLOBBOPUS,e.GRAPPLOCT,e.OBSTAGOON,e.SIRFETCHD,e.FALINKS,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.KUBFU,e.URSHIFU,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.ENAMORUS,e.KLAWF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.KORAIDON,e.ARCHALUDON,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MAROWAK,e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.WHIRLPOOL]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.NIDOQUEEN,e.NIDOKING,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.LICKITUNG,e.RHYDON,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.SNEASEL,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.MILTANK,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.RAMPARDOS,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.GARCHOMP,e.MUNCHLAX,e.FINNEON,e.LUMINEON,e.MANTYKE,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.BRUXISH,e.DHELMISE,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.GRAPPLOCT,e.OBSTAGOON,e.CURSOLA,e.EISCUE,e.DRACOVISH,e.ARCTOVISH,e.BASCULEGION,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.WIGLETT,e.WUGTRIO,e.PALAFIN,e.TATSUGIRI,e.IRON_BUNDLE,e.WALKING_WAKE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,[e.URSHIFU,"rapid-strike"],e.HISUI_SAMUROTT,[e.PALDEA_TAUROS,"aqua"]],[t.BEAT_UP]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.EKANS,e.ARBOK,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.KANGASKHAN,e.MEW,e.AIPOM,e.GIRAFARIG,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.VESPIQUEN,e.AMBIPOM,e.WEAVILE,e.COTTONEE,e.WHIMSICOTT,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.VANILLUXE,e.PAWNIARD,e.BISHARP,e.DURANT,e.ZWEILOUS,e.HYDREIGON,e.PANGORO,e.BINACLE,e.BARBARACLE,e.WISHIWASHI,e.SALANDIT,e.SALAZZLE,e.PASSIMIAN,e.MIMIKYU,e.NICKIT,e.THIEVUL,e.FALINKS,e.DRAKLOAK,e.DRAGAPULT,e.URSHIFU,e.TANDEMAUS,e.MAUSHOLD,e.BRAMBLIN,e.BRAMBLEGHAST,e.ANNIHILAPE,e.FARIGIRAF,e.KINGAMBIT,e.FEZANDIPITI,e.PIKACHU,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_PERSIAN],[t.UPROAR]:[e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.PIKACHU,e.RAICHU,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.FARFETCHD,e.DODUO,e.DODRIO,e.GASTLY,e.HAUNTER,e.GENGAR,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.TAUROS,e.GYARADOS,e.SNORLAX,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.MURKROW,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.TEDDIURSA,e.URSARING,e.HOUNDOUR,e.HOUNDOOM,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.CELEBI,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.WINGULL,e.PELIPPER,e.VIGOROTH,e.SLAKING,e.NINJASK,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.AZURILL,e.SKITTY,e.DELCATTY,e.ARON,e.LAIRON,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.ROSELIA,e.CARVANHA,e.SHARPEDO,e.SPOINK,e.GRUMPIG,e.SPINDA,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.WHISCASH,e.CHIMECHO,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.KRICKETOT,e.KRICKETUNE,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.WORMADAM,e.VESPIQUEN,e.PACHIRISU,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.MUNCHLAX,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.PORYGON_Z,e.ROTOM,e.AZELF,e.HEATRAN,e.PHIONE,e.MANAPHY,e.VICTINI,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.KLINK,e.KLANG,e.KLINKLANG,e.ELGYEM,e.BEHEEYEM,e.STUNFISK,e.BOUFFALANT,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.MELOETTA,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.FURFROU,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.HOOPA,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.WISHIWASHI,e.PASSIMIAN,e.TURTONATOR,e.BRUXISH,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.POIPOLE,e.NAGANADEL,e.BLACEPHALON,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.YAMPER,e.BOLTUND,e.CRAMORANT,e.TOXTRICITY,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.MR_RIME,e.FALINKS,e.MORPEKO,e.GLASTRIER,e.SPECTRIER,e.WYRDEER,e.BASCULEGION,e.ENAMORUS,e.LECHONK,e.OINKOLOGNE,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.FLITTLE,e.ESPATHRA,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.GREAVARD,e.HOUNDSTONE,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.KORAIDON,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.HYDRAPPLE,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_STUNFISK,[e.CALYREX,"ice","shadow"],e.BLOODMOON_URSALUNA],[t.HEAT_WAVE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.VULPIX,e.NINETALES,e.ZUBAT,e.GOLBAT,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.FARFETCHD,e.WEEZING,e.MAGMAR,e.FLAREON,e.AERODACTYL,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.TOGETIC,e.NATU,e.XATU,e.MURKROW,e.SLUGMA,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.ENTEI,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.SOLROCK,e.SALAMENCE,e.GROUDON,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.STARLY,e.STARAVIA,e.STARAPTOR,e.HONCHKROW,e.CHATOT,e.MAGMORTAR,e.TOGEKISS,e.HEATRAN,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.DARUMAKA,e.DARMANITAN,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.DRUDDIGON,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.TORNADUS,e.RESHIRAM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.SALANDIT,e.SALAZZLE,e.SILVALLY,e.TURTONATOR,e.DRAMPA,e.LUNALA,e.GUZZLORD,e.NECROZMA,e.NAGANADEL,e.BLACEPHALON,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.CARKOL,e.COALOSSAL,e.SIZZLIPEDE,e.CENTISKORCH,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.SQUAWKABILLY,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.BOMBIRDIER,e.SLITHER_WING,e.IRON_JUGULIS,e.IRON_MOTH,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.FEZANDIPITI,e.GOUGING_FIRE,e.ALOLA_MAROWAK,e.GALAR_WEEZING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_BRAVIARY],[t.HAIL]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.CHANSEY,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.JYNX,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.ARTICUNO,e.ZAPDOS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.SNEASEL,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.DELIBIRD,e.MANTINE,e.KINGDRA,e.SMOOCHUM,e.BLISSEY,e.SUICUNE,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.AZURILL,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.LUNATONE,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.REGICE,e.KYOGRE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.HAPPINY,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.GLACEON,e.MAMOSWINE,e.FROSLASS,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.KYUREM,e.KELDEO,e.SKRELP,e.DRAGALGE,e.AMAURA,e.AURORUS,e.CARBINK,e.GOODRA,e.BERGMITE,e.AVALUGG,e.XERNEAS,e.DIANCIE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CRABOMINABLE,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.WIMPOD,e.GOLISOPOD,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.CURSOLA,e.MR_RIME,e.FROSMOTH,e.EISCUE,e.ARCTOZOLT,e.ARCTOVISH,e.GLASTRIER,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_CORSOLA,[e.CALYREX,"ice"]],[t.TORMENT]:[e.EKANS,e.ARBOK,e.NIDOQUEEN,e.NIDOKING,e.ZUBAT,e.GOLBAT,e.MEOWTH,e.PERSIAN,e.ABRA,e.KADABRA,e.ALAKAZAM,e.DODRIO,e.GRIMER,e.MUK,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.KOFFING,e.WEEZING,e.MR_MIME,e.JYNX,e.GYARADOS,e.AERODACTYL,e.MEWTWO,e.MEW,e.CROBAT,e.SUDOWOODO,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.LOUDRED,e.EXPLOUD,e.NOSEPASS,e.SABLEYE,e.MAWILE,e.CARVANHA,e.SHARPEDO,e.SPOINK,e.GRUMPIG,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.GLALIE,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.SHIELDON,e.BASTIODON,e.FLOATZEL,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.MIME_JR,e.CHATOT,e.SPIRITOMB,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.ELECTIVIRE,e.MAGMORTAR,e.GLISCOR,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.AZELF,e.HEATRAN,e.DARKRAI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.KLEFKI,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.HOOPA,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.SALANDIT,e.SALAZZLE,e.BRUXISH,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.PHEROMOSA,e.BLACEPHALON,e.NICKIT,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.MORPEKO,e.GLASTRIER,e.ENAMORUS,e.SQUAWKABILLY,e.BOMBIRDIER,e.VAROOM,e.KINGAMBIT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,[e.CALYREX,"ice"],e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.WILL_O_WISP]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.VULPIX,e.NINETALES,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.MAGMAR,e.FLAREON,e.MOLTRES,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.MISDREAVUS,e.SLUGMA,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.ENTEI,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHEDINJA,e.SABLEYE,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.ALTARIA,e.SOLROCK,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.GROUDON,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.SPIRITOMB,e.MAGMORTAR,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.HEATRAN,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.DARUMAKA,e.DARMANITAN,e.YAMASK,e.COFAGRIGUS,e.FRILLISH,e.JELLICENT,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.HEATMOR,e.LARVESTA,e.VOLCARONA,e.RESHIRAM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SALANDIT,e.SALAZZLE,e.TURTONATOR,e.MIMIKYU,e.LUNALA,e.MARSHADOW,e.BLACEPHALON,e.CINDERACE,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.CENTISKORCH,e.SINISTEA,e.POLTEAGEIST,e.CURSOLA,e.RUNERIGUS,e.DRAKLOAK,e.DRAGAPULT,e.SPECTRIER,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.SCOVILLAIN,e.HOUNDSTONE,e.SLITHER_WING,e.CHI_YU,e.ALOLA_MAROWAK,e.MAROWAK,e.GALAR_WEEZING,e.GALAR_CORSOLA,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,[e.CALYREX,"shadow"],e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_ZORUA,e.HISUI_ZOROARK,[e.PALDEA_TAUROS,"blaze"]],[t.FACADE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.FOCUS_PUNCH]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.MUK,e.GENGAR,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.TOGETIC,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.QUAGSIRE,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.LUDICOLO,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.KECLEON,e.DUSCLOPS,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.BIBAREL,e.RAMPARDOS,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.MIME_JR,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.GALLADE,e.DUSKNOIR,e.PALKIA,e.REGIGIGAS,e.DARKRAI,e.PIGNITE,e.EMBOAR,e.WATCHOG,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.REUNICLUS,e.EELEKTROSS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.HEATMOR,e.ZEKROM,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.HAWLUCHA,e.GOODRA,e.HOOPA,e.INCINEROAR,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.STUFFUL,e.BEWEAR,e.PASSIMIAN,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.BUZZWOLE,e.MARSHADOW,e.ZERAORA,e.RILLABOOM,e.GRIMMSNARL,e.MR_RIME,e.KUBFU,e.URSHIFU,e.ZARUDE,e.URSALUNA,e.SNEASLER,e.PAWMO,e.PAWMOT,e.GARGANACL,e.PALAFIN,e.ANNIHILAPE,e.IRON_HANDS,e.GHOLDENGO,e.KORAIDON,e.OKIDOGI,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MUK,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_MR_MIME,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.NATURE_POWER]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.ONIX,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.KABUTOPS,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.BELLOSSOM,e.SUDOWOODO,e.SUNKERN,e.SUNFLORA,e.STEELIX,e.SLUGMA,e.MAGCARGO,e.CORSOLA,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.ROSELIA,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.CACNEA,e.CACTURNE,e.CRAWDAUNT,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.BONSLY,e.CARNIVINE,e.FINNEON,e.TANGROWTH,e.LEAFEON,e.HEATRAN,e.REGIGIGAS,e.SHAYMIN,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.FERROSEED,e.FERROTHORN,e.VIRIZION,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.BINACLE,e.BARBARACLE,e.AMAURA,e.AURORUS,e.CARBINK,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.XERNEAS,e.DIANCIE,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.RIBOMBEE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.DRAMPA,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.XURKITREE,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.CURSOLA,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_CORSOLA,e.HISUI_TYPHLOSION,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.CHARGE]:[e.PIKACHU,e.RAICHU,e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.ELECTABUZZ,e.JOLTEON,e.ZAPDOS,e.MEW,e.CHINCHOU,e.LANTURN,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.ELEKID,e.RAIKOU,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.MAGNEZONE,e.ELECTIVIRE,e.ROTOM,e.BLITZLE,e.ZEBSTRIKA,e.EMOLGA,e.KLINK,e.KLANG,e.KLINKLANG,e.TYNAMO,e.EELEKTRIK,e.EELEKTROSS,e.STUNFISK,e.THUNDURUS,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.TOGEDEMARU,e.TAPU_KOKO,e.XURKITREE,e.ZERAORA,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.PINCURCHIN,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.REGIELEKI,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.SANDY_SHOCKS,e.IRON_HANDS,e.IRON_THORNS,e.MIRAIDON,e.RAGING_BOLT,e.ALOLA_RAICHU,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.TAUNT]:[e.RATTATA,e.RATICATE,e.NIDOQUEEN,e.NIDOKING,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.DODRIO,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.KOFFING,e.WEEZING,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.GYARADOS,e.AERODACTYL,e.MEWTWO,e.MEW,e.CROBAT,e.SUDOWOODO,e.AIPOM,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.CARVANHA,e.SHARPEDO,e.SPOINK,e.GRUMPIG,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.GLALIE,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHIELDON,e.BASTIODON,e.VESPIQUEN,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.MIME_JR,e.CHATOT,e.SPIRITOMB,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.ELECTIVIRE,e.MAGMORTAR,e.GLISCOR,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.AZELF,e.HEATRAN,e.DARKRAI,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.COTTONEE,e.WHIMSICOTT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.EMOLGA,e.ESCAVALIER,e.FRILLISH,e.JELLICENT,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.PANCHAM,e.PANGORO,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.HOOPA,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.ORICORIO,e.ROCKRUFF,e.LYCANROC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.PYUKUMUKU,e.TURTONATOR,e.MIMIKYU,e.BRUXISH,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.BUZZWOLE,e.PHEROMOSA,e.BLACEPHALON,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.TOXTRICITY,e.CLOBBOPUS,e.GRAPPLOCT,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.MR_RIME,e.RUNERIGUS,e.MORPEKO,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,e.URSALUNA,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.QUAQUAVAL,e.SPIDOPS,e.LOKIX,e.TANDEMAUS,e.MAUSHOLD,e.SQUAWKABILLY,e.ARMAROUGE,e.CERULEDGE,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.BOMBIRDIER,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.FLAMIGO,e.TATSUGIRI,e.ANNIHILAPE,e.KINGAMBIT,e.GREAT_TUSK,e.BRUTE_BONNET,e.FLUTTER_MANE,e.IRON_BUNDLE,e.IRON_JUGULIS,e.IRON_THORNS,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.IRON_LEAVES,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.RAGING_BOLT,e.IRON_BOULDER,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,[e.CALYREX,"ice","shadow"],e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.HELPING_HAND]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIKACHU,e.RAICHU,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DIGLETT,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.SENTRET,e.FURRET,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.MILOTIC,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.SNORUNT,e.GLALIE,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.CROAGUNK,e.TOXICROAK,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.MARACTUS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.ALOMOMOLA,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.RUFFLET,e.BRAVIARY,e.DURANT,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.DIANCIE,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.SALANDIT,e.SALAZZLE,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.PYUKUMUKU,e.TOGEDEMARU,e.DRAMPA,e.DHELMISE,e.KOMMO_O,e.SOLGALEO,e.LUNALA,e.MAGEARNA,e.POIPOLE,e.NAGANADEL,e.ZERAORA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.DOTTLER,e.ORBEETLE,e.GOSSIFLEUR,e.ELDEGOSS,e.YAMPER,e.BOLTUND,e.APPLETUN,e.TOXTRICITY,e.HATENNA,e.HATTREM,e.HATTERENE,e.OBSTAGOON,e.PERRSERKER,e.SIRFETCHD,e.MR_RIME,e.MILCERY,e.ALCREMIE,e.FALINKS,e.FROSMOTH,e.INDEEDEE,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.ZARUDE,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.ORTHWORM,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_BUNDLE,e.IRON_MOTH,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.IRON_LEAVES,e.MUNKIDORI,e.OGERPON,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.TRICK]:[e.CLEFAIRY,e.CLEFABLE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.STARMIE,e.MR_MIME,e.JYNX,e.PORYGON,e.MEWTWO,e.MEW,e.SENTRET,e.FURRET,e.CLEFFA,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.BLISSEY,e.LUGIA,e.CELEBI,e.ZIGZAGOON,e.LINOONE,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHEDINJA,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.SPOINK,e.GRUMPIG,e.SPINDA,e.BALTOY,e.CLAYDOL,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.TOGEKISS,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.DARMANITAN,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.GOLURK,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.HOOPA,e.CUTIEFLY,e.RIBOMBEE,e.COMFEY,e.ORANGURU,e.SANDYGAST,e.PALOSSAND,e.MIMIKYU,e.TAPU_FINI,e.LUNALA,e.MAGEARNA,e.BLACEPHALON,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.MR_RIME,e.RUNERIGUS,e.INDEEDEE,e.CALYREX,e.WYRDEER,e.MEOWSCARADA,e.ARMAROUGE,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.GREAVARD,e.HOUNDSTONE,e.FARIGIRAF,e.SCREAM_TAIL,e.GHOLDENGO,e.IRON_VALIANT,e.MUNKIDORI,e.ETERNAL_FLOETTE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_YAMASK,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.SUPERPOWER]:[e.NIDOQUEEN,e.NIDOKING,e.ARCANINE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.KRABBY,e.KINGLER,e.HITMONLEE,e.RHYHORN,e.RHYDON,e.PINSIR,e.FLAREON,e.KABUTOPS,e.SNORLAX,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.MARILL,e.AZUMARILL,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.PHANPY,e.DONPHAN,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.BRELOOM,e.MAKUHITA,e.HARIYAMA,e.ARON,e.LAIRON,e.AGGRON,e.TORKOAL,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACTURNE,e.CORPHISH,e.CRAWDAUNT,e.ARMALDO,e.ABSOL,e.REGIROCK,e.REGICE,e.REGISTEEL,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BIDOOF,e.BIBAREL,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.HONCHKROW,e.MUNCHLAX,e.HIPPOPOTAS,e.HIPPOWDON,e.RHYPERIOR,e.MAMOSWINE,e.REGIGIGAS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.SAMUROTT,e.STOUTLAND,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.GIGALITH,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.SCOLIPEDE,e.BASCULIN,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.CARRACOSTA,e.REUNICLUS,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.DIGGERSBY,e.GOGOAT,e.PANCHAM,e.PANGORO,e.INKAY,e.MALAMAR,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.HAWLUCHA,e.GOODRA,e.AVALUGG,e.ZYGARDE,e.VOLCANION,e.INCINEROAR,e.CRABRAWLER,e.CRABOMINABLE,e.MUDBRAY,e.MUDSDALE,e.LURANTIS,e.STUFFUL,e.BEWEAR,e.PASSIMIAN,e.KOMALA,e.DRAMPA,e.KOMMO_O,e.TAPU_BULU,e.SOLGALEO,e.BUZZWOLE,e.CELESTEELA,e.MARSHADOW,e.STAKATAKA,e.ZERAORA,e.MELMETAL,e.RILLABOOM,e.GREEDENT,e.DREDNAW,e.APPLETUN,e.CRAMORANT,e.CLOBBOPUS,e.GRAPPLOCT,e.GRIMMSNARL,e.SIRFETCHD,e.FALINKS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.KUBFU,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.ENAMORUS,e.CETODDLE,e.SLITHER_WING,e.OKIDOGI,e.OGERPON,[e.DEOXYS,"attack"],e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_EXEGGUTOR,e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,[e.CALYREX,"ice"],e.HISUI_BRAVIARY],[t.RECYCLE]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.CHANSEY,e.STARYU,e.STARMIE,e.MR_MIME,e.JYNX,e.PORYGON,e.SNORLAX,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CLEFFA,e.IGGLYBUFF,e.SLOWKING,e.GIRAFARIG,e.DELIBIRD,e.PORYGON2,e.SMOOCHUM,e.BLISSEY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.SPINDA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.KECLEON,e.CHIMECHO,e.JIRACHI,e.DEOXYS,e.DRIFLOON,e.DRIFBLIM,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.MUNCHLAX,e.MAGNEZONE,e.PORYGON_Z,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.ARCEUS,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.TRUBBISH,e.GARBODOR,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.KLINK,e.KLANG,e.KLINKLANG,e.ELGYEM,e.BEHEEYEM,e.HEATMOR,e.MELOETTA,e.GENESECT,e.BRAIXEN,e.DELPHOX,e.BUNNELBY,e.DIGGERSBY,e.ESPURR,e.MEOWSTIC,e.DEDENNE,e.KLEFKI,e.HOOPA,e.MORELULL,e.SHIINOTIC,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.NECROZMA,e.STAKATAKA,e.BLACEPHALON,e.APPLIN,e.FLAPPLE,e.APPLETUN,e.MR_RIME,e.FARIGIRAF,e.DIPPLIN,e.HYDRAPPLE,e.ALOLA_RAICHU,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_MR_MIME,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.REVENGE]:[e.RATTATA,e.RATICATE,e.MANKEY,e.PRIMEAPE,e.MACHOP,e.MACHOKE,e.MACHAMP,e.FARFETCHD,e.HITMONLEE,e.HITMONCHAN,e.PINSIR,e.TAUROS,e.MEW,e.AIPOM,e.PINECO,e.FORRETRESS,e.QWILFISH,e.HERACROSS,e.HITMONTOP,e.TYRANITAR,e.COMBUSKEN,e.BLAZIKEN,e.SHIFTRY,e.MAKUHITA,e.HARIYAMA,e.CACTURNE,e.ZANGOOSE,e.CRAWDAUNT,e.DUSKULL,e.DUSCLOPS,e.STARLY,e.STARAVIA,e.STARAPTOR,e.AMBIPOM,e.VESPIQUEN,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.GALLADE,e.DUSKNOIR,e.REGIGIGAS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.BASCULIN,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.ESCAVALIER,e.FERROSEED,e.FERROTHORN,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.KELDEO,e.PANGORO,e.HAWLUCHA,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.MUDSDALE,e.BEWEAR,e.PASSIMIAN,e.TURTONATOR,e.KOMMO_O,e.TAPU_BULU,e.BUZZWOLE,e.MARSHADOW,e.ZERAORA,e.CINDERACE,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CHEWTLE,e.DREDNAW,e.CLOBBOPUS,e.GRAPPLOCT,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.CURSOLA,e.SIRFETCHD,e.RUNERIGUS,e.FALINKS,e.MORPEKO,e.COPPERAJAH,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.ZARUDE,e.BASCULEGION,e.ANNIHILAPE,e.KINGAMBIT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,[e.LYCANROC,"midnight"],e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,e.HISUI_SAMUROTT,e.GALAR_STUNFISK],[t.BRICK_BREAK]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BEEDRILL,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PARAS,e.PARASECT,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.MUK,e.GENGAR,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.KABUTOPS,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.TOGETIC,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.QUAGSIRE,e.SLOWKING,e.GLIGAR,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.TYROGUE,e.HITMONTOP,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.SWALOT,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.KECLEON,e.DUSCLOPS,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.KRICKETUNE,e.RAMPARDOS,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BONSLY,e.MIME_JR,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.GLISCOR,e.GALLADE,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.DARKRAI,e.ARCEUS,e.VICTINI,e.PIGNITE,e.EMBOAR,e.DEWOTT,e.SAMUROTT,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ZOROARK,e.GOTHITELLE,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.ZYGARDE,e.HOOPA,e.VOLCANION,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.CRABRAWLER,e.CRABOMINABLE,e.LYCANROC,e.LURANTIS,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.KOMALA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.BUZZWOLE,e.PHEROMOSA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.ZERAORA,e.MELMETAL,e.RILLABOOM,e.ARROKUDA,e.BARRASKEWDA,e.TOXTRICITY,e.CLOBBOPUS,e.GRAPPLOCT,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.SIRFETCHD,e.MR_RIME,e.FALINKS,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.ZARUDE,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.MEOWSCARADA,e.QUAQUAVAL,e.SPIDOPS,e.LOKIX,e.PAWMOT,e.GARGANACL,e.CERULEDGE,e.KLAWF,e.TINKATUFF,e.TINKATON,e.ANNIHILAPE,e.KINGAMBIT,e.GREAT_TUSK,e.SLITHER_WING,e.IRON_HANDS,e.IRON_THORNS,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.IRON_LEAVES,e.OKIDOGI,e.OGERPON,e.ARCHALUDON,e.IRON_BOULDER,e.IRON_CROWN,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_MR_MIME,e.GALAR_ZAPDOS,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.KNOCK_OFF]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BEEDRILL,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PARAS,e.PARASECT,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.FARFETCHD,e.DODUO,e.DODRIO,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.LICKITUNG,e.TANGELA,e.GOLDEEN,e.SEAKING,e.SCYTHER,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.MEWTWO,e.MEW,e.BAYLEEF,e.MEGANIUM,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.MARILL,e.AZUMARILL,e.AIPOM,e.GLIGAR,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.PHANPY,e.DONPHAN,e.ELEKID,e.TYRANITAR,e.BLAZIKEN,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.SABLEYE,e.MAWILE,e.SWALOT,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.KECLEON,e.SHUPPET,e.BANETTE,e.CHIMECHO,e.ABSOL,e.METAGROSS,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.EMPOLEON,e.KRICKETUNE,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.WEAVILE,e.LICKILICKY,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.LEAFEON,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.KROKOROK,e.KROOKODILE,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.REUNICLUS,e.SWANNA,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.ALOMOMOLA,e.FERROSEED,e.FERROTHORN,e.TYNAMO,e.EELEKTRIK,e.EELEKTROSS,e.CRYOGONAL,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.MELOETTA,e.CHESNAUGHT,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.INKAY,e.MALAMAR,e.GOODRA,e.TREVENANT,e.YVELTAL,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.MAREANIE,e.TOXAPEX,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.KOMALA,e.DHELMISE,e.TAPU_FINI,e.SOLGALEO,e.NIHILEGO,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.BLACEPHALON,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.GREEDENT,e.NICKIT,e.SIZZLIPEDE,e.PERRSERKER,e.SIRFETCHD,e.FALINKS,e.MORPEKO,e.COPPERAJAH,e.ZARUDE,e.MEOWSCARADA,e.QUAQUAVAL,e.TAROUNTULA,e.SPIDOPS,e.LOKIX,e.PAWMO,e.PAWMOT,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.BOMBIRDIER,e.CYCLIZAR,e.CETODDLE,e.CETITAN,e.GREAT_TUSK,e.IRON_TREADS,e.IRON_JUGULIS,e.WO_CHIEN,e.ROARING_MOON,e.IRON_VALIANT,e.WALKING_WAKE,e.OKIDOGI,e.OGERPON,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_GOODRA,e.HISUI_DECIDUEYE],[t.ENDEAVOR]:[e.BEEDRILL,e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.DODUO,e.DODRIO,e.DEWGONG,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.TAUROS,e.GYARADOS,e.FLAREON,e.MEW,e.MEGANIUM,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.SUDOWOODO,e.POLITOED,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.GIRAFARIG,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.HERACROSS,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.DELIBIRD,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.HITMONTOP,e.BLISSEY,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.ARON,e.LAIRON,e.AGGRON,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.NUMEL,e.CAMERUPT,e.SPOINK,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.LUVDISC,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.STARLY,e.STARAVIA,e.STARAPTOR,e.KRICKETOT,e.KRICKETUNE,e.CRANIDOS,e.RAMPARDOS,e.WORMADAM,e.COMBEE,e.VESPIQUEN,e.PACHIRISU,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.HONCHKROW,e.SKUNTANK,e.HAPPINY,e.RHYPERIOR,e.TANGROWTH,e.TOGEKISS,e.MAMOSWINE,e.AZELF,e.SHAYMIN,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PATRAT,e.WATCHOG,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.BLITZLE,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.BASCULIN,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.MINCCINO,e.CINCCINO,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.DEERLING,e.SAWSBUCK,e.FERROSEED,e.FERROTHORN,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.STUNFISK,e.BOUFFALANT,e.DURANT,e.KYUREM,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.XERNEAS,e.DIANCIE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.SALANDIT,e.SALAZZLE,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.PASSIMIAN,e.ORANGURU,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.DRAMPA,e.KOMMO_O,e.SOLGALEO,e.BUZZWOLE,e.MARSHADOW,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.FLAPPLE,e.SANDACONDA,e.CRAMORANT,e.TOXEL,e.TOXTRICITY,e.PERRSERKER,e.ALCREMIE,e.FALINKS,e.STONJOURNER,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.BASCULEGION,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.FIDOUGH,e.DACHSBUN,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.BOMBIRDIER,e.PALAFIN,e.REVAVROOM,e.CYCLIZAR,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.VELUZA,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.GREAT_TUSK,e.IRON_TREADS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_ZAPDOS,e.HISUI_TYPHLOSION,e.PALDEA_TAUROS],[t.SKILL_SWAP]:[e.BUTTERFREE,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.VENONAT,e.VENOMOTH,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.CHANSEY,e.STARMIE,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.NATU,e.XATU,e.ESPEON,e.UMBREON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.STANTLER,e.SMOOCHUM,e.BLISSEY,e.LUGIA,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.SPOINK,e.GRUMPIG,e.SPINDA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.JIRACHI,e.DEOXYS,e.WORMADAM,e.MOTHIM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.GALLADE,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.MANAPHY,e.VICTINI,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ALOMOMOLA,e.ELGYEM,e.BEHEEYEM,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SYLVEON,e.CARBINK,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.DIANCIE,e.HOOPA,e.CUTIEFLY,e.RIBOMBEE,e.ORANGURU,e.SANDYGAST,e.PALOSSAND,e.TAPU_LELE,e.MAGEARNA,e.STAKATAKA,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.MR_RIME,e.RUNERIGUS,e.INDEEDEE,e.CALYREX,e.WYRDEER,e.MEOWSCARADA,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.FARIGIRAF,e.IRON_VALIANT,e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.GALAR_YAMASK],[t.IMPRISON]:[e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.TOGETIC,e.NATU,e.XATU,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.STANTLER,e.LUGIA,e.HO_OH,e.CELEBI,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.BALTOY,e.CLAYDOL,e.MILOTIC,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.JIRACHI,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.BRONZOR,e.BRONZONG,e.SPIRITOMB,e.TOGEKISS,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.ARCEUS,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FRILLISH,e.JELLICENT,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.GOLETT,e.GOLURK,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,[e.MEOWSTIC,"male"],e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.DECIDUEYE,e.CUTIEFLY,e.RIBOMBEE,e.ORANGURU,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.NECROZMA,e.MAGEARNA,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.MORGREM,e.GRIMMSNARL,e.RUNERIGUS,e.ALCREMIE,e.FROSMOTH,e.STONJOURNER,e.INDEEDEE,e.ZACIAN,e.ZAMAZENTA,e.CALYREX,e.WYRDEER,e.ENAMORUS,e.SKELEDIRGE,e.RABSCA,e.FARIGIRAF,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_VALIANT,e.IRON_LEAVES,e.POLTCHAGEIST,e.SINISTCHA,e.MUNKIDORI,e.PECHARUNT,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_ARTICUNO,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_YAMASK,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.SECRET_POWER]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.DIVE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTOPS,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.REMORAID,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.SUICUNE,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.BARBOACH,e.WHISCASH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.FINNEON,e.LUMINEON,e.MANTYKE,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.SEISMITOAD,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.BEARTIC,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.ARAQUANID,e.GOLISOPOD,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.CLOBBOPUS,e.GRAPPLOCT,e.EISCUE,e.DRACOVISH,e.ARCTOVISH,e.DRAKLOAK,e.DRAGAPULT,e.FINIZEN,e.PALAFIN,e.DONDOZO,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,[e.URSHIFU,"rapid-strike"]],[t.FEATHER_DANCE]:[e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.FARFETCHD,e.DODUO,e.DODRIO,e.ARTICUNO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.NATU,e.XATU,e.MURKROW,e.DELIBIRD,e.LUGIA,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.WINGULL,e.PELIPPER,e.SWABLU,e.ALTARIA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.HONCHKROW,e.CHATOT,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.DUCKLETT,e.SWANNA,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.HAWLUCHA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.CRAMORANT,e.FROSMOTH,e.EISCUE,e.QUAXWELL,e.QUAQUAVAL,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.ESPATHRA,e.BOMBIRDIER,e.FLAMIGO,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.BLAZE_KICK]:[e.CHARIZARD,e.HITMONLEE,e.MEW,e.COMBUSKEN,e.BLAZIKEN,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.RIOLU,e.LUCARIO,e.VICTINI,e.MIENSHAO,e.GENESECT,e.INCINEROAR,e.MARSHADOW,e.ZERAORA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.GALAR_ZAPDOS],[t.HYPER_VOICE]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.ARCANINE,e.CHANSEY,e.JYNX,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.MEW,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MARILL,e.AZUMARILL,e.POLITOED,e.ESPEON,e.UMBREON,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.TEDDIURSA,e.URSARING,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.BLISSEY,e.LUGIA,e.HO_OH,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.AZURILL,e.SKITTY,e.DELCATTY,e.MANECTRIC,e.WAILMER,e.WAILORD,e.GRUMPIG,e.SPINDA,e.SWABLU,e.ALTARIA,e.CHIMECHO,e.BAGON,e.SHELGON,e.SALAMENCE,e.RAYQUAZA,e.TORTERRA,e.KRICKETUNE,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.HAPPINY,e.CHATOT,e.MUNCHLAX,e.HIPPOWDON,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GALLADE,e.ROTOM,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.AUDINO,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.MARACTUS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.MELOETTA,e.DELPHOX,e.LITLEO,e.PYROAR,e.PANCHAM,e.PANGORO,e.FURFROU,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ROCKRUFF,e.LYCANROC,e.SALAZZLE,e.ORANGURU,e.SILVALLY,e.TURTONATOR,e.DRAMPA,e.KOMMO_O,e.TAPU_KOKO,e.SOLGALEO,e.NECROZMA,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.GOSSIFLEUR,e.ELDEGOSS,e.BOLTUND,e.TOXTRICITY,e.OBSTAGOON,e.PERRSERKER,e.INDEEDEE,e.ARCTOZOLT,e.ZACIAN,e.ZAMAZENTA,e.ZARUDE,e.URSALUNA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.TANDEMAUS,e.MAUSHOLD,e.ARBOLIVA,e.SQUAWKABILLY,e.TADBULB,e.BELLIBOLT,e.MABOSSTIFF,e.ESPATHRA,e.BOMBIRDIER,e.PALAFIN,e.CYCLIZAR,e.CETODDLE,e.CETITAN,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_JUGULIS,e.ROARING_MOON,e.IRON_VALIANT,e.RAGING_BOLT,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_ARTICUNO,e.GALAR_MOLTRES,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_ARCANINE,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.BLOODMOON_URSALUNA],[t.BLAST_BURN]:[e.CHARIZARD,e.MEW,e.TYPHLOSION,e.BLAZIKEN,e.INFERNAPE,e.EMBOAR,e.DELPHOX,e.INCINEROAR,e.CINDERACE,e.SKELEDIRGE,e.HISUI_TYPHLOSION],[t.HYDRO_CANNON]:[e.BLASTOISE,e.MEW,e.FERALIGATR,e.SWAMPERT,e.EMPOLEON,e.SAMUROTT,e.GRENINJA,e.PRIMARINA,e.INTELEON,e.QUAQUAVAL,e.HISUI_SAMUROTT],[t.WEATHER_BALL]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.VULPIX,e.NINETALES,e.VILEPLUME,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.CLOYSTER,e.HORSEA,e.SEADRA,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.MEGANIUM,e.BELLOSSOM,e.POLITOED,e.SUNKERN,e.SUNFLORA,e.ESPEON,e.UMBREON,e.SLOWKING,e.DELIBIRD,e.KINGDRA,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LUGIA,e.HO_OH,e.CELEBI,e.SWAMPERT,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.PELIPPER,e.MASQUERAIN,e.ROSELIA,e.WAILMER,e.WAILORD,e.TORKOAL,e.ALTARIA,e.LUNATONE,e.SOLROCK,e.WHISCASH,e.MILOTIC,e.CASTFORM,e.SNORUNT,e.GLALIE,e.LATIAS,e.LATIOS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BUDEW,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.GASTRODON,e.DRIFLOON,e.DRIFBLIM,e.BRONZONG,e.HIPPOPOTAS,e.HIPPOWDON,e.SNOVER,e.ABOMASNOW,e.ELECTIVIRE,e.MAGMORTAR,e.LEAFEON,e.GLACEON,e.FROSLASS,e.PHIONE,e.MANAPHY,e.GIGALITH,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.LILLIGANT,e.MARACTUS,e.SWANNA,e.VANILLUXE,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.GRENINJA,e.VIVILLON,e.CLAUNCHER,e.CLAWITZER,e.HELIOLISK,e.AMAURA,e.AURORUS,e.SYLVEON,e.GOODRA,e.VOLCANION,e.PRIMARINA,e.FOMANTIS,e.LURANTIS,e.SHIINOTIC,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.ELDEGOSS,e.CRAMORANT,e.FROSMOTH,e.EISCUE,e.ENAMORUS,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.ARMAROUGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.RELLOR,e.RABSCA,e.WALKING_WAKE,e.GOUGING_FIRE,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.HISUI_LILLIGANT,e.HISUI_GOODRA],[t.FAKE_TEARS]:[e.PIKACHU,e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.JYNX,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.MEW,e.TOTODILE,e.CLEFFA,e.IGGLYBUFF,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.ESPEON,e.UMBREON,e.MISDREAVUS,e.SNUBBULL,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SMOOCHUM,e.SHROOMISH,e.BRELOOM,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.AZURILL,e.SKITTY,e.MAWILE,e.PLUSLE,e.MINUN,e.ILLUMISE,e.SPINDA,e.CHIMECHO,e.SNORUNT,e.GLALIE,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.GLAMEOW,e.BONSLY,e.WEAVILE,e.LEAFEON,e.GLACEON,e.FROSLASS,e.PURRLOIN,e.LIEPARD,e.WOOBAT,e.SWOOBAT,e.COTTONEE,e.WHIMSICOTT,e.SCRAGGY,e.SCRAFTY,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.DEERLING,e.SAWSBUCK,e.VULLABY,e.MANDIBUZZ,e.MELOETTA,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.SYLVEON,e.DIANCIE,e.CUTIEFLY,e.RIBOMBEE,e.SALAZZLE,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.MORPEKO,e.URSALUNA,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.TANDEMAUS,e.MAUSHOLD,e.SQUAWKABILLY,e.MASCHIFF,e.MABOSSTIFF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.SCREAM_TAIL,e.FLUTTER_MANE,e.PECHARUNT,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_YAMASK,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.AIR_CUTTER]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.VENOMOTH,e.FARFETCHD,e.DODUO,e.DODRIO,e.SCYTHER,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.TOGETIC,e.NATU,e.XATU,e.YANMA,e.MURKROW,e.SCIZOR,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.LUGIA,e.HO_OH,e.BEAUTIFLY,e.DUSTOX,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.NINJASK,e.VOLBEAT,e.ILLUMISE,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.TROPIUS,e.SALAMENCE,e.LATIAS,e.LATIOS,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.DRIFLOON,e.DRIFBLIM,e.HONCHKROW,e.CHATOT,e.FINNEON,e.LUMINEON,e.MANTYKE,e.TOGEKISS,e.YANMEGA,e.GIRATINA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.DUCKLETT,e.SWANNA,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.VOLCARONA,e.TORNADUS,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.NOIBAT,e.NOIVERN,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.KARTANA,e.NAGANADEL,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CRAMORANT,e.KLEAVOR,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.BOMBIRDIER,e.FLAMIGO,e.IRON_BUNDLE,e.IRON_JUGULIS,e.FEZANDIPITI,e.SHAYMIN,e.GALAR_ARTICUNO,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.OVERHEAT]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.VULPIX,e.NINETALES,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.MAGMAR,e.FLAREON,e.MOLTRES,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SNUBBULL,e.GRANBULL,e.SLUGMA,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.ENTEI,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.LOUDRED,e.EXPLOUD,e.MANECTRIC,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SOLROCK,e.GROUDON,e.RAYQUAZA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.MAGMORTAR,e.DIALGA,e.HEATRAN,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.ZEBSTRIKA,e.DARUMAKA,e.DARMANITAN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.HEATMOR,e.LARVESTA,e.VOLCARONA,e.RESHIRAM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.TOUCANNON,e.SALANDIT,e.SALAZZLE,e.TURTONATOR,e.BLACEPHALON,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.CARKOL,e.COALOSSAL,e.CENTISKORCH,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.SCOVILLAIN,e.REVAVROOM,e.CYCLIZAR,e.ANNIHILAPE,e.IRON_MOTH,e.CHI_YU,e.KORAIDON,e.MIRAIDON,e.GOUGING_FIRE,[e.ROTOM,"heat"],e.GALAR_WEEZING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,[e.PALDEA_TAUROS,"blaze"]],[t.ROCK_TOMB]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.GRIMER,e.MUK,e.ONIX,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.PINSIR,e.TAUROS,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.GRANBULL,e.SHUCKLE,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.MANTINE,e.SKARMORY,e.PHANPY,e.DONPHAN,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.ZANGOOSE,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.KECLEON,e.DUSCLOPS,e.ABSOL,e.SPHEAL,e.SEALEO,e.WALREIN,e.HUNTAIL,e.RELICANTH,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.BRONZOR,e.BRONZONG,e.BONSLY,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.DARKRAI,e.ARCEUS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.HYDREIGON,e.TERRAKION,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.BINACLE,e.BARBARACLE,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.HAWLUCHA,e.CARBINK,e.BERGMITE,e.AVALUGG,e.DIANCIE,e.HOOPA,e.VOLCANION,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.PASSIMIAN,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.KOMALA,e.TURTONATOR,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.SOLGALEO,e.NIHILEGO,e.BUZZWOLE,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.STAKATAKA,e.MELMETAL,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.FALINKS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.URSHIFU,e.ZARUDE,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.SPIDOPS,e.PAWMOT,e.GARGANACL,e.KLAWF,e.RELLOR,e.RABSCA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.BOMBIRDIER,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.ANNIHILAPE,e.CLODSIRE,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.IRON_TREADS,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_THORNS,e.TING_LU,e.OKIDOGI,e.OGERPON,e.ARCHALUDON,e.IRON_BOULDER,[e.WORMADAM,"sandy"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_CORSOLA,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.METAL_SOUND]:[e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.ELECTABUZZ,e.JOLTEON,e.KABUTO,e.KABUTOPS,e.ZAPDOS,e.MEW,e.FORRETRESS,e.SKARMORY,e.ELEKID,e.ARON,e.LAIRON,e.AGGRON,e.REGISTEEL,e.JIRACHI,e.EMPOLEON,e.SHIELDON,e.BASTIODON,[e.WORMADAM,"trash"],e.BRONZOR,e.BRONZONG,e.LUCARIO,e.MAGNEZONE,e.ELECTIVIRE,e.PROBOPASS,e.DIALGA,e.HEATRAN,e.DRILBUR,e.EXCADRILL,e.KLINK,e.KLANG,e.KLINKLANG,e.PAWNIARD,e.BISHARP,e.DURANT,e.COBALION,e.GENESECT,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.KLEFKI,e.TYPE_NULL,e.SILVALLY,e.DHELMISE,e.KOMMO_O,e.SOLGALEO,e.CELESTEELA,e.MAGEARNA,e.CORVIKNIGHT,e.TOXEL,e.TOXTRICITY,e.PERRSERKER,e.DURALUDON,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.VAROOM,e.REVAVROOM,e.ORTHWORM,e.KINGAMBIT,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_JUGULIS,e.IRON_MOTH,e.GHOLDENGO,e.MIRAIDON,e.IRON_LEAVES,e.ARCHALUDON,e.IRON_CROWN,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.GALAR_MEOWTH,e.GALAR_STUNFISK],[t.COSMIC_POWER]:[e.CLEFAIRY,e.CLEFABLE,e.STARYU,e.STARMIE,e.MEW,e.NATU,e.XATU,e.SKITTY,e.DELCATTY,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.CASTFORM,e.CHIMECHO,e.METANG,e.METAGROSS,e.RAYQUAZA,e.JIRACHI,[e.DEOXYS,"","attack"],e.BUNEARY,e.LOPUNNY,e.CHINGLING,e.ARCEUS,e.SIGILYPH,e.GOTHITELLE,e.ELGYEM,e.BEHEEYEM,e.MINIOR,e.COSMOEM,e.SOLGALEO,e.LUNALA,e.NECROZMA,e.ETERNATUS,e.RELLOR,e.RABSCA],[t.SIGNAL_BEAM]:[e.BLASTOISE,e.BUTTERFREE,e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.VENONAT,e.VENOMOTH,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.SEEL,e.DEWGONG,e.CLOYSTER,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.LAPRAS,e.VAPOREON,e.JOLTEON,e.PORYGON,e.ARTICUNO,e.ZAPDOS,e.MEWTWO,e.MEW,e.SPINARAK,e.ARIADOS,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.YANMA,e.ESPEON,e.SLOWKING,e.GIRAFARIG,e.FORRETRESS,e.QWILFISH,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.KINGDRA,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.ELEKID,e.RAIKOU,e.SUICUNE,e.LUGIA,e.HO_OH,e.CELEBI,e.BEAUTIFLY,e.DUSTOX,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.SPOINK,e.GRUMPIG,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.CHIMECHO,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.GOREBYSS,e.METANG,e.METAGROSS,e.REGICE,e.KYOGRE,e.JIRACHI,e.DEOXYS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.SHINX,e.LUXIO,e.LUXRAY,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.FINNEON,e.LUMINEON,e.MANTYKE,e.MAGNEZONE,e.ELECTIVIRE,e.TOGEKISS,e.YANMEGA,e.GLACEON,e.PORYGON_Z,e.GALLADE,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.VICTINI,e.WATCHOG,e.MUNNA,e.MUSHARNA,e.BLITZLE,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.GOLETT,e.GOLURK,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.ZEKROM,e.KYUREM,e.MELOETTA,e.GENESECT,e.DELPHOX,e.VIVILLON,e.ESPURR,e.MEOWSTIC,e.MALAMAR,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.HOOPA,e.VIKAVOLT,e.CUTIEFLY,e.RIBOMBEE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.TYPE_NULL,e.SILVALLY,e.BRUXISH,e.DRAMPA,e.LUNALA,e.PHEROMOSA,e.XURKITREE,e.NECROZMA,e.MAGEARNA,e.POIPOLE,e.NAGANADEL,e.WYRDEER,e.FARIGIRAF,e.ALOLA_RAICHU],[t.SAND_TOMB]:[e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.ONIX,e.MEW,e.SUDOWOODO,e.PINECO,e.FORRETRESS,e.GLIGAR,e.STEELIX,e.SCIZOR,e.SHUCKLE,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.SKARMORY,e.PHANPY,e.DONPHAN,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.MARSHTOMP,e.SWAMPERT,e.NOSEPASS,e.LAIRON,e.AGGRON,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.LUNATONE,e.SOLROCK,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.REGIROCK,e.REGISTEEL,e.GROUDON,e.TURTWIG,e.GROTLE,e.TORTERRA,e.GASTRODON,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.GLISCOR,e.MAMOSWINE,e.PROBOPASS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.LANDORUS,e.DIGGERSBY,e.CARBINK,e.DIANCIE,e.MUDBRAY,e.MUDSDALE,e.SANDYGAST,e.PALOSSAND,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.RUNERIGUS,e.STONJOURNER,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.SANDY_SHOCKS,e.IRON_THORNS,e.TING_LU,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO],[t.MUDDY_WATER]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWBRO,e.SEEL,e.DEWGONG,e.LICKITUNG,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.KINGDRA,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.AZURILL,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.CLAMPERL,e.RELICANTH,e.KYOGRE,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.HIPPOPOTAS,e.HIPPOWDON,e.LICKILICKY,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.JELLICENT,e.STUNFISK,e.KELDEO,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.GOOMY,e.SLIGGOO,e.GOODRA,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.GOLISOPOD,e.DHELMISE,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.DREDNAW,e.CLOBBOPUS,e.GRAPPLOCT,e.PINCURCHIN,e.BASCULEGION,e.TADBULB,e.BELLIBOLT,e.WIGLETT,e.WUGTRIO,e.TATSUGIRI,e.CLODSIRE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_STUNFISK,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.BULLET_SEED]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.HERACROSS,e.REMORAID,e.OCTILLERY,e.MANTINE,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SHROOMISH,e.BRELOOM,e.ROSELIA,e.GULPIN,e.SWALOT,e.CACNEA,e.CACTURNE,e.LILEEP,e.CRADILY,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.LEAFEON,e.SHAYMIN,e.ARCEUS,e.PATRAT,e.WATCHOG,e.PANSAGE,e.SIMISAGE,e.LEAVANNY,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.FERROSEED,e.FERROTHORN,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.SKIDDO,e.GOGOAT,e.PUMPKABOO,e.GOURGEIST,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.FOMANTIS,e.LURANTIS,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.TAPU_BULU,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.GOSSIFLEUR,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.MORPEKO,e.ZARUDE,e.CALYREX,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.TANDEMAUS,e.MAUSHOLD,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.BRUTE_BONNET,e.WO_CHIEN,e.DIPPLIN,e.OGERPON,e.HYDRAPPLE,[e.WORMADAM,"plant"],e.ALOLA_EXEGGUTOR,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.AERIAL_ACE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.ZUBAT,e.GOLBAT,e.PARAS,e.PARASECT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.SLOWBRO,e.FARFETCHD,e.DODUO,e.DODRIO,e.CUBONE,e.MAROWAK,e.KANGASKHAN,e.MR_MIME,e.SCYTHER,e.PORYGON,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.YANMA,e.MURKROW,e.MISDREAVUS,e.GLIGAR,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.PORYGON2,e.HITMONTOP,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.BEAUTIFLY,e.DUSTOX,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.FLYGON,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.KECLEON,e.TROPIUS,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGISTEEL,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.KRICKETUNE,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHATOT,e.GIBLE,e.GABITE,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.MANTYKE,e.WEAVILE,e.TANGROWTH,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLISCOR,e.PORYGON_Z,e.GALLADE,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.LEAVANNY,e.KROKOROK,e.KROOKODILE,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.DUCKLETT,e.SWANNA,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FERROTHORN,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.KELDEO,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.GOGOAT,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.HAWLUCHA,e.DEDENNE,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.LURANTIS,e.STUFFUL,e.BEWEAR,e.PASSIMIAN,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.BRUXISH,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.LUNALA,e.KARTANA,e.NECROZMA,e.NAGANADEL,e.ZERAORA,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.FLAPPLE,e.CRAMORANT,e.DRACOZOLT,e.KUBFU,e.URSHIFU,e.ZARUDE,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.FLORAGATO,e.MEOWSCARADA,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.SPIDOPS,e.LOKIX,e.TANDEMAUS,e.MAUSHOLD,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.ESPATHRA,e.BOMBIRDIER,e.CYCLIZAR,e.FLAMIGO,e.KINGAMBIT,e.SLITHER_WING,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.ROARING_MOON,e.IRON_VALIANT,e.IRON_LEAVES,e.FEZANDIPITI,e.IRON_BOULDER,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.ICICLE_SPEAR]:[e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.JYNX,e.LAPRAS,e.ARTICUNO,e.MEW,e.SNEASEL,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.DELIBIRD,e.SNORUNT,e.GLALIE,e.SEALEO,e.WALREIN,e.REGICE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.GLACEON,e.MAMOSWINE,e.FROSLASS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.KYUREM,e.AURORUS,e.BERGMITE,e.AVALUGG,e.INTELEON,e.CURSOLA,e.MR_RIME,e.SNOM,e.FROSMOTH,e.EISCUE,e.ARCTOZOLT,e.ARCTOVISH,e.GLASTRIER,e.CETODDLE,e.CETITAN,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.GALAR_MR_MIME,e.GALAR_CORSOLA,[e.CALYREX,"ice"],e.HISUI_AVALUGG],[t.IRON_DEFENSE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.METAPOD,e.BUTTERFREE,e.KAKUNA,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.RHYDON,e.MR_MIME,e.PINSIR,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.MEW,e.SUDOWOODO,e.SLOWKING,e.PINECO,e.FORRETRESS,e.STEELIX,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SLUGMA,e.MAGCARGO,e.CORSOLA,e.SKARMORY,e.DONPHAN,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.SILCOON,e.CASCOON,e.NOSEPASS,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.TORKOAL,e.SOLROCK,e.CORPHISH,e.CRAWDAUNT,e.CLAYDOL,e.ANORITH,e.ARMALDO,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.BAGON,e.SHELGON,e.SALAMENCE,e.BELDUM,e.METANG,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.JIRACHI,e.TORTERRA,e.EMPOLEON,e.SHIELDON,e.BASTIODON,e.BRONZOR,e.BRONZONG,e.RIOLU,e.LUCARIO,e.DRAPION,e.MAGNEZONE,e.RHYPERIOR,e.PROBOPASS,e.DIALGA,e.HEATRAN,e.ARCEUS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.KARRABLAST,e.ESCAVALIER,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.CRYOGONAL,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.DURANT,e.COBALION,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.SPEWPA,e.VIVILLON,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.CARBINK,e.KLEFKI,e.BERGMITE,e.AVALUGG,e.DIANCIE,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.TURTONATOR,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.MELTAN,e.MELMETAL,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SANDACONDA,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.FALINKS,e.STONJOURNER,e.EISCUE,e.CUFANT,e.COPPERAJAH,e.ARCTOVISH,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.URSHIFU,e.GLASTRIER,e.ENAMORUS,e.NACLI,e.NACLSTACK,e.GARGANACL,e.ARMAROUGE,e.CERULEDGE,e.KLAWF,e.RELLOR,e.RABSCA,e.VAROOM,e.REVAVROOM,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.KINGAMBIT,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.IRON_LEAVES,e.POLTCHAGEIST,e.SINISTCHA,e.ARCHALUDON,e.IRON_CROWN,[e.DEOXYS,"defense"],[e.WORMADAM,"trash"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,[e.CALYREX,"ice"],e.HISUI_AVALUGG],[t.DRAGON_CLAW]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.AERODACTYL,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.TYRANITAR,e.SCEPTILE,e.AGGRON,e.FLYGON,e.ALTARIA,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.GIBLE,e.GABITE,e.GARCHOMP,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.CHESNAUGHT,e.PANGORO,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.GOODRA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.SALANDIT,e.SALAZZLE,e.BEWEAR,e.TYPE_NULL,e.SILVALLY,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.GUZZLORD,e.NAGANADEL,e.DRACOZOLT,e.DURALUDON,e.DRAGAPULT,e.REGIDRAGO,e.CERULEDGE,e.CYCLIZAR,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.ARCHALUDON,e.GOUGING_FIRE,e.HISUI_GOODRA],[t.FRENZY_PLANT]:[e.VENUSAUR,e.MEW,e.MEGANIUM,e.SCEPTILE,e.TORTERRA,e.SERPERIOR,e.CHESNAUGHT,e.DECIDUEYE,e.RILLABOOM,e.MEOWSCARADA,e.HISUI_DECIDUEYE],[t.BULK_UP]:[e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.HITMONLEE,e.HITMONCHAN,e.ELECTABUZZ,e.PINSIR,e.MEWTWO,e.MEW,e.SNUBBULL,e.GRANBULL,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.TYROGUE,e.HITMONTOP,e.COMBUSKEN,e.BLAZIKEN,e.SWAMPERT,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.GROUDON,e.RAYQUAZA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.BUIZEL,e.FLOATZEL,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.ELECTIVIRE,e.GALLADE,e.DIALGA,e.PALKIA,e.ARCEUS,e.PIGNITE,e.EMBOAR,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.KROOKODILE,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.EELEKTROSS,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.RUFFLET,e.BRAVIARY,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.TALONFLAME,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.BARBARACLE,e.HAWLUCHA,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.CRABRAWLER,e.CRABOMINABLE,e.LYCANROC,e.STUFFUL,e.BEWEAR,e.PASSIMIAN,e.GOLISOPOD,e.KOMALA,e.TURTONATOR,e.MIMIKYU,e.BRUXISH,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.BUZZWOLE,e.MARSHADOW,e.ZERAORA,e.RILLABOOM,e.RABOOT,e.CINDERACE,e.CORVIKNIGHT,e.BOLTUND,e.CLOBBOPUS,e.GRAPPLOCT,e.GRIMMSNARL,e.OBSTAGOON,e.FALINKS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.URSALUNA,e.SNEASLER,e.QUAQUAVAL,e.PAWMOT,e.CERULEDGE,e.PALAFIN,e.FLAMIGO,e.ANNIHILAPE,e.GREAT_TUSK,e.SCREAM_TAIL,e.SLITHER_WING,e.KORAIDON,e.OKIDOGI,e.ALOLA_RATICATE,e.GALAR_ZAPDOS,e.GALAR_DARMANITAN,e.HISUI_SNEASEL,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS],[t.BOUNCE]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PONYTA,e.RAPIDASH,e.HITMONLEE,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.MAGIKARP,e.GYARADOS,e.MEW,e.SPINARAK,e.ARIADOS,e.CHINCHOU,e.LANTURN,e.IGGLYBUFF,e.MARILL,e.AZUMARILL,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.QWILFISH,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.KINGDRA,e.DONPHAN,e.STANTLER,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.SHIFTRY,e.AZURILL,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.SPOINK,e.GRUMPIG,e.BARBOACH,e.WHISCASH,e.ABSOL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.CROAGUNK,e.TOXICROAK,e.FINNEON,e.LUMINEON,e.MANTYKE,e.PHIONE,e.MANAPHY,e.VICTINI,e.BLITZLE,e.ZEBSTRIKA,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.MARACTUS,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.DEERLING,e.SAWSBUCK,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.EELEKTRIK,e.EELEKTROSS,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.COBALION,e.VIRIZION,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.PYROAR,e.GOGOAT,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HAWLUCHA,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.TOGEDEMARU,e.BUZZWOLE,e.PHEROMOSA,e.MARSHADOW,e.ZERAORA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.DUBWOOL,e.ARROKUDA,e.BARRASKEWDA,e.REGIELEKI,e.LOKIX,e.FINIZEN,e.CETODDLE,e.CETITAN,e.CHI_YU,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_ZAPDOS,e.GALAR_STUNFISK],[t.MUD_SHOT]:[e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.RHYHORN,e.RHYDON,e.GOLDEEN,e.SEAKING,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.MEW,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.DUNSPARCE,e.GLIGAR,e.QWILFISH,e.SHUCKLE,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.REMORAID,e.OCTILLERY,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOMBRE,e.LUDICOLO,e.SURSKIT,e.MASQUERAIN,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.SABLEYE,e.GULPIN,e.SWALOT,e.NUMEL,e.CAMERUPT,e.GRUMPIG,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.RELICANTH,e.GROUDON,e.TURTWIG,e.GROTLE,e.TORTERRA,e.PACHIRISU,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOPOTAS,e.HIPPOWDON,e.CROAGUNK,e.TOXICROAK,e.RHYPERIOR,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.DRILBUR,e.EXCADRILL,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.TIRTOUGA,e.CARRACOSTA,e.CUBCHOO,e.BEARTIC,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.BOUFFALANT,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.SKIDDO,e.GOGOAT,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.GOOMY,e.SLIGGOO,e.GOODRA,e.VOLCANION,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDSDALE,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.NICKIT,e.THIEVUL,e.CHEWTLE,e.DREDNAW,e.SILICOBRA,e.SANDACONDA,e.CLOBBOPUS,e.GRAPPLOCT,e.OBSTAGOON,e.CUFANT,e.COPPERAJAH,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.BASCULEGION,e.OVERQWIL,e.LECHONK,e.OINKOLOGNE,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.NACLI,e.NACLSTACK,e.GARGANACL,e.TADBULB,e.BELLIBOLT,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.RELLOR,e.RABSCA,e.WIGLETT,e.WUGTRIO,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.CLODSIRE,e.DUDUNSPARCE,e.GREAT_TUSK,e.SANDY_SHOCKS,e.IRON_TREADS,e.WO_CHIEN,e.TING_LU,e.KORAIDON,e.WALKING_WAKE,e.PIKACHU,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_STUNFISK,e.HISUI_QWILFISH,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.POISON_TAIL]:[e.EKANS,e.ARBOK,e.NIDORAN_F,e.NIDORAN_M,e.MEW,e.DUNSPARCE,e.GLIGAR,e.QWILFISH,e.SEVIPER,e.STUNKY,e.SKUNTANK,e.SKORUPI,e.GLISCOR,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.DRUDDIGON,e.SKRELP,e.DRAGALGE,e.GOOMY,e.GOODRA,e.SALANDIT,e.SALAZZLE,e.SILICOBRA,e.SANDACONDA,e.TOXTRICITY,e.ETERNATUS,e.SNEASLER,e.OVERQWIL,e.GRAFAIAI,e.CLODSIRE,e.DUDUNSPARCE,e.OKIDOGI,e.FEZANDIPITI,e.PIKACHU,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.PALDEA_WOOPER],[t.COVET]:[e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.FARFETCHD,e.HITMONLEE,e.HITMONCHAN,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SENTRET,e.FURRET,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.AIPOM,e.ESPEON,e.UMBREON,e.SNUBBULL,e.GRANBULL,e.SHUCKLE,e.TEDDIURSA,e.URSARING,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.BLISSEY,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.AZURILL,e.SKITTY,e.DELCATTY,e.PLUSLE,e.MINUN,e.ILLUMISE,e.ROSELIA,e.SPOINK,e.GRUMPIG,e.SPINDA,e.LATIAS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.BUDEW,e.ROSERADE,e.PACHIRISU,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.GLAMEOW,e.PURUGLY,e.BONSLY,e.MIME_JR,e.HAPPINY,e.MUNCHLAX,e.ELECTIVIRE,e.MAGMORTAR,e.LICKILICKY,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.PHIONE,e.MANAPHY,e.SHAYMIN,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANPOUR,e.SIMIPOUR,e.PANSEAR,e.SIMISEAR,e.AUDINO,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.EMOLGA,e.CUBCHOO,e.BEARTIC,e.KELDEO,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLABEBE,e.FLOETTE,e.FLORGES,e.PANCHAM,e.PANGORO,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.SYLVEON,e.DEDENNE,e.CARBINK,e.KLEFKI,e.DIANCIE,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.SALANDIT,e.SALAZZLE,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.TOGEDEMARU,e.MIMIKYU,e.POIPOLE,e.GREEDENT,e.PERRSERKER,e.SIRFETCHD,e.MR_RIME,e.URSALUNA,e.LECHONK,e.OINKOLOGNE,e.FIDOUGH,e.DACHSBUN,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.ANNIHILAPE,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_FARFETCHD,e.GALAR_MR_MIME,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE,e.ETERNAL_FLOETTE],[t.MAGICAL_LEAF]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGUTOR,e.MR_MIME,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CLEFFA,e.TOGETIC,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.ESPEON,e.MISDREAVUS,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHROOMISH,e.BRELOOM,e.ROSELIA,e.CACNEA,e.CACTURNE,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.MISMAGIUS,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TOGEKISS,e.LEAFEON,e.GALLADE,e.SHAYMIN,e.ARCEUS,e.SNIVY,e.PANSAGE,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.PETILIL,e.LILLIGANT,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.VIRIZION,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.SYLVEON,e.PHANTUMP,e.TREVENANT,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.CUTIEFLY,e.RIBOMBEE,e.FOMANTIS,e.LURANTIS,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.GOSSIFLEUR,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.ALCREMIE,e.INDEEDEE,e.ZARUDE,e.CALYREX,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.BRUTE_BONNET,e.FLUTTER_MANE,e.WO_CHIEN,e.IRON_VALIANT,e.IRON_LEAVES,e.POLTCHAGEIST,e.SINISTCHA,e.OGERPON,e.HYDRAPPLE,[e.MEOWSTIC,"female"],e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.CALM_MIND]:[e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.EXEGGUTOR,e.CHANSEY,e.MR_MIME,e.JYNX,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CLEFFA,e.NATU,e.XATU,e.SUDOWOODO,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.SNEASEL,e.CORSOLA,e.STANTLER,e.SMOOCHUM,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LUGIA,e.HO_OH,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.SPINDA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.RELICANTH,e.LATIAS,e.LATIOS,e.KYOGRE,e.JIRACHI,e.DEOXYS,e.INFERNAPE,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.SPIRITOMB,e.LUCARIO,e.WEAVILE,e.LEAFEON,e.GLACEON,e.GALLADE,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.GIRATINA,e.CRESSELIA,e.MANAPHY,e.DARKRAI,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ALOMOMOLA,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.MIENFOO,e.MIENSHAO,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.LANDORUS,e.KELDEO,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.AMAURA,e.AURORUS,e.SYLVEON,e.CARBINK,e.KLEFKI,e.TREVENANT,e.XERNEAS,e.DIANCIE,e.HOOPA,e.PRIMARINA,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.COMFEY,e.ORANGURU,e.MINIOR,e.KOMALA,e.BRUXISH,e.DRAMPA,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.XURKITREE,e.KARTANA,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.BLACEPHALON,e.ZERAORA,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.CURSOLA,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.FROSMOTH,e.INDEEDEE,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.SNEASLER,e.ENAMORUS,e.ARMAROUGE,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_VALIANT,e.MIRAIDON,e.IRON_LEAVES,e.POLTCHAGEIST,e.SINISTCHA,e.MUNKIDORI,e.FEZANDIPITI,e.RAGING_BOLT,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RAICHU,e.ALOLA_NINETALES,e.ETERNAL_FLOETTE,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_YAMASK,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.BLOODMOON_URSALUNA],[t.LEAF_BLADE]:[e.VICTREEBEL,e.FARFETCHD,e.MEW,e.BELLOSSOM,e.CELEBI,e.GROVYLE,e.SCEPTILE,e.NUZLEAF,e.SHIFTRY,e.TROPIUS,e.LEAFEON,e.GALLADE,e.SNIVY,e.SERVINE,e.SERPERIOR,e.LEAVANNY,e.LILLIGANT,e.VIRIZION,e.SKIDDO,e.GOGOAT,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.FOMANTIS,e.LURANTIS,e.KARTANA,e.SIRFETCHD,e.IRON_VALIANT,e.IRON_LEAVES,e.GALAR_FARFETCHD,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.DRAGON_DANCE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.ONIX,e.HORSEA,e.SEADRA,e.GYARADOS,e.LAPRAS,e.AERODACTYL,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.STEELIX,e.KINGDRA,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.SCEPTILE,e.FLYGON,e.ALTARIA,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.MILOTIC,e.TROPIUS,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.ARCEUS,e.SCRAGGY,e.SCRAFTY,e.AXEW,e.FRAXURE,e.HAXORUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.TYRUNT,e.TYRANTRUM,e.NOIVERN,e.ZYGARDE,e.SALAZZLE,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.NECROZMA,e.NAGANADEL,e.FLAPPLE,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.REGIDRAGO,e.TATSUGIRI,e.IRON_THORNS,e.BAXCALIBUR,e.ROARING_MOON,e.WALKING_WAKE,e.GOUGING_FIRE],[t.ROCK_BLAST]:[e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SHELLDER,e.CLOYSTER,e.ONIX,e.RHYHORN,e.RHYDON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.MEW,e.SUDOWOODO,e.PINECO,e.FORRETRESS,e.STEELIX,e.SHUCKLE,e.HERACROSS,e.SLUGMA,e.MAGCARGO,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.MANTINE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.NOSEPASS,e.LAIRON,e.AGGRON,e.LUNATONE,e.SOLROCK,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.RELICANTH,e.REGIROCK,e.GROUDON,e.TORTERRA,e.SHIELDON,e.BASTIODON,e.GASTRODON,e.BRONZOR,e.BRONZONG,e.BONSLY,e.RHYPERIOR,e.MAMOSWINE,e.PROBOPASS,e.HEATRAN,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.EXCADRILL,e.CONKELDURR,e.DWEBBLE,e.CRUSTLE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.CINCCINO,e.TERRAKION,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.CARBINK,e.TRUMBEAK,e.TOUCANNON,e.LYCANROC,e.MINIOR,e.NECROZMA,e.STAKATAKA,e.BLACEPHALON,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.KLEAVOR,e.GARGANACL,e.KLAWF,e.BOMBIRDIER,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.IRON_THORNS,e.IRON_BOULDER,[e.WORMADAM,"sandy"],e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.GALAR_SLOWBRO,e.GALAR_CORSOLA,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_AVALUGG],[t.WATER_PULSE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.LICKITUNG,e.CHANSEY,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.JYNX,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.ARTICUNO,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MARILL,e.AZUMARILL,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SNEASEL,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.KINGDRA,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.CELEBI,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.AZURILL,e.SKITTY,e.DELCATTY,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.SPINDA,e.ZANGOOSE,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.GLAMEOW,e.PURUGLY,e.HAPPINY,e.SPIRITOMB,e.MUNCHLAX,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.TOGEKISS,e.GLACEON,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.STUNFISK,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.GOOMY,e.SLIGGOO,e.GOODRA,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.VOLCANION,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.GOLISOPOD,e.BRUXISH,e.DRAMPA,e.KOMMO_O,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.EISCUE,e.BASCULEGION,e.QUAXWELL,e.QUAQUAVAL,e.TANDEMAUS,e.MAUSHOLD,e.TADBULB,e.BELLIBOLT,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.CLODSIRE,e.SCREAM_TAIL,e.IRON_BUNDLE,e.WALKING_WAKE,e.TERAPAGOS,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_SLIGGOO,e.HISUI_GOODRA,[e.PALDEA_TAUROS,"aqua"],e.PALDEA_WOOPER],[t.ROOST]:[e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.VENOMOTH,e.FARFETCHD,e.DODUO,e.DODRIO,e.SCYTHER,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.TOGETIC,e.NATU,e.XATU,e.YANMA,e.MURKROW,e.DUNSPARCE,e.GLIGAR,e.SCIZOR,e.MANTINE,e.SKARMORY,e.LUGIA,e.HO_OH,e.BEAUTIFLY,e.DUSTOX,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.NINJASK,e.VOLBEAT,e.ILLUMISE,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.TROPIUS,e.SALAMENCE,e.LATIAS,e.LATIOS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.MOTHIM,e.VESPIQUEN,e.HONCHKROW,e.CHATOT,e.TOGEKISS,e.YANMEGA,e.GLISCOR,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.DUCKLETT,e.SWANNA,e.EMOLGA,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.VOLCARONA,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.VIKAVOLT,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.DRAMPA,e.TAPU_KOKO,e.LUNALA,e.BUZZWOLE,e.PHEROMOSA,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CRAMORANT,e.KLEAVOR,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.FLITTLE,e.ESPATHRA,e.BOMBIRDIER,e.FLAMIGO,e.DUDUNSPARCE,e.ROARING_MOON,e.FEZANDIPITI,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.GRAVITY]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MAGNEMITE,e.MAGNETON,e.EXEGGCUTE,e.EXEGGUTOR,e.CHANSEY,e.STARYU,e.STARMIE,e.PORYGON,e.MEWTWO,e.MEW,e.CLEFFA,e.IGGLYBUFF,e.ESPEON,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.PORYGON2,e.STANTLER,e.BLISSEY,e.GARDEVOIR,e.NOSEPASS,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.JIRACHI,e.DEOXYS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.HAPPINY,e.MAGNEZONE,e.GLACEON,e.PORYGON_Z,e.PROBOPASS,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.ARCEUS,e.MUNNA,e.MUSHARNA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.AUDINO,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.ELGYEM,e.BEHEEYEM,e.GOLETT,e.GOLURK,e.LANDORUS,e.MELOETTA,e.GENESECT,e.ESPURR,e.MEOWSTIC,e.CARBINK,e.XERNEAS,e.DIANCIE,e.HOOPA,e.ORANGURU,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.TOGEDEMARU,e.TAPU_LELE,e.TAPU_FINI,e.XURKITREE,e.CELESTEELA,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.HATTERENE,e.STONJOURNER,e.INDEEDEE,e.ETERNATUS,e.CALYREX,e.WYRDEER,e.GARGANACL,e.RABSCA,e.FARIGIRAF,e.SANDY_SHOCKS,e.IRON_LEAVES,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_EXEGGUTOR,[e.INDEEDEE,"male"]],[t.GYRO_BALL]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.SANDSHREW,e.SANDSLASH,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GEODUDE,e.GRAVELER,e.GOLEM,e.MAGNEMITE,e.MAGNETON,e.ONIX,e.VOLTORB,e.ELECTRODE,e.KOFFING,e.WEEZING,e.STARYU,e.STARMIE,e.OMANYTE,e.OMASTAR,e.MEW,e.TYPHLOSION,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.STEELIX,e.QWILFISH,e.SHUCKLE,e.MAGCARGO,e.DONPHAN,e.HITMONTOP,e.MILTANK,e.SABLEYE,e.TORKOAL,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.GLALIE,e.METANG,e.METAGROSS,e.RAYQUAZA,e.DRIFLOON,e.DRIFBLIM,e.BRONZOR,e.BRONZONG,e.MAGNEZONE,e.LICKILICKY,e.TEPIG,e.PIGNITE,e.EMBOAR,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.DARUMAKA,e.DARMANITAN,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FERROSEED,e.FERROTHORN,e.GOLETT,e.GOLURK,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.CARBINK,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.DIANCIE,e.VOLCANION,e.PASSIMIAN,e.MINIOR,e.TOGEDEMARU,e.DHELMISE,e.SOLGALEO,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.MELTAN,e.MELMETAL,e.SKWOVET,e.GREEDENT,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.PERRSERKER,e.DURALUDON,e.OVERQWIL,e.VAROOM,e.REVAVROOM,e.DUDUNSPARCE,e.SCREAM_TAIL,e.IRON_TREADS,e.DIPPLIN,e.ARCHALUDON,e.HYDRAPPLE,e.TERAPAGOS,[e.WORMADAM,"trash"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG],[t.BRINE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.HORSEA,e.SEADRA,e.STARYU,e.STARMIE,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.MEW,e.CHINCHOU,e.LANTURN,e.SLOWKING,e.QWILFISH,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.SUICUNE,e.LUGIA,e.WINGULL,e.PELIPPER,e.HARIYAMA,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.KYOGRE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.FINNEON,e.LUMINEON,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.PANPOUR,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.SANDYGAST,e.PALOSSAND,e.DHELMISE,e.TAPU_FINI,e.CLOBBOPUS,e.GRAPPLOCT,e.CURSOLA,e.PINCURCHIN,e.EISCUE,e.DRACOVISH,e.ARCTOVISH,e.DRAKLOAK,e.DRAGAPULT,e.OVERQWIL,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,[e.URSHIFU,"rapid-strike"],e.HISUI_QWILFISH],[t.PLUCK]:[e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.FARFETCHD,e.DODUO,e.DODRIO,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.NATU,e.XATU,e.MURKROW,e.DELIBIRD,e.SKARMORY,e.HO_OH,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.SWABLU,e.ALTARIA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.HONCHKROW,e.CHATOT,e.TOGEKISS,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.DUCKLETT,e.SWANNA,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.INKAY,e.MALAMAR,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CRAMORANT,e.DRACOZOLT,e.ARCTOZOLT,e.WATTREL,e.KILOWATTREL,e.FLITTLE,e.ESPATHRA,e.BOMBIRDIER,e.VELUZA,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.GALAR_ZAPDOS,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.TAILWIND]:[e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.VENOMOTH,e.FARFETCHD,e.SCYTHER,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.TOGETIC,e.NATU,e.XATU,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.YANMA,e.MURKROW,e.GLIGAR,e.SCIZOR,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.SUICUNE,e.LUGIA,e.HO_OH,e.BEAUTIFLY,e.DUSTOX,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.VOLBEAT,e.ILLUMISE,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.CASTFORM,e.TROPIUS,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.STARLY,e.STARAVIA,e.STARAPTOR,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.DRIFLOON,e.DRIFBLIM,e.HONCHKROW,e.CHATOT,e.FINNEON,e.LUMINEON,e.MANTYKE,e.TOGEKISS,e.YANMEGA,e.GLISCOR,e.ARCEUS,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.COTTONEE,e.WHIMSICOTT,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.DUCKLETT,e.SWANNA,e.EMOLGA,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.VOLCARONA,e.TORNADUS,e.RESHIRAM,e.ZEKROM,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.COMFEY,e.SILVALLY,e.DRAMPA,e.LUNALA,e.KARTANA,e.NAGANADEL,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CRAMORANT,e.FROSMOTH,e.KLEAVOR,e.ENAMORUS,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.BOMBIRDIER,e.FLAMIGO,e.DUDUNSPARCE,e.IRON_JUGULIS,e.ROARING_MOON,e.FEZANDIPITI,e.SHAYMIN,e.GIRATINA,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.U_TURN]:[e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.VENOMOTH,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.FARFETCHD,e.SCYTHER,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.MEW,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.CROBAT,e.NATU,e.XATU,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.YANMA,e.MURKROW,e.GLIGAR,e.SCIZOR,e.CELEBI,e.BLAZIKEN,e.BEAUTIFLY,e.DUSTOX,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.NINJASK,e.VOLBEAT,e.ILLUMISE,e.VIBRAVA,e.FLYGON,e.TROPIUS,e.RAYQUAZA,e.JIRACHI,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.STARLY,e.STARAVIA,e.STARAPTOR,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.AMBIPOM,e.LOPUNNY,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHATOT,e.FINNEON,e.LUMINEON,e.YANMEGA,e.GLISCOR,e.UXIE,e.MESPRIT,e.AZELF,e.PHIONE,e.MANAPHY,e.VICTINI,e.PURRLOIN,e.LIEPARD,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.WHIMSICOTT,e.DARUMAKA,e.DARMANITAN,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.EMOLGA,e.EELEKTRIK,e.EELEKTROSS,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.MELOETTA,e.GENESECT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.FURFROU,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.HAWLUCHA,e.DEDENNE,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.WISHIWASHI,e.TSAREENA,e.COMFEY,e.PASSIMIAN,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TOGEDEMARU,e.TAPU_KOKO,e.PHEROMOSA,e.NAGANADEL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.ORBEETLE,e.THIEVUL,e.FLAPPLE,e.PERRSERKER,e.FROSMOTH,e.DRAKLOAK,e.DRAGAPULT,e.KUBFU,e.URSHIFU,e.ZARUDE,e.KLEAVOR,e.SNEASLER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.QUAQUAVAL,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.TANDEMAUS,e.MAUSHOLD,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.SHROODLE,e.GRAFAIAI,e.FLITTLE,e.ESPATHRA,e.BOMBIRDIER,e.CYCLIZAR,e.FLAMIGO,e.ANNIHILAPE,e.SLITHER_WING,e.IRON_BUNDLE,e.IRON_JUGULIS,e.IRON_MOTH,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.CLOSE_COMBAT]:[e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.FARFETCHD,e.HITMONLEE,e.HITMONCHAN,e.SCYTHER,e.PINSIR,e.TAUROS,e.MEW,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.HITMONTOP,e.COMBUSKEN,e.BLAZIKEN,e.BRELOOM,e.MAKUHITA,e.HARIYAMA,e.MEDITITE,e.MEDICHAM,e.SHARPEDO,e.ZANGOOSE,e.CRAWDAUNT,e.ABSOL,e.MONFERNO,e.INFERNAPE,e.STARAPTOR,e.LOPUNNY,e.RIOLU,e.LUCARIO,e.TOXICROAK,e.GALLADE,e.PIGNITE,e.EMBOAR,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SAWK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ESCAVALIER,e.EELEKTROSS,e.HAXORUS,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.GOLURK,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.MELOETTA,e.CHESNAUGHT,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.TYRUNT,e.TYRANTRUM,e.HAWLUCHA,e.XERNEAS,e.INCINEROAR,e.CRABRAWLER,e.CRABOMINABLE,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.BEWEAR,e.PASSIMIAN,e.GOLISOPOD,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.SOLGALEO,e.BUZZWOLE,e.PHEROMOSA,e.MARSHADOW,e.ZERAORA,e.ARROKUDA,e.BARRASKEWDA,e.CLOBBOPUS,e.GRAPPLOCT,e.OBSTAGOON,e.PERRSERKER,e.SIRFETCHD,e.FALINKS,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.QUAQUAVAL,e.PAWMOT,e.CERULEDGE,e.PALAFIN,e.FLAMIGO,e.ANNIHILAPE,e.GREAT_TUSK,e.BRUTE_BONNET,e.SLITHER_WING,e.IRON_HANDS,e.IRON_VALIANT,e.KORAIDON,e.IRON_LEAVES,e.OKIDOGI,e.IRON_BOULDER,e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,[e.CALYREX,"ice"],e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_SNEASEL,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS],[t.PAYBACK]:[e.BEEDRILL,e.EKANS,e.ARBOK,e.VULPIX,e.NINETALES,e.ZUBAT,e.GOLBAT,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.TENTACOOL,e.TENTACRUEL,e.DODRIO,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.MR_MIME,e.JYNX,e.TAUROS,e.GYARADOS,e.AERODACTYL,e.MEW,e.CROBAT,e.POLITOED,e.AIPOM,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.PINECO,e.FORRETRESS,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.OCTILLERY,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.SMOOCHUM,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.PELIPPER,e.HARIYAMA,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.SPOINK,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.GLALIE,e.CRANIDOS,e.RAMPARDOS,e.FLOATZEL,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.SPIRITOMB,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.WEAVILE,e.RHYPERIOR,e.TANGROWTH,e.GLISCOR,e.DUSKNOIR,e.FROSLASS,e.AZELF,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.FOONGUS,e.AMOONGUSS,e.FERROSEED,e.FERROTHORN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.ESPURR,e.MEOWSTIC,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.YVELTAL,e.ZYGARDE,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.FOMANTIS,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.STEENEE,e.TSAREENA,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.BUZZWOLE,e.GUZZLORD,e.MARSHADOW,e.BLACEPHALON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.APPLETUN,e.TOXTRICITY,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.OBSTAGOON,e.PERRSERKER,e.MR_RIME,e.RUNERIGUS,e.FALINKS,e.PINCURCHIN,e.MORPEKO,e.COPPERAJAH,e.ARCTOZOLT,e.ZAMAZENTA,e.ETERNATUS,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,e.URSALUNA,e.MASCHIFF,e.MABOSSTIFF,e.BOMBIRDIER,e.FLAMIGO,e.BRUTE_BONNET,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,[e.CALYREX,"ice","shadow"]],[t.ASSURANCE]:[e.BEEDRILL,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.MACHAMP,e.DODUO,e.KOFFING,e.WEEZING,e.KANGASKHAN,e.SCYTHER,e.TAUROS,e.AERODACTYL,e.MEW,e.CROBAT,e.UMBREON,e.MURKROW,e.GIRAFARIG,e.QWILFISH,e.SCIZOR,e.HERACROSS,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.DONPHAN,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.MAWILE,e.CARVANHA,e.SHARPEDO,e.CACNEA,e.CACTURNE,e.SEVIPER,e.ABSOL,e.CRANIDOS,e.RAMPARDOS,e.VESPIQUEN,e.BUNEARY,e.LOPUNNY,e.HONCHKROW,e.GLAMEOW,e.STUNKY,e.SKUNTANK,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.AZELF,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.PATRAT,e.PURRLOIN,e.LIEPARD,e.WOOBAT,e.SWOOBAT,e.SCOLIPEDE,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.MARACTUS,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENSHAO,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.GENESECT,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.HAWLUCHA,e.GOODRA,e.INCINEROAR,e.LYCANROC,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.TOGEDEMARU,e.DHELMISE,e.TAPU_KOKO,e.PHEROMOSA,e.MARSHADOW,e.NAGANADEL,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.SIRFETCHD,e.FALINKS,e.PINCURCHIN,e.STONJOURNER,e.MORPEKO,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ETERNATUS,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.GLASTRIER,e.SPECTRIER,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.VAROOM,e.REVAVROOM,e.ANNIHILAPE,e.FARIGIRAF,e.KINGAMBIT,e.IRON_JUGULIS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.GALAR_MEOWTH,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,[e.CALYREX,"ice","shadow"],[e.PALDEA_TAUROS,"combat"]],[t.EMBARGO]:[e.PERSIAN,e.ABRA,e.KADABRA,e.ALAKAZAM,e.GASTLY,e.HAUNTER,e.GENGAR,e.MEWTWO,e.MEW,e.MURKROW,e.MISDREAVUS,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.SABLEYE,e.MAWILE,e.CACTURNE,e.ZANGOOSE,e.LUNATONE,e.SOLROCK,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.SPIRITOMB,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.PORYGON_Z,e.DUSKNOIR,e.FROSLASS,e.DARKRAI,e.VICTINI,e.PURRLOIN,e.LIEPARD,e.WOOBAT,e.SWOOBAT,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.TORNADUS,e.THUNDURUS,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.PANGORO,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.YVELTAL,e.HOOPA,e.INCINEROAR,e.ORICORIO,e.ORANGURU,e.PALOSSAND,e.MIMIKYU,e.BRUXISH,e.DHELMISE,e.NECROZMA,e.MAGEARNA,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK],[t.FLING]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GLOOM,e.VILEPLUME,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.QUAGSIRE,e.SLOWKING,e.GLIGAR,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.CORPHISH,e.CRAWDAUNT,e.KECLEON,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.CRANIDOS,e.RAMPARDOS,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MIME_JR,e.HAPPINY,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.GLISCOR,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.PALKIA,e.REGIGIGAS,e.PHIONE,e.MANAPHY,e.DARKRAI,e.VICTINI,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.WHIMSICOTT,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.REUNICLUS,e.EMOLGA,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.HEATMOR,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.DEDENNE,e.HOOPA,e.VOLCANION,e.INCINEROAR,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.FOMANTIS,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.BLACEPHALON,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.CINDERACE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.TOXTRICITY,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.MR_RIME,e.MILCERY,e.ALCREMIE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.KUBFU,e.URSHIFU,e.ZARUDE,e.URSALUNA,e.SNEASLER,e.FLORAGATO,e.MEOWSCARADA,e.QUAQUAVAL,e.SPIDOPS,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.ARBOLIVA,e.GARGANACL,e.ARMAROUGE,e.CERULEDGE,e.SHROODLE,e.GRAFAIAI,e.KLAWF,e.RELLOR,e.RABSCA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.FINIZEN,e.PALAFIN,e.FLAMIGO,e.ANNIHILAPE,e.KINGAMBIT,e.SCREAM_TAIL,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_THORNS,e.GHOLDENGO,e.IRON_VALIANT,e.OKIDOGI,e.MUNKIDORI,e.OGERPON,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.BLOODMOON_URSALUNA],[t.GASTRO_ACID]:[e.EKANS,e.ARBOK,e.ODDISH,e.GLOOM,e.VILEPLUME,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.SNORLAX,e.MEW,e.BELLOSSOM,e.SHUCKLE,e.GULPIN,e.SWALOT,e.SEVIPER,e.LILEEP,e.CRADILY,e.MUNCHLAX,e.CARNIVINE,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.PALPITOAD,e.SEISMITOAD,e.FOONGUS,e.AMOONGUSS,e.JOLTIK,e.GALVANTULA,e.EELEKTRIK,e.EELEKTROSS,e.SHELMET,e.ACCELGOR,e.HEATMOR,e.DIGGERSBY,e.SWIRLIX,e.SLURPUFF,e.MAREANIE,e.TOXAPEX,e.PYUKUMUKU,e.GUZZLORD,e.POIPOLE,e.NAGANADEL,e.CHEWTLE,e.DREDNAW,e.TAROUNTULA,e.SPIDOPS,e.ALOLA_GRIMER,e.ALOLA_MUK],[t.POWER_SWAP]:[e.VULPIX,e.NINETALES,e.ABRA,e.KADABRA,e.ALAKAZAM,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MR_MIME,e.MAGMAR,e.PORYGON,e.MEWTWO,e.MEW,e.NATU,e.XATU,e.ESPEON,e.GIRAFARIG,e.PORYGON2,e.MAGBY,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.GARDEVOIR,e.MEDITITE,e.SWABLU,e.ALTARIA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.BRONZOR,e.BRONZONG,e.TANGROWTH,e.MAGMORTAR,e.PORYGON_Z,e.CRESSELIA,e.VICTINI,e.MUNNA,e.MUSHARNA,e.DARMANITAN,e.SIGILYPH,e.COFAGRIGUS,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.ACCELGOR,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.MAGEARNA,e.DOTTLER,e.ORBEETLE,e.HATTERENE,e.GRIMMSNARL,e.MR_RIME,e.RUNERIGUS,e.INDEEDEE,e.ZAMAZENTA,e.CALYREX,e.RABSCA,e.FARIGIRAF,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_EXEGGUTOR,e.GALAR_MR_MIME,e.GALAR_ARTICUNO],[t.GUARD_SWAP]:[e.ABRA,e.KADABRA,e.ALAKAZAM,e.DROWZEE,e.MR_MIME,e.PORYGON,e.MEWTWO,e.MEW,e.NATU,e.XATU,e.WOOPER,e.QUAGSIRE,e.UMBREON,e.GIRAFARIG,e.SLUGMA,e.MAGCARGO,e.SKARMORY,e.PORYGON2,e.GARDEVOIR,e.MAWILE,e.MEDITITE,e.BALTOY,e.CLAYDOL,e.CASTFORM,e.BRONZOR,e.BRONZONG,e.PORYGON_Z,e.CRESSELIA,e.VICTINI,e.MUNNA,e.MUSHARNA,e.DARMANITAN,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.SHELMET,e.ACCELGOR,e.INKAY,e.MALAMAR,e.CARBINK,e.DIANCIE,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.MAGEARNA,e.DOTTLER,e.ORBEETLE,e.WOOLOO,e.DUBWOOL,e.HATTERENE,e.MR_RIME,e.RUNERIGUS,e.ZAMAZENTA,e.CALYREX,e.RABSCA,e.FARIGIRAF,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,[e.INDEEDEE,"female"]],[t.WORRY_SEED]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.PSYDUCK,e.GOLDUCK,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SHROOMISH,e.BRELOOM,e.ROSELIA,e.CACNEA,e.CACTURNE,e.LILEEP,e.CRADILY,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,e.WORMADAM,e.CHERUBI,e.CHERRIM,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.LEAFEON,e.SHAYMIN,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.MUNNA,e.MUSHARNA,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.FERROSEED,e.FERROTHORN,e.VIRIZION,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.TAPU_BULU,e.NIHILEGO,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.GOSSIFLEUR,e.ELDEGOSS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.CAPSAKID,e.SCOVILLAIN,e.ALOLA_EXEGGUTOR,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE,e.ETERNAL_FLOETTE],[t.TOXIC_SPIKES]:[e.BEEDRILL,e.EKANS,e.ARBOK,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.VENONAT,e.VENOMOTH,e.TENTACOOL,e.TENTACRUEL,e.MUK,e.SHELLDER,e.CLOYSTER,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.OMANYTE,e.OMASTAR,e.MEW,e.SPINARAK,e.ARIADOS,e.QUAGSIRE,e.PINECO,e.FORRETRESS,e.GLIGAR,e.QWILFISH,e.SHIFTRY,e.ROSELIA,e.GULPIN,e.SWALOT,e.CACNEA,e.CACTURNE,e.ROSERADE,e.VESPIQUEN,e.STUNKY,e.SKUNTANK,e.SKORUPI,e.DRAPION,e.GLISCOR,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.SHELMET,e.ACCELGOR,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.SKRELP,e.DRAGALGE,e.MAREANIE,e.TOXAPEX,e.SALANDIT,e.SALAZZLE,e.NIHILEGO,e.POIPOLE,e.NAGANADEL,e.TOXTRICITY,e.RUNERIGUS,e.PINCURCHIN,e.ETERNATUS,e.SNEASLER,e.OVERQWIL,e.MEOWSCARADA,e.TAROUNTULA,e.SPIDOPS,e.TOEDSCOOL,e.TOEDSCRUEL,e.VAROOM,e.REVAVROOM,e.GLIMMET,e.GLIMMORA,e.CLODSIRE,e.IRON_MOTH,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_YAMASK,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.PALDEA_WOOPER],[t.FLARE_BLITZ]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.VULPIX,e.NINETALES,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.MAGMAR,e.FLAREON,e.MOLTRES,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.ENTEI,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SOLROCK,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.MAGMORTAR,e.HEATRAN,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.DARUMAKA,e.DARMANITAN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.HEATMOR,e.LARVESTA,e.VOLCARONA,e.RESHIRAM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SALANDIT,e.SALAZZLE,e.SOLGALEO,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.CARKOL,e.COALOSSAL,e.CENTISKORCH,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.SLITHER_WING,e.IRON_MOTH,e.CHI_YU,e.KORAIDON,e.GOUGING_FIRE,e.TERAPAGOS,e.ALOLA_MAROWAK,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,[e.PALDEA_TAUROS,"blaze"]],[t.AURA_SPHERE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.HITMONLEE,e.HITMONCHAN,e.MEWTWO,e.MEW,e.RAIKOU,e.CELEBI,e.BLAZIKEN,e.GARDEVOIR,e.MEDICHAM,e.ZANGOOSE,e.LATIAS,e.LATIOS,e.JIRACHI,e.INFERNAPE,e.LOPUNNY,e.LUCARIO,e.TOGEKISS,e.GALLADE,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.MIENFOO,e.MIENSHAO,e.KELDEO,e.CLAUNCHER,e.CLAWITZER,e.KOMMO_O,e.MAGEARNA,e.MARSHADOW,e.ZERAORA,e.URSHIFU,e.MEOWSCARADA,e.ARMAROUGE,e.PALAFIN,e.IRON_VALIANT,e.ARCHALUDON,e.TERAPAGOS,e.HISUI_DECIDUEYE],[t.ROCK_POLISH]:[e.GEODUDE,e.GRAVELER,e.GOLEM,e.ONIX,e.RHYHORN,e.RHYDON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.MEW,e.SUDOWOODO,e.FORRETRESS,e.GLIGAR,e.STEELIX,e.SHUCKLE,e.MAGCARGO,e.CORSOLA,e.DONPHAN,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.NOSEPASS,e.ARON,e.LAIRON,e.AGGRON,e.CAMERUPT,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.RELICANTH,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.TORTERRA,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BRONZOR,e.BRONZONG,e.BONSLY,e.RHYPERIOR,e.GLISCOR,e.PROBOPASS,e.REGIGIGAS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DWEBBLE,e.CRUSTLE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.GARBODOR,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.DURANT,e.COBALION,e.TERRAKION,e.LANDORUS,e.GENESECT,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.CARBINK,e.BERGMITE,e.AVALUGG,e.DIANCIE,e.ROCKRUFF,e.LYCANROC,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.KOMMO_O,e.NECROZMA,e.STAKATAKA,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.STONJOURNER,e.NACLI,e.NACLSTACK,e.GARGANACL,e.GLIMMET,e.GLIMMORA,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK],[t.POISON_JAB]:[e.BEEDRILL,e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.RAPIDASH,e.FARFETCHD,e.GRIMER,e.MUK,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.HITMONLEE,e.RHYHORN,e.RHYDON,e.GOLDEEN,e.SEAKING,e.MEWTWO,e.MEW,e.SPINARAK,e.ARIADOS,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.QWILFISH,e.SNEASEL,e.DONPHAN,e.COMBUSKEN,e.BLAZIKEN,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.ROSELIA,e.GULPIN,e.SWALOT,e.SHARPEDO,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.ROSERADE,e.STUNKY,e.SKUNTANK,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.RHYPERIOR,e.TANGROWTH,e.GLISCOR,e.GALLADE,e.DARKRAI,e.ARCEUS,e.PIGNITE,e.EMBOAR,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.AXEW,e.FRAXURE,e.HAXORUS,e.CRYOGONAL,e.MIENFOO,e.MIENSHAO,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.VOLCARONA,e.COBALION,e.TERRAKION,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.PANGORO,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.PHANTUMP,e.TREVENANT,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.GOLISOPOD,e.TOGEDEMARU,e.KOMMO_O,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.GUZZLORD,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.CHEWTLE,e.DREDNAW,e.ARROKUDA,e.BARRASKEWDA,e.TOXTRICITY,e.SIRFETCHD,e.FALINKS,e.PINCURCHIN,e.ZACIAN,e.ETERNATUS,e.URSHIFU,e.SNEASLER,e.OVERQWIL,e.TAROUNTULA,e.SPIDOPS,e.CERULEDGE,e.SHROODLE,e.GRAFAIAI,e.VAROOM,e.REVAVROOM,e.ANNIHILAPE,e.CLODSIRE,e.DUDUNSPARCE,e.KINGAMBIT,e.IRON_VALIANT,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.IRON_BOULDER,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_SLOWKING,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_LILLIGANT,e.PALDEA_WOOPER],[t.DARK_PULSE]:[e.BLASTOISE,e.EKANS,e.ARBOK,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.GYARADOS,e.MEWTWO,e.MEW,e.CROBAT,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.GLIGAR,e.STEELIX,e.SNEASEL,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.SABLEYE,e.MAWILE,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.CACNEA,e.CACTURNE,e.SEVIPER,e.CRAWDAUNT,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.GLALIE,e.DEOXYS,e.MISMAGIUS,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.SPIRITOMB,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.GLISCOR,e.PORYGON_Z,e.DUSKNOIR,e.ROTOM,e.HEATRAN,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.PURRLOIN,e.LIEPARD,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.FRILLISH,e.JELLICENT,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.GENESECT,e.FROGADIER,e.GRENINJA,e.LITLEO,e.PYROAR,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.INKAY,e.MALAMAR,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.HOOPA,e.INCINEROAR,e.GOLISOPOD,e.MIMIKYU,e.GUZZLORD,e.NECROZMA,e.NAGANADEL,e.BLACEPHALON,e.INTELEON,e.THIEVUL,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.RUNERIGUS,e.MORPEKO,e.DURALUDON,e.ZARUDE,e.SPECTRIER,e.OVERQWIL,e.MEOWSCARADA,e.LOKIX,e.ARMAROUGE,e.MASCHIFF,e.MABOSSTIFF,e.BOMBIRDIER,e.KINGAMBIT,e.BRUTE_BONNET,e.FLUTTER_MANE,e.IRON_JUGULIS,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.FEZANDIPITI,e.ARCHALUDON,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.MAROWAK,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MOLTRES,e.GALAR_YAMASK,[e.URSHIFU,"single-strike"],[e.CALYREX,"shadow"],e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.AQUA_TAIL]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.EKANS,e.ARBOK,e.NIDOQUEEN,e.NIDOKING,e.PSYDUCK,e.GOLDUCK,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.KANGASKHAN,e.GOLDEEN,e.SEAKING,e.LAPRAS,e.VAPOREON,e.KABUTOPS,e.AERODACTYL,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.LANTURN,e.MARILL,e.AZUMARILL,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.QWILFISH,e.MANTINE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.AGGRON,e.SEVIPER,e.BARBOACH,e.WHISCASH,e.ARMALDO,e.MILOTIC,e.KECLEON,e.SPHEAL,e.SEALEO,e.WALREIN,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.SALAMENCE,e.KYOGRE,e.RAYQUAZA,e.BIDOOF,e.BIBAREL,e.BUIZEL,e.FLOATZEL,e.GARCHOMP,e.SKORUPI,e.DRAPION,e.FINNEON,e.LUMINEON,e.LICKILICKY,e.RHYPERIOR,e.GLACEON,e.GLISCOR,e.PALKIA,e.GIRATINA,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.PANPOUR,e.SIMIPOUR,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.MINCCINO,e.CINCCINO,e.EELEKTRIK,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.STUNFISK,e.DRUDDIGON,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.KELDEO,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.GOODRA,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.BRUXISH,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.BASCULEGION,e.OVERQWIL,e.FINIZEN,e.PALAFIN,e.CYCLIZAR,e.DONDOZO,e.DUDUNSPARCE,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.HISUI_QWILFISH,e.HISUI_SAMUROTT],[t.SEED_BOMB]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.EKANS,e.ARBOK,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.SNORLAX,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.SENTRET,e.FURRET,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.PINECO,e.FORRETRESS,e.TEDDIURSA,e.URSARING,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.PHANPY,e.DONPHAN,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.PELIPPER,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.ROSELIA,e.GULPIN,e.SWALOT,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.LILEEP,e.CRADILY,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,e.WORMADAM,e.PACHIRISU,e.CHERUBI,e.CHERRIM,e.AMBIPOM,e.MUNCHLAX,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.LEAFEON,e.SHAYMIN,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PATRAT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.TRUBBISH,e.GARBODOR,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.FERROSEED,e.FERROTHORN,e.VIRIZION,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.DEDENNE,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.PASSIMIAN,e.KOMALA,e.TAPU_BULU,e.CELESTEELA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.OBSTAGOON,e.PERRSERKER,e.MORPEKO,e.ZARUDE,e.CALYREX,e.URSALUNA,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.FLITTLE,e.ESPATHRA,e.ANNIHILAPE,e.BRUTE_BONNET,e.WO_CHIEN,e.DIPPLIN,e.OGERPON,e.HYDRAPPLE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.AIR_SLASH]:[e.CHARIZARD,e.BUTTERFREE,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.ZUBAT,e.GOLBAT,e.VENOMOTH,e.FARFETCHD,e.SCYTHER,e.ARTICUNO,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.NATU,e.XATU,e.YANMA,e.MURKROW,e.DUNSPARCE,e.SCIZOR,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.SUICUNE,e.LUGIA,e.HO_OH,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.NINJASK,e.VOLBEAT,e.ILLUMISE,e.VIBRAVA,e.FLYGON,e.TROPIUS,e.ABSOL,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.MOTHIM,e.VESPIQUEN,e.DRIFBLIM,e.HONCHKROW,e.LUMINEON,e.MANTYKE,e.TOGEKISS,e.YANMEGA,e.GALLADE,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.SIGILYPH,e.ARCHEOPS,e.DUCKLETT,e.SWANNA,e.EMOLGA,e.PAWNIARD,e.BISHARP,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.KELDEO,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.AEGISLASH,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.VIKAVOLT,e.ORICORIO,e.TYPE_NULL,e.SILVALLY,e.LUNALA,e.CELESTEELA,e.KARTANA,e.NAGANADEL,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.FLAPPLE,e.CRAMORANT,e.FROSMOTH,e.ZACIAN,e.KLEAVOR,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.BOMBIRDIER,e.FLAMIGO,e.DUDUNSPARCE,e.KINGAMBIT,e.IRON_JUGULIS,e.IRON_MOTH,e.ROARING_MOON,e.IRON_LEAVES,e.FEZANDIPITI,e.IRON_BOULDER,e.IRON_CROWN,e.SHAYMIN,[e.ROTOM,"fan"],e.GALAR_ARTICUNO,e.GALAR_MOLTRES,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.X_SCISSOR]:[e.BEEDRILL,e.SANDSHREW,e.SANDSLASH,e.PARAS,e.PARASECT,e.KRABBY,e.KINGLER,e.SCYTHER,e.PINSIR,e.KABUTOPS,e.MEW,e.SPINARAK,e.ARIADOS,e.CROBAT,e.GLIGAR,e.SCIZOR,e.SNEASEL,e.SKARMORY,e.GROVYLE,e.SCEPTILE,e.SHIFTRY,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.ABSOL,e.KRICKETUNE,e.VESPIQUEN,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.LEAFEON,e.GLISCOR,e.GALLADE,e.DARKRAI,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.DRILBUR,e.EXCADRILL,e.LEAVANNY,e.SCOLIPEDE,e.DWEBBLE,e.CRUSTLE,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.PAWNIARD,e.BISHARP,e.DURANT,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.GENESECT,e.PANGORO,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.TREVENANT,e.NOIBAT,e.NOIVERN,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.MIMIKYU,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.KARTANA,e.NECROZMA,e.NAGANADEL,e.CENTISKORCH,e.OBSTAGOON,e.PERRSERKER,e.KLEAVOR,e.SNEASLER,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.CERULEDGE,e.GRAFAIAI,e.KLAWF,e.RELLOR,e.RABSCA,e.KINGAMBIT,e.ROARING_MOON,e.IRON_VALIANT,e.IRON_LEAVES,e.IRON_BOULDER,e.IRON_CROWN,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.GALAR_MEOWTH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT],[t.BUG_BUZZ]:[e.BUTTERFREE,e.VENONAT,e.VENOMOTH,e.SCYTHER,e.MEW,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.YANMA,e.PINECO,e.FORRETRESS,e.SCIZOR,e.HERACROSS,e.BEAUTIFLY,e.DUSTOX,e.SURSKIT,e.MASQUERAIN,e.NINCADA,e.NINJASK,e.SHEDINJA,e.VOLBEAT,e.ILLUMISE,e.VIBRAVA,e.FLYGON,e.KRICKETUNE,e.WORMADAM,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.SKORUPI,e.DRAPION,e.YANMEGA,e.ARCEUS,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.SHELMET,e.ACCELGOR,e.LARVESTA,e.VOLCARONA,e.GENESECT,e.VIVILLON,e.VIKAVOLT,e.CUTIEFLY,e.RIBOMBEE,e.DEWPIDER,e.ARAQUANID,e.WIMPOD,e.GOLISOPOD,e.PHEROMOSA,e.DOTTLER,e.ORBEETLE,e.SIZZLIPEDE,e.CENTISKORCH,e.SNOM,e.FROSMOTH,e.KLEAVOR,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.RELLOR,e.RABSCA,e.SLITHER_WING,e.IRON_MOTH,e.TERAPAGOS],[t.DRAGON_PULSE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.NIDOQUEEN,e.NIDOKING,e.ARCANINE,e.ONIX,e.RHYHORN,e.RHYDON,e.HORSEA,e.SEADRA,e.GYARADOS,e.LAPRAS,e.AERODACTYL,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.FERALIGATR,e.AMPHAROS,e.STEELIX,e.KINGDRA,e.TYRANITAR,e.LUGIA,e.SCEPTILE,e.AGGRON,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.FEEBAS,e.MILOTIC,e.TROPIUS,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.CRANIDOS,e.RAMPARDOS,e.GIBLE,e.GABITE,e.GARCHOMP,e.LUCARIO,e.RHYPERIOR,e.DIALGA,e.PALKIA,e.HEATRAN,e.GIRATINA,e.ARCEUS,e.SERPERIOR,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.GOOMY,e.SLIGGOO,e.GOODRA,e.NOIBAT,e.NOIVERN,e.ZYGARDE,e.SALANDIT,e.SALAZZLE,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.GUZZLORD,e.NECROZMA,e.POIPOLE,e.NAGANADEL,e.FLAPPLE,e.APPLETUN,e.RUNERIGUS,e.DRACOZOLT,e.DRACOVISH,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.REGIDRAGO,e.ARMAROUGE,e.CYCLIZAR,e.TATSUGIRI,e.IRON_JUGULIS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.DIPPLIN,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_EXEGGUTOR,e.HISUI_ARCANINE,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.POWER_GEM]:[e.MEOWTH,e.PERSIAN,e.GOLDUCK,e.STARYU,e.STARMIE,e.MEWTWO,e.MEW,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.SUDOWOODO,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.SLUGMA,e.MAGCARGO,e.CORSOLA,e.TYRANITAR,e.NOSEPASS,e.SABLEYE,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.VESPIQUEN,e.MISMAGIUS,e.BRONZOR,e.BRONZONG,e.BONSLY,e.GABITE,e.GARCHOMP,e.PROBOPASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.CRESSELIA,e.ARCEUS,e.BOLDORE,e.GIGALITH,e.KLINK,e.KLANG,e.KLINKLANG,e.CARBINK,e.DIANCIE,e.MINIOR,e.NIHILEGO,e.NECROZMA,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.CURSOLA,e.STONJOURNER,e.MEOWSCARADA,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.RABSCA,e.BOMBIRDIER,e.GLIMMET,e.GLIMMORA,e.FLUTTER_MANE,e.SANDY_SHOCKS,e.IRON_THORNS,e.GIMMIGHOUL,e.GHOLDENGO,e.MIRAIDON,e.TERAPAGOS,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.HISUI_GROWLITHE,e.HISUI_ARCANINE],[t.DRAIN_PUNCH]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GLOOM,e.VILEPLUME,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWBRO,e.GRIMER,e.MUK,e.GENGAR,e.DROWZEE,e.HYPNO,e.HITMONCHAN,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.LEDYBA,e.LEDIAN,e.TOGETIC,e.BELLOSSOM,e.SUDOWOODO,e.QUAGSIRE,e.SLOWKING,e.BLISSEY,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LOMBRE,e.LUDICOLO,e.SHROOMISH,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.KECLEON,e.REGIROCK,e.JIRACHI,e.DEOXYS,e.MONFERNO,e.INFERNAPE,e.BUNEARY,e.LOPUNNY,e.MIME_JR,e.HAPPINY,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.TOGEKISS,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.DARKRAI,e.PIGNITE,e.EMBOAR,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.MARACTUS,e.SCRAGGY,e.SCRAFTY,e.TRUBBISH,e.GARBODOR,e.REUNICLUS,e.EELEKTROSS,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.HEATMOR,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.PANCHAM,e.PANGORO,e.AROMATISSE,e.SLURPUFF,e.HAWLUCHA,e.TREVENANT,e.HOOPA,e.INCINEROAR,e.CRABRAWLER,e.CRABOMINABLE,e.SHIINOTIC,e.BEWEAR,e.PASSIMIAN,e.MIMIKYU,e.HAKAMO_O,e.KOMMO_O,e.BUZZWOLE,e.GUZZLORD,e.MARSHADOW,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.TOXTRICITY,e.GRAPPLOCT,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.MR_RIME,e.ALCREMIE,e.INDEEDEE,e.URSHIFU,e.ZARUDE,e.URSALUNA,e.PALAFIN,e.ANNIHILAPE,e.SCREAM_TAIL,e.IRON_HANDS,e.IRON_VALIANT,e.KORAIDON,e.OKIDOGI,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING],[t.VACUUM_WAVE]:[e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.HITMONLEE,e.HITMONCHAN,e.SCYTHER,e.MEW,e.SCIZOR,e.HERACROSS,e.TYROGUE,e.HITMONTOP,e.GROVYLE,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.SHIFTRY,e.GARDEVOIR,e.BRELOOM,e.MAKUHITA,e.HARIYAMA,e.MEDITITE,e.MEDICHAM,e.FLYGON,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.EMPOLEON,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.GALLADE,e.DEWOTT,e.SAMUROTT,e.MIENSHAO,e.COBALION,e.VIRIZION,e.KELDEO,e.PASSIMIAN,e.HAKAMO_O,e.KOMMO_O,e.KARTANA,e.INTELEON,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.CERULEDGE,e.ANNIHILAPE,e.IRON_VALIANT,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY,e.BLOODMOON_URSALUNA],[t.FOCUS_BLAST]:[e.CHARMANDER,e.CHARIZARD,e.BLASTOISE,e.RAICHU,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.CLEFABLE,e.WIGGLYTUFF,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.MUK,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.FERALIGATR,e.FURRET,e.LEDIAN,e.AMPHAROS,e.AZUMARILL,e.POLITOED,e.QUAGSIRE,e.SLOWKING,e.GRANBULL,e.HERACROSS,e.URSARING,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.SWAMPERT,e.LUDICOLO,e.SHIFTRY,e.GARDEVOIR,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.GRUMPIG,e.CACTURNE,e.ZANGOOSE,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.MONFERNO,e.INFERNAPE,e.RAMPARDOS,e.FLOATZEL,e.LOPUNNY,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.GALLADE,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.DARKRAI,e.ARCEUS,e.VICTINI,e.PIGNITE,e.EMBOAR,e.WATCHOG,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.KROOKODILE,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.CARRACOSTA,e.ARCHEOPS,e.GARBODOR,e.ZOROARK,e.CINCCINO,e.GOTHITELLE,e.REUNICLUS,e.ESCAVALIER,e.HAXORUS,e.BEARTIC,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BISHARP,e.HEATMOR,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.CHESNAUGHT,e.DELPHOX,e.PANGORO,e.BARBARACLE,e.DRAGALGE,e.CLAWITZER,e.HELIOLISK,e.HAWLUCHA,e.GOODRA,e.TREVENANT,e.GOURGEIST,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.HOOPA,e.VOLCANION,e.INCINEROAR,e.CRABRAWLER,e.CRABOMINABLE,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_LELE,e.TAPU_BULU,e.SOLGALEO,e.LUNALA,e.PHEROMOSA,e.MAGEARNA,e.MARSHADOW,e.ZERAORA,e.RILLABOOM,e.CINDERACE,e.CLOBBOPUS,e.GRAPPLOCT,e.GRIMMSNARL,e.MR_RIME,e.FALINKS,e.ZACIAN,e.ZAMAZENTA,e.URSHIFU,e.SNEASLER,e.ENAMORUS,e.PAWMOT,e.ARMAROUGE,e.PALAFIN,e.ANNIHILAPE,e.KINGAMBIT,e.SCREAM_TAIL,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_THORNS,e.GHOLDENGO,e.IRON_VALIANT,e.KORAIDON,e.IRON_LEAVES,e.OKIDOGI,e.MUNKIDORI,e.IRON_CROWN,e.ALOLA_RAICHU,e.ALOLA_SANDSLASH,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_DARMANITAN,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.ENERGY_BALL]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BUTTERFREE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.GASTLY,e.HAUNTER,e.GENGAR,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.MISDREAVUS,e.GIRAFARIG,e.OCTILLERY,e.STANTLER,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.GARDEVOIR,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SABLEYE,e.MEDICHAM,e.ROSELIA,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.LILEEP,e.CRADILY,e.CASTFORM,e.TROPIUS,e.CHIMECHO,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,[e.WORMADAM,"plant"],e.MOTHIM,e.CHERUBI,e.CHERRIM,e.MISMAGIUS,e.CHINGLING,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.LEAFEON,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.GIRATINA,e.CRESSELIA,e.MANAPHY,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.SHELMET,e.ACCELGOR,e.DURANT,e.VIRIZION,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PRIMARINA,e.VIKAVOLT,e.CUTIEFLY,e.RIBOMBEE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.DRAMPA,e.DHELMISE,e.TAPU_LELE,e.TAPU_BULU,e.XURKITREE,e.CELESTEELA,e.MAGEARNA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.DOTTLER,e.ORBEETLE,e.GOSSIFLEUR,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.INDEEDEE,e.ZARUDE,e.CALYREX,e.WYRDEER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.OINKOLOGNE,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.ARMAROUGE,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.RABSCA,e.ESPATHRA,e.GLIMMORA,e.FARIGIRAF,e.BRUTE_BONNET,e.FLUTTER_MANE,e.IRON_MOTH,e.WO_CHIEN,e.IRON_VALIANT,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OGERPON,e.HYDRAPPLE,e.TERAPAGOS,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_MR_MIME,e.GALAR_YAMASK,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.BRAVE_BIRD]:[e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.ZUBAT,e.GOLBAT,e.FARFETCHD,e.DODUO,e.DODRIO,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.MURKROW,e.DELIBIRD,e.SKARMORY,e.LUGIA,e.HO_OH,e.BLAZIKEN,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.SWABLU,e.ALTARIA,e.STARLY,e.STARAVIA,e.STARAPTOR,e.HONCHKROW,e.UNFEZANT,e.DUCKLETT,e.SWANNA,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.HAWLUCHA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.TAPU_KOKO,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CRAMORANT,e.SIRFETCHD,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.ESPATHRA,e.BOMBIRDIER,e.FLAMIGO,e.FEZANDIPITI,e.GALAR_FARFETCHD,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.EARTH_POWER]:[e.VENUSAUR,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.GEODUDE,e.GRAVELER,e.GOLEM,e.ONIX,e.CUBONE,e.MAROWAK,e.RHYHORN,e.RHYDON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.MEWTWO,e.MEW,e.SUDOWOODO,e.POLITOED,e.SUNKERN,e.SUNFLORA,e.WOOPER,e.QUAGSIRE,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SHUCKLE,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.PHANPY,e.DONPHAN,e.STANTLER,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.NOSEPASS,e.ARON,e.LAIRON,e.AGGRON,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.GRUMPIG,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.RELICANTH,e.REGIROCK,e.GROUDON,e.RAYQUAZA,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.SHELLOS,e.GASTRODON,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOPOTAS,e.HIPPOWDON,e.ABOMASNOW,e.RHYPERIOR,e.GLISCOR,e.MAMOSWINE,e.PROBOPASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.SHAYMIN,e.ARCEUS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.STUNFISK,e.GOLETT,e.GOLURK,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TERRAKION,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.DIGGERSBY,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.CARBINK,e.ZYGARDE,e.DIANCIE,e.VOLCANION,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.NECROZMA,e.RILLABOOM,e.DREDNAW,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.DRACOVISH,e.REGIDRAGO,e.WYRDEER,e.URSALUNA,e.ENAMORUS,e.SKELEDIRGE,e.OINKOLOGNE,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.NACLI,e.NACLSTACK,e.GARGANACL,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.RABSCA,e.WIGLETT,e.WUGTRIO,e.ORTHWORM,e.GLIMMORA,e.CLODSIRE,e.DUDUNSPARCE,e.GREAT_TUSK,e.BRUTE_BONNET,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_JUGULIS,e.IRON_THORNS,e.TING_LU,e.HYDRAPPLE,e.TERAPAGOS,[e.WORMADAM,"sandy"],e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,e.GALAR_CORSOLA,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.GIGA_IMPACT]:[e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEOT,e.RATICATE,e.FEAROW,e.ARBOK,e.RAICHU,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.CLEFABLE,e.NINETALES,e.WIGGLYTUFF,e.GOLBAT,e.VILEPLUME,e.PARASECT,e.VENOMOTH,e.DUGTRIO,e.PERSIAN,e.GOLDUCK,e.PRIMEAPE,e.ARCANINE,e.POLIWRATH,e.ALAKAZAM,e.MACHAMP,e.VICTREEBEL,e.TENTACRUEL,e.GOLEM,e.RAPIDASH,e.SLOWBRO,e.MAGNETON,e.DODRIO,e.DEWGONG,e.MUK,e.CLOYSTER,e.GENGAR,e.HYPNO,e.KINGLER,e.ELECTRODE,e.EXEGGUTOR,e.MAROWAK,e.LICKITUNG,e.WEEZING,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.SEADRA,e.SEAKING,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMASTAR,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.FURRET,e.NOCTOWL,e.LEDIAN,e.ARIADOS,e.CROBAT,e.LANTURN,e.TOGETIC,e.XATU,e.AMPHAROS,e.BELLOSSOM,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.JUMPLUFF,e.SUNFLORA,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.FORRETRESS,e.DUNSPARCE,e.STEELIX,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.URSARING,e.MAGCARGO,e.PILOSWINE,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.HOUNDOOM,e.KINGDRA,e.DONPHAN,e.PORYGON2,e.STANTLER,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.MIGHTYENA,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LUDICOLO,e.SHIFTRY,e.SWELLOW,e.PELIPPER,e.GARDEVOIR,e.MASQUERAIN,e.BRELOOM,e.SLAKING,e.NINJASK,e.SHEDINJA,e.EXPLOUD,e.HARIYAMA,e.DELCATTY,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDICHAM,e.MANECTRIC,e.SWALOT,e.SHARPEDO,e.WAILORD,e.CAMERUPT,e.TORKOAL,e.GRUMPIG,e.FLYGON,e.CACTURNE,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.WHISCASH,e.CRAWDAUNT,e.CLAYDOL,e.CRADILY,e.ARMALDO,e.MILOTIC,e.BANETTE,e.DUSCLOPS,e.TROPIUS,e.ABSOL,e.GLALIE,e.WALREIN,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.STARAPTOR,e.BIBAREL,e.KRICKETUNE,e.LUXRAY,e.ROSERADE,e.RAMPARDOS,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.FLOATZEL,e.CHERRIM,e.GASTRODON,e.AMBIPOM,e.DRIFBLIM,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.PURUGLY,e.SKUNTANK,e.BRONZONG,e.SPIRITOMB,e.GARCHOMP,e.MUNCHLAX,e.LUCARIO,e.HIPPOWDON,e.DRAPION,e.TOXICROAK,e.CARNIVINE,e.LUMINEON,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SERPERIOR,e.EMBOAR,e.SAMUROTT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.LIEPARD,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.MUSHARNA,e.UNFEZANT,e.ZEBSTRIKA,e.GIGALITH,e.SWOOBAT,e.EXCADRILL,e.AUDINO,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.LEAVANNY,e.SCOLIPEDE,e.WHIMSICOTT,e.LILLIGANT,e.BASCULIN,e.KROOKODILE,e.DARMANITAN,e.CRUSTLE,e.SCRAFTY,e.SIGILYPH,e.COFAGRIGUS,e.CARRACOSTA,e.ARCHEOPS,e.GARBODOR,e.ZOROARK,e.CINCCINO,e.GOTHITELLE,e.REUNICLUS,e.SWANNA,e.VANILLUXE,e.SAWSBUCK,e.ESCAVALIER,e.AMOONGUSS,e.JELLICENT,e.ALOMOMOLA,e.GALVANTULA,e.FERROTHORN,e.KLINKLANG,e.EELEKTROSS,e.BEHEEYEM,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.BEARTIC,e.CRYOGONAL,e.ACCELGOR,e.MIENSHAO,e.DRUDDIGON,e.GOLURK,e.BISHARP,e.BOUFFALANT,e.BRAVIARY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.HYDREIGON,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESNAUGHT,e.DELPHOX,e.GRENINJA,e.DIGGERSBY,e.TALONFLAME,e.VIVILLON,e.PYROAR,e.FLORGES,e.GOGOAT,e.PANGORO,e.FURFROU,e.MEOWSTIC,e.AEGISLASH,e.AROMATISSE,e.SLURPUFF,e.MALAMAR,e.BARBARACLE,e.DRAGALGE,e.CLAWITZER,e.HELIOLISK,e.TYRANTRUM,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOODRA,e.KLEFKI,e.TREVENANT,e.GOURGEIST,e.AVALUGG,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.DECIDUEYE,e.INCINEROAR,e.PRIMARINA,e.GUMSHOOS,e.VIKAVOLT,e.CRABOMINABLE,e.RIBOMBEE,e.LYCANROC,e.TOXAPEX,e.MUDSDALE,e.LURANTIS,e.SHIINOTIC,e.SALAZZLE,e.BEWEAR,e.TSAREENA,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.NAGANADEL,e.STAKATAKA,e.ZERAORA,e.MELMETAL,e.RILLABOOM,e.CINDERACE,e.INTELEON,e.GREEDENT,e.CORVIKNIGHT,e.ORBEETLE,e.THIEVUL,e.ELDEGOSS,e.DUBWOOL,e.DREDNAW,e.BOLTUND,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SANDACONDA,e.CRAMORANT,e.BARRASKEWDA,e.TOXTRICITY,e.CENTISKORCH,e.GRAPPLOCT,e.POLTEAGEIST,e.HATTERENE,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.MEOWSCARADA,e.SKELEDIRGE,e.QUAQUAVAL,e.OINKOLOGNE,e.SPIDOPS,e.LOKIX,e.PAWMOT,e.MAUSHOLD,e.DACHSBUN,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLSTACK,e.GARGANACL,e.BELLIBOLT,e.KILOWATTREL,e.MABOSSTIFF,e.GRAFAIAI,e.BRAMBLEGHAST,e.TOEDSCRUEL,e.KLAWF,e.SCOVILLAIN,e.RABSCA,e.ESPATHRA,e.WUGTRIO,e.BOMBIRDIER,e.PALAFIN,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMORA,e.HOUNDSTONE,e.FLAMIGO,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.BAXCALIBUR,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSLASH,e.ALOLA_NINETALES,e.ALOLA_DUGTRIO,e.ALOLA_PERSIAN,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_RAPIDASH,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_LINOONE,e.GALAR_DARMANITAN,e.HISUI_ARCANINE,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.BLOODMOON_URSALUNA],[t.NASTY_PLOT]:[e.PIKACHU,e.RAICHU,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.ALAKAZAM,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.PICHU,e.TOGEPI,e.TOGETIC,e.AIPOM,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.SMOOCHUM,e.CELEBI,e.POOCHYENA,e.MIGHTYENA,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SKITTY,e.DELCATTY,e.SABLEYE,e.PLUSLE,e.MINUN,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.LUNATONE,e.CRAWDAUNT,e.CLAYDOL,e.KECLEON,e.SHUPPET,e.BANETTE,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.AMBIPOM,e.MISMAGIUS,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.MIME_JR,e.CHATOT,e.SPIRITOMB,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.TOGEKISS,e.PORYGON_Z,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DARKRAI,e.PATRAT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.WOOBAT,e.SWOOBAT,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.ELGYEM,e.BEHEEYEM,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.DELPHOX,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.INKAY,e.MALAMAR,e.GOURGEIST,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SALANDIT,e.SALAZZLE,e.ORANGURU,e.POIPOLE,e.NAGANADEL,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.SINISTEA,e.POLTEAGEIST,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.MR_RIME,e.RUNERIGUS,e.MORPEKO,e.ZARUDE,e.SPECTRIER,e.SNEASLER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.SHROODLE,e.GRAFAIAI,e.BOMBIRDIER,e.TATSUGIRI,e.FARIGIRAF,e.GIMMIGHOUL,e.GHOLDENGO,e.CHI_YU,e.POLTCHAGEIST,e.SINISTCHA,e.MUNKIDORI,e.FEZANDIPITI,e.HYDRAPPLE,e.PECHARUNT,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_YAMASK,[e.CALYREX,"shadow"],e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE],[t.AVALANCHE]:[e.BLASTOISE,e.NIDOQUEEN,e.NIDOKING,e.SLOWPOKE,e.SLOWBRO,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.RHYDON,e.KANGASKHAN,e.STARMIE,e.JYNX,e.GYARADOS,e.LAPRAS,e.ARTICUNO,e.MEWTWO,e.MEW,e.FERALIGATR,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.DELIBIRD,e.SMOOCHUM,e.BLISSEY,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.EXPLOUD,e.AGGRON,e.SHARPEDO,e.WAILMER,e.WAILORD,e.CRAWDAUNT,e.MILOTIC,e.CASTFORM,e.SNORUNT,e.GLALIE,e.WALREIN,e.REGICE,e.KYOGRE,e.RAYQUAZA,e.DEOXYS,e.EMPOLEON,e.RAMPARDOS,e.BASTIODON,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.RHYPERIOR,e.GLACEON,e.MAMOSWINE,e.FROSLASS,e.PALKIA,e.REGIGIGAS,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.AMAURA,e.AURORUS,e.BERGMITE,e.AVALUGG,e.CRABOMINABLE,e.MR_RIME,e.FROSMOTH,e.EISCUE,e.ARCTOZOLT,e.ARCTOVISH,e.GLASTRIER,e.URSALUNA,e.GARGANACL,e.CETODDLE,e.CETITAN,e.DONDOZO,e.IRON_BUNDLE,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_NINETALES,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,[e.CALYREX,"ice"],e.HISUI_SAMUROTT,e.HISUI_AVALUGG,e.BLOODMOON_URSALUNA],[t.SHADOW_CLAW]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.HAUNTER,e.GENGAR,e.RHYDON,e.KANGASKHAN,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.AIPOM,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.TYRANITAR,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.LINOONE,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.SHEDINJA,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.ZANGOOSE,e.ARMALDO,e.KECLEON,e.BANETTE,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.METAGROSS,e.REGISTEEL,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PRINPLUP,e.EMPOLEON,e.AMBIPOM,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.GIBLE,e.GABITE,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.RHYPERIOR,e.GALLADE,e.DIALGA,e.PALKIA,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.DRILBUR,e.EXCADRILL,e.LEAVANNY,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.COFAGRIGUS,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.FERROTHORN,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.RUFFLET,e.BRAVIARY,e.HEATMOR,e.DURANT,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.BINACLE,e.BARBARACLE,e.PHANTUMP,e.TREVENANT,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SALANDIT,e.SALAZZLE,e.BEWEAR,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.KOMALA,e.MIMIKYU,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.LUNALA,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.NAGANADEL,e.BLACEPHALON,e.THIEVUL,e.HATTERENE,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.RUNERIGUS,e.URSALUNA,e.SNEASLER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.SKELEDIRGE,e.TAROUNTULA,e.SPIDOPS,e.TANDEMAUS,e.MAUSHOLD,e.CERULEDGE,e.GRAFAIAI,e.KLAWF,e.ANNIHILAPE,e.KINGAMBIT,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_LINOONE,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.THUNDER_FANG]:[e.ARBOK,e.GROWLITHE,e.ARCANINE,e.RHYHORN,e.RHYDON,e.JOLTEON,e.AERODACTYL,e.MEW,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.HOUNDOUR,e.HOUNDOOM,e.DONPHAN,e.RAIKOU,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.EXPLOUD,e.MAWILE,e.ELECTRIKE,e.MANECTRIC,e.SEVIPER,e.BAGON,e.SHELGON,e.SALAMENCE,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.RHYPERIOR,e.GLISCOR,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.EELEKTRIK,e.EELEKTROSS,e.DRUDDIGON,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.ZEKROM,e.LITLEO,e.PYROAR,e.TYRUNT,e.TYRANTRUM,e.VOLCANION,e.YUNGOOS,e.GUMSHOOS,e.ROCKRUFF,e.LYCANROC,e.SILVALLY,e.GREEDENT,e.THIEVUL,e.YAMPER,e.BOLTUND,e.SANDACONDA,e.TOXTRICITY,e.CENTISKORCH,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.ZACIAN,e.ZAMAZENTA,e.REGIDRAGO,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.PAWMI,e.PAWMO,e.PAWMOT,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.CYCLIZAR,e.GREAVARD,e.HOUNDSTONE,e.GREAT_TUSK,e.SCREAM_TAIL,e.IRON_TREADS,e.IRON_THORNS,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.OKIDOGI,e.GOUGING_FIRE,e.RAGING_BOLT,e.HISUI_GROWLITHE,e.HISUI_ARCANINE],[t.ICE_FANG]:[e.ARBOK,e.RHYHORN,e.RHYDON,e.GYARADOS,e.AERODACTYL,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SWINUB,e.PILOSWINE,e.DONPHAN,e.SUICUNE,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.EXPLOUD,e.MAWILE,e.ELECTRIKE,e.MANECTRIC,e.CARVANHA,e.SHARPEDO,e.SEVIPER,e.SNORUNT,e.GLALIE,e.WALREIN,e.HUNTAIL,e.SHINX,e.LUXIO,e.LUXRAY,e.BUIZEL,e.FLOATZEL,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.RHYPERIOR,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.FROSLASS,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.BASCULIN,e.CUBCHOO,e.BEARTIC,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TYRUNT,e.TYRANTRUM,e.BERGMITE,e.AVALUGG,e.YUNGOOS,e.GUMSHOOS,e.SILVALLY,e.BRUXISH,e.GREEDENT,e.THIEVUL,e.CHEWTLE,e.DREDNAW,e.ARROKUDA,e.BARRASKEWDA,e.MORPEKO,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.ZACIAN,e.ZAMAZENTA,e.REGIDRAGO,e.BASCULEGION,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.GREAT_TUSK,e.SCREAM_TAIL,e.IRON_TREADS,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.KORAIDON,e.OKIDOGI,e.GALAR_SLOWBRO,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_STUNFISK,e.HISUI_AVALUGG],[t.FIRE_FANG]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.EKANS,e.ARBOK,e.GROWLITHE,e.ARCANINE,e.RHYHORN,e.RHYDON,e.FLAREON,e.AERODACTYL,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.HOUNDOUR,e.HOUNDOOM,e.DONPHAN,e.ENTEI,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.EXPLOUD,e.MAWILE,e.ELECTRIKE,e.MANECTRIC,e.SEVIPER,e.BAGON,e.SHELGON,e.SALAMENCE,e.GROUDON,e.SHINX,e.LUXIO,e.LUXRAY,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.RHYPERIOR,e.GLISCOR,e.HEATRAN,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.DRUDDIGON,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.RESHIRAM,e.LITLEO,e.PYROAR,e.TYRUNT,e.TYRANTRUM,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.ROCKRUFF,e.LYCANROC,e.SALANDIT,e.SALAZZLE,e.SILVALLY,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.GREEDENT,e.THIEVUL,e.YAMPER,e.BOLTUND,e.SANDACONDA,e.CENTISKORCH,e.MORPEKO,e.DRACOZOLT,e.ZACIAN,e.ZAMAZENTA,e.REGIDRAGO,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.SCOVILLAIN,e.CYCLIZAR,e.GREAVARD,e.HOUNDSTONE,e.GREAT_TUSK,e.SCREAM_TAIL,e.IRON_JUGULIS,e.IRON_THORNS,e.ROARING_MOON,e.KORAIDON,e.WALKING_WAKE,e.OKIDOGI,e.GOUGING_FIRE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION],[t.PSYCHO_CUT]:[e.KADABRA,e.ALAKAZAM,e.DROWZEE,e.HYPNO,e.EXEGGUTOR,e.STARMIE,e.SCYTHER,e.JYNX,e.KABUTOPS,e.MEWTWO,e.MEW,e.SCIZOR,e.SNEASEL,e.CELEBI,e.MEDITITE,e.MEDICHAM,e.SPINDA,e.ABSOL,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.WEAVILE,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.LIEPARD,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.HAXORUS,e.PAWNIARD,e.BISHARP,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.INKAY,e.MALAMAR,e.DECIDUEYE,e.LURANTIS,e.TAPU_LELE,e.LUNALA,e.KARTANA,e.NECROZMA,e.ORBEETLE,e.HATTERENE,e.ZACIAN,e.SPECTRIER,e.KLEAVOR,e.CERULEDGE,e.VELUZA,e.IRON_VALIANT,e.IRON_BOULDER,e.IRON_CROWN,e.GALAR_RAPIDASH,e.GALAR_ARTICUNO,[e.CALYREX,"shadow"],e.HISUI_SAMUROTT,e.HISUI_DECIDUEYE],[t.ZEN_HEADBUTT]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.VENONAT,e.VENOMOTH,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.DROWZEE,e.HYPNO,e.EXEGGUTOR,e.LICKITUNG,e.CHANSEY,e.MR_MIME,e.JYNX,e.TAUROS,e.LAPRAS,e.PORYGON,e.SNORLAX,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.CLEFFA,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.ESPEON,e.SLOWKING,e.GIRAFARIG,e.DUNSPARCE,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.LUGIA,e.HO_OH,e.CELEBI,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.RELICANTH,e.BAGON,e.SHELGON,e.SALAMENCE,e.BELDUM,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.GROUDON,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.HAPPINY,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.LICKILICKY,e.TOGEKISS,e.PORYGON_Z,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.CRESSELIA,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PATRAT,e.WATCHOG,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.THROH,e.SAWK,e.BASCULIN,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.ALOMOMOLA,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.GOLURK,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BRAIXEN,e.DELPHOX,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.HAWLUCHA,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.HOOPA,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.ORANGURU,e.SILVALLY,e.MINIOR,e.KOMALA,e.TOGEDEMARU,e.TAPU_BULU,e.SOLGALEO,e.NIHILEGO,e.CELESTEELA,e.MAGEARNA,e.MARSHADOW,e.STAKATAKA,e.BLACEPHALON,e.CINDERACE,e.DOTTLER,e.ORBEETLE,e.DUBWOOL,e.APPLETUN,e.SANDACONDA,e.MR_RIME,e.RUNERIGUS,e.FALINKS,e.EISCUE,e.INDEEDEE,e.CUFANT,e.COPPERAJAH,e.DRACOVISH,e.ARCTOVISH,e.KUBFU,e.URSHIFU,e.GLASTRIER,e.CALYREX,e.WYRDEER,e.ENAMORUS,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CAPSAKID,e.SCOVILLAIN,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.VELUZA,e.DONDOZO,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.SLITHER_WING,e.IRON_TREADS,e.IRON_JUGULIS,e.BAXCALIBUR,e.WO_CHIEN,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.OGERPON,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.HISUI_TYPHLOSION,e.HISUI_BRAVIARY,e.PALDEA_TAUROS],[t.FLASH_CANNON]:[e.BLASTOISE,e.MAGNEMITE,e.MAGNETON,e.ONIX,e.HORSEA,e.SEADRA,e.STARYU,e.STARMIE,e.MEW,e.FORRETRESS,e.STEELIX,e.SCIZOR,e.OCTILLERY,e.SKARMORY,e.KINGDRA,e.NOSEPASS,e.MAWILE,e.AGGRON,e.NUMEL,e.CAMERUPT,e.SPOINK,e.GRUMPIG,e.ARMALDO,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.JIRACHI,e.DEOXYS,e.EMPOLEON,e.SHIELDON,e.BASTIODON,e.BRONZOR,e.BRONZONG,e.LUCARIO,e.MAGNEZONE,e.RHYPERIOR,e.PROBOPASS,e.DIALGA,e.HEATRAN,e.ARCEUS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.SIGILYPH,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.BEHEEYEM,e.CRYOGONAL,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.DURANT,e.HYDREIGON,e.COBALION,e.THUNDURUS,e.ZEKROM,e.KYUREM,e.GENESECT,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.CARBINK,e.KLEFKI,e.BERGMITE,e.AVALUGG,e.XERNEAS,e.DIANCIE,e.VOLCANION,e.TOUCANNON,e.VIKAVOLT,e.SANDYGAST,e.PALOSSAND,e.SILVALLY,e.TURTONATOR,e.DHELMISE,e.KOMMO_O,e.SOLGALEO,e.CELESTEELA,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.MELTAN,e.MELMETAL,e.CORVIKNIGHT,e.PERRSERKER,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.NACLI,e.NACLSTACK,e.GARGANACL,e.ARMAROUGE,e.TOEDSCOOL,e.TOEDSCRUEL,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.VAROOM,e.REVAVROOM,e.ORTHWORM,e.GLIMMORA,e.KINGAMBIT,e.GREAT_TUSK,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_JUGULIS,e.IRON_MOTH,e.GHOLDENGO,e.MIRAIDON,e.ARCHALUDON,e.IRON_CROWN,[e.WORMADAM,"trash"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.GALAR_MEOWTH,e.GALAR_STUNFISK,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.ROCK_CLIMB]:[e.VENUSAUR,e.BLASTOISE,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.ARCANINE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.ONIX,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.OMASTAR,e.KABUTOPS,e.SNORLAX,e.MEWTWO,e.MEW,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.AMPHAROS,e.GLIGAR,e.STEELIX,e.GRANBULL,e.URSARING,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.TYRANITAR,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LUDICOLO,e.VIGOROTH,e.SLAKING,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AGGRON,e.ZANGOOSE,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.CRANIDOS,e.RAMPARDOS,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.LUCARIO,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.GLISCOR,e.MAMOSWINE,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.DRILBUR,e.EXCADRILL,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.DRUDDIGON,e.BOUFFALANT,e.DURANT,e.ROCKRUFF,e.LYCANROC,e.OBSTAGOON,e.URSALUNA,e.ANNIHILAPE,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.PALDEA_TAUROS,e.BLOODMOON_URSALUNA],[t.DEFOG]:[e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.VENOMOTH,e.FARFETCHD,e.SCYTHER,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.LEDIAN,e.CROBAT,e.TOGETIC,e.XATU,e.YANMA,e.MURKROW,e.GLIGAR,e.SCIZOR,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.LUGIA,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.BEAUTIFLY,e.DUSTOX,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.NINJASK,e.VOLBEAT,e.ILLUMISE,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.CASTFORM,e.TROPIUS,e.CHIMECHO,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.MOTHIM,e.VESPIQUEN,e.DRIFLOON,e.DRIFBLIM,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.CHATOT,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.TOGEKISS,e.YANMEGA,e.GLISCOR,e.ROTOM,e.GIRATINA,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.COTTONEE,e.WHIMSICOTT,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.DUCKLETT,e.SWANNA,e.EMOLGA,e.CRYOGONAL,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.FLORGES,e.HAWLUCHA,e.KLEFKI,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.FOMANTIS,e.LURANTIS,e.COMFEY,e.SILVALLY,e.DRAMPA,e.TAPU_KOKO,e.TAPU_FINI,e.LUNALA,e.KARTANA,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CRAMORANT,e.SIRFETCHD,e.FROSMOTH,e.KLEAVOR,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.TRICK_ROOM]:[e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.STARMIE,e.MR_MIME,e.JYNX,e.PORYGON,e.MEWTWO,e.MEW,e.NATU,e.XATU,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.SPINDA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.JIRACHI,e.DEOXYS,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.CRESSELIA,e.ARCEUS,e.VICTINI,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.WHIMSICOTT,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.KLINKLANG,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.INKAY,e.MALAMAR,e.CARBINK,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.DIANCIE,e.HOOPA,e.COMFEY,e.ORANGURU,e.MIMIKYU,e.BRUXISH,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.MR_RIME,e.RUNERIGUS,e.INDEEDEE,e.CALYREX,e.WYRDEER,e.MEOWSCARADA,e.ARMAROUGE,e.TOEDSCOOL,e.TOEDSCRUEL,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.FARIGIRAF,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_VALIANT,e.POLTCHAGEIST,e.SINISTCHA,e.ALOLA_EXEGGUTOR,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.GALAR_YAMASK],[t.DRACO_METEOR]:[e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.KINGDRA,e.VIBRAVA,e.FLYGON,e.ALTARIA,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.GIBLE,e.GABITE,e.GARCHOMP,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.DRAGALGE,e.TYRUNT,e.TYRANTRUM,e.GOOMY,e.SLIGGOO,e.GOODRA,e.NOIBAT,e.NOIVERN,e.ZYGARDE,e.SILVALLY,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.GUZZLORD,e.NAGANADEL,e.APPLIN,e.FLAPPLE,e.APPLETUN,e.DRACOZOLT,e.DRACOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.REGIDRAGO,e.CYCLIZAR,e.TATSUGIRI,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.DIPPLIN,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.ALOLA_EXEGGUTOR,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.LEAF_STORM]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.ODDISH,e.GLOOM,e.VILEPLUME,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.ROSELIA,e.CACNEA,e.CACTURNE,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,[e.WORMADAM,"plant"],e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.LEAFEON,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.LEAVANNY,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.VIRIZION,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.SKIDDO,e.GOGOAT,e.TREVENANT,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.FOMANTIS,e.LURANTIS,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.GOSSIFLEUR,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.ZARUDE,e.CALYREX,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.BRUTE_BONNET,e.WO_CHIEN,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OGERPON,e.HYDRAPPLE,e.SHAYMIN,[e.ROTOM,"mow"],e.ALOLA_EXEGGUTOR,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.POWER_WHIP]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGUTOR,e.LICKITUNG,e.TANGELA,e.GYARADOS,e.MEW,e.ROSELIA,e.CRADILY,e.ROSERADE,e.CARNIVINE,e.LICKILICKY,e.TANGROWTH,e.PALPITOAD,e.SEISMITOAD,e.FERROTHORN,e.GOODRA,e.GOURGEIST,e.TSAREENA,e.DHELMISE,e.XURKITREE,e.SIZZLIPEDE,e.CENTISKORCH,e.HATTERENE,e.GRIMMSNARL,e.CUFANT,e.COPPERAJAH,e.ZARUDE,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CYCLIZAR,e.WO_CHIEN,e.OGERPON,e.ALOLA_EXEGGUTOR],[t.CROSS_POISON]:[e.PARAS,e.PARASECT,e.MACHAMP,e.TENTACOOL,e.TENTACRUEL,e.SCYTHER,e.KABUTOPS,e.MEW,e.SPINARAK,e.ARIADOS,e.CROBAT,e.GLIGAR,e.SCIZOR,e.SCEPTILE,e.ANORITH,e.ARMALDO,e.VESPIQUEN,e.SKORUPI,e.DRAPION,e.TOXICROAK,e.GLISCOR,e.SCOLIPEDE,e.GARBODOR,e.JOLTIK,e.GALVANTULA,e.TOXAPEX,e.LURANTIS,e.SALAZZLE,e.NIHILEGO,e.NAGANADEL,e.OBSTAGOON,e.ETERNATUS,e.KLEAVOR,e.SHROODLE,e.GRAFAIAI,e.FEZANDIPITI],[t.GUNK_SHOT]:[e.EKANS,e.ARBOK,e.SANDSLASH,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.SNORLAX,e.MEW,e.AIPOM,e.GLIGAR,e.QWILFISH,e.TEDDIURSA,e.URSARING,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.PHANPY,e.DONPHAN,e.ZIGZAGOON,e.LINOONE,e.PELIPPER,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.GULPIN,e.SWALOT,e.ZANGOOSE,e.SEVIPER,e.SHUPPET,e.BANETTE,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PACHIRISU,e.AMBIPOM,e.STUNKY,e.SKUNTANK,e.MUNCHLAX,e.CROAGUNK,e.TOXICROAK,e.GLISCOR,e.ARCEUS,e.PATRAT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.KROOKODILE,e.TRUBBISH,e.GARBODOR,e.MINCCINO,e.CINCCINO,e.DRUDDIGON,e.GENESECT,e.FROGADIER,e.GRENINJA,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.SKRELP,e.DRAGALGE,e.HOOPA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.CRABRAWLER,e.CRABOMINABLE,e.MAREANIE,e.TOXAPEX,e.SALANDIT,e.SALAZZLE,e.PASSIMIAN,e.KOMALA,e.NIHILEGO,e.POIPOLE,e.NAGANADEL,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.TOXTRICITY,e.OBSTAGOON,e.PERRSERKER,e.ETERNATUS,e.URSALUNA,e.SNEASLER,e.OVERQWIL,e.SHROODLE,e.GRAFAIAI,e.RELLOR,e.RABSCA,e.VAROOM,e.REVAVROOM,e.GLIMMET,e.GLIMMORA,e.ANNIHILAPE,e.CLODSIRE,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.PECHARUNT,[e.WORMADAM,"trash"],e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_MEOWTH,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.IRON_HEAD]:[e.ARCANINE,e.GRAVELER,e.GOLEM,e.MAGNEMITE,e.MAGNETON,e.ONIX,e.CUBONE,e.MAROWAK,e.TAUROS,e.GYARADOS,e.LAPRAS,e.AERODACTYL,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.FORRETRESS,e.STEELIX,e.SCIZOR,e.MANTINE,e.SKARMORY,e.KINGDRA,e.PHANPY,e.DONPHAN,e.MILTANK,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.HARIYAMA,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.WAILORD,e.NUMEL,e.CAMERUPT,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.MILOTIC,e.GLALIE,e.WALREIN,e.BAGON,e.SHELGON,e.SALAMENCE,e.BELDUM,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BRONZOR,e.BRONZONG,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOWDON,e.MAGNEZONE,e.RHYPERIOR,e.MAMOSWINE,e.PROBOPASS,e.DIALGA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.ARCEUS,e.EMBOAR,e.STOUTLAND,e.GIGALITH,e.EXCADRILL,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.CARRACOSTA,e.ESCAVALIER,e.FERROSEED,e.FERROTHORN,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.BRAVIARY,e.DURANT,e.COBALION,e.TERRAKION,e.KYUREM,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.HAWLUCHA,e.CARBINK,e.AVALUGG,e.INCINEROAR,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.PASSIMIAN,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.SOLGALEO,e.NIHILEGO,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.STAKATAKA,e.MELMETAL,e.CINDERACE,e.CORVIKNIGHT,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.SANDACONDA,e.PERRSERKER,e.FALINKS,e.EISCUE,e.CUFANT,e.COPPERAJAH,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.ENAMORUS,e.LECHONK,e.OINKOLOGNE,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CERULEDGE,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.CLODSIRE,e.FARIGIRAF,e.KINGAMBIT,e.GREAT_TUSK,e.IRON_TREADS,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_THORNS,e.ARCTIBAX,e.BAXCALIBUR,e.GHOLDENGO,e.ROARING_MOON,e.KORAIDON,e.OKIDOGI,e.ARCHALUDON,e.GOUGING_FIRE,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,[e.WORMADAM,"trash"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GOLEM,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_DARMANITAN,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS],[t.STONE_EDGE]:[e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.ONIX,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.RHYHORN,e.RHYDON,e.PINSIR,e.TAUROS,e.GYARADOS,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.DRAGONITE,e.MEWTWO,e.MEW,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.GRANBULL,e.SHUCKLE,e.HERACROSS,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.PHANPY,e.DONPHAN,e.HITMONTOP,e.ENTEI,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.BLAZIKEN,e.SWAMPERT,e.BRELOOM,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.MAWILE,e.LAIRON,e.AGGRON,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CLAYDOL,e.CRADILY,e.ARMALDO,e.ABSOL,e.RELICANTH,e.SALAMENCE,e.METAGROSS,e.REGIROCK,e.GROUDON,e.RAYQUAZA,e.TORTERRA,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.SHELLOS,e.GASTRODON,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.TOXICROAK,e.RHYPERIOR,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.ARCEUS,e.PIGNITE,e.EMBOAR,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.BEARTIC,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.DURANT,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.HAWLUCHA,e.CARBINK,e.BERGMITE,e.AVALUGG,e.ZYGARDE,e.DIANCIE,e.VOLCANION,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.TURTONATOR,e.TAPU_BULU,e.SOLGALEO,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.STAKATAKA,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.ZAMAZENTA,e.URSHIFU,e.KLEAVOR,e.URSALUNA,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.BOMBIRDIER,e.GLIMMET,e.GLIMMORA,e.ANNIHILAPE,e.CLODSIRE,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.IRON_TREADS,e.IRON_THORNS,e.TING_LU,e.ROARING_MOON,e.ARCHALUDON,e.GOUGING_FIRE,e.IRON_BOULDER,e.TERAPAGOS,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_CORSOLA,e.GALAR_DARMANITAN,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.STEALTH_ROCK]:[e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DIGLETT,e.DUGTRIO,e.PRIMEAPE,e.GEODUDE,e.GRAVELER,e.GOLEM,e.ONIX,e.CUBONE,e.MAROWAK,e.RHYHORN,e.RHYDON,e.CHANSEY,e.PINSIR,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.MEW,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SHUCKLE,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.SKARMORY,e.PHANPY,e.DONPHAN,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.CELEBI,e.MARSHTOMP,e.SWAMPERT,e.NOSEPASS,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.KECLEON,e.RELICANTH,e.METANG,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.SHELLOS,e.GASTRODON,e.BRONZOR,e.BRONZONG,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOPOTAS,e.HIPPOWDON,e.RHYPERIOR,e.GLISCOR,e.MAMOSWINE,e.PROBOPASS,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.HEATRAN,e.ARCEUS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.PALPITOAD,e.SEISMITOAD,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.FERROSEED,e.FERROTHORN,e.STUNFISK,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.HYDREIGON,e.COBALION,e.TERRAKION,e.ZEKROM,e.LANDORUS,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.CARBINK,e.DIANCIE,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.KOMMO_O,e.NIHILEGO,e.NECROZMA,e.STAKATAKA,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.PERRSERKER,e.CURSOLA,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.KLEAVOR,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.BOMBIRDIER,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.ANNIHILAPE,e.CLODSIRE,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_THORNS,e.TING_LU,e.ARCHALUDON,e.TERAPAGOS,[e.WORMADAM,"sandy","trash"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_CORSOLA,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_AVALUGG,e.PALDEA_WOOPER],[t.GRASS_KNOT]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.CHANSEY,e.TANGELA,e.STARMIE,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.SENTRET,e.FURRET,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.SMOOCHUM,e.BLISSEY,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHROOMISH,e.BRELOOM,e.SKITTY,e.DELCATTY,e.MAWILE,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.ROSELIA,e.SPOINK,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.KECLEON,e.TROPIUS,e.CHIMECHO,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.BUDEW,e.ROSERADE,[e.WORMADAM,"plant"],e.PACHIRISU,e.CHERUBI,e.CHERRIM,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.TOGEKISS,e.LEAFEON,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.SCRAGGY,e.SCRAFTY,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.FERROTHORN,e.EELEKTROSS,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.BINACLE,e.BARBARACLE,e.HELIOPTILE,e.HELIOLISK,e.HAWLUCHA,e.DEDENNE,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.XERNEAS,e.ZYGARDE,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.CUTIEFLY,e.RIBOMBEE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.PASSIMIAN,e.TOGEDEMARU,e.DRAMPA,e.DHELMISE,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.NIHILEGO,e.XURKITREE,e.CELESTEELA,e.MAGEARNA,e.MARSHADOW,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.OBSTAGOON,e.MR_RIME,e.RUNERIGUS,e.ZARUDE,e.CALYREX,e.SNEASLER,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.TAROUNTULA,e.SPIDOPS,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.PALAFIN,e.FARIGIRAF,e.KINGAMBIT,e.SCREAM_TAIL,e.BRUTE_BONNET,e.WO_CHIEN,e.IRON_VALIANT,e.IRON_LEAVES,e.DIPPLIN,e.MUNKIDORI,e.OGERPON,e.HYDRAPPLE,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE],[t.BUG_BITE]:[e.CATERPIE,e.METAPOD,e.BUTTERFREE,e.WEEDLE,e.KAKUNA,e.BEEDRILL,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.WEEPINBELL,e.VICTREEBEL,e.SCYTHER,e.PINSIR,e.MEW,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.YANMA,e.PINECO,e.FORRETRESS,e.GLIGAR,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.WURMPLE,e.SILCOON,e.BEAUTIFLY,e.CASCOON,e.DUSTOX,e.SURSKIT,e.MASQUERAIN,e.NINCADA,e.NINJASK,e.SHEDINJA,e.VOLBEAT,e.ILLUMISE,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.ANORITH,e.ARMALDO,e.KRICKETOT,e.KRICKETUNE,e.BURMY,e.WORMADAM,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.SKORUPI,e.DRAPION,e.CARNIVINE,e.YANMEGA,e.GLISCOR,e.HEATRAN,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.DWEBBLE,e.CRUSTLE,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.SHELMET,e.ACCELGOR,e.HEATMOR,e.DURANT,e.LARVESTA,e.VOLCARONA,e.GENESECT,e.SCATTERBUG,e.SPEWPA,e.VIVILLON,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CUTIEFLY,e.RIBOMBEE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.GOLISOPOD,e.BUZZWOLE,e.PHEROMOSA,e.SIZZLIPEDE,e.CENTISKORCH,e.SNOM,e.FROSMOTH,e.KLEAVOR,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.RELLOR,e.RABSCA,e.SLITHER_WING,e.DIPPLIN,e.HYDRAPPLE],[t.CHARGE_BEAM]:[e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.CHANSEY,e.MR_MIME,e.ELECTABUZZ,e.JOLTEON,e.PORYGON,e.ZAPDOS,e.MEWTWO,e.MEW,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.REMORAID,e.OCTILLERY,e.PORYGON2,e.STANTLER,e.ELEKID,e.BLISSEY,e.RAIKOU,e.LUGIA,e.HO_OH,e.CELEBI,e.ZIGZAGOON,e.LINOONE,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SKITTY,e.DELCATTY,e.MAWILE,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.MAGNEZONE,e.ELECTIVIRE,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.GIRATINA,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.MUNNA,e.MUSHARNA,e.BLITZLE,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.KLINK,e.KLANG,e.KLINKLANG,e.TYNAMO,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.DRUDDIGON,e.GOLURK,e.HYDREIGON,e.THUNDURUS,e.ZEKROM,e.MELOETTA,e.GENESECT,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.HELIOPTILE,e.HELIOLISK,e.AMAURA,e.AURORUS,e.DEDENNE,e.PUMPKABOO,e.GOURGEIST,e.HOOPA,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.SHIINOTIC,e.ORANGURU,e.MINIOR,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.TAPU_LELE,e.LUNALA,e.NIHILEGO,e.XURKITREE,e.NECROZMA,e.MAGEARNA,e.TOXTRICITY,e.PINCURCHIN,e.MORPEKO,e.REGIELEKI,e.WYRDEER,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.FARIGIRAF,e.FLUTTER_MANE,e.SANDY_SHOCKS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.GHOLDENGO,e.IRON_VALIANT,e.MIRAIDON,e.RAGING_BOLT,e.ALOLA_RAICHU,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.HONE_CLAWS]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.PARAS,e.PARASECT,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.KRABBY,e.KINGLER,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.SPINARAK,e.ARIADOS,e.AIPOM,e.GLIGAR,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.TYRANITAR,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.ZIGZAGOON,e.LINOONE,e.LOMBRE,e.LUDICOLO,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.FLYGON,e.ALTARIA,e.ZANGOOSE,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.KECLEON,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGISTEEL,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PRINPLUP,e.EMPOLEON,e.KRICKETUNE,e.VESPIQUEN,e.AMBIPOM,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.GIBLE,e.GABITE,e.GARCHOMP,e.LUCARIO,e.SKORUPI,e.DRAPION,e.WEAVILE,e.GLISCOR,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.DRILBUR,e.EXCADRILL,e.LEAVANNY,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.FERROSEED,e.FERROTHORN,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.RUFFLET,e.BRAVIARY,e.HEATMOR,e.DURANT,e.COBALION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.MELOETTA,e.GENESECT,e.QUILLADIN,e.CHESNAUGHT,e.TALONFLAME,e.PANGORO,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.TYRUNT,e.TYRANTRUM,e.HAWLUCHA,e.TREVENANT,e.NOIVERN,e.YVELTAL,e.MIMIKYU,e.ZERAORA,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.OBSTAGOON,e.PERRSERKER,e.DURALUDON,e.URSALUNA,e.SNEASLER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.MASCHIFF,e.MABOSSTIFF,e.BOMBIRDIER,e.KINGAMBIT,e.WALKING_WAKE,e.ARCHALUDON,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.GALAR_MEOWTH,e.GALAR_LINOONE,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY],[t.WONDER_ROOM]:[e.CLEFAIRY,e.CLEFABLE,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.STARMIE,e.MR_MIME,e.JYNX,e.PORYGON,e.MEWTWO,e.MEW,e.CLEFFA,e.UMBREON,e.SLOWKING,e.MISDREAVUS,e.PORYGON2,e.SMOOCHUM,e.LUGIA,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SABLEYE,e.ALTARIA,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.KECLEON,e.DUSKULL,e.DUSCLOPS,e.LATIOS,e.DEOXYS,e.MISMAGIUS,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.DARKRAI,e.MUNNA,e.MUSHARNA,e.YAMASK,e.COFAGRIGUS,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.MELOETTA,e.BRAIXEN,e.DELPHOX,e.ESPURR,e.MEOWSTIC,e.CARBINK,e.XERNEAS,e.DIANCIE,e.HOOPA,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CUTIEFLY,e.RIBOMBEE,e.DEWPIDER,e.ARAQUANID,e.MORELULL,e.SHIINOTIC,e.ORANGURU,e.BRUXISH,e.TAPU_LELE,e.TAPU_FINI,e.LUNALA,e.NIHILEGO,e.STAKATAKA,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATTERENE,e.GRIMMSNARL,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.STONJOURNER,e.INDEEDEE,e.CALYREX,e.ALOLA_NINETALES,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_YAMASK],[t.PSYSHOCK]:[e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.STARMIE,e.MR_MIME,e.JYNX,e.PORYGON,e.MEWTWO,e.MEW,e.CLEFFA,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.LUGIA,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.CHIMECHO,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.TOGEKISS,e.PORYGON_Z,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.ESPURR,e.MEOWSTIC,e.AROMATISSE,e.INKAY,e.MALAMAR,e.SYLVEON,e.KLEFKI,e.XERNEAS,e.DIANCIE,e.HOOPA,e.ORANGURU,e.BRUXISH,e.TAPU_LELE,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.NECROZMA,e.MAGEARNA,e.BLACEPHALON,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.MR_RIME,e.ALCREMIE,e.INDEEDEE,e.CALYREX,e.WYRDEER,e.ARMAROUGE,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.FARIGIRAF,e.GREAT_TUSK,e.SCREAM_TAIL,e.FLUTTER_MANE,e.GHOLDENGO,e.IRON_VALIANT,e.MUNKIDORI,e.IRON_BOULDER,e.IRON_CROWN,e.ALOLA_RAICHU,e.ALOLA_NINETALES,e.ALOLA_EXEGGUTOR,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.HISUI_BRAVIARY],[t.VENOSHOCK]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BUTTERFREE,e.BEEDRILL,e.EKANS,e.ARBOK,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.MEW,e.SPINARAK,e.ARIADOS,e.CROBAT,e.BELLOSSOM,e.PINECO,e.FORRETRESS,e.GLIGAR,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.BEAUTIFLY,e.DUSTOX,e.SHROOMISH,e.BRELOOM,e.ROSELIA,e.GULPIN,e.SWALOT,e.CACNEA,e.CACTURNE,e.SEVIPER,e.BUDEW,e.ROSERADE,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.STUNKY,e.SKUNTANK,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.GLISCOR,e.SEISMITOAD,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.TRUBBISH,e.GARBODOR,e.FOONGUS,e.AMOONGUSS,e.SHELMET,e.ACCELGOR,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.MAREANIE,e.TOXAPEX,e.SALANDIT,e.SALAZZLE,e.GOLISOPOD,e.TURTONATOR,e.BRUXISH,e.NIHILEGO,e.POIPOLE,e.NAGANADEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.PINCURCHIN,e.ETERNATUS,e.SNEASLER,e.OVERQWIL,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.VAROOM,e.REVAVROOM,e.GLIMMET,e.GLIMMORA,e.CLODSIRE,e.BRUTE_BONNET,e.IRON_MOTH,e.MUNKIDORI,e.FEZANDIPITI,e.PECHARUNT,e.ALOLA_RATICATE,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.PALDEA_WOOPER],[t.MAGIC_ROOM]:[e.WIGGLYTUFF,e.ABRA,e.KADABRA,e.ALAKAZAM,e.DROWZEE,e.HYPNO,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.NATU,e.XATU,e.ESPEON,e.MISDREAVUS,e.STANTLER,e.SMOOCHUM,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.LUNATONE,e.SHUPPET,e.BANETTE,e.LATIAS,e.JIRACHI,e.MISMAGIUS,e.MIME_JR,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.ESPURR,e.MEOWSTIC,e.KLEFKI,e.HOOPA,e.CUTIEFLY,e.RIBOMBEE,e.DEWPIDER,e.ARAQUANID,e.MORELULL,e.SHIINOTIC,e.ORANGURU,e.MIMIKYU,e.BRUXISH,e.TAPU_LELE,e.TAPU_FINI,e.LUNALA,e.STAKATAKA,e.DOTTLER,e.ORBEETLE,e.HATTERENE,e.MR_RIME,e.ALCREMIE,e.INDEEDEE,e.CALYREX,e.ALOLA_RAICHU,e.GALAR_RAPIDASH,e.GALAR_MR_MIME],[t.SMACK_DOWN]:[e.BLASTOISE,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.ONIX,e.CUBONE,e.MAROWAK,e.RHYHORN,e.RHYDON,e.PINSIR,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.MEW,e.SUDOWOODO,e.AIPOM,e.STEELIX,e.SHUCKLE,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.REMORAID,e.OCTILLERY,e.PHANPY,e.DONPHAN,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.AGGRON,e.CAMERUPT,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.RELICANTH,e.REGIROCK,e.GROUDON,e.TURTWIG,e.GROTLE,e.TORTERRA,e.MONFERNO,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.AMBIPOM,e.BONSLY,e.RHYPERIOR,e.MAMOSWINE,e.PROBOPASS,e.REGIGIGAS,e.EMBOAR,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.KROOKODILE,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.GARBODOR,e.DRUDDIGON,e.TERRAKION,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.CARBINK,e.DIANCIE,e.VOLCANION,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.PASSIMIAN,e.TURTONATOR,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.MARSHADOW,e.STAKATAKA,e.BLACEPHALON,e.CINDERACE,e.INTELEON,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.STONJOURNER,e.COPPERAJAH,e.KLEAVOR,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.TINKATON,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.ANNIHILAPE,e.GREAT_TUSK,e.IRON_THORNS,e.ARCHALUDON,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,e.GALAR_SLOWBRO,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.SLUDGE_WAVE]:[e.EKANS,e.ARBOK,e.NIDOQUEEN,e.NIDOKING,e.VILEPLUME,e.VENOMOTH,e.DUGTRIO,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.MEW,e.SPINARAK,e.ARIADOS,e.WOOPER,e.QUAGSIRE,e.QWILFISH,e.SHUCKLE,e.OCTILLERY,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.GULPIN,e.SWALOT,e.SEVIPER,e.CRAWDAUNT,e.CRADILY,e.GASTRODON,e.STUNKY,e.SKUNTANK,e.CROAGUNK,e.TOXICROAK,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.TRUBBISH,e.GARBODOR,e.FRILLISH,e.JELLICENT,e.STUNFISK,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.GRENINJA,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.GOOMY,e.SLIGGOO,e.GOODRA,e.ZYGARDE,e.VOLCANION,e.MAREANIE,e.TOXAPEX,e.SALANDIT,e.SALAZZLE,e.GOLISOPOD,e.DHELMISE,e.NIHILEGO,e.GUZZLORD,e.POIPOLE,e.NAGANADEL,e.TOXTRICITY,e.ETERNATUS,e.SNEASLER,e.OVERQWIL,e.SHROODLE,e.GRAFAIAI,e.VAROOM,e.REVAVROOM,e.GLIMMET,e.GLIMMORA,e.CLODSIRE,e.IRON_MOTH,e.OKIDOGI,e.MUNKIDORI,e.PECHARUNT,e.ALOLA_RATICATE,e.ALOLA_DUGTRIO,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_STUNFISK,e.HISUI_SNEASEL,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.PALDEA_WOOPER],[t.HEAVY_SLAM]:[e.MACHOP,e.MACHOKE,e.MACHAMP,e.GRAVELER,e.GOLEM,e.MAGNEMITE,e.MAGNETON,e.ONIX,e.RHYHORN,e.RHYDON,e.SNORLAX,e.MEW,e.FORRETRESS,e.STEELIX,e.PHANPY,e.DONPHAN,e.MILTANK,e.TYRANITAR,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.ARON,e.LAIRON,e.AGGRON,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.WALREIN,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.KYOGRE,e.GROUDON,e.TURTWIG,e.GROTLE,e.TORTERRA,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BRONZOR,e.BRONZONG,e.HIPPOWDON,e.MAGNEZONE,e.RHYPERIOR,e.MAMOSWINE,e.PROBOPASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.ARCEUS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.CRUSTLE,e.FERROTHORN,e.EELEKTROSS,e.CUBCHOO,e.BEARTIC,e.GOLETT,e.GOLURK,e.COBALION,e.CARBINK,e.AVALUGG,e.VOLCANION,e.MUDBRAY,e.MUDSDALE,e.TURTONATOR,e.DHELMISE,e.SOLGALEO,e.CELESTEELA,e.GUZZLORD,e.MAGEARNA,e.STAKATAKA,e.MELMETAL,e.CORVIKNIGHT,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.PERRSERKER,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.ZAMAZENTA,e.GLASTRIER,e.URSALUNA,e.NACLI,e.NACLSTACK,e.GARGANACL,e.TINKATON,e.REVAVROOM,e.ORTHWORM,e.CETODDLE,e.CETITAN,e.DONDOZO,e.CLODSIRE,e.DUDUNSPARCE,e.GREAT_TUSK,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.GHOLDENGO,e.TING_LU,e.KORAIDON,e.MIRAIDON,e.ARCHALUDON,e.HYDRAPPLE,e.RAGING_BOLT,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_GOLEM,[e.CALYREX,"ice"],e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.BLOODMOON_URSALUNA],[t.ELECTRO_BALL]:[e.PIKACHU,e.RAICHU,e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.ELECTABUZZ,e.JOLTEON,e.ZAPDOS,e.MEWTWO,e.MEW,e.CHINCHOU,e.LANTURN,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.ELEKID,e.RAIKOU,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.MAGNEZONE,e.ELECTIVIRE,e.ROTOM,e.BLITZLE,e.ZEBSTRIKA,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.EELEKTRIK,e.EELEKTROSS,e.THUNDURUS,e.ZEKROM,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.CHARJABUG,e.VIKAVOLT,e.TOGEDEMARU,e.TAPU_KOKO,e.XURKITREE,e.MAGEARNA,e.ZERAORA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.WOOLOO,e.DUBWOOL,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.PINCURCHIN,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.REGIELEKI,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.RABSCA,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_THORNS,e.GHOLDENGO,e.MIRAIDON,e.RAGING_BOLT,e.ALOLA_RAICHU,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.FLAME_CHARGE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.VULPIX,e.NINETALES,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.MAGMAR,e.FLAREON,e.MOLTRES,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SLUGMA,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.ENTEI,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.MAGMORTAR,e.HEATRAN,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.BLITZLE,e.ZEBSTRIKA,e.DARUMAKA,e.DARMANITAN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.LARVESTA,e.VOLCARONA,e.RESHIRAM,e.GENESECT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.PUMPKABOO,e.GOURGEIST,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.SALANDIT,e.SALAZZLE,e.TYPE_NULL,e.SILVALLY,e.TURTONATOR,e.SOLGALEO,e.CELESTEELA,e.BLACEPHALON,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.YAMPER,e.CARKOL,e.COALOSSAL,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.SLITHER_WING,e.IRON_MOTH,e.CHI_YU,e.KORAIDON,e.GOUGING_FIRE,e.ALOLA_MAROWAK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,[e.PALDEA_TAUROS,"blaze"]],[t.LOW_SWEEP]:[e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.DROWZEE,e.HYPNO,e.HITMONLEE,e.HITMONCHAN,e.ELECTABUZZ,e.MAGMAR,e.MEWTWO,e.MEW,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.SNEASEL,e.TYROGUE,e.HITMONTOP,e.GROVYLE,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.GRUMPIG,e.ZANGOOSE,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.ELECTIVIRE,e.MAGMORTAR,e.GALLADE,e.PIGNITE,e.EMBOAR,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ZOROARK,e.GOTHITELLE,e.HAXORUS,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.GRENINJA,e.PANCHAM,e.PANGORO,e.HELIOPTILE,e.HELIOLISK,e.HAWLUCHA,e.DECIDUEYE,e.INCINEROAR,e.GUMSHOOS,e.MUDBRAY,e.MUDSDALE,e.LURANTIS,e.STUFFUL,e.BEWEAR,e.STEENEE,e.TSAREENA,e.PASSIMIAN,e.KOMALA,e.BUZZWOLE,e.PHEROMOSA,e.MARSHADOW,e.ZERAORA,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.GRIMMSNARL,e.STONJOURNER,e.KUBFU,e.URSHIFU,e.ZARUDE,e.SNEASLER,e.FLORAGATO,e.MEOWSCARADA,e.QUAXWELL,e.QUAQUAVAL,e.LOKIX,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.GRAFAIAI,e.FLAMIGO,e.ANNIHILAPE,e.KINGAMBIT,e.SLITHER_WING,e.IRON_HANDS,e.GHOLDENGO,e.KORAIDON,e.OKIDOGI,e.OGERPON,[e.LYCANROC,"midnight"],e.GALAR_ZAPDOS,e.GALAR_SLOWKING,e.HISUI_SNEASEL,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE],[t.ACID_SPRAY]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.EKANS,e.ARBOK,e.ODDISH,e.GLOOM,e.VILEPLUME,e.VENONAT,e.VENOMOTH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.MAGMAR,e.MEW,e.SPINARAK,e.ARIADOS,e.BELLOSSOM,e.WOOPER,e.QUAGSIRE,e.QWILFISH,e.REMORAID,e.OCTILLERY,e.MAGBY,e.GULPIN,e.SWALOT,e.SEVIPER,e.STUNKY,e.SKUNTANK,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.MAGMORTAR,e.ARCEUS,e.SCRAGGY,e.SCRAFTY,e.TRUBBISH,e.GARBODOR,e.KARRABLAST,e.ESCAVALIER,e.FERROSEED,e.FERROTHORN,e.EELEKTRIK,e.EELEKTROSS,e.ACCELGOR,e.SKRELP,e.DRAGALGE,e.SLIGGOO,e.GOODRA,e.MAREANIE,e.TOXAPEX,e.SALANDIT,e.SALAZZLE,e.NIHILEGO,e.FLAPPLE,e.TOXTRICITY,e.SNEASLER,e.OVERQWIL,e.ARMAROUGE,e.TADBULB,e.BELLIBOLT,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.VAROOM,e.REVAVROOM,e.GLIMMET,e.GLIMMORA,e.CLODSIRE,e.IRON_MOTH,e.MUNKIDORI,e.FEZANDIPITI,e.PECHARUNT,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.PALDEA_WOOPER],[t.FOUL_PLAY]:[e.VULPIX,e.NINETALES,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.MR_MIME,e.PORYGON,e.MEWTWO,e.MEW,e.SPINARAK,e.ARIADOS,e.XATU,e.SUDOWOODO,e.AIPOM,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.SNEASEL,e.DELIBIRD,e.HOUNDOUR,e.HOUNDOOM,e.PORYGON2,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.MASQUERAIN,e.SABLEYE,e.MAWILE,e.CACNEA,e.CACTURNE,e.KECLEON,e.SHUPPET,e.BANETTE,e.ABSOL,e.GLALIE,e.AMBIPOM,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.BONSLY,e.SPIRITOMB,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.PORYGON_Z,e.ROTOM,e.UXIE,e.DARKRAI,e.ARCEUS,e.PURRLOIN,e.LIEPARD,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.FOONGUS,e.AMOONGUSS,e.STUNFISK,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.TORNADUS,e.THUNDURUS,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.INKAY,e.MALAMAR,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.YVELTAL,e.HOOPA,e.SALANDIT,e.SALAZZLE,e.ORANGURU,e.NIHILEGO,e.PHEROMOSA,e.MARSHADOW,e.BLACEPHALON,e.NICKIT,e.THIEVUL,e.SINISTEA,e.POLTEAGEIST,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.MR_RIME,e.MORPEKO,e.DURALUDON,e.SPECTRIER,e.MEOWSCARADA,e.SQUAWKABILLY,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FARIGIRAF,e.KINGAMBIT,e.WO_CHIEN,e.POLTCHAGEIST,e.SINISTCHA,e.ARCHALUDON,e.PECHARUNT,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_MUK,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_STUNFISK,[e.URSHIFU,"single-strike"],[e.CALYREX,"shadow"],e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.ROUND]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK],[t.ECHOED_VOICE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SPEAROW,e.FEAROW,e.PIKACHU,e.RAICHU,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.CUBONE,e.MAROWAK,e.CHANSEY,e.JYNX,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.POLITOED,e.ESPEON,e.UMBREON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PHANPY,e.DONPHAN,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.LUGIA,e.HO_OH,e.CELEBI,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.SKITTY,e.DELCATTY,e.PLUSLE,e.MINUN,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.SWABLU,e.ALTARIA,e.CHIMECHO,e.ABSOL,e.SPHEAL,e.SEALEO,e.WALREIN,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.MISMAGIUS,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.HAPPINY,e.CHATOT,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GALLADE,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PURRLOIN,e.LIEPARD,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.AUDINO,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.ELGYEM,e.BEHEEYEM,e.CUBCHOO,e.BEARTIC,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.AMAURA,e.AURORUS,e.SYLVEON,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.ROCKRUFF,e.LYCANROC,e.COMFEY,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.NIHILEGO,e.PHEROMOSA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.ZERAORA,e.ARCTOZOLT,e.LECHONK,e.OINKOLOGNE,e.TANDEMAUS,e.MAUSHOLD,e.CETODDLE,e.CETITAN,e.ALOLA_RAICHU,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE],[t.STORED_POWER]:[e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.CHANSEY,e.MR_MIME,e.JYNX,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CLEFFA,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.ESPEON,e.UMBREON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.STANTLER,e.SMOOCHUM,e.BLISSEY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.SOLROCK,e.CLAYDOL,e.CHIMECHO,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GALLADE,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.MANAPHY,e.ARCEUS,e.VICTINI,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLABEBE,e.FLOETTE,e.FLORGES,e.MEOWSTIC,e.INKAY,e.MALAMAR,e.SYLVEON,e.KLEFKI,e.DIANCIE,e.PRIMARINA,e.RIBOMBEE,e.COMFEY,e.ORANGURU,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.NECROZMA,e.MAGEARNA,e.BLACEPHALON,e.DOTTLER,e.ORBEETLE,e.TOXTRICITY,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.MR_RIME,e.MILCERY,e.ALCREMIE,e.INDEEDEE,e.CALYREX,e.WYRDEER,e.ARMAROUGE,e.CERULEDGE,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.VELUZA,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_VALIANT,e.MUNKIDORI,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ETERNAL_FLOETTE,e.ALOLA_NINETALES,e.ALOLA_EXEGGUTOR,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.HISUI_BRAVIARY],[t.ALLY_SWITCH]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DIGLETT,e.DUGTRIO,e.ABRA,e.KADABRA,e.ALAKAZAM,e.PONYTA,e.RAPIDASH,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.MAROWAK,e.CHANSEY,e.STARMIE,e.MR_MIME,e.JYNX,e.PORYGON,e.MEWTWO,e.MEW,e.NATU,e.XATU,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.FORRETRESS,e.PORYGON2,e.TYROGUE,e.BLISSEY,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHEDINJA,e.SABLEYE,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.WORMADAM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.MAGNEZONE,e.TOGEKISS,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.MUNNA,e.MUSHARNA,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.YAMASK,e.COFAGRIGUS,e.ARCHEN,e.ARCHEOPS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.KLANG,e.KLINKLANG,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.MELOETTA,e.GENESECT,e.BRAIXEN,e.DELPHOX,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.INKAY,e.MALAMAR,e.HELIOPTILE,e.HELIOLISK,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.DIANCIE,e.HOOPA,e.CUTIEFLY,e.RIBOMBEE,e.COMFEY,e.ORANGURU,e.BRUXISH,e.DHELMISE,e.TAPU_LELE,e.NIHILEGO,e.NECROZMA,e.NAGANADEL,e.STAKATAKA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.MR_RIME,e.RUNERIGUS,e.INDEEDEE,e.DRAKLOAK,e.DRAGAPULT,e.CALYREX,e.SPRIGATITO,e.ARMAROUGE,e.CERULEDGE,e.FLITTLE,e.GREAVARD,e.IRON_LEAVES,e.ALOLA_RAICHU,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_YAMASK],[t.SCALD]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.KRABBY,e.KINGLER,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.GYARADOS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.RAIKOU,e.SUICUNE,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.AZURILL,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.KYOGRE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.FINNEON,e.LUMINEON,e.MANTYKE,e.PHIONE,e.MANAPHY,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.STUNFISK,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.GOODRA,e.VOLCANION,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CRABRAWLER,e.CRABOMINABLE,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.WIMPOD,e.GOLISOPOD,e.BRUXISH,e.TAPU_FINI,e.INTELEON,e.DREDNAW,e.CARKOL,e.COALOSSAL,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.SIZZLIPEDE,e.CENTISKORCH,e.CURSOLA,e.PINCURCHIN,e.DRACOVISH,e.DRAKLOAK,e.DRAGAPULT,e.WALKING_WAKE,e.POLTCHAGEIST,e.SINISTCHA,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_STUNFISK,[e.URSHIFU,"rapid-strike"]],[t.HEX]:[e.NIDOQUEEN,e.NIDOKING,e.VULPIX,e.NINETALES,e.TENTACOOL,e.TENTACRUEL,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.HYPNO,e.MEWTWO,e.MEW,e.SPINARAK,e.ARIADOS,e.CROBAT,e.MURKROW,e.MISDREAVUS,e.DUNSPARCE,e.QWILFISH,e.SHIFTRY,e.SHEDINJA,e.SABLEYE,e.BALTOY,e.CLAYDOL,e.CASTFORM,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.SNORUNT,e.GLALIE,e.VESPIQUEN,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.SPIRITOMB,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.GIRATINA,e.ARCEUS,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.EELEKTROSS,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.DELPHOX,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.DECIDUEYE,e.TOXAPEX,e.SANDYGAST,e.PALOSSAND,e.MIMIKYU,e.DHELMISE,e.LUNALA,e.NIHILEGO,e.MARSHADOW,e.NAGANADEL,e.TOXTRICITY,e.SINISTEA,e.POLTEAGEIST,e.CURSOLA,e.RUNERIGUS,e.PINCURCHIN,e.DRAKLOAK,e.DRAGAPULT,e.SPECTRIER,e.BASCULEGION,e.SKELEDIRGE,e.CERULEDGE,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.ESPATHRA,e.GREAVARD,e.HOUNDSTONE,e.DUDUNSPARCE,e.BRUTE_BONNET,e.FLUTTER_MANE,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.IRON_VALIANT,e.POLTCHAGEIST,e.SINISTCHA,e.MUNKIDORI,e.FEZANDIPITI,e.PECHARUNT,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.MAROWAK,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_YAMASK,[e.CALYREX,"shadow"],e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.SKY_DROP]:[e.CHARIZARD,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.SKARMORY,e.LUGIA,e.HO_OH,e.PELIPPER,e.RAYQUAZA,e.RUFFLET,e.BRAVIARY,e.TORNADUS,e.THUNDURUS,e.HAWLUCHA,e.YVELTAL,e.VIKAVOLT,e.TAPU_KOKO,e.LUNALA,e.NAGANADEL],[t.INCINERATE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GROWLITHE,e.ARCANINE,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MAGMAR,e.TAUROS,e.GYARADOS,e.FLAREON,e.AERODACTYL,e.SNORLAX,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.SLOWKING,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.SLUGMA,e.MAGCARGO,e.REMORAID,e.OCTILLERY,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.BLISSEY,e.ENTEI,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.POOCHYENA,e.MIGHTYENA,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.SABLEYE,e.MAWILE,e.AGGRON,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.FLYGON,e.ALTARIA,e.ZANGOOSE,e.SOLROCK,e.CASTFORM,e.KECLEON,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.GROUDON,e.RAYQUAZA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.HAPPINY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.LICKILICKY,e.RHYPERIOR,e.MAGMORTAR,e.TOGEKISS,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.DARKRAI,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.AUDINO,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ZORUA,e.ZOROARK,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.GOODRA,e.PUMPKABOO,e.GOURGEIST,e.VOLCANION,e.SALANDIT,e.SALAZZLE,e.TURTONATOR,e.BLACEPHALON,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.DUDUNSPARCE,e.CHI_YU,e.ROARING_MOON,e.GOUGING_FIRE,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_GOODRA,e.PALDEA_TAUROS],[t.QUASH]:[e.NIDOQUEEN,e.NIDOKING,e.KINGLER,e.MEW,e.MURKROW,e.SLOWKING,e.KINGDRA,e.RAIKOU,e.ENTEI,e.SUICUNE,e.SLAKING,e.SABLEYE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.VESPIQUEN,e.HONCHKROW,e.SPIRITOMB,e.ARCEUS,e.PANCHAM,e.PANGORO,e.HOOPA,e.INCINEROAR,e.ORICORIO,e.ORANGURU,e.PALOSSAND,e.PYUKUMUKU,e.KOMALA,e.BLACEPHALON,e.HATENNA,e.MORPEKO,e.TINKATINK,e.IRON_LEAVES,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK],[t.ACROBATICS]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.ZUBAT,e.GOLBAT,e.VENOMOTH,e.MANKEY,e.PRIMEAPE,e.FARFETCHD,e.SCYTHER,e.ZAPDOS,e.MOLTRES,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.MURKROW,e.GLIGAR,e.SCIZOR,e.DELIBIRD,e.MANTINE,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.BLAZIKEN,e.BEAUTIFLY,e.DUSTOX,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.NINJASK,e.VOLBEAT,e.ILLUMISE,e.SWABLU,e.ALTARIA,e.LUNATONE,e.SOLROCK,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.STARLY,e.STARAVIA,e.STARAPTOR,e.MOTHIM,e.VESPIQUEN,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.LOPUNNY,e.HONCHKROW,e.FINNEON,e.LUMINEON,e.MANTYKE,e.GLISCOR,e.UXIE,e.MESPRIT,e.AZELF,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.WOOBAT,e.SWOOBAT,e.ARCHEN,e.ARCHEOPS,e.SWANNA,e.EMOLGA,e.ALOMOMOLA,e.EELEKTRIK,e.EELEKTROSS,e.CRYOGONAL,e.MIENFOO,e.MIENSHAO,e.RUFFLET,e.BRAVIARY,e.MANDIBUZZ,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.MELOETTA,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.SALAZZLE,e.TSAREENA,e.COMFEY,e.PASSIMIAN,e.MINIOR,e.KOMALA,e.TAPU_KOKO,e.LUNALA,e.CELESTEELA,e.MARSHADOW,e.NAGANADEL,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.INTELEON,e.THIEVUL,e.FLAPPLE,e.CRAMORANT,e.FROSMOTH,e.DRAKLOAK,e.DRAGAPULT,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.KLEAVOR,e.SNEASLER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.WATTREL,e.KILOWATTREL,e.SHROODLE,e.GRAFAIAI,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.CYCLIZAR,e.FLAMIGO,e.ANNIHILAPE,e.SLITHER_WING,e.IRON_BUNDLE,e.IRON_JUGULIS,e.IRON_MOTH,e.CHIEN_PAO,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.FEZANDIPITI,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY],[t.RETALIATE]:[e.RATTATA,e.RATICATE,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.MACHOP,e.MACHOKE,e.MACHAMP,e.FARFETCHD,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.CHANSEY,e.KANGASKHAN,e.TAUROS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.MEW,e.SENTRET,e.FURRET,e.TOGETIC,e.AIPOM,e.ESPEON,e.UMBREON,e.MURKROW,e.GIRAFARIG,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.HOUNDOUR,e.HOUNDOOM,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.CARVANHA,e.SHARPEDO,e.SPINDA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.CRAWDAUNT,e.CASTFORM,e.KECLEON,e.ABSOL,e.LATIAS,e.LATIOS,e.MONFERNO,e.INFERNAPE,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.SPIRITOMB,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.LICKILICKY,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GALLADE,e.REGIGIGAS,e.DARKRAI,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.LEAVANNY,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.DURANT,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.INKAY,e.MALAMAR,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.ZYGARDE,e.PASSIMIAN,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DUBWOOL,e.CLOBBOPUS,e.GRAPPLOCT,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.SIRFETCHD,e.FALINKS,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.MASCHIFF,e.KINGAMBIT,e.IRON_LEAVES,e.OGERPON,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_SAMUROTT],[t.WATER_PLEDGE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.SILVALLY,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.HISUI_SAMUROTT],[t.FIRE_PLEDGE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SILVALLY,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.HISUI_TYPHLOSION],[t.GRASS_PLEDGE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TURTWIG,e.GROTLE,e.TORTERRA,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.SILVALLY,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.HISUI_DECIDUEYE],[t.VOLT_SWITCH]:[e.PIKACHU,e.RAICHU,e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.ELECTABUZZ,e.JOLTEON,e.ZAPDOS,e.MEW,e.CHINCHOU,e.LANTURN,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.FORRETRESS,e.ELEKID,e.RAIKOU,e.NOSEPASS,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.MAGNEZONE,e.ELECTIVIRE,e.PROBOPASS,e.ROTOM,e.BLITZLE,e.ZEBSTRIKA,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.COBALION,e.THUNDURUS,e.ZEKROM,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.TOGEDEMARU,e.TAPU_KOKO,e.XURKITREE,e.MAGEARNA,e.ZERAORA,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.MORPEKO,e.REGIELEKI,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.MIRAIDON,e.RAGING_BOLT,e.IRON_CROWN,e.ALOLA_RAICHU,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.STRUGGLE_BUG]:[e.BUTTERFREE,e.BEEDRILL,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.SCYTHER,e.PINSIR,e.MEW,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.YANMA,e.PINECO,e.FORRETRESS,e.GLIGAR,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.BEAUTIFLY,e.DUSTOX,e.SURSKIT,e.MASQUERAIN,e.NINCADA,e.NINJASK,e.SHEDINJA,e.VOLBEAT,e.ILLUMISE,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.ANORITH,e.ARMALDO,e.STARAPTOR,e.KRICKETOT,e.KRICKETUNE,e.WORMADAM,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.SKORUPI,e.DRAPION,e.YANMEGA,e.GLISCOR,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.DWEBBLE,e.CRUSTLE,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.SHELMET,e.ACCELGOR,e.DURANT,e.LARVESTA,e.VOLCARONA,e.GENESECT,e.SCATTERBUG,e.SPEWPA,e.VIVILLON,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CUTIEFLY,e.RIBOMBEE,e.WIMPOD,e.GOLISOPOD,e.BLIPBUG,e.DOTTLER,e.ORBEETLE,e.SIZZLIPEDE,e.SNOM,e.FROSMOTH,e.KLEAVOR,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.RELLOR,e.RABSCA,e.IRON_MOTH],[t.BULLDOZE]:[e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWPOKE,e.SLOWBRO,e.ONIX,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.AERODACTYL,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SHUCKLE,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.MANTINE,e.PHANPY,e.DONPHAN,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.SCEPTILE,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.ARON,e.LAIRON,e.AGGRON,e.SWALOT,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.GRUMPIG,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.ALTARIA,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.CRADILY,e.ARMALDO,e.MILOTIC,e.DUSCLOPS,e.TROPIUS,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.RELICANTH,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.TURTWIG,e.GROTLE,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.BIBAREL,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.SHELLOS,e.GASTRODON,e.PURUGLY,e.BRONZOR,e.BRONZONG,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.MANTYKE,e.ABOMASNOW,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.ARCEUS,e.PIGNITE,e.EMBOAR,e.SAMUROTT,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.CONKELDURR,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.DEERLING,e.SAWSBUCK,e.FERROTHORN,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.STUNFISK,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.HYDREIGON,e.TERRAKION,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.BINACLE,e.BARBARACLE,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.GOODRA,e.PHANTUMP,e.TREVENANT,e.BERGMITE,e.AVALUGG,e.ZYGARDE,e.DIANCIE,e.VOLCANION,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.KOMALA,e.TURTONATOR,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.SOLGALEO,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.STAKATAKA,e.RILLABOOM,e.GREEDENT,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.GLASTRIER,e.SPECTRIER,e.WYRDEER,e.URSALUNA,e.LECHONK,e.OINKOLOGNE,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.VAROOM,e.REVAVROOM,e.ORTHWORM,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.DONDOZO,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.GREAT_TUSK,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.BAXCALIBUR,e.TING_LU,e.KORAIDON,e.GOUGING_FIRE,e.IRON_BOULDER,e.IRON_CROWN,[e.WORMADAM,"sandy"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_DARMANITAN,e.GALAR_STUNFISK,[e.CALYREX,"ice","shadow"],e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SAMUROTT,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.FROST_BREATH]:[e.DEWGONG,e.CLOYSTER,e.JYNX,e.LAPRAS,e.ARTICUNO,e.MEW,e.DELIBIRD,e.SMOOCHUM,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.REGICE,e.SNOVER,e.ABOMASNOW,e.GLACEON,e.FROSLASS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.AMAURA,e.AURORUS,e.BERGMITE,e.AVALUGG,e.CRABRAWLER,e.CRABOMINABLE,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.GOLISOPOD,e.BRUXISH,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES],[t.DRAGON_TAIL]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BLASTOISE,e.ARBOK,e.NIDOQUEEN,e.NIDOKING,e.ONIX,e.LICKITUNG,e.RHYDON,e.GYARADOS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.MEGANIUM,e.FERALIGATR,e.AMPHAROS,e.SLOWKING,e.STEELIX,e.TYRANITAR,e.LUGIA,e.AGGRON,e.VIBRAVA,e.FLYGON,e.SEVIPER,e.MILOTIC,e.TROPIUS,e.BAGON,e.SHELGON,e.SALAMENCE,e.GROUDON,e.RAYQUAZA,e.RAMPARDOS,e.GIBLE,e.GABITE,e.GARCHOMP,e.LICKILICKY,e.RHYPERIOR,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.SERPERIOR,e.SAMUROTT,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ARCHEOPS,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.SKRELP,e.DRAGALGE,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.GOODRA,e.NOIVERN,e.ZYGARDE,e.SALAZZLE,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.GUZZLORD,e.NAGANADEL,e.CHEWTLE,e.APPLETUN,e.DRACOZOLT,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.CYCLIZAR,e.DUDUNSPARCE,e.IRON_JUGULIS,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.DIPPLIN,e.ARCHALUDON,e.HYDRAPPLE,e.RAGING_BOLT,e.ALOLA_EXEGGUTOR,e.HISUI_GOODRA],[t.WORK_UP]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.SANDSHREW,e.SANDSLASH,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.FARFETCHD,e.DODUO,e.DODRIO,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.CHANSEY,e.KANGASKHAN,e.TAUROS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MARILL,e.AZUMARILL,e.AIPOM,e.ESPEON,e.UMBREON,e.GIRAFARIG,e.SNUBBULL,e.GRANBULL,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.TAILLOW,e.SWELLOW,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.SKITTY,e.DELCATTY,e.MEDITITE,e.MEDICHAM,e.SPINDA,e.ZANGOOSE,e.CASTFORM,e.KECLEON,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.GLAMEOW,e.PURUGLY,e.HAPPINY,e.CHATOT,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.LICKILICKY,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GALLADE,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.MIENFOO,e.MIENSHAO,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.SYLVEON,e.HAWLUCHA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.TYPE_NULL,e.SILVALLY,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_BULU,e.SOLGALEO,e.LUNALA,e.BUZZWOLE,e.MARSHADOW,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CLOBBOPUS,e.GRAPPLOCT,e.OBSTAGOON,e.PERRSERKER,e.SIRFETCHD,e.CUFANT,e.COPPERAJAH,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.FIDOUGH,e.DACHSBUN,e.IRON_JUGULIS,e.IRON_LEAVES,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,[e.LYCANROC,"dusk"],e.GALAR_MEOWTH,e.GALAR_FARFETCHD,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.PALDEA_TAUROS],[t.ELECTROWEB]:[e.CATERPIE,e.METAPOD,e.BUTTERFREE,e.WEEDLE,e.KAKUNA,e.BEEDRILL,e.PIKACHU,e.RAICHU,e.MAGNEMITE,e.MAGNETON,e.ELECTABUZZ,e.PORYGON,e.MEW,e.SPINARAK,e.ARIADOS,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.PORYGON2,e.ELEKID,e.WURMPLE,e.SILCOON,e.BEAUTIFLY,e.CASCOON,e.DUSTOX,e.PLUSLE,e.MINUN,e.BURMY,e.WORMADAM,e.MOTHIM,e.PACHIRISU,e.MAGNEZONE,e.ELECTIVIRE,e.PORYGON_Z,e.ROTOM,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.STUNFISK,e.THUNDURUS,e.GENESECT,e.SPEWPA,e.VIVILLON,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.PASSIMIAN,e.TOGEDEMARU,e.TAPU_KOKO,e.PHEROMOSA,e.XURKITREE,e.MAGEARNA,e.ZERAORA,e.MORPEKO,e.REGIELEKI,e.SPIDOPS,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.SANDY_SHOCKS,e.IRON_THORNS,e.RAGING_BOLT,e.ALOLA_RAICHU,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM],[t.WILD_CHARGE]:[e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.CHANSEY,e.ELECTABUZZ,e.TAUROS,e.JOLTEON,e.SNORLAX,e.ZAPDOS,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.CHINCHOU,e.LANTURN,e.PICHU,e.IGGLYBUFF,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.STANTLER,e.ELEKID,e.BLISSEY,e.RAIKOU,e.SLAKING,e.SKITTY,e.DELCATTY,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.SPINDA,e.RAYQUAZA,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.MAGNEZONE,e.ELECTIVIRE,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.BLITZLE,e.ZEBSTRIKA,e.AUDINO,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.BOUFFALANT,e.LARVESTA,e.VOLCARONA,e.THUNDURUS,e.ZEKROM,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.FURFROU,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.NOIBAT,e.NOIVERN,e.VOLCANION,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.TOGEDEMARU,e.TAPU_KOKO,e.SOLGALEO,e.XURKITREE,e.ZERAORA,e.GREEDENT,e.WOOLOO,e.DUBWOOL,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.PINCURCHIN,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.ZACIAN,e.ZAMAZENTA,e.REGIELEKI,e.WYRDEER,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MABOSSTIFF,e.CYCLIZAR,e.DUDUNSPARCE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.KORAIDON,e.MIRAIDON,e.IRON_LEAVES,e.RAGING_BOLT,e.IRON_BOULDER,e.TERAPAGOS,e.ALOLA_RAICHU,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.PALDEA_TAUROS],[t.DRILL_RUN]:[e.BEEDRILL,e.SPEAROW,e.FEAROW,e.SANDSLASH,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.RAPIDASH,e.DODRIO,e.SEEL,e.DEWGONG,e.CLOYSTER,e.ONIX,e.RHYHORN,e.RHYDON,e.GOLDEEN,e.SEAKING,e.LAPRAS,e.MEW,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.STEELIX,e.SKARMORY,e.DELIBIRD,e.HITMONTOP,e.BALTOY,e.CLAYDOL,e.RHYPERIOR,e.SAMUROTT,e.DRILBUR,e.EXCADRILL,e.KARRABLAST,e.ESCAVALIER,[e.LYCANROC,"midday","dusk"],e.GOLISOPOD,e.PHEROMOSA,e.SILICOBRA,e.SANDACONDA,e.ARROKUDA,e.BARRASKEWDA,e.BOMBIRDIER,e.VELUZA,e.DUDUNSPARCE,e.ALOLA_SANDSLASH,e.GALAR_RAPIDASH,e.HISUI_SAMUROTT,e.PALDEA_TAUROS],[t.RAZOR_SHELL]:[e.SLOWBRO,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.KABUTOPS,e.MEW,e.SLOWKING,e.CORPHISH,e.CRAWDAUNT,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.CARRACOSTA,e.ESCAVALIER,e.BINACLE,e.BARBARACLE,e.GOLISOPOD,e.DREDNAW,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.HISUI_SAMUROTT],[t.HEAT_CRASH]:[e.CHARIZARD,e.ARCANINE,e.RHYDON,e.SNORLAX,e.MEW,e.SLUGMA,e.MAGCARGO,e.BLAZIKEN,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.GROUDON,e.RHYPERIOR,e.MAGMORTAR,e.HEATRAN,e.REGIGIGAS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.GOLURK,e.RESHIRAM,e.VOLCANION,e.INCINEROAR,e.TURTONATOR,e.SOLGALEO,e.GUZZLORD,e.STAKATAKA,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SIZZLIPEDE,e.CENTISKORCH,e.STONJOURNER,e.COPPERAJAH,e.SKELEDIRGE,e.SLITHER_WING,e.KORAIDON,e.GOUGING_FIRE,e.TERAPAGOS,e.HISUI_ARCANINE],[t.TAIL_SLAP]:[e.VULPIX,e.NINETALES,e.MEW,e.AIPOM,e.ZIGZAGOON,e.LINOONE,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.STUNKY,e.SKUNTANK,e.MINCCINO,e.CINCCINO,e.MEOWSTIC,[e.LYCANROC,"midday","dusk"],e.SKWOVET,e.GREEDENT,e.NICKIT,e.THIEVUL,e.ZACIAN,e.ZAMAZENTA,e.FEZANDIPITI,e.ALOLA_VULPIX,e.ALOLA_NINETALES],[t.HURRICANE]:[e.CHARIZARD,e.BUTTERFREE,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.GYARADOS,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.MURKROW,e.MANTINE,e.KINGDRA,e.LUGIA,e.SHIFTRY,e.TAILLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.SWABLU,e.ALTARIA,e.CASTFORM,e.TROPIUS,e.SALAMENCE,e.RAYQUAZA,e.STARLY,e.STARAVIA,e.STARAPTOR,e.VESPIQUEN,e.HONCHKROW,e.ARCEUS,e.UNFEZANT,e.WHIMSICOTT,e.DUCKLETT,e.SWANNA,e.RUFFLET,e.BRAVIARY,e.MANDIBUZZ,e.VOLCARONA,e.TORNADUS,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.DECIDUEYE,e.ORICORIO,e.DRAMPA,e.CORVISQUIRE,e.CORVIKNIGHT,e.SANDACONDA,e.CRAMORANT,e.FROSMOTH,e.QUAQUAVAL,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.BOMBIRDIER,e.FLAMIGO,e.DUDUNSPARCE,e.SLITHER_WING,e.IRON_JUGULIS,e.IRON_MOTH,e.ROARING_MOON,e.WALKING_WAKE,e.FEZANDIPITI,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY],[t.SNARL]:[e.EKANS,e.ARBOK,e.VULPIX,e.NINETALES,e.MEOWTH,e.PERSIAN,e.GROWLITHE,e.ARCANINE,e.MEW,e.UMBREON,e.MURKROW,e.SNUBBULL,e.GRANBULL,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.SABLEYE,e.ELECTRIKE,e.MANECTRIC,e.CARVANHA,e.SHARPEDO,e.SPOINK,e.GRUMPIG,e.SEVIPER,e.CRAWDAUNT,e.CHIMECHO,e.ABSOL,e.SHINX,e.LUXIO,e.LUXRAY,e.FLOATZEL,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.SPIRITOMB,e.DRAPION,e.WEAVILE,e.DARKRAI,e.ARCEUS,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ZORUA,e.ZOROARK,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.THUNDURUS,e.LITLEO,e.PYROAR,e.PANGORO,e.FURFROU,e.YVELTAL,e.INCINEROAR,e.ROCKRUFF,e.LYCANROC,e.GOLISOPOD,e.SILVALLY,e.DRAMPA,e.TAPU_BULU,e.SOLGALEO,e.GUZZLORD,e.NAGANADEL,e.ZERAORA,e.RILLABOOM,e.CINDERACE,e.NICKIT,e.THIEVUL,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.OBSTAGOON,e.MORPEKO,e.COPPERAJAH,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.BOMBIRDIER,e.GREAVARD,e.HOUNDSTONE,e.KINGAMBIT,e.IRON_JUGULIS,e.IRON_THORNS,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.OKIDOGI,e.ARCHALUDON,e.GOUGING_FIRE,e.RAGING_BOLT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_ARCANINE,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.BLOODMOON_URSALUNA,[e.URSHIFU,"single-strike"]],[t.PHANTOM_FORCE]:[e.HAUNTER,e.GENGAR,e.MEW,e.MISDREAVUS,e.SHEDINJA,e.SABLEYE,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.SPIRITOMB,e.DUSKNOIR,e.GIRATINA,e.ARCEUS,e.COFAGRIGUS,e.GOLETT,e.GOLURK,e.PHANTUMP,e.TREVENANT,e.GOURGEIST,e.YVELTAL,e.HOOPA,e.DECIDUEYE,e.MIMIKYU,e.DHELMISE,e.LUNALA,e.MARSHADOW,e.SINISTEA,e.POLTEAGEIST,e.RUNERIGUS,e.DRAKLOAK,e.DRAGAPULT,e.SPECTRIER,e.BASCULEGION,e.CERULEDGE,e.BRAMBLIN,e.BRAMBLEGHAST,e.GREAVARD,e.HOUNDSTONE,e.ANNIHILAPE,e.FLUTTER_MANE,e.POLTCHAGEIST,e.SINISTCHA,e.PECHARUNT,[e.CALYREX,"shadow"],e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.PETAL_BLIZZARD]:[e.VENUSAUR,e.GLOOM,e.VILEPLUME,e.MEW,e.MEGANIUM,e.BELLOSSOM,e.SUNFLORA,e.SHIFTRY,e.ROSELIA,e.TROPIUS,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.SHAYMIN,e.SNIVY,e.SERVINE,e.SERPERIOR,e.LILLIGANT,e.MARACTUS,e.SAWSBUCK,e.FLABEBE,e.FLOETTE,e.FLORGES,e.FOMANTIS,e.LURANTIS,e.STEENEE,e.TSAREENA,e.COMFEY,e.ZARUDE,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.ARBOLIVA,e.ETERNAL_FLOETTE,e.HISUI_LILLIGANT],[t.DISARMING_VOICE]:[e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.CHANSEY,e.MEW,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.MARILL,e.AZUMARILL,e.BLISSEY,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.WHISMUR,e.SKITTY,e.DELCATTY,e.ILLUMISE,e.SWABLU,e.ALTARIA,e.MILOTIC,e.CHIMECHO,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.HAPPINY,e.GALLADE,e.PANSAGE,e.PANSEAR,e.PANPOUR,e.AUDINO,e.DUCKLETT,e.SWANNA,e.MELOETTA,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SYLVEON,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.TOGEDEMARU,e.TAPU_FINI,e.MAGEARNA,e.HATENNA,e.HATTREM,e.HATTERENE,e.INDEEDEE,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.FLITTLE,e.ESPATHRA,e.FINIZEN,e.PALAFIN,e.FLUTTER_MANE,e.FEZANDIPITI,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ETERNAL_FLOETTE],[t.DRAINING_KISS]:[e.BUTTERFREE,e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DROWZEE,e.HYPNO,e.JYNX,e.MEW,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MARILL,e.AZUMARILL,e.ESPEON,e.MISDREAVUS,e.SMOOCHUM,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.AZURILL,e.MAWILE,e.ILLUMISE,e.MILOTIC,e.CHIMECHO,e.GOREBYSS,e.LUVDISC,e.LATIAS,e.CHERUBI,e.CHERRIM,e.MISMAGIUS,e.TOGEKISS,e.GALLADE,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.AUDINO,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.SYLVEON,e.DEDENNE,e.KLEFKI,e.XERNEAS,e.DIANCIE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CUTIEFLY,e.RIBOMBEE,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.MIMIKYU,e.TAPU_LELE,e.TAPU_FINI,e.MAGEARNA,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.MILCERY,e.ALCREMIE,e.INDEEDEE,e.SPECTRIER,e.CALYREX,e.ENAMORUS,e.DACHSBUN,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.FINIZEN,e.PALAFIN,e.FLUTTER_MANE,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ETERNAL_FLOETTE],[t.GRASSY_TERRAIN]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MEW,e.CHIKORITA,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SHROOMISH,e.BRELOOM,e.CACNEA,e.CACTURNE,e.CRADILY,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.TANGROWTH,e.ARCEUS,e.SNIVY,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.LILLIGANT,e.MARACTUS,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PHANTUMP,e.TREVENANT,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.FOMANTIS,e.LURANTIS,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.TAPU_BULU,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.GOSSIFLEUR,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.ZARUDE,e.CALYREX,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.BRUTE_BONNET,e.WO_CHIEN,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OGERPON,e.HYDRAPPLE,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.MISTY_TERRAIN]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MR_MIME,e.MEW,e.CLEFFA,e.IGGLYBUFF,e.MARILL,e.AZUMARILL,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.MAWILE,e.MIME_JR,e.GALLADE,e.ARCEUS,e.AUDINO,e.COTTONEE,e.WHIMSICOTT,e.ALOMOMOLA,e.FLABEBE,e.FLOETTE,e.FLORGES,[e.MEOWSTIC,"male"],e.SPRITZEE,e.AROMATISSE,e.SYLVEON,e.DEDENNE,e.CARBINK,e.KLEFKI,e.XERNEAS,e.VOLCANION,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.MIMIKYU,e.TAPU_FINI,e.MAGEARNA,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.MR_RIME,e.MILCERY,e.ALCREMIE,e.ZACIAN,e.ENAMORUS,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.FIDOUGH,e.DACHSBUN,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_VALIANT,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ETERNAL_FLOETTE,e.GALAR_RAPIDASH,e.GALAR_WEEZING,e.GALAR_MR_MIME],[t.PLAY_ROUGH]:[e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.DEWGONG,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SENTRET,e.FURRET,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SNUBBULL,e.GRANBULL,e.TEDDIURSA,e.URSARING,e.PHANPY,e.DONPHAN,e.MILTANK,e.POOCHYENA,e.MIGHTYENA,e.LINOONE,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.SKITTY,e.DELCATTY,e.MAWILE,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.SWABLU,e.ALTARIA,e.ABSOL,e.JIRACHI,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.CHERRIM,e.BUNEARY,e.LOPUNNY,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.TOGEKISS,e.UXIE,e.MESPRIT,e.AZELF,e.SHAYMIN,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.WHIMSICOTT,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.MELOETTA,e.SKIDDO,e.GOGOAT,e.ESPURR,e.MEOWSTIC,e.SWIRLIX,e.SLURPUFF,e.SKRELP,e.DRAGALGE,e.TYRUNT,e.TYRANTRUM,e.SYLVEON,e.DEDENNE,e.KLEFKI,e.XERNEAS,e.DIANCIE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.KOMALA,e.MIMIKYU,e.DRAMPA,e.TAPU_LELE,e.TAPU_FINI,e.MAGEARNA,e.ZERAORA,e.NICKIT,e.THIEVUL,e.YAMPER,e.BOLTUND,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.ALCREMIE,e.FROSMOTH,e.INDEEDEE,e.CUFANT,e.COPPERAJAH,e.ZACIAN,e.ZAMAZENTA,e.URSALUNA,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.LECHONK,e.OINKOLOGNE,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.GREAT_TUSK,e.SCREAM_TAIL,e.IRON_BUNDLE,e.IRON_HANDS,e.FEZANDIPITI,e.OGERPON,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_WEEZING,e.HISUI_TYPHLOSION],[t.CONFIDE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.BLACEPHALON,e.ZERAORA,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE],[t.MYSTICAL_FIRE]:[e.CHARIZARD,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.PONYTA,e.RAPIDASH,e.MR_MIME,e.FLAREON,e.MOLTRES,e.MEW,e.TOGEPI,e.TOGETIC,e.HO_OH,e.RALTS,e.GARDEVOIR,e.LATIAS,e.LATIOS,e.MISMAGIUS,e.MAGMORTAR,e.TOGEKISS,e.VICTINI,e.DARMANITAN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.VOLCARONA,e.RESHIRAM,e.DELPHOX,e.SYLVEON,e.PUMPKABOO,e.GOURGEIST,e.DIANCIE,e.SOLGALEO,e.BLACEPHALON,e.CENTISKORCH,e.HATENNA,e.HATTREM,e.HATTERENE,e.ALCREMIE,e.INDEEDEE,e.ETERNATUS,e.ENAMORUS,e.ARMAROUGE,e.FLUTTER_MANE,e.GALAR_PONYTA,e.GALAR_RAPIDASH],[t.EERIE_IMPULSE]:[e.PIKACHU,e.RAICHU,e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.JOLTEON,e.PORYGON,e.ZAPDOS,e.MEW,e.LANTURN,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.WOOPER,e.QUAGSIRE,e.PORYGON2,e.RAIKOU,e.ELECTRIKE,e.MANECTRIC,e.BALTOY,e.CLAYDOL,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.MAGNEZONE,e.PORYGON_Z,e.ROTOM,e.EMOLGA,e.EELEKTRIK,e.EELEKTROSS,e.STUNFISK,e.THUNDURUS,e.HELIOLISK,e.DEDENNE,e.CHARJABUG,e.VIKAVOLT,e.TOGEDEMARU,e.TAPU_KOKO,e.XURKITREE,e.MAGEARNA,e.BOLTUND,e.TOXTRICITY,e.MORPEKO,e.REGIELEKI,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.SANDY_SHOCKS,e.IRON_THORNS,e.MIRAIDON,e.RAGING_BOLT,e.ALOLA_RAICHU],[t.VENOM_DRENCH]:[e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.ZUBAT,e.GOLBAT,e.TENTACRUEL,e.KOFFING,e.WEEZING,e.MEW,e.CROBAT,e.QWILFISH,e.ROSERADE,e.STUNKY,e.SKUNTANK,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WOOBAT,e.SWOOBAT,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.TRUBBISH,e.GARBODOR,e.ACCELGOR,e.SKRELP,e.DRAGALGE,e.PHANTUMP,e.TREVENANT,e.MAREANIE,e.TOXAPEX,e.SALANDIT,e.SALAZZLE,e.PYUKUMUKU,e.NIHILEGO,e.POIPOLE,e.NAGANADEL,e.PINCURCHIN,e.ETERNATUS,e.GALAR_WEEZING,e.GALAR_SLOWKING,[e.TOXTRICITY,"low-key"]],[t.ELECTRIC_TERRAIN]:[e.PIKACHU,e.RAICHU,e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.CHANSEY,e.JOLTEON,e.ZAPDOS,e.MEW,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BLISSEY,e.RAIKOU,e.MANECTRIC,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.MAGNEZONE,e.ELECTIVIRE,e.ROTOM,e.ARCEUS,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.STUNFISK,e.THUNDURUS,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.TOGEDEMARU,e.TAPU_KOKO,e.XURKITREE,e.ZERAORA,e.MELMETAL,e.BOLTUND,e.TOXTRICITY,e.PINCURCHIN,e.MORPEKO,e.REGIELEKI,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.IRON_VALIANT,e.MIRAIDON,e.IRON_LEAVES,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.ALOLA_RAICHU,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.DAZZLING_GLEAM]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.ABRA,e.KADABRA,e.ALAKAZAM,e.TENTACOOL,e.TENTACRUEL,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.CHANSEY,e.STARYU,e.STARMIE,e.MR_MIME,e.MEW,e.CHINCHOU,e.LANTURN,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNFLORA,e.ESPEON,e.MISDREAVUS,e.GIRAFARIG,e.SNUBBULL,e.GRANBULL,e.BLISSEY,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.NOSEPASS,e.SABLEYE,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.SPOINK,e.GRUMPIG,e.SWABLU,e.ALTARIA,e.BALTOY,e.CLAYDOL,e.SHUPPET,e.BANETTE,e.CHIMECHO,e.JIRACHI,e.BUDEW,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.MISMAGIUS,e.CHINGLING,e.MIME_JR,e.FINNEON,e.LUMINEON,e.TOGEKISS,e.GALLADE,e.PROBOPASS,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.MUNNA,e.MUSHARNA,e.AUDINO,e.COTTONEE,e.WHIMSICOTT,e.SIGILYPH,e.MINCCINO,e.CINCCINO,e.FRILLISH,e.JELLICENT,e.MELOETTA,e.DELPHOX,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.SYLVEON,e.DEDENNE,e.CARBINK,e.KLEFKI,e.XERNEAS,e.DIANCIE,e.PRIMARINA,e.CUTIEFLY,e.RIBOMBEE,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.MINIOR,e.MIMIKYU,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.LUNALA,e.NIHILEGO,e.XURKITREE,e.MAGEARNA,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.MR_RIME,e.MILCERY,e.ALCREMIE,e.FROSMOTH,e.INDEEDEE,e.ZACIAN,e.ZAMAZENTA,e.ENAMORUS,e.FIDOUGH,e.DACHSBUN,e.ARBOLIVA,e.TOEDSCOOL,e.TOEDSCRUEL,e.RABSCA,e.ESPATHRA,e.GLIMMET,e.GLIMMORA,e.FARIGIRAF,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_MOTH,e.GHOLDENGO,e.IRON_VALIANT,e.MIRAIDON,e.FEZANDIPITI,e.TERAPAGOS,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ETERNAL_FLOETTE,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.HISUI_BRAVIARY],[t.INFESTATION]:[e.BUTTERFREE,e.BEEDRILL,e.EKANS,e.ARBOK,e.ODDISH,e.GLOOM,e.VILEPLUME,e.VENONAT,e.VENOMOTH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.EXEGGCUTE,e.EXEGGUTOR,e.KOFFING,e.WEEZING,e.TANGELA,e.MR_MIME,e.MEW,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.WOOPER,e.QUAGSIRE,e.SHUCKLE,e.SLUGMA,e.MAGCARGO,e.BEAUTIFLY,e.DUSTOX,e.SURSKIT,e.MASQUERAIN,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.SEVIPER,e.LILEEP,e.CRADILY,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.HUNTAIL,e.GOREBYSS,e.KRICKETUNE,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.SHELLOS,e.GASTRODON,e.MIME_JR,e.SPIRITOMB,e.SKORUPI,e.DRAPION,e.CARNIVINE,e.TANGROWTH,e.DUSKNOIR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.DURANT,e.GENESECT,e.VIVILLON,e.PANGORO,e.BINACLE,e.BARBARACLE,e.GOOMY,e.SLIGGOO,e.GOODRA,e.CUTIEFLY,e.RIBOMBEE,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.SANDYGAST,e.PALOSSAND,e.MIMIKYU,e.STAKATAKA,e.BLIPBUG,e.FROSMOTH,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.BRAMBLIN,e.BRAMBLEGHAST,e.DIPPLIN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR],[t.POWER_UP_PUNCH]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.GRIMER,e.MUK,e.GENGAR,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.GRUMPIG,e.SPINDA,e.FLYGON,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.KECLEON,e.DUSCLOPS,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.JIRACHI,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.KRICKETUNE,e.CRANIDOS,e.RAMPARDOS,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.GALLADE,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.DARKRAI,e.VICTINI,e.PIGNITE,e.EMBOAR,e.WATCHOG,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.GOTHITELLE,e.REUNICLUS,e.EELEKTROSS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.HEATMOR,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.MEOWSTIC,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.PHANTUMP,e.TREVENANT,e.HOOPA,e.CRABRAWLER,e.CRABOMINABLE,e.BUZZWOLE,e.ZERAORA,e.TOXEL,e.TOXTRICITY,e.CLOBBOPUS,e.GRAPPLOCT,e.GRIMMSNARL,e.URSALUNA,e.ANNIHILAPE,e.KINGAMBIT,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN],[t.DARKEST_LARIAT]:[e.POLIWRATH,e.MACHAMP,e.SNORLAX,e.MEW,e.SWAMPERT,e.ELECTIVIRE,e.DUSKNOIR,e.REGIGIGAS,e.KROOKODILE,e.GOLURK,e.PANGORO,e.INCINEROAR,e.BEWEAR,e.TAPU_BULU,e.BUZZWOLE,e.MELMETAL,e.RILLABOOM,e.GRIMMSNARL,e.URSHIFU,e.ZARUDE],[t.HIGH_HORSEPOWER]:[e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DUGTRIO,e.POLIWRATH,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.ONIX,e.KINGLER,e.RHYHORN,e.RHYDON,e.PINSIR,e.TAUROS,e.SNORLAX,e.MEW,e.SUDOWOODO,e.QUAGSIRE,e.GIRAFARIG,e.GLIGAR,e.STEELIX,e.HERACROSS,e.URSARING,e.SLUGMA,e.SWINUB,e.PILOSWINE,e.PHANPY,e.DONPHAN,e.MILTANK,e.PUPITAR,e.TYRANITAR,e.SWAMPERT,e.SLAKING,e.NOSEPASS,e.AGGRON,e.NUMEL,e.CAMERUPT,e.BARBOACH,e.WHISCASH,e.GROUDON,e.TORTERRA,e.HIPPOPOTAS,e.HIPPOWDON,e.RHYPERIOR,e.GLISCOR,e.MAMOSWINE,e.PROBOPASS,e.REGIGIGAS,e.PIGNITE,e.EMBOAR,e.ZEBSTRIKA,e.DRILBUR,e.EXCADRILL,e.GURDURR,e.CONKELDURR,e.KROOKODILE,e.SAWSBUCK,e.GOLURK,e.BOUFFALANT,e.TERRAKION,e.CHESNAUGHT,e.DIGGERSBY,e.GOGOAT,e.TYRANTRUM,e.AVALUGG,e.ZYGARDE,e.MUDBRAY,e.MUDSDALE,e.BEWEAR,e.TAPU_BULU,e.BUZZWOLE,e.GUZZLORD,e.STAKATAKA,e.MELMETAL,e.RILLABOOM,e.GREEDENT,e.DREDNAW,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.SANDACONDA,e.FALINKS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.GLASTRIER,e.WYRDEER,e.URSALUNA,e.OINKOLOGNE,e.KLAWF,e.REVAVROOM,e.ORTHWORM,e.CETODDLE,e.CETITAN,e.CLODSIRE,e.FARIGIRAF,e.GREAT_TUSK,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_THORNS,e.BAXCALIBUR,e.OKIDOGI,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.GALAR_PONYTA,e.GALAR_RAPIDASH,[e.CALYREX,"ice"],e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.BLOODMOON_URSALUNA],[t.SOLAR_BLADE]:[e.PONYTA,e.RAPIDASH,e.FARFETCHD,e.MEW,e.CELEBI,e.GROVYLE,e.SCEPTILE,e.NUZLEAF,e.SHIFTRY,e.TROPIUS,e.CHERRIM,e.TANGROWTH,e.LEAFEON,e.GALLADE,e.LILLIGANT,e.CRUSTLE,e.VIRIZION,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.DECIDUEYE,e.LURANTIS,e.TSAREENA,e.DHELMISE,e.KARTANA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SIRFETCHD,e.ZACIAN,e.ZARUDE,e.CALYREX,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.CERULEDGE,e.WO_CHIEN,e.IRON_LEAVES,e.OGERPON,e.IRON_BOULDER,e.IRON_CROWN,e.GALAR_FARFETCHD,e.HISUI_LILLIGANT],[t.THROAT_CHOP]:[e.BEEDRILL,e.RATICATE,e.FEAROW,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.PARASECT,e.MEOWTH,e.PERSIAN,e.PRIMEAPE,e.POLIWRATH,e.MACHAMP,e.RAPIDASH,e.FARFETCHD,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.GOLDEEN,e.SEAKING,e.PINSIR,e.TAUROS,e.MEW,e.TYPHLOSION,e.ARIADOS,e.UMBREON,e.GLIGAR,e.QWILFISH,e.HERACROSS,e.SNEASEL,e.URSARING,e.CORSOLA,e.HOUNDOOM,e.STANTLER,e.RAIKOU,e.SCEPTILE,e.MIGHTYENA,e.LINOONE,e.SHIFTRY,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.HARIYAMA,e.VIBRAVA,e.FLYGON,e.ZANGOOSE,e.SEVIPER,e.BANETTE,e.ABSOL,e.DEOXYS,e.EMPOLEON,e.KRICKETUNE,e.LUXRAY,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.DRAPION,e.TOXICROAK,e.CARNIVINE,e.WEAVILE,e.GLISCOR,e.GALLADE,e.DARKRAI,e.LIEPARD,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.GIGALITH,e.AUDINO,e.SAWK,e.LEAVANNY,e.SCOLIPEDE,e.KROOKODILE,e.MARACTUS,e.SCRAFTY,e.ZOROARK,e.GALVANTULA,e.EELEKTRIK,e.EELEKTROSS,e.BEARTIC,e.BISHARP,e.BOUFFALANT,e.HEATMOR,e.HYDREIGON,e.PANGORO,e.MALAMAR,e.HAWLUCHA,e.HOOPA,e.INCINEROAR,e.GOLISOPOD,e.PHEROMOSA,e.MARSHADOW,e.NAGANADEL,e.ZERAORA,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXTRICITY,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.FALINKS,e.PINCURCHIN,e.ZARUDE,e.GLASTRIER,e.TAROUNTULA,e.SPIDOPS,e.LOKIX,e.WIGLETT,e.WUGTRIO,e.FLAMIGO,e.CHIEN_PAO,e.TING_LU,e.ROARING_MOON,e.OGERPON,e.IRON_BOULDER,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_RAPIDASH,e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,e.GALAR_CORSOLA,e.GALAR_LINOONE,[e.URSHIFU,"single-strike"],[e.CALYREX,"ice"]],[t.POLLEN_PUFF]:[e.BUTTERFREE,e.GLOOM,e.VILEPLUME,e.MEW,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.CELEBI,e.VESPIQUEN,e.CHERUBI,e.CHERRIM,e.LEAVANNY,e.PETILIL,e.LILLIGANT,e.FOONGUS,e.AMOONGUSS,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.CUTIEFLY,e.RIBOMBEE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.COMFEY,e.GOSSIFLEUR,e.ELDEGOSS,e.CALYREX,e.MEOWSCARADA,e.ARBOLIVA,e.BRUTE_BONNET,e.WO_CHIEN,e.DIPPLIN,e.HYDRAPPLE,e.ETERNAL_FLOETTE,e.HISUI_LILLIGANT],[t.PSYCHIC_TERRAIN]:[e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.ESPEON,e.SLOWKING,e.GIRAFARIG,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.GALLADE,e.CRESSELIA,e.ARCEUS,e.MUSHARNA,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.BEHEEYEM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.MEOWSTIC,e.HOOPA,e.ORANGURU,e.BRUXISH,e.TAPU_LELE,e.DOTTLER,e.ORBEETLE,e.HATENNA,e.HATTREM,e.HATTERENE,e.MR_RIME,e.INDEEDEE,e.CALYREX,e.ARMAROUGE,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.VELUZA,e.FARIGIRAF,e.SCREAM_TAIL,e.IRON_VALIANT,e.IRON_LEAVES,e.MUNKIDORI,e.ALOLA_RAICHU,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.HISUI_BRAVIARY],[t.LUNGE]:[e.VENONAT,e.VENOMOTH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.DODUO,e.DODRIO,e.MUK,e.SCYTHER,e.MEW,e.SPINARAK,e.ARIADOS,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.YANMA,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.SCIZOR,e.HERACROSS,e.STANTLER,e.SURSKIT,e.MASQUERAIN,e.VOLBEAT,e.SPOINK,e.GRUMPIG,e.CACTURNE,e.KRICKETOT,e.KRICKETUNE,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.YANMEGA,e.GLISCOR,e.HEATRAN,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.JOLTIK,e.EELEKTRIK,e.EELEKTROSS,e.LARVESTA,e.VOLCARONA,e.HAWLUCHA,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.RIBOMBEE,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.BUZZWOLE,e.PHEROMOSA,e.SIZZLIPEDE,e.CENTISKORCH,e.FALINKS,e.SNOM,e.FROSMOTH,e.WYRDEER,e.KLEAVOR,e.TAROUNTULA,e.SPIDOPS,e.LOKIX,e.TOEDSCOOL,e.TOEDSCRUEL,e.RELLOR,e.RABSCA,e.FLAMIGO,e.TATSUGIRI,e.DUDUNSPARCE,e.SLITHER_WING,e.IRON_MOTH],[t.SPEED_SWAP]:[e.RAICHU,e.ABRA,e.KADABRA,e.ALAKAZAM,e.PORYGON,e.MEWTWO,e.MEW,e.PORYGON2,e.BRONZOR,e.BRONZONG,e.PORYGON_Z,e.VICTINI,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.CUTIEFLY,e.RIBOMBEE,e.TAPU_LELE,e.PHEROMOSA,e.MAGEARNA,e.CALYREX,e.RABSCA,e.ALOLA_RAICHU],[t.SMART_STRIKE]:[e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.RAPIDASH,e.SEEL,e.DEWGONG,e.CLOYSTER,e.RHYHORN,e.RHYDON,e.GOLDEEN,e.SEAKING,e.TAUROS,e.LAPRAS,e.MEW,e.ARIADOS,e.TOGETIC,e.FORRETRESS,e.DUNSPARCE,e.HERACROSS,e.DONPHAN,e.AGGRON,e.RHYPERIOR,e.TOGEKISS,e.SAMUROTT,e.EXCADRILL,e.SCOLIPEDE,e.SAWSBUCK,e.ESCAVALIER,e.BOUFFALANT,e.COBALION,e.TERRAKION,e.VIRIZION,e.THUNDURUS,e.KELDEO,e.XERNEAS,e.TAPU_BULU,e.TAPU_FINI,e.CELESTEELA,e.KARTANA,e.NECROZMA,e.NAGANADEL,e.DREDNAW,e.FALINKS,e.GLASTRIER,e.OVERQWIL,e.DUDUNSPARCE,e.GREAT_TUSK,e.IRON_TREADS,e.IRON_LEAVES,e.GOUGING_FIRE,e.IRON_CROWN,e.GALAR_RAPIDASH,[e.CALYREX,"ice"],e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_SAMUROTT,e.PALDEA_TAUROS],[t.BRUTAL_SWING]:[e.CHARIZARD,e.BEEDRILL,e.EKANS,e.ARBOK,e.RAICHU,e.TENTACOOL,e.TENTACRUEL,e.FARFETCHD,e.ONIX,e.KINGLER,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.RHYDON,e.SCYTHER,e.PINSIR,e.GYARADOS,e.AERODACTYL,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.SENTRET,e.FURRET,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.STEELIX,e.SCIZOR,e.HERACROSS,e.DELIBIRD,e.DONPHAN,e.HITMONTOP,e.TYRANITAR,e.SCEPTILE,e.SHIFTRY,e.AZURILL,e.MAWILE,e.AGGRON,e.FLYGON,e.SEVIPER,e.ARMALDO,e.MILOTIC,e.TROPIUS,e.ABSOL,e.SALAMENCE,e.METAGROSS,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.DRIFLOON,e.DRIFBLIM,e.LOPUNNY,e.GARCHOMP,e.DRAPION,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.GLISCOR,e.GIRATINA,e.SERPERIOR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.KROKOROK,e.KROOKODILE,e.ESCAVALIER,e.FERROTHORN,e.HAXORUS,e.MIENSHAO,e.HEATMOR,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.GRENINJA,e.DIGGERSBY,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.MALAMAR,e.BARBARACLE,e.HELIOLISK,e.TYRANTRUM,e.GOODRA,e.TREVENANT,e.GOURGEIST,e.INCINEROAR,e.CRABRAWLER,e.CRABOMINABLE,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.TURTONATOR,e.DHELMISE,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.NIHILEGO,e.XURKITREE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.STAKATAKA,e.ZERAORA,e.MELMETAL,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.SILICOBRA,e.SANDACONDA,e.SIZZLIPEDE,e.CENTISKORCH,e.GRAPPLOCT,e.HATTREM,e.HATTERENE,e.SIRFETCHD,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.DRACOVISH,e.ZACIAN,e.ETERNATUS,e.ZARUDE,e.KLEAVOR,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.OKIDOGI,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_YAMASK],[t.AURORA_VEIL]:[e.JYNX,e.ARTICUNO,e.MEW,e.DELIBIRD,e.SMOOCHUM,e.REGICE,e.ABOMASNOW,e.GLACEON,e.FROSLASS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.CRYOGONAL,e.AMAURA,e.AURORUS,e.BERGMITE,e.AVALUGG,e.EISCUE,e.ARCTOVISH,e.IRON_BUNDLE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.HISUI_AVALUGG],[t.PSYCHIC_FANGS]:[e.EKANS,e.ARBOK,e.GROWLITHE,e.ARCANINE,e.AERODACTYL,e.MEW,e.CROCONAW,e.FERALIGATR,e.ESPEON,e.GIRAFARIG,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.HOUNDOUR,e.HOUNDOOM,e.POOCHYENA,e.MIGHTYENA,e.MAWILE,e.ELECTRIKE,e.MANECTRIC,e.CARVANHA,e.SHARPEDO,e.SEVIPER,e.SALAMENCE,e.METAGROSS,e.SHINX,e.LUXIO,e.LUXRAY,e.GLISCOR,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.SWOOBAT,e.BASCULIN,e.LITLEO,e.PYROAR,e.TYRUNT,e.TYRANTRUM,e.YUNGOOS,e.GUMSHOOS,e.ROCKRUFF,e.LYCANROC,e.SILVALLY,e.BRUXISH,e.SOLGALEO,e.NECROZMA,e.GREEDENT,e.BOLTUND,e.ARROKUDA,e.BARRASKEWDA,e.MORPEKO,e.DRACOVISH,e.ARCTOVISH,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.BASCULEGION,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.GREAVARD,e.HOUNDSTONE,e.VELUZA,e.FARIGIRAF,e.SCREAM_TAIL,e.CHIEN_PAO,e.OKIDOGI,e.GOUGING_FIRE,e.HISUI_GROWLITHE,e.HISUI_ARCANINE],[t.STOMPING_TANTRUM]:[e.VENUSAUR,e.RATICATE,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDORINA,e.NIDOQUEEN,e.NIDORINO,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.DODRIO,e.ONIX,e.KINGLER,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TAUROS,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.MEGANIUM,e.TYPHLOSION,e.ARIADOS,e.AMPHAROS,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.GIRAFARIG,e.DUNSPARCE,e.STEELIX,e.GRANBULL,e.URSARING,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.PHANPY,e.DONPHAN,e.MILTANK,e.BLISSEY,e.ENTEI,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.SWAMPERT,e.LINOONE,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.DELCATTY,e.LAIRON,e.AGGRON,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.GRUMPIG,e.SPINDA,e.CACTURNE,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.ARMALDO,e.TROPIUS,e.WALREIN,e.RELICANTH,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.DEOXYS,e.TORTERRA,e.BIBAREL,e.RAMPARDOS,e.BASTIODON,e.GASTRODON,e.PURUGLY,e.BRONZOR,e.BRONZONG,e.BONSLY,e.GARCHOMP,e.MUNCHLAX,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.ABOMASNOW,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.MAMOSWINE,e.PROBOPASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.ARCEUS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.WATCHOG,e.STOUTLAND,e.BOLDORE,e.GIGALITH,e.EXCADRILL,e.AUDINO,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.CRUSTLE,e.GARBODOR,e.SAWSBUCK,e.AMOONGUSS,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.STUNFISK,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.HEATMOR,e.DURANT,e.ZWEILOUS,e.HYDREIGON,e.TERRAKION,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.DIGGERSBY,e.SKIDDO,e.GOGOAT,e.PANGORO,e.TYRUNT,e.TYRANTRUM,e.CARBINK,e.GOODRA,e.AVALUGG,e.ZYGARDE,e.VOLCANION,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.KOMALA,e.TURTONATOR,e.DRAMPA,e.KOMMO_O,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.STAKATAKA,e.RILLABOOM,e.GREEDENT,e.CHEWTLE,e.DREDNAW,e.APPLETUN,e.GRAPPLOCT,e.GRIMMSNARL,e.OBSTAGOON,e.CURSOLA,e.MR_RIME,e.STONJOURNER,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.DURALUDON,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,e.URSALUNA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.OINKOLOGNE,e.FIDOUGH,e.DACHSBUN,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.WIGLETT,e.WUGTRIO,e.ORTHWORM,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.DONDOZO,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.BAXCALIBUR,e.TING_LU,e.ROARING_MOON,e.KORAIDON,e.OKIDOGI,e.OGERPON,e.GOUGING_FIRE,e.RAGING_BOLT,e.ALOLA_RATICATE,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_MR_MIME,e.GALAR_ZAPDOS,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_LINOONE,e.GALAR_STUNFISK,[e.CALYREX,"ice","shadow"],e.HISUI_TYPHLOSION,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.LIQUIDATION]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.HORSEA,e.SEADRA,e.LAPRAS,e.VAPOREON,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.CORSOLA,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.SUICUNE,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.CARVANHA,e.SHARPEDO,e.WAILORD,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.ARMALDO,e.WALREIN,e.RELICANTH,e.LUVDISC,e.LATIAS,e.LATIOS,e.KYOGRE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.GARCHOMP,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.SEISMITOAD,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.ALOMOMOLA,e.EELEKTROSS,e.CUBCHOO,e.BEARTIC,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.VOLCANION,e.PRIMARINA,e.CRABRAWLER,e.CRABOMINABLE,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.GOLISOPOD,e.BRUXISH,e.DHELMISE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.CLOBBOPUS,e.GRAPPLOCT,e.CURSOLA,e.PINCURCHIN,e.EISCUE,e.DRACOVISH,e.ARCTOVISH,e.BASCULEGION,e.OVERQWIL,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.CLODSIRE,e.IRON_VALIANT,e.WALKING_WAKE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,[e.URSHIFU,"rapid-strike"],e.HISUI_QWILFISH,e.HISUI_SAMUROTT,[e.PALDEA_TAUROS,"aqua"],e.PALDEA_WOOPER],[t.BODY_PRESS]:[e.BLASTOISE,e.NIDOQUEEN,e.NIDOKING,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.ONIX,e.HYPNO,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.LAPRAS,e.SNORLAX,e.DRAGONITE,e.MEW,e.MEGANIUM,e.SUDOWOODO,e.QUAGSIRE,e.FORRETRESS,e.STEELIX,e.MANTINE,e.SKARMORY,e.DONPHAN,e.MILTANK,e.TYRANITAR,e.SWAMPERT,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.ARON,e.LAIRON,e.AGGRON,e.SWALOT,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.GRUMPIG,e.CLAYDOL,e.TROPIUS,e.WALREIN,e.RELICANTH,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.GROUDON,e.TORTERRA,e.RAMPARDOS,e.BASTIODON,e.BRONZONG,e.HIPPOPOTAS,e.HIPPOWDON,e.ABOMASNOW,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.MAMOSWINE,e.PROBOPASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.ARCEUS,e.EMBOAR,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DARMANITAN,e.CRUSTLE,e.COFAGRIGUS,e.GARBODOR,e.FERROTHORN,e.EELEKTROSS,e.CUBCHOO,e.BEARTIC,e.GOLURK,e.COBALION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.CHESNAUGHT,e.HAWLUCHA,e.CARBINK,e.GOODRA,e.AVALUGG,e.DIANCIE,e.VOLCANION,e.CRABOMINABLE,e.MUDSDALE,e.BEWEAR,e.TURTONATOR,e.DHELMISE,e.KOMMO_O,e.GUZZLORD,e.STAKATAKA,e.MELMETAL,e.RILLABOOM,e.GREEDENT,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.DUBWOOL,e.DREDNAW,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.SANDACONDA,e.GRIMMSNARL,e.OBSTAGOON,e.RUNERIGUS,e.FALINKS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.ZAMAZENTA,e.URSHIFU,e.GLASTRIER,[e.CALYREX,"","ice"],e.URSALUNA,e.OINKOLOGNE,e.PAWMOT,e.DACHSBUN,e.NACLSTACK,e.GARGANACL,e.ORTHWORM,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.DONDOZO,e.CLODSIRE,e.DUDUNSPARCE,e.GREAT_TUSK,e.BRUTE_BONNET,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.BAXCALIBUR,e.WO_CHIEN,e.TING_LU,e.ROARING_MOON,e.KORAIDON,e.OKIDOGI,e.ARCHALUDON,e.HYDRAPPLE,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_GOLEM,e.GALAR_SLOWBRO,e.GALAR_LINOONE,e.GALAR_DARMANITAN,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.BREAKING_SWIPE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.ARBOK,e.ONIX,e.RHYDON,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.AMPHAROS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.KINGDRA,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.FLYGON,e.ALTARIA,e.SEVIPER,e.MILOTIC,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.RAMPARDOS,e.GABITE,e.GARCHOMP,e.RHYPERIOR,e.GLISCOR,e.DIALGA,e.PALKIA,e.GIRATINA,e.SERPERIOR,e.KROKOROK,e.KROOKODILE,e.AXEW,e.FRAXURE,e.HAXORUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.HELIOLISK,e.TYRANTRUM,e.GOODRA,e.NOIVERN,e.ZYGARDE,e.SALAZZLE,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.NECROZMA,e.NAGANADEL,e.INTELEON,e.DRACOZOLT,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.REGIDRAGO,e.CYCLIZAR,e.DUDUNSPARCE,e.IRON_THORNS,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.WALKING_WAKE,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.ALOLA_EXEGGUTOR,e.HISUI_GOODRA],[t.STEEL_BEAM]:[e.MAGNEMITE,e.MAGNETON,e.MEW,e.FORRETRESS,e.STEELIX,e.SCIZOR,e.SKARMORY,e.NOSEPASS,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.BELDUM,e.METANG,e.METAGROSS,e.REGISTEEL,e.JIRACHI,e.EMPOLEON,e.BRONZOR,e.BRONZONG,e.LUCARIO,e.MAGNEZONE,e.PROBOPASS,e.DIALGA,e.HEATRAN,e.ARCEUS,e.EXCADRILL,e.ESCAVALIER,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.PAWNIARD,e.BISHARP,e.DURANT,e.COBALION,e.GENESECT,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.KLEFKI,e.SILVALLY,e.TOGEDEMARU,e.SOLGALEO,e.CELESTEELA,e.KARTANA,e.MAGEARNA,e.STAKATAKA,e.MELTAN,e.MELMETAL,e.CORVIKNIGHT,e.PERRSERKER,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.VAROOM,e.REVAVROOM,e.ORTHWORM,e.KINGAMBIT,e.IRON_TREADS,e.GHOLDENGO,e.ARCHALUDON,e.IRON_CROWN,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.GALAR_MEOWTH,e.GALAR_STUNFISK,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.EXPANDING_FORCE]:[e.WIGGLYTUFF,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.EXEGGUTOR,e.STARMIE,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.NATU,e.XATU,e.ESPEON,e.SLOWKING,e.GIRAFARIG,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.BALTOY,e.CLAYDOL,e.CHIMECHO,e.METANG,e.METAGROSS,e.JIRACHI,e.DEOXYS,e.BRONZOR,e.BRONZONG,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.VICTINI,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.DARMANITAN,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.DELPHOX,e.ESPURR,e.MEOWSTIC,e.INKAY,e.MALAMAR,e.HOOPA,e.ORANGURU,e.BRUXISH,e.SOLGALEO,e.LUNALA,e.NECROZMA,e.BLACEPHALON,e.DOTTLER,e.ORBEETLE,e.HATENNA,e.HATTREM,e.HATTERENE,e.MR_RIME,e.INDEEDEE,e.CALYREX,e.WYRDEER,e.ARMAROUGE,e.RABSCA,e.ESPATHRA,e.VELUZA,e.FARIGIRAF,e.SCREAM_TAIL,e.IRON_VALIANT,e.IRON_CROWN,e.ALOLA_RAICHU,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.HISUI_BRAVIARY],[t.STEEL_ROLLER]:[e.SANDSHREW,e.SANDSLASH,e.JIGGLYPUFF,e.WIGGLYTUFF,e.CLOYSTER,e.LICKITUNG,e.SNORLAX,e.MEW,e.MARILL,e.AZUMARILL,e.STEELIX,e.QWILFISH,e.SHUCKLE,e.MILTANK,e.ARON,e.LAIRON,e.AGGRON,e.WAILMER,e.WAILORD,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.METANG,e.METAGROSS,e.REGISTEEL,e.BRONZOR,e.BRONZONG,e.MAGNEZONE,e.LICKILICKY,e.HEATRAN,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.TOGEDEMARU,e.DHELMISE,e.SOLGALEO,e.CELESTEELA,e.GUZZLORD,e.MAGEARNA,e.STAKATAKA,e.MELMETAL,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.IRON_TREADS,e.ARCHALUDON,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH],[t.SCALE_SHOT]:[e.CHARIZARD,e.EKANS,e.ARBOK,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.GYARADOS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.DUNSPARCE,e.GLIGAR,e.QWILFISH,e.KINGDRA,e.LUGIA,e.SCEPTILE,e.CARVANHA,e.SHARPEDO,e.FLYGON,e.FEEBAS,e.MILOTIC,e.RELICANTH,e.LUVDISC,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.GIBLE,e.GABITE,e.GARCHOMP,e.DIALGA,e.PALKIA,e.BASCULIN,e.KROKOROK,e.KROOKODILE,e.ALOMOMOLA,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.SKRELP,e.DRAGALGE,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.ZYGARDE,e.WISHIWASHI,e.SALANDIT,e.SALAZZLE,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.NAGANADEL,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.SILICOBRA,e.SANDACONDA,e.ARROKUDA,e.BARRASKEWDA,e.REGIDRAGO,e.BASCULEGION,e.OVERQWIL,e.CYCLIZAR,e.VELUZA,e.DUDUNSPARCE,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.GOUGING_FIRE,e.HISUI_QWILFISH],[t.METEOR_BEAM]:[e.CLEFAIRY,e.CLEFABLE,e.ONIX,e.RHYDON,e.STARMIE,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.MEW,e.AMPHAROS,e.SUDOWOODO,e.STEELIX,e.SHUCKLE,e.CORSOLA,e.NOSEPASS,e.AGGRON,e.LUNATONE,e.SOLROCK,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.RELICANTH,e.METANG,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.BASTIODON,e.BRONZONG,e.RHYPERIOR,e.PROBOPASS,e.ARCEUS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.CRUSTLE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.ELGYEM,e.BEHEEYEM,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.CARBINK,e.DIANCIE,e.MINIOR,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.CELESTEELA,e.NECROZMA,e.STAKATAKA,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.CURSOLA,e.STONJOURNER,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.ETERNATUS,e.NACLI,e.NACLSTACK,e.GARGANACL,e.ARMAROUGE,e.KLAWF,e.GLIMMET,e.GLIMMORA,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.KORAIDON,e.ARCHALUDON,e.IRON_BOULDER,e.TERAPAGOS,e.ALOLA_GOLEM,e.GALAR_CORSOLA,e.HISUI_AVALUGG],[t.MISTY_EXPLOSION]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEW,e.MARILL,e.AZUMARILL,e.GARDEVOIR,e.MUSHARNA,e.FLORGES,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.SYLVEON,e.CARBINK,e.XERNEAS,e.DIANCIE,e.PRIMARINA,e.MAGEARNA,e.HATTERENE,e.ALCREMIE,e.ENAMORUS,e.SCREAM_TAIL,e.GALAR_WEEZING],[t.GRASSY_GLIDE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.ODDISH,e.GLOOM,e.VILEPLUME,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MEW,e.BELLOSSOM,e.SUNFLORA,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.ROSELIA,e.CACNEA,e.CACTURNE,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.LEAFEON,e.SHAYMIN,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.DEERLING,e.SAWSBUCK,e.VIRIZION,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.SKIDDO,e.GOGOAT,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.FOMANTIS,e.LURANTIS,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.DHELMISE,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.APPLIN,e.FLAPPLE,e.APPLETUN,e.SIRFETCHD,e.ZARUDE,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.DIPPLIN,e.OGERPON,e.HYDRAPPLE,e.ALOLA_EXEGGUTOR,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.RISING_VOLTAGE]:[e.PIKACHU,e.RAICHU,e.MAGNEMITE,e.MAGNETON,e.ELECTABUZZ,e.JOLTEON,e.ZAPDOS,e.MEW,e.CHINCHOU,e.LANTURN,e.RAIKOU,e.ELECTRIKE,e.MANECTRIC,e.SHINX,e.LUXIO,e.LUXRAY,e.MAGNEZONE,e.ELECTIVIRE,e.ROTOM,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.KLINK,e.KLANG,e.KLINKLANG,e.THUNDURUS,e.ZEKROM,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.TOGEDEMARU,e.XURKITREE,e.ZERAORA,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.PINCURCHIN,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.REGIELEKI,e.RAGING_BOLT,e.ALOLA_RAICHU],[t.TERRAIN_PULSE]:[e.VENUSAUR,e.BLASTOISE,e.EXEGGUTOR,e.LICKITUNG,e.KANGASKHAN,e.SNORLAX,e.MEW,e.DUNSPARCE,e.EXPLOUD,e.LUCARIO,e.LICKILICKY,e.REGIGIGAS,e.CLAUNCHER,e.CLAWITZER,e.CARBINK,e.XERNEAS,e.DIANCIE,e.ORANGURU,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.INDEEDEE,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.DUDUNSPARCE,e.ALOLA_EXEGGUTOR,e.GALAR_STUNFISK],[t.SKITTER_SMACK]:[e.EKANS,e.ARBOK,e.VENONAT,e.VENOMOTH,e.PERSIAN,e.TENTACRUEL,e.GASTLY,e.HAUNTER,e.GENGAR,e.SCYTHER,e.MEW,e.SPINARAK,e.ARIADOS,e.YANMA,e.DUNSPARCE,e.GLIGAR,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.OCTILLERY,e.SURSKIT,e.MASQUERAIN,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.VOLBEAT,e.ILLUMISE,e.CACNEA,e.CACTURNE,e.SEVIPER,e.MILOTIC,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.KRICKETOT,e.KRICKETUNE,e.COMBEE,e.VESPIQUEN,e.SHELLOS,e.GASTRODON,e.SKORUPI,e.DRAPION,e.YANMEGA,e.GLISCOR,e.DUSKNOIR,e.GIRATINA,e.LIEPARD,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.ZORUA,e.ZOROARK,e.JOLTIK,e.GALVANTULA,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.SHELMET,e.ACCELGOR,e.DURANT,e.LARVESTA,e.VOLCARONA,e.VIVILLON,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ZYGARDE,e.HOOPA,e.DECIDUEYE,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.WIMPOD,e.GOLISOPOD,e.PHEROMOSA,e.MARSHADOW,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.SILICOBRA,e.SANDACONDA,e.SIZZLIPEDE,e.CENTISKORCH,e.GRAPPLOCT,e.SNOM,e.FROSMOTH,e.KLEAVOR,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.SHROODLE,e.GRAFAIAI,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.RELLOR,e.RABSCA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.DUDUNSPARCE,e.SLITHER_WING,e.ALOLA_PERSIAN,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.BURNING_JEALOUSY]:[e.VULPIX,e.NINETALES,e.MAGMAR,e.FLAREON,e.MOLTRES,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.MISDREAVUS,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.TORKOAL,e.BANETTE,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.MISMAGIUS,e.SKUNTANK,e.SPIRITOMB,e.MAGMORTAR,e.HEATRAN,e.LIEPARD,e.DARMANITAN,e.ZORUA,e.ZOROARK,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.HEATMOR,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.PYROAR,e.TREVENANT,e.INCINEROAR,e.SALANDIT,e.SALAZZLE,e.TURTONATOR,e.MIMIKYU,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.THIEVUL,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.CURSOLA,e.SCOVILLAIN,e.CHI_YU,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK,e.GALAR_DARMANITAN,e.HISUI_TYPHLOSION,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.LASH_OUT]:[e.EKANS,e.ARBOK,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.MUK,e.TAUROS,e.GYARADOS,e.MEWTWO,e.MEW,e.UMBREON,e.MURKROW,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.VIGOROTH,e.SLAKING,e.HARIYAMA,e.SABLEYE,e.NUMEL,e.CAMERUPT,e.CACTURNE,e.SEVIPER,e.CRAWDAUNT,e.SHUPPET,e.BANETTE,e.MONFERNO,e.INFERNAPE,e.EMPOLEON,e.MISMAGIUS,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.SPIRITOMB,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.DARKRAI,e.PURRLOIN,e.LIEPARD,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.LAMPENT,e.CHANDELURE,e.STUNFISK,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.VULLABY,e.MANDIBUZZ,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.PANCHAM,e.PANGORO,e.INKAY,e.MALAMAR,e.TYRUNT,e.TYRANTRUM,e.PHANTUMP,e.TREVENANT,e.YVELTAL,e.HOOPA,e.INCINEROAR,e.MUDSDALE,e.TURTONATOR,e.DRAMPA,e.GUZZLORD,e.NICKIT,e.THIEVUL,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.MORPEKO,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,e.SNEASLER,e.OVERQWIL,e.MEOWSCARADA,e.OINKOLOGNE,e.LOKIX,e.SQUAWKABILLY,e.MASCHIFF,e.MABOSSTIFF,e.SCOVILLAIN,e.BOMBIRDIER,e.REVAVROOM,e.ANNIHILAPE,e.KINGAMBIT,e.BRUTE_BONNET,e.IRON_JUGULIS,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.PECHARUNT,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_MUK,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_MOLTRES,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARMANITAN,e.GALAR_STUNFISK,[e.URSHIFU,"single-strike"],[e.CALYREX,"ice","shadow"],e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_GOODRA,e.PALDEA_TAUROS],[t.POLTERGEIST]:[e.GASTLY,e.HAUNTER,e.GENGAR,e.MEW,e.MISDREAVUS,e.SHEDINJA,e.SABLEYE,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.MISMAGIUS,e.SPIRITOMB,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.GIRATINA,e.YAMASK,e.COFAGRIGUS,e.FRILLISH,e.JELLICENT,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.GOLETT,e.GOLURK,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.DECIDUEYE,e.SANDYGAST,e.PALOSSAND,e.DHELMISE,e.LUNALA,e.MARSHADOW,e.SINISTEA,e.POLTEAGEIST,e.CURSOLA,e.RUNERIGUS,e.SPECTRIER,e.SKELEDIRGE,e.CERULEDGE,e.BRAMBLIN,e.BRAMBLEGHAST,e.RABSCA,e.GREAVARD,e.HOUNDSTONE,e.FLUTTER_MANE,e.GHOLDENGO,e.POLTCHAGEIST,e.SINISTCHA,e.MUNKIDORI,e.PECHARUNT,e.ALOLA_MAROWAK,e.GALAR_YAMASK,e.HISUI_TYPHLOSION,e.HISUI_ZOROARK],[t.CORROSIVE_GAS]:[e.VILEPLUME,e.TENTACRUEL,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.MEW,e.STUNKY,e.SKUNTANK,e.TOXICROAK,e.TRUBBISH,e.GARBODOR,e.SALAZZLE,e.NIHILEGO,e.GUZZLORD,e.GALAR_WEEZING],[t.COACHING]:[e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.HITMONLEE,e.HITMONCHAN,e.MEW,e.HERACROSS,e.HITMONTOP,e.COMBUSKEN,e.BLAZIKEN,e.MAKUHITA,e.HARIYAMA,e.INFERNAPE,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.GALLADE,e.PIGNITE,e.EMBOAR,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.SCRAGGY,e.SCRAFTY,e.MIENFOO,e.MIENSHAO,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.MELOETTA,e.CHESNAUGHT,e.PANCHAM,e.PANGORO,e.HAWLUCHA,e.CRABRAWLER,e.CRABOMINABLE,e.STUFFUL,e.BEWEAR,e.PASSIMIAN,e.HAKAMO_O,e.KOMMO_O,e.BUZZWOLE,e.PHEROMOSA,e.MARSHADOW,e.ZERAORA,e.CINDERACE,e.CLOBBOPUS,e.GRAPPLOCT,e.SIRFETCHD,e.FALINKS,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.SNEASLER,e.QUAQUAVAL,e.PAWMO,e.PAWMOT,e.ANNIHILAPE,e.IRON_VALIANT,e.IRON_LEAVES,e.GALAR_ZAPDOS,e.HISUI_SNEASEL,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.FLIP_TURN]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.TENTACOOL,e.TENTACRUEL,e.SEEL,e.DEWGONG,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.VAPOREON,e.KABUTOPS,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.QWILFISH,e.KINGDRA,e.SWAMPERT,e.CARVANHA,e.SHARPEDO,e.MILOTIC,e.LUVDISC,e.LATIOS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BUIZEL,e.FLOATZEL,e.FINNEON,e.LUMINEON,e.PHIONE,e.MANAPHY,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.BASCULIN,e.SWANNA,e.ALOMOMOLA,e.KELDEO,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.BRUXISH,e.INTELEON,e.ARROKUDA,e.BARRASKEWDA,e.EISCUE,e.BASCULEGION,e.QUAXWELL,e.QUAQUAVAL,e.PALAFIN,e.VELUZA,e.IRON_BUNDLE,e.WALKING_WAKE,e.HISUI_SAMUROTT],[t.TRIPLE_AXEL]:[e.SEEL,e.DEWGONG,e.JYNX,e.ARTICUNO,e.MEW,e.BELLOSSOM,e.SNEASEL,e.DELIBIRD,e.HITMONTOP,e.KIRLIA,e.GARDEVOIR,e.MILOTIC,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.WEAVILE,e.GLACEON,e.GALLADE,e.FROSLASS,e.LEAVANNY,e.MINCCINO,e.CINCCINO,e.CRYOGONAL,e.MIENSHAO,e.MELOETTA,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.STEENEE,e.TSAREENA,e.PHEROMOSA,e.MR_RIME,e.FROSMOTH,e.MEOWSCARADA,e.QUAXWELL,e.QUAQUAVAL,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_NINETALES,e.GALAR_MR_MIME,e.HISUI_LILLIGANT],[t.DUAL_WINGBEAT]:[e.CHARIZARD,e.BUTTERFREE,e.CLEFAIRY,e.CLEFABLE,e.ZUBAT,e.GOLBAT,e.FARFETCHD,e.SCYTHER,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.TOGETIC,e.NATU,e.XATU,e.MURKROW,e.DUNSPARCE,e.GLIGAR,e.SCIZOR,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.LUGIA,e.HO_OH,e.CELEBI,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.NINJASK,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.TROPIUS,e.SALAMENCE,e.LATIAS,e.LATIOS,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.COMBEE,e.VESPIQUEN,e.HONCHKROW,e.TOGEKISS,e.YANMEGA,e.GLISCOR,e.PALKIA,e.GIRATINA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.EMOLGA,e.DRUDDIGON,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.VOLCARONA,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.VIKAVOLT,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.LUNALA,e.BUZZWOLE,e.NAGANADEL,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.FLAPPLE,e.CRAMORANT,e.SIRFETCHD,e.FROSMOTH,e.KLEAVOR,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.BOMBIRDIER,e.FLAMIGO,e.DUDUNSPARCE,e.SLITHER_WING,e.IRON_JUGULIS,e.KORAIDON,e.FEZANDIPITI,e.GALAR_FARFETCHD,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.SCORCHING_SANDS]:[e.CHARIZARD,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.NINETALES,e.DIGLETT,e.DUGTRIO,e.ARCANINE,e.RAPIDASH,e.ONIX,e.CUBONE,e.MAROWAK,e.RHYHORN,e.RHYDON,e.MAGMAR,e.FLAREON,e.MOLTRES,e.MEW,e.TYPHLOSION,e.STEELIX,e.MAGCARGO,e.ENTEI,e.HO_OH,e.BLAZIKEN,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.BALTOY,e.CLAYDOL,e.GROUDON,e.INFERNAPE,e.TORTERRA,e.SHIELDON,e.BASTIODON,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOPOTAS,e.HIPPOWDON,e.RHYPERIOR,e.MAGMORTAR,e.HEATRAN,e.ARCEUS,e.VICTINI,e.DRILBUR,e.EXCADRILL,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.GOLETT,e.GOLURK,e.HEATMOR,e.RESHIRAM,e.LANDORUS,e.DELPHOX,e.DIGGERSBY,e.ZYGARDE,e.DIANCIE,e.VOLCANION,e.INCINEROAR,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.TURTONATOR,e.CINDERACE,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.SIZZLIPEDE,e.CENTISKORCH,e.SKELEDIRGE,e.ARMAROUGE,e.SANDY_SHOCKS,e.GOUGING_FIRE,e.TERAPAGOS,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MAROWAK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE],[t.TERA_BLAST]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.BELDUM,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETOT,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BURMY,e.WORMADAM,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.TYNAMO,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.SCATTERBUG,e.SPEWPA,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CHEWTLE,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLIN,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.PECHARUNT,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.ICE_SPINNER]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.ARTICUNO,e.DRAGONITE,e.MEW,e.MARILL,e.AZUMARILL,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.DELIBIRD,e.DONPHAN,e.HITMONTOP,e.LUDICOLO,e.SNORUNT,e.GLALIE,e.REGICE,e.REGISTEEL,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BUIZEL,e.FLOATZEL,e.BRONZOR,e.BRONZONG,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.FROSLASS,e.CINCCINO,e.CRYOGONAL,e.MIENSHAO,e.BERGMITE,e.AVALUGG,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CRABOMINABLE,e.MAREANIE,e.TOXAPEX,e.KOMALA,e.MAGEARNA,e.DREDNAW,e.FROSMOTH,e.EISCUE,e.QUAQUAVAL,e.CYCLIZAR,e.CETODDLE,e.CETITAN,e.DUDUNSPARCE,e.GREAT_TUSK,e.IRON_TREADS,e.IRON_BUNDLE,e.CHIEN_PAO,e.TERAPAGOS,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,[e.URSHIFU,"rapid-strike"],e.HISUI_LILLIGANT,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG],[t.SNOWSCAPE]:[e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.CHANSEY,e.LAPRAS,e.ARTICUNO,e.DRAGONITE,e.MEW,e.MARILL,e.AZUMARILL,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.MISDREAVUS,e.SNEASEL,e.SWINUB,e.PILOSWINE,e.DELIBIRD,e.BLISSEY,e.SUICUNE,e.WINGULL,e.PELIPPER,e.SPOINK,e.GRUMPIG,e.ALTARIA,e.SNORUNT,e.GLALIE,e.LUVDISC,e.REGICE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.SHELLOS,e.GASTRODON,e.MISMAGIUS,e.HAPPINY,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.GLACEON,e.MAMOSWINE,e.FROSLASS,e.PALKIA,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.BASCULIN,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.TORNADUS,e.KYUREM,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.SKRELP,e.DRAGALGE,e.BERGMITE,e.AVALUGG,e.DIANCIE,e.PRIMARINA,e.CRABOMINABLE,e.MAGEARNA,e.INTELEON,e.FROSMOTH,e.EISCUE,e.GLASTRIER,e.BASCULEGION,e.CETODDLE,e.CETITAN,e.VELUZA,e.SCREAM_TAIL,e.IRON_BUNDLE,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_ARTICUNO,[e.CALYREX,"ice"],e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_AVALUGG],[t.POUNCE]:[e.VENONAT,e.VENOMOTH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.SCYTHER,e.MEW,e.SPINARAK,e.ARIADOS,e.YANMA,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.SCIZOR,e.HERACROSS,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKING,e.VOLBEAT,e.ILLUMISE,e.SEVIPER,e.SHUPPET,e.BANETTE,e.KRICKETUNE,e.VESPIQUEN,e.YANMEGA,e.HEATRAN,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.LARVESTA,e.VOLCARONA,e.SCATTERBUG,e.SPEWPA,e.VIVILLON,e.CLAUNCHER,e.CLAWITZER,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CUTIEFLY,e.RIBOMBEE,e.MAREANIE,e.TOXAPEX,e.MIMIKYU,e.APPLIN,e.FLAPPLE,e.APPLETUN,e.CRAMORANT,e.SNOM,e.FROSMOTH,e.DRAKLOAK,e.DRAGAPULT,e.KLEAVOR,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.SQUAWKABILLY,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.FLAMIGO,e.DUDUNSPARCE,e.IRON_MOTH,e.DIPPLIN,e.HYDRAPPLE],[t.TRAILBLAZE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.DODRIO,e.DROWZEE,e.HYPNO,e.HITMONCHAN,e.CHANSEY,e.SCYTHER,e.TAUROS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.SPINARAK,e.ARIADOS,e.PICHU,e.IGGLYBUFF,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.GIRAFARIG,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.DELIBIRD,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.STANTLER,e.ELEKID,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.POOCHYENA,e.MIGHTYENA,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.VIGOROTH,e.SLAKING,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.NUMEL,e.CAMERUPT,e.SPOINK,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.SEVIPER,e.BANETTE,e.TROPIUS,e.SNORUNT,e.GLALIE,e.METANG,e.METAGROSS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.PACHIRISU,e.AMBIPOM,e.STUNKY,e.SKUNTANK,e.BONSLY,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.ELECTIVIRE,e.LEAFEON,e.GLACEON,e.MAMOSWINE,e.FROSLASS,e.SHAYMIN,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.BLITZLE,e.ZEBSTRIKA,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.PETILIL,e.LILLIGANT,e.SCRAGGY,e.SCRAFTY,e.DUCKLETT,e.MINCCINO,e.CINCCINO,e.SWANNA,e.DEERLING,e.SAWSBUCK,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.LARVESTA,e.VOLCARONA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.MEOWSTIC,e.MALAMAR,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.PHANTUMP,e.TREVENANT,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.YUNGOOS,e.GUMSHOOS,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.KOMALA,e.MIMIKYU,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SKWOVET,e.GREEDENT,e.FLAPPLE,e.APPLETUN,e.TOXTRICITY,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.FALINKS,e.ZACIAN,e.ZAMAZENTA,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.CYCLIZAR,e.CLODSIRE,e.FARIGIRAF,e.BRUTE_BONNET,e.SLITHER_WING,e.WO_CHIEN,e.IRON_LEAVES,e.MUNKIDORI,e.OGERPON,e.ALOLA_RAICHU,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_ZAPDOS,[e.CALYREX,"ice"],e.HISUI_SNEASEL,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.CHILLING_WATER]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.CHANSEY,e.HORSEA,e.SEADRA,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.CLEFFA,e.MARILL,e.AZUMARILL,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.DUNSPARCE,e.QWILFISH,e.DELIBIRD,e.KINGDRA,e.BLISSEY,e.SUICUNE,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.VOLBEAT,e.SPOINK,e.GRUMPIG,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.SNORUNT,e.GLALIE,e.LATIAS,e.LATIOS,e.KYOGRE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.HONCHKROW,e.MUNCHLAX,e.CROAGUNK,e.TOXICROAK,e.FINNEON,e.LUMINEON,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.GLACEON,e.FROSLASS,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.BASCULIN,e.MINCCINO,e.CINCCINO,e.DUCKLETT,e.SWANNA,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.TORNADUS,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.GOOMY,e.SLIGGOO,e.GOODRA,e.BERGMITE,e.AVALUGG,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.BRUXISH,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.PINCURCHIN,e.EISCUE,e.BASCULEGION,e.OVERQWIL,e.MEOWSCARADA,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.MAUSHOLD,e.TADBULB,e.BELLIBOLT,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.CLODSIRE,e.DUDUNSPARCE,e.IRON_BUNDLE,e.WALKING_WAKE,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ETERNAL_FLOETTE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,[e.URSHIFU,"rapid-strike"],e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,[e.PALDEA_TAUROS,"aqua"],e.PALDEA_WOOPER],[t.HARD_PRESS]:[e.GRAVELER,e.GOLEM,e.SNORLAX,e.MEW,e.FORRETRESS,e.SCIZOR,e.TYRANITAR,e.SWAMPERT,e.SLAKING,e.CRAWDAUNT,e.METANG,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.TORTERRA,e.SHIELDON,e.BASTIODON,e.BRONZONG,e.HIPPOWDON,e.ABOMASNOW,e.MAGNEZONE,e.MAMOSWINE,e.PROBOPASS,e.DUSKNOIR,e.HEATRAN,e.REGIGIGAS,e.EMBOAR,e.CONKELDURR,e.BEARTIC,e.GOLURK,e.CRABOMINABLE,e.STONJOURNER,e.COPPERAJAH,e.URSALUNA,e.GARGANACL,e.TINKATON,e.PALAFIN,e.REVAVROOM,e.CETITAN,e.IRON_TREADS,e.IRON_HANDS,e.OKIDOGI,e.ARCHALUDON,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.HISUI_AVALUGG,e.BLOODMOON_URSALUNA],[t.DRAGON_CHEER]:[e.CHARIZARD,e.GYARADOS,e.LAPRAS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.AMPHAROS,e.SCEPTILE,e.FLYGON,e.SWABLU,e.ALTARIA,e.MILOTIC,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.CRANIDOS,e.RAMPARDOS,e.GIBLE,e.GABITE,e.GARCHOMP,e.AXEW,e.FRAXURE,e.HAXORUS,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.GOODRA,e.NOIVERN,e.SALAZZLE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.REGIDRAGO,e.CYCLIZAR,e.TATSUGIRI,e.IRON_JUGULIS,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.DIPPLIN,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.ALOLA_EXEGGUTOR,e.HISUI_GOODRA],[t.ALLURING_VOICE]:[e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DEWGONG,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.MEW,e.CLEFFA,e.IGGLYBUFF,e.MARILL,e.AZUMARILL,e.ESPEON,e.UMBREON,e.BLISSEY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.AZURILL,e.PLUSLE,e.MINUN,e.FLYGON,e.ALTARIA,e.MILOTIC,e.LATIAS,e.PACHIRISU,e.FINNEON,e.LUMINEON,e.LEAFEON,e.GLACEON,e.GALLADE,e.PHIONE,e.MANAPHY,e.LILLIGANT,e.MINCCINO,e.CINCCINO,e.SWANNA,e.ALOMOMOLA,e.MELOETTA,e.FLABEBE,e.FLOETTE,e.FLORGES,e.MEOWSTIC,e.SYLVEON,e.PRIMARINA,e.ORICORIO,e.RIBOMBEE,e.COMFEY,e.ALCREMIE,e.ENAMORUS,e.SKELEDIRGE,e.FIDOUGH,e.DACHSBUN,e.ARBOLIVA,e.FEZANDIPITI,e.ALOLA_RAICHU,e.ETERNAL_FLOETTE,[e.INDEEDEE,"female"]],[t.TEMPER_FLARE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.GROWLITHE,e.ARCANINE,e.MAGMAR,e.GYARADOS,e.FLAREON,e.MOLTRES,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SNUBBULL,e.GRANBULL,e.SLUGMA,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SHELGON,e.SALAMENCE,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.DRIFLOON,e.DRIFBLIM,e.STUNKY,e.SKUNTANK,e.RHYPERIOR,e.MAGMORTAR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.FLETCHINDER,e.TALONFLAME,e.PYROAR,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.TOUCANNON,e.SALANDIT,e.SALAZZLE,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.KLAWF,e.SCOVILLAIN,e.REVAVROOM,e.CYCLIZAR,e.GREAT_TUSK,e.SLITHER_WING,e.CHI_YU,e.KORAIDON,e.GOUGING_FIRE,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,[e.PALDEA_TAUROS,"blaze"]],[t.SUPERCELL_SLAM]:[e.ELECTRODE,e.RHYHORN,e.RHYDON,e.ELECTABUZZ,e.SNORLAX,e.ZAPDOS,e.MEW,e.AMPHAROS,e.ELEKID,e.RAIKOU,e.MANECTRIC,e.LUXRAY,e.RAMPARDOS,e.MAGNEZONE,e.RHYPERIOR,e.ELECTIVIRE,e.PROBOPASS,e.ARCEUS,e.BLITZLE,e.ZEBSTRIKA,e.EELEKTROSS,e.THUNDURUS,e.ZEKROM,e.VIKAVOLT,e.PINCURCHIN,e.COPPERAJAH,e.REGIELEKI,e.URSALUNA,e.PAWMOT,e.BELLIBOLT,e.KILOWATTREL,e.CYCLIZAR,e.GREAT_TUSK,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.MIRAIDON,e.RAGING_BOLT,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.HISUI_ELECTRODE],[t.PSYCHIC_NOISE]:[e.JIGGLYPUFF,e.WIGGLYTUFF,e.VENONAT,e.VENOMOTH,e.PSYDUCK,e.GOLDUCK,e.SLOWBRO,e.GENGAR,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.LAPRAS,e.MEWTWO,e.MEW,e.NOCTOWL,e.YANMA,e.ESPEON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.LUGIA,e.GARDEVOIR,e.GRUMPIG,e.FLYGON,e.CHIMECHO,e.METANG,e.METAGROSS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.VESPIQUEN,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.YANMEGA,e.UXIE,e.MESPRIT,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.REUNICLUS,e.DELPHOX,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.MALAMAR,e.TREVENANT,e.NOIVERN,e.HOOPA,e.PRIMARINA,e.RIBOMBEE,e.ORANGURU,e.BRUXISH,e.TOXTRICITY,e.HATTERENE,e.INDEEDEE,e.WYRDEER,e.RABSCA,e.FARIGIRAF,e.SCREAM_TAIL,e.MUNKIDORI,e.IRON_CROWN,e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.HISUI_BRAVIARY],[t.UPPER_HAND]:[e.PIKACHU,e.RAICHU,e.POLIWRATH,e.HITMONLEE,e.HITMONCHAN,e.MEW,e.AIPOM,e.HERACROSS,e.SNEASEL,e.TYROGUE,e.HITMONTOP,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.BLAZIKEN,e.SHIFTRY,e.HARIYAMA,e.MEDITITE,e.MEDICHAM,e.ZANGOOSE,e.MONFERNO,e.INFERNAPE,e.AMBIPOM,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.GALLADE,e.SAMUROTT,e.CONKELDURR,e.SCRAGGY,e.SCRAFTY,e.MIENFOO,e.MIENSHAO,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.GRENINJA,e.TALONFLAME,e.HAWLUCHA,e.CRABRAWLER,e.CRABOMINABLE,[e.LYCANROC,"midnight"],e.PASSIMIAN,e.HAKAMO_O,e.KOMMO_O,e.FALINKS,e.SNEASLER,e.QUAQUAVAL,e.SPIDOPS,e.PAWMO,e.PAWMOT,e.FLAMIGO,e.OKIDOGI,e.ALOLA_RAICHU,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE]},cl={[t.MEGA_PUNCH]:w.GREAT,[t.PAY_DAY]:w.ULTRA,[t.FIRE_PUNCH]:w.GREAT,[t.ICE_PUNCH]:w.GREAT,[t.THUNDER_PUNCH]:w.GREAT,[t.SWORDS_DANCE]:w.COMMON,[t.CUT]:w.COMMON,[t.FLY]:w.COMMON,[t.MEGA_KICK]:w.GREAT,[t.BODY_SLAM]:w.GREAT,[t.TAKE_DOWN]:w.GREAT,[t.DOUBLE_EDGE]:w.ULTRA,[t.PIN_MISSILE]:w.COMMON,[t.ROAR]:w.COMMON,[t.FLAMETHROWER]:w.ULTRA,[t.HYDRO_PUMP]:w.ULTRA,[t.SURF]:w.ULTRA,[t.ICE_BEAM]:w.ULTRA,[t.BLIZZARD]:w.ULTRA,[t.PSYBEAM]:w.GREAT,[t.HYPER_BEAM]:w.ULTRA,[t.LOW_KICK]:w.COMMON,[t.COUNTER]:w.COMMON,[t.STRENGTH]:w.GREAT,[t.SOLAR_BEAM]:w.ULTRA,[t.FIRE_SPIN]:w.COMMON,[t.THUNDERBOLT]:w.ULTRA,[t.THUNDER_WAVE]:w.COMMON,[t.THUNDER]:w.ULTRA,[t.EARTHQUAKE]:w.ULTRA,[t.DIG]:w.GREAT,[t.TOXIC]:w.GREAT,[t.PSYCHIC]:w.ULTRA,[t.AGILITY]:w.COMMON,[t.NIGHT_SHADE]:w.COMMON,[t.SCREECH]:w.COMMON,[t.DOUBLE_TEAM]:w.COMMON,[t.CONFUSE_RAY]:w.COMMON,[t.LIGHT_SCREEN]:w.COMMON,[t.HAZE]:w.COMMON,[t.REFLECT]:w.COMMON,[t.FOCUS_ENERGY]:w.COMMON,[t.METRONOME]:w.COMMON,[t.SELF_DESTRUCT]:w.GREAT,[t.FIRE_BLAST]:w.ULTRA,[t.WATERFALL]:w.GREAT,[t.SWIFT]:w.COMMON,[t.AMNESIA]:w.COMMON,[t.DREAM_EATER]:w.GREAT,[t.LEECH_LIFE]:w.ULTRA,[t.FLASH]:w.COMMON,[t.EXPLOSION]:w.GREAT,[t.REST]:w.COMMON,[t.ROCK_SLIDE]:w.GREAT,[t.TRI_ATTACK]:w.ULTRA,[t.SUPER_FANG]:w.COMMON,[t.SUBSTITUTE]:w.COMMON,[t.THIEF]:w.GREAT,[t.SNORE]:w.COMMON,[t.CURSE]:w.COMMON,[t.REVERSAL]:w.COMMON,[t.SPITE]:w.COMMON,[t.PROTECT]:w.COMMON,[t.SCARY_FACE]:w.COMMON,[t.SLUDGE_BOMB]:w.GREAT,[t.MUD_SLAP]:w.COMMON,[t.SPIKES]:w.COMMON,[t.ICY_WIND]:w.GREAT,[t.OUTRAGE]:w.ULTRA,[t.SANDSTORM]:w.COMMON,[t.GIGA_DRAIN]:w.ULTRA,[t.ENDURE]:w.COMMON,[t.CHARM]:w.COMMON,[t.FALSE_SWIPE]:w.COMMON,[t.SWAGGER]:w.COMMON,[t.STEEL_WING]:w.GREAT,[t.ATTRACT]:w.COMMON,[t.SLEEP_TALK]:w.COMMON,[t.HEAL_BELL]:w.COMMON,[t.RETURN]:w.ULTRA,[t.FRUSTRATION]:w.COMMON,[t.SAFEGUARD]:w.COMMON,[t.PAIN_SPLIT]:w.COMMON,[t.MEGAHORN]:w.ULTRA,[t.BATON_PASS]:w.COMMON,[t.ENCORE]:w.COMMON,[t.IRON_TAIL]:w.GREAT,[t.METAL_CLAW]:w.COMMON,[t.SYNTHESIS]:w.GREAT,[t.HIDDEN_POWER]:w.GREAT,[t.RAIN_DANCE]:w.COMMON,[t.SUNNY_DAY]:w.COMMON,[t.CRUNCH]:w.GREAT,[t.PSYCH_UP]:w.COMMON,[t.SHADOW_BALL]:w.ULTRA,[t.FUTURE_SIGHT]:w.GREAT,[t.ROCK_SMASH]:w.COMMON,[t.WHIRLPOOL]:w.COMMON,[t.BEAT_UP]:w.COMMON,[t.UPROAR]:w.GREAT,[t.HEAT_WAVE]:w.ULTRA,[t.HAIL]:w.COMMON,[t.TORMENT]:w.COMMON,[t.WILL_O_WISP]:w.COMMON,[t.FACADE]:w.GREAT,[t.FOCUS_PUNCH]:w.COMMON,[t.NATURE_POWER]:w.COMMON,[t.CHARGE]:w.COMMON,[t.TAUNT]:w.COMMON,[t.HELPING_HAND]:w.COMMON,[t.TRICK]:w.COMMON,[t.SUPERPOWER]:w.ULTRA,[t.RECYCLE]:w.COMMON,[t.REVENGE]:w.GREAT,[t.BRICK_BREAK]:w.GREAT,[t.KNOCK_OFF]:w.GREAT,[t.ENDEAVOR]:w.COMMON,[t.SKILL_SWAP]:w.COMMON,[t.IMPRISON]:w.COMMON,[t.SECRET_POWER]:w.COMMON,[t.DIVE]:w.GREAT,[t.FEATHER_DANCE]:w.COMMON,[t.BLAZE_KICK]:w.GREAT,[t.HYPER_VOICE]:w.ULTRA,[t.BLAST_BURN]:w.ULTRA,[t.HYDRO_CANNON]:w.ULTRA,[t.WEATHER_BALL]:w.COMMON,[t.FAKE_TEARS]:w.COMMON,[t.AIR_CUTTER]:w.GREAT,[t.OVERHEAT]:w.ULTRA,[t.ROCK_TOMB]:w.GREAT,[t.METAL_SOUND]:w.COMMON,[t.COSMIC_POWER]:w.COMMON,[t.SIGNAL_BEAM]:w.GREAT,[t.SAND_TOMB]:w.COMMON,[t.MUDDY_WATER]:w.GREAT,[t.BULLET_SEED]:w.GREAT,[t.AERIAL_ACE]:w.GREAT,[t.ICICLE_SPEAR]:w.GREAT,[t.IRON_DEFENSE]:w.GREAT,[t.DRAGON_CLAW]:w.ULTRA,[t.FRENZY_PLANT]:w.ULTRA,[t.BULK_UP]:w.COMMON,[t.BOUNCE]:w.GREAT,[t.MUD_SHOT]:w.GREAT,[t.POISON_TAIL]:w.GREAT,[t.COVET]:w.GREAT,[t.MAGICAL_LEAF]:w.GREAT,[t.CALM_MIND]:w.GREAT,[t.LEAF_BLADE]:w.ULTRA,[t.DRAGON_DANCE]:w.GREAT,[t.ROCK_BLAST]:w.GREAT,[t.WATER_PULSE]:w.GREAT,[t.ROOST]:w.GREAT,[t.GRAVITY]:w.COMMON,[t.GYRO_BALL]:w.COMMON,[t.BRINE]:w.GREAT,[t.PLUCK]:w.GREAT,[t.TAILWIND]:w.GREAT,[t.U_TURN]:w.GREAT,[t.CLOSE_COMBAT]:w.ULTRA,[t.PAYBACK]:w.COMMON,[t.ASSURANCE]:w.COMMON,[t.EMBARGO]:w.COMMON,[t.FLING]:w.COMMON,[t.GASTRO_ACID]:w.GREAT,[t.POWER_SWAP]:w.COMMON,[t.GUARD_SWAP]:w.COMMON,[t.WORRY_SEED]:w.GREAT,[t.TOXIC_SPIKES]:w.GREAT,[t.FLARE_BLITZ]:w.ULTRA,[t.AURA_SPHERE]:w.GREAT,[t.ROCK_POLISH]:w.COMMON,[t.POISON_JAB]:w.GREAT,[t.DARK_PULSE]:w.GREAT,[t.AQUA_TAIL]:w.GREAT,[t.SEED_BOMB]:w.GREAT,[t.AIR_SLASH]:w.GREAT,[t.X_SCISSOR]:w.GREAT,[t.BUG_BUZZ]:w.GREAT,[t.DRAGON_PULSE]:w.GREAT,[t.POWER_GEM]:w.GREAT,[t.DRAIN_PUNCH]:w.GREAT,[t.VACUUM_WAVE]:w.COMMON,[t.FOCUS_BLAST]:w.GREAT,[t.ENERGY_BALL]:w.GREAT,[t.BRAVE_BIRD]:w.ULTRA,[t.EARTH_POWER]:w.ULTRA,[t.GIGA_IMPACT]:w.GREAT,[t.NASTY_PLOT]:w.COMMON,[t.AVALANCHE]:w.GREAT,[t.SHADOW_CLAW]:w.GREAT,[t.THUNDER_FANG]:w.GREAT,[t.ICE_FANG]:w.GREAT,[t.FIRE_FANG]:w.GREAT,[t.PSYCHO_CUT]:w.GREAT,[t.ZEN_HEADBUTT]:w.GREAT,[t.FLASH_CANNON]:w.GREAT,[t.ROCK_CLIMB]:w.GREAT,[t.DEFOG]:w.COMMON,[t.TRICK_ROOM]:w.COMMON,[t.DRACO_METEOR]:w.ULTRA,[t.LEAF_STORM]:w.ULTRA,[t.POWER_WHIP]:w.ULTRA,[t.CROSS_POISON]:w.GREAT,[t.GUNK_SHOT]:w.ULTRA,[t.IRON_HEAD]:w.GREAT,[t.STONE_EDGE]:w.ULTRA,[t.STEALTH_ROCK]:w.COMMON,[t.GRASS_KNOT]:w.ULTRA,[t.BUG_BITE]:w.GREAT,[t.CHARGE_BEAM]:w.GREAT,[t.HONE_CLAWS]:w.COMMON,[t.WONDER_ROOM]:w.COMMON,[t.PSYSHOCK]:w.GREAT,[t.VENOSHOCK]:w.GREAT,[t.MAGIC_ROOM]:w.COMMON,[t.SMACK_DOWN]:w.COMMON,[t.SLUDGE_WAVE]:w.GREAT,[t.HEAVY_SLAM]:w.GREAT,[t.ELECTRO_BALL]:w.GREAT,[t.FLAME_CHARGE]:w.GREAT,[t.LOW_SWEEP]:w.GREAT,[t.ACID_SPRAY]:w.COMMON,[t.FOUL_PLAY]:w.ULTRA,[t.ROUND]:w.COMMON,[t.ECHOED_VOICE]:w.COMMON,[t.STORED_POWER]:w.COMMON,[t.ALLY_SWITCH]:w.COMMON,[t.SCALD]:w.GREAT,[t.HEX]:w.GREAT,[t.SKY_DROP]:w.GREAT,[t.INCINERATE]:w.GREAT,[t.QUASH]:w.COMMON,[t.ACROBATICS]:w.GREAT,[t.RETALIATE]:w.GREAT,[t.WATER_PLEDGE]:w.GREAT,[t.FIRE_PLEDGE]:w.GREAT,[t.GRASS_PLEDGE]:w.GREAT,[t.VOLT_SWITCH]:w.GREAT,[t.STRUGGLE_BUG]:w.COMMON,[t.BULLDOZE]:w.GREAT,[t.FROST_BREATH]:w.GREAT,[t.DRAGON_TAIL]:w.GREAT,[t.WORK_UP]:w.COMMON,[t.ELECTROWEB]:w.GREAT,[t.WILD_CHARGE]:w.GREAT,[t.DRILL_RUN]:w.GREAT,[t.RAZOR_SHELL]:w.GREAT,[t.HEAT_CRASH]:w.GREAT,[t.TAIL_SLAP]:w.GREAT,[t.HURRICANE]:w.ULTRA,[t.SNARL]:w.COMMON,[t.PHANTOM_FORCE]:w.ULTRA,[t.PETAL_BLIZZARD]:w.GREAT,[t.DISARMING_VOICE]:w.GREAT,[t.DRAINING_KISS]:w.GREAT,[t.GRASSY_TERRAIN]:w.COMMON,[t.MISTY_TERRAIN]:w.COMMON,[t.PLAY_ROUGH]:w.GREAT,[t.CONFIDE]:w.COMMON,[t.MYSTICAL_FIRE]:w.GREAT,[t.EERIE_IMPULSE]:w.COMMON,[t.VENOM_DRENCH]:w.COMMON,[t.ELECTRIC_TERRAIN]:w.COMMON,[t.DAZZLING_GLEAM]:w.ULTRA,[t.INFESTATION]:w.COMMON,[t.POWER_UP_PUNCH]:w.GREAT,[t.DARKEST_LARIAT]:w.GREAT,[t.HIGH_HORSEPOWER]:w.ULTRA,[t.SOLAR_BLADE]:w.GREAT,[t.THROAT_CHOP]:w.GREAT,[t.POLLEN_PUFF]:w.GREAT,[t.PSYCHIC_TERRAIN]:w.COMMON,[t.LUNGE]:w.GREAT,[t.SPEED_SWAP]:w.COMMON,[t.SMART_STRIKE]:w.GREAT,[t.BRUTAL_SWING]:w.GREAT,[t.AURORA_VEIL]:w.COMMON,[t.PSYCHIC_FANGS]:w.GREAT,[t.STOMPING_TANTRUM]:w.GREAT,[t.LIQUIDATION]:w.ULTRA,[t.BODY_PRESS]:w.ULTRA,[t.BREAKING_SWIPE]:w.GREAT,[t.STEEL_BEAM]:w.ULTRA,[t.EXPANDING_FORCE]:w.GREAT,[t.STEEL_ROLLER]:w.COMMON,[t.SCALE_SHOT]:w.ULTRA,[t.METEOR_BEAM]:w.GREAT,[t.MISTY_EXPLOSION]:w.COMMON,[t.GRASSY_GLIDE]:w.COMMON,[t.RISING_VOLTAGE]:w.COMMON,[t.TERRAIN_PULSE]:w.COMMON,[t.SKITTER_SMACK]:w.GREAT,[t.BURNING_JEALOUSY]:w.GREAT,[t.LASH_OUT]:w.GREAT,[t.POLTERGEIST]:w.ULTRA,[t.CORROSIVE_GAS]:w.COMMON,[t.COACHING]:w.COMMON,[t.FLIP_TURN]:w.COMMON,[t.TRIPLE_AXEL]:w.COMMON,[t.DUAL_WINGBEAT]:w.COMMON,[t.SCORCHING_SANDS]:w.GREAT,[t.TERA_BLAST]:w.GREAT,[t.ICE_SPINNER]:w.GREAT,[t.SNOWSCAPE]:w.COMMON,[t.POUNCE]:w.COMMON,[t.TRAILBLAZE]:w.COMMON,[t.CHILLING_WATER]:w.COMMON,[t.HARD_PRESS]:w.GREAT,[t.DRAGON_CHEER]:w.COMMON,[t.ALLURING_VOICE]:w.GREAT,[t.TEMPER_FLARE]:w.GREAT,[t.SUPERCELL_SLAM]:w.GREAT,[t.PSYCHIC_NOISE]:w.GREAT,[t.UPPER_HAND]:w.COMMON};function $O(E,A=!1,s=!1,R=!1,a=uO.DEFAULT){let i=Jn(At[E]);if(u.exists("nature:"+i)&&(i=u.t("nature:"+i)),A){let r=null,L=null;for(const C of zn){const M=xo(E,C);M>1?r=C:M<1&&(L=C)}const o=s?Q.SUMMARY_ALT:Q.WINDOW,l=R?(C,M)=>C:(C,M)=>NO(C,M,a);r&&L?i=`${l(`${i}${s?" ":`
`}(`,o)}${l(`+${u.t(bi(r))}`,Q.SUMMARY_PINK)}${l("/",o)}${l(`-${u.t(bi(L))}`,Q.SUMMARY_BLUE)}${l(")",o)}`:i=l(`${i}${s?" ":`
`}(-)`,o)}return i}N($O,"getNatureName");function xo(E,A){switch(A){case K.ATK:switch(E){case At.LONELY:case At.BRAVE:case At.ADAMANT:case At.NAUGHTY:return 1.1;case At.BOLD:case At.TIMID:case At.MODEST:case At.CALM:return .9}break;case K.DEF:switch(E){case At.BOLD:case At.RELAXED:case At.IMPISH:case At.LAX:return 1.1;case At.LONELY:case At.HASTY:case At.MILD:case At.GENTLE:return .9}break;case K.SPATK:switch(E){case At.MODEST:case At.MILD:case At.QUIET:case At.RASH:return 1.1;case At.ADAMANT:case At.IMPISH:case At.JOLLY:case At.CAREFUL:return .9}break;case K.SPDEF:switch(E){case At.CALM:case At.GENTLE:case At.SASSY:case At.CAREFUL:return 1.1;case At.NAUGHTY:case At.LAX:case At.NAIVE:case At.RASH:return .9}break;case K.SPD:switch(E){case At.TIMID:case At.HASTY:case At.JOLLY:case At.NAIVE:return 1.1;case At.BRAVE:case At.RELAXED:case At.QUIET:case At.SASSY:return .9}break}return 1}N(xo,"getNatureStatMultiplier");const v6=99;function DO(E){switch(E){case be.POKEBALL:return"pb";case be.GREAT_BALL:return"gb";case be.ULTRA_BALL:return"ub";case be.ROGUE_BALL:return"rb";case be.MASTER_BALL:return"mb";case be.LUXURY_BALL:return"lb"}}N(DO,"getPokeballAtlasKey");function xl(E){let A;switch(E){case be.POKEBALL:A=u.t("pokeball:pokeBall");break;case be.GREAT_BALL:A=u.t("pokeball:greatBall");break;case be.ULTRA_BALL:A=u.t("pokeball:ultraBall");break;case be.ROGUE_BALL:A=u.t("pokeball:rogueBall");break;case be.MASTER_BALL:A=u.t("pokeball:masterBall");break;case be.LUXURY_BALL:A=u.t("pokeball:luxuryBall");break}return A}N(xl,"getPokeballName");function bl(E){switch(E){case be.POKEBALL:return 1;case be.GREAT_BALL:return 1.5;case be.ULTRA_BALL:return 2;case be.ROGUE_BALL:return 3;case be.MASTER_BALL:return-1;case be.LUXURY_BALL:return 1}}N(bl,"getPokeballCatchMultiplier");function zO(E){switch(E){case be.POKEBALL:return 13969705;case be.GREAT_BALL:return 9745630;case be.ULTRA_BALL:return 15125809;case be.ROGUE_BALL:return 13969705;case be.MASTER_BALL:return 10764733;case be.LUXURY_BALL:return 16768618}}N(zO,"getPokeballTintColor");function Sk(E){var a;if(n.gameMode.isFreshStartChallenge())return 0;const A=n.gameData.getSpeciesCount(i=>!!i.caughtAttr),s=new Et(1);(a=n.findModifier(i=>i instanceof Bo))==null||a.apply(s);const R=n.gameMode.isDaily||A>800?2.5:A>600?2:A>400?1.5:A>200?1:A>100?.5:0;return Math.floor(s.value*R*Math.min(255,E)/6)}N(Sk,"getCriticalCaptureChance");function V6(E,A,s,R,a,i=!1){let r=1,L=A,o=s;const l=s-A,C=E.x,M=C+3,D=C-3;let _=4;const P=N(()=>{n.tweens.add({targets:E,y:s,duration:r*R,ease:"Cubic.easeIn",onComplete:N(()=>{n.playSound("se/pb_bounce_1",{volume:r}),r=r>.01?r*.5:0,r?(L=l*r,o=s-L,n.tweens.add({targets:E,y:o,duration:r*R,ease:"Cubic.easeOut",onComplete:N(()=>P(),"onComplete")})):a&&a()},"onComplete")})},"doBounce"),h=N(()=>{n.tweens.add({targets:E,x:D,duration:125,ease:"Linear",onComplete:N(()=>{n.tweens.add({targets:E,x:M,duration:125,ease:"Linear",onComplete:N(()=>{_--,_>0?h():n.tweens.add({targets:E,x:C,duration:60,ease:"Linear",onComplete:N(()=>n.time.delayedCall(500,P),"onComplete")})},"onComplete")})},"onComplete")})},"doCritShake");i?n.time.delayedCall(500,h):P()}N(V6,"doPokeballBounceAnim");function ok(){return new Promise((E,A)=>{TO.daily.getSeed().then(s=>{E(s)})})}N(ok,"fetchDailyRunSeed");function lk(E){const A=[];return n.executeWithSeedOffset(()=>{const s=n.gameMode.getStartingLevel();if(/\d{18}$/.test(E)){for(let a=0;a<3;a++){const i=6+a*6,r=Vn(parseInt(E.slice(i,i+4)),parseInt(E.slice(i+4,i+6)));A.push(fx(r,s))}return}const R=[];R.push(Math.min(Math.round(3.5+Math.abs(R_(1))),8)),R.push(ce(9-R[0],1)),R.push(10-(R[0]+R[1]));for(let a=0;a<R.length;a++){const i=R[a],r=Object.keys(KA).map(l=>parseInt(l)).filter(l=>KA[l]===i),L=ke(IE(r)),o=ke(L.getTrainerSpeciesForLevel(s,!0,Ve.STRONGER));A.push(fx(o,s))}},0,E),A}N(lk,"getDailyRunStarters");function fx(E,A){const s=E instanceof G?E:ke(E.speciesId),R=E instanceof G?void 0:E.formIndex,a=new vE(s,A,void 0,R,void 0,void 0,void 0,void 0,void 0,void 0),i={species:s,dexAttr:a.getDexAttr(),abilityIndex:a.abilityIndex,passive:!1,nature:a.getNature(),pokerus:a.pokerus};return a.destroy(),i}N(fx,"getDailyRunStarter");const Ck={[T.CAVE]:3,[T.LAKE]:3,[T.PLAINS]:3,[T.SNOWY_FOREST]:3,[T.SWAMP]:3,[T.TALL_GRASS]:3,[T.ABYSS]:2,[T.RUINS]:2,[T.BADLANDS]:2,[T.BEACH]:2,[T.CONSTRUCTION_SITE]:2,[T.DESERT]:2,[T.DOJO]:2,[T.FACTORY]:2,[T.FAIRY_CAVE]:2,[T.FOREST]:2,[T.GRASS]:2,[T.MEADOW]:2,[T.MOUNTAIN]:2,[T.SEA]:2,[T.SEABED]:2,[T.SLUM]:2,[T.TEMPLE]:2,[T.VOLCANO]:2,[T.GRAVEYARD]:1,[T.ICE_CAVE]:1,[T.ISLAND]:1,[T.JUNGLE]:1,[T.LABORATORY]:1,[T.METROPOLIS]:1,[T.POWER_PLANT]:1,[T.SPACE]:1,[T.WASTELAND]:1,[T.TOWN]:0,[T.END]:0};function Uk(){const E=DE(T).filter(a=>a!==T.TOWN&&a!==T.END);let A=0;const s=[];for(const a of E)A+=Ck[a],s.push(A);const R=ce(A);for(let a=0;a<E.length;a++)if(R<s[a])return E[a];return E[ce(E.length)]}N(Uk,"getDailyStartingBiome");var SA=(E=>(E[E.CLASSIC=0]="CLASSIC",E[E.ENDLESS=1]="ENDLESS",E[E.SPLICED_ENDLESS=2]="SPLICED_ENDLESS",E[E.DAILY=3]="DAILY",E[E.CHALLENGE=4]="CHALLENGE",E))(SA||{});const ZA=[10,180],uk=[10,180],zf=class zf{constructor(A,s,R){this.modeId=A,this.challenges=[],Object.assign(this,s),this.isChallenge&&(this.challenges=B8.map(a=>f8(a))),this.battleConfig=R||{}}hasChallenge(A){return this.challenges.some(s=>s.id===A&&s.value!==0)}isFreshStartChallenge(){return this.hasChallenge(it.FRESH_START)}getStartingLevel(){if(Ye.STARTING_LEVEL_OVERRIDE)return Ye.STARTING_LEVEL_OVERRIDE;switch(this.modeId){case 3:return 20;default:return 5}}getStartingMoney(){return Ye.STARTING_MONEY_OVERRIDE||1e3}getStartingBiome(){switch(this.modeId){case 3:return Uk();default:return Ye.STARTING_BIOME_OVERRIDE||T.TOWN}}getWaveForDifficulty(A,s=!1){switch(this.modeId){case 3:return A+30+(s?0:Math.floor(A/5));default:return A}}isWaveTrainer(A,s){if(this.isDaily)return A%10===5||!(A%10)&&A>10&&!this.isWaveFinal(A);if(A%30===(n.offsetGym?0:20)&&!this.isWaveFinal(A))return!0;if(A%10!==1&&A%10){const R=s.getTrainerChance();let a=!0;if(R){const i=Math.floor(A/10)*10;for(let r=Math.max(A-3,i+2);r<=Math.min(A+3,i+9);r++)if(r!==A){if(r%30===(n.offsetGym?0:20)||this.isFixedBattle(r)){a=!1;break}else if(r<A&&(n.executeWithSeedOffset(()=>{const L=s.getTrainerChance();ce(L)||(a=!1)},r),!a))break}}return!!(a&&R&&!ce(R))}return!1}isTrainerBoss(A,s,R){switch(this.modeId){case 3:return A>10&&A<50&&!(A%10);default:return A%30===(R?0:20)&&(s!==T.END||this.isClassic||this.isWaveFinal(A))}}getOverrideSpecies(A){if(this.isDaily&&this.isWaveFinal(A)){const s=wR.filter(R=>(R.subLegendary||R.legendary||R.mythical)&&R.baseTotal>=600&&R.speciesId!==e.ETERNATUS&&R.speciesId!==e.ARCEUS);return IE(s)}return null}isWaveFinal(A,s=this.modeId){switch(s){case 0:case 4:return A===200;case 1:case 2:return!(A%250);case 3:return A===50}}isBoss(A){return A%10===0}isBattleClassicFinalBoss(A){return(this.modeId===0||this.modeId===4)&&this.isWaveFinal(A)}isEndlessBoss(A){return A%50===0&&(this.modeId===1||this.modeId===2)}isEndlessMinorBoss(A){return A%250===0&&(this.modeId===1||this.modeId===2)}isEndlessMajorBoss(A){return A%1e3===0&&(this.modeId===1||this.modeId===2)}isFixedBattle(A){const s=new UE;return this.battleConfig.hasOwnProperty(A)||as(this,XE.FIXED_BATTLES,A,s)}getFixedBattle(A){const s=new UE;return as(this,XE.FIXED_BATTLES,A,s)?s:this.battleConfig[A]}getClearScoreBonus(){switch(this.modeId){case 0:case 4:return 5e3;case 3:return 2500;default:return 0}}getEnemyModifierChance(A){switch(this.modeId){case 0:case 4:case 3:return A?6:18;case 1:case 2:return A?4:12}}getName(){switch(this.modeId){case 0:return u.t("gameMode:classic");case 1:return u.t("gameMode:endless");case 2:return u.t("gameMode:endlessSpliced");case 3:return u.t("gameMode:dailyRun");case 4:return u.t("gameMode:challenge")}}getMysteryEncounterLegalWaves(){switch(this.modeId){default:return[0,0];case 0:return ZA;case 4:return uk}}static getModeName(A){switch(A){case 0:return u.t("gameMode:classic");case 1:return u.t("gameMode:endless");case 2:return u.t("gameMode:endlessSpliced");case 3:return u.t("gameMode:dailyRun");case 4:return u.t("gameMode:challenge")}}};N(zf,"GameMode");let WR=zf;function kl(E){switch(E){case 0:return new WR(0,{isClassic:!0,hasTrainers:!0,hasMysteryEncounters:!0},C6);case 1:return new WR(1,{isEndless:!0,hasShortBiomes:!0,hasRandomBosses:!0});case 2:return new WR(2,{isEndless:!0,hasShortBiomes:!0,hasRandomBosses:!0,isSplicedOnly:!0});case 3:return new WR(3,{isDaily:!0,hasTrainers:!0,hasNoShop:!0});case 4:return new WR(4,{isClassic:!0,hasTrainers:!0,isChallenge:!0,hasMysteryEncounters:!0},C6)}}N(kl,"getGameMode");var ws=(E=>(E[E.ENDLESS_MODE=0]="ENDLESS_MODE",E[E.MINI_BLACK_HOLE=1]="MINI_BLACK_HOLE",E[E.SPLICED_ENDLESS_MODE=2]="SPLICED_ENDLESS_MODE",E[E.EVIOLITE=3]="EVIOLITE",E))(ws||{});function Dk(E){switch(E){case 0:return`${WR.getModeName(SA.ENDLESS)} Mode`;case 1:return u.t("modifierType:ModifierType.MINI_BLACK_HOLE.name");case 2:return`${WR.getModeName(SA.SPLICED_ENDLESS)} Mode`;case 3:return u.t("modifierType:ModifierType.EVIOLITE.name")}}N(Dk,"getUnlockableName");var Vt=(E=>(E[E.UNSET=0]="UNSET",E[E.MALE=1]="MALE",E[E.FEMALE=2]="FEMALE",E))(Vt||{}),BL=(E=>(E[E.COMMON=0]="COMMON",E[E.GREAT=1]="GREAT",E[E.ULTRA=2]="ULTRA",E[E.ROGUE=3]="ROGUE",E[E.MASTER=4]="MASTER",E))(BL||{});const qf=class qf{constructor(A,s,R,a,i,r){this.name=s,this.description=R,this.iconImage=a,this.score=i,this.conditionFunc=r,this.localizationKey=A}getName(A=Vt.UNSET){const s=Vt[A].toLowerCase();return u.t(`achv:${this.localizationKey}.name`,{context:s})}getDescription(){return this.description}getIconImage(){return this.iconImage}setSecret(A){return this.secret=!0,this.hasParent=!!A,this}validate(A){return!this.conditionFunc||this.conditionFunc(A)}getTier(){return this.score>=100?4:this.score>=75?3:this.score>=50?2:this.score>=25?1:0}};N(qf,"Achv");let BA=qf;const jf=class jf extends BA{constructor(A,s,R,a,i){super(A,s,"",a,i,r=>n.money>=this.moneyAmount),this.moneyAmount=R}};N(jf,"MoneyAchv");let Ha=jf;const eB=class eB extends BA{constructor(A,s,R,a,i){super(A,s,"",a,i,r=>n.gameData.gameStats.ribbonsOwned>=this.ribbonAmount),this.ribbonAmount=R}};N(eB,"RibbonAchv");let la=eB;const tB=class tB extends BA{constructor(A,s,R,a,i){super(A,s,"",a,i,r=>(r[0]instanceof Et?r[0].value:r[0])>=this.damageAmount),this.damageAmount=R}};N(tB,"DamageAchv");let da=tB;const AB=class AB extends BA{constructor(A,s,R,a,i){super(A,s,"",a,i,r=>(r[0]instanceof Et?r[0].value:r[0])>=this.healAmount),this.healAmount=R}};N(AB,"HealAchv");let fa=AB;const EB=class EB extends BA{constructor(A,s,R,a,i){super(A,s,"",a,i,r=>(r[0]instanceof Et?r[0].value:r[0])>=this.level),this.level=R}};N(EB,"LevelAchv");let ar=EB;const sB=class sB extends BA{constructor(A,s,R,a,i,r){super(A,s,R,a,i,L=>r(L[0]))}};N(sB,"ModifierAchv");let Zl=sB;const RB=class RB extends BA{constructor(A,s,R,a,i,r){super(A,s,R,a,i,L=>r(L[0]))}};N(RB,"ChallengeAchv");let hA=RB;function f1(E){var R,a;const A=((a=(R=n)==null?void 0:R.gameData)==null?void 0:a.gender)??Vt.MALE,s=Vt[A].toLowerCase();switch(E){case"10K_MONEY":return u.t("achv:MoneyAchv.description",{context:s,moneyAmount:Ct._10K_MONEY.moneyAmount.toLocaleString("en-US")});case"100K_MONEY":return u.t("achv:MoneyAchv.description",{context:s,moneyAmount:Ct._100K_MONEY.moneyAmount.toLocaleString("en-US")});case"1M_MONEY":return u.t("achv:MoneyAchv.description",{context:s,moneyAmount:Ct._1M_MONEY.moneyAmount.toLocaleString("en-US")});case"10M_MONEY":return u.t("achv:MoneyAchv.description",{context:s,moneyAmount:Ct._10M_MONEY.moneyAmount.toLocaleString("en-US")});case"250_DMG":return u.t("achv:DamageAchv.description",{context:s,damageAmount:Ct._250_DMG.damageAmount.toLocaleString("en-US")});case"1000_DMG":return u.t("achv:DamageAchv.description",{context:s,damageAmount:Ct._1000_DMG.damageAmount.toLocaleString("en-US")});case"2500_DMG":return u.t("achv:DamageAchv.description",{context:s,damageAmount:Ct._2500_DMG.damageAmount.toLocaleString("en-US")});case"10000_DMG":return u.t("achv:DamageAchv.description",{context:s,damageAmount:Ct._10000_DMG.damageAmount.toLocaleString("en-US")});case"250_HEAL":return u.t("achv:HealAchv.description",{context:s,healAmount:Ct._250_HEAL.healAmount.toLocaleString("en-US"),HP:u.t(bi(K.HP))});case"1000_HEAL":return u.t("achv:HealAchv.description",{context:s,healAmount:Ct._1000_HEAL.healAmount.toLocaleString("en-US"),HP:u.t(bi(K.HP))});case"2500_HEAL":return u.t("achv:HealAchv.description",{context:s,healAmount:Ct._2500_HEAL.healAmount.toLocaleString("en-US"),HP:u.t(bi(K.HP))});case"10000_HEAL":return u.t("achv:HealAchv.description",{context:s,healAmount:Ct._10000_HEAL.healAmount.toLocaleString("en-US"),HP:u.t(bi(K.HP))});case"LV_100":return u.t("achv:LevelAchv.description",{context:s,level:Ct.LV_100.level});case"LV_250":return u.t("achv:LevelAchv.description",{context:s,level:Ct.LV_250.level});case"LV_1000":return u.t("achv:LevelAchv.description",{context:s,level:Ct.LV_1000.level});case"10_RIBBONS":return u.t("achv:RibbonAchv.description",{context:s,ribbonAmount:Ct._10_RIBBONS.ribbonAmount.toLocaleString("en-US")});case"25_RIBBONS":return u.t("achv:RibbonAchv.description",{context:s,ribbonAmount:Ct._25_RIBBONS.ribbonAmount.toLocaleString("en-US")});case"50_RIBBONS":return u.t("achv:RibbonAchv.description",{context:s,ribbonAmount:Ct._50_RIBBONS.ribbonAmount.toLocaleString("en-US")});case"75_RIBBONS":return u.t("achv:RibbonAchv.description",{context:s,ribbonAmount:Ct._75_RIBBONS.ribbonAmount.toLocaleString("en-US")});case"100_RIBBONS":return u.t("achv:RibbonAchv.description",{context:s,ribbonAmount:Ct._100_RIBBONS.ribbonAmount.toLocaleString("en-US")});case"TRANSFER_MAX_STAT_STAGE":return u.t("achv:TRANSFER_MAX_STAT_STAGE.description",{context:s});case"MAX_FRIENDSHIP":return u.t("achv:MAX_FRIENDSHIP.description",{context:s});case"MEGA_EVOLVE":return u.t("achv:MEGA_EVOLVE.description",{context:s});case"GIGANTAMAX":return u.t("achv:GIGANTAMAX.description",{context:s});case"TERASTALLIZE":return u.t("achv:TERASTALLIZE.description",{context:s});case"STELLAR_TERASTALLIZE":return u.t("achv:STELLAR_TERASTALLIZE.description",{context:s});case"SPLICE":return u.t("achv:SPLICE.description",{context:s});case"MINI_BLACK_HOLE":return u.t("achv:MINI_BLACK_HOLE.description",{context:s});case"CATCH_MYTHICAL":return u.t("achv:CATCH_MYTHICAL.description",{context:s});case"CATCH_SUB_LEGENDARY":return u.t("achv:CATCH_SUB_LEGENDARY.description",{context:s});case"CATCH_LEGENDARY":return u.t("achv:CATCH_LEGENDARY.description",{context:s});case"SEE_SHINY":return u.t("achv:SEE_SHINY.description",{context:s});case"SHINY_PARTY":return u.t("achv:SHINY_PARTY.description",{context:s});case"HATCH_MYTHICAL":return u.t("achv:HATCH_MYTHICAL.description",{context:s});case"HATCH_SUB_LEGENDARY":return u.t("achv:HATCH_SUB_LEGENDARY.description",{context:s});case"HATCH_LEGENDARY":return u.t("achv:HATCH_LEGENDARY.description",{context:s});case"HATCH_SHINY":return u.t("achv:HATCH_SHINY.description",{context:s});case"HIDDEN_ABILITY":return u.t("achv:HIDDEN_ABILITY.description",{context:s});case"PERFECT_IVS":return u.t("achv:PERFECT_IVS.description",{context:s});case"CLASSIC_VICTORY":return u.t("achv:CLASSIC_VICTORY.description",{context:s});case"UNEVOLVED_CLASSIC_VICTORY":return u.t("achv:UNEVOLVED_CLASSIC_VICTORY.description",{context:s});case"MONO_GEN_ONE":return u.t("achv:MONO_GEN_ONE.description",{context:s});case"MONO_GEN_TWO":return u.t("achv:MONO_GEN_TWO.description",{context:s});case"MONO_GEN_THREE":return u.t("achv:MONO_GEN_THREE.description",{context:s});case"MONO_GEN_FOUR":return u.t("achv:MONO_GEN_FOUR.description",{context:s});case"MONO_GEN_FIVE":return u.t("achv:MONO_GEN_FIVE.description",{context:s});case"MONO_GEN_SIX":return u.t("achv:MONO_GEN_SIX.description",{context:s});case"MONO_GEN_SEVEN":return u.t("achv:MONO_GEN_SEVEN.description",{context:s});case"MONO_GEN_EIGHT":return u.t("achv:MONO_GEN_EIGHT.description",{context:s});case"MONO_GEN_NINE":return u.t("achv:MONO_GEN_NINE.description",{context:s});case"MONO_NORMAL":case"MONO_FIGHTING":case"MONO_FLYING":case"MONO_POISON":case"MONO_GROUND":case"MONO_ROCK":case"MONO_BUG":case"MONO_GHOST":case"MONO_STEEL":case"MONO_FIRE":case"MONO_WATER":case"MONO_GRASS":case"MONO_ELECTRIC":case"MONO_PSYCHIC":case"MONO_ICE":case"MONO_DRAGON":case"MONO_DARK":case"MONO_FAIRY":return u.t("achv:MonoType.description",{context:s,type:u.t(`pokemonInfo:Type.${E.slice(5)}`)});case"FRESH_START":return u.t("achv:FRESH_START.description",{context:s});case"INVERSE_BATTLE":return u.t("achv:INVERSE_BATTLE.description",{context:s});case"FLIP_STATS":return u.t("achv:FLIP_STATS.description",{context:s});case"FLIP_INVERSE":return u.t("achv:FLIP_INVERSE.description",{context:s});case"BREEDERS_IN_SPACE":return u.t("achv:BREEDERS_IN_SPACE.description",{context:s});default:return""}}N(f1,"getAchievementDescription");const Ct={_10K_MONEY:new Ha("10K_MONEY","",1e4,"nugget",10),_100K_MONEY:new Ha("100K_MONEY","",1e5,"big_nugget",25).setSecret(!0),_1M_MONEY:new Ha("1M_MONEY","",1e6,"relic_gold",50).setSecret(!0),_10M_MONEY:new Ha("10M_MONEY","",1e7,"coin_case",100).setSecret(!0),_250_DMG:new da("250_DMG","",250,"lucky_punch",10),_1000_DMG:new da("1000_DMG","",1e3,"lucky_punch_great",25).setSecret(!0),_2500_DMG:new da("2500_DMG","",2500,"lucky_punch_ultra",50).setSecret(!0),_10000_DMG:new da("10000_DMG","",1e4,"lucky_punch_master",100).setSecret(!0),_250_HEAL:new fa("250_HEAL","",250,"potion",10),_1000_HEAL:new fa("1000_HEAL","",1e3,"super_potion",25).setSecret(!0),_2500_HEAL:new fa("2500_HEAL","",2500,"hyper_potion",50).setSecret(!0),_10000_HEAL:new fa("10000_HEAL","",1e4,"max_potion",100).setSecret(!0),LV_100:new ar("LV_100","",100,"rare_candy",25).setSecret(),LV_250:new ar("LV_250","",250,"rarer_candy",50).setSecret(!0),LV_1000:new ar("LV_1000","",1e3,"candy_jar",100).setSecret(!0),_10_RIBBONS:new la("10_RIBBONS","",10,"bronze_ribbon",10),_25_RIBBONS:new la("25_RIBBONS","",25,"great_ribbon",25).setSecret(!0),_50_RIBBONS:new la("50_RIBBONS","",50,"ultra_ribbon",50).setSecret(!0),_75_RIBBONS:new la("75_RIBBONS","",75,"rogue_ribbon",75).setSecret(!0),_100_RIBBONS:new la("100_RIBBONS","",100,"master_ribbon",100).setSecret(!0),TRANSFER_MAX_STAT_STAGE:new BA("TRANSFER_MAX_STAT_STAGE","","TRANSFER_MAX_STAT_STAGE.description","baton",20),MAX_FRIENDSHIP:new BA("MAX_FRIENDSHIP","","MAX_FRIENDSHIP.description","soothe_bell",25),MEGA_EVOLVE:new BA("MEGA_EVOLVE","","MEGA_EVOLVE.description","mega_bracelet",50),GIGANTAMAX:new BA("GIGANTAMAX","","GIGANTAMAX.description","dynamax_band",50),TERASTALLIZE:new BA("TERASTALLIZE","","TERASTALLIZE.description","tera_orb",25),STELLAR_TERASTALLIZE:new BA("STELLAR_TERASTALLIZE","","STELLAR_TERASTALLIZE.description","stellar_tera_shard",25).setSecret(!0),SPLICE:new BA("SPLICE","","SPLICE.description","dna_splicers",10),MINI_BLACK_HOLE:new Zl("MINI_BLACK_HOLE","","MINI_BLACK_HOLE.description","mini_black_hole",25,E=>E instanceof hi).setSecret(),CATCH_MYTHICAL:new BA("CATCH_MYTHICAL","","CATCH_MYTHICAL.description","strange_ball",50).setSecret(),CATCH_SUB_LEGENDARY:new BA("CATCH_SUB_LEGENDARY","","CATCH_SUB_LEGENDARY.description","rb",75).setSecret(),CATCH_LEGENDARY:new BA("CATCH_LEGENDARY","","CATCH_LEGENDARY.description","mb",100).setSecret(),SEE_SHINY:new BA("SEE_SHINY","","SEE_SHINY.description","pb_gold",75),SHINY_PARTY:new BA("SHINY_PARTY","","SHINY_PARTY.description","shiny_charm",100).setSecret(!0),HATCH_MYTHICAL:new BA("HATCH_MYTHICAL","","HATCH_MYTHICAL.description","mystery_egg",75).setSecret(),HATCH_SUB_LEGENDARY:new BA("HATCH_SUB_LEGENDARY","","HATCH_SUB_LEGENDARY.description","oval_stone",100).setSecret(),HATCH_LEGENDARY:new BA("HATCH_LEGENDARY","","HATCH_LEGENDARY.description","lucky_egg",125).setSecret(),HATCH_SHINY:new BA("HATCH_SHINY","","HATCH_SHINY.description","golden_egg",100).setSecret(),HIDDEN_ABILITY:new BA("HIDDEN_ABILITY","","HIDDEN_ABILITY.description","ability_charm",75),PERFECT_IVS:new BA("PERFECT_IVS","","PERFECT_IVS.description","blunder_policy",100),CLASSIC_VICTORY:new BA("CLASSIC_VICTORY","","CLASSIC_VICTORY.description","relic_crown",150,E=>n.gameData.gameStats.sessionsWon===0),UNEVOLVED_CLASSIC_VICTORY:new BA("UNEVOLVED_CLASSIC_VICTORY","","UNEVOLVED_CLASSIC_VICTORY.description","eviolite",175,E=>n.getPlayerParty().some(A=>A.getSpeciesForm(!0).speciesId in bt)),MONO_GEN_ONE_VICTORY:new hA("MONO_GEN_ONE","","MONO_GEN_ONE.description","ribbon_gen1",100,E=>E instanceof $R&&E.value===1&&!n.gameMode.challenges.some(A=>[it.INVERSE_BATTLE,it.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_GEN_TWO_VICTORY:new hA("MONO_GEN_TWO","","MONO_GEN_TWO.description","ribbon_gen2",100,E=>E instanceof $R&&E.value===2&&!n.gameMode.challenges.some(A=>[it.INVERSE_BATTLE,it.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_GEN_THREE_VICTORY:new hA("MONO_GEN_THREE","","MONO_GEN_THREE.description","ribbon_gen3",100,E=>E instanceof $R&&E.value===3&&!n.gameMode.challenges.some(A=>[it.INVERSE_BATTLE,it.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_GEN_FOUR_VICTORY:new hA("MONO_GEN_FOUR","","MONO_GEN_FOUR.description","ribbon_gen4",100,E=>E instanceof $R&&E.value===4&&!n.gameMode.challenges.some(A=>[it.INVERSE_BATTLE,it.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_GEN_FIVE_VICTORY:new hA("MONO_GEN_FIVE","","MONO_GEN_FIVE.description","ribbon_gen5",100,E=>E instanceof $R&&E.value===5&&!n.gameMode.challenges.some(A=>[it.INVERSE_BATTLE,it.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_GEN_SIX_VICTORY:new hA("MONO_GEN_SIX","","MONO_GEN_SIX.description","ribbon_gen6",100,E=>E instanceof $R&&E.value===6&&!n.gameMode.challenges.some(A=>[it.INVERSE_BATTLE,it.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_GEN_SEVEN_VICTORY:new hA("MONO_GEN_SEVEN","","MONO_GEN_SEVEN.description","ribbon_gen7",100,E=>E instanceof $R&&E.value===7&&!n.gameMode.challenges.some(A=>[it.INVERSE_BATTLE,it.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_GEN_EIGHT_VICTORY:new hA("MONO_GEN_EIGHT","","MONO_GEN_EIGHT.description","ribbon_gen8",100,E=>E instanceof $R&&E.value===8&&!n.gameMode.challenges.some(A=>[it.INVERSE_BATTLE,it.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_GEN_NINE_VICTORY:new hA("MONO_GEN_NINE","","MONO_GEN_NINE.description","ribbon_gen9",100,E=>E instanceof $R&&E.value===9&&!n.gameMode.challenges.some(A=>[it.INVERSE_BATTLE,it.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_NORMAL:new hA("MONO_NORMAL","","MONO_NORMAL.description","silk_scarf",100,E=>E instanceof gE&&E.value===1&&!n.gameMode.challenges.some(A=>[it.INVERSE_BATTLE,it.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_FIGHTING:new hA("MONO_FIGHTING","","MONO_FIGHTING.description","black_belt",100,E=>E instanceof gE&&E.value===2&&!n.gameMode.challenges.some(A=>[it.INVERSE_BATTLE,it.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_FLYING:new hA("MONO_FLYING","","MONO_FLYING.description","sharp_beak",100,E=>E instanceof gE&&E.value===3&&!n.gameMode.challenges.some(A=>[it.INVERSE_BATTLE,it.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_POISON:new hA("MONO_POISON","","MONO_POISON.description","poison_barb",100,E=>E instanceof gE&&E.value===4&&!n.gameMode.challenges.some(A=>[it.INVERSE_BATTLE,it.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_GROUND:new hA("MONO_GROUND","","MONO_GROUND.description","soft_sand",100,E=>E instanceof gE&&E.value===5&&!n.gameMode.challenges.some(A=>[it.INVERSE_BATTLE,it.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_ROCK:new hA("MONO_ROCK","","MONO_ROCK.description","hard_stone",100,E=>E instanceof gE&&E.value===6&&!n.gameMode.challenges.some(A=>[it.INVERSE_BATTLE,it.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_BUG:new hA("MONO_BUG","","MONO_BUG.description","silver_powder",100,E=>E instanceof gE&&E.value===7&&!n.gameMode.challenges.some(A=>[it.INVERSE_BATTLE,it.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_GHOST:new hA("MONO_GHOST","","MONO_GHOST.description","spell_tag",100,E=>E instanceof gE&&E.value===8&&!n.gameMode.challenges.some(A=>[it.INVERSE_BATTLE,it.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_STEEL:new hA("MONO_STEEL","","MONO_STEEL.description","metal_coat",100,E=>E instanceof gE&&E.value===9&&!n.gameMode.challenges.some(A=>[it.INVERSE_BATTLE,it.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_FIRE:new hA("MONO_FIRE","","MONO_FIRE.description","charcoal",100,E=>E instanceof gE&&E.value===10&&!n.gameMode.challenges.some(A=>[it.INVERSE_BATTLE,it.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_WATER:new hA("MONO_WATER","","MONO_WATER.description","mystic_water",100,E=>E instanceof gE&&E.value===11&&!n.gameMode.challenges.some(A=>[it.INVERSE_BATTLE,it.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_GRASS:new hA("MONO_GRASS","","MONO_GRASS.description","miracle_seed",100,E=>E instanceof gE&&E.value===12&&!n.gameMode.challenges.some(A=>[it.INVERSE_BATTLE,it.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_ELECTRIC:new hA("MONO_ELECTRIC","","MONO_ELECTRIC.description","magnet",100,E=>E instanceof gE&&E.value===13&&!n.gameMode.challenges.some(A=>[it.INVERSE_BATTLE,it.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_PSYCHIC:new hA("MONO_PSYCHIC","","MONO_PSYCHIC.description","twisted_spoon",100,E=>E instanceof gE&&E.value===14&&!n.gameMode.challenges.some(A=>[it.INVERSE_BATTLE,it.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_ICE:new hA("MONO_ICE","","MONO_ICE.description","never_melt_ice",100,E=>E instanceof gE&&E.value===15&&!n.gameMode.challenges.some(A=>[it.INVERSE_BATTLE,it.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_DRAGON:new hA("MONO_DRAGON","","MONO_DRAGON.description","dragon_fang",100,E=>E instanceof gE&&E.value===16&&!n.gameMode.challenges.some(A=>[it.INVERSE_BATTLE,it.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_DARK:new hA("MONO_DARK","","MONO_DARK.description","black_glasses",100,E=>E instanceof gE&&E.value===17&&!n.gameMode.challenges.some(A=>[it.INVERSE_BATTLE,it.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_FAIRY:new hA("MONO_FAIRY","","MONO_FAIRY.description","fairy_feather",100,E=>E instanceof gE&&E.value===18&&!n.gameMode.challenges.some(A=>[it.INVERSE_BATTLE,it.FLIP_STAT].includes(A.id)&&A.value>0)),FRESH_START:new hA("FRESH_START","","FRESH_START.description","reviver_seed",100,E=>E instanceof rS&&E.value>0&&!n.gameMode.challenges.some(A=>[it.INVERSE_BATTLE,it.FLIP_STAT].includes(A.id)&&A.value>0)),INVERSE_BATTLE:new hA("INVERSE_BATTLE","","INVERSE_BATTLE.description","inverse",100,E=>E instanceof LS&&E.value>0),FLIP_STATS:new hA("FLIP_STATS","","FLIP_STATS.description","dubious_disc",100,E=>E instanceof Yr&&E.value>0),FLIP_INVERSE:new hA("FLIP_INVERSE","","FLIP_INVERSE.description","cracked_pot",100,E=>E instanceof Yr&&E.value>0&&n.gameMode.challenges.some(A=>A.id===it.INVERSE_BATTLE&&A.value>0)).setSecret(),BREEDERS_IN_SPACE:new BA("BREEDERS_IN_SPACE","","BREEDERS_IN_SPACE.description","moon_stone",50).setSecret()};function Mk(){const E=Object.keys(Ct);E.forEach((A,s)=>{Ct[A].id=A,Ct[A].hasParent&&(Ct[A].parentId=E[s-1])})}N(Mk,"initAchievements");var U=(E=>(E[E.UNKNOWN=0]="UNKNOWN",E[E.ACE_TRAINER=1]="ACE_TRAINER",E[E.ARTIST=2]="ARTIST",E[E.BACKERS=3]="BACKERS",E[E.BACKPACKER=4]="BACKPACKER",E[E.BAKER=5]="BAKER",E[E.BEAUTY=6]="BEAUTY",E[E.BIKER=7]="BIKER",E[E.BLACK_BELT=8]="BLACK_BELT",E[E.BREEDER=9]="BREEDER",E[E.CLERK=10]="CLERK",E[E.CYCLIST=11]="CYCLIST",E[E.DANCER=12]="DANCER",E[E.DEPOT_AGENT=13]="DEPOT_AGENT",E[E.DOCTOR=14]="DOCTOR",E[E.FIREBREATHER=15]="FIREBREATHER",E[E.FISHERMAN=16]="FISHERMAN",E[E.GUITARIST=17]="GUITARIST",E[E.HARLEQUIN=18]="HARLEQUIN",E[E.HIKER=19]="HIKER",E[E.HOOLIGANS=20]="HOOLIGANS",E[E.HOOPSTER=21]="HOOPSTER",E[E.INFIELDER=22]="INFIELDER",E[E.JANITOR=23]="JANITOR",E[E.LINEBACKER=24]="LINEBACKER",E[E.MAID=25]="MAID",E[E.MUSICIAN=26]="MUSICIAN",E[E.HEX_MANIAC=27]="HEX_MANIAC",E[E.NURSERY_AIDE=28]="NURSERY_AIDE",E[E.OFFICER=29]="OFFICER",E[E.PARASOL_LADY=30]="PARASOL_LADY",E[E.PILOT=31]="PILOT",E[E.POKEFAN=32]="POKEFAN",E[E.PRESCHOOLER=33]="PRESCHOOLER",E[E.PSYCHIC=34]="PSYCHIC",E[E.RANGER=35]="RANGER",E[E.RICH=36]="RICH",E[E.RICH_KID=37]="RICH_KID",E[E.ROUGHNECK=38]="ROUGHNECK",E[E.SAILOR=39]="SAILOR",E[E.SCIENTIST=40]="SCIENTIST",E[E.SMASHER=41]="SMASHER",E[E.SNOW_WORKER=42]="SNOW_WORKER",E[E.STRIKER=43]="STRIKER",E[E.SCHOOL_KID=44]="SCHOOL_KID",E[E.SWIMMER=45]="SWIMMER",E[E.TWINS=46]="TWINS",E[E.VETERAN=47]="VETERAN",E[E.WAITER=48]="WAITER",E[E.WORKER=49]="WORKER",E[E.YOUNGSTER=50]="YOUNGSTER",E[E.ROCKET_GRUNT=51]="ROCKET_GRUNT",E[E.ARCHER=52]="ARCHER",E[E.ARIANA=53]="ARIANA",E[E.PROTON=54]="PROTON",E[E.PETREL=55]="PETREL",E[E.MAGMA_GRUNT=56]="MAGMA_GRUNT",E[E.TABITHA=57]="TABITHA",E[E.COURTNEY=58]="COURTNEY",E[E.AQUA_GRUNT=59]="AQUA_GRUNT",E[E.MATT=60]="MATT",E[E.SHELLY=61]="SHELLY",E[E.GALACTIC_GRUNT=62]="GALACTIC_GRUNT",E[E.JUPITER=63]="JUPITER",E[E.MARS=64]="MARS",E[E.SATURN=65]="SATURN",E[E.PLASMA_GRUNT=66]="PLASMA_GRUNT",E[E.ZINZOLIN=67]="ZINZOLIN",E[E.ROOD=68]="ROOD",E[E.FLARE_GRUNT=69]="FLARE_GRUNT",E[E.BRYONY=70]="BRYONY",E[E.XEROSIC=71]="XEROSIC",E[E.AETHER_GRUNT=72]="AETHER_GRUNT",E[E.FABA=73]="FABA",E[E.SKULL_GRUNT=74]="SKULL_GRUNT",E[E.PLUMERIA=75]="PLUMERIA",E[E.MACRO_GRUNT=76]="MACRO_GRUNT",E[E.OLEANA=77]="OLEANA",E[E.STAR_GRUNT=78]="STAR_GRUNT",E[E.GIACOMO=79]="GIACOMO",E[E.MELA=80]="MELA",E[E.ATTICUS=81]="ATTICUS",E[E.ORTEGA=82]="ORTEGA",E[E.ERI=83]="ERI",E[E.ROCKET_BOSS_GIOVANNI_1=84]="ROCKET_BOSS_GIOVANNI_1",E[E.ROCKET_BOSS_GIOVANNI_2=85]="ROCKET_BOSS_GIOVANNI_2",E[E.MAXIE=86]="MAXIE",E[E.MAXIE_2=87]="MAXIE_2",E[E.ARCHIE=88]="ARCHIE",E[E.ARCHIE_2=89]="ARCHIE_2",E[E.CYRUS=90]="CYRUS",E[E.CYRUS_2=91]="CYRUS_2",E[E.GHETSIS=92]="GHETSIS",E[E.GHETSIS_2=93]="GHETSIS_2",E[E.LYSANDRE=94]="LYSANDRE",E[E.LYSANDRE_2=95]="LYSANDRE_2",E[E.LUSAMINE=96]="LUSAMINE",E[E.LUSAMINE_2=97]="LUSAMINE_2",E[E.GUZMA=98]="GUZMA",E[E.GUZMA_2=99]="GUZMA_2",E[E.ROSE=100]="ROSE",E[E.ROSE_2=101]="ROSE_2",E[E.PENNY=102]="PENNY",E[E.PENNY_2=103]="PENNY_2",E[E.BUCK=104]="BUCK",E[E.CHERYL=105]="CHERYL",E[E.MARLEY=106]="MARLEY",E[E.MIRA=107]="MIRA",E[E.RILEY=108]="RILEY",E[E.VICTOR=109]="VICTOR",E[E.VICTORIA=110]="VICTORIA",E[E.VIVI=111]="VIVI",E[E.VICKY=112]="VICKY",E[E.VITO=113]="VITO",E[E.BUG_TYPE_SUPERFAN=114]="BUG_TYPE_SUPERFAN",E[E.EXPERT_POKEMON_BREEDER=115]="EXPERT_POKEMON_BREEDER",E[E.FUTURE_SELF_M=116]="FUTURE_SELF_M",E[E.FUTURE_SELF_F=117]="FUTURE_SELF_F",E[E.BROCK=200]="BROCK",E[E.MISTY=201]="MISTY",E[E.LT_SURGE=202]="LT_SURGE",E[E.ERIKA=203]="ERIKA",E[E.JANINE=204]="JANINE",E[E.SABRINA=205]="SABRINA",E[E.BLAINE=206]="BLAINE",E[E.GIOVANNI=207]="GIOVANNI",E[E.FALKNER=208]="FALKNER",E[E.BUGSY=209]="BUGSY",E[E.WHITNEY=210]="WHITNEY",E[E.MORTY=211]="MORTY",E[E.CHUCK=212]="CHUCK",E[E.JASMINE=213]="JASMINE",E[E.PRYCE=214]="PRYCE",E[E.CLAIR=215]="CLAIR",E[E.ROXANNE=216]="ROXANNE",E[E.BRAWLY=217]="BRAWLY",E[E.WATTSON=218]="WATTSON",E[E.FLANNERY=219]="FLANNERY",E[E.NORMAN=220]="NORMAN",E[E.WINONA=221]="WINONA",E[E.TATE=222]="TATE",E[E.LIZA=223]="LIZA",E[E.JUAN=224]="JUAN",E[E.ROARK=225]="ROARK",E[E.GARDENIA=226]="GARDENIA",E[E.MAYLENE=227]="MAYLENE",E[E.CRASHER_WAKE=228]="CRASHER_WAKE",E[E.FANTINA=229]="FANTINA",E[E.BYRON=230]="BYRON",E[E.CANDICE=231]="CANDICE",E[E.VOLKNER=232]="VOLKNER",E[E.CILAN=233]="CILAN",E[E.CHILI=234]="CHILI",E[E.CRESS=235]="CRESS",E[E.CHEREN=236]="CHEREN",E[E.LENORA=237]="LENORA",E[E.ROXIE=238]="ROXIE",E[E.BURGH=239]="BURGH",E[E.ELESA=240]="ELESA",E[E.CLAY=241]="CLAY",E[E.SKYLA=242]="SKYLA",E[E.BRYCEN=243]="BRYCEN",E[E.DRAYDEN=244]="DRAYDEN",E[E.MARLON=245]="MARLON",E[E.VIOLA=246]="VIOLA",E[E.GRANT=247]="GRANT",E[E.KORRINA=248]="KORRINA",E[E.RAMOS=249]="RAMOS",E[E.CLEMONT=250]="CLEMONT",E[E.VALERIE=251]="VALERIE",E[E.OLYMPIA=252]="OLYMPIA",E[E.WULFRIC=253]="WULFRIC",E[E.MILO=254]="MILO",E[E.NESSA=255]="NESSA",E[E.KABU=256]="KABU",E[E.BEA=257]="BEA",E[E.ALLISTER=258]="ALLISTER",E[E.OPAL=259]="OPAL",E[E.BEDE=260]="BEDE",E[E.GORDIE=261]="GORDIE",E[E.MELONY=262]="MELONY",E[E.PIERS=263]="PIERS",E[E.MARNIE=264]="MARNIE",E[E.RAIHAN=265]="RAIHAN",E[E.KATY=266]="KATY",E[E.BRASSIUS=267]="BRASSIUS",E[E.IONO=268]="IONO",E[E.KOFU=269]="KOFU",E[E.LARRY=270]="LARRY",E[E.RYME=271]="RYME",E[E.TULIP=272]="TULIP",E[E.GRUSHA=273]="GRUSHA",E[E.LORELEI=300]="LORELEI",E[E.BRUNO=301]="BRUNO",E[E.AGATHA=302]="AGATHA",E[E.LANCE=303]="LANCE",E[E.WILL=304]="WILL",E[E.KOGA=305]="KOGA",E[E.KAREN=306]="KAREN",E[E.SIDNEY=307]="SIDNEY",E[E.PHOEBE=308]="PHOEBE",E[E.GLACIA=309]="GLACIA",E[E.DRAKE=310]="DRAKE",E[E.AARON=311]="AARON",E[E.BERTHA=312]="BERTHA",E[E.FLINT=313]="FLINT",E[E.LUCIAN=314]="LUCIAN",E[E.SHAUNTAL=315]="SHAUNTAL",E[E.MARSHAL=316]="MARSHAL",E[E.GRIMSLEY=317]="GRIMSLEY",E[E.CAITLIN=318]="CAITLIN",E[E.MALVA=319]="MALVA",E[E.SIEBOLD=320]="SIEBOLD",E[E.WIKSTROM=321]="WIKSTROM",E[E.DRASNA=322]="DRASNA",E[E.HALA=323]="HALA",E[E.MOLAYNE=324]="MOLAYNE",E[E.OLIVIA=325]="OLIVIA",E[E.ACEROLA=326]="ACEROLA",E[E.KAHILI=327]="KAHILI",E[E.MARNIE_ELITE=328]="MARNIE_ELITE",E[E.NESSA_ELITE=329]="NESSA_ELITE",E[E.BEA_ELITE=330]="BEA_ELITE",E[E.ALLISTER_ELITE=331]="ALLISTER_ELITE",E[E.RAIHAN_ELITE=332]="RAIHAN_ELITE",E[E.RIKA=333]="RIKA",E[E.POPPY=334]="POPPY",E[E.LARRY_ELITE=335]="LARRY_ELITE",E[E.HASSEL=336]="HASSEL",E[E.CRISPIN=337]="CRISPIN",E[E.AMARYS=338]="AMARYS",E[E.LACEY=339]="LACEY",E[E.DRAYTON=340]="DRAYTON",E[E.BLUE=350]="BLUE",E[E.RED=351]="RED",E[E.LANCE_CHAMPION=352]="LANCE_CHAMPION",E[E.STEVEN=353]="STEVEN",E[E.WALLACE=354]="WALLACE",E[E.CYNTHIA=355]="CYNTHIA",E[E.ALDER=356]="ALDER",E[E.IRIS=357]="IRIS",E[E.DIANTHA=358]="DIANTHA",E[E.HAU=359]="HAU",E[E.LEON=360]="LEON",E[E.GEETA=361]="GEETA",E[E.NEMONA=362]="NEMONA",E[E.KIERAN=363]="KIERAN",E[E.RIVAL=375]="RIVAL",E[E.RIVAL_2=376]="RIVAL_2",E[E.RIVAL_3=377]="RIVAL_3",E[E.RIVAL_4=378]="RIVAL_4",E[E.RIVAL_5=379]="RIVAL_5",E[E.RIVAL_6=380]="RIVAL_6",E))(U||{}),rE=(E=>(E[E.REGULAR=0]="REGULAR",E[E.PLUS=1]="PLUS",E[E.PREMIUM=2]="PREMIUM",E[E.GOLDEN=3]="GOLDEN",E))(rE||{});const OB=class OB{constructor(A,s,R){this.description=s,this.voucherType=A,this.conditionFunc=R}validate(A){return!this.conditionFunc||this.conditionFunc(A)}getName(A){return Xl(this.voucherType)}getIconImage(){return wn(this.voucherType)}getTier(){switch(this.voucherType){case 0:return BL.COMMON;case 1:return BL.GREAT;case 2:return BL.ULTRA;case 3:return BL.ROGUE}}};N(OB,"Voucher");let vT=OB;function Xl(E){switch(E){case 0:return u.t("voucher:eggVoucher");case 1:return u.t("voucher:eggVoucherPlus");case 2:return u.t("voucher:eggVoucherPremium");case 3:return u.t("voucher:eggVoucherGold")}}N(Xl,"getVoucherTypeName");function wn(E){switch(E){case 0:return"coupon";case 1:return"pair_of_tickets";case 2:return"mystic_ticket";case 3:return"golden_mystic_ticket"}}N(wn,"getVoucherTypeIcon");const is={};function _k(){for(const s of[Ct.CLASSIC_VICTORY]){const R=s.score>=150?3:s.score>=100?2:s.score>=75?1:0;is[s.id]=new vT(R,f1(s.localizationKey))}const E=Object.keys(QA).filter(s=>QA[s].isBoss&&QA[s].getDerivedType()!==U.RIVAL&&QA[s].hasVoucher);for(const s of E){const R=QA[s].moneyMultiplier<10?1:2,a=U[s],i=QA[s].name,r=QA[s],L=r.title?` (${r.title})`:"";is[a]=new vT(R,`${u.t("voucher:defeatTrainer",{trainerName:i})} ${L}`)}const A=Object.keys(is);for(const s of A)is[s].id=s}N(_k,"initVouchers");var HE=(E=>(E[E.PLAYER=0]="PLAYER",E[E.WILD=1]="WILD",E[E.TRAINER=2]="TRAINER",E[E.ENEMY_BUFF=3]="ENEMY_BUFF",E[E.DAILY_STARTER=4]="DAILY_STARTER",E))(HE||{});const nB=class nB{constructor(A,s,R,a,i){this.localeKey=A,this.iconImage=s,this.group=a,this.soundName=i??"se/restore",this.newModifierFunc=R}get name(){return u.t(`${this.localeKey}.name`)}getDescription(){return u.t(`${this.localeKey}.description`)}setTier(A){this.tier=A}getOrInferTier(A=0){if(this.tier)return this.tier;if(!this.id)return null;let s;switch(A){case 0:s=[A,2,1];break;case 1:s=[A,0,2];break;case 2:s=[A,0,1];break;default:s=[A];break}for(const R of s){const a=ZT(R);for(const i of DE(w))if(a.hasOwnProperty(i)&&a[i].find(r=>r.modifierType.id===this.id))return this.tier=i}return null}withIdFromFunc(A){return this.id=Object.keys(J).find(s=>J[s]===A),this}withTierFromPool(A=0,s,R=0){let a;for(const i of Object.values(ZT(A)))for(const r of i)if(this.id===r.modifierType.id){let L;if(r.weight instanceof Function?L=s?r.weight(s,R):0:L=r.weight,L>0)return this.tier=r.modifierType.tier,this;ve(a)&&(a=r.modifierType.tier)}return a&&(this.tier=a),this}newModifier(...A){return this.newModifierFunc&&this.newModifierFunc(this,A)}};N(nB,"ModifierType");let RA=nB;const IB=class IB extends RA{constructor(A){super(null,null,null),this.genTypeFunc=A}generateType(A,s){const R=this.genTypeFunc(A,s);return R&&(R.id=this.id,R.setTier(this.tier)),R}};N(IB,"ModifierTypeGenerator");let cE=IB;const aB=class aB extends RA{constructor(A,s,R){super("",A,(a,i)=>new HD(this,s,R),"pb","se/pb_bounce_1"),this.pokeballType=s,this.count=R}get name(){return u.t("modifierType:ModifierType.AddPokeballModifierType.name",{modifierCount:this.count,pokeballName:xl(this.pokeballType)})}getDescription(){return u.t("modifierType:ModifierType.AddPokeballModifierType.description",{modifierCount:this.count,pokeballName:xl(this.pokeballType),catchRate:bl(this.pokeballType)>-1?`${bl(this.pokeballType)}x`:"100%",pokeballAmount:`${n.pokeballCounts[this.pokeballType]}`})}};N(aB,"AddPokeballModifierType");let Ca=aB;const iB=class iB extends RA{constructor(A,s){super("",wn(A),(R,a)=>new dD(this,A,s),"voucher"),this.count=s,this.voucherType=A}get name(){return u.t("modifierType:ModifierType.AddVoucherModifierType.name",{modifierCount:this.count,voucherTypeName:Xl(this.voucherType)})}getDescription(){return u.t("modifierType:ModifierType.AddVoucherModifierType.description",{modifierCount:this.count,voucherTypeName:Xl(this.voucherType)})}};N(iB,"AddVoucherModifierType");let WL=iB;const rB=class rB extends RA{constructor(A,s,R,a,i,r){super(A,s,R,i,r),this.selectFilter=a}};N(rB,"PokemonModifierType");let _R=rB;const LB=class LB extends _R{constructor(A,s,R,a,i){super(A,s,R,r=>{const L=this.newModifier(r),o=n.findModifier(C=>C instanceof dt&&C.pokemonId===r.id&&C.matchType(L)),l=L.getMaxStackCount();return l?o&&o.stackCount===l?u.t("modifierType:ModifierType.PokemonHeldItemModifierType.extra.tooMany",{pokemonName:te(r)}):null:u.t("modifierType:ModifierType.PokemonHeldItemModifierType.extra.inoperable",{pokemonName:te(r)})},a,i)}newModifier(...A){return super.newModifier(...A)}};N(LB,"PokemonHeldItemModifierType");let DA=LB;const NB=class NB extends _R{constructor(A,s,R,a,i=!1,r,L,o){super(A,s,r||((l,C)=>new na(this,C[0].id,this.restorePoints,this.restorePercent,this.healStatus,!1)),L||(l=>!l.hp||l.isFullHp()&&(!this.healStatus||!l.status&&!l.getTag(y.CONFUSED))?VE.NoEffectMessage:null),o||"potion"),this.restorePoints=R,this.restorePercent=a,this.healStatus=i}getDescription(){return this.restorePoints?u.t("modifierType:ModifierType.PokemonHpRestoreModifierType.description",{restorePoints:this.restorePoints,restorePercent:this.restorePercent}):this.healStatus?u.t("modifierType:ModifierType.PokemonHpRestoreModifierType.extra.fullyWithStatus"):u.t("modifierType:ModifierType.PokemonHpRestoreModifierType.extra.fully")}};N(NB,"PokemonHpRestoreModifierType");let BI=NB;const TB=class TB extends BI{constructor(A,s,R){super(A,s,0,R,!1,(a,i)=>new na(this,i[0].id,0,this.restorePercent,!1,!0),a=>a.isFainted()?null:VE.NoEffectMessage,"revive"),this.selectFilter=a=>a.hp?VE.NoEffectMessage:null}getDescription(){return u.t("modifierType:ModifierType.PokemonReviveModifierType.description",{restorePercent:this.restorePercent})}};N(TB,"PokemonReviveModifierType");let Ql=TB;const SB=class SB extends _R{constructor(A,s){super(A,s,(R,a)=>new BD(this,a[0].id),R=>!R.hp||!R.status&&!R.getTag(y.CONFUSED)?VE.NoEffectMessage:null)}getDescription(){return u.t("modifierType:ModifierType.PokemonStatusHealModifierType.description")}};N(SB,"PokemonStatusHealModifierType");let W_=SB;const oB=class oB extends _R{constructor(A,s,R,a,i,r){super(A,s,R,a,r),this.moveSelectFilter=i}};N(oB,"PokemonMoveModifierType");let hr=oB;const lB=class lB extends hr{constructor(A,s,R){super(A,s,(a,i)=>new gD(this,i[0].id,i[1],this.restorePoints),a=>null,a=>a.ppUsed?null:VE.NoEffectMessage,"ether"),this.restorePoints=R}getDescription(){return this.restorePoints>-1?u.t("modifierType:ModifierType.PokemonPpRestoreModifierType.description",{restorePoints:this.restorePoints}):u.t("modifierType:ModifierType.PokemonPpRestoreModifierType.extra.fully")}};N(lB,"PokemonPpRestoreModifierType");let VT=lB;const CB=class CB extends _R{constructor(A,s,R){super(A,s,(a,i)=>new KD(this,i[0].id,this.restorePoints),a=>a.getMoveset().filter(i=>i==null?void 0:i.ppUsed).length?null:VE.NoEffectMessage,"elixir"),this.restorePoints=R}getDescription(){return this.restorePoints>-1?u.t("modifierType:ModifierType.PokemonAllMovePpRestoreModifierType.description",{restorePoints:this.restorePoints}):u.t("modifierType:ModifierType.PokemonAllMovePpRestoreModifierType.extra.fully")}};N(CB,"PokemonAllMovePpRestoreModifierType");let Jl=CB;const UB=class UB extends hr{constructor(A,s,R){super(A,s,(a,i)=>new mD(this,i[0].id,i[1],this.upPoints),a=>null,a=>a.getMove().pp<5||a.ppUp>=3||a.maxPpOverride?VE.NoEffectMessage:null,"ppUp"),this.upPoints=R}getDescription(){return u.t("modifierType:ModifierType.PokemonPpUpModifierType.description",{upPoints:this.upPoints})}};N(UB,"PokemonPpUpModifierType");let xT=UB;const uB=class uB extends _R{constructor(A){var s;super("",`mint_${((s=lO(K).find(R=>xo(A,K[R])>1))==null?void 0:s.toLowerCase())||"neutral"}`,(R,a)=>new FD(this,a[0].id,this.nature),R=>R.getNature()===this.nature?VE.NoEffectMessage:null,"mint"),this.nature=A}get name(){return u.t("modifierType:ModifierType.PokemonNatureChangeModifierType.name",{natureName:$O(this.nature)})}getDescription(){return u.t("modifierType:ModifierType.PokemonNatureChangeModifierType.description",{natureName:$O(this.nature,!0,!0,!0)})}};N(uB,"PokemonNatureChangeModifierType");let $l=uB;const DB=class DB extends _R{constructor(A,s,R){super(A,s,(a,i)=>new uo(a,i[0].id,i[1]),a=>a.getLearnableLevelMoves().length?null:VE.NoEffectMessage,R)}};N(DB,"RememberMoveModifierType");let ir=DB;const MB=class MB extends RA{constructor(A,s,R){super(A,s,(a,i)=>new EL(this,R),"lure"),this.maxBattles=R}getDescription(){return u.t("modifierType:ModifierType.DoubleBattleChanceBoosterModifierType.description",{battleCount:this.maxBattles})}};N(MB,"DoubleBattleChanceBoosterModifierType");let YL=MB;const _B=class _B extends RA{constructor(A){const s=nC.items[A];super("",s,(R,a)=>new sL(this,this.stat,5)),this.stat=A,this.nameKey=s,this.quantityKey=A!==K.ACC?"percentage":"stage"}get name(){return u.t(`modifierType:TempStatStageBoosterItem.${this.nameKey}`)}getDescription(){return u.t("modifierType:ModifierType.TempStatStageBoosterModifierType.description",{stat:u.t(hE(this.stat)),amount:u.t(`modifierType:ModifierType.TempStatStageBoosterModifierType.extra.${this.quantityKey}`)})}getPregenArgs(){return[this.stat]}};N(_B,"TempStatStageBoosterModifierType");let zl=_B;const PB=class PB extends DA{constructor(A){super("",`${_t[A].toLowerCase()}_berry`,(s,R)=>new CE(s,R[0].id,A),"berry"),this.berryType=A}get name(){return S1(this.berryType)}getDescription(){return a$(this.berryType)}getPregenArgs(){return[this.berryType]}};N(PB,"BerryModifierType");let bT=PB;var Y_=(E=>(E[E.SILK_SCARF=0]="SILK_SCARF",E[E.BLACK_BELT=1]="BLACK_BELT",E[E.SHARP_BEAK=2]="SHARP_BEAK",E[E.POISON_BARB=3]="POISON_BARB",E[E.SOFT_SAND=4]="SOFT_SAND",E[E.HARD_STONE=5]="HARD_STONE",E[E.SILVER_POWDER=6]="SILVER_POWDER",E[E.SPELL_TAG=7]="SPELL_TAG",E[E.METAL_COAT=8]="METAL_COAT",E[E.CHARCOAL=9]="CHARCOAL",E[E.MYSTIC_WATER=10]="MYSTIC_WATER",E[E.MIRACLE_SEED=11]="MIRACLE_SEED",E[E.MAGNET=12]="MAGNET",E[E.TWISTED_SPOON=13]="TWISTED_SPOON",E[E.NEVER_MELT_ICE=14]="NEVER_MELT_ICE",E[E.DRAGON_FANG=15]="DRAGON_FANG",E[E.BLACK_GLASSES=16]="BLACK_GLASSES",E[E.FAIRY_FEATHER=17]="FAIRY_FEATHER",E))(Y_||{});const GB=class GB extends DA{constructor(A,s){var R;super("",`${(R=Y_[A])==null?void 0:R.toLowerCase()}`,(a,i)=>new Pn(this,i[0].id,A,s)),this.moveType=A,this.boostPercent=s}get name(){var A;return u.t(`modifierType:AttackTypeBoosterItem.${(A=Y_[this.moveType])==null?void 0:A.toLowerCase()}`)}getDescription(){return u.t("modifierType:ModifierType.AttackTypeBoosterModifierType.description",{moveType:u.t(`pokemonInfo:Type.${I[this.moveType]}`)})}getPregenArgs(){return[this.moveType]}};N(GB,"AttackTypeBoosterModifierType");let ql=GB;const cB=class cB extends DA{constructor(A){const s=IC.items[A];super(`modifierType:SpeciesBoosterItem.${A}`,A.toLowerCase(),(R,a)=>new Di(R,a[0].id,s.stats,s.multiplier,s.species)),this.key=A}getPregenArgs(){return[this.key]}};N(cB,"SpeciesStatBoosterModifierType");let jl=cB;const hB=class hB extends _R{constructor(A,s){super(A,s,(R,a)=>new Uo(this,a[0].id),R=>null)}getDescription(){let A=1;const s=n.modifiers.find(R=>R instanceof Oa);return s&&(A+=s.stackCount),u.t("modifierType:ModifierType.PokemonLevelIncrementModifierType.description",{levels:A})}};N(hB,"PokemonLevelIncrementModifierType");let y_=hB;const HB=class HB extends RA{constructor(A,s){super(A,s,(R,a)=>new Uo(this,-1))}getDescription(){let A=1;const s=n.modifiers.find(R=>R instanceof Oa);return s&&(A+=s.stackCount),u.t("modifierType:ModifierType.AllPokemonLevelIncrementModifierType.description",{levels:A})}};N(HB,"AllPokemonLevelIncrementModifierType");let w_=HB;const dB=class dB extends DA{constructor(A){const s=OC.items[A];super("",s,(R,a)=>new ro(this,a[0].id,this.stat)),this.stat=A,this.key=s}get name(){return u.t(`modifierType:BaseStatBoosterItem.${this.key}`)}getDescription(){return u.t("modifierType:ModifierType.BaseStatBoosterModifierType.description",{stat:u.t(hE(this.stat))})}getPregenArgs(){return[this.stat]}};N(dB,"BaseStatBoosterModifierType");let eC=dB;const fB=class fB extends DA{constructor(A){super("modifierType:ModifierType.MYSTERY_ENCOUNTER_SHUCKLE_JUICE","berry_juice",(s,R)=>new No(this,R[0].id,this.statModifier)),this.statModifier=A}getDescription(){return u.t("modifierType:ModifierType.PokemonBaseStatTotalModifierType.description",{increaseDecrease:u.t(this.statModifier>=0?"modifierType:ModifierType.PokemonBaseStatTotalModifierType.extra.increase":"modifierType:ModifierType.PokemonBaseStatTotalModifierType.extra.decrease"),blessCurse:u.t(this.statModifier>=0?"modifierType:ModifierType.PokemonBaseStatTotalModifierType.extra.blessed":"modifierType:ModifierType.PokemonBaseStatTotalModifierType.extra.cursed"),statValue:this.statModifier})}getPregenArgs(){return[this.statModifier]}};N(fB,"PokemonBaseStatTotalModifierType");let tC=fB;const BB=class BB extends DA{constructor(A,s){super("modifierType:ModifierType.MYSTERY_ENCOUNTER_OLD_GATEAU","old_gateau",(R,a)=>new To(this,a[0].id,this.statModifier,this.stats)),this.statModifier=A,this.stats=s}getDescription(){return u.t("modifierType:ModifierType.PokemonBaseStatFlatModifierType.description",{stats:this.stats.map(A=>u.t(hE(A))).join("/"),statValue:this.statModifier})}getPregenArgs(){return[this.statModifier,this.stats]}};N(BB,"PokemonBaseStatFlatModifierType");let AC=BB;const gB=class gB extends RA{constructor(A,s,R,a){super(A,s,a||((i,r)=>new na(this,-1,0,100,!1))),this.descriptionKey=R}getDescription(){return u.t(`${this.descriptionKey||"modifierType:ModifierType.AllPokemonFullHpRestoreModifierType"}.description`)}};N(gB,"AllPokemonFullHpRestoreModifierType");let v_=gB;const KB=class KB extends v_{constructor(A,s){super(A,s,"modifierType:ModifierType.AllPokemonFullReviveModifierType",(R,a)=>new na(this,-1,0,100,!1,!0))}};N(KB,"AllPokemonFullReviveModifierType");let V_=KB;const mB=class mB extends RA{constructor(A,s,R,a){super(A,s,(i,r)=>new YD(this,R),"money","se/buy"),this.moneyMultiplier=R,this.moneyMultiplierDescriptorKey=a}getDescription(){const A=new Et(n.getWaveMoneyAmount(this.moneyMultiplier));n.applyModifiers(IO,!0,A);const s=vo(n.moneyFormat,A.value);return u.t("modifierType:ModifierType.MoneyRewardModifierType.description",{moneyMultiplier:u.t(this.moneyMultiplierDescriptorKey),moneyAmount:s})}};N(mB,"MoneyRewardModifierType");let yL=mB;const FB=class FB extends RA{constructor(A,s,R){super(A,s,()=>new LL(this,R)),this.boostPercent=R}getDescription(){return u.t("modifierType:ModifierType.ExpBoosterModifierType.description",{boostPercent:this.boostPercent})}};N(FB,"ExpBoosterModifierType");let wL=FB;const pB=class pB extends DA{constructor(A,s,R){super(A,s,(a,i)=>new _o(this,i[0].id,R)),this.boostPercent=R}getDescription(){return u.t("modifierType:ModifierType.PokemonExpBoosterModifierType.description",{boostPercent:this.boostPercent})}};N(pB,"PokemonExpBoosterModifierType");let EC=pB;const WB=class WB extends DA{constructor(A,s){super(A,s,(R,a)=>new co(this,a[0].id))}getDescription(){return u.t("modifierType:ModifierType.PokemonFriendshipBoosterModifierType.description")}};N(WB,"PokemonFriendshipBoosterModifierType");let x_=WB;const YB=class YB extends DA{constructor(A,s,R,a,i){super(A,s,(r,L)=>new Ho(this,L[0].id,R),a,i),this.amount=R}getDescription(){return u.t("modifierType:ModifierType.PokemonMoveAccuracyBoosterModifierType.description",{accuracyAmount:this.amount})}};N(YB,"PokemonMoveAccuracyBoosterModifierType");let b_=YB;const yB=class yB extends DA{constructor(A,s){super(A,s,(R,a)=>new RI(R,a[0].id))}getDescription(){return u.t("modifierType:ModifierType.PokemonMultiHitModifierType.description")}};N(yB,"PokemonMultiHitModifierType");let k_=yB;const wB=class wB extends _R{constructor(A){super("",`tm_${I[we[A].type].toLowerCase()}`,(s,R)=>new pD(this,R[0].id),s=>s.compatibleTms.indexOf(A)===-1||s.getMoveset().filter(R=>(R==null?void 0:R.moveId)===A).length?VE.NoEffectMessage:null,"tm"),this.moveId=A}get name(){return u.t("modifierType:ModifierType.TmModifierType.name",{moveId:Dn(Object.keys(ja).indexOf(this.moveId.toString())+1,3),moveName:we[this.moveId].name})}getDescription(){return u.t(n.enableMoveInfo?"modifierType:ModifierType.TmModifierTypeWithInfo.description":"modifierType:ModifierType.TmModifierType.description",{moveName:we[this.moveId].name})}};N(wB,"TmModifierType");let ei=wB;const vB=class vB extends _R{constructor(A){super("",Dr[A].toLowerCase(),(s,R)=>new WD(this,R[0].id),s=>bt.hasOwnProperty(s.species.speciesId)&&bt[s.species.speciesId].filter(R=>R.item===this.evolutionItem&&(!R.condition||R.condition.predicate(s))&&(R.preFormKey===null||R.preFormKey===s.getFormKey())).length&&s.getFormKey()!==Ue.GIGANTAMAX||s.isFusion()&&s.fusionSpecies&&bt.hasOwnProperty(s.fusionSpecies.speciesId)&&bt[s.fusionSpecies.speciesId].filter(R=>R.item===this.evolutionItem&&(!R.condition||R.condition.predicate(s))&&(R.preFormKey===null||R.preFormKey===s.getFusionFormKey())).length&&s.getFusionFormKey()!==Ue.GIGANTAMAX?null:VE.NoEffectMessage),this.evolutionItem=A}get name(){return u.t(`modifierType:EvolutionItem.${Dr[this.evolutionItem]}`)}getDescription(){return u.t("modifierType:ModifierType.EvolutionItemModifierType.description")}getPregenArgs(){return[this.evolutionItem]}};N(vB,"EvolutionItemModifierType");let sC=vB;const VB=class VB extends _R{constructor(A){super("",lR[A].toLowerCase(),(s,R)=>new UR(this,R[0].id,A,!0),s=>JO.hasOwnProperty(s.species.speciesId)&&JO[s.species.speciesId].filter(R=>R.trigger.hasTriggerType(he)&&R.preFormKey===s.getFormKey()).map(R=>R.findTrigger(he)).flat().flatMap(R=>R.item).includes(this.formChangeItem)?null:VE.NoEffectMessage),this.formChangeItem=A}get name(){return u.t(`modifierType:FormChangeItem.${lR[this.formChangeItem]}`)}getDescription(){return u.t("modifierType:ModifierType.FormChangeItemModifierType.description")}getPregenArgs(){return[this.formChangeItem]}};N(VB,"FormChangeItemModifierType");let kT=VB;const xB=class xB extends _R{constructor(A,s){super(A,s,(R,a)=>new Do(this,a[0].id,a[1].id),R=>R.isFusion()?VE.NoEffectMessage:null)}getDescription(){return u.t("modifierType:ModifierType.FusePokemonModifierType.description")}};N(xB,"FusePokemonModifierType");let RC=xB;const bB=class bB extends cE{constructor(){super((A,s)=>{if(s&&s.length===1&&s[0]in I)return new ql(s[0],20);const R=A.map(l=>l.getMoveset().map(C=>C==null?void 0:C.getMove()).filter(C=>C instanceof g).map(C=>C.type)).flat();if(!R.length)return null;const a=new Map;let i=0;for(const l of R){if(a.has(l))if(a.get(l)<3)a.set(l,a.get(l)+1);else continue;else a.set(l,1);i++}if(!i)return null;let r;const L=ce(i);let o=0;for(const l of a.keys()){const C=a.get(l);if(L<=o+C){r=l;break}o+=C}return new ql(r,20)})}};N(bB,"AttackTypeBoosterModifierTypeGenerator");let Z_=bB;const JD=class JD extends cE{constructor(){super((A,s)=>{if(s)return new eC(s[0]);const R=ce(K.SPD+1);return new eC(R)})}};N(JD,"BaseStatBoosterModifierTypeGenerator"),JD.items={[K.HP]:"hp_up",[K.ATK]:"protein",[K.DEF]:"iron",[K.SPATK]:"calcium",[K.SPDEF]:"zinc",[K.SPD]:"carbos"};let OC=JD;const $D=class $D extends cE{constructor(){super((A,s)=>{if(s&&s.length===1&&K6.includes(s[0]))return new zl(s[0]);const R=ce(K.ACC,K.ATK);return new zl(R)})}};N($D,"TempStatStageBoosterModifierTypeGenerator"),$D.items={[K.ATK]:"x_attack",[K.DEF]:"x_defense",[K.SPATK]:"x_sp_atk",[K.SPDEF]:"x_sp_def",[K.SPD]:"x_speed",[K.ACC]:"x_accuracy"};let nC=$D;const DN=class DN extends cE{constructor(){super((A,s)=>{const R=DN.items;if(s&&s.length===1&&s[0]in R)return new jl(s[0]);const a=Object.values(R),i=Object.keys(R),r=i.map(()=>0);for(const o of A){const l=o.getSpeciesForm(!0).speciesId,C=o.isFusion()?o.getFusionSpeciesForm(!0).speciesId:null,M=!1;for(const D in a){const _=a[D].species,P=a[D].stats;o.getHeldItems().some(H=>H instanceof Di&&H.contains(_[0],P[0]))||(_.includes(l)||C&&_.includes(C)||_.includes(e.PIKACHU)&&M)&&r[D]++}}let L=0;for(const o of r)L+=o;if(L!==0){const o=ce(L,1);let l=0;for(const C in r)if(r[C]!==0){const M=l+r[C];if(o<=l+r[C])return new jl(i[C]);l=M}}return null})}};N(DN,"SpeciesStatBoosterModifierTypeGenerator"),DN.items={LIGHT_BALL:{stats:[K.ATK,K.SPATK],multiplier:2,species:[e.PIKACHU]},THICK_CLUB:{stats:[K.ATK],multiplier:2,species:[e.CUBONE,e.MAROWAK,e.ALOLA_MAROWAK]},METAL_POWDER:{stats:[K.DEF],multiplier:2,species:[e.DITTO]},QUICK_POWDER:{stats:[K.SPD],multiplier:2,species:[e.DITTO]}};let IC=DN;const kB=class kB extends cE{constructor(A){super((s,R)=>{if(R&&R.length===1&&R[0]in t)return new ei(R[0]);const i=s.map(L=>{const o=L.getLearnableLevelMoves();return L.compatibleTms.filter(l=>!L.moveset.find(C=>(C==null?void 0:C.moveId)===l)&&!o.find(C=>C===l))}).flat().filter(L=>cl[L]===A).filter(L=>!we[L].name.endsWith(" (N)")).filter((L,o,l)=>l.indexOf(L)===o);if(!i.length)return null;const r=ce(i.length);return new ei(i[r])})}};N(kB,"TmModifierTypeGenerator");let vL=kB;const ZB=class ZB extends cE{constructor(A){super((s,R)=>{if(R&&R.length===1&&R[0]in Dr)return new sC(R[0]);const a=[s.filter(i=>bt.hasOwnProperty(i.species.speciesId)&&(!i.pauseEvolutions||i.species.speciesId===e.SLOWPOKE||i.species.speciesId===e.EEVEE)).map(i=>bt[i.species.speciesId].filter(L=>L.item!==Dr.NONE&&(L.evoFormKey===null||(L.preFormKey||"")===i.getFormKey())&&(!L.condition||L.condition.predicate(i)))).flat(),s.filter(i=>i.isFusion()&&i.fusionSpecies&&bt.hasOwnProperty(i.fusionSpecies.speciesId)&&(!i.pauseEvolutions||i.fusionSpecies.speciesId===e.SLOWPOKE||i.fusionSpecies.speciesId===e.EEVEE)).map(i=>bt[i.fusionSpecies.speciesId].filter(L=>L.item!==Dr.NONE&&(L.evoFormKey===null||(L.preFormKey||"")===i.getFusionFormKey())&&(!L.condition||L.condition.predicate(i)))).flat()].flat().flatMap(i=>i.item).filter(i=>(!!i&&i>50)===A);return a.length?new sC(a[ce(a.length)]):null})}};N(ZB,"EvolutionItemModifierTypeGenerator");let aC=ZB;const XB=class XB extends cE{constructor(A){super((s,R)=>{if(R&&R.length===1&&R[0]in lR)return new kT(R[0]);const a=[...new Set(s.filter(i=>JO.hasOwnProperty(i.species.speciesId)).map(i=>{let L=JO[i.species.speciesId].filter(o=>(o.formKey.indexOf(Ue.MEGA)===-1&&o.formKey.indexOf(Ue.PRIMAL)===-1||n.getModifiers(RL).length)&&(o.formKey.indexOf(Ue.GIGANTAMAX)===-1&&o.formKey.indexOf(Ue.ETERNAMAX)===-1||n.getModifiers(OL).length)&&(!o.conditions.length||o.conditions.filter(l=>l instanceof LR&&l.predicate(i)).length)&&o.preFormKey===i.getFormKey()).map(o=>o.findTrigger(he)).filter(o=>o&&o.active&&!n.findModifier(l=>l instanceof UR&&l.pokemonId===i.id&&l.formChangeItem===o.item));if(i.species.speciesId===e.NECROZMA){let o=!1,l=!1,C=!1;L.forEach((M,D)=>{switch(M.item){case lR.ULTRANECROZIUM_Z:o=!0;break;case lR.N_LUNARIZER:l=!0;break;case lR.N_SOLARIZER:C=!0;break}}),o&&l&&C&&(L=L.filter(M=>M.item!==lR.ULTRANECROZIUM_Z))}return L}).flat())].flat().flatMap(i=>i.item).filter(i=>(i&&i<100)===A);return a.length?new kT(a[ce(a.length)]):null})}};N(XB,"FormChangeItemModifierTypeGenerator");let iC=XB;const QB=class QB extends DA{constructor(A){super("",`${I[A].toLowerCase()}_tera_shard`,(s,R)=>new SR(s,R[0].id,A),"tera_shard"),this.teraType=A}get name(){return u.t("modifierType:ModifierType.TerastallizeModifierType.name",{teraType:u.t(`pokemonInfo:Type.${I[this.teraType]}`)})}getDescription(){return u.t("modifierType:ModifierType.TerastallizeModifierType.description",{teraType:u.t(`pokemonInfo:Type.${I[this.teraType]}`)})}getPregenArgs(){return[this.teraType]}};N(QB,"TerastallizeModifierType");let rC=QB;const JB=class JB extends DA{constructor(A,s,R,a,i){super(A,s,(r,L)=>new Hi(r,L[0].id,R),a,i),this.chancePercent=R}getDescription(){return u.t("modifierType:ModifierType.ContactHeldItemTransferChanceModifierType.description",{chancePercent:this.chancePercent})}};N(JB,"ContactHeldItemTransferChanceModifierType");let X_=JB;const $B=class $B extends DA{constructor(A,s,R,a){super(A,s,(i,r)=>new hi(i,r[0].id),R,a)}getDescription(){return u.t("modifierType:ModifierType.TurnHeldItemTransferModifierType.description")}};N($B,"TurnHeldItemTransferModifierType");let Q_=$B;const zB=class zB extends RA{constructor(A,s,R,a,i){super(A,s,(r,L)=>new NL(r,a,R,i),"enemy_status_chance"),this.chancePercent=R,this.effect=a}getDescription(){return u.t("modifierType:ModifierType.EnemyAttackStatusEffectChanceModifierType.description",{chancePercent:this.chancePercent,statusEffect:F6(this.effect)})}};N(zB,"EnemyAttackStatusEffectChanceModifierType");let VL=zB;const qB=class qB extends RA{constructor(A,s,R){super(A,s,(a,i)=>new yo(a,R),"enemy_endure"),this.chancePercent=R}getDescription(){return u.t("modifierType:ModifierType.EnemyEndureChanceModifierType.description",{chancePercent:this.chancePercent})}};N(qB,"EnemyEndureChanceModifierType");let J_=qB;function x6(E,A){return()=>{const s=n.gameMode,R=n.currentBattle.waveIndex;return s.isClassic&&R>=E?0:A}}N(x6,"skipInClassicAfterWave");function gO(E){return x6(199,E)}N(gO,"skipInLastClassicWaveOrDefault");function yM(E,A){return()=>{const s=n.getModifiers(EL);return!(n.gameMode.isClassic&&n.currentBattle.waveIndex===199)&&(s.length===0||s.filter(R=>R.getMaxBattles()===E&&R.getBattleCount()>=E*.6).length===0)?A:0}}N(yM,"lureWeightFunc");const jB=class jB{constructor(A,s,R){this.modifierType=A(),this.modifierType.id=Object.keys(J).find(a=>J[a]===A),this.weight=s,this.maxWeight=R||(s instanceof Function?0:s)}setTier(A){this.modifierType.setTier(A)}};N(jB,"WeightedModifierType");let Fe=jB;const J={POKEBALL:N(()=>new Ca("pb",be.POKEBALL,5),"POKEBALL"),GREAT_BALL:N(()=>new Ca("gb",be.GREAT_BALL,5),"GREAT_BALL"),ULTRA_BALL:N(()=>new Ca("ub",be.ULTRA_BALL,5),"ULTRA_BALL"),ROGUE_BALL:N(()=>new Ca("rb",be.ROGUE_BALL,5),"ROGUE_BALL"),MASTER_BALL:N(()=>new Ca("mb",be.MASTER_BALL,1),"MASTER_BALL"),RARE_CANDY:N(()=>new y_("modifierType:ModifierType.RARE_CANDY","rare_candy"),"RARE_CANDY"),RARER_CANDY:N(()=>new w_("modifierType:ModifierType.RARER_CANDY","rarer_candy"),"RARER_CANDY"),EVOLUTION_ITEM:N(()=>new aC(!1),"EVOLUTION_ITEM"),RARE_EVOLUTION_ITEM:N(()=>new aC(!0),"RARE_EVOLUTION_ITEM"),FORM_CHANGE_ITEM:N(()=>new iC(!1),"FORM_CHANGE_ITEM"),RARE_FORM_CHANGE_ITEM:N(()=>new iC(!0),"RARE_FORM_CHANGE_ITEM"),EVOLUTION_TRACKER_GIMMIGHOUL:N(()=>new DA("modifierType:ModifierType.EVOLUTION_TRACKER_GIMMIGHOUL","relic_gold",(E,A)=>new Lo(E,A[0].id,e.GIMMIGHOUL,10)),"EVOLUTION_TRACKER_GIMMIGHOUL"),MEGA_BRACELET:N(()=>new RA("modifierType:ModifierType.MEGA_BRACELET","mega_bracelet",(E,A)=>new RL(E)),"MEGA_BRACELET"),DYNAMAX_BAND:N(()=>new RA("modifierType:ModifierType.DYNAMAX_BAND","dynamax_band",(E,A)=>new OL(E)),"DYNAMAX_BAND"),TERA_ORB:N(()=>new RA("modifierType:ModifierType.TERA_ORB","tera_orb",(E,A)=>new io(E)),"TERA_ORB"),MAP:N(()=>new RA("modifierType:ModifierType.MAP","map",(E,A)=>new ao(E)),"MAP"),POTION:N(()=>new BI("modifierType:ModifierType.POTION","potion",20,10),"POTION"),SUPER_POTION:N(()=>new BI("modifierType:ModifierType.SUPER_POTION","super_potion",50,25),"SUPER_POTION"),HYPER_POTION:N(()=>new BI("modifierType:ModifierType.HYPER_POTION","hyper_potion",200,50),"HYPER_POTION"),MAX_POTION:N(()=>new BI("modifierType:ModifierType.MAX_POTION","max_potion",0,100),"MAX_POTION"),FULL_RESTORE:N(()=>new BI("modifierType:ModifierType.FULL_RESTORE","full_restore",0,100,!0),"FULL_RESTORE"),REVIVE:N(()=>new Ql("modifierType:ModifierType.REVIVE","revive",50),"REVIVE"),MAX_REVIVE:N(()=>new Ql("modifierType:ModifierType.MAX_REVIVE","max_revive",100),"MAX_REVIVE"),FULL_HEAL:N(()=>new W_("modifierType:ModifierType.FULL_HEAL","full_heal"),"FULL_HEAL"),SACRED_ASH:N(()=>new V_("modifierType:ModifierType.SACRED_ASH","sacred_ash"),"SACRED_ASH"),REVIVER_SEED:N(()=>new DA("modifierType:ModifierType.REVIVER_SEED","reviver_seed",(E,A)=>new iL(E,A[0].id)),"REVIVER_SEED"),WHITE_HERB:N(()=>new DA("modifierType:ModifierType.WHITE_HERB","white_herb",(E,A)=>new rL(E,A[0].id)),"WHITE_HERB"),ETHER:N(()=>new VT("modifierType:ModifierType.ETHER","ether",10),"ETHER"),MAX_ETHER:N(()=>new VT("modifierType:ModifierType.MAX_ETHER","max_ether",-1),"MAX_ETHER"),ELIXIR:N(()=>new Jl("modifierType:ModifierType.ELIXIR","elixir",10),"ELIXIR"),MAX_ELIXIR:N(()=>new Jl("modifierType:ModifierType.MAX_ELIXIR","max_elixir",-1),"MAX_ELIXIR"),PP_UP:N(()=>new xT("modifierType:ModifierType.PP_UP","pp_up",1),"PP_UP"),PP_MAX:N(()=>new xT("modifierType:ModifierType.PP_MAX","pp_max",3),"PP_MAX"),LURE:N(()=>new YL("modifierType:ModifierType.LURE","lure",10),"LURE"),SUPER_LURE:N(()=>new YL("modifierType:ModifierType.SUPER_LURE","super_lure",15),"SUPER_LURE"),MAX_LURE:N(()=>new YL("modifierType:ModifierType.MAX_LURE","max_lure",30),"MAX_LURE"),SPECIES_STAT_BOOSTER:N(()=>new IC,"SPECIES_STAT_BOOSTER"),TEMP_STAT_STAGE_BOOSTER:N(()=>new nC,"TEMP_STAT_STAGE_BOOSTER"),DIRE_HIT:N(()=>new class extends RA{getDescription(){return u.t("modifierType:ModifierType.TempStatStageBoosterModifierType.description",{stat:u.t("modifierType:ModifierType.DIRE_HIT.extra.raises"),amount:u.t("modifierType:ModifierType.TempStatStageBoosterModifierType.extra.stage")})}}("modifierType:ModifierType.DIRE_HIT","dire_hit",(E,A)=>new Io(E,5)),"DIRE_HIT"),BASE_STAT_BOOSTER:N(()=>new OC,"BASE_STAT_BOOSTER"),ATTACK_TYPE_BOOSTER:N(()=>new Z_,"ATTACK_TYPE_BOOSTER"),MINT:N(()=>new cE((E,A)=>A&&A.length===1&&A[0]in At?new $l(A[0]):new $l(ce(DE(At).length))),"MINT"),TERA_SHARD:N(()=>new cE((E,A)=>{if(A&&A.length===1&&A[0]in I)return new rC(A[0]);if(!n.getModifiers(io).length)return null;let s;if(ce(3))s=ce(64)?ce(18):I.STELLAR;else{const R=E.map(a=>a.getTypes(!1,!1,!0)).flat();s=IE(R)}return new rC(s)}),"TERA_SHARD"),BERRY:N(()=>new cE((E,A)=>{if(A&&A.length===1&&A[0]in _t)return new bT(A[0]);const s=DE(_t);let R;const a=ce(12);return a<2?R=_t.SITRUS:a<4?R=_t.LUM:a<6?R=_t.LEPPA:R=s[ce(s.length-3)+2],new bT(R)}),"BERRY"),TM_COMMON:N(()=>new vL(w.COMMON),"TM_COMMON"),TM_GREAT:N(()=>new vL(w.GREAT),"TM_GREAT"),TM_ULTRA:N(()=>new vL(w.ULTRA),"TM_ULTRA"),MEMORY_MUSHROOM:N(()=>new ir("modifierType:ModifierType.MEMORY_MUSHROOM","big_mushroom"),"MEMORY_MUSHROOM"),EXP_SHARE:N(()=>new RA("modifierType:ModifierType.EXP_SHARE","exp_share",(E,A)=>new Po(E)),"EXP_SHARE"),EXP_BALANCE:N(()=>new RA("modifierType:ModifierType.EXP_BALANCE","exp_balance",(E,A)=>new Go(E)),"EXP_BALANCE"),OVAL_CHARM:N(()=>new RA("modifierType:ModifierType.OVAL_CHARM","oval_charm",(E,A)=>new Mo(E)),"OVAL_CHARM"),EXP_CHARM:N(()=>new wL("modifierType:ModifierType.EXP_CHARM","exp_charm",25),"EXP_CHARM"),SUPER_EXP_CHARM:N(()=>new wL("modifierType:ModifierType.SUPER_EXP_CHARM","super_exp_charm",60),"SUPER_EXP_CHARM"),GOLDEN_EXP_CHARM:N(()=>new wL("modifierType:ModifierType.GOLDEN_EXP_CHARM","golden_exp_charm",100),"GOLDEN_EXP_CHARM"),LUCKY_EGG:N(()=>new EC("modifierType:ModifierType.LUCKY_EGG","lucky_egg",40),"LUCKY_EGG"),GOLDEN_EGG:N(()=>new EC("modifierType:ModifierType.GOLDEN_EGG","golden_egg",100),"GOLDEN_EGG"),SOOTHE_BELL:N(()=>new x_("modifierType:ModifierType.SOOTHE_BELL","soothe_bell"),"SOOTHE_BELL"),SCOPE_LENS:N(()=>new DA("modifierType:ModifierType.SCOPE_LENS","scope_lens",(E,A)=>new aL(E,A[0].id,1)),"SCOPE_LENS"),LEEK:N(()=>new DA("modifierType:ModifierType.LEEK","leek",(E,A)=>new So(E,A[0].id,2,[e.FARFETCHD,e.GALAR_FARFETCHD,e.SIRFETCHD])),"LEEK"),EVIOLITE:N(()=>new DA("modifierType:ModifierType.EVIOLITE","eviolite",(E,A)=>new fD(E,A[0].id,[K.DEF,K.SPDEF],1.5)),"EVIOLITE"),SOUL_DEW:N(()=>new DA("modifierType:ModifierType.SOUL_DEW","soul_dew",(E,A)=>new ho(E,A[0].id)),"SOUL_DEW"),NUGGET:N(()=>new yL("modifierType:ModifierType.NUGGET","nugget",1,"modifierType:ModifierType.MoneyRewardModifierType.extra.small"),"NUGGET"),BIG_NUGGET:N(()=>new yL("modifierType:ModifierType.BIG_NUGGET","big_nugget",2.5,"modifierType:ModifierType.MoneyRewardModifierType.extra.moderate"),"BIG_NUGGET"),RELIC_GOLD:N(()=>new yL("modifierType:ModifierType.RELIC_GOLD","relic_gold",10,"modifierType:ModifierType.MoneyRewardModifierType.extra.large"),"RELIC_GOLD"),AMULET_COIN:N(()=>new RA("modifierType:ModifierType.AMULET_COIN","amulet_coin",(E,A)=>new IO(E)),"AMULET_COIN"),GOLDEN_PUNCH:N(()=>new DA("modifierType:ModifierType.GOLDEN_PUNCH","golden_punch",(E,A)=>new Ia(E,A[0].id)),"GOLDEN_PUNCH"),COIN_CASE:N(()=>new RA("modifierType:ModifierType.COIN_CASE","coin_case",(E,A)=>new fo(E)),"COIN_CASE"),LOCK_CAPSULE:N(()=>new RA("modifierType:ModifierType.LOCK_CAPSULE","lock_capsule",(E,A)=>new go(E)),"LOCK_CAPSULE"),GRIP_CLAW:N(()=>new X_("modifierType:ModifierType.GRIP_CLAW","grip_claw",10),"GRIP_CLAW"),WIDE_LENS:N(()=>new b_("modifierType:ModifierType.WIDE_LENS","wide_lens",5),"WIDE_LENS"),MULTI_LENS:N(()=>new k_("modifierType:ModifierType.MULTI_LENS","zoom_lens"),"MULTI_LENS"),HEALING_CHARM:N(()=>new RA("modifierType:ModifierType.HEALING_CHARM","healing_charm",(E,A)=>new Gi(E,1.1)),"HEALING_CHARM"),CANDY_JAR:N(()=>new RA("modifierType:ModifierType.CANDY_JAR","candy_jar",(E,A)=>new Oa(E)),"CANDY_JAR"),BERRY_POUCH:N(()=>new RA("modifierType:ModifierType.BERRY_POUCH","berry_pouch",(E,A)=>new Pi(E)),"BERRY_POUCH"),FOCUS_BAND:N(()=>new DA("modifierType:ModifierType.FOCUS_BAND","focus_band",(E,A)=>new oo(E,A[0].id)),"FOCUS_BAND"),QUICK_CLAW:N(()=>new DA("modifierType:ModifierType.QUICK_CLAW","quick_claw",(E,A)=>new Mi(E,A[0].id)),"QUICK_CLAW"),KINGS_ROCK:N(()=>new DA("modifierType:ModifierType.KINGS_ROCK","kings_rock",(E,A)=>new lo(E,A[0].id)),"KINGS_ROCK"),LEFTOVERS:N(()=>new DA("modifierType:ModifierType.LEFTOVERS","leftovers",(E,A)=>new _i(E,A[0].id)),"LEFTOVERS"),SHELL_BELL:N(()=>new DA("modifierType:ModifierType.SHELL_BELL","shell_bell",(E,A)=>new Ra(E,A[0].id)),"SHELL_BELL"),TOXIC_ORB:N(()=>new DA("modifierType:ModifierType.TOXIC_ORB","toxic_orb",(E,A)=>new sa(E,A[0].id)),"TOXIC_ORB"),FLAME_ORB:N(()=>new DA("modifierType:ModifierType.FLAME_ORB","flame_orb",(E,A)=>new sa(E,A[0].id)),"FLAME_ORB"),BATON:N(()=>new DA("modifierType:ModifierType.BATON","baton",(E,A)=>new vI(E,A[0].id)),"BATON"),SHINY_CHARM:N(()=>new RA("modifierType:ModifierType.SHINY_CHARM","shiny_charm",(E,A)=>new ci(E)),"SHINY_CHARM"),ABILITY_CHARM:N(()=>new RA("modifierType:ModifierType.ABILITY_CHARM","ability_charm",(E,A)=>new Gn(E)),"ABILITY_CHARM"),CATCHING_CHARM:N(()=>new RA("modifierType:ModifierType.CATCHING_CHARM","catching_charm",(E,A)=>new Bo(E)),"CATCHING_CHARM"),IV_SCANNER:N(()=>new RA("modifierType:ModifierType.IV_SCANNER","scanner",(E,A)=>new di(E)),"IV_SCANNER"),DNA_SPLICERS:N(()=>new RC("modifierType:ModifierType.DNA_SPLICERS","dna_splicers"),"DNA_SPLICERS"),MINI_BLACK_HOLE:N(()=>new Q_("modifierType:ModifierType.MINI_BLACK_HOLE","mini_black_hole"),"MINI_BLACK_HOLE"),VOUCHER:N(()=>new WL(rE.REGULAR,1),"VOUCHER"),VOUCHER_PLUS:N(()=>new WL(rE.PLUS,1),"VOUCHER_PLUS"),VOUCHER_PREMIUM:N(()=>new WL(rE.PREMIUM,1),"VOUCHER_PREMIUM"),GOLDEN_POKEBALL:N(()=>new RA("modifierType:ModifierType.GOLDEN_POKEBALL","pb_gold",(E,A)=>new ia(E),void 0,"se/pb_bounce_1"),"GOLDEN_POKEBALL"),SILVER_POKEBALL:N(()=>new RA("modifierType:ModifierType.SILVER_POKEBALL","pb_silver",(E,A)=>new ra(E,100),void 0,"se/pb_bounce_1"),"SILVER_POKEBALL"),ENEMY_DAMAGE_BOOSTER:N(()=>new RA("modifierType:ModifierType.ENEMY_DAMAGE_BOOSTER","wl_item_drop",(E,A)=>new Fo(E,5)),"ENEMY_DAMAGE_BOOSTER"),ENEMY_DAMAGE_REDUCTION:N(()=>new RA("modifierType:ModifierType.ENEMY_DAMAGE_REDUCTION","wl_guard_spec",(E,A)=>new po(E,2.5)),"ENEMY_DAMAGE_REDUCTION"),ENEMY_HEAL:N(()=>new RA("modifierType:ModifierType.ENEMY_HEAL","wl_potion",(E,A)=>new Wo(E,2,10)),"ENEMY_HEAL"),ENEMY_ATTACK_POISON_CHANCE:N(()=>new VL("modifierType:ModifierType.ENEMY_ATTACK_POISON_CHANCE","wl_antidote",5,ne.POISON,10),"ENEMY_ATTACK_POISON_CHANCE"),ENEMY_ATTACK_PARALYZE_CHANCE:N(()=>new VL("modifierType:ModifierType.ENEMY_ATTACK_PARALYZE_CHANCE","wl_paralyze_heal",2.5,ne.PARALYSIS,10),"ENEMY_ATTACK_PARALYZE_CHANCE"),ENEMY_ATTACK_BURN_CHANCE:N(()=>new VL("modifierType:ModifierType.ENEMY_ATTACK_BURN_CHANCE","wl_burn_heal",5,ne.BURN,10),"ENEMY_ATTACK_BURN_CHANCE"),ENEMY_STATUS_EFFECT_HEAL_CHANCE:N(()=>new RA("modifierType:ModifierType.ENEMY_STATUS_EFFECT_HEAL_CHANCE","wl_full_heal",(E,A)=>new Yo(E,2.5,10)),"ENEMY_STATUS_EFFECT_HEAL_CHANCE"),ENEMY_ENDURE_CHANCE:N(()=>new J_("modifierType:ModifierType.ENEMY_ENDURE_CHANCE","wl_reset_urge",2),"ENEMY_ENDURE_CHANCE"),ENEMY_FUSED_CHANCE:N(()=>new RA("modifierType:ModifierType.ENEMY_FUSED_CHANCE","wl_custom_spliced",(E,A)=>new wo(E,1)),"ENEMY_FUSED_CHANCE"),MYSTERY_ENCOUNTER_SHUCKLE_JUICE:N(()=>new cE((E,A)=>A?new tC(A[0]):new tC(ce(20,1))),"MYSTERY_ENCOUNTER_SHUCKLE_JUICE"),MYSTERY_ENCOUNTER_OLD_GATEAU:N(()=>new cE((E,A)=>A?new AC(A[0],A[1]):new AC(ce(20,1),[K.HP,K.ATK,K.DEF])),"MYSTERY_ENCOUNTER_OLD_GATEAU"),MYSTERY_ENCOUNTER_BLACK_SLUDGE:N(()=>new cE((E,A)=>A?new RA("modifierType:ModifierType.MYSTERY_ENCOUNTER_BLACK_SLUDGE","black_sludge",(s,R)=>new aa(s,A[0])):new RA("modifierType:ModifierType.MYSTERY_ENCOUNTER_BLACK_SLUDGE","black_sludge",(s,R)=>new aa(s,2.5))),"MYSTERY_ENCOUNTER_BLACK_SLUDGE"),MYSTERY_ENCOUNTER_MACHO_BRACE:N(()=>new DA("modifierType:ModifierType.MYSTERY_ENCOUNTER_MACHO_BRACE","macho_brace",(E,A)=>new ui(E,A[0].id)),"MYSTERY_ENCOUNTER_MACHO_BRACE"),MYSTERY_ENCOUNTER_GOLDEN_BUG_NET:N(()=>new RA("modifierType:ModifierType.MYSTERY_ENCOUNTER_GOLDEN_BUG_NET","golden_net",(E,A)=>new Ko(E)),"MYSTERY_ENCOUNTER_GOLDEN_BUG_NET")};function uL(E){return n.gameMode.isClassic&&n.pokeballCounts[E]>=v6}N(uL,"hasMaximumBalls");const ki={[w.COMMON]:[new Fe(J.POKEBALL,()=>uL(be.POKEBALL)?0:6,6),new Fe(J.RARE_CANDY,2),new Fe(J.POTION,E=>Math.min(E.filter(s=>s.getInverseHp()>=10&&s.getHpRatio()<=.875&&!s.isFainted()).length,3)*3,9),new Fe(J.SUPER_POTION,E=>Math.min(E.filter(s=>s.getInverseHp()>=25&&s.getHpRatio()<=.75&&!s.isFainted()).length,3),3),new Fe(J.ETHER,E=>Math.min(E.filter(s=>s.hp&&!s.getHeldItems().some(R=>R instanceof CE&&R.berryType===_t.LEPPA)&&s.getMoveset().filter(R=>(R==null?void 0:R.ppUsed)&&R.getMovePp()-R.ppUsed<=5&&R.ppUsed>Math.floor(R.getMovePp()/2)).length).length,3)*3,9),new Fe(J.MAX_ETHER,E=>Math.min(E.filter(s=>s.hp&&!s.getHeldItems().some(R=>R instanceof CE&&R.berryType===_t.LEPPA)&&s.getMoveset().filter(R=>(R==null?void 0:R.ppUsed)&&R.getMovePp()-R.ppUsed<=5&&R.ppUsed>Math.floor(R.getMovePp()/2)).length).length,3),3),new Fe(J.LURE,yM(10,2)),new Fe(J.TEMP_STAT_STAGE_BOOSTER,4),new Fe(J.BERRY,2),new Fe(J.TM_COMMON,2)].map(E=>(E.setTier(w.COMMON),E)),[w.GREAT]:[new Fe(J.GREAT_BALL,()=>uL(be.GREAT_BALL)?0:6,6),new Fe(J.PP_UP,2),new Fe(J.FULL_HEAL,E=>Math.min(E.filter(s=>s.hp&&!!s.status&&!s.getHeldItems().some(R=>{var a;return R instanceof sa?R.getStatusEffect()===((a=s.status)==null?void 0:a.effect):!1})).length,3)*6,18),new Fe(J.REVIVE,E=>Math.min(E.filter(s=>s.isFainted()).length,3)*9,27),new Fe(J.MAX_REVIVE,E=>Math.min(E.filter(s=>s.isFainted()).length,3)*3,9),new Fe(J.SACRED_ASH,E=>E.filter(A=>A.isFainted()).length>=Math.ceil(E.length/2)?1:0,1),new Fe(J.HYPER_POTION,E=>Math.min(E.filter(s=>s.getInverseHp()>=100&&s.getHpRatio()<=.625&&!s.isFainted()).length,3)*3,9),new Fe(J.MAX_POTION,E=>Math.min(E.filter(s=>s.getInverseHp()>=100&&s.getHpRatio()<=.5&&!s.isFainted()).length,3),3),new Fe(J.FULL_RESTORE,E=>{const A=Math.min(E.filter(R=>R.hp&&!!R.status&&!R.getHeldItems().some(a=>{var i;return a instanceof sa?a.getStatusEffect()===((i=R.status)==null?void 0:i.effect):!1})).length,3);return Math.floor((Math.min(E.filter(R=>R.getInverseHp()>=100&&R.getHpRatio()<=.5&&!R.isFainted()).length,3)+A)/2)},3),new Fe(J.ELIXIR,E=>Math.min(E.filter(s=>s.hp&&!s.getHeldItems().some(R=>R instanceof CE&&R.berryType===_t.LEPPA)&&s.getMoveset().filter(R=>(R==null?void 0:R.ppUsed)&&R.getMovePp()-R.ppUsed<=5&&R.ppUsed>Math.floor(R.getMovePp()/2)).length).length,3)*3,9),new Fe(J.MAX_ELIXIR,E=>Math.min(E.filter(s=>s.hp&&!s.getHeldItems().some(R=>R instanceof CE&&R.berryType===_t.LEPPA)&&s.getMoveset().filter(R=>(R==null?void 0:R.ppUsed)&&R.getMovePp()-R.ppUsed<=5&&R.ppUsed>Math.floor(R.getMovePp()/2)).length).length,3),3),new Fe(J.DIRE_HIT,4),new Fe(J.SUPER_LURE,yM(15,4)),new Fe(J.NUGGET,gO(5)),new Fe(J.EVOLUTION_ITEM,()=>Math.min(Math.ceil(n.currentBattle.waveIndex/15),8),8),new Fe(J.MAP,()=>n.gameMode.isClassic&&n.currentBattle.waveIndex<180?2:0,2),new Fe(J.SOOTHE_BELL,2),new Fe(J.TM_GREAT,3),new Fe(J.MEMORY_MUSHROOM,E=>{if(!E.find(s=>s.getLearnableLevelMoves().length))return 0;const A=E.map(s=>s.level).reduce((s,R)=>Math.max(s,R),1);return Math.min(Math.ceil(A/20),4)},4),new Fe(J.BASE_STAT_BOOSTER,3),new Fe(J.TERA_SHARD,1),new Fe(J.DNA_SPLICERS,E=>n.gameMode.isSplicedOnly&&E.filter(A=>!A.fusionSpecies).length>1?4:0),new Fe(J.VOUCHER,(E,A)=>n.gameMode.isDaily?0:Math.max(1-A,0),1)].map(E=>(E.setTier(w.GREAT),E)),[w.ULTRA]:[new Fe(J.ULTRA_BALL,()=>uL(be.ULTRA_BALL)?0:15,15),new Fe(J.MAX_LURE,yM(30,4)),new Fe(J.BIG_NUGGET,gO(12)),new Fe(J.PP_MAX,3),new Fe(J.MINT,4),new Fe(J.RARE_EVOLUTION_ITEM,()=>Math.min(Math.ceil(n.currentBattle.waveIndex/15)*4,32),32),new Fe(J.FORM_CHANGE_ITEM,()=>Math.min(Math.ceil(n.currentBattle.waveIndex/50),4)*6,24),new Fe(J.AMULET_COIN,gO(3)),new Fe(J.EVIOLITE,E=>{const{gameMode:A,gameData:s}=n;return(A.isDaily||!A.isFreshStartChallenge()&&s.isUnlocked(ws.EVIOLITE))&&E.some(R=>!R.isMax()&&(R.getSpeciesForm(!0).speciesId in bt||R.isFusion()&&R.getFusionSpeciesForm(!0).speciesId in bt)?!R.getHeldItems().some(a=>a.type.id==="EVIOLITE"):!1)?10:0}),new Fe(J.SPECIES_STAT_BOOSTER,12),new Fe(J.LEEK,E=>{const A=[e.FARFETCHD,e.GALAR_FARFETCHD,e.SIRFETCHD];return E.some(s=>!s.getHeldItems().some(R=>R instanceof So)&&(A.includes(s.getSpeciesForm(!0).speciesId)||s.isFusion()&&A.includes(s.getFusionSpeciesForm(!0).speciesId)))?12:0},12),new Fe(J.TOXIC_ORB,E=>E.some(A=>{if(!A.getHeldItems().some(R=>R.type.id==="FLAME_ORB"||R.type.id==="TOXIC_ORB")){const R=A.getMoveset(!0).filter(L=>!ve(L)).map(L=>L.moveId),a=A.canSetStatus(ne.TOXIC,!0,!0,null,!0),i=[t.FACADE,t.PSYCHO_SHIFT].some(L=>R.includes(L)),r=[].some(L=>R.includes(L));if(a){const L=[O.QUICK_FEET,O.GUTS,O.MARVEL_SCALE,O.MAGIC_GUARD].some(C=>A.hasAbility(C,!1,!0)),o=[O.TOXIC_BOOST,O.POISON_HEAL].some(C=>A.hasAbility(C,!1,!0)),l=[O.FLARE_BOOST].some(C=>A.hasAbility(C,!1,!0));return o||L&&!l||i}else return r}return!1})?10:0,10),new Fe(J.FLAME_ORB,E=>E.some(A=>{if(!A.getHeldItems().some(R=>R.type.id==="FLAME_ORB"||R.type.id==="TOXIC_ORB")){const R=A.getMoveset(!0).filter(L=>!ve(L)).map(L=>L.moveId),a=A.canSetStatus(ne.TOXIC,!0,!0,null,!0),i=[t.FACADE,t.PSYCHO_SHIFT].some(L=>R.includes(L)),r=[].some(L=>R.includes(L));if(a){const L=[O.QUICK_FEET,O.GUTS,O.MARVEL_SCALE,O.MAGIC_GUARD].some(C=>A.hasAbility(C,!1,!0)),o=[O.FLARE_BOOST].some(C=>A.hasAbility(C,!1,!0)),l=[O.TOXIC_BOOST,O.POISON_HEAL].some(C=>A.hasAbility(C,!1,!0));return o||L&&!l||i}else return r}return!1})?10:0,10),new Fe(J.WHITE_HERB,E=>{const A=[O.WEAK_ARMOR,O.CONTRARY,O.MOODY,O.ANGER_SHELL,O.COMPETITIVE,O.DEFIANT],s=E.filter(R=>!R.getHeldItems().some(a=>a instanceof rL&&a.stackCount>=a.getMaxHeldItemCount(R))&&(A.some(a=>R.hasAbility(a,!1,!0))||R.getMoveset(!0).some(a=>a&&J8.includes(a.moveId)))).length;return 0*(s?2:1)+(s?s*0:0)},10),new Fe(J.REVIVER_SEED,4),new Fe(J.CANDY_JAR,gO(5)),new Fe(J.ATTACK_TYPE_BOOSTER,9),new Fe(J.TM_ULTRA,11),new Fe(J.RARER_CANDY,4),new Fe(J.GOLDEN_PUNCH,gO(2)),new Fe(J.IV_SCANNER,gO(4)),new Fe(J.EXP_CHARM,gO(8)),new Fe(J.EXP_SHARE,gO(10)),new Fe(J.EXP_BALANCE,gO(3)),new Fe(J.TERA_ORB,()=>Math.min(Math.max(Math.floor(n.currentBattle.waveIndex/50)*2,1),4),4),new Fe(J.QUICK_CLAW,3),new Fe(J.WIDE_LENS,4)].map(E=>(E.setTier(w.ULTRA),E)),[w.ROGUE]:[new Fe(J.ROGUE_BALL,()=>uL(be.ROGUE_BALL)?0:16,16),new Fe(J.RELIC_GOLD,gO(2)),new Fe(J.LEFTOVERS,3),new Fe(J.SHELL_BELL,3),new Fe(J.BERRY_POUCH,4),new Fe(J.GRIP_CLAW,5),new Fe(J.SCOPE_LENS,4),new Fe(J.BATON,2),new Fe(J.SOUL_DEW,7),new Fe(J.CATCHING_CHARM,()=>n.gameMode.isDaily||!n.gameMode.isFreshStartChallenge()&&n.gameData.getSpeciesCount(E=>!!E.caughtAttr)>100?4:0,4),new Fe(J.ABILITY_CHARM,x6(189,6)),new Fe(J.FOCUS_BAND,5),new Fe(J.KINGS_ROCK,3),new Fe(J.LOCK_CAPSULE,()=>n.gameMode.isClassic?0:3),new Fe(J.SUPER_EXP_CHARM,gO(8)),new Fe(J.RARE_FORM_CHANGE_ITEM,()=>Math.min(Math.ceil(n.currentBattle.waveIndex/50),4)*6,24),new Fe(J.MEGA_BRACELET,()=>Math.min(Math.ceil(n.currentBattle.waveIndex/50),4)*9,36),new Fe(J.DYNAMAX_BAND,()=>Math.min(Math.ceil(n.currentBattle.waveIndex/50),4)*9,36),new Fe(J.VOUCHER_PLUS,(E,A)=>n.gameMode.isDaily?0:Math.max(3-A*1,0),3)].map(E=>(E.setTier(w.ROGUE),E)),[w.MASTER]:[new Fe(J.MASTER_BALL,()=>uL(be.MASTER_BALL)?0:24,24),new Fe(J.SHINY_CHARM,14),new Fe(J.HEALING_CHARM,18),new Fe(J.MULTI_LENS,18),new Fe(J.VOUCHER_PREMIUM,(E,A)=>!n.gameMode.isDaily&&!n.gameMode.isEndless&&!n.gameMode.isSplicedOnly?Math.max(5-A*2,0):0,5),new Fe(J.DNA_SPLICERS,E=>!n.gameMode.isSplicedOnly&&E.filter(A=>!A.fusionSpecies).length>1?24:0,24),new Fe(J.MINI_BLACK_HOLE,()=>n.gameMode.isDaily||!n.gameMode.isFreshStartChallenge()&&n.gameData.isUnlocked(ws.MINI_BLACK_HOLE)?1:0,1)].map(E=>(E.setTier(w.MASTER),E))},Pk={[w.COMMON]:[new Fe(J.BERRY,1)].map(E=>(E.setTier(w.COMMON),E)),[w.GREAT]:[new Fe(J.BASE_STAT_BOOSTER,1)].map(E=>(E.setTier(w.GREAT),E)),[w.ULTRA]:[new Fe(J.ATTACK_TYPE_BOOSTER,10),new Fe(J.WHITE_HERB,0)].map(E=>(E.setTier(w.ULTRA),E)),[w.ROGUE]:[new Fe(J.LUCKY_EGG,4)].map(E=>(E.setTier(w.ROGUE),E)),[w.MASTER]:[new Fe(J.GOLDEN_EGG,1)].map(E=>(E.setTier(w.MASTER),E))},Gk={[w.COMMON]:[new Fe(J.BERRY,8),new Fe(J.BASE_STAT_BOOSTER,3)].map(E=>(E.setTier(w.COMMON),E)),[w.GREAT]:[new Fe(J.BASE_STAT_BOOSTER,3)].map(E=>(E.setTier(w.GREAT),E)),[w.ULTRA]:[new Fe(J.ATTACK_TYPE_BOOSTER,10),new Fe(J.WHITE_HERB,0)].map(E=>(E.setTier(w.ULTRA),E)),[w.ROGUE]:[new Fe(J.FOCUS_BAND,2),new Fe(J.LUCKY_EGG,4),new Fe(J.QUICK_CLAW,1),new Fe(J.GRIP_CLAW,1),new Fe(J.WIDE_LENS,1)].map(E=>(E.setTier(w.ROGUE),E)),[w.MASTER]:[new Fe(J.KINGS_ROCK,1),new Fe(J.LEFTOVERS,1),new Fe(J.SHELL_BELL,1),new Fe(J.SCOPE_LENS,1)].map(E=>(E.setTier(w.MASTER),E))},ck={[w.COMMON]:[new Fe(J.ENEMY_DAMAGE_BOOSTER,9),new Fe(J.ENEMY_DAMAGE_REDUCTION,9),new Fe(J.ENEMY_ATTACK_POISON_CHANCE,3),new Fe(J.ENEMY_ATTACK_PARALYZE_CHANCE,3),new Fe(J.ENEMY_ATTACK_BURN_CHANCE,3),new Fe(J.ENEMY_STATUS_EFFECT_HEAL_CHANCE,9),new Fe(J.ENEMY_ENDURE_CHANCE,4),new Fe(J.ENEMY_FUSED_CHANCE,1)].map(E=>(E.setTier(w.COMMON),E)),[w.GREAT]:[new Fe(J.ENEMY_DAMAGE_BOOSTER,5),new Fe(J.ENEMY_DAMAGE_REDUCTION,5),new Fe(J.ENEMY_STATUS_EFFECT_HEAL_CHANCE,5),new Fe(J.ENEMY_ENDURE_CHANCE,5),new Fe(J.ENEMY_FUSED_CHANCE,1)].map(E=>(E.setTier(w.GREAT),E)),[w.ULTRA]:[new Fe(J.ENEMY_DAMAGE_BOOSTER,10),new Fe(J.ENEMY_DAMAGE_REDUCTION,10),new Fe(J.ENEMY_HEAL,10),new Fe(J.ENEMY_STATUS_EFFECT_HEAL_CHANCE,10),new Fe(J.ENEMY_ENDURE_CHANCE,10),new Fe(J.ENEMY_FUSED_CHANCE,5)].map(E=>(E.setTier(w.ULTRA),E)),[w.ROGUE]:[].map(E=>(E.setTier(w.ROGUE),E)),[w.MASTER]:[].map(E=>(E.setTier(w.MASTER),E))},hk={[w.COMMON]:[new Fe(J.BASE_STAT_BOOSTER,1),new Fe(J.BERRY,3)].map(E=>(E.setTier(w.COMMON),E)),[w.GREAT]:[new Fe(J.ATTACK_TYPE_BOOSTER,5)].map(E=>(E.setTier(w.GREAT),E)),[w.ULTRA]:[new Fe(J.REVIVER_SEED,4),new Fe(J.SOOTHE_BELL,1),new Fe(J.SOUL_DEW,1),new Fe(J.GOLDEN_PUNCH,1)].map(E=>(E.setTier(w.ULTRA),E)),[w.ROGUE]:[new Fe(J.GRIP_CLAW,5),new Fe(J.BATON,2),new Fe(J.FOCUS_BAND,5),new Fe(J.QUICK_CLAW,3),new Fe(J.KINGS_ROCK,3)].map(E=>(E.setTier(w.ROGUE),E)),[w.MASTER]:[new Fe(J.LEFTOVERS,1),new Fe(J.SHELL_BELL,1)].map(E=>(E.setTier(w.MASTER),E))};function HM(E){const A=E();return A.id||(A.id=Object.keys(J).find(s=>J[s]===E)),A}N(HM,"getModifierType");let b6={},$_={},k6={},z_={},Z6={};function ZT(E){let A;switch(E){case 0:A=ki;break;case 1:A=Pk;break;case 2:A=Gk;break;case 3:A=ck;break;case 4:A=hk;break}return A}N(ZT,"getModifierPoolForType");const Hk=[768/1024,195/1024,48/1024,12/1024,1/1024],Al=new Map;function Na(E,A,s=0){const R=ZT(A);Al.forEach((L,o)=>{Al.set(o,!1)});const a={},i={},r=Object.fromEntries(new Map(Object.keys(R).map(L=>{a[L]=[];const o=new Map,l=[];let C=0,M=0;R[L].reduce((D,_)=>{const P=_,h=n.findModifiers(f=>f.type.id===P.modifierType.id,A===0),H=P.modifierType instanceof cE?P.modifierType.generateType(E):P.modifierType,d=!h.length||H instanceof DA||H instanceof kT||h.find(f=>f.stackCount<f.getMaxStackCount(!0))?P.weight instanceof Function?P.weight(E,s):P.weight:0;if(P.maxWeight){const f=P.modifierType.id;l.push(f);const B=d;i[f]={weight:B,tier:parseInt(L),tierPercent:0,totalPercent:0},C+=B}if(d)D+=d;else return a[L].push(M++),D;return Al.has(_.modifierType.id)&&Al.set(_.modifierType.id,!0),o.set(D,M++),D},0);for(const D of l)i[D].tierPercent=Math.floor(i[D].weight/C*1e4)/100;return[L,Object.fromEntries(o)]})));for(const L of Object.keys(i))i[L].totalPercent=Math.floor(i[L].tierPercent*Hk[i[L].tier]*100)/100,i[L].tier=w[i[L].tier];switch(A){case 0:b6=r,$_=a;break;case 1:case 2:z_=r;break;case 3:Z6=r;break;case 4:k6=r;break}}N(Na,"regenerateModifierPoolThresholds");function dk(E){return J[E]}N(dk,"getModifierTypeFuncById");function B1(E,A,s,R){const a=[],i=Math.min(E*5,50);if(!R)new Array(E).fill(0).map((r,L)=>{a.push(wM(a,i,A,s&&s.length>L?s[L]:void 0))});else{if(R!=null&&R.guaranteedModifierTypeOptions&&R.guaranteedModifierTypeOptions.length>0&&a.push(...R.guaranteedModifierTypeOptions),R.guaranteedModifierTypeFuncs&&R.guaranteedModifierTypeFuncs.length>0&&R.guaranteedModifierTypeFuncs.forEach((r,L)=>{var M;const o=Object.keys(J).find(D=>J[D]===r);let l=(M=J[o])==null?void 0:M.call(J);l=l.withIdFromFunc(J[o]).withTierFromPool(0,A);const C=l instanceof cE?l.generateType(A):l;if(C){const D=new Is(C,0);a.push(D)}}),R.guaranteedModifierTiers&&R.guaranteedModifierTiers.length>0){const r=R.allowLuckUpgrades??!0;R.guaranteedModifierTiers.forEach(L=>{a.push(wM(a,i,A,L,r))})}if(a.length<E&&R.fillRemaining)for(;a.length<E;)a.push(wM(a,i,A,void 0))}return fk(a,A),a}N(B1,"getPlayerModifierTypeOptions");function wM(E,A,s,R,a){a=a??!0;let i=ti(s,0,R,void 0,0,a),r=0;for(;E.length&&++r<A&&E.filter(L=>L.type.name===(i==null?void 0:i.type.name)||L.type.group===(i==null?void 0:i.type.group)).length;)i=ti(s,0,(i==null?void 0:i.type.tier)??R,i==null?void 0:i.upgradeCount,0,a);return i}N(wM,"getModifierTypeOptionWithRetry");function fk(E,A){const s=Math.min(E.length,Ye.ITEM_REWARD_OVERRIDE.length);for(let R=0;R<s;R++){const a=Ye.ITEM_REWARD_OVERRIDE[R],i=J[a.name];let r=i();if(r instanceof cE){const L="type"in a&&a.type!==null?[a.type]:void 0;r=r.generateType(A,L)}r&&(E[R].type=r.withIdFromFunc(i).withTierFromPool(0,A))}}N(fk,"overridePlayerModifierTypeOptions");function X6(E,A){return E%10?[[new Is(J.POTION(),0,A*.2),new Is(J.ETHER(),0,A*.4),new Is(J.REVIVE(),0,A*2)],[new Is(J.SUPER_POTION(),0,A*.45),new Is(J.FULL_HEAL(),0,A)],[new Is(J.ELIXIR(),0,A),new Is(J.MAX_ETHER(),0,A)],[new Is(J.HYPER_POTION(),0,A*.8),new Is(J.MAX_REVIVE(),0,A*2.75),new Is(J.MEMORY_MUSHROOM(),0,A*4)],[new Is(J.MAX_POTION(),0,A*1.5),new Is(J.MAX_ELIXIR(),0,A*2.5)],[new Is(J.FULL_RESTORE(),0,A*2.25)],[new Is(J.SACRED_ASH(),0,A*10)]].slice(0,Math.ceil(Math.max(E+10,0)/30)).flat():[]}N(X6,"getPlayerShopModifierTypeOptionsForWave");function Bk(E,A){var o;let s;switch(E){case w.ULTRA:s=5;break;case w.GREAT:s=3;break;default:s=1;break}const R=50;let a=ti([],3,E),i=0,r;for(;++i<R&&(r=A.find(l=>{var C;return l.type.id===((C=a==null?void 0:a.type)==null?void 0:C.id)}))&&r.getMaxStackCount()<r.stackCount+(i<10?s:1);)a=ti([],3,E);const L=(o=a==null?void 0:a.type)==null?void 0:o.newModifier();return L.stackCount=s,L}N(Bk,"getEnemyBuffModifierForWave");function gk(E,A,s,R,a=0){const i=new Array(A).fill(0).map(()=>{var r;return(r=ti(s,R,void 0,a&&!ce(a)?1:0))==null?void 0:r.type});return E%1e3||i.push(HM(J.MINI_BLACK_HOLE)),i}N(gk,"getEnemyModifierTypesForWave");function Kk(E){var s,R;const A=[];for(const a of E)for(let i=0;i<3;i++){const r=ce(64);let L;r>25?L=w.COMMON:r>12?L=w.GREAT:r>4?L=w.ULTRA:r?L=w.ROGUE:L=w.MASTER;const o=(R=(s=ti(E,4,L))==null?void 0:s.type)==null?void 0:R.newModifier(a);A.push(o)}return A}N(Kk,"getDailyRunStarterModifiers");function ti(E,A,s,R,a=0,i=!0){const r=!A,L=ZT(A);let o;switch(A){case 0:o=b6;break;case 1:o=z_;break;case 2:o=z_;break;case 3:o=Z6;break;case 4:o=k6;break}if(s===void 0){const P=ce(1024);if(R||(R=0),r&&P&&i){const h=Hr(E),H=Math.floor(128/((h+4)/4));let d=!1;do d=ce(H)<4,d&&R++;while(d)}for(P>255?s=w.COMMON:P>60?s=w.GREAT:P>12?s=w.ULTRA:P?s=w.ROGUE:s=w.MASTER,s+=R;s&&(!ki.hasOwnProperty(s)||!ki[s].length);)s--,R&&R--}else if(R===void 0&&r){if(R=0,s<w.MASTER&&i){const P=E.filter(H=>H.isShiny()&&!H.isFainted()).length,h=Math.floor(32/((P+2)/2));for(;ki.hasOwnProperty(s+R+1)&&ki[s+R+1].length&&!ce(h);)R++;s+=R}}else a===10&&s&&(a=0,s--);const l=Object.keys(o[s]),C=parseInt(l[l.length-1]),M=ce(C);let D;for(const P of l){const h=parseInt(P);if(M<h){D=o[s][h];break}}if(D===void 0)return null;r&&console.log(D,$_[s].filter(P=>P<=D).length,$_[s]);let _=L[s][D].modifierType;return _ instanceof cE&&(_=_.generateType(E),_===null)?(r&&console.log(w[s],R),ti(E,A,s,R,++a)):(console.log(_,r?"":"(enemy)"),new Is(_,R))}N(ti,"getNewModifierTypeOption");function mk(E){let A=ki[E||w.COMMON][0];return A instanceof Fe&&(A=A.modifierType),A}N(mk,"getDefaultModifierTypeForTier");const eg=class eg{constructor(A,s,R=0){this.type=A,this.upgradeCount=s,this.cost=Math.min(Math.round(R),Number.MAX_SAFE_INTEGER)}};N(eg,"ModifierTypeOption");let Is=eg;function Hr(E){if(n.gameMode.isDaily){const R=new Et(0);return n.executeWithSeedOffset(()=>{R.value=ce(15)},0,n.seed),R.value}const A=n.eventManager.getEventLuckBoostedSpecies(),s=Phaser.Math.Clamp(E.map(R=>R.isAllowedInBattle()?R.getLuck()+(A.includes(R.species.speciesId)?1:0):0).reduce((R,a)=>R+=a,0),0,14);return Math.min(n.eventManager.getEventLuckBoost()+(s??0),14)}N(Hr,"getPartyLuckValue");function Q6(E){return["D","C","C+","B-","B","B+","A-","A","A+","A++","S","S+","SS","SS+","SSS"][E]}N(Q6,"getLuckString");function J6(E){let A;return E>11?A=w.LUXURY:E>9?A=w.MASTER:E>5?A=w.ROGUE:E>2?A=w.ULTRA:E?A=w.GREAT:A=w.COMMON,xi(A)}N(J6,"getLuckTextTint");const tg=class tg{constructor(A,s){const R=A instanceof kA?A:null;this.player=s,this.typeId=R?R.type.id:A.typeId,R?"getPregenArgs"in A.type&&(this.typePregenArgs=A.type.getPregenArgs()):A.typePregenArgs&&(this.typePregenArgs=A.typePregenArgs),this.args=R?R.getArgs():A.args||[],this.stackCount=A.stackCount,this.className=R?R.constructor.name:A.className}toModifier(A){const s=dk(this.typeId);if(!s)return null;try{let R=s();R.id=this.typeId,R instanceof cE&&(R=R.generateType(this.player?n.getPlayerParty():n.getEnemyField(),this.typePregenArgs));const a=Reflect.construct(A,[R].concat(this.args).concat(this.stackCount));return a.stackCount>a.getMaxStackCount()&&(a.stackCount=a.getMaxStackCount()),a}catch(R){return console.error(R),null}}};N(tg,"ModifierData");let xa=tg;var Tt=(E=>(E[E.NONE=0]="NONE",E[E.MISTY=1]="MISTY",E[E.ELECTRIC=2]="ELECTRIC",E[E.GRASSY=3]="GRASSY",E[E.PSYCHIC=4]="PSYCHIC",E))(Tt||{});const Ag=class Ag{constructor(A,s){this.terrainType=A,this.turnsLeft=s||0}lapse(){return this.turnsLeft?!!--this.turnsLeft:!0}getAttackTypeMultiplier(A){switch(this.terrainType){case 2:if(A===I.ELECTRIC)return 1.3;break;case 3:if(A===I.GRASS)return 1.3;break;case 4:if(A===I.PSYCHIC)return 1.3;break}return 1}isMoveTerrainCancelled(A,s,R){switch(this.terrainType){case 4:if(!R.hasAttr(JR))return R.getPriority(A)>0&&A.getOpponents().some(a=>s.includes(a.getBattlerIndex())&&a.isGrounded())}return!1}};N(Ag,"Terrain");let LC=Ag;function Fk(E){switch(E){case 1:return u.t("terrain:misty");case 2:return u.t("terrain:electric");case 3:return u.t("terrain:grassy");case 4:return u.t("terrain:psychic")}return""}N(Fk,"getTerrainName");function pk(E){switch(E){case 1:return[232,136,200];case 2:return[248,248,120];case 3:return[120,200,80];case 4:return[160,64,160]}return[0,0,0]}N(pk,"getTerrainColor");const Eg=class Eg{constructor(A,s){this.weatherType=A,this.turnsLeft=this.isImmutable()?0:s||0}lapse(){return this.isImmutable()?!0:this.turnsLeft?!!--this.turnsLeft:!0}isImmutable(){switch(this.weatherType){case Oe.HEAVY_RAIN:case Oe.HARSH_SUN:case Oe.STRONG_WINDS:return!0}return!1}isDamaging(){switch(this.weatherType){case Oe.SANDSTORM:case Oe.HAIL:return!0}return!1}isTypeDamageImmune(A){switch(this.weatherType){case Oe.SANDSTORM:return A===I.GROUND||A===I.ROCK||A===I.STEEL;case Oe.HAIL:return A===I.ICE}return!1}getAttackTypeMultiplier(A){switch(this.weatherType){case Oe.SUNNY:case Oe.HARSH_SUN:if(A===I.FIRE)return 1.5;if(A===I.WATER)return .5;break;case Oe.RAIN:case Oe.HEAVY_RAIN:if(A===I.FIRE)return .5;if(A===I.WATER)return 1.5;break}return 1}isMoveWeatherCancelled(A,s){const R=A.getMoveType(s);switch(this.weatherType){case Oe.HARSH_SUN:return s instanceof g&&R===I.WATER;case Oe.HEAVY_RAIN:return s instanceof g&&R===I.FIRE}return!1}isEffectSuppressed(){const A=n.getField(!0);for(const s of A){let R=s.getAbility().getAttrs(Li)[0];if(R||(R=s.hasPassive()?s.getPassiveAbility().getAttrs(Li)[0]:null),R&&(!this.isImmutable()||R.affectsImmutable))return!0}return!1}};N(Eg,"Weather");let XT=Eg;function Bx(E){switch(E){case Oe.SUNNY:return u.t("weather:sunnyStartMessage");case Oe.RAIN:return u.t("weather:rainStartMessage");case Oe.SANDSTORM:return u.t("weather:sandstormStartMessage");case Oe.HAIL:return u.t("weather:hailStartMessage");case Oe.SNOW:return u.t("weather:snowStartMessage");case Oe.FOG:return u.t("weather:fogStartMessage");case Oe.HEAVY_RAIN:return u.t("weather:heavyRainStartMessage");case Oe.HARSH_SUN:return u.t("weather:harshSunStartMessage");case Oe.STRONG_WINDS:return u.t("weather:strongWindsStartMessage")}return null}N(Bx,"getWeatherStartMessage");function Wk(E){switch(E){case Oe.SUNNY:return u.t("weather:sunnyLapseMessage");case Oe.RAIN:return u.t("weather:rainLapseMessage");case Oe.SANDSTORM:return u.t("weather:sandstormLapseMessage");case Oe.HAIL:return u.t("weather:hailLapseMessage");case Oe.SNOW:return u.t("weather:snowLapseMessage");case Oe.FOG:return u.t("weather:fogLapseMessage");case Oe.HEAVY_RAIN:return u.t("weather:heavyRainLapseMessage");case Oe.HARSH_SUN:return u.t("weather:harshSunLapseMessage");case Oe.STRONG_WINDS:return u.t("weather:strongWindsLapseMessage")}return null}N(Wk,"getWeatherLapseMessage");function Yk(E,A){switch(E){case Oe.SANDSTORM:return u.t("weather:sandstormDamageMessage",{pokemonNameWithAffix:te(A)});case Oe.HAIL:return u.t("weather:hailDamageMessage",{pokemonNameWithAffix:te(A)})}return null}N(Yk,"getWeatherDamageMessage");function yk(E){switch(E){case Oe.SUNNY:return u.t("weather:sunnyClearMessage");case Oe.RAIN:return u.t("weather:rainClearMessage");case Oe.SANDSTORM:return u.t("weather:sandstormClearMessage");case Oe.HAIL:return u.t("weather:hailClearMessage");case Oe.SNOW:return u.t("weather:snowClearMessage");case Oe.FOG:return u.t("weather:fogClearMessage");case Oe.HEAVY_RAIN:return u.t("weather:heavyRainClearMessage");case Oe.HARSH_SUN:return u.t("weather:harshSunClearMessage");case Oe.STRONG_WINDS:return u.t("weather:strongWindsClearMessage")}return null}N(yk,"getWeatherClearMessage");function wk(E){switch(E){case Tt.MISTY:return u.t("terrain:mistyStartMessage");case Tt.ELECTRIC:return u.t("terrain:electricStartMessage");case Tt.GRASSY:return u.t("terrain:grassyStartMessage");case Tt.PSYCHIC:return u.t("terrain:psychicStartMessage");default:return console.warn("getTerrainStartMessage not defined. Using default null"),null}}N(wk,"getTerrainStartMessage");function vk(E){switch(E){case Tt.MISTY:return u.t("terrain:mistyClearMessage");case Tt.ELECTRIC:return u.t("terrain:electricClearMessage");case Tt.GRASSY:return u.t("terrain:grassyClearMessage");case Tt.PSYCHIC:return u.t("terrain:psychicClearMessage");default:return console.warn("getTerrainClearMessage not defined. Using default null"),null}}N(vk,"getTerrainClearMessage");function Vk(E,A){return A===Tt.MISTY?u.t("terrain:mistyBlockMessage",{pokemonNameWithAffix:te(E)}):u.t("terrain:defaultBlockMessage",{pokemonNameWithAffix:te(E),terrainName:Fk(A)})}N(Vk,"getTerrainBlockMessage");function $6(E){var R;let A=[];const s=E.getTimeOfDay()<2;switch(E.biomeType){case T.GRASS:A=[{weatherType:Oe.NONE,weight:7}],s&&A.push({weatherType:Oe.SUNNY,weight:3});break;case T.TALL_GRASS:A=[{weatherType:Oe.NONE,weight:8},{weatherType:Oe.RAIN,weight:5}],s&&A.push({weatherType:Oe.SUNNY,weight:8});break;case T.FOREST:A=[{weatherType:Oe.NONE,weight:8},{weatherType:Oe.RAIN,weight:5}];break;case T.SEA:A=[{weatherType:Oe.NONE,weight:3},{weatherType:Oe.RAIN,weight:12}];break;case T.SWAMP:A=[{weatherType:Oe.NONE,weight:3},{weatherType:Oe.RAIN,weight:4},{weatherType:Oe.FOG,weight:1}];break;case T.BEACH:A=[{weatherType:Oe.NONE,weight:8},{weatherType:Oe.RAIN,weight:3}],s&&A.push({weatherType:Oe.SUNNY,weight:5});break;case T.LAKE:A=[{weatherType:Oe.NONE,weight:10},{weatherType:Oe.RAIN,weight:5},{weatherType:Oe.FOG,weight:1}];break;case T.SEABED:A=[{weatherType:Oe.RAIN,weight:1}];break;case T.BADLANDS:A=[{weatherType:Oe.NONE,weight:8},{weatherType:Oe.SANDSTORM,weight:2}],s&&A.push({weatherType:Oe.SUNNY,weight:5});break;case T.DESERT:A=[{weatherType:Oe.SANDSTORM,weight:2}],s&&A.push({weatherType:Oe.SUNNY,weight:2});break;case T.ICE_CAVE:A=[{weatherType:Oe.NONE,weight:3},{weatherType:Oe.SNOW,weight:4},{weatherType:Oe.HAIL,weight:1}];break;case T.MEADOW:A=[{weatherType:Oe.NONE,weight:2}],s&&A.push({weatherType:Oe.SUNNY,weight:2});case T.VOLCANO:A=[{weatherType:s?Oe.SUNNY:Oe.NONE,weight:1}];break;case T.GRAVEYARD:A=[{weatherType:Oe.NONE,weight:3},{weatherType:Oe.FOG,weight:1}];break;case T.JUNGLE:A=[{weatherType:Oe.NONE,weight:8},{weatherType:Oe.RAIN,weight:2}];break;case T.SNOWY_FOREST:A=[{weatherType:Oe.SNOW,weight:7},{weatherType:Oe.HAIL,weight:1}];break;case T.ISLAND:A=[{weatherType:Oe.NONE,weight:5},{weatherType:Oe.RAIN,weight:1}],s&&A.push({weatherType:Oe.SUNNY,weight:2});break}if(E.biomeType===T.TOWN&&n.eventManager.isEventActive()&&((R=n.eventManager.getWeather())==null||R.map(a=>A.push(a))),A.length>1){let a=0;A.forEach(L=>a+=L.weight);const i=ce(a);let r=0;for(const L of A)if(r+=L.weight,i<r)return L.weatherType}return A.length?A[0].weatherType:Oe.NONE}N($6,"getRandomWeatherType");const sg=class sg{constructor(A){const s=A instanceof kD?A:null;this.biome=s?s.biomeType:A.biome,this.weather=s?s.weather:A.weather?new XT(A.weather.weatherType,A.weather.turnsLeft):null,this.terrain=s?s.terrain:A.terrain?new LC(A.terrain.terrainType,A.terrain.turnsLeft):null,this.tags=[],A.tags&&(this.tags=A.tags.map(R=>UJ(R)))}};N(sg,"ArenaData");let QT=sg;const Rg=class Rg{constructor(A){const s=A instanceof Gs?A:null;this.trainerType=s?s.config.trainerType:A.trainerType,this.variant=A.hasOwnProperty("variant")?A.variant:A.female?OA.FEMALE:OA.DEFAULT,this.partyTemplateIndex=A.partyMemberTemplateIndex,this.name=A.name,this.partnerName=A.partnerName}toTrainer(){return new Gs(this.trainerType,this.variant,this.partyTemplateIndex,this.name,this.partnerName)}};N(Rg,"TrainerData");let JT=Rg;var $T=(E=>(E[E.NONE=0]="NONE",E.LINEAR="Linear",E.QUADRATIC="Quad",E.CUBIC="Cubic",E.QUARTIC="Quart",E.QUINTIC="Quint",E.SINUSOIDAL="Sine",E.EXPONENTIAL="Expo",E.CIRCULAR="Circ",E.ELASTIC="Elastic",E.BACK="Back",E.BOUNCE="Bounce",E.STEPPED="Stepped",E))($T||{}),bn=(E=>(E[E.REROLL=0]="REROLL",E[E.REWARDS=1]="REWARDS",E[E.SHOP=2]="SHOP",E[E.CHECK_TEAM=3]="CHECK_TEAM",E))(bn||{});const DL=new Array(11).fill(null).map((E,A)=>A?{value:(A*10).toString(),label:(A*10).toString()}:{value:"Mute",label:u.t("settings:mute")}),xk=new Array(9).fill(null).map((E,A)=>{const s=((A+1)*10).toString();return{value:s,label:s}}),hR=[{value:"Off",label:u.t("settings:off")},{value:"On",label:u.t("settings:on")}],bk=[{value:"Auto",label:u.t("settings:auto")},{value:"Disabled",label:u.t("settings:disabled")}],kk=[{value:"Auto",label:u.t("settings:auto")},{value:"Disabled",label:u.t("settings:disabled"),needConfirmation:!0,confirmationMessage:u.t("settings:confirmDisableTouch")}],z6=[{value:"Rewards",label:u.t("settings:rewards")},{value:"Shop",label:u.t("settings:shop")},{value:"Reroll",label:u.t("settings:reroll")},{value:"Check Team",label:u.t("settings:checkTeam")}],Zk=z6.map(E=>{switch(E.value){case"Rewards":return bn.REWARDS;case"Shop":return bn.SHOP;case"Reroll":return bn.REROLL;case"Check Team":return bn.CHECK_TEAM;default:throw new Error(`Unknown value: ${E.value}`)}});var dM=(E=>(E[E.GENERAL=0]="GENERAL",E[E.DISPLAY=1]="DISPLAY",E[E.AUDIO=2]="AUDIO",E))(dM||{});const It={Game_Speed:"GAME_SPEED",HP_Bar_Speed:"HP_BAR_SPEED",EXP_Gains_Speed:"EXP_GAINS_SPEED",EXP_Party_Display:"EXP_PARTY_DISPLAY",Skip_Seen_Dialogues:"SKIP_SEEN_DIALOGUES",Egg_Skip:"EGG_SKIP",Battle_Style:"BATTLE_STYLE",Enable_Retries:"ENABLE_RETRIES",Hide_IVs:"HIDE_IVS",Tutorials:"TUTORIALS",Touch_Controls:"TOUCH_CONTROLS",Vibration:"VIBRATION",Language:"LANGUAGE",UI_Theme:"UI_THEME",Window_Type:"WINDOW_TYPE",Money_Format:"MONEY_FORMAT",Damage_Numbers:"DAMAGE_NUMBERS",Move_Animations:"MOVE_ANIMATIONS",Show_Stats_on_Level_Up:"SHOW_LEVEL_UP_STATS",Shop_Cursor_Target:"SHOP_CURSOR_TARGET",Command_Cursor_Memory:"COMMAND_CURSOR_MEMORY",Candy_Upgrade_Notification:"CANDY_UPGRADE_NOTIFICATION",Candy_Upgrade_Display:"CANDY_UPGRADE_DISPLAY",Move_Info:"MOVE_INFO",Show_Moveset_Flyout:"SHOW_MOVESET_FLYOUT",Show_Arena_Flyout:"SHOW_ARENA_FLYOUT",Show_Time_Of_Day_Widget:"SHOW_TIME_OF_DAY_WIDGET",Time_Of_Day_Animation:"TIME_OF_DAY_ANIMATION",Sprite_Set:"SPRITE_SET",Fusion_Palette_Swaps:"FUSION_PALETTE_SWAPS",Player_Gender:"PLAYER_GENDER",Type_Hints:"TYPE_HINTS",Master_Volume:"MASTER_VOLUME",BGM_Volume:"BGM_VOLUME",Field_Volume:"FIELD_VOLUME",SE_Volume:"SE_VOLUME",UI_Volume:"UI_SOUND_EFFECTS",Music_Preference:"MUSIC_PREFERENCE",Show_BGM_Bar:"SHOW_BGM_BAR",Move_Touch_Controls:"MOVE_TOUCH_CONTROLS",Shop_Overlay_Opacity:"SHOP_OVERLAY_OPACITY"};var rr=(E=>(E[E.GENFIVE=0]="GENFIVE",E[E.ALLGENS=1]="ALLGENS",E))(rr||{});const YA=[{key:It.Game_Speed,label:u.t("settings:gameSpeed"),options:[{value:"1",label:"1x"},{value:"1.25",label:"1.25x"},{value:"1.5",label:"1.5x"},{value:"2",label:"2x"},{value:"2.5",label:"2.5x"},{value:"3",label:"3x"},{value:"4",label:"4x"},{value:"5",label:"5x"}],default:3,type:0},{key:It.HP_Bar_Speed,label:u.t("settings:hpBarSpeed"),options:[{value:"Normal",label:u.t("settings:normal")},{value:"Fast",label:u.t("settings:fast")},{value:"Faster",label:u.t("settings:faster")},{value:"Skip",label:u.t("settings:skip")}],default:0,type:0},{key:It.EXP_Gains_Speed,label:u.t("settings:expGainsSpeed"),options:[{value:"Normal",label:u.t("settings:normal")},{value:"Fast",label:u.t("settings:fast")},{value:"Faster",label:u.t("settings:faster")},{value:"Skip",label:u.t("settings:skip")}],default:0,type:0},{key:It.EXP_Party_Display,label:u.t("settings:expPartyDisplay"),options:[{value:"Normal",label:u.t("settings:normal")},{value:"Level Up Notification",label:u.t("settings:levelUpNotifications")},{value:"Skip",label:u.t("settings:skip")}],default:0,type:0},{key:It.Skip_Seen_Dialogues,label:u.t("settings:skipSeenDialogues"),options:hR,default:0,type:0},{key:It.Egg_Skip,label:u.t("settings:eggSkip"),options:[{value:"Never",label:u.t("settings:never")},{value:"Ask",label:u.t("settings:ask")},{value:"Always",label:u.t("settings:always")}],default:1,type:0},{key:It.Battle_Style,label:u.t("settings:battleStyle"),options:[{value:"Switch",label:u.t("settings:switch")},{value:"Set",label:u.t("settings:set")}],default:0,type:0},{key:It.Command_Cursor_Memory,label:u.t("settings:commandCursorMemory"),options:hR,default:0,type:0},{key:It.Enable_Retries,label:u.t("settings:enableRetries"),options:hR,default:0,type:0},{key:It.Hide_IVs,label:u.t("settings:hideIvs"),options:hR,default:0,type:0},{key:It.Tutorials,label:u.t("settings:tutorials"),options:hR,default:1,type:0},{key:It.Vibration,label:u.t("settings:vibrations"),options:bk,default:0,type:0},{key:It.Touch_Controls,label:u.t("settings:touchControls"),options:kk,default:0,type:0,isHidden:N(()=>!gl(),"isHidden")},{key:It.Move_Touch_Controls,label:u.t("settings:moveTouchControls"),options:[{value:"Configure",label:u.t("settings:change")}],default:0,type:0,activatable:!0,isHidden:N(()=>!gl(),"isHidden")},{key:It.Language,label:u.t("settings:language"),options:[{value:"English",label:"English"},{value:"Change",label:u.t("settings:change")}],default:0,type:1,requireReload:!0},{key:It.UI_Theme,label:u.t("settings:uiTheme"),options:[{value:"Default",label:u.t("settings:default")},{value:"Legacy",label:u.t("settings:legacy")}],default:0,type:1,requireReload:!0},{key:It.Window_Type,label:u.t("settings:windowType"),options:new Array(5).fill(null).map((E,A)=>{const s=(A+1).toString();return{value:s,label:s}}),default:0,type:1},{key:It.Money_Format,label:u.t("settings:moneyFormat"),options:[{value:"Normal",label:u.t("settings:normal")},{value:"Abbreviated",label:u.t("settings:abbreviated")}],default:0,type:1},{key:It.Damage_Numbers,label:u.t("settings:damageNumbers"),options:[{value:"Off",label:u.t("settings:off")},{value:"Simple",label:u.t("settings:simple")},{value:"Fancy",label:u.t("settings:fancy")}],default:0,type:1},{key:It.Move_Animations,label:u.t("settings:moveAnimations"),options:hR,default:1,type:1},{key:It.Show_Stats_on_Level_Up,label:u.t("settings:showStatsOnLevelUp"),options:hR,default:1,type:1},{key:It.Candy_Upgrade_Notification,label:u.t("settings:candyUpgradeNotification"),options:[{value:"Off",label:u.t("settings:off")},{value:"Passives Only",label:u.t("settings:passivesOnly")},{value:"On",label:u.t("settings:on")}],default:0,type:1},{key:It.Candy_Upgrade_Display,label:u.t("settings:candyUpgradeDisplay"),options:[{value:"Icon",label:u.t("settings:icon")},{value:"Animation",label:u.t("settings:animation")}],default:0,type:1,requireReload:!0},{key:It.Move_Info,label:u.t("settings:moveInfo"),options:hR,default:1,type:1},{key:It.Show_Moveset_Flyout,label:u.t("settings:showMovesetFlyout"),options:hR,default:1,type:1},{key:It.Show_Arena_Flyout,label:u.t("settings:showArenaFlyout"),options:hR,default:1,type:1},{key:It.Show_Time_Of_Day_Widget,label:u.t("settings:showTimeOfDayWidget"),options:hR,default:1,type:1,requireReload:!0},{key:It.Time_Of_Day_Animation,label:u.t("settings:timeOfDayAnimation"),options:[{value:"Bounce",label:u.t("settings:bounce")},{value:"Back",label:u.t("settings:timeOfDay_back")}],default:0,type:1},{key:It.Sprite_Set,label:u.t("settings:spriteSet"),options:[{value:"Consistent",label:u.t("settings:consistent")},{value:"Mixed Animated",label:u.t("settings:mixedAnimated")}],default:0,type:1,requireReload:!0},{key:It.Fusion_Palette_Swaps,label:u.t("settings:fusionPaletteSwaps"),options:hR,default:1,type:1},{key:It.Player_Gender,label:u.t("settings:playerGender"),options:[{value:"Boy",label:u.t("settings:boy")},{value:"Girl",label:u.t("settings:girl")}],default:0,type:1},{key:It.Type_Hints,label:u.t("settings:typeHints"),options:hR,default:0,type:1},{key:It.Show_BGM_Bar,label:u.t("settings:showBgmBar"),options:hR,default:1,type:1},{key:It.Master_Volume,label:u.t("settings:masterVolume"),options:DL,default:5,type:2},{key:It.BGM_Volume,label:u.t("settings:bgmVolume"),options:DL,default:10,type:2},{key:It.Field_Volume,label:u.t("settings:fieldVolume"),options:DL,default:10,type:2},{key:It.SE_Volume,label:u.t("settings:seVolume"),options:DL,default:10,type:2},{key:It.UI_Volume,label:u.t("settings:uiVolume"),options:DL,default:10,type:2},{key:It.Music_Preference,label:u.t("settings:musicPreference"),options:[{value:"Gen V + PMD",label:u.t("settings:musicGenFive")},{value:"All Gens",label:u.t("settings:musicAllGens")}],default:1,type:2,requireReload:!0},{key:It.Shop_Cursor_Target,label:u.t("settings:shopCursorTarget"),options:z6,default:0,type:1},{key:It.Shop_Overlay_Opacity,label:u.t("settings:shopOverlayOpacity"),options:xk,default:7,type:1,requireReload:!1}];function q6(E){return YA.findIndex(A=>A.key===E)}N(q6,"settingIndex");function Xk(){YA.forEach(E=>q_(E.key,E.default))}N(Xk,"resetSettings");function q_(E,A){const s=q6(E);if(s===-1)return!1;switch(YA[s].key){case It.Game_Speed:n.gameSpeed=parseFloat(YA[s].options[A].value.replace("x",""));break;case It.Master_Volume:n.masterVolume=A?parseInt(YA[s].options[A].value)*.01:0,n.updateSoundVolume();break;case It.BGM_Volume:n.bgmVolume=A?parseInt(YA[s].options[A].value)*.01:0,n.updateSoundVolume();break;case It.Field_Volume:n.fieldVolume=A?parseInt(YA[s].options[A].value)*.01:0,n.updateSoundVolume();break;case It.SE_Volume:n.seVolume=A?parseInt(YA[s].options[A].value)*.01:0,n.updateSoundVolume();break;case It.UI_Volume:n.uiVolume=A?parseInt(YA[s].options[A].value)*.01:0;break;case It.Music_Preference:n.musicPreference=A;break;case It.Damage_Numbers:n.damageNumbersMode=A;break;case It.UI_Theme:n.uiTheme=A;break;case It.Window_Type:v7(parseInt(YA[s].options[A].value));break;case It.Tutorials:n.enableTutorials=YA[s].options[A].value==="On";break;case It.Move_Info:n.enableMoveInfo=YA[s].options[A].value==="On";break;case It.Enable_Retries:n.enableRetries=YA[s].options[A].value==="On";break;case It.Hide_IVs:n.hideIvs=YA[s].options[A].value==="On";break;case It.Skip_Seen_Dialogues:n.skipSeenDialogues=YA[s].options[A].value==="On";break;case It.Egg_Skip:n.eggSkipPreference=A;break;case It.Battle_Style:n.battleStyle=A;break;case It.Show_BGM_Bar:n.showBgmBar=YA[s].options[A].value==="On";break;case It.Candy_Upgrade_Notification:if(n.candyUpgradeNotification===A)break;n.candyUpgradeNotification=A,n.eventTarget.dispatchEvent(new r_(A));break;case It.Candy_Upgrade_Display:n.candyUpgradeDisplay=A;case It.Money_Format:switch(YA[s].options[A].value){case"Normal":n.moneyFormat=O_.NORMAL;break;case"Abbreviated":n.moneyFormat=O_.ABBREVIATED;break}n.updateMoneyText(!1);break;case It.Sprite_Set:n.experimentalSprites=!!A,A&&n.initExpSprites();break;case It.Move_Animations:n.moveAnimations=YA[s].options[A].value==="On";break;case It.Show_Moveset_Flyout:n.showMovesetFlyout=YA[s].options[A].value==="On";break;case It.Show_Arena_Flyout:n.showArenaFlyout=YA[s].options[A].value==="On";break;case It.Show_Time_Of_Day_Widget:n.showTimeOfDayWidget=YA[s].options[A].value==="On";break;case It.Time_Of_Day_Animation:n.timeOfDayAnimation=YA[s].options[A].value==="Bounce"?$T.BOUNCE:$T.BACK;break;case It.Show_Stats_on_Level_Up:n.showLevelUpStats=YA[s].options[A].value==="On";break;case It.Shop_Cursor_Target:const R=Zk[A];n.shopCursorTarget=R;break;case It.Command_Cursor_Memory:n.commandCursorMemory=YA[s].options[A].value==="On";break;case It.EXP_Gains_Speed:n.expGainsSpeed=A;break;case It.EXP_Party_Display:n.expParty=A;break;case It.HP_Bar_Speed:n.hpBarSpeed=A;break;case It.Fusion_Palette_Swaps:n.fusionPaletteSwaps=!!A;break;case It.Player_Gender:if(n.gameData){const i=YA[s].options[A].value==="Girl";n.gameData.gender=i?Vt.FEMALE:Vt.MALE,n.trainer.setTexture(n.trainer.texture.key.replace(i?"m":"f",i?"f":"m"))}else return!1;break;case It.Touch_Controls:n.enableTouchControls=YA[s].options[A].value!=="Disabled"&&gl();const a=document.getElementById("touchControls");a&&a.classList.toggle("visible",n.enableTouchControls);break;case It.Vibration:n.enableVibration=YA[s].options[A].value!=="Disabled"&&gl();break;case It.Type_Hints:n.typeHints=YA[s].options[A].value==="On";break;case It.Language:if(A&&n.ui){const i=N(()=>{n.ui.revertMode(),n.ui.getHandler().setOptionCursor(-1,0,!0)},"cancelHandler"),r=N(L=>{try{return u.changeLanguage(L),localStorage.setItem("prLang",L),i(),window.location.reload(),!0}catch(o){return console.error("Error changing locale:",o),!1}},"changeLocaleHandler");return n.ui.setOverlayMode(Ie.OPTION_SELECT,{options:[{label:"English",handler:N(()=>r("en"),"handler")},{label:"Español (ES)",handler:N(()=>r("es-ES"),"handler")},{label:"Italiano",handler:N(()=>r("it"),"handler")},{label:"Français",handler:N(()=>r("fr"),"handler")},{label:"Deutsch",handler:N(()=>r("de"),"handler")},{label:"Português (BR)",handler:N(()=>r("pt-BR"),"handler")},{label:"简体中文",handler:N(()=>r("zh-CN"),"handler")},{label:"繁體中文",handler:N(()=>r("zh-TW"),"handler")},{label:"한국어",handler:N(()=>r("ko"),"handler")},{label:"日本語",handler:N(()=>r("ja"),"handler")},{label:u.t("settings:back"),handler:N(()=>i(),"handler")}],maxOptions:7}),!1}break;case It.Shop_Overlay_Opacity:n.updateShopOverlayOpacity(parseInt(YA[s].options[A].value)*.01);break}return!0}N(q_,"setSetting");var WE=(E=>(E[E.GACHA_MOVE=0]="GACHA_MOVE",E[E.GACHA_LEGENDARY=1]="GACHA_LEGENDARY",E[E.GACHA_SHINY=2]="GACHA_SHINY",E[E.SAME_SPECIES_EGG=3]="SAME_SPECIES_EGG",E[E.EVENT=4]="EVENT",E))(WE||{});const gx=64,vM=256,Qk=52,Jk=8,$k=1,Kx=1,zk=412,qk=59,jk=9,eZ=10,tZ=25,AZ=50,EZ=100,sZ=50,RZ=128,OZ=64,nZ=12,IZ=8,mx=8,aZ=192,iZ=6,rZ=3,LZ=3,j6=4,e8=1,xL={[e.BULBASAUR]:m.COMMON,[e.CHARMANDER]:m.COMMON,[e.SQUIRTLE]:m.COMMON,[e.CATERPIE]:m.COMMON,[e.WEEDLE]:m.COMMON,[e.PIDGEY]:m.COMMON,[e.RATTATA]:m.COMMON,[e.SPEAROW]:m.COMMON,[e.EKANS]:m.COMMON,[e.SANDSHREW]:m.COMMON,[e.NIDORAN_F]:m.COMMON,[e.NIDORAN_M]:m.COMMON,[e.VULPIX]:m.COMMON,[e.ZUBAT]:m.COMMON,[e.ODDISH]:m.COMMON,[e.PARAS]:m.COMMON,[e.VENONAT]:m.COMMON,[e.DIGLETT]:m.COMMON,[e.MEOWTH]:m.COMMON,[e.PSYDUCK]:m.COMMON,[e.MANKEY]:m.RARE,[e.GROWLITHE]:m.RARE,[e.POLIWAG]:m.COMMON,[e.ABRA]:m.RARE,[e.MACHOP]:m.COMMON,[e.BELLSPROUT]:m.COMMON,[e.TENTACOOL]:m.COMMON,[e.GEODUDE]:m.COMMON,[e.PONYTA]:m.COMMON,[e.SLOWPOKE]:m.COMMON,[e.MAGNEMITE]:m.RARE,[e.FARFETCHD]:m.RARE,[e.DODUO]:m.COMMON,[e.SEEL]:m.COMMON,[e.GRIMER]:m.COMMON,[e.SHELLDER]:m.RARE,[e.GASTLY]:m.RARE,[e.ONIX]:m.COMMON,[e.DROWZEE]:m.COMMON,[e.KRABBY]:m.COMMON,[e.VOLTORB]:m.COMMON,[e.EXEGGCUTE]:m.COMMON,[e.CUBONE]:m.COMMON,[e.LICKITUNG]:m.RARE,[e.KOFFING]:m.COMMON,[e.RHYHORN]:m.RARE,[e.TANGELA]:m.COMMON,[e.KANGASKHAN]:m.RARE,[e.HORSEA]:m.COMMON,[e.GOLDEEN]:m.COMMON,[e.STARYU]:m.COMMON,[e.SCYTHER]:m.RARE,[e.PINSIR]:m.RARE,[e.TAUROS]:m.RARE,[e.MAGIKARP]:m.COMMON,[e.LAPRAS]:m.RARE,[e.DITTO]:m.COMMON,[e.EEVEE]:m.COMMON,[e.PORYGON]:m.RARE,[e.OMANYTE]:m.RARE,[e.KABUTO]:m.RARE,[e.AERODACTYL]:m.RARE,[e.ARTICUNO]:m.EPIC,[e.ZAPDOS]:m.EPIC,[e.MOLTRES]:m.EPIC,[e.DRATINI]:m.RARE,[e.MEWTWO]:m.LEGENDARY,[e.MEW]:m.EPIC,[e.CHIKORITA]:m.COMMON,[e.CYNDAQUIL]:m.COMMON,[e.TOTODILE]:m.COMMON,[e.SENTRET]:m.COMMON,[e.HOOTHOOT]:m.COMMON,[e.LEDYBA]:m.COMMON,[e.SPINARAK]:m.COMMON,[e.CHINCHOU]:m.COMMON,[e.PICHU]:m.RARE,[e.CLEFFA]:m.COMMON,[e.IGGLYBUFF]:m.COMMON,[e.TOGEPI]:m.COMMON,[e.NATU]:m.COMMON,[e.MAREEP]:m.COMMON,[e.HOPPIP]:m.COMMON,[e.AIPOM]:m.COMMON,[e.SUNKERN]:m.COMMON,[e.YANMA]:m.COMMON,[e.WOOPER]:m.COMMON,[e.MURKROW]:m.COMMON,[e.MISDREAVUS]:m.COMMON,[e.UNOWN]:m.COMMON,[e.GIRAFARIG]:m.COMMON,[e.PINECO]:m.COMMON,[e.DUNSPARCE]:m.COMMON,[e.GLIGAR]:m.COMMON,[e.SNUBBULL]:m.COMMON,[e.QWILFISH]:m.COMMON,[e.SHUCKLE]:m.COMMON,[e.HERACROSS]:m.RARE,[e.SNEASEL]:m.RARE,[e.TEDDIURSA]:m.RARE,[e.SLUGMA]:m.COMMON,[e.SWINUB]:m.COMMON,[e.CORSOLA]:m.COMMON,[e.REMORAID]:m.COMMON,[e.DELIBIRD]:m.COMMON,[e.SKARMORY]:m.RARE,[e.HOUNDOUR]:m.COMMON,[e.PHANPY]:m.COMMON,[e.STANTLER]:m.COMMON,[e.SMEARGLE]:m.COMMON,[e.TYROGUE]:m.COMMON,[e.SMOOCHUM]:m.COMMON,[e.ELEKID]:m.COMMON,[e.MAGBY]:m.COMMON,[e.MILTANK]:m.RARE,[e.RAIKOU]:m.EPIC,[e.ENTEI]:m.EPIC,[e.SUICUNE]:m.EPIC,[e.LARVITAR]:m.RARE,[e.LUGIA]:m.LEGENDARY,[e.HO_OH]:m.LEGENDARY,[e.CELEBI]:m.EPIC,[e.TREECKO]:m.COMMON,[e.TORCHIC]:m.COMMON,[e.MUDKIP]:m.COMMON,[e.POOCHYENA]:m.COMMON,[e.ZIGZAGOON]:m.COMMON,[e.WURMPLE]:m.COMMON,[e.LOTAD]:m.COMMON,[e.SEEDOT]:m.COMMON,[e.TAILLOW]:m.COMMON,[e.WINGULL]:m.COMMON,[e.RALTS]:m.RARE,[e.SURSKIT]:m.COMMON,[e.SHROOMISH]:m.COMMON,[e.SLAKOTH]:m.RARE,[e.NINCADA]:m.RARE,[e.WHISMUR]:m.COMMON,[e.MAKUHITA]:m.COMMON,[e.AZURILL]:m.COMMON,[e.NOSEPASS]:m.COMMON,[e.SKITTY]:m.COMMON,[e.SABLEYE]:m.COMMON,[e.MAWILE]:m.COMMON,[e.ARON]:m.COMMON,[e.MEDITITE]:m.COMMON,[e.ELECTRIKE]:m.COMMON,[e.PLUSLE]:m.COMMON,[e.MINUN]:m.COMMON,[e.VOLBEAT]:m.COMMON,[e.ILLUMISE]:m.COMMON,[e.GULPIN]:m.COMMON,[e.CARVANHA]:m.COMMON,[e.WAILMER]:m.COMMON,[e.NUMEL]:m.COMMON,[e.TORKOAL]:m.COMMON,[e.SPOINK]:m.COMMON,[e.SPINDA]:m.COMMON,[e.TRAPINCH]:m.COMMON,[e.CACNEA]:m.COMMON,[e.SWABLU]:m.COMMON,[e.ZANGOOSE]:m.RARE,[e.SEVIPER]:m.COMMON,[e.LUNATONE]:m.COMMON,[e.SOLROCK]:m.COMMON,[e.BARBOACH]:m.COMMON,[e.CORPHISH]:m.COMMON,[e.BALTOY]:m.COMMON,[e.LILEEP]:m.RARE,[e.ANORITH]:m.RARE,[e.FEEBAS]:m.RARE,[e.CASTFORM]:m.COMMON,[e.KECLEON]:m.COMMON,[e.SHUPPET]:m.COMMON,[e.DUSKULL]:m.COMMON,[e.TROPIUS]:m.COMMON,[e.ABSOL]:m.RARE,[e.WYNAUT]:m.COMMON,[e.SNORUNT]:m.COMMON,[e.SPHEAL]:m.COMMON,[e.CLAMPERL]:m.COMMON,[e.RELICANTH]:m.RARE,[e.LUVDISC]:m.COMMON,[e.BAGON]:m.RARE,[e.BELDUM]:m.RARE,[e.REGIROCK]:m.EPIC,[e.REGICE]:m.EPIC,[e.REGISTEEL]:m.EPIC,[e.LATIAS]:m.EPIC,[e.LATIOS]:m.EPIC,[e.KYOGRE]:m.LEGENDARY,[e.GROUDON]:m.LEGENDARY,[e.RAYQUAZA]:m.LEGENDARY,[e.JIRACHI]:m.EPIC,[e.DEOXYS]:m.EPIC,[e.TURTWIG]:m.COMMON,[e.CHIMCHAR]:m.COMMON,[e.PIPLUP]:m.COMMON,[e.STARLY]:m.COMMON,[e.BIDOOF]:m.COMMON,[e.KRICKETOT]:m.COMMON,[e.SHINX]:m.COMMON,[e.BUDEW]:m.COMMON,[e.CRANIDOS]:m.RARE,[e.SHIELDON]:m.RARE,[e.BURMY]:m.COMMON,[e.COMBEE]:m.COMMON,[e.PACHIRISU]:m.COMMON,[e.BUIZEL]:m.COMMON,[e.CHERUBI]:m.COMMON,[e.SHELLOS]:m.COMMON,[e.DRIFLOON]:m.COMMON,[e.BUNEARY]:m.COMMON,[e.GLAMEOW]:m.COMMON,[e.CHINGLING]:m.COMMON,[e.STUNKY]:m.COMMON,[e.BRONZOR]:m.COMMON,[e.BONSLY]:m.COMMON,[e.MIME_JR]:m.COMMON,[e.HAPPINY]:m.RARE,[e.CHATOT]:m.COMMON,[e.SPIRITOMB]:m.RARE,[e.GIBLE]:m.RARE,[e.MUNCHLAX]:m.RARE,[e.RIOLU]:m.RARE,[e.HIPPOPOTAS]:m.COMMON,[e.SKORUPI]:m.COMMON,[e.CROAGUNK]:m.COMMON,[e.CARNIVINE]:m.COMMON,[e.FINNEON]:m.COMMON,[e.MANTYKE]:m.COMMON,[e.SNOVER]:m.COMMON,[e.ROTOM]:m.RARE,[e.UXIE]:m.EPIC,[e.MESPRIT]:m.EPIC,[e.AZELF]:m.EPIC,[e.DIALGA]:m.LEGENDARY,[e.PALKIA]:m.LEGENDARY,[e.HEATRAN]:m.EPIC,[e.REGIGIGAS]:m.LEGENDARY,[e.GIRATINA]:m.LEGENDARY,[e.CRESSELIA]:m.EPIC,[e.PHIONE]:m.EPIC,[e.MANAPHY]:m.EPIC,[e.DARKRAI]:m.EPIC,[e.SHAYMIN]:m.EPIC,[e.ARCEUS]:m.LEGENDARY,[e.VICTINI]:m.EPIC,[e.SNIVY]:m.COMMON,[e.TEPIG]:m.COMMON,[e.OSHAWOTT]:m.COMMON,[e.PATRAT]:m.COMMON,[e.LILLIPUP]:m.COMMON,[e.PURRLOIN]:m.COMMON,[e.PANSAGE]:m.COMMON,[e.PANSEAR]:m.COMMON,[e.PANPOUR]:m.COMMON,[e.MUNNA]:m.COMMON,[e.PIDOVE]:m.COMMON,[e.BLITZLE]:m.COMMON,[e.ROGGENROLA]:m.COMMON,[e.WOOBAT]:m.COMMON,[e.DRILBUR]:m.RARE,[e.AUDINO]:m.RARE,[e.TIMBURR]:m.RARE,[e.TYMPOLE]:m.COMMON,[e.THROH]:m.RARE,[e.SAWK]:m.RARE,[e.SEWADDLE]:m.COMMON,[e.VENIPEDE]:m.COMMON,[e.COTTONEE]:m.COMMON,[e.PETILIL]:m.COMMON,[e.BASCULIN]:m.RARE,[e.SANDILE]:m.RARE,[e.DARUMAKA]:m.RARE,[e.MARACTUS]:m.COMMON,[e.DWEBBLE]:m.COMMON,[e.SCRAGGY]:m.COMMON,[e.SIGILYPH]:m.RARE,[e.YAMASK]:m.COMMON,[e.TIRTOUGA]:m.RARE,[e.ARCHEN]:m.RARE,[e.TRUBBISH]:m.COMMON,[e.ZORUA]:m.COMMON,[e.MINCCINO]:m.COMMON,[e.GOTHITA]:m.COMMON,[e.SOLOSIS]:m.COMMON,[e.DUCKLETT]:m.COMMON,[e.VANILLITE]:m.COMMON,[e.DEERLING]:m.COMMON,[e.EMOLGA]:m.COMMON,[e.KARRABLAST]:m.COMMON,[e.FOONGUS]:m.COMMON,[e.FRILLISH]:m.COMMON,[e.ALOMOMOLA]:m.RARE,[e.JOLTIK]:m.COMMON,[e.FERROSEED]:m.COMMON,[e.KLINK]:m.COMMON,[e.TYNAMO]:m.COMMON,[e.ELGYEM]:m.COMMON,[e.LITWICK]:m.COMMON,[e.AXEW]:m.RARE,[e.CUBCHOO]:m.COMMON,[e.CRYOGONAL]:m.RARE,[e.SHELMET]:m.COMMON,[e.STUNFISK]:m.COMMON,[e.MIENFOO]:m.COMMON,[e.DRUDDIGON]:m.RARE,[e.GOLETT]:m.COMMON,[e.PAWNIARD]:m.RARE,[e.BOUFFALANT]:m.RARE,[e.RUFFLET]:m.COMMON,[e.VULLABY]:m.COMMON,[e.HEATMOR]:m.RARE,[e.DURANT]:m.RARE,[e.DEINO]:m.RARE,[e.LARVESTA]:m.RARE,[e.COBALION]:m.EPIC,[e.TERRAKION]:m.EPIC,[e.VIRIZION]:m.EPIC,[e.TORNADUS]:m.EPIC,[e.THUNDURUS]:m.EPIC,[e.RESHIRAM]:m.LEGENDARY,[e.ZEKROM]:m.LEGENDARY,[e.LANDORUS]:m.EPIC,[e.KYUREM]:m.LEGENDARY,[e.KELDEO]:m.EPIC,[e.MELOETTA]:m.EPIC,[e.GENESECT]:m.EPIC,[e.CHESPIN]:m.COMMON,[e.FENNEKIN]:m.COMMON,[e.FROAKIE]:m.COMMON,[e.BUNNELBY]:m.COMMON,[e.FLETCHLING]:m.COMMON,[e.SCATTERBUG]:m.COMMON,[e.LITLEO]:m.COMMON,[e.FLABEBE]:m.COMMON,[e.SKIDDO]:m.COMMON,[e.PANCHAM]:m.COMMON,[e.FURFROU]:m.COMMON,[e.ESPURR]:m.COMMON,[e.HONEDGE]:m.RARE,[e.SPRITZEE]:m.COMMON,[e.SWIRLIX]:m.COMMON,[e.INKAY]:m.COMMON,[e.BINACLE]:m.COMMON,[e.SKRELP]:m.COMMON,[e.CLAUNCHER]:m.COMMON,[e.HELIOPTILE]:m.COMMON,[e.TYRUNT]:m.RARE,[e.AMAURA]:m.RARE,[e.HAWLUCHA]:m.RARE,[e.DEDENNE]:m.COMMON,[e.CARBINK]:m.COMMON,[e.GOOMY]:m.RARE,[e.KLEFKI]:m.COMMON,[e.PHANTUMP]:m.COMMON,[e.PUMPKABOO]:m.COMMON,[e.BERGMITE]:m.COMMON,[e.NOIBAT]:m.RARE,[e.XERNEAS]:m.LEGENDARY,[e.YVELTAL]:m.LEGENDARY,[e.ZYGARDE]:m.LEGENDARY,[e.DIANCIE]:m.EPIC,[e.HOOPA]:m.EPIC,[e.VOLCANION]:m.EPIC,[e.ETERNAL_FLOETTE]:m.EPIC,[e.ROWLET]:m.COMMON,[e.LITTEN]:m.COMMON,[e.POPPLIO]:m.COMMON,[e.PIKIPEK]:m.COMMON,[e.YUNGOOS]:m.COMMON,[e.GRUBBIN]:m.COMMON,[e.CRABRAWLER]:m.COMMON,[e.ORICORIO]:m.COMMON,[e.CUTIEFLY]:m.COMMON,[e.ROCKRUFF]:m.COMMON,[e.WISHIWASHI]:m.COMMON,[e.MAREANIE]:m.COMMON,[e.MUDBRAY]:m.COMMON,[e.DEWPIDER]:m.COMMON,[e.FOMANTIS]:m.COMMON,[e.MORELULL]:m.COMMON,[e.SALANDIT]:m.COMMON,[e.STUFFUL]:m.COMMON,[e.BOUNSWEET]:m.COMMON,[e.COMFEY]:m.RARE,[e.ORANGURU]:m.RARE,[e.PASSIMIAN]:m.RARE,[e.WIMPOD]:m.COMMON,[e.SANDYGAST]:m.COMMON,[e.PYUKUMUKU]:m.COMMON,[e.TYPE_NULL]:m.EPIC,[e.MINIOR]:m.RARE,[e.KOMALA]:m.COMMON,[e.TURTONATOR]:m.RARE,[e.TOGEDEMARU]:m.COMMON,[e.MIMIKYU]:m.RARE,[e.BRUXISH]:m.RARE,[e.DRAMPA]:m.RARE,[e.DHELMISE]:m.RARE,[e.JANGMO_O]:m.RARE,[e.TAPU_KOKO]:m.EPIC,[e.TAPU_LELE]:m.EPIC,[e.TAPU_BULU]:m.EPIC,[e.TAPU_FINI]:m.EPIC,[e.COSMOG]:m.LEGENDARY,[e.NIHILEGO]:m.EPIC,[e.BUZZWOLE]:m.EPIC,[e.PHEROMOSA]:m.EPIC,[e.XURKITREE]:m.EPIC,[e.CELESTEELA]:m.EPIC,[e.KARTANA]:m.EPIC,[e.GUZZLORD]:m.EPIC,[e.NECROZMA]:m.LEGENDARY,[e.MAGEARNA]:m.EPIC,[e.MARSHADOW]:m.EPIC,[e.POIPOLE]:m.EPIC,[e.STAKATAKA]:m.EPIC,[e.BLACEPHALON]:m.EPIC,[e.ZERAORA]:m.EPIC,[e.MELTAN]:m.EPIC,[e.ALOLA_RATTATA]:m.COMMON,[e.ALOLA_SANDSHREW]:m.RARE,[e.ALOLA_VULPIX]:m.RARE,[e.ALOLA_DIGLETT]:m.RARE,[e.ALOLA_MEOWTH]:m.RARE,[e.ALOLA_GEODUDE]:m.RARE,[e.ALOLA_GRIMER]:m.RARE,[e.GROOKEY]:m.COMMON,[e.SCORBUNNY]:m.COMMON,[e.SOBBLE]:m.COMMON,[e.SKWOVET]:m.COMMON,[e.ROOKIDEE]:m.COMMON,[e.BLIPBUG]:m.COMMON,[e.NICKIT]:m.COMMON,[e.GOSSIFLEUR]:m.COMMON,[e.WOOLOO]:m.COMMON,[e.CHEWTLE]:m.COMMON,[e.YAMPER]:m.COMMON,[e.ROLYCOLY]:m.COMMON,[e.APPLIN]:m.COMMON,[e.SILICOBRA]:m.COMMON,[e.CRAMORANT]:m.COMMON,[e.ARROKUDA]:m.COMMON,[e.TOXEL]:m.COMMON,[e.SIZZLIPEDE]:m.COMMON,[e.CLOBBOPUS]:m.COMMON,[e.SINISTEA]:m.COMMON,[e.HATENNA]:m.COMMON,[e.IMPIDIMP]:m.COMMON,[e.MILCERY]:m.COMMON,[e.FALINKS]:m.RARE,[e.PINCURCHIN]:m.COMMON,[e.SNOM]:m.COMMON,[e.STONJOURNER]:m.COMMON,[e.EISCUE]:m.COMMON,[e.INDEEDEE]:m.RARE,[e.MORPEKO]:m.COMMON,[e.CUFANT]:m.COMMON,[e.DRACOZOLT]:m.RARE,[e.ARCTOZOLT]:m.RARE,[e.DRACOVISH]:m.RARE,[e.ARCTOVISH]:m.RARE,[e.DURALUDON]:m.RARE,[e.DREEPY]:m.RARE,[e.ZACIAN]:m.LEGENDARY,[e.ZAMAZENTA]:m.LEGENDARY,[e.ETERNATUS]:m.LEGENDARY,[e.KUBFU]:m.EPIC,[e.ZARUDE]:m.EPIC,[e.REGIELEKI]:m.EPIC,[e.REGIDRAGO]:m.EPIC,[e.GLASTRIER]:m.EPIC,[e.SPECTRIER]:m.EPIC,[e.CALYREX]:m.LEGENDARY,[e.ENAMORUS]:m.EPIC,[e.GALAR_MEOWTH]:m.RARE,[e.GALAR_PONYTA]:m.RARE,[e.GALAR_SLOWPOKE]:m.RARE,[e.GALAR_FARFETCHD]:m.RARE,[e.GALAR_ARTICUNO]:m.EPIC,[e.GALAR_ZAPDOS]:m.EPIC,[e.GALAR_MOLTRES]:m.EPIC,[e.GALAR_CORSOLA]:m.RARE,[e.GALAR_ZIGZAGOON]:m.RARE,[e.GALAR_DARUMAKA]:m.RARE,[e.GALAR_YAMASK]:m.RARE,[e.GALAR_STUNFISK]:m.RARE,[e.HISUI_GROWLITHE]:m.RARE,[e.HISUI_VOLTORB]:m.RARE,[e.HISUI_QWILFISH]:m.RARE,[e.HISUI_SNEASEL]:m.RARE,[e.HISUI_ZORUA]:m.RARE,[e.SPRIGATITO]:m.COMMON,[e.FUECOCO]:m.COMMON,[e.QUAXLY]:m.COMMON,[e.LECHONK]:m.COMMON,[e.TAROUNTULA]:m.COMMON,[e.NYMBLE]:m.COMMON,[e.PAWMI]:m.COMMON,[e.TANDEMAUS]:m.RARE,[e.FIDOUGH]:m.COMMON,[e.SMOLIV]:m.COMMON,[e.SQUAWKABILLY]:m.COMMON,[e.NACLI]:m.RARE,[e.CHARCADET]:m.RARE,[e.TADBULB]:m.COMMON,[e.WATTREL]:m.COMMON,[e.MASCHIFF]:m.COMMON,[e.SHROODLE]:m.COMMON,[e.BRAMBLIN]:m.COMMON,[e.TOEDSCOOL]:m.COMMON,[e.KLAWF]:m.COMMON,[e.CAPSAKID]:m.COMMON,[e.RELLOR]:m.COMMON,[e.FLITTLE]:m.COMMON,[e.TINKATINK]:m.RARE,[e.WIGLETT]:m.COMMON,[e.BOMBIRDIER]:m.COMMON,[e.FINIZEN]:m.RARE,[e.VAROOM]:m.RARE,[e.CYCLIZAR]:m.RARE,[e.ORTHWORM]:m.RARE,[e.GLIMMET]:m.RARE,[e.GREAVARD]:m.COMMON,[e.FLAMIGO]:m.RARE,[e.CETODDLE]:m.COMMON,[e.VELUZA]:m.RARE,[e.DONDOZO]:m.RARE,[e.TATSUGIRI]:m.RARE,[e.GREAT_TUSK]:m.EPIC,[e.SCREAM_TAIL]:m.EPIC,[e.BRUTE_BONNET]:m.EPIC,[e.FLUTTER_MANE]:m.EPIC,[e.SLITHER_WING]:m.EPIC,[e.SANDY_SHOCKS]:m.EPIC,[e.IRON_TREADS]:m.EPIC,[e.IRON_BUNDLE]:m.EPIC,[e.IRON_HANDS]:m.EPIC,[e.IRON_JUGULIS]:m.EPIC,[e.IRON_MOTH]:m.EPIC,[e.IRON_THORNS]:m.EPIC,[e.FRIGIBAX]:m.RARE,[e.GIMMIGHOUL]:m.RARE,[e.WO_CHIEN]:m.EPIC,[e.CHIEN_PAO]:m.EPIC,[e.TING_LU]:m.EPIC,[e.CHI_YU]:m.EPIC,[e.ROARING_MOON]:m.EPIC,[e.IRON_VALIANT]:m.EPIC,[e.KORAIDON]:m.LEGENDARY,[e.MIRAIDON]:m.LEGENDARY,[e.WALKING_WAKE]:m.EPIC,[e.IRON_LEAVES]:m.EPIC,[e.POLTCHAGEIST]:m.RARE,[e.OKIDOGI]:m.EPIC,[e.MUNKIDORI]:m.EPIC,[e.FEZANDIPITI]:m.EPIC,[e.OGERPON]:m.EPIC,[e.GOUGING_FIRE]:m.EPIC,[e.RAGING_BOLT]:m.EPIC,[e.IRON_BOULDER]:m.EPIC,[e.IRON_CROWN]:m.EPIC,[e.TERAPAGOS]:m.LEGENDARY,[e.PECHARUNT]:m.EPIC,[e.PALDEA_TAUROS]:m.RARE,[e.PALDEA_WOOPER]:m.RARE,[e.BLOODMOON_URSALUNA]:m.EPIC},ba=1073741824,Og=class Og{get id(){return this._id}get tier(){return this._tier}get sourceType(){return this._sourceType}get hatchWaves(){return this._hatchWaves}set hatchWaves(A){this._hatchWaves=A}get timestamp(){return this._timestamp}get species(){return this._species}get isShiny(){return this._isShiny}get variantTier(){return this._variantTier}get eggMoveIndex(){return this._eggMoveIndex}get overrideHiddenAbility(){return this._overrideHiddenAbility}constructor(A){const s=N(a=>{this._sourceType=a==null?void 0:a.sourceType,this._tier=(a==null?void 0:a.tier)??Ye.EGG_TIER_OVERRIDE??this.rollEggTier(),a!=null&&a.pulled&&this.checkForPityTierOverrides(),this._id=(a==null?void 0:a.id)??_A(ba,ba*this._tier),this._sourceType=(a==null?void 0:a.sourceType)??void 0,this._hatchWaves=(a==null?void 0:a.hatchWaves)??this.getEggTierDefaultHatchWaves(),this._timestamp=(a==null?void 0:a.timestamp)??new Date().getTime(),this._isShiny=(a==null?void 0:a.isShiny)??(Ye.EGG_SHINY_OVERRIDE||this.rollShiny()),this._variantTier=(a==null?void 0:a.variantTier)??Ye.EGG_VARIANT_OVERRIDE??this.rollVariant(),this._species=(a==null?void 0:a.species)??this.rollSpecies(),this._overrideHiddenAbility=(a==null?void 0:a.overrideHiddenAbility)??!1,a!=null&&a.species&&(this._tier=this.getEggTier(),this._hatchWaves=a.hatchWaves??this.getEggTierDefaultHatchWaves()),this._species&&!ke(this._species).hasVariants()&&(this._variantTier=vO.STANDARD),this._eggMoveIndex=(a==null?void 0:a.eggMoveIndex)??this.rollEggMoveIndex(),a!=null&&a.pulled&&(this.increasePullStatistic(),this.addEggToGameData())},"generateEggProperties"),R=PM(24);n.executeWithSeedOffset(()=>{s(A)},0,R),this._eggDescriptor=A==null?void 0:A.eggDescriptor}isManaphyEgg(){return this._species===e.PHIONE||this._species===e.MANAPHY||this._tier===m.COMMON&&!(this._id%204)&&!this._species}getKey(){return this.isManaphyEgg()?"manaphy":this._tier.toString()}generatePlayerPokemon(){let A;const s=N(()=>{this._species||(this._isShiny=this.rollShiny(),this._species=this.rollSpecies());let R=ke(this._species);this._species===e.PHIONE&&this._sourceType===WE.SAME_SPECIES_EGG&&(R=ke(ce(mx)?e.PHIONE:e.MANAPHY));let a;const i=this._sourceType===WE.SAME_SPECIES_EGG&&!ce(IZ),r=this._sourceType!==WE.SAME_SPECIES_EGG&&!ce(aZ);R.abilityHidden&&(this._overrideHiddenAbility||i||r)&&(a=2),A=n.addPlayerPokemon(R,1,a,void 0,void 0,!1),A.shiny=this._isShiny,A.variant=this._variantTier;const L=M1(ce(4294967295));for(let o=0;o<A.ivs.length;o++)A.ivs[o]=Math.max(A.ivs[o],L[o])},"generatePlayerPokemonHelper");return A=A,n.executeWithSeedOffset(()=>{s()},this._id,ba.toString()),A}addEggToGameData(){n.gameData.eggs.push(this)}getEggDescriptor(){if(this.isManaphyEgg())return"Manaphy";switch(this.tier){case m.RARE:return u.t("egg:greatTier");case m.EPIC:return u.t("egg:ultraTier");case m.LEGENDARY:return u.t("egg:masterTier");default:return u.t("egg:defaultTier")}}getEggHatchWavesMessage(){return this.hatchWaves<=5?u.t("egg:hatchWavesMessageSoon"):this.hatchWaves<=15?u.t("egg:hatchWavesMessageClose"):this.hatchWaves<=50?u.t("egg:hatchWavesMessageNotClose"):u.t("egg:hatchWavesMessageLongTime")}getEggTypeDescriptor(){switch(this.sourceType){case WE.SAME_SPECIES_EGG:return this._eggDescriptor??u.t("egg:sameSpeciesEgg",{species:ke(this._species).getName()});case WE.GACHA_LEGENDARY:return this._eggDescriptor??`${u.t("egg:gachaTypeLegendary")} (${ke(j_(this.timestamp)).getName()})`;case WE.GACHA_SHINY:return this._eggDescriptor??u.t("egg:gachaTypeShiny");case WE.GACHA_MOVE:return this._eggDescriptor??u.t("egg:gachaTypeMove");case WE.EVENT:return this._eggDescriptor??u.t("egg:eventType");default:return console.warn("getEggTypeDescriptor case not defined. Returning default empty string"),""}}rollEggMoveIndex(){let A=iZ;switch(this._sourceType){case WE.SAME_SPECIES_EGG:A=rZ;break;case WE.GACHA_MOVE:A=LZ;break}const s=this.isManaphyEgg()?2:Math.pow(2,3-this.tier);return ce(A*s)?ce(3):3}getEggTierDefaultHatchWaves(A){if(this._species===e.PHIONE||this._species===e.MANAPHY)return sZ;switch(A??this._tier){case m.COMMON:return eZ;case m.RARE:return tZ;case m.EPIC:return AZ}return EZ}rollEggTier(){const A=this._sourceType===WE.GACHA_LEGENDARY?Kx:0,s=_A(256);return s>=Qk+A?m.COMMON:s>=Jk+A?m.RARE:s>=$k+A?m.EPIC:m.LEGENDARY}rollSpecies(){if(!n)return null;if(this.isManaphyEgg())return ce(mx)!==1?e.PHIONE:e.MANAPHY;if(this.tier===m.LEGENDARY&&this._sourceType===WE.GACHA_LEGENDARY&&!ce(2))return j_(this.timestamp);let A,s;switch(this.tier){case m.RARE:A=4,s=5;break;case m.EPIC:A=6,s=7;break;case m.LEGENDARY:A=8,s=9;break;default:A=1,s=3;break}const R=[e.PHIONE,e.MANAPHY,e.ETERNATUS];let a=Object.keys(xL).filter(l=>xL[l]===this.tier).map(l=>parseInt(l)).filter(l=>!yA.hasOwnProperty(l)&&ke(l).isObtainable()&&R.indexOf(l)===-1);if(n.gameData.unlockPity[this.tier]>=9){const l=a.filter(C=>!n.gameData.dexData[C].caughtAttr&&!n.gameData.eggs.some(M=>M.species===C));l.length&&(a=l)}this.variantTier&&(this.variantTier===vO.RARE||this.variantTier===vO.EPIC)&&(a=a.filter(l=>ke(l).hasVariants()));let i=0;const r=[];for(const l of a){const C=Phaser.Math.Clamp(KA[l],A,s),M=Math.floor(((s-C)/(s-A+1)*1.5+1)*100);r.push(i+M),i+=M}let L;const o=ce(i);for(let l=0;l<r.length;l++)if(o<r[l]){L=a[l];break}return L=L,n.gameData.dexData[L].caughtAttr||n.gameData.eggs.some(l=>l.species===L)?n.gameData.unlockPity[this.tier]=Math.min(n.gameData.unlockPity[this.tier]+1,10):n.gameData.unlockPity[this.tier]=0,L}rollShiny(){let A=RZ;switch(this._sourceType){case WE.GACHA_SHINY:A=OZ;break;case WE.SAME_SPECIES_EGG:A=nZ;break}return!ce(A)}rollVariant(){if(!this.isShiny)return vO.STANDARD;const A=ce(10);return A>=j6?vO.STANDARD:A>=e8?vO.RARE:vO.EPIC}checkForPityTierOverrides(){const A=this._sourceType===WE.GACHA_LEGENDARY?Kx:0;n.gameData.eggPity[m.RARE]+=1,n.gameData.eggPity[m.EPIC]+=1,n.gameData.eggPity[m.LEGENDARY]+=1+A,n.gameData.eggPity[m.LEGENDARY]>=zk&&this._tier===m.COMMON?this._tier=m.LEGENDARY:n.gameData.eggPity[m.EPIC]>=qk&&this._tier===m.COMMON?this._tier=m.EPIC:n.gameData.eggPity[m.RARE]>=jk&&this._tier===m.COMMON&&(this._tier=m.RARE),n.gameData.eggPity[this._tier]=0}increasePullStatistic(){if(n.gameData.gameStats.eggsPulled++,this.isManaphyEgg()){n.gameData.gameStats.manaphyEggsPulled++,this._hatchWaves=this.getEggTierDefaultHatchWaves(m.EPIC);return}switch(this.tier){case m.RARE:n.gameData.gameStats.rareEggsPulled++;break;case m.EPIC:n.gameData.gameStats.epicEggsPulled++;break;case m.LEGENDARY:n.gameData.gameStats.legendaryEggsPulled++;break}}getEggTier(){return xL[this.species]}};N(Og,"Egg");let YI=Og;function NZ(){return Object.entries(xL).filter(E=>E[1]===m.LEGENDARY).map(E=>parseInt(E[0])).filter(E=>ke(E).isObtainable()&&E!==e.ETERNATUS)}N(NZ,"getValidLegendaryGachaSpecies");function j_(E){const A=NZ();let s;const a=new Date(E).getTime(),i=Math.floor(Math.floor(a/864e5)/A.length),r=Math.floor(a/864e5)%A.length;return n.executeWithSeedOffset(()=>{s=Phaser.Math.RND.shuffle(A)[r]},i,ba.toString()),s=s,s}N(j_,"getLegendaryGachaSpeciesForTimestamp");function Zi(E){return xL[E.getRootSpeciesId()]}N(Zi,"getEggTierForSpecies");const ng=class ng{constructor(A){const s=A instanceof YI?A:null;this.id=s?s.id:A.id,this.tier=s?s.tier:A.tier??Math.floor(this.id/ba),A.species===0?this.sourceType=A.gachaType??A.sourceType:this.sourceType=s?s.sourceType:A.sourceType,this.hatchWaves=s?s.hatchWaves:A.hatchWaves,this.timestamp=s?s.timestamp:A.timestamp,this.variantTier=s?s.variantTier:A.variantTier,this.isShiny=s?s.isShiny:A.isShiny,this.species=s?s.species:A.species,this.eggMoveIndex=s?s.eggMoveIndex:A.eggMoveIndex,this.overrideHiddenAbility=s?s.overrideHiddenAbility:A.overrideHiddenAbility}toEgg(){return this.species?new YI({id:this.id,tier:this.tier,sourceType:this.sourceType,hatchWaves:this.hatchWaves,timestamp:this.timestamp,variantTier:this.variantTier,isShiny:this.isShiny,species:this.species,eggMoveIndex:this.eggMoveIndex,overrideHiddenAbility:this.overrideHiddenAbility}):new YI({id:this.id,hatchWaves:this.hatchWaves,sourceType:this.sourceType,timestamp:this.timestamp,tier:Math.floor(this.id/ba)})}};N(ng,"EggData");let NC=ng;var t8={exports:{}},VM={exports:{}};const TZ={},SZ=Object.freeze(Object.defineProperty({__proto__:null,default:TZ},Symbol.toStringTag,{value:"Module"})),oZ=a7(SZ);var Fx;function PA(){return Fx||(Fx=1,function(E,A){(function(s,R){E.exports=R()})(AA,function(){var s=s||function(R,a){var i;if(typeof window<"u"&&window.crypto&&(i=window.crypto),typeof self<"u"&&self.crypto&&(i=self.crypto),typeof globalThis<"u"&&globalThis.crypto&&(i=globalThis.crypto),!i&&typeof window<"u"&&window.msCrypto&&(i=window.msCrypto),!i&&typeof AA<"u"&&AA.crypto&&(i=AA.crypto),!i&&typeof dL=="function")try{i=oZ}catch{}var r=N(function(){if(i){if(typeof i.getRandomValues=="function")try{return i.getRandomValues(new Uint32Array(1))[0]}catch{}if(typeof i.randomBytes=="function")try{return i.randomBytes(4).readInt32LE()}catch{}}throw new Error("Native crypto module could not be used to get secure random number.")},"cryptoSecureRandomInt"),L=Object.create||function(){function f(){}return N(f,"F"),function(B){var F;return f.prototype=B,F=new f,f.prototype=null,F}}(),o={},l=o.lib={},C=l.Base=function(){return{extend:N(function(f){var B=L(this);return f&&B.mixIn(f),(!B.hasOwnProperty("init")||this.init===B.init)&&(B.init=function(){B.$super.init.apply(this,arguments)}),B.init.prototype=B,B.$super=this,B},"extend"),create:N(function(){var f=this.extend();return f.init.apply(f,arguments),f},"create"),init:N(function(){},"init"),mixIn:N(function(f){for(var B in f)f.hasOwnProperty(B)&&(this[B]=f[B]);f.hasOwnProperty("toString")&&(this.toString=f.toString)},"mixIn"),clone:N(function(){return this.init.prototype.extend(this)},"clone")}}(),M=l.WordArray=C.extend({init:N(function(f,B){f=this.words=f||[],B!=a?this.sigBytes=B:this.sigBytes=f.length*4},"init"),toString:N(function(f){return(f||_).stringify(this)},"toString"),concat:N(function(f){var B=this.words,F=f.words,W=this.sigBytes,b=f.sigBytes;if(this.clamp(),W%4)for(var x=0;x<b;x++){var $=F[x>>>2]>>>24-x%4*8&255;B[W+x>>>2]|=$<<24-(W+x)%4*8}else for(var j=0;j<b;j+=4)B[W+j>>>2]=F[j>>>2];return this.sigBytes+=b,this},"concat"),clamp:N(function(){var f=this.words,B=this.sigBytes;f[B>>>2]&=4294967295<<32-B%4*8,f.length=R.ceil(B/4)},"clamp"),clone:N(function(){var f=C.clone.call(this);return f.words=this.words.slice(0),f},"clone"),random:N(function(f){for(var B=[],F=0;F<f;F+=4)B.push(r());return new M.init(B,f)},"random")}),D=o.enc={},_=D.Hex={stringify:N(function(f){for(var B=f.words,F=f.sigBytes,W=[],b=0;b<F;b++){var x=B[b>>>2]>>>24-b%4*8&255;W.push((x>>>4).toString(16)),W.push((x&15).toString(16))}return W.join("")},"stringify"),parse:N(function(f){for(var B=f.length,F=[],W=0;W<B;W+=2)F[W>>>3]|=parseInt(f.substr(W,2),16)<<24-W%8*4;return new M.init(F,B/2)},"parse")},P=D.Latin1={stringify:N(function(f){for(var B=f.words,F=f.sigBytes,W=[],b=0;b<F;b++){var x=B[b>>>2]>>>24-b%4*8&255;W.push(String.fromCharCode(x))}return W.join("")},"stringify"),parse:N(function(f){for(var B=f.length,F=[],W=0;W<B;W++)F[W>>>2]|=(f.charCodeAt(W)&255)<<24-W%4*8;return new M.init(F,B)},"parse")},h=D.Utf8={stringify:N(function(f){try{return decodeURIComponent(escape(P.stringify(f)))}catch{throw new Error("Malformed UTF-8 data")}},"stringify"),parse:N(function(f){return P.parse(unescape(encodeURIComponent(f)))},"parse")},H=l.BufferedBlockAlgorithm=C.extend({reset:N(function(){this._data=new M.init,this._nDataBytes=0},"reset"),_append:N(function(f){typeof f=="string"&&(f=h.parse(f)),this._data.concat(f),this._nDataBytes+=f.sigBytes},"_append"),_process:N(function(f){var B,F=this._data,W=F.words,b=F.sigBytes,x=this.blockSize,$=x*4,j=b/$;f?j=R.ceil(j):j=R.max((j|0)-this._minBufferSize,0);var z=j*x,se=R.min(z*4,b);if(z){for(var Z=0;Z<z;Z+=x)this._doProcessBlock(W,Z);B=W.splice(0,z),F.sigBytes-=se}return new M.init(B,se)},"_process"),clone:N(function(){var f=C.clone.call(this);return f._data=this._data.clone(),f},"clone"),_minBufferSize:0});l.Hasher=H.extend({cfg:C.extend(),init:N(function(f){this.cfg=this.cfg.extend(f),this.reset()},"init"),reset:N(function(){H.reset.call(this),this._doReset()},"reset"),update:N(function(f){return this._append(f),this._process(),this},"update"),finalize:N(function(f){f&&this._append(f);var B=this._doFinalize();return B},"finalize"),blockSize:16,_createHelper:N(function(f){return function(B,F){return new f.init(F).finalize(B)}},"_createHelper"),_createHmacHelper:N(function(f){return function(B,F){return new d.HMAC.init(f,F).finalize(B)}},"_createHmacHelper")});var d=o.algo={};return o}(Math);return s})}(VM)),VM.exports}N(PA,"requireCore");var xM={exports:{}},px;function fM(){return px||(px=1,function(E,A){(function(s,R){E.exports=R(PA())})(AA,function(s){return function(R){var a=s,i=a.lib,r=i.Base,L=i.WordArray,o=a.x64={};o.Word=r.extend({init:N(function(l,C){this.high=l,this.low=C},"init")}),o.WordArray=r.extend({init:N(function(l,C){l=this.words=l||[],C!=R?this.sigBytes=C:this.sigBytes=l.length*8},"init"),toX32:N(function(){for(var l=this.words,C=l.length,M=[],D=0;D<C;D++){var _=l[D];M.push(_.high),M.push(_.low)}return L.create(M,this.sigBytes)},"toX32"),clone:N(function(){for(var l=r.clone.call(this),C=l.words=this.words.slice(0),M=C.length,D=0;D<M;D++)C[D]=C[D].clone();return l},"clone")})}(),s})}(xM)),xM.exports}N(fM,"requireX64Core");var bM={exports:{}},Wx;function lZ(){return Wx||(Wx=1,function(E,A){(function(s,R){E.exports=R(PA())})(AA,function(s){return function(){if(typeof ArrayBuffer=="function"){var R=s,a=R.lib,i=a.WordArray,r=i.init,L=i.init=function(o){if(o instanceof ArrayBuffer&&(o=new Uint8Array(o)),(o instanceof Int8Array||typeof Uint8ClampedArray<"u"&&o instanceof Uint8ClampedArray||o instanceof Int16Array||o instanceof Uint16Array||o instanceof Int32Array||o instanceof Uint32Array||o instanceof Float32Array||o instanceof Float64Array)&&(o=new Uint8Array(o.buffer,o.byteOffset,o.byteLength)),o instanceof Uint8Array){for(var l=o.byteLength,C=[],M=0;M<l;M++)C[M>>>2]|=o[M]<<24-M%4*8;r.call(this,C,l)}else r.apply(this,arguments)};L.prototype=i}}(),s.lib.WordArray})}(bM)),bM.exports}N(lZ,"requireLibTypedarrays");var kM={exports:{}},Yx;function CZ(){return Yx||(Yx=1,function(E,A){(function(s,R){E.exports=R(PA())})(AA,function(s){return function(){var R=s,a=R.lib,i=a.WordArray,r=R.enc;r.Utf16=r.Utf16BE={stringify:N(function(o){for(var l=o.words,C=o.sigBytes,M=[],D=0;D<C;D+=2){var _=l[D>>>2]>>>16-D%4*8&65535;M.push(String.fromCharCode(_))}return M.join("")},"stringify"),parse:N(function(o){for(var l=o.length,C=[],M=0;M<l;M++)C[M>>>1]|=o.charCodeAt(M)<<16-M%2*16;return i.create(C,l*2)},"parse")},r.Utf16LE={stringify:N(function(o){for(var l=o.words,C=o.sigBytes,M=[],D=0;D<C;D+=2){var _=L(l[D>>>2]>>>16-D%4*8&65535);M.push(String.fromCharCode(_))}return M.join("")},"stringify"),parse:N(function(o){for(var l=o.length,C=[],M=0;M<l;M++)C[M>>>1]|=L(o.charCodeAt(M)<<16-M%2*16);return i.create(C,l*2)},"parse")};function L(o){return o<<8&4278255360|o>>>8&16711935}N(L,"swapEndian")}(),s.enc.Utf16})}(kM)),kM.exports}N(CZ,"requireEncUtf16");var ZM={exports:{}},yx;function fi(){return yx||(yx=1,function(E,A){(function(s,R){E.exports=R(PA())})(AA,function(s){return function(){var R=s,a=R.lib,i=a.WordArray,r=R.enc;r.Base64={stringify:N(function(o){var l=o.words,C=o.sigBytes,M=this._map;o.clamp();for(var D=[],_=0;_<C;_+=3)for(var P=l[_>>>2]>>>24-_%4*8&255,h=l[_+1>>>2]>>>24-(_+1)%4*8&255,H=l[_+2>>>2]>>>24-(_+2)%4*8&255,d=P<<16|h<<8|H,f=0;f<4&&_+f*.75<C;f++)D.push(M.charAt(d>>>6*(3-f)&63));var B=M.charAt(64);if(B)for(;D.length%4;)D.push(B);return D.join("")},"stringify"),parse:N(function(o){var l=o.length,C=this._map,M=this._reverseMap;if(!M){M=this._reverseMap=[];for(var D=0;D<C.length;D++)M[C.charCodeAt(D)]=D}var _=C.charAt(64);if(_){var P=o.indexOf(_);P!==-1&&(l=P)}return L(o,l,M)},"parse"),_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="};function L(o,l,C){for(var M=[],D=0,_=0;_<l;_++)if(_%4){var P=C[o.charCodeAt(_-1)]<<_%4*2,h=C[o.charCodeAt(_)]>>>6-_%4*2,H=P|h;M[D>>>2]|=H<<24-D%4*8,D++}return i.create(M,D)}N(L,"parseLoop")}(),s.enc.Base64})}(ZM)),ZM.exports}N(fi,"requireEncBase64");var XM={exports:{}},wx;function UZ(){return wx||(wx=1,function(E,A){(function(s,R){E.exports=R(PA())})(AA,function(s){return function(){var R=s,a=R.lib,i=a.WordArray,r=R.enc;r.Base64url={stringify:N(function(o,l){l===void 0&&(l=!0);var C=o.words,M=o.sigBytes,D=l?this._safe_map:this._map;o.clamp();for(var _=[],P=0;P<M;P+=3)for(var h=C[P>>>2]>>>24-P%4*8&255,H=C[P+1>>>2]>>>24-(P+1)%4*8&255,d=C[P+2>>>2]>>>24-(P+2)%4*8&255,f=h<<16|H<<8|d,B=0;B<4&&P+B*.75<M;B++)_.push(D.charAt(f>>>6*(3-B)&63));var F=D.charAt(64);if(F)for(;_.length%4;)_.push(F);return _.join("")},"stringify"),parse:N(function(o,l){l===void 0&&(l=!0);var C=o.length,M=l?this._safe_map:this._map,D=this._reverseMap;if(!D){D=this._reverseMap=[];for(var _=0;_<M.length;_++)D[M.charCodeAt(_)]=_}var P=M.charAt(64);if(P){var h=o.indexOf(P);h!==-1&&(C=h)}return L(o,C,D)},"parse"),_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",_safe_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"};function L(o,l,C){for(var M=[],D=0,_=0;_<l;_++)if(_%4){var P=C[o.charCodeAt(_-1)]<<_%4*2,h=C[o.charCodeAt(_)]>>>6-_%4*2,H=P|h;M[D>>>2]|=H<<24-D%4*8,D++}return i.create(M,D)}N(L,"parseLoop")}(),s.enc.Base64url})}(XM)),XM.exports}N(UZ,"requireEncBase64url");var QM={exports:{}},vx;function Bi(){return vx||(vx=1,function(E,A){(function(s,R){E.exports=R(PA())})(AA,function(s){return function(R){var a=s,i=a.lib,r=i.WordArray,L=i.Hasher,o=a.algo,l=[];(function(){for(var h=0;h<64;h++)l[h]=R.abs(R.sin(h+1))*4294967296|0})();var C=o.MD5=L.extend({_doReset:N(function(){this._hash=new r.init([1732584193,4023233417,2562383102,271733878])},"_doReset"),_doProcessBlock:N(function(h,H){for(var d=0;d<16;d++){var f=H+d,B=h[f];h[f]=(B<<8|B>>>24)&16711935|(B<<24|B>>>8)&4278255360}var F=this._hash.words,W=h[H+0],b=h[H+1],x=h[H+2],$=h[H+3],j=h[H+4],z=h[H+5],se=h[H+6],Z=h[H+7],q=h[H+8],p=h[H+9],oe=h[H+10],me=h[H+11],Me=h[H+12],We=h[H+13],De=h[H+14],ie=h[H+15],Ae=F[0],ee=F[1],Le=F[2],ue=F[3];Ae=M(Ae,ee,Le,ue,W,7,l[0]),ue=M(ue,Ae,ee,Le,b,12,l[1]),Le=M(Le,ue,Ae,ee,x,17,l[2]),ee=M(ee,Le,ue,Ae,$,22,l[3]),Ae=M(Ae,ee,Le,ue,j,7,l[4]),ue=M(ue,Ae,ee,Le,z,12,l[5]),Le=M(Le,ue,Ae,ee,se,17,l[6]),ee=M(ee,Le,ue,Ae,Z,22,l[7]),Ae=M(Ae,ee,Le,ue,q,7,l[8]),ue=M(ue,Ae,ee,Le,p,12,l[9]),Le=M(Le,ue,Ae,ee,oe,17,l[10]),ee=M(ee,Le,ue,Ae,me,22,l[11]),Ae=M(Ae,ee,Le,ue,Me,7,l[12]),ue=M(ue,Ae,ee,Le,We,12,l[13]),Le=M(Le,ue,Ae,ee,De,17,l[14]),ee=M(ee,Le,ue,Ae,ie,22,l[15]),Ae=D(Ae,ee,Le,ue,b,5,l[16]),ue=D(ue,Ae,ee,Le,se,9,l[17]),Le=D(Le,ue,Ae,ee,me,14,l[18]),ee=D(ee,Le,ue,Ae,W,20,l[19]),Ae=D(Ae,ee,Le,ue,z,5,l[20]),ue=D(ue,Ae,ee,Le,oe,9,l[21]),Le=D(Le,ue,Ae,ee,ie,14,l[22]),ee=D(ee,Le,ue,Ae,j,20,l[23]),Ae=D(Ae,ee,Le,ue,p,5,l[24]),ue=D(ue,Ae,ee,Le,De,9,l[25]),Le=D(Le,ue,Ae,ee,$,14,l[26]),ee=D(ee,Le,ue,Ae,q,20,l[27]),Ae=D(Ae,ee,Le,ue,We,5,l[28]),ue=D(ue,Ae,ee,Le,x,9,l[29]),Le=D(Le,ue,Ae,ee,Z,14,l[30]),ee=D(ee,Le,ue,Ae,Me,20,l[31]),Ae=_(Ae,ee,Le,ue,z,4,l[32]),ue=_(ue,Ae,ee,Le,q,11,l[33]),Le=_(Le,ue,Ae,ee,me,16,l[34]),ee=_(ee,Le,ue,Ae,De,23,l[35]),Ae=_(Ae,ee,Le,ue,b,4,l[36]),ue=_(ue,Ae,ee,Le,j,11,l[37]),Le=_(Le,ue,Ae,ee,Z,16,l[38]),ee=_(ee,Le,ue,Ae,oe,23,l[39]),Ae=_(Ae,ee,Le,ue,We,4,l[40]),ue=_(ue,Ae,ee,Le,W,11,l[41]),Le=_(Le,ue,Ae,ee,$,16,l[42]),ee=_(ee,Le,ue,Ae,se,23,l[43]),Ae=_(Ae,ee,Le,ue,p,4,l[44]),ue=_(ue,Ae,ee,Le,Me,11,l[45]),Le=_(Le,ue,Ae,ee,ie,16,l[46]),ee=_(ee,Le,ue,Ae,x,23,l[47]),Ae=P(Ae,ee,Le,ue,W,6,l[48]),ue=P(ue,Ae,ee,Le,Z,10,l[49]),Le=P(Le,ue,Ae,ee,De,15,l[50]),ee=P(ee,Le,ue,Ae,z,21,l[51]),Ae=P(Ae,ee,Le,ue,Me,6,l[52]),ue=P(ue,Ae,ee,Le,$,10,l[53]),Le=P(Le,ue,Ae,ee,oe,15,l[54]),ee=P(ee,Le,ue,Ae,b,21,l[55]),Ae=P(Ae,ee,Le,ue,q,6,l[56]),ue=P(ue,Ae,ee,Le,ie,10,l[57]),Le=P(Le,ue,Ae,ee,se,15,l[58]),ee=P(ee,Le,ue,Ae,We,21,l[59]),Ae=P(Ae,ee,Le,ue,j,6,l[60]),ue=P(ue,Ae,ee,Le,me,10,l[61]),Le=P(Le,ue,Ae,ee,x,15,l[62]),ee=P(ee,Le,ue,Ae,p,21,l[63]),F[0]=F[0]+Ae|0,F[1]=F[1]+ee|0,F[2]=F[2]+Le|0,F[3]=F[3]+ue|0},"_doProcessBlock"),_doFinalize:N(function(){var h=this._data,H=h.words,d=this._nDataBytes*8,f=h.sigBytes*8;H[f>>>5]|=128<<24-f%32;var B=R.floor(d/4294967296),F=d;H[(f+64>>>9<<4)+15]=(B<<8|B>>>24)&16711935|(B<<24|B>>>8)&4278255360,H[(f+64>>>9<<4)+14]=(F<<8|F>>>24)&16711935|(F<<24|F>>>8)&4278255360,h.sigBytes=(H.length+1)*4,this._process();for(var W=this._hash,b=W.words,x=0;x<4;x++){var $=b[x];b[x]=($<<8|$>>>24)&16711935|($<<24|$>>>8)&4278255360}return W},"_doFinalize"),clone:N(function(){var h=L.clone.call(this);return h._hash=this._hash.clone(),h},"clone")});function M(h,H,d,f,B,F,W){var b=h+(H&d|~H&f)+B+W;return(b<<F|b>>>32-F)+H}N(M,"FF");function D(h,H,d,f,B,F,W){var b=h+(H&f|d&~f)+B+W;return(b<<F|b>>>32-F)+H}N(D,"GG");function _(h,H,d,f,B,F,W){var b=h+(H^d^f)+B+W;return(b<<F|b>>>32-F)+H}N(_,"HH");function P(h,H,d,f,B,F,W){var b=h+(d^(H|~f))+B+W;return(b<<F|b>>>32-F)+H}N(P,"II"),a.MD5=L._createHelper(C),a.HmacMD5=L._createHmacHelper(C)}(Math),s.MD5})}(QM)),QM.exports}N(Bi,"requireMd5");var JM={exports:{}},Vx;function A8(){return Vx||(Vx=1,function(E,A){(function(s,R){E.exports=R(PA())})(AA,function(s){return function(){var R=s,a=R.lib,i=a.WordArray,r=a.Hasher,L=R.algo,o=[],l=L.SHA1=r.extend({_doReset:N(function(){this._hash=new i.init([1732584193,4023233417,2562383102,271733878,3285377520])},"_doReset"),_doProcessBlock:N(function(C,M){for(var D=this._hash.words,_=D[0],P=D[1],h=D[2],H=D[3],d=D[4],f=0;f<80;f++){if(f<16)o[f]=C[M+f]|0;else{var B=o[f-3]^o[f-8]^o[f-14]^o[f-16];o[f]=B<<1|B>>>31}var F=(_<<5|_>>>27)+d+o[f];f<20?F+=(P&h|~P&H)+1518500249:f<40?F+=(P^h^H)+1859775393:f<60?F+=(P&h|P&H|h&H)-1894007588:F+=(P^h^H)-899497514,d=H,H=h,h=P<<30|P>>>2,P=_,_=F}D[0]=D[0]+_|0,D[1]=D[1]+P|0,D[2]=D[2]+h|0,D[3]=D[3]+H|0,D[4]=D[4]+d|0},"_doProcessBlock"),_doFinalize:N(function(){var C=this._data,M=C.words,D=this._nDataBytes*8,_=C.sigBytes*8;return M[_>>>5]|=128<<24-_%32,M[(_+64>>>9<<4)+14]=Math.floor(D/4294967296),M[(_+64>>>9<<4)+15]=D,C.sigBytes=M.length*4,this._process(),this._hash},"_doFinalize"),clone:N(function(){var C=r.clone.call(this);return C._hash=this._hash.clone(),C},"clone")});R.SHA1=r._createHelper(l),R.HmacSHA1=r._createHmacHelper(l)}(),s.SHA1})}(JM)),JM.exports}N(A8,"requireSha1");var $M={exports:{}},xx;function g1(){return xx||(xx=1,function(E,A){(function(s,R){E.exports=R(PA())})(AA,function(s){return function(R){var a=s,i=a.lib,r=i.WordArray,L=i.Hasher,o=a.algo,l=[],C=[];(function(){function _(d){for(var f=R.sqrt(d),B=2;B<=f;B++)if(!(d%B))return!1;return!0}N(_,"isPrime");function P(d){return(d-(d|0))*4294967296|0}N(P,"getFractionalBits");for(var h=2,H=0;H<64;)_(h)&&(H<8&&(l[H]=P(R.pow(h,1/2))),C[H]=P(R.pow(h,1/3)),H++),h++})();var M=[],D=o.SHA256=L.extend({_doReset:N(function(){this._hash=new r.init(l.slice(0))},"_doReset"),_doProcessBlock:N(function(_,P){for(var h=this._hash.words,H=h[0],d=h[1],f=h[2],B=h[3],F=h[4],W=h[5],b=h[6],x=h[7],$=0;$<64;$++){if($<16)M[$]=_[P+$]|0;else{var j=M[$-15],z=(j<<25|j>>>7)^(j<<14|j>>>18)^j>>>3,se=M[$-2],Z=(se<<15|se>>>17)^(se<<13|se>>>19)^se>>>10;M[$]=z+M[$-7]+Z+M[$-16]}var q=F&W^~F&b,p=H&d^H&f^d&f,oe=(H<<30|H>>>2)^(H<<19|H>>>13)^(H<<10|H>>>22),me=(F<<26|F>>>6)^(F<<21|F>>>11)^(F<<7|F>>>25),Me=x+me+q+C[$]+M[$],We=oe+p;x=b,b=W,W=F,F=B+Me|0,B=f,f=d,d=H,H=Me+We|0}h[0]=h[0]+H|0,h[1]=h[1]+d|0,h[2]=h[2]+f|0,h[3]=h[3]+B|0,h[4]=h[4]+F|0,h[5]=h[5]+W|0,h[6]=h[6]+b|0,h[7]=h[7]+x|0},"_doProcessBlock"),_doFinalize:N(function(){var _=this._data,P=_.words,h=this._nDataBytes*8,H=_.sigBytes*8;return P[H>>>5]|=128<<24-H%32,P[(H+64>>>9<<4)+14]=R.floor(h/4294967296),P[(H+64>>>9<<4)+15]=h,_.sigBytes=P.length*4,this._process(),this._hash},"_doFinalize"),clone:N(function(){var _=L.clone.call(this);return _._hash=this._hash.clone(),_},"clone")});a.SHA256=L._createHelper(D),a.HmacSHA256=L._createHmacHelper(D)}(Math),s.SHA256})}($M)),$M.exports}N(g1,"requireSha256");var zM={exports:{}},bx;function uZ(){return bx||(bx=1,function(E,A){(function(s,R,a){E.exports=R(PA(),g1())})(AA,function(s){return function(){var R=s,a=R.lib,i=a.WordArray,r=R.algo,L=r.SHA256,o=r.SHA224=L.extend({_doReset:N(function(){this._hash=new i.init([3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428])},"_doReset"),_doFinalize:N(function(){var l=L._doFinalize.call(this);return l.sigBytes-=4,l},"_doFinalize")});R.SHA224=L._createHelper(o),R.HmacSHA224=L._createHmacHelper(o)}(),s.SHA224})}(zM)),zM.exports}N(uZ,"requireSha224");var qM={exports:{}},kx;function E8(){return kx||(kx=1,function(E,A){(function(s,R,a){E.exports=R(PA(),fM())})(AA,function(s){return function(){var R=s,a=R.lib,i=a.Hasher,r=R.x64,L=r.Word,o=r.WordArray,l=R.algo;function C(){return L.create.apply(L,arguments)}N(C,"X64Word_create");var M=[C(1116352408,3609767458),C(1899447441,602891725),C(3049323471,3964484399),C(3921009573,2173295548),C(961987163,4081628472),C(1508970993,3053834265),C(2453635748,2937671579),C(2870763221,3664609560),C(3624381080,2734883394),C(310598401,1164996542),C(607225278,1323610764),C(1426881987,3590304994),C(1925078388,4068182383),C(2162078206,991336113),C(2614888103,633803317),C(3248222580,3479774868),C(3835390401,2666613458),C(4022224774,944711139),C(264347078,2341262773),C(604807628,2007800933),C(770255983,1495990901),C(1249150122,1856431235),C(1555081692,3175218132),C(1996064986,2198950837),C(2554220882,3999719339),C(2821834349,766784016),C(2952996808,2566594879),C(3210313671,3203337956),C(3336571891,1034457026),C(3584528711,2466948901),C(113926993,3758326383),C(338241895,168717936),C(666307205,1188179964),C(773529912,1546045734),C(1294757372,1522805485),C(1396182291,2643833823),C(1695183700,2343527390),C(1986661051,1014477480),C(2177026350,1206759142),C(2456956037,344077627),C(2730485921,1290863460),C(2820302411,3158454273),C(3259730800,3505952657),C(3345764771,106217008),C(3516065817,3606008344),C(3600352804,1432725776),C(4094571909,1467031594),C(275423344,851169720),C(430227734,3100823752),C(506948616,1363258195),C(659060556,3750685593),C(883997877,3785050280),C(958139571,3318307427),C(1322822218,3812723403),C(1537002063,2003034995),C(1747873779,3602036899),C(1955562222,1575990012),C(2024104815,1125592928),C(2227730452,2716904306),C(2361852424,442776044),C(2428436474,593698344),C(2756734187,3733110249),C(3204031479,2999351573),C(3329325298,3815920427),C(3391569614,3928383900),C(3515267271,566280711),C(3940187606,3454069534),C(4118630271,4000239992),C(116418474,1914138554),C(174292421,2731055270),C(289380356,3203993006),C(460393269,320620315),C(685471733,587496836),C(852142971,1086792851),C(1017036298,365543100),C(1126000580,2618297676),C(1288033470,3409855158),C(1501505948,4234509866),C(1607167915,987167468),C(1816402316,1246189591)],D=[];(function(){for(var P=0;P<80;P++)D[P]=C()})();var _=l.SHA512=i.extend({_doReset:N(function(){this._hash=new o.init([new L.init(1779033703,4089235720),new L.init(3144134277,2227873595),new L.init(1013904242,4271175723),new L.init(2773480762,1595750129),new L.init(1359893119,2917565137),new L.init(2600822924,725511199),new L.init(528734635,4215389547),new L.init(1541459225,327033209)])},"_doReset"),_doProcessBlock:N(function(P,h){for(var H=this._hash.words,d=H[0],f=H[1],B=H[2],F=H[3],W=H[4],b=H[5],x=H[6],$=H[7],j=d.high,z=d.low,se=f.high,Z=f.low,q=B.high,p=B.low,oe=F.high,me=F.low,Me=W.high,We=W.low,De=b.high,ie=b.low,Ae=x.high,ee=x.low,Le=$.high,ue=$.low,de=j,Rt=z,Bt=se,tt=Z,ht=q,eA=p,Xt=oe,XA=me,VA=Me,v=We,Ke=De,fe=ie,re=Ae,ae=ee,Pe=Le,Qe=ue,Ze=0;Ze<80;Ze++){var He,pe,qe=D[Ze];if(Ze<16)pe=qe.high=P[h+Ze*2]|0,He=qe.low=P[h+Ze*2+1]|0;else{var $e=D[Ze-15],Mt=$e.high,Jt=$e.low,xt=(Mt>>>1|Jt<<31)^(Mt>>>8|Jt<<24)^Mt>>>7,_E=(Jt>>>1|Mt<<31)^(Jt>>>8|Mt<<24)^(Jt>>>7|Mt<<25),GR=D[Ze-2],PE=GR.high,cR=GR.low,iE=(PE>>>19|cR<<13)^(PE<<3|cR>>>29)^PE>>>6,En=(cR>>>19|PE<<13)^(cR<<3|PE>>>29)^(cR>>>6|PE<<26),dn=D[Ze-7],fO=dn.high,Jo=dn.low,$o=D[Ze-16],WM=$o.high,zo=$o.low;He=_E+Jo,pe=xt+fO+(He>>>0<_E>>>0?1:0),He=He+En,pe=pe+iE+(He>>>0<En>>>0?1:0),He=He+zo,pe=pe+WM+(He>>>0<zo>>>0?1:0),qe.high=pe,qe.low=He}var qo=VA&Ke^~VA&re,OI=v&fe^~v&ae,gi=de&Bt^de&ht^Bt&ht,t7=Rt&tt^Rt&eA^tt&eA,A7=(de>>>28|Rt<<4)^(de<<30|Rt>>>2)^(de<<25|Rt>>>7),lx=(Rt>>>28|de<<4)^(Rt<<30|de>>>2)^(Rt<<25|de>>>7),E7=(VA>>>14|v<<18)^(VA>>>18|v<<14)^(VA<<23|v>>>9),s7=(v>>>14|VA<<18)^(v>>>18|VA<<14)^(v<<23|VA>>>9),Cx=M[Ze],R7=Cx.high,Ux=Cx.low,xR=Qe+s7,nI=Pe+E7+(xR>>>0<Qe>>>0?1:0),xR=xR+OI,nI=nI+qo+(xR>>>0<OI>>>0?1:0),xR=xR+Ux,nI=nI+R7+(xR>>>0<Ux>>>0?1:0),xR=xR+He,nI=nI+pe+(xR>>>0<He>>>0?1:0),ux=lx+t7,O7=A7+gi+(ux>>>0<lx>>>0?1:0);Pe=re,Qe=ae,re=Ke,ae=fe,Ke=VA,fe=v,v=XA+xR|0,VA=Xt+nI+(v>>>0<XA>>>0?1:0)|0,Xt=ht,XA=eA,ht=Bt,eA=tt,Bt=de,tt=Rt,Rt=xR+ux|0,de=nI+O7+(Rt>>>0<xR>>>0?1:0)|0}z=d.low=z+Rt,d.high=j+de+(z>>>0<Rt>>>0?1:0),Z=f.low=Z+tt,f.high=se+Bt+(Z>>>0<tt>>>0?1:0),p=B.low=p+eA,B.high=q+ht+(p>>>0<eA>>>0?1:0),me=F.low=me+XA,F.high=oe+Xt+(me>>>0<XA>>>0?1:0),We=W.low=We+v,W.high=Me+VA+(We>>>0<v>>>0?1:0),ie=b.low=ie+fe,b.high=De+Ke+(ie>>>0<fe>>>0?1:0),ee=x.low=ee+ae,x.high=Ae+re+(ee>>>0<ae>>>0?1:0),ue=$.low=ue+Qe,$.high=Le+Pe+(ue>>>0<Qe>>>0?1:0)},"_doProcessBlock"),_doFinalize:N(function(){var P=this._data,h=P.words,H=this._nDataBytes*8,d=P.sigBytes*8;h[d>>>5]|=128<<24-d%32,h[(d+128>>>10<<5)+30]=Math.floor(H/4294967296),h[(d+128>>>10<<5)+31]=H,P.sigBytes=h.length*4,this._process();var f=this._hash.toX32();return f},"_doFinalize"),clone:N(function(){var P=i.clone.call(this);return P._hash=this._hash.clone(),P},"clone"),blockSize:1024/32});R.SHA512=i._createHelper(_),R.HmacSHA512=i._createHmacHelper(_)}(),s.SHA512})}(qM)),qM.exports}N(E8,"requireSha512");var jM={exports:{}},Zx;function DZ(){return Zx||(Zx=1,function(E,A){(function(s,R,a){E.exports=R(PA(),fM(),E8())})(AA,function(s){return function(){var R=s,a=R.x64,i=a.Word,r=a.WordArray,L=R.algo,o=L.SHA512,l=L.SHA384=o.extend({_doReset:N(function(){this._hash=new r.init([new i.init(3418070365,3238371032),new i.init(1654270250,914150663),new i.init(2438529370,812702999),new i.init(355462360,4144912697),new i.init(1731405415,4290775857),new i.init(2394180231,1750603025),new i.init(3675008525,1694076839),new i.init(1203062813,3204075428)])},"_doReset"),_doFinalize:N(function(){var C=o._doFinalize.call(this);return C.sigBytes-=16,C},"_doFinalize")});R.SHA384=o._createHelper(l),R.HmacSHA384=o._createHmacHelper(l)}(),s.SHA384})}(jM)),jM.exports}N(DZ,"requireSha384");var e0={exports:{}},Xx;function MZ(){return Xx||(Xx=1,function(E,A){(function(s,R,a){E.exports=R(PA(),fM())})(AA,function(s){return function(R){var a=s,i=a.lib,r=i.WordArray,L=i.Hasher,o=a.x64,l=o.Word,C=a.algo,M=[],D=[],_=[];(function(){for(var H=1,d=0,f=0;f<24;f++){M[H+5*d]=(f+1)*(f+2)/2%64;var B=d%5,F=(2*H+3*d)%5;H=B,d=F}for(var H=0;H<5;H++)for(var d=0;d<5;d++)D[H+5*d]=d+(2*H+3*d)%5*5;for(var W=1,b=0;b<24;b++){for(var x=0,$=0,j=0;j<7;j++){if(W&1){var z=(1<<j)-1;z<32?$^=1<<z:x^=1<<z-32}W&128?W=W<<1^113:W<<=1}_[b]=l.create(x,$)}})();var P=[];(function(){for(var H=0;H<25;H++)P[H]=l.create()})();var h=C.SHA3=L.extend({cfg:L.cfg.extend({outputLength:512}),_doReset:N(function(){for(var H=this._state=[],d=0;d<25;d++)H[d]=new l.init;this.blockSize=(1600-2*this.cfg.outputLength)/32},"_doReset"),_doProcessBlock:N(function(H,d){for(var f=this._state,B=this.blockSize/2,F=0;F<B;F++){var W=H[d+2*F],b=H[d+2*F+1];W=(W<<8|W>>>24)&16711935|(W<<24|W>>>8)&4278255360,b=(b<<8|b>>>24)&16711935|(b<<24|b>>>8)&4278255360;var x=f[F];x.high^=b,x.low^=W}for(var $=0;$<24;$++){for(var j=0;j<5;j++){for(var z=0,se=0,Z=0;Z<5;Z++){var x=f[j+5*Z];z^=x.high,se^=x.low}var q=P[j];q.high=z,q.low=se}for(var j=0;j<5;j++)for(var p=P[(j+4)%5],oe=P[(j+1)%5],me=oe.high,Me=oe.low,z=p.high^(me<<1|Me>>>31),se=p.low^(Me<<1|me>>>31),Z=0;Z<5;Z++){var x=f[j+5*Z];x.high^=z,x.low^=se}for(var We=1;We<25;We++){var z,se,x=f[We],De=x.high,ie=x.low,Ae=M[We];Ae<32?(z=De<<Ae|ie>>>32-Ae,se=ie<<Ae|De>>>32-Ae):(z=ie<<Ae-32|De>>>64-Ae,se=De<<Ae-32|ie>>>64-Ae);var ee=P[D[We]];ee.high=z,ee.low=se}var Le=P[0],ue=f[0];Le.high=ue.high,Le.low=ue.low;for(var j=0;j<5;j++)for(var Z=0;Z<5;Z++){var We=j+5*Z,x=f[We],de=P[We],Rt=P[(j+1)%5+5*Z],Bt=P[(j+2)%5+5*Z];x.high=de.high^~Rt.high&Bt.high,x.low=de.low^~Rt.low&Bt.low}var x=f[0],tt=_[$];x.high^=tt.high,x.low^=tt.low}},"_doProcessBlock"),_doFinalize:N(function(){var H=this._data,d=H.words;this._nDataBytes*8;var f=H.sigBytes*8,B=this.blockSize*32;d[f>>>5]|=1<<24-f%32,d[(R.ceil((f+1)/B)*B>>>5)-1]|=128,H.sigBytes=d.length*4,this._process();for(var F=this._state,W=this.cfg.outputLength/8,b=W/8,x=[],$=0;$<b;$++){var j=F[$],z=j.high,se=j.low;z=(z<<8|z>>>24)&16711935|(z<<24|z>>>8)&4278255360,se=(se<<8|se>>>24)&16711935|(se<<24|se>>>8)&4278255360,x.push(se),x.push(z)}return new r.init(x,W)},"_doFinalize"),clone:N(function(){for(var H=L.clone.call(this),d=H._state=this._state.slice(0),f=0;f<25;f++)d[f]=d[f].clone();return H},"clone")});a.SHA3=L._createHelper(h),a.HmacSHA3=L._createHmacHelper(h)}(Math),s.SHA3})}(e0)),e0.exports}N(MZ,"requireSha3");var t0={exports:{}},Qx;function _Z(){return Qx||(Qx=1,function(E,A){(function(s,R){E.exports=R(PA())})(AA,function(s){/** @preserve
			(c) 2012 by Cédric Mesnil. All rights reserved.

			Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

			    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
			    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

			THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
			*/return function(R){var a=s,i=a.lib,r=i.WordArray,L=i.Hasher,o=a.algo,l=r.create([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13]),C=r.create([5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11]),M=r.create([11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6]),D=r.create([8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]),_=r.create([0,1518500249,1859775393,2400959708,2840853838]),P=r.create([1352829926,1548603684,1836072691,2053994217,0]),h=o.RIPEMD160=L.extend({_doReset:N(function(){this._hash=r.create([1732584193,4023233417,2562383102,271733878,3285377520])},"_doReset"),_doProcessBlock:N(function(b,x){for(var $=0;$<16;$++){var j=x+$,z=b[j];b[j]=(z<<8|z>>>24)&16711935|(z<<24|z>>>8)&4278255360}var se=this._hash.words,Z=_.words,q=P.words,p=l.words,oe=C.words,me=M.words,Me=D.words,We,De,ie,Ae,ee,Le,ue,de,Rt,Bt;Le=We=se[0],ue=De=se[1],de=ie=se[2],Rt=Ae=se[3],Bt=ee=se[4];for(var tt,$=0;$<80;$+=1)tt=We+b[x+p[$]]|0,$<16?tt+=H(De,ie,Ae)+Z[0]:$<32?tt+=d(De,ie,Ae)+Z[1]:$<48?tt+=f(De,ie,Ae)+Z[2]:$<64?tt+=B(De,ie,Ae)+Z[3]:tt+=F(De,ie,Ae)+Z[4],tt=tt|0,tt=W(tt,me[$]),tt=tt+ee|0,We=ee,ee=Ae,Ae=W(ie,10),ie=De,De=tt,tt=Le+b[x+oe[$]]|0,$<16?tt+=F(ue,de,Rt)+q[0]:$<32?tt+=B(ue,de,Rt)+q[1]:$<48?tt+=f(ue,de,Rt)+q[2]:$<64?tt+=d(ue,de,Rt)+q[3]:tt+=H(ue,de,Rt)+q[4],tt=tt|0,tt=W(tt,Me[$]),tt=tt+Bt|0,Le=Bt,Bt=Rt,Rt=W(de,10),de=ue,ue=tt;tt=se[1]+ie+Rt|0,se[1]=se[2]+Ae+Bt|0,se[2]=se[3]+ee+Le|0,se[3]=se[4]+We+ue|0,se[4]=se[0]+De+de|0,se[0]=tt},"_doProcessBlock"),_doFinalize:N(function(){var b=this._data,x=b.words,$=this._nDataBytes*8,j=b.sigBytes*8;x[j>>>5]|=128<<24-j%32,x[(j+64>>>9<<4)+14]=($<<8|$>>>24)&16711935|($<<24|$>>>8)&4278255360,b.sigBytes=(x.length+1)*4,this._process();for(var z=this._hash,se=z.words,Z=0;Z<5;Z++){var q=se[Z];se[Z]=(q<<8|q>>>24)&16711935|(q<<24|q>>>8)&4278255360}return z},"_doFinalize"),clone:N(function(){var b=L.clone.call(this);return b._hash=this._hash.clone(),b},"clone")});function H(b,x,$){return b^x^$}N(H,"f1");function d(b,x,$){return b&x|~b&$}N(d,"f2");function f(b,x,$){return(b|~x)^$}N(f,"f3");function B(b,x,$){return b&$|x&~$}N(B,"f4");function F(b,x,$){return b^(x|~$)}N(F,"f5");function W(b,x){return b<<x|b>>>32-x}N(W,"rotl"),a.RIPEMD160=L._createHelper(h),a.HmacRIPEMD160=L._createHmacHelper(h)}(),s.RIPEMD160})}(t0)),t0.exports}N(_Z,"requireRipemd160");var A0={exports:{}},Jx;function K1(){return Jx||(Jx=1,function(E,A){(function(s,R){E.exports=R(PA())})(AA,function(s){(function(){var R=s,a=R.lib,i=a.Base,r=R.enc,L=r.Utf8,o=R.algo;o.HMAC=i.extend({init:N(function(l,C){l=this._hasher=new l.init,typeof C=="string"&&(C=L.parse(C));var M=l.blockSize,D=M*4;C.sigBytes>D&&(C=l.finalize(C)),C.clamp();for(var _=this._oKey=C.clone(),P=this._iKey=C.clone(),h=_.words,H=P.words,d=0;d<M;d++)h[d]^=1549556828,H[d]^=909522486;_.sigBytes=P.sigBytes=D,this.reset()},"init"),reset:N(function(){var l=this._hasher;l.reset(),l.update(this._iKey)},"reset"),update:N(function(l){return this._hasher.update(l),this},"update"),finalize:N(function(l){var C=this._hasher,M=C.finalize(l);C.reset();var D=C.finalize(this._oKey.clone().concat(M));return D},"finalize")})})()})}(A0)),A0.exports}N(K1,"requireHmac");var E0={exports:{}},$x;function PZ(){return $x||($x=1,function(E,A){(function(s,R,a){E.exports=R(PA(),g1(),K1())})(AA,function(s){return function(){var R=s,a=R.lib,i=a.Base,r=a.WordArray,L=R.algo,o=L.SHA256,l=L.HMAC,C=L.PBKDF2=i.extend({cfg:i.extend({keySize:128/32,hasher:o,iterations:25e4}),init:N(function(M){this.cfg=this.cfg.extend(M)},"init"),compute:N(function(M,D){for(var _=this.cfg,P=l.create(_.hasher,M),h=r.create(),H=r.create([1]),d=h.words,f=H.words,B=_.keySize,F=_.iterations;d.length<B;){var W=P.update(D).finalize(H);P.reset();for(var b=W.words,x=b.length,$=W,j=1;j<F;j++){$=P.finalize($),P.reset();for(var z=$.words,se=0;se<x;se++)b[se]^=z[se]}h.concat(W),f[0]++}return h.sigBytes=B*4,h},"compute")});R.PBKDF2=function(M,D,_){return C.create(_).compute(M,D)}}(),s.PBKDF2})}(E0)),E0.exports}N(PZ,"requirePbkdf2");var s0={exports:{}},zx;function Ta(){return zx||(zx=1,function(E,A){(function(s,R,a){E.exports=R(PA(),A8(),K1())})(AA,function(s){return function(){var R=s,a=R.lib,i=a.Base,r=a.WordArray,L=R.algo,o=L.MD5,l=L.EvpKDF=i.extend({cfg:i.extend({keySize:128/32,hasher:o,iterations:1}),init:N(function(C){this.cfg=this.cfg.extend(C)},"init"),compute:N(function(C,M){for(var D,_=this.cfg,P=_.hasher.create(),h=r.create(),H=h.words,d=_.keySize,f=_.iterations;H.length<d;){D&&P.update(D),D=P.update(C).finalize(M),P.reset();for(var B=1;B<f;B++)D=P.finalize(D),P.reset();h.concat(D)}return h.sigBytes=d*4,h},"compute")});R.EvpKDF=function(C,M,D){return l.create(D).compute(C,M)}}(),s.EvpKDF})}(s0)),s0.exports}N(Ta,"requireEvpkdf");var R0={exports:{}},qx;function Hs(){return qx||(qx=1,function(E,A){(function(s,R,a){E.exports=R(PA(),Ta())})(AA,function(s){s.lib.Cipher||function(R){var a=s,i=a.lib,r=i.Base,L=i.WordArray,o=i.BufferedBlockAlgorithm,l=a.enc;l.Utf8;var C=l.Base64,M=a.algo,D=M.EvpKDF,_=i.Cipher=o.extend({cfg:r.extend(),createEncryptor:N(function(z,se){return this.create(this._ENC_XFORM_MODE,z,se)},"createEncryptor"),createDecryptor:N(function(z,se){return this.create(this._DEC_XFORM_MODE,z,se)},"createDecryptor"),init:N(function(z,se,Z){this.cfg=this.cfg.extend(Z),this._xformMode=z,this._key=se,this.reset()},"init"),reset:N(function(){o.reset.call(this),this._doReset()},"reset"),process:N(function(z){return this._append(z),this._process()},"process"),finalize:N(function(z){z&&this._append(z);var se=this._doFinalize();return se},"finalize"),keySize:128/32,ivSize:128/32,_ENC_XFORM_MODE:1,_DEC_XFORM_MODE:2,_createHelper:function(){function z(se){return typeof se=="string"?j:b}return N(z,"selectCipherStrategy"),function(se){return{encrypt:N(function(Z,q,p){return z(q).encrypt(se,Z,q,p)},"encrypt"),decrypt:N(function(Z,q,p){return z(q).decrypt(se,Z,q,p)},"decrypt")}}}()});i.StreamCipher=_.extend({_doFinalize:N(function(){var z=this._process(!0);return z},"_doFinalize"),blockSize:1});var P=a.mode={},h=i.BlockCipherMode=r.extend({createEncryptor:N(function(z,se){return this.Encryptor.create(z,se)},"createEncryptor"),createDecryptor:N(function(z,se){return this.Decryptor.create(z,se)},"createDecryptor"),init:N(function(z,se){this._cipher=z,this._iv=se},"init")}),H=P.CBC=function(){var z=h.extend();z.Encryptor=z.extend({processBlock:N(function(Z,q){var p=this._cipher,oe=p.blockSize;se.call(this,Z,q,oe),p.encryptBlock(Z,q),this._prevBlock=Z.slice(q,q+oe)},"processBlock")}),z.Decryptor=z.extend({processBlock:N(function(Z,q){var p=this._cipher,oe=p.blockSize,me=Z.slice(q,q+oe);p.decryptBlock(Z,q),se.call(this,Z,q,oe),this._prevBlock=me},"processBlock")});function se(Z,q,p){var oe,me=this._iv;me?(oe=me,this._iv=R):oe=this._prevBlock;for(var Me=0;Me<p;Me++)Z[q+Me]^=oe[Me]}return N(se,"xorBlock"),z}(),d=a.pad={},f=d.Pkcs7={pad:N(function(z,se){for(var Z=se*4,q=Z-z.sigBytes%Z,p=q<<24|q<<16|q<<8|q,oe=[],me=0;me<q;me+=4)oe.push(p);var Me=L.create(oe,q);z.concat(Me)},"pad"),unpad:N(function(z){var se=z.words[z.sigBytes-1>>>2]&255;z.sigBytes-=se},"unpad")};i.BlockCipher=_.extend({cfg:_.cfg.extend({mode:H,padding:f}),reset:N(function(){var z;_.reset.call(this);var se=this.cfg,Z=se.iv,q=se.mode;this._xformMode==this._ENC_XFORM_MODE?z=q.createEncryptor:(z=q.createDecryptor,this._minBufferSize=1),this._mode&&this._mode.__creator==z?this._mode.init(this,Z&&Z.words):(this._mode=z.call(q,this,Z&&Z.words),this._mode.__creator=z)},"reset"),_doProcessBlock:N(function(z,se){this._mode.processBlock(z,se)},"_doProcessBlock"),_doFinalize:N(function(){var z,se=this.cfg.padding;return this._xformMode==this._ENC_XFORM_MODE?(se.pad(this._data,this.blockSize),z=this._process(!0)):(z=this._process(!0),se.unpad(z)),z},"_doFinalize"),blockSize:128/32});var B=i.CipherParams=r.extend({init:N(function(z){this.mixIn(z)},"init"),toString:N(function(z){return(z||this.formatter).stringify(this)},"toString")}),F=a.format={},W=F.OpenSSL={stringify:N(function(z){var se,Z=z.ciphertext,q=z.salt;return q?se=L.create([1398893684,1701076831]).concat(q).concat(Z):se=Z,se.toString(C)},"stringify"),parse:N(function(z){var se,Z=C.parse(z),q=Z.words;return q[0]==1398893684&&q[1]==1701076831&&(se=L.create(q.slice(2,4)),q.splice(0,4),Z.sigBytes-=16),B.create({ciphertext:Z,salt:se})},"parse")},b=i.SerializableCipher=r.extend({cfg:r.extend({format:W}),encrypt:N(function(z,se,Z,q){q=this.cfg.extend(q);var p=z.createEncryptor(Z,q),oe=p.finalize(se),me=p.cfg;return B.create({ciphertext:oe,key:Z,iv:me.iv,algorithm:z,mode:me.mode,padding:me.padding,blockSize:z.blockSize,formatter:q.format})},"encrypt"),decrypt:N(function(z,se,Z,q){q=this.cfg.extend(q),se=this._parse(se,q.format);var p=z.createDecryptor(Z,q).finalize(se.ciphertext);return p},"decrypt"),_parse:N(function(z,se){return typeof z=="string"?se.parse(z,this):z},"_parse")}),x=a.kdf={},$=x.OpenSSL={execute:N(function(z,se,Z,q,p){if(q||(q=L.random(64/8)),p)var oe=D.create({keySize:se+Z,hasher:p}).compute(z,q);else var oe=D.create({keySize:se+Z}).compute(z,q);var me=L.create(oe.words.slice(se),Z*4);return oe.sigBytes=se*4,B.create({key:oe,iv:me,salt:q})},"execute")},j=i.PasswordBasedCipher=b.extend({cfg:b.cfg.extend({kdf:$}),encrypt:N(function(z,se,Z,q){q=this.cfg.extend(q);var p=q.kdf.execute(Z,z.keySize,z.ivSize,q.salt,q.hasher);q.iv=p.iv;var oe=b.encrypt.call(this,z,se,p.key,q);return oe.mixIn(p),oe},"encrypt"),decrypt:N(function(z,se,Z,q){q=this.cfg.extend(q),se=this._parse(se,q.format);var p=q.kdf.execute(Z,z.keySize,z.ivSize,se.salt,q.hasher);q.iv=p.iv;var oe=b.decrypt.call(this,z,se,p.key,q);return oe},"decrypt")})}()})}(R0)),R0.exports}N(Hs,"requireCipherCore");var O0={exports:{}},jx;function GZ(){return jx||(jx=1,function(E,A){(function(s,R,a){E.exports=R(PA(),Hs())})(AA,function(s){return s.mode.CFB=function(){var R=s.lib.BlockCipherMode.extend();R.Encryptor=R.extend({processBlock:N(function(i,r){var L=this._cipher,o=L.blockSize;a.call(this,i,r,o,L),this._prevBlock=i.slice(r,r+o)},"processBlock")}),R.Decryptor=R.extend({processBlock:N(function(i,r){var L=this._cipher,o=L.blockSize,l=i.slice(r,r+o);a.call(this,i,r,o,L),this._prevBlock=l},"processBlock")});function a(i,r,L,o){var l,C=this._iv;C?(l=C.slice(0),this._iv=void 0):l=this._prevBlock,o.encryptBlock(l,0);for(var M=0;M<L;M++)i[r+M]^=l[M]}return N(a,"generateKeystreamAndEncrypt"),R}(),s.mode.CFB})}(O0)),O0.exports}N(GZ,"requireModeCfb");var n0={exports:{}},eb;function cZ(){return eb||(eb=1,function(E,A){(function(s,R,a){E.exports=R(PA(),Hs())})(AA,function(s){return s.mode.CTR=function(){var R=s.lib.BlockCipherMode.extend(),a=R.Encryptor=R.extend({processBlock:N(function(i,r){var L=this._cipher,o=L.blockSize,l=this._iv,C=this._counter;l&&(C=this._counter=l.slice(0),this._iv=void 0);var M=C.slice(0);L.encryptBlock(M,0),C[o-1]=C[o-1]+1|0;for(var D=0;D<o;D++)i[r+D]^=M[D]},"processBlock")});return R.Decryptor=a,R}(),s.mode.CTR})}(n0)),n0.exports}N(cZ,"requireModeCtr");var I0={exports:{}},tb;function hZ(){return tb||(tb=1,function(E,A){(function(s,R,a){E.exports=R(PA(),Hs())})(AA,function(s){/** @preserve
 * Counter block mode compatible with  Dr Brian Gladman fileenc.c
 * derived from CryptoJS.mode.CTR
 * Jan Hruby jhruby.web@gmail.com
 */return s.mode.CTRGladman=function(){var R=s.lib.BlockCipherMode.extend();function a(L){if((L>>24&255)===255){var o=L>>16&255,l=L>>8&255,C=L&255;o===255?(o=0,l===255?(l=0,C===255?C=0:++C):++l):++o,L=0,L+=o<<16,L+=l<<8,L+=C}else L+=1<<24;return L}N(a,"incWord");function i(L){return(L[0]=a(L[0]))===0&&(L[1]=a(L[1])),L}N(i,"incCounter");var r=R.Encryptor=R.extend({processBlock:N(function(L,o){var l=this._cipher,C=l.blockSize,M=this._iv,D=this._counter;M&&(D=this._counter=M.slice(0),this._iv=void 0),i(D);var _=D.slice(0);l.encryptBlock(_,0);for(var P=0;P<C;P++)L[o+P]^=_[P]},"processBlock")});return R.Decryptor=r,R}(),s.mode.CTRGladman})}(I0)),I0.exports}N(hZ,"requireModeCtrGladman");var a0={exports:{}},Ab;function HZ(){return Ab||(Ab=1,function(E,A){(function(s,R,a){E.exports=R(PA(),Hs())})(AA,function(s){return s.mode.OFB=function(){var R=s.lib.BlockCipherMode.extend(),a=R.Encryptor=R.extend({processBlock:N(function(i,r){var L=this._cipher,o=L.blockSize,l=this._iv,C=this._keystream;l&&(C=this._keystream=l.slice(0),this._iv=void 0),L.encryptBlock(C,0);for(var M=0;M<o;M++)i[r+M]^=C[M]},"processBlock")});return R.Decryptor=a,R}(),s.mode.OFB})}(a0)),a0.exports}N(HZ,"requireModeOfb");var i0={exports:{}},Eb;function dZ(){return Eb||(Eb=1,function(E,A){(function(s,R,a){E.exports=R(PA(),Hs())})(AA,function(s){return s.mode.ECB=function(){var R=s.lib.BlockCipherMode.extend();return R.Encryptor=R.extend({processBlock:N(function(a,i){this._cipher.encryptBlock(a,i)},"processBlock")}),R.Decryptor=R.extend({processBlock:N(function(a,i){this._cipher.decryptBlock(a,i)},"processBlock")}),R}(),s.mode.ECB})}(i0)),i0.exports}N(dZ,"requireModeEcb");var r0={exports:{}},sb;function fZ(){return sb||(sb=1,function(E,A){(function(s,R,a){E.exports=R(PA(),Hs())})(AA,function(s){return s.pad.AnsiX923={pad:N(function(R,a){var i=R.sigBytes,r=a*4,L=r-i%r,o=i+L-1;R.clamp(),R.words[o>>>2]|=L<<24-o%4*8,R.sigBytes+=L},"pad"),unpad:N(function(R){var a=R.words[R.sigBytes-1>>>2]&255;R.sigBytes-=a},"unpad")},s.pad.Ansix923})}(r0)),r0.exports}N(fZ,"requirePadAnsix923");var L0={exports:{}},Rb;function BZ(){return Rb||(Rb=1,function(E,A){(function(s,R,a){E.exports=R(PA(),Hs())})(AA,function(s){return s.pad.Iso10126={pad:N(function(R,a){var i=a*4,r=i-R.sigBytes%i;R.concat(s.lib.WordArray.random(r-1)).concat(s.lib.WordArray.create([r<<24],1))},"pad"),unpad:N(function(R){var a=R.words[R.sigBytes-1>>>2]&255;R.sigBytes-=a},"unpad")},s.pad.Iso10126})}(L0)),L0.exports}N(BZ,"requirePadIso10126");var N0={exports:{}},Ob;function gZ(){return Ob||(Ob=1,function(E,A){(function(s,R,a){E.exports=R(PA(),Hs())})(AA,function(s){return s.pad.Iso97971={pad:N(function(R,a){R.concat(s.lib.WordArray.create([2147483648],1)),s.pad.ZeroPadding.pad(R,a)},"pad"),unpad:N(function(R){s.pad.ZeroPadding.unpad(R),R.sigBytes--},"unpad")},s.pad.Iso97971})}(N0)),N0.exports}N(gZ,"requirePadIso97971");var T0={exports:{}},nb;function KZ(){return nb||(nb=1,function(E,A){(function(s,R,a){E.exports=R(PA(),Hs())})(AA,function(s){return s.pad.ZeroPadding={pad:N(function(R,a){var i=a*4;R.clamp(),R.sigBytes+=i-(R.sigBytes%i||i)},"pad"),unpad:N(function(R){for(var a=R.words,i=R.sigBytes-1,i=R.sigBytes-1;i>=0;i--)if(a[i>>>2]>>>24-i%4*8&255){R.sigBytes=i+1;break}},"unpad")},s.pad.ZeroPadding})}(T0)),T0.exports}N(KZ,"requirePadZeropadding");var S0={exports:{}},Ib;function mZ(){return Ib||(Ib=1,function(E,A){(function(s,R,a){E.exports=R(PA(),Hs())})(AA,function(s){return s.pad.NoPadding={pad:N(function(){},"pad"),unpad:N(function(){},"unpad")},s.pad.NoPadding})}(S0)),S0.exports}N(mZ,"requirePadNopadding");var o0={exports:{}},ab;function FZ(){return ab||(ab=1,function(E,A){(function(s,R,a){E.exports=R(PA(),Hs())})(AA,function(s){return function(R){var a=s,i=a.lib,r=i.CipherParams,L=a.enc,o=L.Hex,l=a.format;l.Hex={stringify:N(function(C){return C.ciphertext.toString(o)},"stringify"),parse:N(function(C){var M=o.parse(C);return r.create({ciphertext:M})},"parse")}}(),s.format.Hex})}(o0)),o0.exports}N(FZ,"requireFormatHex");var l0={exports:{}},ib;function pZ(){return ib||(ib=1,function(E,A){(function(s,R,a){E.exports=R(PA(),fi(),Bi(),Ta(),Hs())})(AA,function(s){return function(){var R=s,a=R.lib,i=a.BlockCipher,r=R.algo,L=[],o=[],l=[],C=[],M=[],D=[],_=[],P=[],h=[],H=[];(function(){for(var B=[],F=0;F<256;F++)F<128?B[F]=F<<1:B[F]=F<<1^283;for(var W=0,b=0,F=0;F<256;F++){var x=b^b<<1^b<<2^b<<3^b<<4;x=x>>>8^x&255^99,L[W]=x,o[x]=W;var $=B[W],j=B[$],z=B[j],se=B[x]*257^x*16843008;l[W]=se<<24|se>>>8,C[W]=se<<16|se>>>16,M[W]=se<<8|se>>>24,D[W]=se;var se=z*16843009^j*65537^$*257^W*16843008;_[x]=se<<24|se>>>8,P[x]=se<<16|se>>>16,h[x]=se<<8|se>>>24,H[x]=se,W?(W=$^B[B[B[z^$]]],b^=B[B[b]]):W=b=1}})();var d=[0,1,2,4,8,16,32,64,128,27,54],f=r.AES=i.extend({_doReset:N(function(){var B;if(!(this._nRounds&&this._keyPriorReset===this._key)){for(var F=this._keyPriorReset=this._key,W=F.words,b=F.sigBytes/4,x=this._nRounds=b+6,$=(x+1)*4,j=this._keySchedule=[],z=0;z<$;z++)z<b?j[z]=W[z]:(B=j[z-1],z%b?b>6&&z%b==4&&(B=L[B>>>24]<<24|L[B>>>16&255]<<16|L[B>>>8&255]<<8|L[B&255]):(B=B<<8|B>>>24,B=L[B>>>24]<<24|L[B>>>16&255]<<16|L[B>>>8&255]<<8|L[B&255],B^=d[z/b|0]<<24),j[z]=j[z-b]^B);for(var se=this._invKeySchedule=[],Z=0;Z<$;Z++){var z=$-Z;if(Z%4)var B=j[z];else var B=j[z-4];Z<4||z<=4?se[Z]=B:se[Z]=_[L[B>>>24]]^P[L[B>>>16&255]]^h[L[B>>>8&255]]^H[L[B&255]]}}},"_doReset"),encryptBlock:N(function(B,F){this._doCryptBlock(B,F,this._keySchedule,l,C,M,D,L)},"encryptBlock"),decryptBlock:N(function(B,F){var W=B[F+1];B[F+1]=B[F+3],B[F+3]=W,this._doCryptBlock(B,F,this._invKeySchedule,_,P,h,H,o);var W=B[F+1];B[F+1]=B[F+3],B[F+3]=W},"decryptBlock"),_doCryptBlock:N(function(B,F,W,b,x,$,j,z){for(var se=this._nRounds,Z=B[F]^W[0],q=B[F+1]^W[1],p=B[F+2]^W[2],oe=B[F+3]^W[3],me=4,Me=1;Me<se;Me++){var We=b[Z>>>24]^x[q>>>16&255]^$[p>>>8&255]^j[oe&255]^W[me++],De=b[q>>>24]^x[p>>>16&255]^$[oe>>>8&255]^j[Z&255]^W[me++],ie=b[p>>>24]^x[oe>>>16&255]^$[Z>>>8&255]^j[q&255]^W[me++],Ae=b[oe>>>24]^x[Z>>>16&255]^$[q>>>8&255]^j[p&255]^W[me++];Z=We,q=De,p=ie,oe=Ae}var We=(z[Z>>>24]<<24|z[q>>>16&255]<<16|z[p>>>8&255]<<8|z[oe&255])^W[me++],De=(z[q>>>24]<<24|z[p>>>16&255]<<16|z[oe>>>8&255]<<8|z[Z&255])^W[me++],ie=(z[p>>>24]<<24|z[oe>>>16&255]<<16|z[Z>>>8&255]<<8|z[q&255])^W[me++],Ae=(z[oe>>>24]<<24|z[Z>>>16&255]<<16|z[q>>>8&255]<<8|z[p&255])^W[me++];B[F]=We,B[F+1]=De,B[F+2]=ie,B[F+3]=Ae},"_doCryptBlock"),keySize:256/32});R.AES=i._createHelper(f)}(),s.AES})}(l0)),l0.exports}N(pZ,"requireAes");var C0={exports:{}},rb;function WZ(){return rb||(rb=1,function(E,A){(function(s,R,a){E.exports=R(PA(),fi(),Bi(),Ta(),Hs())})(AA,function(s){return function(){var R=s,a=R.lib,i=a.WordArray,r=a.BlockCipher,L=R.algo,o=[57,49,41,33,25,17,9,1,58,50,42,34,26,18,10,2,59,51,43,35,27,19,11,3,60,52,44,36,63,55,47,39,31,23,15,7,62,54,46,38,30,22,14,6,61,53,45,37,29,21,13,5,28,20,12,4],l=[14,17,11,24,1,5,3,28,15,6,21,10,23,19,12,4,26,8,16,7,27,20,13,2,41,52,31,37,47,55,30,40,51,45,33,48,44,49,39,56,34,53,46,42,50,36,29,32],C=[1,2,4,6,8,10,12,14,15,17,19,21,23,25,27,28],M=[{0:8421888,268435456:32768,536870912:8421378,805306368:2,1073741824:512,1342177280:8421890,1610612736:8389122,1879048192:8388608,2147483648:514,2415919104:8389120,2684354560:33280,2952790016:8421376,3221225472:32770,3489660928:8388610,3758096384:0,4026531840:33282,134217728:0,402653184:8421890,671088640:33282,939524096:32768,1207959552:8421888,1476395008:512,1744830464:8421378,2013265920:2,2281701376:8389120,2550136832:33280,2818572288:8421376,3087007744:8389122,3355443200:8388610,3623878656:32770,3892314112:514,4160749568:8388608,1:32768,268435457:2,536870913:8421888,805306369:8388608,1073741825:8421378,1342177281:33280,1610612737:512,1879048193:8389122,2147483649:8421890,2415919105:8421376,2684354561:8388610,2952790017:33282,3221225473:514,3489660929:8389120,3758096385:32770,4026531841:0,134217729:8421890,402653185:8421376,671088641:8388608,939524097:512,1207959553:32768,1476395009:8388610,1744830465:2,2013265921:33282,2281701377:32770,2550136833:8389122,2818572289:514,3087007745:8421888,3355443201:8389120,3623878657:0,3892314113:33280,4160749569:8421378},{0:1074282512,16777216:16384,33554432:524288,50331648:1074266128,67108864:1073741840,83886080:1074282496,100663296:1073758208,117440512:16,134217728:540672,150994944:1073758224,167772160:1073741824,184549376:540688,201326592:524304,218103808:0,234881024:16400,251658240:1074266112,8388608:1073758208,25165824:540688,41943040:16,58720256:1073758224,75497472:1074282512,92274688:1073741824,109051904:524288,125829120:1074266128,142606336:524304,159383552:0,176160768:16384,192937984:1074266112,209715200:1073741840,226492416:540672,243269632:1074282496,260046848:16400,268435456:0,285212672:1074266128,301989888:1073758224,318767104:1074282496,335544320:1074266112,352321536:16,369098752:540688,385875968:16384,402653184:16400,419430400:524288,436207616:524304,452984832:1073741840,469762048:540672,486539264:1073758208,503316480:1073741824,520093696:1074282512,276824064:540688,293601280:524288,310378496:1074266112,327155712:16384,343932928:1073758208,360710144:1074282512,377487360:16,394264576:1073741824,411041792:1074282496,427819008:1073741840,444596224:1073758224,461373440:524304,478150656:0,494927872:16400,511705088:1074266128,528482304:540672},{0:260,1048576:0,2097152:67109120,3145728:65796,4194304:65540,5242880:67108868,6291456:67174660,7340032:67174400,8388608:67108864,9437184:67174656,10485760:65792,11534336:67174404,12582912:67109124,13631488:65536,14680064:4,15728640:256,524288:67174656,1572864:67174404,2621440:0,3670016:67109120,4718592:67108868,5767168:65536,6815744:65540,7864320:260,8912896:4,9961472:256,11010048:67174400,12058624:65796,13107200:65792,14155776:67109124,15204352:67174660,16252928:67108864,16777216:67174656,17825792:65540,18874368:65536,19922944:67109120,20971520:256,22020096:67174660,23068672:67108868,24117248:0,25165824:67109124,26214400:67108864,27262976:4,28311552:65792,29360128:67174400,30408704:260,31457280:65796,32505856:67174404,17301504:67108864,18350080:260,19398656:67174656,20447232:0,21495808:65540,22544384:67109120,23592960:256,24641536:67174404,25690112:65536,26738688:67174660,27787264:65796,28835840:67108868,29884416:67109124,30932992:67174400,31981568:4,33030144:65792},{0:2151682048,65536:2147487808,131072:4198464,196608:2151677952,262144:0,327680:4198400,393216:2147483712,458752:4194368,524288:2147483648,589824:4194304,655360:64,720896:2147487744,786432:2151678016,851968:4160,917504:4096,983040:2151682112,32768:2147487808,98304:64,163840:2151678016,229376:2147487744,294912:4198400,360448:2151682112,425984:0,491520:2151677952,557056:4096,622592:2151682048,688128:4194304,753664:4160,819200:2147483648,884736:4194368,950272:4198464,1015808:2147483712,1048576:4194368,1114112:4198400,1179648:2147483712,1245184:0,1310720:4160,1376256:2151678016,1441792:2151682048,1507328:2147487808,1572864:2151682112,1638400:2147483648,1703936:2151677952,1769472:4198464,1835008:2147487744,1900544:4194304,1966080:64,2031616:4096,1081344:2151677952,1146880:2151682112,1212416:0,1277952:4198400,1343488:4194368,1409024:2147483648,1474560:2147487808,1540096:64,1605632:2147483712,1671168:4096,1736704:2147487744,1802240:2151678016,1867776:4160,1933312:2151682048,1998848:4194304,2064384:4198464},{0:128,4096:17039360,8192:262144,12288:536870912,16384:537133184,20480:16777344,24576:553648256,28672:262272,32768:16777216,36864:537133056,40960:536871040,45056:553910400,49152:553910272,53248:0,57344:17039488,61440:553648128,2048:17039488,6144:553648256,10240:128,14336:17039360,18432:262144,22528:537133184,26624:553910272,30720:536870912,34816:537133056,38912:0,43008:553910400,47104:16777344,51200:536871040,55296:553648128,59392:16777216,63488:262272,65536:262144,69632:128,73728:536870912,77824:553648256,81920:16777344,86016:553910272,90112:537133184,94208:16777216,98304:553910400,102400:553648128,106496:17039360,110592:537133056,114688:262272,118784:536871040,122880:0,126976:17039488,67584:553648256,71680:16777216,75776:17039360,79872:537133184,83968:536870912,88064:17039488,92160:128,96256:553910272,100352:262272,104448:553910400,108544:0,112640:553648128,116736:16777344,120832:262144,124928:537133056,129024:536871040},{0:268435464,256:8192,512:270532608,768:270540808,1024:268443648,1280:2097152,1536:2097160,1792:268435456,2048:0,2304:268443656,2560:2105344,2816:8,3072:270532616,3328:2105352,3584:8200,3840:270540800,128:270532608,384:270540808,640:8,896:2097152,1152:2105352,1408:268435464,1664:268443648,1920:8200,2176:2097160,2432:8192,2688:268443656,2944:270532616,3200:0,3456:270540800,3712:2105344,3968:268435456,4096:268443648,4352:270532616,4608:270540808,4864:8200,5120:2097152,5376:268435456,5632:268435464,5888:2105344,6144:2105352,6400:0,6656:8,6912:270532608,7168:8192,7424:268443656,7680:270540800,7936:2097160,4224:8,4480:2105344,4736:2097152,4992:268435464,5248:268443648,5504:8200,5760:270540808,6016:270532608,6272:270540800,6528:270532616,6784:8192,7040:2105352,7296:2097160,7552:0,7808:268435456,8064:268443656},{0:1048576,16:33555457,32:1024,48:1049601,64:34604033,80:0,96:1,112:34603009,128:33555456,144:1048577,160:33554433,176:34604032,192:34603008,208:1025,224:1049600,240:33554432,8:34603009,24:0,40:33555457,56:34604032,72:1048576,88:33554433,104:33554432,120:1025,136:1049601,152:33555456,168:34603008,184:1048577,200:1024,216:34604033,232:1,248:1049600,256:33554432,272:1048576,288:33555457,304:34603009,320:1048577,336:33555456,352:34604032,368:1049601,384:1025,400:34604033,416:1049600,432:1,448:0,464:34603008,480:33554433,496:1024,264:1049600,280:33555457,296:34603009,312:1,328:33554432,344:1048576,360:1025,376:34604032,392:33554433,408:34603008,424:0,440:34604033,456:1049601,472:1024,488:33555456,504:1048577},{0:134219808,1:131072,2:134217728,3:32,4:131104,5:134350880,6:134350848,7:2048,8:134348800,9:134219776,10:133120,11:134348832,12:2080,13:0,14:134217760,15:133152,2147483648:2048,2147483649:134350880,2147483650:134219808,2147483651:134217728,2147483652:134348800,2147483653:133120,2147483654:133152,2147483655:32,2147483656:134217760,2147483657:2080,2147483658:131104,2147483659:134350848,2147483660:0,2147483661:134348832,2147483662:134219776,2147483663:131072,16:133152,17:134350848,18:32,19:2048,20:134219776,21:134217760,22:134348832,23:131072,24:0,25:131104,26:134348800,27:134219808,28:134350880,29:133120,30:2080,31:134217728,2147483664:131072,2147483665:2048,2147483666:134348832,2147483667:133152,2147483668:32,2147483669:134348800,2147483670:134217728,2147483671:134219808,2147483672:134350880,2147483673:134217760,2147483674:134219776,2147483675:0,2147483676:133120,2147483677:2080,2147483678:131104,2147483679:134350848}],D=[4160749569,528482304,33030144,2064384,129024,8064,504,2147483679],_=L.DES=r.extend({_doReset:N(function(){for(var d=this._key,f=d.words,B=[],F=0;F<56;F++){var W=o[F]-1;B[F]=f[W>>>5]>>>31-W%32&1}for(var b=this._subKeys=[],x=0;x<16;x++){for(var $=b[x]=[],j=C[x],F=0;F<24;F++)$[F/6|0]|=B[(l[F]-1+j)%28]<<31-F%6,$[4+(F/6|0)]|=B[28+(l[F+24]-1+j)%28]<<31-F%6;$[0]=$[0]<<1|$[0]>>>31;for(var F=1;F<7;F++)$[F]=$[F]>>>(F-1)*4+3;$[7]=$[7]<<5|$[7]>>>27}for(var z=this._invSubKeys=[],F=0;F<16;F++)z[F]=b[15-F]},"_doReset"),encryptBlock:N(function(d,f){this._doCryptBlock(d,f,this._subKeys)},"encryptBlock"),decryptBlock:N(function(d,f){this._doCryptBlock(d,f,this._invSubKeys)},"decryptBlock"),_doCryptBlock:N(function(d,f,B){this._lBlock=d[f],this._rBlock=d[f+1],P.call(this,4,252645135),P.call(this,16,65535),h.call(this,2,858993459),h.call(this,8,16711935),P.call(this,1,1431655765);for(var F=0;F<16;F++){for(var W=B[F],b=this._lBlock,x=this._rBlock,$=0,j=0;j<8;j++)$|=M[j][((x^W[j])&D[j])>>>0];this._lBlock=x,this._rBlock=b^$}var z=this._lBlock;this._lBlock=this._rBlock,this._rBlock=z,P.call(this,1,1431655765),h.call(this,8,16711935),h.call(this,2,858993459),P.call(this,16,65535),P.call(this,4,252645135),d[f]=this._lBlock,d[f+1]=this._rBlock},"_doCryptBlock"),keySize:64/32,ivSize:64/32,blockSize:64/32});function P(d,f){var B=(this._lBlock>>>d^this._rBlock)&f;this._rBlock^=B,this._lBlock^=B<<d}N(P,"exchangeLR");function h(d,f){var B=(this._rBlock>>>d^this._lBlock)&f;this._lBlock^=B,this._rBlock^=B<<d}N(h,"exchangeRL"),R.DES=r._createHelper(_);var H=L.TripleDES=r.extend({_doReset:N(function(){var d=this._key,f=d.words;if(f.length!==2&&f.length!==4&&f.length<6)throw new Error("Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.");var B=f.slice(0,2),F=f.length<4?f.slice(0,2):f.slice(2,4),W=f.length<6?f.slice(0,2):f.slice(4,6);this._des1=_.createEncryptor(i.create(B)),this._des2=_.createEncryptor(i.create(F)),this._des3=_.createEncryptor(i.create(W))},"_doReset"),encryptBlock:N(function(d,f){this._des1.encryptBlock(d,f),this._des2.decryptBlock(d,f),this._des3.encryptBlock(d,f)},"encryptBlock"),decryptBlock:N(function(d,f){this._des3.decryptBlock(d,f),this._des2.encryptBlock(d,f),this._des1.decryptBlock(d,f)},"decryptBlock"),keySize:192/32,ivSize:64/32,blockSize:64/32});R.TripleDES=r._createHelper(H)}(),s.TripleDES})}(C0)),C0.exports}N(WZ,"requireTripledes");var U0={exports:{}},Lb;function YZ(){return Lb||(Lb=1,function(E,A){(function(s,R,a){E.exports=R(PA(),fi(),Bi(),Ta(),Hs())})(AA,function(s){return function(){var R=s,a=R.lib,i=a.StreamCipher,r=R.algo,L=r.RC4=i.extend({_doReset:N(function(){for(var C=this._key,M=C.words,D=C.sigBytes,_=this._S=[],P=0;P<256;P++)_[P]=P;for(var P=0,h=0;P<256;P++){var H=P%D,d=M[H>>>2]>>>24-H%4*8&255;h=(h+_[P]+d)%256;var f=_[P];_[P]=_[h],_[h]=f}this._i=this._j=0},"_doReset"),_doProcessBlock:N(function(C,M){C[M]^=o.call(this)},"_doProcessBlock"),keySize:256/32,ivSize:0});function o(){for(var C=this._S,M=this._i,D=this._j,_=0,P=0;P<4;P++){M=(M+1)%256,D=(D+C[M])%256;var h=C[M];C[M]=C[D],C[D]=h,_|=C[(C[M]+C[D])%256]<<24-P*8}return this._i=M,this._j=D,_}N(o,"generateKeystreamWord"),R.RC4=i._createHelper(L);var l=r.RC4Drop=L.extend({cfg:L.cfg.extend({drop:192}),_doReset:N(function(){L._doReset.call(this);for(var C=this.cfg.drop;C>0;C--)o.call(this)},"_doReset")});R.RC4Drop=i._createHelper(l)}(),s.RC4})}(U0)),U0.exports}N(YZ,"requireRc4");var u0={exports:{}},Nb;function yZ(){return Nb||(Nb=1,function(E,A){(function(s,R,a){E.exports=R(PA(),fi(),Bi(),Ta(),Hs())})(AA,function(s){return function(){var R=s,a=R.lib,i=a.StreamCipher,r=R.algo,L=[],o=[],l=[],C=r.Rabbit=i.extend({_doReset:N(function(){for(var D=this._key.words,_=this.cfg.iv,P=0;P<4;P++)D[P]=(D[P]<<8|D[P]>>>24)&16711935|(D[P]<<24|D[P]>>>8)&4278255360;var h=this._X=[D[0],D[3]<<16|D[2]>>>16,D[1],D[0]<<16|D[3]>>>16,D[2],D[1]<<16|D[0]>>>16,D[3],D[2]<<16|D[1]>>>16],H=this._C=[D[2]<<16|D[2]>>>16,D[0]&4294901760|D[1]&65535,D[3]<<16|D[3]>>>16,D[1]&4294901760|D[2]&65535,D[0]<<16|D[0]>>>16,D[2]&4294901760|D[3]&65535,D[1]<<16|D[1]>>>16,D[3]&4294901760|D[0]&65535];this._b=0;for(var P=0;P<4;P++)M.call(this);for(var P=0;P<8;P++)H[P]^=h[P+4&7];if(_){var d=_.words,f=d[0],B=d[1],F=(f<<8|f>>>24)&16711935|(f<<24|f>>>8)&4278255360,W=(B<<8|B>>>24)&16711935|(B<<24|B>>>8)&4278255360,b=F>>>16|W&4294901760,x=W<<16|F&65535;H[0]^=F,H[1]^=b,H[2]^=W,H[3]^=x,H[4]^=F,H[5]^=b,H[6]^=W,H[7]^=x;for(var P=0;P<4;P++)M.call(this)}},"_doReset"),_doProcessBlock:N(function(D,_){var P=this._X;M.call(this),L[0]=P[0]^P[5]>>>16^P[3]<<16,L[1]=P[2]^P[7]>>>16^P[5]<<16,L[2]=P[4]^P[1]>>>16^P[7]<<16,L[3]=P[6]^P[3]>>>16^P[1]<<16;for(var h=0;h<4;h++)L[h]=(L[h]<<8|L[h]>>>24)&16711935|(L[h]<<24|L[h]>>>8)&4278255360,D[_+h]^=L[h]},"_doProcessBlock"),blockSize:128/32,ivSize:64/32});function M(){for(var D=this._X,_=this._C,P=0;P<8;P++)o[P]=_[P];_[0]=_[0]+1295307597+this._b|0,_[1]=_[1]+3545052371+(_[0]>>>0<o[0]>>>0?1:0)|0,_[2]=_[2]+886263092+(_[1]>>>0<o[1]>>>0?1:0)|0,_[3]=_[3]+1295307597+(_[2]>>>0<o[2]>>>0?1:0)|0,_[4]=_[4]+3545052371+(_[3]>>>0<o[3]>>>0?1:0)|0,_[5]=_[5]+886263092+(_[4]>>>0<o[4]>>>0?1:0)|0,_[6]=_[6]+1295307597+(_[5]>>>0<o[5]>>>0?1:0)|0,_[7]=_[7]+3545052371+(_[6]>>>0<o[6]>>>0?1:0)|0,this._b=_[7]>>>0<o[7]>>>0?1:0;for(var P=0;P<8;P++){var h=D[P]+_[P],H=h&65535,d=h>>>16,f=((H*H>>>17)+H*d>>>15)+d*d,B=((h&4294901760)*h|0)+((h&65535)*h|0);l[P]=f^B}D[0]=l[0]+(l[7]<<16|l[7]>>>16)+(l[6]<<16|l[6]>>>16)|0,D[1]=l[1]+(l[0]<<8|l[0]>>>24)+l[7]|0,D[2]=l[2]+(l[1]<<16|l[1]>>>16)+(l[0]<<16|l[0]>>>16)|0,D[3]=l[3]+(l[2]<<8|l[2]>>>24)+l[1]|0,D[4]=l[4]+(l[3]<<16|l[3]>>>16)+(l[2]<<16|l[2]>>>16)|0,D[5]=l[5]+(l[4]<<8|l[4]>>>24)+l[3]|0,D[6]=l[6]+(l[5]<<16|l[5]>>>16)+(l[4]<<16|l[4]>>>16)|0,D[7]=l[7]+(l[6]<<8|l[6]>>>24)+l[5]|0}N(M,"nextState"),R.Rabbit=i._createHelper(C)}(),s.Rabbit})}(u0)),u0.exports}N(yZ,"requireRabbit");var D0={exports:{}},Tb;function wZ(){return Tb||(Tb=1,function(E,A){(function(s,R,a){E.exports=R(PA(),fi(),Bi(),Ta(),Hs())})(AA,function(s){return function(){var R=s,a=R.lib,i=a.StreamCipher,r=R.algo,L=[],o=[],l=[],C=r.RabbitLegacy=i.extend({_doReset:N(function(){var D=this._key.words,_=this.cfg.iv,P=this._X=[D[0],D[3]<<16|D[2]>>>16,D[1],D[0]<<16|D[3]>>>16,D[2],D[1]<<16|D[0]>>>16,D[3],D[2]<<16|D[1]>>>16],h=this._C=[D[2]<<16|D[2]>>>16,D[0]&4294901760|D[1]&65535,D[3]<<16|D[3]>>>16,D[1]&4294901760|D[2]&65535,D[0]<<16|D[0]>>>16,D[2]&4294901760|D[3]&65535,D[1]<<16|D[1]>>>16,D[3]&4294901760|D[0]&65535];this._b=0;for(var H=0;H<4;H++)M.call(this);for(var H=0;H<8;H++)h[H]^=P[H+4&7];if(_){var d=_.words,f=d[0],B=d[1],F=(f<<8|f>>>24)&16711935|(f<<24|f>>>8)&4278255360,W=(B<<8|B>>>24)&16711935|(B<<24|B>>>8)&4278255360,b=F>>>16|W&4294901760,x=W<<16|F&65535;h[0]^=F,h[1]^=b,h[2]^=W,h[3]^=x,h[4]^=F,h[5]^=b,h[6]^=W,h[7]^=x;for(var H=0;H<4;H++)M.call(this)}},"_doReset"),_doProcessBlock:N(function(D,_){var P=this._X;M.call(this),L[0]=P[0]^P[5]>>>16^P[3]<<16,L[1]=P[2]^P[7]>>>16^P[5]<<16,L[2]=P[4]^P[1]>>>16^P[7]<<16,L[3]=P[6]^P[3]>>>16^P[1]<<16;for(var h=0;h<4;h++)L[h]=(L[h]<<8|L[h]>>>24)&16711935|(L[h]<<24|L[h]>>>8)&4278255360,D[_+h]^=L[h]},"_doProcessBlock"),blockSize:128/32,ivSize:64/32});function M(){for(var D=this._X,_=this._C,P=0;P<8;P++)o[P]=_[P];_[0]=_[0]+1295307597+this._b|0,_[1]=_[1]+3545052371+(_[0]>>>0<o[0]>>>0?1:0)|0,_[2]=_[2]+886263092+(_[1]>>>0<o[1]>>>0?1:0)|0,_[3]=_[3]+1295307597+(_[2]>>>0<o[2]>>>0?1:0)|0,_[4]=_[4]+3545052371+(_[3]>>>0<o[3]>>>0?1:0)|0,_[5]=_[5]+886263092+(_[4]>>>0<o[4]>>>0?1:0)|0,_[6]=_[6]+1295307597+(_[5]>>>0<o[5]>>>0?1:0)|0,_[7]=_[7]+3545052371+(_[6]>>>0<o[6]>>>0?1:0)|0,this._b=_[7]>>>0<o[7]>>>0?1:0;for(var P=0;P<8;P++){var h=D[P]+_[P],H=h&65535,d=h>>>16,f=((H*H>>>17)+H*d>>>15)+d*d,B=((h&4294901760)*h|0)+((h&65535)*h|0);l[P]=f^B}D[0]=l[0]+(l[7]<<16|l[7]>>>16)+(l[6]<<16|l[6]>>>16)|0,D[1]=l[1]+(l[0]<<8|l[0]>>>24)+l[7]|0,D[2]=l[2]+(l[1]<<16|l[1]>>>16)+(l[0]<<16|l[0]>>>16)|0,D[3]=l[3]+(l[2]<<8|l[2]>>>24)+l[1]|0,D[4]=l[4]+(l[3]<<16|l[3]>>>16)+(l[2]<<16|l[2]>>>16)|0,D[5]=l[5]+(l[4]<<8|l[4]>>>24)+l[3]|0,D[6]=l[6]+(l[5]<<16|l[5]>>>16)+(l[4]<<16|l[4]>>>16)|0,D[7]=l[7]+(l[6]<<8|l[6]>>>24)+l[5]|0}N(M,"nextState"),R.RabbitLegacy=i._createHelper(C)}(),s.RabbitLegacy})}(D0)),D0.exports}N(wZ,"requireRabbitLegacy");var M0={exports:{}},Sb;function vZ(){return Sb||(Sb=1,function(E,A){(function(s,R,a){E.exports=R(PA(),fi(),Bi(),Ta(),Hs())})(AA,function(s){return function(){var R=s,a=R.lib,i=a.BlockCipher,r=R.algo;const L=16,o=[608135816,2242054355,320440878,57701188,2752067618,698298832,137296536,3964562569,1160258022,953160567,3193202383,887688300,3232508343,3380367581,1065670069,3041331479,2450970073,2306472731],l=[[3509652390,2564797868,805139163,3491422135,3101798381,1780907670,3128725573,4046225305,614570311,3012652279,134345442,2240740374,1667834072,1901547113,2757295779,4103290238,227898511,1921955416,1904987480,2182433518,2069144605,3260701109,2620446009,720527379,3318853667,677414384,3393288472,3101374703,2390351024,1614419982,1822297739,2954791486,3608508353,3174124327,2024746970,1432378464,3864339955,2857741204,1464375394,1676153920,1439316330,715854006,3033291828,289532110,2706671279,2087905683,3018724369,1668267050,732546397,1947742710,3462151702,2609353502,2950085171,1814351708,2050118529,680887927,999245976,1800124847,3300911131,1713906067,1641548236,4213287313,1216130144,1575780402,4018429277,3917837745,3693486850,3949271944,596196993,3549867205,258830323,2213823033,772490370,2760122372,1774776394,2652871518,566650946,4142492826,1728879713,2882767088,1783734482,3629395816,2517608232,2874225571,1861159788,326777828,3124490320,2130389656,2716951837,967770486,1724537150,2185432712,2364442137,1164943284,2105845187,998989502,3765401048,2244026483,1075463327,1455516326,1322494562,910128902,469688178,1117454909,936433444,3490320968,3675253459,1240580251,122909385,2157517691,634681816,4142456567,3825094682,3061402683,2540495037,79693498,3249098678,1084186820,1583128258,426386531,1761308591,1047286709,322548459,995290223,1845252383,2603652396,3431023940,2942221577,3202600964,3727903485,1712269319,422464435,3234572375,1170764815,3523960633,3117677531,1434042557,442511882,3600875718,1076654713,1738483198,4213154764,2393238008,3677496056,1014306527,4251020053,793779912,2902807211,842905082,4246964064,1395751752,1040244610,2656851899,3396308128,445077038,3742853595,3577915638,679411651,2892444358,2354009459,1767581616,3150600392,3791627101,3102740896,284835224,4246832056,1258075500,768725851,2589189241,3069724005,3532540348,1274779536,3789419226,2764799539,1660621633,3471099624,4011903706,913787905,3497959166,737222580,2514213453,2928710040,3937242737,1804850592,3499020752,2949064160,2386320175,2390070455,2415321851,4061277028,2290661394,2416832540,1336762016,1754252060,3520065937,3014181293,791618072,3188594551,3933548030,2332172193,3852520463,3043980520,413987798,3465142937,3030929376,4245938359,2093235073,3534596313,375366246,2157278981,2479649556,555357303,3870105701,2008414854,3344188149,4221384143,3956125452,2067696032,3594591187,2921233993,2428461,544322398,577241275,1471733935,610547355,4027169054,1432588573,1507829418,2025931657,3646575487,545086370,48609733,2200306550,1653985193,298326376,1316178497,3007786442,2064951626,458293330,2589141269,3591329599,3164325604,727753846,2179363840,146436021,1461446943,4069977195,705550613,3059967265,3887724982,4281599278,3313849956,1404054877,2845806497,146425753,1854211946],[1266315497,3048417604,3681880366,3289982499,290971e4,1235738493,2632868024,2414719590,3970600049,1771706367,1449415276,3266420449,422970021,1963543593,2690192192,3826793022,1062508698,1531092325,1804592342,2583117782,2714934279,4024971509,1294809318,4028980673,1289560198,2221992742,1669523910,35572830,157838143,1052438473,1016535060,1802137761,1753167236,1386275462,3080475397,2857371447,1040679964,2145300060,2390574316,1461121720,2956646967,4031777805,4028374788,33600511,2920084762,1018524850,629373528,3691585981,3515945977,2091462646,2486323059,586499841,988145025,935516892,3367335476,2599673255,2839830854,265290510,3972581182,2759138881,3795373465,1005194799,847297441,406762289,1314163512,1332590856,1866599683,4127851711,750260880,613907577,1450815602,3165620655,3734664991,3650291728,3012275730,3704569646,1427272223,778793252,1343938022,2676280711,2052605720,1946737175,3164576444,3914038668,3967478842,3682934266,1661551462,3294938066,4011595847,840292616,3712170807,616741398,312560963,711312465,1351876610,322626781,1910503582,271666773,2175563734,1594956187,70604529,3617834859,1007753275,1495573769,4069517037,2549218298,2663038764,504708206,2263041392,3941167025,2249088522,1514023603,1998579484,1312622330,694541497,2582060303,2151582166,1382467621,776784248,2618340202,3323268794,2497899128,2784771155,503983604,4076293799,907881277,423175695,432175456,1378068232,4145222326,3954048622,3938656102,3820766613,2793130115,2977904593,26017576,3274890735,3194772133,1700274565,1756076034,4006520079,3677328699,720338349,1533947780,354530856,688349552,3973924725,1637815568,332179504,3949051286,53804574,2852348879,3044236432,1282449977,3583942155,3416972820,4006381244,1617046695,2628476075,3002303598,1686838959,431878346,2686675385,1700445008,1080580658,1009431731,832498133,3223435511,2605976345,2271191193,2516031870,1648197032,4164389018,2548247927,300782431,375919233,238389289,3353747414,2531188641,2019080857,1475708069,455242339,2609103871,448939670,3451063019,1395535956,2413381860,1841049896,1491858159,885456874,4264095073,4001119347,1565136089,3898914787,1108368660,540939232,1173283510,2745871338,3681308437,4207628240,3343053890,4016749493,1699691293,1103962373,3625875870,2256883143,3830138730,1031889488,3479347698,1535977030,4236805024,3251091107,2132092099,1774941330,1199868427,1452454533,157007616,2904115357,342012276,595725824,1480756522,206960106,497939518,591360097,863170706,2375253569,3596610801,1814182875,2094937945,3421402208,1082520231,3463918190,2785509508,435703966,3908032597,1641649973,2842273706,3305899714,1510255612,2148256476,2655287854,3276092548,4258621189,236887753,3681803219,274041037,1734335097,3815195456,3317970021,1899903192,1026095262,4050517792,356393447,2410691914,3873677099,3682840055],[3913112168,2491498743,4132185628,2489919796,1091903735,1979897079,3170134830,3567386728,3557303409,857797738,1136121015,1342202287,507115054,2535736646,337727348,3213592640,1301675037,2528481711,1895095763,1721773893,3216771564,62756741,2142006736,835421444,2531993523,1442658625,3659876326,2882144922,676362277,1392781812,170690266,3921047035,1759253602,3611846912,1745797284,664899054,1329594018,3901205900,3045908486,2062866102,2865634940,3543621612,3464012697,1080764994,553557557,3656615353,3996768171,991055499,499776247,1265440854,648242737,3940784050,980351604,3713745714,1749149687,3396870395,4211799374,3640570775,1161844396,3125318951,1431517754,545492359,4268468663,3499529547,1437099964,2702547544,3433638243,2581715763,2787789398,1060185593,1593081372,2418618748,4260947970,69676912,2159744348,86519011,2512459080,3838209314,1220612927,3339683548,133810670,1090789135,1078426020,1569222167,845107691,3583754449,4072456591,1091646820,628848692,1613405280,3757631651,526609435,236106946,48312990,2942717905,3402727701,1797494240,859738849,992217954,4005476642,2243076622,3870952857,3732016268,765654824,3490871365,2511836413,1685915746,3888969200,1414112111,2273134842,3281911079,4080962846,172450625,2569994100,980381355,4109958455,2819808352,2716589560,2568741196,3681446669,3329971472,1835478071,660984891,3704678404,4045999559,3422617507,3040415634,1762651403,1719377915,3470491036,2693910283,3642056355,3138596744,1364962596,2073328063,1983633131,926494387,3423689081,2150032023,4096667949,1749200295,3328846651,309677260,2016342300,1779581495,3079819751,111262694,1274766160,443224088,298511866,1025883608,3806446537,1145181785,168956806,3641502830,3584813610,1689216846,3666258015,3200248200,1692713982,2646376535,4042768518,1618508792,1610833997,3523052358,4130873264,2001055236,3610705100,2202168115,4028541809,2961195399,1006657119,2006996926,3186142756,1430667929,3210227297,1314452623,4074634658,4101304120,2273951170,1399257539,3367210612,3027628629,1190975929,2062231137,2333990788,2221543033,2438960610,1181637006,548689776,2362791313,3372408396,3104550113,3145860560,296247880,1970579870,3078560182,3769228297,1714227617,3291629107,3898220290,166772364,1251581989,493813264,448347421,195405023,2709975567,677966185,3703036547,1463355134,2715995803,1338867538,1343315457,2802222074,2684532164,233230375,2599980071,2000651841,3277868038,1638401717,4028070440,3237316320,6314154,819756386,300326615,590932579,1405279636,3267499572,3150704214,2428286686,3959192993,3461946742,1862657033,1266418056,963775037,2089974820,2263052895,1917689273,448879540,3550394620,3981727096,150775221,3627908307,1303187396,508620638,2975983352,2726630617,1817252668,1876281319,1457606340,908771278,3720792119,3617206836,2455994898,1729034894,1080033504],[976866871,3556439503,2881648439,1522871579,1555064734,1336096578,3548522304,2579274686,3574697629,3205460757,3593280638,3338716283,3079412587,564236357,2993598910,1781952180,1464380207,3163844217,3332601554,1699332808,1393555694,1183702653,3581086237,1288719814,691649499,2847557200,2895455976,3193889540,2717570544,1781354906,1676643554,2592534050,3230253752,1126444790,2770207658,2633158820,2210423226,2615765581,2414155088,3127139286,673620729,2805611233,1269405062,4015350505,3341807571,4149409754,1057255273,2012875353,2162469141,2276492801,2601117357,993977747,3918593370,2654263191,753973209,36408145,2530585658,25011837,3520020182,2088578344,530523599,2918365339,1524020338,1518925132,3760827505,3759777254,1202760957,3985898139,3906192525,674977740,4174734889,2031300136,2019492241,3983892565,4153806404,3822280332,352677332,2297720250,60907813,90501309,3286998549,1016092578,2535922412,2839152426,457141659,509813237,4120667899,652014361,1966332200,2975202805,55981186,2327461051,676427537,3255491064,2882294119,3433927263,1307055953,942726286,933058658,2468411793,3933900994,4215176142,1361170020,2001714738,2830558078,3274259782,1222529897,1679025792,2729314320,3714953764,1770335741,151462246,3013232138,1682292957,1483529935,471910574,1539241949,458788160,3436315007,1807016891,3718408830,978976581,1043663428,3165965781,1927990952,4200891579,2372276910,3208408903,3533431907,1412390302,2931980059,4132332400,1947078029,3881505623,4168226417,2941484381,1077988104,1320477388,886195818,18198404,3786409e3,2509781533,112762804,3463356488,1866414978,891333506,18488651,661792760,1628790961,3885187036,3141171499,876946877,2693282273,1372485963,791857591,2686433993,3759982718,3167212022,3472953795,2716379847,445679433,3561995674,3504004811,3574258232,54117162,3331405415,2381918588,3769707343,4154350007,1140177722,4074052095,668550556,3214352940,367459370,261225585,2610173221,4209349473,3468074219,3265815641,314222801,3066103646,3808782860,282218597,3406013506,3773591054,379116347,1285071038,846784868,2669647154,3771962079,3550491691,2305946142,453669953,1268987020,3317592352,3279303384,3744833421,2610507566,3859509063,266596637,3847019092,517658769,3462560207,3443424879,370717030,4247526661,2224018117,4143653529,4112773975,2788324899,2477274417,1456262402,2901442914,1517677493,1846949527,2295493580,3734397586,2176403920,1280348187,1908823572,3871786941,846861322,1172426758,3287448474,3383383037,1655181056,3139813346,901632758,1897031941,2986607138,3066810236,3447102507,1393639104,373351379,950779232,625454576,3124240540,4148612726,2007998917,544563296,2244738638,2330496472,2058025392,1291430526,424198748,50039436,29584100,3605783033,2429876329,2791104160,1057563949,3255363231,3075367218,3463963227,1469046755,985887462]];var C={pbox:[],sbox:[]};function M(H,d){let f=d>>24&255,B=d>>16&255,F=d>>8&255,W=d&255,b=H.sbox[0][f]+H.sbox[1][B];return b=b^H.sbox[2][F],b=b+H.sbox[3][W],b}N(M,"F");function D(H,d,f){let B=d,F=f,W;for(let b=0;b<L;++b)B=B^H.pbox[b],F=M(H,B)^F,W=B,B=F,F=W;return W=B,B=F,F=W,F=F^H.pbox[L],B=B^H.pbox[L+1],{left:B,right:F}}N(D,"BlowFish_Encrypt");function _(H,d,f){let B=d,F=f,W;for(let b=L+1;b>1;--b)B=B^H.pbox[b],F=M(H,B)^F,W=B,B=F,F=W;return W=B,B=F,F=W,F=F^H.pbox[1],B=B^H.pbox[0],{left:B,right:F}}N(_,"BlowFish_Decrypt");function P(H,d,f){for(let x=0;x<4;x++){H.sbox[x]=[];for(let $=0;$<256;$++)H.sbox[x][$]=l[x][$]}let B=0;for(let x=0;x<L+2;x++)H.pbox[x]=o[x]^d[B],B++,B>=f&&(B=0);let F=0,W=0,b=0;for(let x=0;x<L+2;x+=2)b=D(H,F,W),F=b.left,W=b.right,H.pbox[x]=F,H.pbox[x+1]=W;for(let x=0;x<4;x++)for(let $=0;$<256;$+=2)b=D(H,F,W),F=b.left,W=b.right,H.sbox[x][$]=F,H.sbox[x][$+1]=W;return!0}N(P,"BlowFishInit");var h=r.Blowfish=i.extend({_doReset:N(function(){if(this._keyPriorReset!==this._key){var H=this._keyPriorReset=this._key,d=H.words,f=H.sigBytes/4;P(C,d,f)}},"_doReset"),encryptBlock:N(function(H,d){var f=D(C,H[d],H[d+1]);H[d]=f.left,H[d+1]=f.right},"encryptBlock"),decryptBlock:N(function(H,d){var f=_(C,H[d],H[d+1]);H[d]=f.left,H[d+1]=f.right},"decryptBlock"),blockSize:64/32,keySize:128/32,ivSize:64/32});R.Blowfish=i._createHelper(h)}(),s.Blowfish})}(M0)),M0.exports}N(vZ,"requireBlowfish");(function(E,A){(function(s,R,a){E.exports=R(PA(),fM(),lZ(),CZ(),fi(),UZ(),Bi(),A8(),g1(),uZ(),E8(),DZ(),MZ(),_Z(),K1(),PZ(),Ta(),Hs(),GZ(),cZ(),hZ(),HZ(),dZ(),fZ(),BZ(),gZ(),KZ(),mZ(),FZ(),pZ(),WZ(),YZ(),yZ(),wZ(),vZ())})(AA,function(s){return s})})(t8);var Lr=t8.exports;let Nt=null;const eP=PM(32);function ka(){return new Promise(E=>{{Nt={username:"Guest",lastSessionSlot:-1,discordId:"",googleId:"",hasAdminRole:!1};let A=-1;for(let s=0;s<5;s++)if(localStorage.getItem(`sessionData${s||""}_${Nt.username}`)){A=s;break}return Nt.lastSessionSlot=A,["data","sessionData","sessionData1","sessionData2","sessionData3","sessionData4"].map(s=>{const R=localStorage.getItem(s);if(R&&(Nt!=null&&Nt.username)){const a=localStorage.getItem(`${s}_${Nt.username}`);a&&localStorage.setItem(`${s}_${Nt.username}_bak`,a),localStorage.setItem(`${s}_${Nt.username}`,R),localStorage.removeItem(s)}}),E([!0,200])}})}N(ka,"updateUserInfo");const Ig=class Ig{constructor(A){this.playTime=(A==null?void 0:A.playTime)||0,this.battles=(A==null?void 0:A.battles)||0,this.classicSessionsPlayed=(A==null?void 0:A.classicSessionsPlayed)||0,this.sessionsWon=(A==null?void 0:A.sessionsWon)||0,this.ribbonsOwned=(A==null?void 0:A.ribbonsOwned)||0,this.dailyRunSessionsPlayed=(A==null?void 0:A.dailyRunSessionsPlayed)||0,this.dailyRunSessionsWon=(A==null?void 0:A.dailyRunSessionsWon)||0,this.endlessSessionsPlayed=(A==null?void 0:A.endlessSessionsPlayed)||0,this.highestEndlessWave=(A==null?void 0:A.highestEndlessWave)||0,this.highestLevel=(A==null?void 0:A.highestLevel)||0,this.highestMoney=(A==null?void 0:A.highestMoney)||0,this.highestDamage=(A==null?void 0:A.highestDamage)||0,this.highestHeal=(A==null?void 0:A.highestHeal)||0,this.pokemonSeen=(A==null?void 0:A.pokemonSeen)||0,this.pokemonDefeated=(A==null?void 0:A.pokemonDefeated)||0,this.pokemonCaught=(A==null?void 0:A.pokemonCaught)||0,this.pokemonHatched=(A==null?void 0:A.pokemonHatched)||0,this.subLegendaryPokemonSeen=(A==null?void 0:A.subLegendaryPokemonSeen)??0,this.subLegendaryPokemonCaught=(A==null?void 0:A.subLegendaryPokemonCaught)??0,this.subLegendaryPokemonHatched=(A==null?void 0:A.subLegendaryPokemonHatched)??0,this.legendaryPokemonSeen=(A==null?void 0:A.legendaryPokemonSeen)||0,this.legendaryPokemonCaught=(A==null?void 0:A.legendaryPokemonCaught)||0,this.legendaryPokemonHatched=(A==null?void 0:A.legendaryPokemonHatched)||0,this.mythicalPokemonSeen=(A==null?void 0:A.mythicalPokemonSeen)||0,this.mythicalPokemonCaught=(A==null?void 0:A.mythicalPokemonCaught)||0,this.mythicalPokemonHatched=(A==null?void 0:A.mythicalPokemonHatched)||0,this.shinyPokemonSeen=(A==null?void 0:A.shinyPokemonSeen)||0,this.shinyPokemonCaught=(A==null?void 0:A.shinyPokemonCaught)||0,this.shinyPokemonHatched=(A==null?void 0:A.shinyPokemonHatched)||0,this.pokemonFused=(A==null?void 0:A.pokemonFused)||0,this.trainersDefeated=(A==null?void 0:A.trainersDefeated)||0,this.eggsPulled=(A==null?void 0:A.eggsPulled)||0,this.rareEggsPulled=(A==null?void 0:A.rareEggsPulled)||0,this.epicEggsPulled=(A==null?void 0:A.epicEggsPulled)||0,this.legendaryEggsPulled=(A==null?void 0:A.legendaryEggsPulled)||0,this.manaphyEggsPulled=(A==null?void 0:A.manaphyEggsPulled)||0}};N(Ig,"GameStats");let TC=Ig;var tO=(E=>(E.Intro="INTRO",E.Access_Menu="ACCESS_MENU",E.Menu="MENU",E.Starter_Select="STARTER_SELECT",E.Pokerus="POKERUS",E.Stat_Change="STAT_CHANGE",E.Select_Item="SELECT_ITEM",E.Egg_Gacha="EGG_GACHA",E))(tO||{});const VZ={INTRO:N(()=>new Promise(E=>{n.ui.showText(u.t("tutorial:intro"),null,()=>E(),null,!0)}),"INTRO"),ACCESS_MENU:N(()=>new Promise(E=>{if(n.enableTouchControls)return E();n.showFieldOverlay(1e3).then(()=>n.ui.showText(u.t("tutorial:accessMenu"),null,()=>n.hideFieldOverlay(1e3).then(()=>E()),null,!0))}),"ACCESS_MENU"),MENU:N(()=>new Promise(E=>{n.gameData.saveTutorialFlag("ACCESS_MENU",!0),n.ui.showText(u.t("tutorial:menu"),null,()=>n.ui.showText("",null,()=>E()),null,!0)}),"MENU"),STARTER_SELECT:N(()=>new Promise(E=>{n.ui.showText(u.t("tutorial:starterSelect"),null,()=>n.ui.showText("",null,()=>E()),null,!0)}),"STARTER_SELECT"),POKERUS:N(()=>new Promise(E=>{n.ui.showText(u.t("tutorial:pokerus"),null,()=>n.ui.showText("",null,()=>E()),null,!0)}),"POKERUS"),STAT_CHANGE:N(()=>new Promise(E=>{n.showFieldOverlay(1e3).then(()=>n.ui.showText(u.t("tutorial:statChange"),null,()=>n.ui.showText("",null,()=>n.hideFieldOverlay(1e3).then(()=>E())),null,!0))}),"STAT_CHANGE"),SELECT_ITEM:N(()=>new Promise(E=>{n.ui.setModeWithoutClear(Ie.MESSAGE).then(()=>{n.ui.showText(u.t("tutorial:selectItem"),null,()=>n.ui.showText("",null,()=>n.ui.setModeWithoutClear(Ie.MODIFIER_SELECT).then(()=>E())),null,!0)})}),"SELECT_ITEM"),EGG_GACHA:N(()=>new Promise(E=>{n.ui.showText(u.t("tutorial:eggGacha"),null,()=>n.ui.showText("",null,()=>E()),null,!0)}),"EGG_GACHA")};async function VI(E){if(!n.enableTutorials&&!Ye.BYPASS_TUTORIAL_SKIP_OVERRIDE||n.gameData.getTutorialFlags()[E]&&!Ye.BYPASS_TUTORIAL_SKIP_OVERRIDE)return!1;const A=n.ui.getHandler(),s=n.disableMenu;return n.disableMenu=!0,A instanceof qn&&(A.tutorialActive=!0),await xZ(A),await VZ[E](),await bZ(A),n.disableMenu=s,n.gameData.saveTutorialFlag(E,!0),A instanceof qn&&(A.tutorialActive=!1),!0}N(VI,"handleTutorial");async function xZ(E){if(E instanceof qn&&E.tutorialOverlay)n.tweens.add({targets:E.tutorialOverlay,alpha:.5,duration:750,ease:"Sine.easeOut",onComplete:N(()=>!0,"onComplete")});else return!0}N(xZ,"showTutorialOverlay");async function bZ(E){if(E instanceof qn&&E.tutorialOverlay)n.tweens.add({targets:E.tutorialOverlay,alpha:0,duration:500,ease:"Sine.easeOut",onComplete:N(()=>!0,"onComplete")});else return!0}N(bZ,"hideTutorialOverlay");var rt=(E=>(E.Button_Up="BUTTON_UP",E.Alt_Button_Up="ALT_BUTTON_UP",E.Button_Down="BUTTON_DOWN",E.Alt_Button_Down="ALT_BUTTON_DOWN",E.Button_Left="BUTTON_LEFT",E.Alt_Button_Left="ALT_BUTTON_LEFT",E.Button_Right="BUTTON_RIGHT",E.Alt_Button_Right="ALT_BUTTON_RIGHT",E.Button_Action="BUTTON_ACTION",E.Alt_Button_Action="ALT_BUTTON_ACTION",E.Button_Cancel="BUTTON_CANCEL",E.Alt_Button_Cancel="ALT_BUTTON_CANCEL",E.Button_Menu="BUTTON_MENU",E.Alt_Button_Menu="ALT_BUTTON_MENU",E.Button_Stats="BUTTON_STATS",E.Alt_Button_Stats="ALT_BUTTON_STATS",E.Button_Cycle_Form="BUTTON_CYCLE_FORM",E.Alt_Button_Cycle_Form="ALT_BUTTON_CYCLE_FORM",E.Button_Cycle_Shiny="BUTTON_CYCLE_SHINY",E.Alt_Button_Cycle_Shiny="ALT_BUTTON_CYCLE_SHINY",E.Button_Cycle_Gender="BUTTON_CYCLE_GENDER",E.Alt_Button_Cycle_Gender="ALT_BUTTON_CYCLE_GENDER",E.Button_Cycle_Ability="BUTTON_CYCLE_ABILITY",E.Alt_Button_Cycle_Ability="ALT_BUTTON_CYCLE_ABILITY",E.Button_Cycle_Nature="BUTTON_CYCLE_NATURE",E.Alt_Button_Cycle_Nature="ALT_BUTTON_CYCLE_NATURE",E.Button_Cycle_Variant="BUTTON_CYCLE_VARIANT",E.Alt_Button_Cycle_Variant="ALT_BUTTON_CYCLE_VARIANT",E.Button_Speed_Up="BUTTON_SPEED_UP",E.Alt_Button_Speed_Up="ALT_BUTTON_SPEED_UP",E.Button_Slow_Down="BUTTON_SLOW_DOWN",E.Alt_Button_Slow_Down="ALT_BUTTON_SLOW_DOWN",E.Button_Submit="BUTTON_SUBMIT",E.Alt_Button_Submit="ALT_BUTTON_SUBMIT",E))(rt||{});const GA=u.t("settings:pressToBind"),kZ={BUTTON_UP:[`KEY ${k.UP.toString()}`,GA],BUTTON_DOWN:[`KEY ${k.DOWN.toString()}`,GA],ALT_BUTTON_UP:[`KEY ${k.UP.toString()}`,GA],BUTTON_LEFT:[`KEY ${k.LEFT.toString()}`,GA],BUTTON_RIGHT:[`KEY ${k.RIGHT.toString()}`,GA],BUTTON_ACTION:[`KEY ${k.ACTION.toString()}`,GA],BUTTON_MENU:[`KEY ${k.MENU.toString()}`,GA],BUTTON_SUBMIT:[`KEY ${k.SUBMIT.toString()}`,GA],ALT_BUTTON_DOWN:[`KEY ${k.DOWN.toString()}`,GA],ALT_BUTTON_LEFT:[`KEY ${k.LEFT.toString()}`,GA],ALT_BUTTON_RIGHT:[`KEY ${k.RIGHT.toString()}`,GA],ALT_BUTTON_ACTION:[`KEY ${k.ACTION.toString()}`,GA],BUTTON_CANCEL:[`KEY ${k.CANCEL.toString()}`,GA],ALT_BUTTON_CANCEL:[`KEY ${k.CANCEL.toString()}`,GA],ALT_BUTTON_MENU:[`KEY ${k.MENU.toString()}`,GA],BUTTON_STATS:[`KEY ${k.STATS.toString()}`,GA],ALT_BUTTON_STATS:[`KEY ${k.STATS.toString()}`,GA],BUTTON_CYCLE_FORM:[`KEY ${k.CYCLE_FORM.toString()}`,GA],ALT_BUTTON_CYCLE_FORM:[`KEY ${k.CYCLE_FORM.toString()}`,GA],BUTTON_CYCLE_SHINY:[`KEY ${k.CYCLE_SHINY.toString()}`,GA],ALT_BUTTON_CYCLE_SHINY:[`KEY ${k.CYCLE_SHINY.toString()}`,GA],BUTTON_CYCLE_GENDER:[`KEY ${k.CYCLE_GENDER.toString()}`,GA],ALT_BUTTON_CYCLE_GENDER:[`KEY ${k.CYCLE_GENDER.toString()}`,GA],BUTTON_CYCLE_ABILITY:[`KEY ${k.CYCLE_ABILITY.toString()}`,GA],ALT_BUTTON_CYCLE_ABILITY:[`KEY ${k.CYCLE_ABILITY.toString()}`,GA],BUTTON_CYCLE_NATURE:[`KEY ${k.CYCLE_NATURE.toString()}`,GA],ALT_BUTTON_CYCLE_NATURE:[`KEY ${k.CYCLE_NATURE.toString()}`,GA],BUTTON_CYCLE_VARIANT:[`KEY ${k.V.toString()}`,GA],ALT_BUTTON_CYCLE_VARIANT:[`KEY ${k.V.toString()}`,GA],BUTTON_SPEED_UP:[`KEY ${k.SPEED_UP.toString()}`,GA],ALT_BUTTON_SPEED_UP:[`KEY ${k.SPEED_UP.toString()}`,GA],BUTTON_SLOW_DOWN:[`KEY ${k.SLOW_DOWN.toString()}`,GA],ALT_BUTTON_SLOW_DOWN:[`KEY ${k.SLOW_DOWN.toString()}`,GA],ALT_BUTTON_SUBMIT:[`KEY ${k.SUBMIT.toString()}`,GA]},ZZ={BUTTON_UP:0,BUTTON_DOWN:0,BUTTON_LEFT:0,BUTTON_RIGHT:0,BUTTON_ACTION:0,BUTTON_MENU:0,BUTTON_SUBMIT:0,ALT_BUTTON_UP:0,ALT_BUTTON_DOWN:0,ALT_BUTTON_LEFT:0,ALT_BUTTON_RIGHT:0,ALT_BUTTON_ACTION:0,BUTTON_CANCEL:0,ALT_BUTTON_CANCEL:0,ALT_BUTTON_MENU:0,BUTTON_STATS:0,ALT_BUTTON_STATS:0,BUTTON_CYCLE_FORM:0,ALT_BUTTON_CYCLE_FORM:0,BUTTON_CYCLE_SHINY:0,ALT_BUTTON_CYCLE_SHINY:0,BUTTON_CYCLE_GENDER:0,ALT_BUTTON_CYCLE_GENDER:0,BUTTON_CYCLE_ABILITY:0,ALT_BUTTON_CYCLE_ABILITY:0,BUTTON_CYCLE_NATURE:0,ALT_BUTTON_CYCLE_NATURE:0,BUTTON_CYCLE_VARIANT:0,ALT_BUTTON_CYCLE_VARIANT:0,BUTTON_SPEED_UP:0,ALT_BUTTON_SPEED_UP:0,BUTTON_SLOW_DOWN:0,ALT_BUTTON_SLOW_DOWN:0,ALT_BUTTON_SUBMIT:0},XZ=["BUTTON_SUBMIT","BUTTON_MENU","BUTTON_ACTION","BUTTON_CANCEL","BUTTON_UP","BUTTON_DOWN","BUTTON_LEFT","BUTTON_RIGHT"];function s8(E,A){switch(E){case"BUTTON_UP":case"BUTTON_DOWN":case"BUTTON_LEFT":case"BUTTON_RIGHT":case"BUTTON_ACTION":case"BUTTON_CANCEL":case"BUTTON_MENU":case"BUTTON_STATS":case"BUTTON_CYCLE_SHINY":case"BUTTON_CYCLE_FORM":case"BUTTON_CYCLE_GENDER":case"BUTTON_CYCLE_ABILITY":case"BUTTON_CYCLE_NATURE":case"BUTTON_CYCLE_VARIANT":case"BUTTON_SPEED_UP":case"BUTTON_SLOW_DOWN":case"ALT_BUTTON_UP":case"ALT_BUTTON_DOWN":case"ALT_BUTTON_LEFT":case"ALT_BUTTON_RIGHT":case"ALT_BUTTON_ACTION":case"ALT_BUTTON_CANCEL":case"ALT_BUTTON_MENU":case"ALT_BUTTON_STATS":case"ALT_BUTTON_CYCLE_SHINY":case"ALT_BUTTON_CYCLE_FORM":case"ALT_BUTTON_CYCLE_GENDER":case"ALT_BUTTON_CYCLE_ABILITY":case"ALT_BUTTON_CYCLE_NATURE":case"ALT_BUTTON_CYCLE_VARIANT":case"ALT_BUTTON_SPEED_UP":case"ALT_BUTTON_SLOW_DOWN":case"ALT_BUTTON_SUBMIT":if(A&&n.ui){const s=N((R=!1)=>(n.ui.revertMode(),n.ui.getHandler().updateBindings(),R),"cancelHandler");n.ui.setOverlayMode(Ie.KEYBOARD_BINDING,{target:E,cancelHandler:s})}break}return!0}N(s8,"setSettingKeyboard");var Be=(E=>(E.Controller="CONTROLLER",E.Gamepad_Support="GAMEPAD_SUPPORT",E.Button_Up="BUTTON_UP",E.Button_Down="BUTTON_DOWN",E.Button_Left="BUTTON_LEFT",E.Button_Right="BUTTON_RIGHT",E.Button_Action="BUTTON_ACTION",E.Button_Cancel="BUTTON_CANCEL",E.Button_Menu="BUTTON_MENU",E.Button_Stats="BUTTON_STATS",E.Button_Cycle_Form="BUTTON_CYCLE_FORM",E.Button_Cycle_Shiny="BUTTON_CYCLE_SHINY",E.Button_Cycle_Gender="BUTTON_CYCLE_GENDER",E.Button_Cycle_Ability="BUTTON_CYCLE_ABILITY",E.Button_Cycle_Nature="BUTTON_CYCLE_NATURE",E.Button_Cycle_Variant="BUTTON_CYCLE_VARIANT",E.Button_Speed_Up="BUTTON_SPEED_UP",E.Button_Slow_Down="BUTTON_SLOW_DOWN",E.Button_Submit="BUTTON_SUBMIT",E))(Be||{});const ds="Press action to assign",R8={CONTROLLER:["Default","Change"],GAMEPAD_SUPPORT:["Auto","Disabled"],BUTTON_UP:[`KEY ${k.UP.toString()}`,ds],BUTTON_DOWN:[`KEY ${k.DOWN.toString()}`,ds],BUTTON_LEFT:[`KEY ${k.LEFT.toString()}`,ds],BUTTON_RIGHT:[`KEY ${k.RIGHT.toString()}`,ds],BUTTON_ACTION:[`KEY ${k.ACTION.toString()}`,ds],BUTTON_CANCEL:[`KEY ${k.CANCEL.toString()}`,ds],BUTTON_MENU:[`KEY ${k.MENU.toString()}`,ds],BUTTON_STATS:[`KEY ${k.STATS.toString()}`,ds],BUTTON_CYCLE_FORM:[`KEY ${k.CYCLE_FORM.toString()}`,ds],BUTTON_CYCLE_SHINY:[`KEY ${k.CYCLE_SHINY.toString()}`,ds],BUTTON_CYCLE_GENDER:[`KEY ${k.CYCLE_GENDER.toString()}`,ds],BUTTON_CYCLE_ABILITY:[`KEY ${k.CYCLE_ABILITY.toString()}`,ds],BUTTON_CYCLE_NATURE:[`KEY ${k.CYCLE_NATURE.toString()}`,ds],BUTTON_CYCLE_VARIANT:[`KEY ${k.V.toString()}`,ds],BUTTON_SPEED_UP:[`KEY ${k.SPEED_UP.toString()}`,ds],BUTTON_SLOW_DOWN:[`KEY ${k.SLOW_DOWN.toString()}`,ds],BUTTON_SUBMIT:[`KEY ${k.SUBMIT.toString()}`,ds]},O8={CONTROLLER:0,GAMEPAD_SUPPORT:0,BUTTON_UP:0,BUTTON_DOWN:0,BUTTON_LEFT:0,BUTTON_RIGHT:0,BUTTON_ACTION:0,BUTTON_CANCEL:0,BUTTON_MENU:0,BUTTON_STATS:0,BUTTON_CYCLE_FORM:0,BUTTON_CYCLE_SHINY:0,BUTTON_CYCLE_GENDER:0,BUTTON_CYCLE_ABILITY:0,BUTTON_CYCLE_NATURE:0,BUTTON_CYCLE_VARIANT:0,BUTTON_SPEED_UP:0,BUTTON_SLOW_DOWN:0,BUTTON_SUBMIT:0},QZ=[rt.Button_Up,rt.Button_Down,rt.Button_Left,rt.Button_Right];function hl(E,A){switch(E){case"GAMEPAD_SUPPORT":n.inputController.setGamepadSupport(R8[E][A]!=="Disabled");break;case"BUTTON_ACTION":case"BUTTON_CANCEL":case"BUTTON_MENU":case"BUTTON_STATS":case"BUTTON_CYCLE_SHINY":case"BUTTON_CYCLE_FORM":case"BUTTON_CYCLE_GENDER":case"BUTTON_CYCLE_ABILITY":case"BUTTON_CYCLE_NATURE":case"BUTTON_CYCLE_VARIANT":case"BUTTON_SPEED_UP":case"BUTTON_SLOW_DOWN":case"BUTTON_SUBMIT":if(A&&n.ui){const s=N((R=!1)=>(n.ui.revertMode(),n.ui.getHandler().updateBindings(),R),"cancelHandler");n.ui.setOverlayMode(Ie.GAMEPAD_BINDING,{target:E,cancelHandler:s})}break;case"CONTROLLER":if(A){const s=n.inputController.getGamepadsName();if(n.ui&&s){const R=N(()=>(n.ui.revertMode(),n.ui.getHandler().setOptionCursor(Object.values(Be).indexOf("CONTROLLER"),0,!0),n.ui.getHandler().updateBindings(),!1),"cancelHandler"),a=N(i=>(n.inputController.setChosenGamepad(i),R(),!0),"changeGamepadHandler");return n.ui.setOverlayMode(Ie.OPTION_SELECT,{options:[...s.map(i=>({label:_1(i,30),handler:N(()=>a(i),"handler")})),{label:"Cancel",handler:R}]}),!1}}break}return!0}N(hl,"setSettingGamepad");var Bn=(E=>(E.WEATHER_CHANGED="onWeatherChanged",E.TERRAIN_CHANGED="onTerrainChanged",E.TAG_ADDED="onTagAdded",E.TAG_REMOVED="onTagRemoved",E))(Bn||{});const ag=class ag extends Event{constructor(A,s){super(A),this.duration=s}};N(ag,"ArenaEvent");let dr=ag;const ig=class ig extends dr{constructor(A,s,R){super("onWeatherChanged",R),this.oldWeatherType=A,this.newWeatherType=s}};N(ig,"WeatherChangedEvent");let FI=ig;const rg=class rg extends dr{constructor(A,s,R){super("onTerrainChanged",R),this.oldTerrainType=A,this.newTerrainType=s}};N(rg,"TerrainChangedEvent");let zT=rg;const Lg=class Lg extends dr{constructor(A,s,R,a,i){super("onTagAdded",R),this.arenaTagType=A,this.arenaTagSide=s,this.arenaTagLayers=a,this.arenaTagMaxLayers=i}};N(Lg,"TagAddedEvent");let Ai=Lg;const Ng=class Ng extends dr{constructor(A,s,R){super("onTagRemoved",R),this.arenaTagType=A,this.arenaTagSide=s}};N(Ng,"TagRemovedEvent");let Ba=Ng;const Tg=class Tg{constructor(A){this.id=A.id,this.value=A.value,this.severity=A.severity}toChallenge(){return f8(this)}};N(Tg,"ChallengeData");let qT=Tg;var IA=(E=>(E[E.GAMEPAD=0]="GAMEPAD",E[E.KEYBOARD=1]="KEYBOARD",E))(IA||{}),uE=(E=>(E[E.SYSTEM=0]="SYSTEM",E[E.SESSION=1]="SESSION",E[E.SETTINGS=2]="SETTINGS",E[E.TUTORIALS=3]="TUTORIALS",E[E.SEEN_DIALOGUES=4]="SEEN_DIALOGUES",E[E.RUN_HISTORY=5]="RUN_HISTORY",E))(uE||{});const Sg=class Sg{start(){n.abilityBar.shown&&n.abilityBar.resetAutoHideTimer()}end(){n.shiftPhase()}};N(Sg,"Phase");let aE=Sg;var SC=(E=>(E.WHITE="#ffffff",E.OFF_WHITE="#f8f8f8",E.LIGHT_GREY="#a0a0a0",E.GREY="#484848",E.DARK_GREY="#404040",E.PINK="#f89890",E.RED="#e13d3d",E.RED2="#e70808",E.REDORANGE="#d64b00",E.ORANGE="#f8b050",E.LIGHT_YELLOW="#e8e8a8",E.YELLOW="#ccbe00",E.DARK_YELLOW="#a68e17",E.GREEN="#78c850",E.BLUE="#40c8f8",E.COMMON="#ffffff",E.GREAT="#3890f8",E.ULTRA="#f8d038",E.ROGUE="#d52929",E.MASTER="#e020c0",E.LUXURY="#e64a18",E))(SC||{}),m1=(E=>(E.NORMAL="#ADA594",E.FIGHTING="#A55239",E.FLYING="#9CADF7",E.POISON="#9141CB",E.GROUND="#AE7A3B",E.ROCK="#BDA55A",E.BUG="#ADBD21",E.GHOST="#6363B5",E.STEEL="#81A6BE",E.FIRE="#F75231",E.WATER="#399CFF",E.GRASS="#7BCE52",E.ELECTRIC="#FFC631",E.PSYCHIC="#EF4179",E.ICE="#5ACEE7",E.DRAGON="#7B63E7",E.DARK="#735A4A",E.FAIRY="#EF70EF",E))(m1||{}),F1=(E=>(E.NORMAL="#574F4A",E.FIGHTING="#4E637C",E.FLYING="#4E637C",E.POISON="#352166",E.GROUND="#572D1E",E.ROCK="#5F442D",E.BUG="#5F5010",E.GHOST="#323D5B",E.STEEL="#415C5F",E.FIRE="#7C1818",E.WATER="#1C4E80",E.GRASS="#4F6729",E.ELECTRIC="#804618",E.PSYCHIC="#782155",E.ICE="#2D5C74",E.DRAGON="#313874",E.DARK="#392725",E.FAIRY="#663878",E))(F1||{}),oC=(E=>(E.GREY="#636363",E.PURPLE="#6b5a73",E.LIGHT_GREY="#d0d0c8",E.BROWN="#69402a",E.PINK="#fca2a2",E.BRIGHT_RED="#f83018",E.RED="#984038",E.MAROON="#632929",E.GREEN="#306850",E.BLUE="#006090",E.LIGHT_YELLOW="#ded6b5",E.YELLOW="#ebd773",E.DARK_YELLOW="#a0a060",E.ORANGE="#c07800",E.LIGHT_ORANGE="#ffbd73",E))(oC||{}),p1=(E=>(E[E.RUN_HISTORY=0]="RUN_HISTORY",E[E.SESSION_PREVIEW=1]="SESSION_PREVIEW",E))(p1||{});const og=class og extends Vs{constructor(){super(Ie.RUN_INFO)}async setup(){this.runContainer=n.add.container(1,-(n.game.canvas.height/6)+1),this.modifiersModule=ml,this.runContainer.setVisible(!1),n.loadImage("encounter_exclaim","mystery-encounters")}show(A){super.show(A);const s=n.add.rectangle(0,0,n.game.canvas.width,n.game.canvas.height,26720);s.setOrigin(0,0),this.runContainer.add(s);const R=A[0];this.runDisplayMode=A[1],this.runDisplayMode===0?(this.runInfo=n.gameData.parseSessionData(JSON.stringify(R.entry)),this.isVictory=R.isVictory??!1):this.runDisplayMode===1&&(this.runInfo=A[0]),this.pageMode=0,this.addHeader(),this.statsBgWidth=(n.game.canvas.width/6-2)/3,this.runResultContainer=n.add.container(0,24);const a=Gt(0,0,this.statsBgWidth-11,65);a.setOrigin(0,0),a.setName("Run_Result_Window"),this.runResultContainer.add(a),this.runDisplayMode===0?this.parseRunResult():this.runDisplayMode===1&&this.parseRunStatus(),this.runInfoContainer=n.add.container(0,89);const i=Gt(0,0,this.statsBgWidth-11,90),r=i.getBottomRight();return this.runInfoContainer.add(i),this.parseRunInfo(r.x,r.y),this.partyContainer=n.add.container(this.statsBgWidth-10,23),this.parsePartyInfo(),this.showParty(!0),this.runContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,n.game.canvas.width/6,n.game.canvas.height/6),Phaser.Geom.Rectangle.Contains),this.getUi().bringToTop(this.runContainer),this.runContainer.setVisible(!0),this.isVictory&&(this.createHallofFame(),this.getUi().bringToTop(this.hallofFameContainer)),this.setCursor(0),this.getUi().add(this.runContainer),this.getUi().hideTooltip(),!0}addHeader(){var R;const A=Gt(0,0,n.game.canvas.width/6-2,24);if(A.setOrigin(0,0),this.runContainer.add(A),this.runInfo.modifiers.length!==0){const a=A.getTopRight(),i=n.add.container(0,0),r=le(8,0,u.t("runHistory:viewHeldItems"),Q.WINDOW,{fontSize:"34px"}),L=this.getUi().getGamepadType();let o;L==="touch"?o=new Phaser.GameObjects.Sprite(n,0,2,"keyboard","E.png"):o=new Phaser.GameObjects.Sprite(n,0,2,L,(R=n.inputController)==null?void 0:R.getIconForLatestInputRecorded(rt.Button_Cycle_Ability)),i.add([r,o]),i.setPosition(a.x-r.displayWidth-o.displayWidth-8,10),this.runContainer.add(i)}const s=le(0,0,u.t("runHistory:runInfo"),Q.SETTINGS_LABEL);s.setOrigin(0,0),s.setPositionRelative(A,8,4),this.runContainer.add(s)}async parseRunResult(){var r,L;const A=n.gameData.gender??Vt.UNSET,s=Vt[A],R=this.isVictory?Q.PERFECT_IV:Q.SUMMARY_RED,a=this.isVictory?u.t("runHistory:victory"):u.t("runHistory:defeated",{context:s}),i=le(6,5,`${a} - ${u.t("saveSlotSelectUiHandler:wave")} ${this.runInfo.waveIndex}`,R,{fontSize:"65px",lineSpacing:.1});if(this.isVictory){const o=n.add.container(0,0),l=le(8,0,u.t("runHistory:viewHallOfFame"),Q.WINDOW,{fontSize:"65px"}),C=le(8,12,u.t("runHistory:viewEndingSplash"),Q.WINDOW,{fontSize:"65px"}),M=this.getUi().getGamepadType();let D,_;M==="touch"?(D=new Phaser.GameObjects.Sprite(n,0,4,"keyboard","R.png"),_=new Phaser.GameObjects.Sprite(n,0,16,"keyboard","F.png")):(D=new Phaser.GameObjects.Sprite(n,0,4,M,(r=n.inputController)==null?void 0:r.getIconForLatestInputRecorded(rt.Button_Cycle_Shiny)),_=new Phaser.GameObjects.Sprite(n,0,16,M,(L=n.inputController)==null?void 0:L.getIconForLatestInputRecorded(rt.Button_Cycle_Form))),o.add([l,D]),o.add([C,_]),o.setPosition(12,25),this.runResultContainer.add(o)}if(this.runResultContainer.add(i),!this.isVictory){const o=n.add.container(0,0);if(this.runInfo.battleType===Ut.WILD||this.runInfo.battleType===Ut.MYSTERY_ENCOUNTER&&!this.runInfo.trainer)switch(this.runInfo.enemyParty.length){case 1:this.parseWildSingleDefeat(o);break;case 2:this.parseWildDoubleDefeat(o);break}else(this.runInfo.battleType===Ut.TRAINER||this.runInfo.battleType===Ut.MYSTERY_ENCOUNTER&&this.runInfo.trainer)&&this.parseTrainerDefeat(o);this.runResultContainer.add(o)}this.runContainer.add(this.runResultContainer)}parseRunStatus(){const A=n.add.container(0,0);if(this.runResultContainer.add(A),this.runInfo.battleType===Ut.WILD)this.runInfo.enemyParty.length===1?this.parseWildSingleDefeat(A):this.runInfo.enemyParty.length===2&&this.parseWildDoubleDefeat(A);else if(this.runInfo.battleType===Ut.TRAINER){this.showTrainerSprites(A);const L=3;this.runInfo.enemyParty.forEach((P,h)=>{const H=n.add.sprite(0,0,"pb");H.setFrame(DO(P.pokeball)),H.setScale(.5),H.setPosition(58+h%L*8,h<=2?18:25),A.add(H)});const o=this.runInfo.trainer.toTrainer(),l=375;let C="";this.runInfo.trainer.trainerType>=l?C=o.variant===OA.FEMALE?u.t("trainerNames:rival_female"):u.t("trainerNames:rival"):C=o.getName(0,!0);const M=u.t(o.variant!==OA.DOUBLE?"battle:trainerAppeared":"battle:trainerAppearedDouble",{trainerName:C}).replace(/\n/g," "),D=n.add.container(0,0),_=le(0,0,M,Q.WINDOW,{fontSize:"35px",wordWrap:{width:200}});D.add(_),D.setPosition(55,32),this.runResultContainer.add(D)}else if(this.runInfo.battleType===Ut.MYSTERY_ENCOUNTER){const L=n.add.sprite(0,0,"encounter_exclaim");L.setPosition(34,26),L.setScale(.65);const o=n.add.sprite(56,-106,"pkmn__sub");o.setScale(.65),o.setPosition(34,46);const l=u.t(n.getMysteryEncounter(this.runInfo.mysteryEncounterType,!0).localizationKey+":title"),C=n.add.container(0,0),M=le(0,0,l,Q.WINDOW,{fontSize:"45px",wordWrap:{width:160}});C.add(M),C.setPosition(47,37),this.runResultContainer.add([L,o,C])}const s=this.runResultContainer.getByName("Run_Result_Window"),R=s.getTopCenter().x,a=s.getBottomCenter().y,i=le(R,5,`${u.t("saveSlotSelectUiHandler:wave")} ${this.runInfo.waveIndex}`,Q.WINDOW,{fontSize:"60px",lineSpacing:.1});i.setOrigin(.5,0);const r=le(R,a-5,`${TL(this.runInfo.arena.biome)}`,Q.WINDOW,{fontSize:"60px"});r.setOrigin(.5,1),this.runResultContainer.add([i,r]),this.runContainer.add(this.runResultContainer)}parseWildSingleDefeat(A){const s=n.add.container(0,0),R=this.runInfo.enemyParty[0],a=R.boss;R.boss=!1,R.player=!0;const i=R.toPokemon(),r=n.addPokemonIcon(i,0,0,0,0),L=a?Q.PARTY_RED:Q.PARTY,o=le(36,26,`${u.t("saveSlotSelectUiHandler:lv")}${Rr(i.level,1e3)}`,L,{fontSize:"44px",color:"#f8f8f8"});o.setShadow(0,0,void 0),o.setStroke("#424242",14),o.setOrigin(1,0),s.add(r),s.add(o),A.add(s),A.setPosition(27,12),i.destroy()}parseWildDoubleDefeat(A){this.runInfo.enemyParty.forEach((s,R)=>{const a=n.add.container(0,0),i=s.boss;s.boss=!1,s.player=!0;const r=s.toPokemon(),L=n.addPokemonIcon(r,0,0,0,0),o=le(36,26,`${u.t("saveSlotSelectUiHandler:lv")}${Rr(r.level,1e3)}`,i?Q.PARTY_RED:Q.PARTY,{fontSize:"44px",color:"#f8f8f8"});o.setShadow(0,0,void 0),o.setStroke("#424242",14),o.setOrigin(1,0),a.add(L),a.add(o),a.setPosition(R*35,0),A.add(a),r.destroy()}),A.setPosition(8,14)}showTrainerSprites(A){const s=this.runInfo.trainer.toTrainer();s.config.loadAssets(this.runInfo.trainer.variant).then(()=>{const R=s.config.getSpriteKey(this.runInfo.trainer.variant===OA.FEMALE,!1),a=n.add.sprite(0,5,R);if(this.runInfo.trainer.variant===OA.DOUBLE&&!s.config.doubleOnly){const i=n.add.container(5,8);a.setPosition(-3,-3);const r=s.config.getSpriteKey(!0,!0),L=n.add.sprite(5,-3,r);this.runDisplayMode===0?(L.setScale(.2),a.setScale(.2),i.add(a),i.add(L),i.setPosition(12,38)):(a.setScale(.55),a.setPosition(-9,-3),L.setScale(.55),i.add([a,L]),i.setPosition(28,34)),A.add(i)}else{const i=this.runDisplayMode===0?.35:.55,r=this.runDisplayMode===0?[12,28]:[30,32];a.setScale(i,i),a.setPosition(r[0],r[1]),A.add(a)}})}parseTrainerDefeat(A){this.showTrainerSprites(A);const s={};this.runInfo.enemyModifiers.forEach(a=>{const i=a.toModifier(this.modifiersModule[a.className]);if(i instanceof SR){const r=i==null?void 0:i.getArgs(),L=r[0];s[L]=r[1]}});const R=n.add.container(0,0);this.runInfo.enemyParty.forEach((a,i)=>{const r=Math.floor(i/3),L=n.add.container(0,0);L.setScale(.6);const o=a.boss;a.boss=!1,a.player=!0;const l=a.toPokemon(),C=n.addPokemonIcon(l,0,0,0,0),M=C.list[0],D=C.list.length>1?C.list[1]:void 0;if(s[a.id]){const P=yR(s[a.id]),h=new Phaser.Display.Color(P[0],P[1],P[2]);M.setTint(h.color),D&&D.setTint(h.color)}C.setPosition(39*(i%3)+5,35*r);const _=le(43*(i%3),27*(r+1),`${u.t("saveSlotSelectUiHandler:lv")}${Rr(l.level,1e3)}`,o?Q.PARTY_RED:Q.PARTY,{fontSize:"54px"});_.setShadow(0,0,void 0),_.setStroke("#424242",14),_.setOrigin(0,0),L.add(C),L.add(_),R.add(L),l.destroy()}),R.setPosition(25,15),A.add(R)}async parseRunInfo(A,s){const R=wE(7,0,"",Q.WINDOW,{fontSize:"50px",lineSpacing:3});switch(R.setPosition(7,5),R.appendText(u.t("runHistory:mode")+": ",!1),this.runInfo.gameMode){case SA.DAILY:R.appendText(`${u.t("gameMode:dailyRun")}`,!1);break;case SA.SPLICED_ENDLESS:R.appendText(`${u.t("gameMode:endlessSpliced")}`,!1);break;case SA.CHALLENGE:R.appendText(`${u.t("gameMode:challenge")}`,!1),R.appendText(`${u.t("runHistory:challengeRules")}: `),R.setWrapMode(1),R.setWrapWidth(500);const _=this.challengeParser();if(_)for(let P=0;P<_.length;P++)P>0&&R.appendText(" + ",!1),R.appendText(_[P],!1);break;case SA.ENDLESS:R.appendText(`${u.t("gameMode:endless")}`,!1);break;case SA.CLASSIC:R.appendText(`${u.t("gameMode:classic")}`,!1);break}(this.runInfo.gameMode===SA.ENDLESS||this.runInfo.gameMode===SA.SPLICED_ENDLESS)&&this.runInfo.waveIndex===n.gameData.gameStats.highestEndlessWave&&(R.appendText(` [${u.t("runHistory:personalBest")}]`),R.setTint(16772956,4718441,7039999,16738665));const a=n.add.container(0,0),i=u.resolvedLanguage==="ja"?12:3,r=wE(7,0,"",Q.WINDOW,{fontSize:"50px",lineSpacing:i}),L=P1(this.runInfo.playTime);r.appendText(`${u.t("runHistory:runLength")}: ${L}`,!1);const o=vo(n.moneyFormat,this.runInfo.money),l=aA(Q.MONEY_WINDOW,!1,n.uiTheme);r.appendText(`[color=${l}]${u.t("battleScene:moneyOwned",{formattedMoney:o})}[/color]`),r.setPosition(7,70),a.add(r);const C=wE(0,0,"",Q.WINDOW,{fontSize:"55px"}),M=Phaser.Math.Clamp(this.runInfo.party.map(_=>_.toPokemon().getLuck()).reduce((_,P)=>_+=P,0),0,14);let D=u.t("runHistory:luck")+": "+Q6(M);if(M<14?D="[color=#"+J6(M).toString(16)+"]"+D+"[/color]":C.setTint(16772956,4718441,7039999,16738665),C.appendText("[align=right]"+D+"[/align]",!1),C.setPosition(A-C.displayWidth-5,s-13),a.add(C),this.runInfo.modifiers.length){let _=0;const P=n.add.container(8,this.runInfo.gameMode===SA.CHALLENGE?20:15);P.setScale(.45);for(const h of this.runInfo.modifiers){const H=h.toModifier(this.modifiersModule[h.className]);if(H instanceof dt)continue;const d=H==null?void 0:H.getIcon(!1);if(d){const f=Math.floor(_/7);d.setPosition(24*(_%7),20+35*f),P.add(d)}if(++_===20){const f=le(45,90,"+",Q.WINDOW);f.setPositionRelative(P,70,45),this.runInfoContainer.add(f);break}}this.runInfoContainer.add(P)}this.runInfoContainer.add(R),this.runInfoContainer.add(a),this.runContainer.add(this.runInfoContainer)}challengeParser(){const A=[];for(let s=0;s<this.runInfo.challenges.length;s++)if(this.runInfo.challenges[s].value!==0)switch(this.runInfo.challenges[s].id){case it.SINGLE_GENERATION:A.push(u.t(`runHistory:challengeMonoGen${this.runInfo.challenges[s].value}`));break;case it.SINGLE_TYPE:const R=I[this.runInfo.challenges[s].value-1],a=`[color=${m1[R]}]`,i=`[shadow=${F1[R]}]`,r=a+i+u.t(`pokemonInfo:Type.${R}`)+"[/color][/shadow]";A.push(r);break;case it.INVERSE_BATTLE:A.push(u.t("challenges:inverseBattle.shortName"));break;default:const L=it[this.runInfo.challenges[s].id].split("_").map((o,l)=>l?`${o[0]}${o.slice(1).toLowerCase()}`:o.toLowerCase()).join("");A.push(u.t(`challenges:${L}.name`));break}return A}parsePartyInfo(){const A=this.runInfo.party,s=u.resolvedLanguage??"en",R=(n.game.canvas.height/6-23)/6;A.forEach((a,i)=>{var VA;const r=new i7(n,0,14,this.statsBgWidth*2+10,R-2,3),L=a.toPokemon(),o=n.add.container(this.statsBgWidth+5,(R-.5)*i),l=L.getTypes(),C=yR(l[0]),M=new Phaser.Display.Color(C[0],C[1],C[2]),D=M.clone().darken(45);r.setFillStyle(D.color);const _=n.add.container(0,0),P=n.addPokemonIcon(L,0,0,0,0);P.setScale(.75),P.setPosition(-99,1);const h=l[1]?yR(l[1]):void 0,H=h?new Phaser.Display.Color(h[0],h[1],h[2]):void 0;H?r.setStrokeStyle(1,H.color,.95):r.setStrokeStyle(1,M.color,.95),this.getUi().bringToTop(P);const d=n.add.container(-85,3.5),f="34px",B=L.getNature(),F=$O(B),W=L.getNameToRender(),b=["ko","zh_CN","zh_TW"];let x=u.t("starterSelectUiHandler:passive")??"-",$=u.t("starterSelectUiHandler:ability")??"-";b.includes(s)||(x=x.charAt(0),$=$.charAt(0));const j=L.passive?x+": "+L.getPassiveAbility().name:"",z=$+": "+L.getAbility().name,se=u.resolvedLanguage==="ja"?12:3,Z=wE(0,0,W,Q.SUMMARY,{fontSize:f,lineSpacing:se});Z.appendText(`${u.t("saveSlotSelectUiHandler:lv")}${n_(L.level,1)} - ${F}`),Z.appendText(z),Z.appendText(j),d.add(Z);const q=n.add.container(-35,6),p=[];L.stats.forEach(v=>p.push(n_(v,1)));for(let v=0;v<p.length;v++){const Ke=xo(B,v);p[v]=Ke<1?p[v]+"[color=#40c8f8]↓[/color]":p[v],p[v]=Ke>1?p[v]+"[color=#f89890]↑[/color]":p[v]}const oe=u.t("pokemonInfo:Stat.HPshortened")+": "+p[0],me=u.t("pokemonInfo:Stat.ATKshortened")+": "+p[1],Me=u.t("pokemonInfo:Stat.DEFshortened")+": "+p[2],We=u.t("pokemonInfo:Stat.SPATKshortened")+": "+p[3],De=u.t("pokemonInfo:Stat.SPDEFshortened")+": "+p[4],Ae=(s==="es-ES"||s==="pt_BR"?u.t("runHistory:SPDshortened"):u.t("pokemonInfo:Stat.SPDshortened"))+": "+p[5],ee=wE(-5,0,oe,Q.SUMMARY,{fontSize:f,lineSpacing:se});ee.appendText(me),ee.appendText(Me),q.add(ee);const Le=wE(25,0,We,Q.SUMMARY,{fontSize:f,lineSpacing:se});Le.appendText(De),Le.appendText(Ae),q.add(Le);const ue=n.add.container(0,0);if(L.fusionSpecies){const v=n.add.image(0,0,"icon_spliced");v.setScale(.35),v.setOrigin(0,0),L.isShiny()?v.setPositionRelative(d,35,0):v.setPositionRelative(d,28,0),ue.add(v),this.getUi().bringToTop(v)}if(L.isShiny()){const v=L.isFusion()&&L.shiny&&L.fusionShiny,Ke=n.add.image(0,0,`shiny_star_small${v?"_1":""}`);if(Ke.setOrigin(0,0),Ke.setScale(.65),Ke.setPositionRelative(d,28,0),Ke.setTint(yE(v?L.variant:L.getVariant())),ue.add(Ke),this.getUi().bringToTop(Ke),v){const fe=n.add.image(0,0,"shiny_star_small_2");fe.setOrigin(0,0),fe.setScale(.5),fe.setPosition(Ke.x+1,Ke.y+1),fe.setTint(yE(L.fusionVariant)),ue.add(fe),this.getUi().bringToTop(fe)}}const de=L.getMoveset(),Rt=n.add.container(70,-29),Bt=[],tt=[],ht=[[-6.5,35.5],[37,35.5],[-6.5,43.5],[37,43.5]];for(let v=0;v<(de==null?void 0:de.length);v++){const Ke=n.add.container(ht[v][0],ht[v][1]);Ke.setScale(.5);const fe=n.add.nineslice(0,0,"type_bgs","unknown",85,15,2,2,2,2);fe.setOrigin(1,0);const re=le(-fe.width/2,2,"-",Q.PARTY);re.setOrigin(.5,0),re.setName("text-move-label"),Bt.push(fe),tt.push(re),Ke.add(fe),Ke.add(re),Rt.add(Ke);const ae=(VA=de[v])==null?void 0:VA.getMove();Bt[v].setFrame(I[ae?ae.type:I.UNKNOWN].toString().toLowerCase()),tt[v].setText(ae?ae.name:"-")}const eA=this.runInfo.gameMode===SA.SPLICED_ENDLESS||this.runInfo.gameMode===SA.ENDLESS?.25:.5,Xt=n.add.container(-82,2),XA=[];if(this.runInfo.modifiers.length){for(const v of this.runInfo.modifiers){const Ke=v.toModifier(this.modifiersModule[v.className]);Ke instanceof dt&&Ke.pokemonId===L.id&&(Ke.stackCount=v.stackCount,XA.push(Ke))}if(XA.length>0){XA.sort(Ro);let v=0;for(const[Ke,fe]of XA.entries()){if(Ke>36){const ae=le(182,4,"+",Q.WINDOW);Xt.add(ae);break}const re=fe==null?void 0:fe.getIcon(!0);(fe==null?void 0:fe.stackCount)<(fe==null?void 0:fe.getMaxHeldItemCount(L))&&re.list[1]instanceof Phaser.GameObjects.BitmapText&&re.list[1].clearTint(),re.setScale(eA),re.setPosition(Ke%19*10,v*10),Xt.add(re),Ke!==0&&Ke%18===0&&v++}}}Xt.setName("heldItems"),Xt.setVisible(!1),o.add(r),_.add(P),o.add(_),ue.setName("PkmnMarks"),o.add(ue),Rt.setName("PkmnMoves"),o.add(Rt),d.setName("PkmnInfoText"),o.add(d),q.setName("PkmnStatsText"),o.add(q),o.add(Xt),o.setName("PkmnInfo"),this.partyContainer.add(o),L.destroy()}),this.runContainer.add(this.partyContainer)}showParty(A){this.partyContainer.getAll("name","PkmnInfo").forEach(R=>{R.getByName("PkmnMoves").setVisible(A),R.getByName("PkmnInfoText").setVisible(A),R.getByName("PkmnStatsText").setVisible(A),R.getByName("PkmnMarks").setVisible(A),R.getByName("heldItems").setVisible(!A),this.partyVisibility=A})}createVictorySplash(){this.endCardContainer=n.add.container(0,0);const s=(n.gameData.gender??Vt.UNSET)===Vt.FEMALE,R=n.add.image(0,0,`end_${s?"f":"m"}`);R.setOrigin(0),R.setScale(.5);const a=le(n.game.canvas.width/12,n.game.canvas.height/6-16,u.t("battle:congratulations"),Q.SUMMARY,{fontSize:"128px"});a.setOrigin(.5),this.endCardContainer.add(R),this.endCardContainer.add(a)}createHallofFame(){const A=n.gameData.gender??Vt.UNSET,s=A===Vt.FEMALE,R=Vt[A].toLowerCase();this.hallofFameContainer=n.add.container(0,0);const a=n.add.image(0,0,`end_${s?"f":"m"}`);a.setOrigin(0),a.setPosition(-1,-1),a.setScale(.5);const i=a.getBottomCenter(),r=s?"red":"blue",L=n.add.image(0,0,"hall_of_fame_"+r);L.setPosition(159,89),L.setSize(n.game.canvas.width,n.game.canvas.height+10),L.setAlpha(.8),this.hallofFameContainer.add(a),this.hallofFameContainer.add(L);const o=le(0,0,u.t("runHistory:hallofFameText",{context:R}),Q.WINDOW);o.setPosition(i.x-o.displayWidth/2,164),this.hallofFameContainer.add(o),this.runInfo.party.forEach((l,C)=>{const M=l.toPokemon(),D=C%2,_=M.id,P=M.shiny,h=M.formIndex,H=M.variant,d=M.getSpeciesForm(),f=n.add.sprite(60+40*C,40+D*80,"pkmn__sub");f.setPipeline(n.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),this.hallofFameContainer.add(f);const B=new Map;B.set(_,!1);const F=M.gender===1;if(d.loadAssets(F,h,P,H,!0).then(()=>{B.set(_,!0),f.play(d.getSpriteKey(F,h,P,H)),f.setPipelineData("shiny",P),f.setPipelineData("variant",H),f.setPipelineData("spriteKey",d.getSpriteKey(F,h,P,H)),f.setVisible(!0)}),M.isFusion()){const W=n.add.sprite(80+40*C,50+D*80,M.getFusionIconAtlasKey());W.setName("sprite-fusion-icon"),W.setOrigin(.5,0),W.setFrame(M.getFusionIconId(!0)),this.hallofFameContainer.add(W)}M.destroy()}),this.hallofFameContainer.setVisible(!1),this.runContainer.add(this.hallofFameContainer)}processInput(A){const s=this.getUi();let R=!1;const a=!1;switch(A){case k.CANCEL:R=!0,this.pageMode===0?(this.runInfoContainer.removeAll(!0),this.runResultContainer.removeAll(!0),this.partyContainer.removeAll(!0),this.runContainer.removeAll(!0),this.isVictory&&this.hallofFameContainer.removeAll(!0),super.clear(),this.runContainer.setVisible(!1),s.revertMode()):this.pageMode===1?(this.hallofFameContainer.setVisible(!1),this.pageMode=0):this.pageMode===2&&(this.endCardContainer.setVisible(!1),this.runContainer.remove(this.endCardContainer),this.pageMode=0);break;case k.DOWN:case k.UP:break;case k.CYCLE_FORM:case k.CYCLE_SHINY:case k.CYCLE_ABILITY:this.buttonCycleOption(A);break}return R&&s.playSelect(),R||a}buttonCycleOption(A){switch(A){case k.CYCLE_FORM:this.isVictory&&this.pageMode!==1&&(!this.endCardContainer||!this.endCardContainer.visible?(this.createVictorySplash(),this.endCardContainer.setVisible(!0),this.runContainer.add(this.endCardContainer),this.pageMode=2):(this.endCardContainer.setVisible(!1),this.runContainer.remove(this.endCardContainer),this.pageMode=0));break;case k.CYCLE_SHINY:this.isVictory&&this.pageMode!==2&&(this.hallofFameContainer.visible?(this.hallofFameContainer.setVisible(!1),this.pageMode=0):(this.hallofFameContainer.setVisible(!0),this.pageMode=1));break;case k.CYCLE_ABILITY:this.runInfo.modifiers.length!==0&&this.pageMode===0&&(this.partyVisibility?this.showParty(!1):this.showParty(!0));break}}};N(og,"RunInfoUiHandler");let lC=og;const JZ=25,lg=class lg extends vs{constructor(){super(Ie.RUN_HISTORY),this.maxRows=3,this.scrollCursor=0}setup(){const A=this.getUi();this.runSelectContainer=n.add.container(0,0),this.runSelectContainer.setVisible(!1),A.add(this.runSelectContainer);const s=n.add.rectangle(0,0,n.game.canvas.width/6,-n.game.canvas.height/6,26720);s.setOrigin(0,0),this.runSelectContainer.add(s),this.runContainerInitialY=-n.game.canvas.height/6+8,this.runsContainer=n.add.container(8,this.runContainerInitialY),this.runSelectContainer.add(this.runsContainer),this.runs=[],n.loadImage("hall_of_fame_red","ui"),n.loadImage("hall_of_fame_blue","ui"),n.loadAtlas("rival_f","trainer"),n.loadAtlas("rival_m","trainer")}show(A){return super.show(A),this.getUi().bringToTop(this.runSelectContainer),this.runSelectContainer.setVisible(!0),this.populateRuns().then(()=>{this.setScrollCursor(0),this.setCursor(0),this.runs.length===0&&this.clearCursor()}),!0}processInput(A){const s=this.getUi();let R=!1;const a=!1;if([k.ACTION,k.CANCEL].includes(A))if(A===k.ACTION){const i=this.cursor+this.scrollCursor;if(this.runs[i])n.ui.setOverlayMode(Ie.RUN_INFO,this.runs[i].entryData,p1.RUN_HISTORY,!0);else return!1;return R=!0,R}else this.runSelectCallback=null,R=!0,n.ui.revertMode();else if(this.runs.length>0)switch(A){case k.UP:this.cursor?R=this.setCursor(this.cursor-1):this.scrollCursor?R=this.setScrollCursor(this.scrollCursor-1):this.runs.length>1&&(R=this.setCursor(Math.min(this.runs.length-1,this.maxRows-1)),R=this.setScrollCursor(Math.max(0,this.runs.length-this.maxRows))||R);break;case k.DOWN:this.cursor<Math.min(this.maxRows-1,this.runs.length-this.scrollCursor-1)?R=this.setCursor(this.cursor+1):this.scrollCursor<this.runs.length-this.maxRows?R=this.setScrollCursor(this.scrollCursor+1):this.runs.length>1&&(R=this.setCursor(0),R=this.setScrollCursor(0)||R);break}return R&&s.playSelect(),R||a}async populateRuns(){const A=await n.gameData.getRunHistoryData(),s=Object.keys(A);if(s.length===0){this.showEmpty();return}const R=s.map(Number);s.length>1&&R.sort((i,r)=>r-i);const a=s.length;for(let i=0;i<a;i++){const r=new AP(A[R[i]],i);n.add.existing(r),this.runsContainer.add(r),this.runs.push(r)}this.cursorObj&&s.length>0&&this.runsContainer.bringToTop(this.cursorObj)}async showEmpty(){const A=Gt(0,0,304,165);this.runsContainer.add(A);const s=A.getCenter(),R=le(0,0,u.t("saveSlotSelectUiHandler:empty"),Q.WINDOW,{fontSize:"128px"});R.setPosition(s.x-18,s.y-15),this.runsContainer.add(R)}setCursor(A){const s=super.setCursor(A);return this.cursorObj||(this.cursorObj=n.add.nineslice(0,0,"select_cursor_highlight_thick",void 0,296,46,6,6,6,6),this.cursorObj.setOrigin(0,0),this.runsContainer.add(this.cursorObj)),this.cursorObj.setPosition(4,4+(A+this.scrollCursor)*56),s}setScrollCursor(A){const s=A!==this.scrollCursor;return s&&(this.scrollCursor=A,this.setCursor(this.cursor),n.tweens.add({targets:this.runsContainer,y:this.runContainerInitialY-56*A,duration:st(325),ease:"Sine.easeInOut"})),s}clear(){super.clear(),this.runSelectContainer.setVisible(!1),this.setScrollCursor(0),this.clearCursor(),this.runSelectCallback=null,this.clearRuns()}clearCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}clearRuns(){this.runs.splice(0,this.runs.length),this.runsContainer.removeAll(!0)}};N(lg,"RunHistoryUiHandler");let tP=lg;const Cg=class Cg extends Phaser.GameObjects.Container{constructor(A,s){super(n,0,s*56),this.slotId=s,this.entryData=A,this.setup(this.entryData)}setup(A){const s=A.isVictory,R=n.gameData.parseSessionData(JSON.stringify(A.entry)),a=Gt(0,0,304,52);if(this.add(a),s){const l=le(8,5,`${u.t("runHistory:victory")}`,Q.WINDOW);this.add(l)}else{const l=n.gameData.gender??Vt.UNSET,C=Vt[l].toLowerCase();if(R.battleType===Ut.WILD||R.battleType===Ut.MYSTERY_ENCOUNTER&&!R.trainer){const M=n.add.container(8,5),D=le(0,0,`${u.t("runHistory:defeatedWild",{context:C})}`,Q.WINDOW);M.add(D),R.enemyParty.forEach((_,P)=>{const h=n.add.container(65+P*25,-8);h.setScale(.75),_.boss=!1,_.player=!0;const H=_.toPokemon(),d=n.addPokemonIcon(H,0,0,0,0),f=le(32,20,`${u.t("saveSlotSelectUiHandler:lv")}${Rr(H.level,1e3)}`,Q.PARTY,{fontSize:"54px",color:"#f8f8f8"});f.setShadow(0,0,void 0),f.setStroke("#424242",14),f.setOrigin(1,0),h.add(d),h.add(f),M.add(h),H.destroy()}),this.add(M)}else if(R.battleType===Ut.TRAINER||R.battleType===Ut.MYSTERY_ENCOUNTER&&R.trainer){const M=R.trainer.toTrainer();if(R.trainer.trainerType>=375){const _=M.variant===OA.FEMALE?"trainerNames:rival_female":"trainerNames:rival",P=le(8,5,`${u.t("runHistory:defeatedRival",{context:C})} ${u.t(_)}`,Q.WINDOW);this.add(P)}else{const _=le(8,5,`${u.t("runHistory:defeatedTrainer",{context:C})}${M.getName(0,!0)}`,Q.WINDOW);this.add(_)}}}const i=le(8,19,"",Q.WINDOW);let r="";switch(R.gameMode){case SA.DAILY:r=u.t("gameMode:dailyRun");break;case SA.SPLICED_ENDLESS:case SA.ENDLESS:r=u.t("gameMode:endless");break;case SA.CLASSIC:r=u.t("gameMode:classic");break;case SA.CHALLENGE:r=u.t("gameMode:challenge");break}if(i.appendText(r,!1),R.gameMode===SA.SPLICED_ENDLESS){const l=n.add.image(0,0,"icon_spliced");l.setScale(.75);const C=i.getTopRight();l.setPosition(C.x+5,27),this.add(l),i.appendText("    - ",!1)}else i.appendText(" - ",!1);i.appendText(u.t("saveSlotSelectUiHandler:wave")+" "+R.waveIndex,!1),this.add(i);const L=le(8,33,new Date(R.timestamp).toLocaleString(),Q.WINDOW);this.add(L);const o=n.add.container(140,17);R.party.forEach((l,C)=>{const M=n.add.container(26*C,0);M.setScale(.75);const D=l.toPokemon(),_=n.addPokemonIcon(D,0,0,0,0),P=le(32,20,`${u.t("saveSlotSelectUiHandler:lv")}${Rr(D.level,1e3)}`,Q.PARTY,{fontSize:"54px",color:"#f8f8f8"});P.setShadow(0,0,void 0),P.setStroke("#424242",14),P.setOrigin(1,0),M.add(_),M.add(P),o.add(M),D.destroy()}),this.add(o)}};N(Cg,"RunEntryContainer");let AP=Cg;const $Z=[N(function(A){A.starterData&&A.dexData&&Object.keys(A.starterData).forEach(s=>{var R;(R=A.dexData[s])!=null&&R.caughtAttr&&A.starterData[s]&&!A.starterData[s].abilityAttr&&(A.starterData[s].abilityAttr=1)})},"migrateAbilityData"),N(function(A){A.gameStats&&A.gameStats.legendaryPokemonCaught!==void 0&&A.gameStats.subLegendaryPokemonCaught===void 0&&(A.gameStats.subLegendaryPokemonSeen=0,A.gameStats.subLegendaryPokemonCaught=0,A.gameStats.subLegendaryPokemonHatched=0,wR.filter(s=>s.subLegendary).forEach(s=>{const R=A.dexData[s.speciesId];A.gameStats.subLegendaryPokemonSeen+=R.seenCount,A.gameStats.legendaryPokemonSeen=Math.max(A.gameStats.legendaryPokemonSeen-R.seenCount,0),A.gameStats.subLegendaryPokemonCaught+=R.caughtCount,A.gameStats.legendaryPokemonCaught=Math.max(A.gameStats.legendaryPokemonCaught-R.caughtCount,0),A.gameStats.subLegendaryPokemonHatched+=R.hatchedCount,A.gameStats.legendaryPokemonHatched=Math.max(A.gameStats.legendaryPokemonHatched-R.hatchedCount,0)}),A.gameStats.subLegendaryPokemonSeen=Math.max(A.gameStats.subLegendaryPokemonSeen,A.gameStats.subLegendaryPokemonCaught),A.gameStats.legendaryPokemonSeen=Math.max(A.gameStats.legendaryPokemonSeen,A.gameStats.legendaryPokemonCaught),A.gameStats.mythicalPokemonSeen=Math.max(A.gameStats.mythicalPokemonSeen,A.gameStats.mythicalPokemonCaught))},"fixLegendaryStats"),N(function(A){var s,R;if(!ve(A.starterData))for(const a of ga)(s=A.starterData[a])!=null&&s.abilityAttr&&(A.starterData[a].abilityAttr|=Ms.ABILITY_1),(R=A.dexData[a])!=null&&R.caughtAttr&&(A.dexData[a].caughtAttr|=Xe.FEMALE)},"fixStarterData")],zZ=[N(function(A){A.hasOwnProperty("REROLL_TARGET")&&!A.hasOwnProperty(It.Shop_Cursor_Target)&&(A[It.Shop_Cursor_Target]=A.REROLL_TARGET,delete A.REROLL_TARGET,localStorage.setItem("settings",JSON.stringify(A)))},"fixRerollTarget")],qZ=[N(function(A){A.modifiers.forEach(s=>{if(s.className==="PokemonBaseStatModifier")s.className="BaseStatModifier";else if(s.className==="PokemonResetNegativeStatStageModifier")s.className="ResetNegativeStatStageModifier";else if(s.className==="TempBattleStatBoosterModifier")if(s.typeId!=="DIRE_HIT"){s.className="TempStatStageBoosterModifier",s.typeId="TEMP_STAT_STAGE_BOOSTER";const a=s.typePregenArgs[0]+1;s.typePregenArgs[0]=a,s.args=[a,5,Math.min(s.args[1],5)]}else s.className="TempCritBoosterModifier",s.typePregenArgs=[],s.args=[5,Math.min(s.args[1],5)];else if(s.className==="DoubleBattleChanceBoosterModifier"&&s.args.length===1){let R;switch(s.typeId){case"MAX_LURE":R=30;break;case"SUPER_LURE":R=15;break;default:R=10;break}s.args=[R,Math.min(s.args[0],R)]}}),A.enemyModifiers.forEach(s=>{s.className==="PokemonBaseStatModifier"?s.className="BaseStatModifier":s.className==="PokemonResetNegativeStatStageModifier"&&(s.className="ResetNegativeStatStageModifier")})},"migrateModifiers"),N(function(A){A.party.forEach(s=>{s.mysteryEncounterPokemonData&&(s.customPokemonData=new rs(s.mysteryEncounterPokemonData),s.mysteryEncounterPokemonData=null),s.fusionMysteryEncounterPokemonData&&(s.fusionCustomPokemonData=new rs(s.fusionMysteryEncounterPokemonData),s.fusionMysteryEncounterPokemonData=null),s.customPokemonData=s.customPokemonData??new rs,!ve(s.natureOverride)&&s.natureOverride>=0&&(s.customPokemonData.nature=s.natureOverride,s.natureOverride=-1)})},"migrateCustomPokemonDataAndNatureOverrides")],jZ=[],e9=[],t9=[],W1=Vo.split(".").map(E=>parseInt(E));function A9(E){const A=E.gameVersion.split(".").map(s=>parseInt(s));if(!A.every((s,R)=>s===W1[R])){const s=new sP;s.applyStaticPreprocessors(E),s.applyMigration(E,A)}}N(A9,"applySystemVersionMigration");function E9(E){const A=E.gameVersion.split(".").map(s=>parseInt(s));if(!A.every((s,R)=>s===W1[R])){const s=new EP;s.applyStaticPreprocessors(E),s.applyMigration(E,A)}}N(E9,"applySessionVersionMigration");function s9(E){const s=(E.hasOwnProperty("gameVersion")?E.gameVersion:"1.0.0").split(".").map(R=>parseInt(R));if(!s.every((R,a)=>R===W1[a])){const R=new RP;R.applyStaticPreprocessors(E),R.applyMigration(E,s)}}N(s9,"applySettingsVersionMigration");const Ug=class Ug{callMigrators(A,s){for(const R of s)R(A)}applyStaticPreprocessors(A){}};N(Ug,"VersionConverter");let jT=Ug;const ug=class ug extends jT{applyStaticPreprocessors(A){A.money=Math.floor(A.money)}applyMigration(A,s){const[R,a,i]=s;R===1&&(a===0&&i<=5&&(console.log("Applying v1.0.4 session data migration!"),this.callMigrators(A,qZ)),a<=1&&(console.log("Applying v1.1.0 session data migration!"),this.callMigrators(A,t9))),console.log(`Session data successfully migrated to v${Vo}!`)}};N(ug,"SessionVersionConverter");let EP=ug;const Dg=class Dg extends jT{applyMigration(A,s){const[R,a,i]=s;R===1&&(a===0&&i<=4&&(console.log("Applying v1.0.4 system data migraton!"),this.callMigrators(A,$Z)),a<=1&&(console.log("Applying v1.1.0 system data migraton!"),this.callMigrators(A,jZ))),console.log(`System data successfully migrated to v${Vo}!`)}};N(Dg,"SystemVersionConverter");let sP=Dg;const Mg=class Mg extends jT{applyMigration(A,s){const[R,a,i]=s;R===1&&(a===0&&i<=4&&(console.log("Applying v1.0.4 settings data migraton!"),this.callMigrators(A,zZ)),a<=1&&(console.log("Applying v1.1.0 settings data migraton!"),this.callMigrators(A,e9))),console.log(`System data successfully migrated to v${Vo}!`)}};N(Mg,"SettingsVersionConverter");let RP=Mg;var Je=(E=>(E[E.MYSTERIOUS_CHALLENGERS=0]="MYSTERIOUS_CHALLENGERS",E[E.MYSTERIOUS_CHEST=1]="MYSTERIOUS_CHEST",E[E.DARK_DEAL=2]="DARK_DEAL",E[E.FIGHT_OR_FLIGHT=3]="FIGHT_OR_FLIGHT",E[E.SLUMBERING_SNORLAX=4]="SLUMBERING_SNORLAX",E[E.TRAINING_SESSION=5]="TRAINING_SESSION",E[E.DEPARTMENT_STORE_SALE=6]="DEPARTMENT_STORE_SALE",E[E.SHADY_VITAMIN_DEALER=7]="SHADY_VITAMIN_DEALER",E[E.FIELD_TRIP=8]="FIELD_TRIP",E[E.SAFARI_ZONE=9]="SAFARI_ZONE",E[E.LOST_AT_SEA=10]="LOST_AT_SEA",E[E.FIERY_FALLOUT=11]="FIERY_FALLOUT",E[E.THE_STRONG_STUFF=12]="THE_STRONG_STUFF",E[E.THE_POKEMON_SALESMAN=13]="THE_POKEMON_SALESMAN",E[E.AN_OFFER_YOU_CANT_REFUSE=14]="AN_OFFER_YOU_CANT_REFUSE",E[E.DELIBIRDY=15]="DELIBIRDY",E[E.ABSOLUTE_AVARICE=16]="ABSOLUTE_AVARICE",E[E.A_TRAINERS_TEST=17]="A_TRAINERS_TEST",E[E.TRASH_TO_TREASURE=18]="TRASH_TO_TREASURE",E[E.BERRIES_ABOUND=19]="BERRIES_ABOUND",E[E.CLOWNING_AROUND=20]="CLOWNING_AROUND",E[E.PART_TIMER=21]="PART_TIMER",E[E.DANCING_LESSONS=22]="DANCING_LESSONS",E[E.WEIRD_DREAM=23]="WEIRD_DREAM",E[E.THE_WINSTRATE_CHALLENGE=24]="THE_WINSTRATE_CHALLENGE",E[E.TELEPORTING_HIJINKS=25]="TELEPORTING_HIJINKS",E[E.BUG_TYPE_SUPERFAN=26]="BUG_TYPE_SUPERFAN",E[E.FUN_AND_GAMES=27]="FUN_AND_GAMES",E[E.UNCOMMON_BREED=28]="UNCOMMON_BREED",E[E.GLOBAL_TRADE_SYSTEM=29]="GLOBAL_TRADE_SYSTEM",E[E.THE_EXPERT_POKEMON_BREEDER=30]="THE_EXPERT_POKEMON_BREEDER",E))(Je||{});function BM(E,A,s){switch(s){case be.POKEBALL:ob(E,A,48);break;case be.GREAT_BALL:ob(E,A,96);break;case be.ULTRA_BALL:lb(E,A,8);break;case be.ROGUE_BALL:lb(E,A,10);break;case be.MASTER_BALL:R9(E,A);break}}N(BM,"addPokeballOpenParticles");function ob(E,A,s){const R=n.anims.generateFrameNames("pb_particles",{start:0,end:3,suffix:".png"});n.anims.exists("pb_open_particle")||n.anims.create({key:"pb_open_particle",frames:R,frameRate:16,repeat:-1});const a=N(r=>{const L=n.add.sprite(E,A,"pb_open_particle");n.field.add(L);const o=r*45,[l,C]=[s*Math.cos(o*Math.PI/180),s*Math.sin(o*Math.PI/180)];n.tweens.add({targets:L,x:E+l,y:A+C,duration:575}),L.play({key:"pb_open_particle",startFrame:(r+3)%4,frameRate:Math.floor(16*n.gameSpeed)}),n.tweens.add({targets:L,delay:500,duration:75,alpha:0,ease:"Sine.easeIn",onComplete:N(()=>L.destroy(),"onComplete")})},"addParticle");let i=0;n.time.addEvent({delay:20,repeat:16,callback:N(()=>a(++i),"callback")})}N(ob,"doDefaultPbOpenParticles");function lb(E,A,s){const R=[];for(let a=0;a<10;a++)R.push(n8(a*25,E,A,1,1,5,s));n.tweens.add({targets:R,delay:750,duration:250,alpha:0,ease:"Sine.easeIn",onComplete:N(()=>{for(const a of R)a.destroy()},"onComplete")})}N(lb,"doUbOpenParticles");function R9(E,A){const s=[];for(let R=0;R<2;R++){for(let a=0;a<8;a++)s.push(n8(a*32,E,A,R?1:2,R?2:1,8,4));n.tweens.add({targets:s,delay:750,duration:250,alpha:0,ease:"Sine.easeIn",onComplete:N(()=>{for(const a of s)a.destroy()},"onComplete")})}}N(R9,"doMbOpenParticles");function n8(E,A,s,R,a,i,r){let L=0;const o=n.add.image(A,s,"pb_particles",`${r}.png`);n.field.add(o);const l=N(()=>{if(!o.scene)return C.remove();o.x=A+Cn(E,L*R),o.y=s+Za(E,L*a),E=E+i,L++},"updateParticle"),C=n.tweens.addCounter({repeat:-1,duration:TE(1),onRepeat:N(()=>{l()},"onRepeat")});return o}N(n8,"doFanOutParticle");function I8(E){const A=N(()=>{const s=n.add.sprite(E.x,E.y,"pb_particles","4.png");s.setOrigin(E.originX,E.originY),s.setAlpha(.5),n.field.add(s),n.tweens.add({targets:s,y:E.y-10,ease:"Sine.easeOut",duration:250,onComplete:N(()=>{n.tweens.add({targets:s,y:E.y,alpha:0,ease:"Sine.easeIn",duration:250})},"onComplete")});const R=r7(25);n.tweens.add({targets:s,x:E.x+R,duration:500}),n.tweens.add({targets:s,alpha:0,delay:425,duration:75,onComplete:N(()=>s.destroy(),"onComplete")})},"addParticle");new Array(3).fill(null).map(()=>A())}N(I8,"addPokeballCaptureStars");function Cn(E,A){return A*Math.sin(E*(Math.PI/128))}N(Cn,"sin");function Za(E,A){return A*Math.cos(E*(Math.PI/128))}N(Za,"cos");function gM(E,A){const s=A?`_${A+1}`:"",R=`shiny${s}`,a=`sparkle${s}`;if(!n.anims.exists(a)){const i=n.anims.generateFrameNames(R,{suffix:".png",end:34});n.anims.create({key:`sparkle${s}`,frames:i,frameRate:32,showOnStart:!0,hideOnComplete:!0})}E.play(a),n.playSound("se/sparkle")}N(gM,"doShinySparkleAnim");function mA(E,A){if(ve(E))return null;const s=n.uiTheme??uO.DEFAULT;let R=O9(E);return A&&R&&(R=W7(R,A,s)),R}N(mA,"getEncounterText");function O9(E){var s,R;const A=(R=(s=n.currentBattle)==null?void 0:s.mysteryEncounter)==null?void 0:R.dialogueTokens;return u.exists(E,A)?u.t(E,A):E??null}N(O9,"getTextWithDialogueTokens");function RE(E){const A=mA(E);n.queueMessage(A??"",null,!0)}N(RE,"queueEncounterMessage");function qt(E,A=null,s=0,R=!0,a=null){return new Promise(i=>{const r=mA(E);n.ui.showText(r??"",A,()=>i(),s,R,a)})}N(qt,"showEncounterText");function Un(E,A,s=null,R=0){return new Promise(a=>{const i=mA(E),r=mA(A);n.ui.showDialogue(i??"",r??"",s,()=>a(),R)})}N(Un,"showEncounterDialogue");const _g=class _g extends aE{constructor(){super()}showEnemyTrainer(A=lt.NONE){var a,i;const s=(a=n.currentBattle.trainer)==null?void 0:a.getSprites(),R=(i=n.currentBattle.trainer)==null?void 0:i.getTintSprites();for(let r=0;r<s.length;r++){const L=!A||!r==(A===lt.TRAINER)||s.length<2;[s[r],R[r]].map(o=>{L&&(o.x=A||s.length<2?0:r?16:-16),o.setVisible(L),o.clearTint()}),s[r].setVisible(L),R[r].setVisible(L),s[r].clearTint(),R[r].clearTint()}n.tweens.add({targets:n.currentBattle.trainer,x:"-=16",y:"+=16",alpha:1,ease:"Sine.easeInOut",duration:750})}hideEnemyTrainer(){n.tweens.add({targets:n.currentBattle.trainer,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:750})}};N(_g,"BattlePhase");let dE=_g;const Cb={[U.YOUNGSTER]:[{encounter:["dialogue:youngster.encounter.1","dialogue:youngster.encounter.2","dialogue:youngster.encounter.3","dialogue:youngster.encounter.4","dialogue:youngster.encounter.5","dialogue:youngster.encounter.6","dialogue:youngster.encounter.7","dialogue:youngster.encounter.8","dialogue:youngster.encounter.9","dialogue:youngster.encounter.10","dialogue:youngster.encounter.11","dialogue:youngster.encounter.12","dialogue:youngster.encounter.13"],victory:["dialogue:youngster.victory.1","dialogue:youngster.victory.2","dialogue:youngster.victory.3","dialogue:youngster.victory.4","dialogue:youngster.victory.5","dialogue:youngster.victory.6","dialogue:youngster.victory.7","dialogue:youngster.victory.8","dialogue:youngster.victory.9","dialogue:youngster.victory.10","dialogue:youngster.victory.11","dialogue:youngster.victory.12","dialogue:youngster.victory.13"]},{encounter:["dialogue:lass.encounter.1","dialogue:lass.encounter.2","dialogue:lass.encounter.3","dialogue:lass.encounter.4","dialogue:lass.encounter.5","dialogue:lass.encounter.6","dialogue:lass.encounter.7","dialogue:lass.encounter.8","dialogue:lass.encounter.9"],victory:["dialogue:lass.victory.1","dialogue:lass.victory.2","dialogue:lass.victory.3","dialogue:lass.victory.4","dialogue:lass.victory.5","dialogue:lass.victory.6","dialogue:lass.victory.7","dialogue:lass.victory.8","dialogue:lass.victory.9"]}],[U.BREEDER]:[{encounter:["dialogue:breeder.encounter.1","dialogue:breeder.encounter.2","dialogue:breeder.encounter.3"],victory:["dialogue:breeder.victory.1","dialogue:breeder.victory.2","dialogue:breeder.victory.3"],defeat:["dialogue:breeder.defeat.1","dialogue:breeder.defeat.2","dialogue:breeder.defeat.3"]},{encounter:["dialogue:breeder_female.encounter.1","dialogue:breeder_female.encounter.2","dialogue:breeder_female.encounter.3"],victory:["dialogue:breeder_female.victory.1","dialogue:breeder_female.victory.2","dialogue:breeder_female.victory.3"],defeat:["dialogue:breeder_female.defeat.1","dialogue:breeder_female.defeat.2","dialogue:breeder_female.defeat.3"]}],[U.FISHERMAN]:[{encounter:["dialogue:fisherman.encounter.1","dialogue:fisherman.encounter.2","dialogue:fisherman.encounter.3"],victory:["dialogue:fisherman.victory.1","dialogue:fisherman.victory.2","dialogue:fisherman.victory.3"]},{encounter:["dialogue:fisherman_female.encounter.1","dialogue:fisherman_female.encounter.2","dialogue:fisherman_female.encounter.3"],victory:["dialogue:fisherman_female.victory.1","dialogue:fisherman_female.victory.2","dialogue:fisherman_female.victory.3"]}],[U.SWIMMER]:[{encounter:["dialogue:swimmer.encounter.1","dialogue:swimmer.encounter.2","dialogue:swimmer.encounter.3"],victory:["dialogue:swimmer.victory.1","dialogue:swimmer.victory.2","dialogue:swimmer.victory.3"]}],[U.BACKPACKER]:[{encounter:["dialogue:backpacker.encounter.1","dialogue:backpacker.encounter.2","dialogue:backpacker.encounter.3","dialogue:backpacker.encounter.4"],victory:["dialogue:backpacker.victory.1","dialogue:backpacker.victory.2","dialogue:backpacker.victory.3","dialogue:backpacker.victory.4"]}],[U.ACE_TRAINER]:[{encounter:["dialogue:ace_trainer.encounter.1","dialogue:ace_trainer.encounter.2","dialogue:ace_trainer.encounter.3","dialogue:ace_trainer.encounter.4"],victory:["dialogue:ace_trainer.victory.1","dialogue:ace_trainer.victory.2","dialogue:ace_trainer.victory.3","dialogue:ace_trainer.victory.4"],defeat:["dialogue:ace_trainer.defeat.1","dialogue:ace_trainer.defeat.2","dialogue:ace_trainer.defeat.3","dialogue:ace_trainer.defeat.4"]}],[U.PARASOL_LADY]:[{encounter:["dialogue:parasol_lady.encounter.1"],victory:["dialogue:parasol_lady.victory.1"]}],[U.TWINS]:[{encounter:["dialogue:twins.encounter.1","dialogue:twins.encounter.2","dialogue:twins.encounter.3"],victory:["dialogue:twins.victory.1","dialogue:twins.victory.2","dialogue:twins.victory.3"],defeat:["dialogue:twins.defeat.1","dialogue:twins.defeat.2","dialogue:twins.defeat.3"]}],[U.CYCLIST]:[{encounter:["dialogue:cyclist.encounter.1","dialogue:cyclist.encounter.2","dialogue:cyclist.encounter.3"],victory:["dialogue:cyclist.victory.1","dialogue:cyclist.victory.2","dialogue:cyclist.victory.3"]}],[U.BLACK_BELT]:[{encounter:["dialogue:black_belt.encounter.1","dialogue:black_belt.encounter.2"],victory:["dialogue:black_belt.victory.1","dialogue:black_belt.victory.2"]},{encounter:["dialogue:battle_girl.encounter.1"],victory:["dialogue:battle_girl.victory.1"]}],[U.HIKER]:[{encounter:["dialogue:hiker.encounter.1","dialogue:hiker.encounter.2"],victory:["dialogue:hiker.victory.1","dialogue:hiker.victory.2"]}],[U.RANGER]:[{encounter:["dialogue:ranger.encounter.1","dialogue:ranger.encounter.2"],victory:["dialogue:ranger.victory.1","dialogue:ranger.victory.2"],defeat:["dialogue:ranger.defeat.1","dialogue:ranger.defeat.2"]}],[U.SCIENTIST]:[{encounter:["dialogue:scientist.encounter.1"],victory:["dialogue:scientist.victory.1"]}],[U.SCHOOL_KID]:[{encounter:["dialogue:school_kid.encounter.1","dialogue:school_kid.encounter.2"],victory:["dialogue:school_kid.victory.1","dialogue:school_kid.victory.2"]}],[U.ARTIST]:[{encounter:["dialogue:artist.encounter.1"],victory:["dialogue:artist.victory.1"]}],[U.GUITARIST]:[{encounter:["dialogue:guitarist.encounter.1"],victory:["dialogue:guitarist.victory.1"]}],[U.WORKER]:[{encounter:["dialogue:worker.encounter.1"],victory:["dialogue:worker.victory.1"]},{encounter:["dialogue:worker_female.encounter.1"],victory:["dialogue:worker_female.victory.1"],defeat:["dialogue:worker_female.defeat.1"]},{encounter:["dialogue:worker_double.encounter.1"],victory:["dialogue:worker_double.victory.1"]}],[U.SNOW_WORKER]:[{encounter:["dialogue:snow_worker.encounter.1"],victory:["dialogue:snow_worker.victory.1"]},{encounter:["dialogue:snow_worker_double.encounter.1"],victory:["dialogue:snow_worker_double.victory.1"]}],[U.HEX_MANIAC]:[{encounter:["dialogue:hex_maniac.encounter.1","dialogue:hex_maniac.encounter.2"],victory:["dialogue:hex_maniac.victory.1","dialogue:hex_maniac.victory.2"],defeat:["dialogue:hex_maniac.defeat.1","dialogue:hex_maniac.defeat.2"]}],[U.PSYCHIC]:[{encounter:["dialogue:psychic.encounter.1"],victory:["dialogue:psychic.victory.1"]}],[U.OFFICER]:[{encounter:["dialogue:officer.encounter.1","dialogue:officer.encounter.2"],victory:["dialogue:officer.victory.1","dialogue:officer.victory.2"]}],[U.BEAUTY]:[{encounter:["dialogue:beauty.encounter.1"],victory:["dialogue:beauty.victory.1"]}],[U.BAKER]:[{encounter:["dialogue:baker.encounter.1"],victory:["dialogue:baker.victory.1"]}],[U.BIKER]:[{encounter:["dialogue:biker.encounter.1"],victory:["dialogue:biker.victory.1"]}],[U.FIREBREATHER]:[{encounter:["dialogue:firebreather.encounter.1","dialogue:firebreather.encounter.2","dialogue:firebreather.encounter.3"],victory:["dialogue:firebreather.victory.1","dialogue:firebreather.victory.2","dialogue:firebreather.victory.3"]}],[U.SAILOR]:[{encounter:["dialogue:sailor.encounter.1","dialogue:sailor.encounter.2","dialogue:sailor.encounter.3"],victory:["dialogue:sailor.victory.1","dialogue:sailor.victory.2","dialogue:sailor.victory.3"]}],[U.ROCKET_GRUNT]:[{encounter:["dialogue:rocket_grunt.encounter.1","dialogue:rocket_grunt.encounter.2","dialogue:rocket_grunt.encounter.3","dialogue:rocket_grunt.encounter.4","dialogue:rocket_grunt.encounter.5"],victory:["dialogue:rocket_grunt.victory.1","dialogue:rocket_grunt.victory.2","dialogue:rocket_grunt.victory.3","dialogue:rocket_grunt.victory.4","dialogue:rocket_grunt.victory.5"]}],[U.ARCHER]:[{encounter:["dialogue:archer.encounter.1","dialogue:archer.encounter.2","dialogue:archer.encounter.3"],victory:["dialogue:archer.victory.1","dialogue:archer.victory.2","dialogue:archer.victory.3"]}],[U.ARIANA]:[{encounter:["dialogue:ariana.encounter.1","dialogue:ariana.encounter.2","dialogue:ariana.encounter.3"],victory:["dialogue:ariana.victory.1","dialogue:ariana.victory.2","dialogue:ariana.victory.3"]}],[U.PROTON]:[{encounter:["dialogue:proton.encounter.1","dialogue:proton.encounter.2","dialogue:proton.encounter.3"],victory:["dialogue:proton.victory.1","dialogue:proton.victory.2","dialogue:proton.victory.3"]}],[U.PETREL]:[{encounter:["dialogue:petrel.encounter.1","dialogue:petrel.encounter.2","dialogue:petrel.encounter.3"],victory:["dialogue:petrel.victory.1","dialogue:petrel.victory.2","dialogue:petrel.victory.3"]}],[U.MAGMA_GRUNT]:[{encounter:["dialogue:magma_grunt.encounter.1","dialogue:magma_grunt.encounter.2","dialogue:magma_grunt.encounter.3","dialogue:magma_grunt.encounter.4","dialogue:magma_grunt.encounter.5"],victory:["dialogue:magma_grunt.victory.1","dialogue:magma_grunt.victory.2","dialogue:magma_grunt.victory.3","dialogue:magma_grunt.victory.4","dialogue:magma_grunt.victory.5"]}],[U.TABITHA]:[{encounter:["dialogue:tabitha.encounter.1","dialogue:tabitha.encounter.2","dialogue:tabitha.encounter.3"],victory:["dialogue:tabitha.victory.1","dialogue:tabitha.victory.2","dialogue:tabitha.victory.3"]}],[U.COURTNEY]:[{encounter:["dialogue:courtney.encounter.1","dialogue:courtney.encounter.2","dialogue:courtney.encounter.3"],victory:["dialogue:courtney.victory.1","dialogue:courtney.victory.2","dialogue:courtney.victory.3"]}],[U.AQUA_GRUNT]:[{encounter:["dialogue:aqua_grunt.encounter.1","dialogue:aqua_grunt.encounter.2","dialogue:aqua_grunt.encounter.3","dialogue:aqua_grunt.encounter.4","dialogue:aqua_grunt.encounter.5"],victory:["dialogue:aqua_grunt.victory.1","dialogue:aqua_grunt.victory.2","dialogue:aqua_grunt.victory.3","dialogue:aqua_grunt.victory.4","dialogue:aqua_grunt.victory.5"]}],[U.MATT]:[{encounter:["dialogue:matt.encounter.1","dialogue:matt.encounter.2","dialogue:matt.encounter.3"],victory:["dialogue:matt.victory.1","dialogue:matt.victory.2","dialogue:matt.victory.3"]}],[U.SHELLY]:[{encounter:["dialogue:shelly.encounter.1","dialogue:shelly.encounter.2","dialogue:shelly.encounter.3"],victory:["dialogue:shelly.victory.1","dialogue:shelly.victory.2","dialogue:shelly.victory.3"]}],[U.GALACTIC_GRUNT]:[{encounter:["dialogue:galactic_grunt.encounter.1","dialogue:galactic_grunt.encounter.2","dialogue:galactic_grunt.encounter.3","dialogue:galactic_grunt.encounter.4","dialogue:galactic_grunt.encounter.5"],victory:["dialogue:galactic_grunt.victory.1","dialogue:galactic_grunt.victory.2","dialogue:galactic_grunt.victory.3","dialogue:galactic_grunt.victory.4","dialogue:galactic_grunt.victory.5"]}],[U.JUPITER]:[{encounter:["dialogue:jupiter.encounter.1","dialogue:jupiter.encounter.2","dialogue:jupiter.encounter.3"],victory:["dialogue:jupiter.victory.1","dialogue:jupiter.victory.2","dialogue:jupiter.victory.3"]}],[U.MARS]:[{encounter:["dialogue:mars.encounter.1","dialogue:mars.encounter.2","dialogue:mars.encounter.3"],victory:["dialogue:mars.victory.1","dialogue:mars.victory.2","dialogue:mars.victory.3"]}],[U.SATURN]:[{encounter:["dialogue:saturn.encounter.1","dialogue:saturn.encounter.2","dialogue:saturn.encounter.3"],victory:["dialogue:saturn.victory.1","dialogue:saturn.victory.2","dialogue:saturn.victory.3"]}],[U.PLASMA_GRUNT]:[{encounter:["dialogue:plasma_grunt.encounter.1","dialogue:plasma_grunt.encounter.2","dialogue:plasma_grunt.encounter.3","dialogue:plasma_grunt.encounter.4","dialogue:plasma_grunt.encounter.5"],victory:["dialogue:plasma_grunt.victory.1","dialogue:plasma_grunt.victory.2","dialogue:plasma_grunt.victory.3","dialogue:plasma_grunt.victory.4","dialogue:plasma_grunt.victory.5"]}],[U.ZINZOLIN]:[{encounter:["dialogue:zinzolin.encounter.1","dialogue:zinzolin.encounter.2","dialogue:zinzolin.encounter.3"],victory:["dialogue:zinzolin.victory.1","dialogue:zinzolin.victory.2","dialogue:zinzolin.victory.3"]}],[U.ROOD]:[{encounter:["dialogue:rood.encounter.1","dialogue:rood.encounter.2","dialogue:rood.encounter.3"],victory:["dialogue:rood.victory.1","dialogue:rood.victory.2","dialogue:rood.victory.3"]}],[U.FLARE_GRUNT]:[{encounter:["dialogue:flare_grunt.encounter.1","dialogue:flare_grunt.encounter.2","dialogue:flare_grunt.encounter.3","dialogue:flare_grunt.encounter.4","dialogue:flare_grunt.encounter.5"],victory:["dialogue:flare_grunt.victory.1","dialogue:flare_grunt.victory.2","dialogue:flare_grunt.victory.3","dialogue:flare_grunt.victory.4","dialogue:flare_grunt.victory.5"]}],[U.BRYONY]:[{encounter:["dialogue:bryony.encounter.1","dialogue:bryony.encounter.2","dialogue:bryony.encounter.3"],victory:["dialogue:bryony.victory.1","dialogue:bryony.victory.2","dialogue:bryony.victory.3"]}],[U.XEROSIC]:[{encounter:["dialogue:xerosic.encounter.1","dialogue:xerosic.encounter.2","dialogue:xerosic.encounter.3"],victory:["dialogue:xerosic.victory.1","dialogue:xerosic.victory.2","dialogue:xerosic.victory.3"]}],[U.AETHER_GRUNT]:[{encounter:["dialogue:aether_grunt.encounter.1","dialogue:aether_grunt.encounter.2","dialogue:aether_grunt.encounter.3","dialogue:aether_grunt.encounter.4","dialogue:aether_grunt.encounter.5"],victory:["dialogue:aether_grunt.victory.1","dialogue:aether_grunt.victory.2","dialogue:aether_grunt.victory.3","dialogue:aether_grunt.victory.4","dialogue:aether_grunt.victory.5"]}],[U.FABA]:[{encounter:["dialogue:faba.encounter.1","dialogue:faba.encounter.2","dialogue:faba.encounter.3"],victory:["dialogue:faba.victory.1","dialogue:faba.victory.2","dialogue:faba.victory.3"]}],[U.SKULL_GRUNT]:[{encounter:["dialogue:skull_grunt.encounter.1","dialogue:skull_grunt.encounter.2","dialogue:skull_grunt.encounter.3","dialogue:skull_grunt.encounter.4","dialogue:skull_grunt.encounter.5"],victory:["dialogue:skull_grunt.victory.1","dialogue:skull_grunt.victory.2","dialogue:skull_grunt.victory.3","dialogue:skull_grunt.victory.4","dialogue:skull_grunt.victory.5"]}],[U.PLUMERIA]:[{encounter:["dialogue:plumeria.encounter.1","dialogue:plumeria.encounter.2","dialogue:plumeria.encounter.3"],victory:["dialogue:plumeria.victory.1","dialogue:plumeria.victory.2","dialogue:plumeria.victory.3"]}],[U.MACRO_GRUNT]:[{encounter:["dialogue:macro_grunt.encounter.1","dialogue:macro_grunt.encounter.2","dialogue:macro_grunt.encounter.3","dialogue:macro_grunt.encounter.4","dialogue:macro_grunt.encounter.5"],victory:["dialogue:macro_grunt.victory.1","dialogue:macro_grunt.victory.2","dialogue:macro_grunt.victory.3","dialogue:macro_grunt.victory.4","dialogue:macro_grunt.victory.5"]}],[U.OLEANA]:[{encounter:["dialogue:oleana.encounter.1","dialogue:oleana.encounter.2","dialogue:oleana.encounter.3"],victory:["dialogue:oleana.victory.1","dialogue:oleana.victory.2","dialogue:oleana.victory.3"]}],[U.STAR_GRUNT]:[{encounter:["dialogue:star_grunt.encounter.1","dialogue:star_grunt.encounter.2","dialogue:star_grunt.encounter.3","dialogue:star_grunt.encounter.4","dialogue:star_grunt.encounter.5"],victory:["dialogue:star_grunt.victory.1","dialogue:star_grunt.victory.2","dialogue:star_grunt.victory.3","dialogue:star_grunt.victory.4","dialogue:star_grunt.victory.5"]}],[U.GIACOMO]:[{encounter:["dialogue:giacomo.encounter.1","dialogue:giacomo.encounter.2"],victory:["dialogue:giacomo.victory.1","dialogue:giacomo.victory.2"]}],[U.MELA]:[{encounter:["dialogue:mela.encounter.1","dialogue:mela.encounter.2"],victory:["dialogue:mela.victory.1","dialogue:mela.victory.2"]}],[U.ATTICUS]:[{encounter:["dialogue:atticus.encounter.1","dialogue:atticus.encounter.2"],victory:["dialogue:atticus.victory.1","dialogue:atticus.victory.2"]}],[U.ORTEGA]:[{encounter:["dialogue:ortega.encounter.1","dialogue:ortega.encounter.2"],victory:["dialogue:ortega.victory.1","dialogue:ortega.victory.2"]}],[U.ERI]:[{encounter:["dialogue:eri.encounter.1","dialogue:eri.encounter.2"],victory:["dialogue:eri.victory.1","dialogue:eri.victory.2"]}],[U.ROCKET_BOSS_GIOVANNI_1]:[{encounter:["dialogue:rocket_boss_giovanni_1.encounter.1"],victory:["dialogue:rocket_boss_giovanni_1.victory.1"],defeat:["dialogue:rocket_boss_giovanni_1.defeat.1"]}],[U.ROCKET_BOSS_GIOVANNI_2]:[{encounter:["dialogue:rocket_boss_giovanni_2.encounter.1"],victory:["dialogue:rocket_boss_giovanni_2.victory.1"],defeat:["dialogue:rocket_boss_giovanni_2.defeat.1"]}],[U.MAXIE]:[{encounter:["dialogue:magma_boss_maxie_1.encounter.1"],victory:["dialogue:magma_boss_maxie_1.victory.1"],defeat:["dialogue:magma_boss_maxie_1.defeat.1"]}],[U.MAXIE_2]:[{encounter:["dialogue:magma_boss_maxie_2.encounter.1"],victory:["dialogue:magma_boss_maxie_2.victory.1"],defeat:["dialogue:magma_boss_maxie_2.defeat.1"]}],[U.ARCHIE]:[{encounter:["dialogue:aqua_boss_archie_1.encounter.1"],victory:["dialogue:aqua_boss_archie_1.victory.1"],defeat:["dialogue:aqua_boss_archie_1.defeat.1"]}],[U.ARCHIE_2]:[{encounter:["dialogue:aqua_boss_archie_2.encounter.1"],victory:["dialogue:aqua_boss_archie_2.victory.1"],defeat:["dialogue:aqua_boss_archie_2.defeat.1"]}],[U.CYRUS]:[{encounter:["dialogue:galactic_boss_cyrus_1.encounter.1"],victory:["dialogue:galactic_boss_cyrus_1.victory.1"],defeat:["dialogue:galactic_boss_cyrus_1.defeat.1"]}],[U.CYRUS_2]:[{encounter:["dialogue:galactic_boss_cyrus_2.encounter.1"],victory:["dialogue:galactic_boss_cyrus_2.victory.1"],defeat:["dialogue:galactic_boss_cyrus_2.defeat.1"]}],[U.GHETSIS]:[{encounter:["dialogue:plasma_boss_ghetsis_1.encounter.1"],victory:["dialogue:plasma_boss_ghetsis_1.victory.1"],defeat:["dialogue:plasma_boss_ghetsis_1.defeat.1"]}],[U.GHETSIS_2]:[{encounter:["dialogue:plasma_boss_ghetsis_2.encounter.1"],victory:["dialogue:plasma_boss_ghetsis_2.victory.1"],defeat:["dialogue:plasma_boss_ghetsis_2.defeat.1"]}],[U.LYSANDRE]:[{encounter:["dialogue:flare_boss_lysandre_1.encounter.1"],victory:["dialogue:flare_boss_lysandre_1.victory.1"],defeat:["dialogue:flare_boss_lysandre_1.defeat.1"]}],[U.LYSANDRE_2]:[{encounter:["dialogue:flare_boss_lysandre_2.encounter.1"],victory:["dialogue:flare_boss_lysandre_2.victory.1"],defeat:["dialogue:flare_boss_lysandre_2.defeat.1"]}],[U.LUSAMINE]:[{encounter:["dialogue:aether_boss_lusamine_1.encounter.1"],victory:["dialogue:aether_boss_lusamine_1.victory.1"],defeat:["dialogue:aether_boss_lusamine_1.defeat.1"]}],[U.LUSAMINE_2]:[{encounter:["dialogue:aether_boss_lusamine_2.encounter.1"],victory:["dialogue:aether_boss_lusamine_2.victory.1"],defeat:["dialogue:aether_boss_lusamine_2.defeat.1"]}],[U.GUZMA]:[{encounter:["dialogue:skull_boss_guzma_1.encounter.1"],victory:["dialogue:skull_boss_guzma_1.victory.1"],defeat:["dialogue:skull_boss_guzma_1.defeat.1"]}],[U.GUZMA_2]:[{encounter:["dialogue:skull_boss_guzma_2.encounter.1"],victory:["dialogue:skull_boss_guzma_2.victory.1"],defeat:["dialogue:skull_boss_guzma_2.defeat.1"]}],[U.ROSE]:[{encounter:["dialogue:macro_boss_rose_1.encounter.1"],victory:["dialogue:macro_boss_rose_1.victory.1"],defeat:["dialogue:macro_boss_rose_1.defeat.1"]}],[U.ROSE_2]:[{encounter:["dialogue:macro_boss_rose_2.encounter.1"],victory:["dialogue:macro_boss_rose_2.victory.1"],defeat:["dialogue:macro_boss_rose_2.defeat.1"]}],[U.PENNY]:[{encounter:["dialogue:star_boss_penny_1.encounter.1"],victory:["dialogue:star_boss_penny_1.victory.1"],defeat:["dialogue:star_boss_penny_1.defeat.1"]}],[U.PENNY_2]:[{encounter:["dialogue:star_boss_penny_2.encounter.1"],victory:["dialogue:star_boss_penny_2.victory.1"],defeat:["dialogue:star_boss_penny_2.defeat.1"]}],[U.BUCK]:[{encounter:["dialogue:stat_trainer_buck.encounter.1","dialogue:stat_trainer_buck.encounter.2"],victory:["dialogue:stat_trainer_buck.victory.1","dialogue:stat_trainer_buck.victory.2"],defeat:["dialogue:stat_trainer_buck.defeat.1","dialogue:stat_trainer_buck.defeat.2"]}],[U.CHERYL]:[{encounter:["dialogue:stat_trainer_cheryl.encounter.1","dialogue:stat_trainer_cheryl.encounter.2"],victory:["dialogue:stat_trainer_cheryl.victory.1","dialogue:stat_trainer_cheryl.victory.2"],defeat:["dialogue:stat_trainer_cheryl.defeat.1","dialogue:stat_trainer_cheryl.defeat.2"]}],[U.MARLEY]:[{encounter:["dialogue:stat_trainer_marley.encounter.1","dialogue:stat_trainer_marley.encounter.2"],victory:["dialogue:stat_trainer_marley.victory.1","dialogue:stat_trainer_marley.victory.2"],defeat:["dialogue:stat_trainer_marley.defeat.1","dialogue:stat_trainer_marley.defeat.2"]}],[U.MIRA]:[{encounter:["dialogue:stat_trainer_mira.encounter.1","dialogue:stat_trainer_mira.encounter.2"],victory:["dialogue:stat_trainer_mira.victory.1","dialogue:stat_trainer_mira.victory.2"],defeat:["dialogue:stat_trainer_mira.defeat.1","dialogue:stat_trainer_mira.defeat.2"]}],[U.RILEY]:[{encounter:["dialogue:stat_trainer_riley.encounter.1","dialogue:stat_trainer_riley.encounter.2"],victory:["dialogue:stat_trainer_riley.victory.1","dialogue:stat_trainer_riley.victory.2"],defeat:["dialogue:stat_trainer_riley.defeat.1","dialogue:stat_trainer_riley.defeat.2"]}],[U.VICTOR]:[{encounter:["dialogue:winstrates_victor.encounter.1"],victory:["dialogue:winstrates_victor.victory.1"]}],[U.VICTORIA]:[{encounter:["dialogue:winstrates_victoria.encounter.1"],victory:["dialogue:winstrates_victoria.victory.1"]}],[U.VIVI]:[{encounter:["dialogue:winstrates_vivi.encounter.1"],victory:["dialogue:winstrates_vivi.victory.1"]}],[U.VICKY]:[{encounter:["dialogue:winstrates_vicky.encounter.1"],victory:["dialogue:winstrates_vicky.victory.1"]}],[U.VITO]:[{encounter:["dialogue:winstrates_vito.encounter.1"],victory:["dialogue:winstrates_vito.victory.1"]}],[U.BROCK]:{encounter:["dialogue:brock.encounter.1","dialogue:brock.encounter.2","dialogue:brock.encounter.3"],victory:["dialogue:brock.victory.1","dialogue:brock.victory.2","dialogue:brock.victory.3"],defeat:["dialogue:brock.defeat.1","dialogue:brock.defeat.2","dialogue:brock.defeat.3"]},[U.MISTY]:{encounter:["dialogue:misty.encounter.1","dialogue:misty.encounter.2","dialogue:misty.encounter.3"],victory:["dialogue:misty.victory.1","dialogue:misty.victory.2","dialogue:misty.victory.3"],defeat:["dialogue:misty.defeat.1","dialogue:misty.defeat.2","dialogue:misty.defeat.3"]},[U.LT_SURGE]:{encounter:["dialogue:lt_surge.encounter.1","dialogue:lt_surge.encounter.2","dialogue:lt_surge.encounter.3"],victory:["dialogue:lt_surge.victory.1","dialogue:lt_surge.victory.2","dialogue:lt_surge.victory.3"],defeat:["dialogue:lt_surge.defeat.1","dialogue:lt_surge.defeat.2","dialogue:lt_surge.defeat.3"]},[U.ERIKA]:{encounter:["dialogue:erika.encounter.1","dialogue:erika.encounter.2","dialogue:erika.encounter.3","dialogue:erika.encounter.4"],victory:["dialogue:erika.victory.1","dialogue:erika.victory.2","dialogue:erika.victory.3","dialogue:erika.victory.4"],defeat:["dialogue:erika.defeat.1","dialogue:erika.defeat.2","dialogue:erika.defeat.3","dialogue:erika.defeat.4"]},[U.JANINE]:{encounter:["dialogue:janine.encounter.1","dialogue:janine.encounter.2","dialogue:janine.encounter.3"],victory:["dialogue:janine.victory.1","dialogue:janine.victory.2","dialogue:janine.victory.3"],defeat:["dialogue:janine.defeat.1","dialogue:janine.defeat.2","dialogue:janine.defeat.3"]},[U.SABRINA]:{encounter:["dialogue:sabrina.encounter.1","dialogue:sabrina.encounter.2","dialogue:sabrina.encounter.3"],victory:["dialogue:sabrina.victory.1","dialogue:sabrina.victory.2","dialogue:sabrina.victory.3"],defeat:["dialogue:sabrina.defeat.1","dialogue:sabrina.defeat.2","dialogue:sabrina.defeat.3"]},[U.BLAINE]:{encounter:["dialogue:blaine.encounter.1","dialogue:blaine.encounter.2","dialogue:blaine.encounter.3"],victory:["dialogue:blaine.victory.1","dialogue:blaine.victory.2","dialogue:blaine.victory.3"],defeat:["dialogue:blaine.defeat.1","dialogue:blaine.defeat.2","dialogue:blaine.defeat.3"]},[U.GIOVANNI]:{encounter:["dialogue:giovanni.encounter.1","dialogue:giovanni.encounter.2","dialogue:giovanni.encounter.3"],victory:["dialogue:giovanni.victory.1","dialogue:giovanni.victory.2","dialogue:giovanni.victory.3"],defeat:["dialogue:giovanni.defeat.1","dialogue:giovanni.defeat.2","dialogue:giovanni.defeat.3"]},[U.ROXANNE]:{encounter:["dialogue:roxanne.encounter.1","dialogue:roxanne.encounter.2","dialogue:roxanne.encounter.3"],victory:["dialogue:roxanne.victory.1","dialogue:roxanne.victory.2","dialogue:roxanne.victory.3"],defeat:["dialogue:roxanne.defeat.1","dialogue:roxanne.defeat.2","dialogue:roxanne.defeat.3"]},[U.BRAWLY]:{encounter:["dialogue:brawly.encounter.1","dialogue:brawly.encounter.2","dialogue:brawly.encounter.3"],victory:["dialogue:brawly.victory.1","dialogue:brawly.victory.2","dialogue:brawly.victory.3"],defeat:["dialogue:brawly.defeat.1","dialogue:brawly.defeat.2","dialogue:brawly.defeat.3"]},[U.WATTSON]:{encounter:["dialogue:wattson.encounter.1","dialogue:wattson.encounter.2","dialogue:wattson.encounter.3"],victory:["dialogue:wattson.victory.1","dialogue:wattson.victory.2","dialogue:wattson.victory.3"],defeat:["dialogue:wattson.defeat.1","dialogue:wattson.defeat.2","dialogue:wattson.defeat.3"]},[U.FLANNERY]:{encounter:["dialogue:flannery.encounter.1","dialogue:flannery.encounter.2","dialogue:flannery.encounter.3"],victory:["dialogue:flannery.victory.1","dialogue:flannery.victory.2","dialogue:flannery.victory.3"],defeat:["dialogue:flannery.defeat.1","dialogue:flannery.defeat.2","dialogue:flannery.defeat.3"]},[U.NORMAN]:{encounter:["dialogue:norman.encounter.1","dialogue:norman.encounter.2","dialogue:norman.encounter.3"],victory:["dialogue:norman.victory.1","dialogue:norman.victory.2","dialogue:norman.victory.3"],defeat:["dialogue:norman.defeat.1","dialogue:norman.defeat.2","dialogue:norman.defeat.3"]},[U.WINONA]:{encounter:["dialogue:winona.encounter.1","dialogue:winona.encounter.2","dialogue:winona.encounter.3"],victory:["dialogue:winona.victory.1","dialogue:winona.victory.2","dialogue:winona.victory.3"],defeat:["dialogue:winona.defeat.1","dialogue:winona.defeat.2","dialogue:winona.defeat.3"]},[U.TATE]:{encounter:["dialogue:tate.encounter.1","dialogue:tate.encounter.2","dialogue:tate.encounter.3"],victory:["dialogue:tate.victory.1","dialogue:tate.victory.2","dialogue:tate.victory.3"],defeat:["dialogue:tate.defeat.1","dialogue:tate.defeat.2","dialogue:tate.defeat.3"]},[U.LIZA]:{encounter:["dialogue:liza.encounter.1","dialogue:liza.encounter.2","dialogue:liza.encounter.3"],victory:["dialogue:liza.victory.1","dialogue:liza.victory.2","dialogue:liza.victory.3"],defeat:["dialogue:liza.defeat.1","dialogue:liza.defeat.2","dialogue:liza.defeat.3"]},[U.JUAN]:{encounter:["dialogue:juan.encounter.1","dialogue:juan.encounter.2","dialogue:juan.encounter.3","dialogue:juan.encounter.4"],victory:["dialogue:juan.victory.1","dialogue:juan.victory.2","dialogue:juan.victory.3","dialogue:juan.victory.4"],defeat:["dialogue:juan.defeat.1","dialogue:juan.defeat.2","dialogue:juan.defeat.3","dialogue:juan.defeat.4"]},[U.CRASHER_WAKE]:{encounter:["dialogue:crasher_wake.encounter.1","dialogue:crasher_wake.encounter.2","dialogue:crasher_wake.encounter.3"],victory:["dialogue:crasher_wake.victory.1","dialogue:crasher_wake.victory.2","dialogue:crasher_wake.victory.3"],defeat:["dialogue:crasher_wake.defeat.1","dialogue:crasher_wake.defeat.2","dialogue:crasher_wake.defeat.3"]},[U.FALKNER]:{encounter:["dialogue:falkner.encounter.1","dialogue:falkner.encounter.2","dialogue:falkner.encounter.3"],victory:["dialogue:falkner.victory.1","dialogue:falkner.victory.2","dialogue:falkner.victory.3"],defeat:["dialogue:falkner.defeat.1","dialogue:falkner.defeat.2","dialogue:falkner.defeat.3"]},[U.NESSA]:{encounter:["dialogue:nessa.encounter.1","dialogue:nessa.encounter.2","dialogue:nessa.encounter.3"],victory:["dialogue:nessa.victory.1","dialogue:nessa.victory.2","dialogue:nessa.victory.3"],defeat:["dialogue:nessa.defeat.1","dialogue:nessa.defeat.2","dialogue:nessa.defeat.3"]},[U.MELONY]:{encounter:["dialogue:melony.encounter.1","dialogue:melony.encounter.2","dialogue:melony.encounter.3"],victory:["dialogue:melony.victory.1","dialogue:melony.victory.2","dialogue:melony.victory.3"],defeat:["dialogue:melony.defeat.1","dialogue:melony.defeat.2","dialogue:melony.defeat.3"]},[U.MARLON]:{encounter:["dialogue:marlon.encounter.1","dialogue:marlon.encounter.2","dialogue:marlon.encounter.3"],victory:["dialogue:marlon.victory.1","dialogue:marlon.victory.2","dialogue:marlon.victory.3"],defeat:["dialogue:marlon.defeat.1","dialogue:marlon.defeat.2","dialogue:marlon.defeat.3"]},[U.SHAUNTAL]:{encounter:["dialogue:shauntal.encounter.1","dialogue:shauntal.encounter.2","dialogue:shauntal.encounter.3"],victory:["dialogue:shauntal.victory.1","dialogue:shauntal.victory.2","dialogue:shauntal.victory.3"],defeat:["dialogue:shauntal.defeat.1","dialogue:shauntal.defeat.2","dialogue:shauntal.defeat.3"]},[U.MARSHAL]:{encounter:["dialogue:marshal.encounter.1","dialogue:marshal.encounter.2","dialogue:marshal.encounter.3"],victory:["dialogue:marshal.victory.1","dialogue:marshal.victory.2","dialogue:marshal.victory.3"],defeat:["dialogue:marshal.defeat.1","dialogue:marshal.defeat.2","dialogue:marshal.defeat.3"]},[U.CHEREN]:{encounter:["dialogue:cheren.encounter.1","dialogue:cheren.encounter.2","dialogue:cheren.encounter.3"],victory:["dialogue:cheren.victory.1","dialogue:cheren.victory.2","dialogue:cheren.victory.3"],defeat:["dialogue:cheren.defeat.1","dialogue:cheren.defeat.2","dialogue:cheren.defeat.3"]},[U.CHILI]:{encounter:["dialogue:chili.encounter.1","dialogue:chili.encounter.2","dialogue:chili.encounter.3"],victory:["dialogue:chili.victory.1","dialogue:chili.victory.2","dialogue:chili.victory.3"],defeat:["dialogue:chili.defeat.1","dialogue:chili.defeat.2","dialogue:chili.defeat.3"]},[U.CILAN]:{encounter:["dialogue:cilan.encounter.1","dialogue:cilan.encounter.2","dialogue:cilan.encounter.3"],victory:["dialogue:cilan.victory.1","dialogue:cilan.victory.2","dialogue:cilan.victory.3"],defeat:["dialogue:cilan.defeat.1","dialogue:cilan.defeat.2","dialogue:cilan.defeat.3"]},[U.ROARK]:{encounter:["dialogue:roark.encounter.1","dialogue:roark.encounter.2","dialogue:roark.encounter.3","dialogue:roark.encounter.4"],victory:["dialogue:roark.victory.1","dialogue:roark.victory.2","dialogue:roark.victory.3","dialogue:roark.victory.4"],defeat:["dialogue:roark.defeat.1","dialogue:roark.defeat.2","dialogue:roark.defeat.3"]},[U.MORTY]:{encounter:["dialogue:morty.encounter.1","dialogue:morty.encounter.2","dialogue:morty.encounter.3","dialogue:morty.encounter.4","dialogue:morty.encounter.5","dialogue:morty.encounter.6"],victory:["dialogue:morty.victory.1","dialogue:morty.victory.2","dialogue:morty.victory.3","dialogue:morty.victory.4","dialogue:morty.victory.5","dialogue:morty.victory.6"],defeat:["dialogue:morty.defeat.1","dialogue:morty.defeat.2","dialogue:morty.defeat.3","dialogue:morty.defeat.4","dialogue:morty.defeat.5","dialogue:morty.defeat.6"]},[U.CRISPIN]:{encounter:["dialogue:crispin.encounter.1","dialogue:crispin.encounter.2"],victory:["dialogue:crispin.victory.1","dialogue:crispin.victory.2"],defeat:["dialogue:crispin.defeat.1","dialogue:crispin.defeat.2"]},[U.AMARYS]:{encounter:["dialogue:amarys.encounter.1"],victory:["dialogue:amarys.victory.1"],defeat:["dialogue:amarys.defeat.1"]},[U.LACEY]:{encounter:["dialogue:lacey.encounter.1"],victory:["dialogue:lacey.victory.1"],defeat:["dialogue:lacey.defeat.1"]},[U.DRAYTON]:{encounter:["dialogue:drayton.encounter.1"],victory:["dialogue:drayton.victory.1"],defeat:["dialogue:drayton.defeat.1"]},[U.RAMOS]:{encounter:["dialogue:ramos.encounter.1"],victory:["dialogue:ramos.victory.1"],defeat:["dialogue:ramos.defeat.1"]},[U.VIOLA]:{encounter:["dialogue:viola.encounter.1","dialogue:viola.encounter.2"],victory:["dialogue:viola.victory.1","dialogue:viola.victory.2"],defeat:["dialogue:viola.defeat.1","dialogue:viola.defeat.2"]},[U.CANDICE]:{encounter:["dialogue:candice.encounter.1","dialogue:candice.encounter.2"],victory:["dialogue:candice.victory.1","dialogue:candice.victory.2"],defeat:["dialogue:candice.defeat.1","dialogue:candice.defeat.2"]},[U.GARDENIA]:{encounter:["dialogue:gardenia.encounter.1"],victory:["dialogue:gardenia.victory.1"],defeat:["dialogue:gardenia.defeat.1"]},[U.AARON]:{encounter:["dialogue:aaron.encounter.1"],victory:["dialogue:aaron.victory.1"],defeat:["dialogue:aaron.defeat.1"]},[U.CRESS]:{encounter:["dialogue:cress.encounter.1"],victory:["dialogue:cress.victory.1"],defeat:["dialogue:cress.defeat.1"]},[U.ALLISTER]:{encounter:["dialogue:allister.encounter.1"],victory:["dialogue:allister.victory.1"],defeat:["dialogue:allister.defeat.1"]},[U.CLAY]:{encounter:["dialogue:clay.encounter.1"],victory:["dialogue:clay.victory.1"],defeat:["dialogue:clay.defeat.1"]},[U.KOFU]:{encounter:["dialogue:kofu.encounter.1"],victory:["dialogue:kofu.victory.1"],defeat:["dialogue:kofu.defeat.1"]},[U.TULIP]:{encounter:["dialogue:tulip.encounter.1"],victory:["dialogue:tulip.victory.1"],defeat:["dialogue:tulip.defeat.1"]},[U.SIDNEY]:{encounter:["dialogue:sidney.encounter.1"],victory:["dialogue:sidney.victory.1"],defeat:["dialogue:sidney.defeat.1"]},[U.PHOEBE]:{encounter:["dialogue:phoebe.encounter.1"],victory:["dialogue:phoebe.victory.1"],defeat:["dialogue:phoebe.defeat.1"]},[U.GLACIA]:{encounter:["dialogue:glacia.encounter.1"],victory:["dialogue:glacia.victory.1"],defeat:["dialogue:glacia.defeat.1"]},[U.DRAKE]:{encounter:["dialogue:drake.encounter.1"],victory:["dialogue:drake.victory.1"],defeat:["dialogue:drake.defeat.1"]},[U.WALLACE]:{encounter:["dialogue:wallace.encounter.1"],victory:["dialogue:wallace.victory.1"],defeat:["dialogue:wallace.defeat.1"]},[U.LORELEI]:{encounter:["dialogue:lorelei.encounter.1"],victory:["dialogue:lorelei.victory.1"],defeat:["dialogue:lorelei.defeat.1"]},[U.WILL]:{encounter:["dialogue:will.encounter.1"],victory:["dialogue:will.victory.1"],defeat:["dialogue:will.defeat.1"]},[U.MALVA]:{encounter:["dialogue:malva.encounter.1"],victory:["dialogue:malva.victory.1"],defeat:["dialogue:malva.defeat.1"]},[U.HALA]:{encounter:["dialogue:hala.encounter.1"],victory:["dialogue:hala.victory.1"],defeat:["dialogue:hala.defeat.1"]},[U.MOLAYNE]:{encounter:["dialogue:molayne.encounter.1"],victory:["dialogue:molayne.victory.1"],defeat:["dialogue:molayne.defeat.1"]},[U.RIKA]:{encounter:["dialogue:rika.encounter.1"],victory:["dialogue:rika.victory.1"],defeat:["dialogue:rika.defeat.1"]},[U.BRUNO]:{encounter:["dialogue:bruno.encounter.1"],victory:["dialogue:bruno.victory.1"],defeat:["dialogue:bruno.defeat.1"]},[U.BUGSY]:{encounter:["dialogue:bugsy.encounter.1"],victory:["dialogue:bugsy.victory.1"],defeat:["dialogue:bugsy.defeat.1"]},[U.KOGA]:{encounter:["dialogue:koga.encounter.1"],victory:["dialogue:koga.victory.1"],defeat:["dialogue:koga.defeat.1"]},[U.BERTHA]:{encounter:["dialogue:bertha.encounter.1"],victory:["dialogue:bertha.victory.1"],defeat:["dialogue:bertha.defeat.1"]},[U.LENORA]:{encounter:["dialogue:lenora.encounter.1"],victory:["dialogue:lenora.victory.1"],defeat:["dialogue:lenora.defeat.1"]},[U.SIEBOLD]:{encounter:["dialogue:siebold.encounter.1"],victory:["dialogue:siebold.victory.1"],defeat:["dialogue:siebold.defeat.1"]},[U.ROXIE]:{encounter:["dialogue:roxie.encounter.1"],victory:["dialogue:roxie.victory.1"],defeat:["dialogue:roxie.defeat.1"]},[U.OLIVIA]:{encounter:["dialogue:olivia.encounter.1"],victory:["dialogue:olivia.victory.1"],defeat:["dialogue:olivia.defeat.1"]},[U.POPPY]:{encounter:["dialogue:poppy.encounter.1"],victory:["dialogue:poppy.victory.1"],defeat:["dialogue:poppy.defeat.1"]},[U.AGATHA]:{encounter:["dialogue:agatha.encounter.1"],victory:["dialogue:agatha.victory.1"],defeat:["dialogue:agatha.defeat.1"]},[U.FLINT]:{encounter:["dialogue:flint.encounter.1"],victory:["dialogue:flint.victory.1"],defeat:["dialogue:flint.defeat.1"]},[U.GRIMSLEY]:{encounter:["dialogue:grimsley.encounter.1"],victory:["dialogue:grimsley.victory.1"],defeat:["dialogue:grimsley.defeat.1"]},[U.CAITLIN]:{encounter:["dialogue:caitlin.encounter.1"],victory:["dialogue:caitlin.victory.1"],defeat:["dialogue:caitlin.defeat.1"]},[U.DIANTHA]:{encounter:["dialogue:diantha.encounter.1"],victory:["dialogue:diantha.victory.1"],defeat:["dialogue:diantha.defeat.1"]},[U.WIKSTROM]:{encounter:["dialogue:wikstrom.encounter.1"],victory:["dialogue:wikstrom.victory.1"],defeat:["dialogue:wikstrom.defeat.1"]},[U.ACEROLA]:{encounter:["dialogue:acerola.encounter.1"],victory:["dialogue:acerola.victory.1"],defeat:["dialogue:acerola.defeat.1"]},[U.LARRY_ELITE]:{encounter:["dialogue:larry_elite.encounter.1"],victory:["dialogue:larry_elite.victory.1"],defeat:["dialogue:larry_elite.defeat.1"]},[U.LANCE]:{encounter:["dialogue:lance.encounter.1","dialogue:lance.encounter.2"],victory:["dialogue:lance.victory.1","dialogue:lance.victory.2"],defeat:["dialogue:lance.defeat.1","dialogue:lance.defeat.2"]},[U.KAREN]:{encounter:["dialogue:karen.encounter.1","dialogue:karen.encounter.2","dialogue:karen.encounter.3"],victory:["dialogue:karen.victory.1","dialogue:karen.victory.2","dialogue:karen.victory.3"],defeat:["dialogue:karen.defeat.1","dialogue:karen.defeat.2","dialogue:karen.defeat.3"]},[U.MILO]:{encounter:["dialogue:milo.encounter.1"],victory:["dialogue:milo.victory.1"],defeat:["dialogue:milo.defeat.1"]},[U.LUCIAN]:{encounter:["dialogue:lucian.encounter.1"],victory:["dialogue:lucian.victory.1"],defeat:["dialogue:lucian.defeat.1"]},[U.DRASNA]:{encounter:["dialogue:drasna.encounter.1"],victory:["dialogue:drasna.victory.1"],defeat:["dialogue:drasna.defeat.1"]},[U.KAHILI]:{encounter:["dialogue:kahili.encounter.1"],victory:["dialogue:kahili.victory.1"],defeat:["dialogue:kahili.defeat.1"]},[U.HASSEL]:{encounter:["dialogue:hassel.encounter.1"],victory:["dialogue:hassel.victory.1"],defeat:["dialogue:hassel.defeat.1"]},[U.BLUE]:{encounter:["dialogue:blue.encounter.1"],victory:["dialogue:blue.victory.1"],defeat:["dialogue:blue.defeat.1"]},[U.PIERS]:{encounter:["dialogue:piers.encounter.1"],victory:["dialogue:piers.victory.1"],defeat:["dialogue:piers.defeat.1"]},[U.RED]:{encounter:["dialogue:red.encounter.1"],victory:["dialogue:red.victory.1"],defeat:["dialogue:red.defeat.1"]},[U.JASMINE]:{encounter:["dialogue:jasmine.encounter.1"],victory:["dialogue:jasmine.victory.1"],defeat:["dialogue:jasmine.defeat.1"]},[U.LANCE_CHAMPION]:{encounter:["dialogue:lance_champion.encounter.1"],victory:["dialogue:lance_champion.victory.1"],defeat:["dialogue:lance_champion.defeat.1"]},[U.STEVEN]:{encounter:["dialogue:steven.encounter.1"],victory:["dialogue:steven.victory.1"],defeat:["dialogue:steven.defeat.1"]},[U.CYNTHIA]:{encounter:["dialogue:cynthia.encounter.1"],victory:["dialogue:cynthia.victory.1"],defeat:["dialogue:cynthia.defeat.1"]},[U.IRIS]:{encounter:["dialogue:iris.encounter.1"],victory:["dialogue:iris.victory.1"],defeat:["dialogue:iris.defeat.1"]},[U.HAU]:{encounter:["dialogue:hau.encounter.1"],victory:["dialogue:hau.victory.1"],defeat:["dialogue:hau.defeat.1"]},[U.GEETA]:{encounter:["dialogue:geeta.encounter.1"],victory:["dialogue:geeta.victory.1"],defeat:["dialogue:geeta.defeat.1"]},[U.NEMONA]:{encounter:["dialogue:nemona.encounter.1"],victory:["dialogue:nemona.victory.1"],defeat:["dialogue:nemona.defeat.1"]},[U.LEON]:{encounter:["dialogue:leon.encounter.1"],victory:["dialogue:leon.victory.1"],defeat:["dialogue:leon.defeat.1"]},[U.WHITNEY]:{encounter:["dialogue:whitney.encounter.1"],victory:["dialogue:whitney.victory.1"],defeat:["dialogue:whitney.defeat.1"]},[U.CHUCK]:{encounter:["dialogue:chuck.encounter.1"],victory:["dialogue:chuck.victory.1"],defeat:["dialogue:chuck.defeat.1"]},[U.KATY]:{encounter:["dialogue:katy.encounter.1"],victory:["dialogue:katy.victory.1"],defeat:["dialogue:katy.defeat.1"]},[U.PRYCE]:{encounter:["dialogue:pryce.encounter.1"],victory:["dialogue:pryce.victory.1"],defeat:["dialogue:pryce.defeat.1"]},[U.CLAIR]:{encounter:["dialogue:clair.encounter.1"],victory:["dialogue:clair.victory.1"],defeat:["dialogue:clair.defeat.1"]},[U.MAYLENE]:{encounter:["dialogue:maylene.encounter.1"],victory:["dialogue:maylene.victory.1"],defeat:["dialogue:maylene.defeat.1"]},[U.FANTINA]:{encounter:["dialogue:fantina.encounter.1"],victory:["dialogue:fantina.victory.1"],defeat:["dialogue:fantina.defeat.1"]},[U.BYRON]:{encounter:["dialogue:byron.encounter.1"],victory:["dialogue:byron.victory.1"],defeat:["dialogue:byron.defeat.1"]},[U.OLYMPIA]:{encounter:["dialogue:olympia.encounter.1"],victory:["dialogue:olympia.victory.1"],defeat:["dialogue:olympia.defeat.1"]},[U.VOLKNER]:{encounter:["dialogue:volkner.encounter.1"],victory:["dialogue:volkner.victory.1"],defeat:["dialogue:volkner.defeat.1"]},[U.BURGH]:{encounter:["dialogue:burgh.encounter.1","dialogue:burgh.encounter.2"],victory:["dialogue:burgh.victory.1","dialogue:burgh.victory.2"],defeat:["dialogue:burgh.defeat.1","dialogue:burgh.defeat.2"]},[U.ELESA]:{encounter:["dialogue:elesa.encounter.1"],victory:["dialogue:elesa.victory.1"],defeat:["dialogue:elesa.defeat.1"]},[U.SKYLA]:{encounter:["dialogue:skyla.encounter.1"],victory:["dialogue:skyla.victory.1"],defeat:["dialogue:skyla.defeat.1"]},[U.BRYCEN]:{encounter:["dialogue:brycen.encounter.1"],victory:["dialogue:brycen.victory.1"],defeat:["dialogue:brycen.defeat.1"]},[U.DRAYDEN]:{encounter:["dialogue:drayden.encounter.1"],victory:["dialogue:drayden.victory.1"],defeat:["dialogue:drayden.defeat.1"]},[U.GRANT]:{encounter:["dialogue:grant.encounter.1"],victory:["dialogue:grant.victory.1"],defeat:["dialogue:grant.defeat.1"]},[U.KORRINA]:{encounter:["dialogue:korrina.encounter.1"],victory:["dialogue:korrina.victory.1"],defeat:["dialogue:korrina.defeat.1"]},[U.CLEMONT]:{encounter:["dialogue:clemont.encounter.1"],victory:["dialogue:clemont.victory.1"],defeat:["dialogue:clemont.defeat.1"]},[U.VALERIE]:{encounter:["dialogue:valerie.encounter.1"],victory:["dialogue:valerie.victory.1"],defeat:["dialogue:valerie.defeat.1"]},[U.WULFRIC]:{encounter:["dialogue:wulfric.encounter.1"],victory:["dialogue:wulfric.victory.1"],defeat:["dialogue:wulfric.defeat.1"]},[U.KABU]:{encounter:["dialogue:kabu.encounter.1"],victory:["dialogue:kabu.victory.1"],defeat:["dialogue:kabu.defeat.1"]},[U.BEA]:{encounter:["dialogue:bea.encounter.1"],victory:["dialogue:bea.victory.1"],defeat:["dialogue:bea.defeat.1"]},[U.OPAL]:{encounter:["dialogue:opal.encounter.1"],victory:["dialogue:opal.victory.1"],defeat:["dialogue:opal.defeat.1"]},[U.BEDE]:{encounter:["dialogue:bede.encounter.1"],victory:["dialogue:bede.victory.1"],defeat:["dialogue:bede.defeat.1"]},[U.GORDIE]:{encounter:["dialogue:gordie.encounter.1"],victory:["dialogue:gordie.victory.1"],defeat:["dialogue:gordie.defeat.1"]},[U.MARNIE]:{encounter:["dialogue:marnie.encounter.1"],victory:["dialogue:marnie.victory.1"],defeat:["dialogue:marnie.defeat.1"]},[U.RAIHAN]:{encounter:["dialogue:raihan.encounter.1"],victory:["dialogue:raihan.victory.1"],defeat:["dialogue:raihan.defeat.1"]},[U.BRASSIUS]:{encounter:["dialogue:brassius.encounter.1"],victory:["dialogue:brassius.victory.1"],defeat:["dialogue:brassius.defeat.1"]},[U.IONO]:{encounter:["dialogue:iono.encounter.1"],victory:["dialogue:iono.victory.1"],defeat:["dialogue:iono.defeat.1"]},[U.LARRY]:{encounter:["dialogue:larry.encounter.1"],victory:["dialogue:larry.victory.1"],defeat:["dialogue:larry.defeat.1"]},[U.RYME]:{encounter:["dialogue:ryme.encounter.1"],victory:["dialogue:ryme.victory.1"],defeat:["dialogue:ryme.defeat.1"]},[U.GRUSHA]:{encounter:["dialogue:grusha.encounter.1"],victory:["dialogue:grusha.victory.1"],defeat:["dialogue:grusha.defeat.1"]},[U.MARNIE_ELITE]:{encounter:["dialogue:marnie_elite.encounter.1","dialogue:marnie_elite.encounter.2"],victory:["dialogue:marnie_elite.victory.1","dialogue:marnie_elite.victory.2"],defeat:["dialogue:marnie_elite.defeat.1","dialogue:marnie_elite.defeat.2"]},[U.NESSA_ELITE]:{encounter:["dialogue:nessa_elite.encounter.1","dialogue:nessa_elite.encounter.2"],victory:["dialogue:nessa_elite.victory.1","dialogue:nessa_elite.victory.2"],defeat:["dialogue:nessa_elite.defeat.1","dialogue:nessa_elite.defeat.2"]},[U.BEA_ELITE]:{encounter:["dialogue:bea_elite.encounter.1","dialogue:bea_elite.encounter.2"],victory:["dialogue:bea_elite.victory.1","dialogue:bea_elite.victory.2"],defeat:["dialogue:bea_elite.defeat.1","dialogue:bea_elite.defeat.2"]},[U.ALLISTER_ELITE]:{encounter:["dialogue:allister_elite.encounter.1","dialogue:allister_elite.encounter.2"],victory:["dialogue:allister_elite.victory.1","dialogue:allister_elite.victory.2"],defeat:["dialogue:allister_elite.defeat.1","dialogue:allister_elite.defeat.2"]},[U.RAIHAN_ELITE]:{encounter:["dialogue:raihan_elite.encounter.1","dialogue:raihan_elite.encounter.2"],victory:["dialogue:raihan_elite.victory.1","dialogue:raihan_elite.victory.2"],defeat:["dialogue:raihan_elite.defeat.1","dialogue:raihan_elite.defeat.2"]},[U.ALDER]:{encounter:["dialogue:alder.encounter.1"],victory:["dialogue:alder.victory.1"],defeat:["dialogue:alder.defeat.1"]},[U.KIERAN]:{encounter:["dialogue:kieran.encounter.1"],victory:["dialogue:kieran.victory.1"],defeat:["dialogue:kieran.defeat.1"]},[U.RIVAL]:[{encounter:["dialogue:rival.encounter.1"],victory:["dialogue:rival.victory.1"]},{encounter:["dialogue:rival_female.encounter.1"],victory:["dialogue:rival_female.victory.1"]}],[U.RIVAL_2]:[{encounter:["dialogue:rival_2.encounter.1"],victory:["dialogue:rival_2.victory.1"]},{encounter:["dialogue:rival_2_female.encounter.1"],victory:["dialogue:rival_2_female.victory.1"],defeat:["dialogue:rival_2_female.defeat.1"]}],[U.RIVAL_3]:[{encounter:["dialogue:rival_3.encounter.1"],victory:["dialogue:rival_3.victory.1"]},{encounter:["dialogue:rival_3_female.encounter.1"],victory:["dialogue:rival_3_female.victory.1"],defeat:["dialogue:rival_3_female.defeat.1"]}],[U.RIVAL_4]:[{encounter:["dialogue:rival_4.encounter.1"],victory:["dialogue:rival_4.victory.1"]},{encounter:["dialogue:rival_4_female.encounter.1"],victory:["dialogue:rival_4_female.victory.1"],defeat:["dialogue:rival_4_female.defeat.1"]}],[U.RIVAL_5]:[{encounter:["dialogue:rival_5.encounter.1"],victory:["dialogue:rival_5.victory.1"]},{encounter:["dialogue:rival_5_female.encounter.1"],victory:["dialogue:rival_5_female.victory.1"],defeat:["dialogue:rival_5_female.defeat.1"]}],[U.RIVAL_6]:[{encounter:["dialogue:rival_6.encounter.1"],victory:["dialogue:rival_6.victory.1"]},{encounter:["dialogue:rival_6_female.encounter.1"],victory:["dialogue:rival_6_female.victory.1"]}]},El={blue_red_double:{encounter:["doubleBattleDialogue:blue_red_double.encounter.1"],victory:["doubleBattleDialogue:blue_red_double.victory.1"]},red_blue_double:{encounter:["doubleBattleDialogue:red_blue_double.encounter.1"],victory:["doubleBattleDialogue:red_blue_double.victory.1"]},tate_liza_double:{encounter:["doubleBattleDialogue:tate_liza_double.encounter.1"],victory:["doubleBattleDialogue:tate_liza_double.victory.1"]},liza_tate_double:{encounter:["doubleBattleDialogue:liza_tate_double.encounter.1"],victory:["doubleBattleDialogue:liza_tate_double.victory.1"]},wallace_steven_double:{encounter:["doubleBattleDialogue:wallace_steven_double.encounter.1"],victory:["doubleBattleDialogue:wallace_steven_double.victory.1"]},steven_wallace_double:{encounter:["doubleBattleDialogue:steven_wallace_double.encounter.1"],victory:["doubleBattleDialogue:steven_wallace_double.victory.1"]},alder_iris_double:{encounter:["doubleBattleDialogue:alder_iris_double.encounter.1"],victory:["doubleBattleDialogue:alder_iris_double.victory.1"]},iris_alder_double:{encounter:["doubleBattleDialogue:iris_alder_double.encounter.1"],victory:["doubleBattleDialogue:iris_alder_double.victory.1"]},marnie_piers_double:{encounter:["doubleBattleDialogue:marnie_piers_double.encounter.1"],victory:["doubleBattleDialogue:marnie_piers_double.victory.1"]},piers_marnie_double:{encounter:["doubleBattleDialogue:piers_marnie_double.encounter.1"],victory:["doubleBattleDialogue:piers_marnie_double.victory.1"]}},a8={[SE.FINAL_BOSS]:{encounter:"battleSpecDialogue:encounter",firstStageWin:"battleSpecDialogue:firstStageWin",secondStageWin:"battleSpecDialogue:secondStageWin"}};function KM(E){const A=/@c\{(.*?)\}/.exec(E);return A?A[1]:"neutral"}N(KM,"getCharVariantFromDialogue");function n9(){const E=Object.keys(Cb).map(A=>parseInt(A));for(const A of E){const s=Cb[A],R=["encounter","victory","defeat"];for(const a of R)Array.isArray(s)?(s[0][a]&&(QA[A][`${a}Messages`]=s[0][a]),s.length>1&&(QA[A][`female${a.slice(0,1).toUpperCase()}${a.slice(1)}Messages`]=s[1][a])):QA[A][`${a}Messages`]=s[a]}}N(n9,"initTrainerTypeDialogue");var Y1=(E=>(E[E.SWITCH=0]="SWITCH",E[E.SET=1]="SET",E))(Y1||{});const Pg=class Pg extends dE{executeForAll(A){n.getField(!0).filter(R=>R.summonData).forEach(R=>A(R))}};N(Pg,"FieldPhase");let qO=Pg;const Gg=class Gg extends qO{constructor(A,s){super(),this.partyMemberIndex=A,this.fieldIndex=A<n.currentBattle.getBattlerCount()?A:-1,this.player=s}getParty(){return this.player?n.getPlayerParty():n.getEnemyParty()}getPokemon(){return this.getParty()[this.partyMemberIndex]}};N(Gg,"PartyMemberPokemonPhase");let CC=Gg;const cg=class cg extends qO{constructor(A){super(),A===void 0&&(A=n.getField().find(s=>s==null?void 0:s.isActive()).getBattlerIndex()),this.battlerIndex=A,this.player=A<2,this.fieldIndex=A%2}getPokemon(){return this.battlerIndex>gt.ENEMY_2?n.getPokemonById(this.battlerIndex):n.getField()[this.battlerIndex]}};N(cg,"PokemonPhase");let Ts=cg;const hg=class hg extends Ts{constructor(A){super(A)}start(){var s;super.start();const A=this.getPokemon();((s=A.status)==null?void 0:s.effect)===ne.TOXIC&&(A.status.toxicTurnCount=0),n.arena.applyTags(nO,!1,A),n.currentBattle.isBattleMysteryEncounter()&&A.findTags(R=>R instanceof lu).length>0&&A.lapseTag(y.MYSTERY_ENCOUNTER_POST_SUMMON),dJ(fE,A).then(()=>{(A.isPlayer()?n.getPlayerField():n.getEnemyField()).forEach(a=>ut(kr,a,null,!1)),this.end()})}};N(hg,"PostSummonPhase");let Ei=hg;const Hg=class Hg extends Ts{constructor(A){super(A)}start(){super.start(),this.getPokemon().sparkle(),n.time.delayedCall(1e3,()=>this.end())}};N(Hg,"ShinySparklePhase");let eS=Hg;var lE=(E=>(E[E.DEFAULT=0]="DEFAULT",E[E.TRAINER_BATTLE=1]="TRAINER_BATTLE",E[E.WILD_BATTLE=2]="WILD_BATTLE",E[E.BOSS_BATTLE=3]="BOSS_BATTLE",E[E.NO_BATTLE=4]="NO_BATTLE",E))(lE||{});const dg=class dg extends CC{constructor(A,s=!0,R=!1){super(A,s),this.loaded=R}start(){super.start(),this.preSummon()}preSummon(){var s,R;const A=this.getPokemon();if(!A.isAllowedInBattle()||this.player&&!this.getParty().some(a=>a.id===A.id)){console.warn("The Pokemon about to be sent out is fainted or illegal under a challenge. Attempting to resolve..."),A.isOnField()&&A.leaveField();const a=this.getParty(),i=a.findIndex((r,L)=>L>this.partyMemberIndex&&r.isAllowedInBattle());if(i===-1){console.error(`Party Details:
`,a),console.error("All available Pokemon were fainted or illegal!"),n.clearPhaseQueue(),n.unshiftPhase(new GO),this.end();return}[a[this.partyMemberIndex],a[i]]=[a[i],a[this.partyMemberIndex]],console.warn("Swapped %s %O with %s %O",te(A),A,te(a[0]),a[0])}if(this.player)n.ui.showText(u.t("battle:playerGo",{pokemonName:te(this.getPokemon())})),this.player&&n.pbTray.hide(),n.trainer.setTexture(`trainer_${n.gameData.gender===Vt.FEMALE?"f":"m"}_back_pb`),n.time.delayedCall(562,()=>{n.trainer.setFrame("2"),n.time.delayedCall(64,()=>{n.trainer.setFrame("3")})}),n.tweens.add({targets:n.trainer,x:-36,duration:1e3,onComplete:N(()=>n.trainer.setVisible(!1),"onComplete")}),n.time.delayedCall(750,()=>this.summon());else if(n.currentBattle.battleType===Ut.TRAINER||((s=n.currentBattle.mysteryEncounter)==null?void 0:s.encounterMode)===lE.TRAINER_BATTLE){const a=(R=n.currentBattle.trainer)==null?void 0:R.getName(this.fieldIndex%2?lt.TRAINER_PARTNER:lt.TRAINER),i=this.getPokemon().getNameToRender(),r=u.t("battle:trainerSendOut",{trainerName:a,pokemonName:i});n.pbTrayEnemy.hide(),n.ui.showText(r,null,()=>this.summon())}else n.currentBattle.isBattleMysteryEncounter()&&(n.pbTrayEnemy.hide(),this.summonWild())}summon(){const A=this.getPokemon(),s=n.addFieldSprite(this.player?36:248,this.player?80:44,"pb",DO(A.pokeball));if(s.setVisible(!1),s.setOrigin(.5,.625),n.field.add(s),this.fieldIndex===1)A.setFieldPosition(oR.RIGHT,0);else{const a=this.getParty().filter(i=>i.isAllowedInBattle()).length;A.setFieldPosition(!n.currentBattle.double||a===1?oR.CENTER:oR.LEFT)}const R=A.getFieldPositionOffset();s.setVisible(!0),n.tweens.add({targets:s,duration:650,x:(this.player?100:236)+R[0]}),n.tweens.add({targets:s,duration:150,ease:"Cubic.easeOut",y:(this.player?70:34)+R[1],onComplete:N(()=>{n.tweens.add({targets:s,duration:500,ease:"Cubic.easeIn",angle:1440,y:(this.player?132:86)+R[1],onComplete:N(()=>{if(n.playSound("se/pb_rel"),s.destroy(),n.add.existing(A),n.field.add(A),!this.player){const a=n.getPlayerPokemon();a!=null&&a.isOnField()&&n.field.moveBelow(A,a),n.currentBattle.seenEnemyPartyMemberIds.add(A.id)}BM(A.x,A.y-16,A.pokeball),n.updateModifiers(this.player),n.updateFieldScale(),A.showInfo(),A.playAnim(),A.setVisible(!0),A.getSprite().setVisible(!0),A.setScale(.5),A.tint(zO(A.pokeball)),A.untint(250,"Sine.easeIn"),n.updateFieldScale(),n.tweens.add({targets:A,duration:250,ease:"Sine.easeIn",scale:A.getSpriteScale(),onComplete:N(()=>{A.cry(A.getHpRatio()>.25?void 0:{rate:.85}),A.getSprite().clearTint(),A.resetSummonData(),n.time.delayedCall(1e3,()=>this.end())},"onComplete")})},"onComplete")})},"onComplete")})}summonWild(){const A=this.getPokemon();if(this.fieldIndex===1)A.setFieldPosition(oR.RIGHT,0);else{const s=this.getParty().filter(R=>!R.isFainted()).length;A.setFieldPosition(!n.currentBattle.double||s===1?oR.CENTER:oR.LEFT)}if(n.add.existing(A),n.field.add(A),!this.player){const s=n.getPlayerPokemon();s!=null&&s.isOnField()&&n.field.moveBelow(A,s),n.currentBattle.seenEnemyPartyMemberIds.add(A.id)}n.updateModifiers(this.player),n.updateFieldScale(),A.showInfo(),A.playAnim(),A.setVisible(!0),A.getSprite().setVisible(!0),A.setScale(.75),A.tint(zO(A.pokeball)),A.untint(250,"Sine.easeIn"),n.updateFieldScale(),A.x+=16,A.y-=20,A.alpha=0,n.tweens.add({targets:A,x:"-=16",y:"+=16",alpha:1,duration:1e3,ease:"Sine.easeIn",scale:A.getSpriteScale(),onComplete:N(()=>{A.cry(A.getHpRatio()>.25?void 0:{rate:.85}),A.getSprite().clearTint(),A.resetSummonData(),n.updateFieldScale(),n.time.delayedCall(1e3,()=>this.end())},"onComplete")})}onEnd(){const A=this.getPokemon();A.isShiny()&&n.unshiftPhase(new eS(A.getBattlerIndex())),A.resetTurnData(),(!this.loaded||[Ut.TRAINER,Ut.MYSTERY_ENCOUNTER].includes(n.currentBattle.battleType)||n.currentBattle.waveIndex%10===1)&&(n.triggerPokemonFormChange(A,Ds,!0),this.queuePostSummon())}queuePostSummon(){n.pushPhase(new Ei(this.getPokemon().getBattlerIndex()))}end(){this.onEnd(),super.end()}};N(dg,"SummonPhase");let QE=dg;const fg=class fg extends QE{constructor(A){super(A)}preSummon(){n.ui.showText(u.t("battle:sendOutPokemon",{pokemonName:te(this.getPokemon())})),n.time.delayedCall(250,()=>this.summon())}};N(fg,"SummonMissingPhase");let OP=fg;var iA=(E=>(E[E.INITIAL_SWITCH=0]="INITIAL_SWITCH",E[E.SWITCH=1]="SWITCH",E[E.BATON_PASS=2]="BATON_PASS",E[E.SHED_TAIL=3]="SHED_TAIL",E[E.FORCE_SWITCH=4]="FORCE_SWITCH",E))(iA||{});const Bg=class Bg extends QE{constructor(A,s,R,a,i){super(s,i!==void 0?i:!0),this.switchType=A,this.slotIndex=R,this.doReturn=a}start(){super.start()}preSummon(){var s,R;if(this.player||(this.slotIndex===-1&&(this.slotIndex=(s=n.currentBattle.trainer)==null?void 0:s.getNextSummonIndex(this.fieldIndex?lt.TRAINER_PARTNER:lt.TRAINER)),this.slotIndex>-1&&(this.showEnemyTrainer(this.fieldIndex%2?lt.TRAINER_PARTNER:lt.TRAINER),n.pbTrayEnemy.showPbTray(n.getEnemyParty()))),!this.doReturn||this.slotIndex!==-1&&!(this.player?n.getPlayerParty():n.getEnemyParty())[this.slotIndex]){if(this.player)return this.switchAndSummon();n.time.delayedCall(750,()=>this.switchAndSummon());return}const A=this.getPokemon();if((this.player?n.getEnemyField():n.getPlayerField()).forEach(a=>a.removeTagsBySourceId(A.id)),this.switchType===iA.SWITCH||this.switchType===iA.INITIAL_SWITCH){const a=A.getTag(mE);a&&n.tweens.add({targets:a.sprite,duration:250,scale:a.sprite.scale*.5,ease:"Sine.easeIn",onComplete:N(()=>a.sprite.destroy(),"onComplete")})}n.ui.showText(this.player?u.t("battle:playerComeBack",{pokemonName:te(A)}):u.t("battle:trainerComeBack",{trainerName:(R=n.currentBattle.trainer)==null?void 0:R.getName(this.fieldIndex%2?lt.TRAINER_PARTNER:lt.TRAINER),pokemonName:A.getNameToRender()})),n.playSound("se/pb_rel"),A.hideInfo(),A.tint(zO(A.pokeball),1,250,"Sine.easeIn"),n.tweens.add({targets:A,duration:250,ease:"Sine.easeIn",scale:.5,onComplete:N(()=>{A.leaveField(this.switchType===iA.SWITCH,!1),n.time.delayedCall(750,()=>this.switchAndSummon())},"onComplete")})}switchAndSummon(){const A=this.player?this.getParty():n.getEnemyParty(),s=A[this.slotIndex];if(this.lastPokemon=this.getPokemon(),fJ(ri,this.lastPokemon),this.switchType===iA.BATON_PASS&&s&&((this.player?n.getEnemyField():n.getPlayerField()).forEach(R=>R.transferTagsBySourceId(this.lastPokemon.id,s.id)),!n.findModifier(R=>R instanceof vI&&R.pokemonId===s.id))){const R=n.findModifier(a=>a instanceof vI&&a.pokemonId===this.lastPokemon.id);R&&!n.findModifier(a=>a instanceof vI&&a.pokemonId===s.id)&&n.tryTransferHeldItemModifier(R,s,!1,void 0,void 0,void 0,!1)}if(s){A[this.slotIndex]=this.lastPokemon,A[this.fieldIndex]=s;const R=N(()=>{var a;n.ui.showText(this.player?u.t("battle:playerGo",{pokemonName:te(s)}):u.t("battle:trainerGo",{trainerName:(a=n.currentBattle.trainer)==null?void 0:a.getName(this.fieldIndex%2?lt.TRAINER_PARTNER:lt.TRAINER),pokemonName:this.getPokemon().getNameToRender()})),this.switchType===iA.BATON_PASS||this.switchType===iA.SHED_TAIL?this.lastPokemon.getTag(mE)&&(s.x+=this.lastPokemon.getSubstituteOffset()[0],s.y+=this.lastPokemon.getSubstituteOffset()[1],s.setAlpha(.5)):s.resetSummonData(),this.summon()},"showTextAndSummon");this.player?R():n.time.delayedCall(1500,()=>{this.hideEnemyTrainer(),n.pbTrayEnemy.hide(),R()})}else this.end()}onEnd(){var L,o;super.onEnd();const A=this.getPokemon(),s=n.currentBattle.lastMove,R=s?we[s]:void 0,a=(L=n.currentBattle.turnCommands[this.fieldIndex])==null?void 0:L.command,i=(R==null?void 0:R.hasAttr(zs))&&!this.lastPokemon.isFainted(),r=this.lastPokemon.hasAbilityWithAttr(Ti)&&!this.lastPokemon.isFainted();if((a===LA.POKEMON||i||r)&&(A.battleSummonData.turnCount--,A.battleSummonData.waveTurnCount--),this.switchType===iA.BATON_PASS&&A)A.transferSummon(this.lastPokemon);else if(this.switchType===iA.SHED_TAIL&&A){const l=this.lastPokemon.getTag(mE);l&&A.summonData.tags.push(l)}this.switchType!==iA.INITIAL_SWITCH&&(A.resetTurnData(),A.turnData.switchedInThisTurn=!0),(o=this.lastPokemon)==null||o.resetSummonData(),n.triggerPokemonFormChange(A,Ds,!0),n.arena.triggerWeatherBasedFormChanges()}queuePostSummon(){n.unshiftPhase(new Ei(this.getPokemon().getBattlerIndex()))}};N(Bg,"SwitchSummonPhase");let uR=Bg;const gg=class gg extends dE{constructor(A,s,R,a){super(),this.switchType=A,this.fieldIndex=s,this.isModal=R,this.doReturn=a}start(){if(super.start(),this.isModal&&!n.getPlayerParty().filter(s=>s.isAllowedInBattle()&&!s.isActive(!0)).length)return super.end();if(this.isModal&&!this.doReturn&&!n.getPlayerParty()[this.fieldIndex].isFainted())return super.end();if(this.isModal&&n.getPlayerField().filter(s=>s.isAllowedInBattle()&&s.isActive(!0)).length>=n.currentBattle.getBattlerCount())return super.end();const A=n.currentBattle.getBattlerCount()===1||n.getPokemonAllowedInBattle().length>1?this.fieldIndex:0;n.ui.setMode(Ie.PARTY,this.isModal?Ps.FAINT_SWITCH:Ps.POST_BATTLE_SWITCH,A,(s,R)=>{if(s>=n.currentBattle.getBattlerCount()&&s<6){n.tryRemovePhase(i=>i instanceof Ei&&i.player&&i.fieldIndex===this.fieldIndex);const a=R===NS.PASS_BATON?iA.BATON_PASS:this.switchType;n.unshiftPhase(new uR(a,A,s,this.doReturn))}n.ui.setMode(Ie.MESSAGE).then(()=>super.end())},VE.FilterNonFainted)}};N(gg,"SwitchPhase");let xI=gg;const Kg=class Kg extends dE{constructor(A,s){super(),this.fieldIndex=A,this.useName=s}start(){super.start();const A=n.getPlayerField()[this.fieldIndex];if(n.battleStyle===Y1.SET)return super.end();if(n.field.getAll().indexOf(A)===-1)return n.unshiftPhase(new OP(this.fieldIndex)),super.end();if(!n.getPlayerParty().slice(1).filter(s=>s.isActive()).length)return super.end();if(A.getTag(y.FRENZY)||A.isTrapped()||n.getPlayerField().some(s=>s.getTag(y.COMMANDED)))return super.end();n.ui.showText(u.t("battle:switchQuestion",{pokemonName:this.useName?te(A):u.t("battle:pokemon")}),null,()=>{n.ui.setMode(Ie.CONFIRM,()=>{n.ui.setMode(Ie.MESSAGE),n.unshiftPhase(new xI(iA.INITIAL_SWITCH,this.fieldIndex,!1,!0)),this.end()},()=>{n.ui.setMode(Ie.MESSAGE),this.end()})})}};N(Kg,"CheckSwitchPhase");let cn=Kg;const mg=class mg extends dE{start(){super.start(),n.newBattle(),this.end()}};N(mg,"NewBattlePhase");let si=mg;const Fg=class Fg extends Ts{constructor(A){super(A)}start(){const A=this.getPokemon();if(A!=null&&A.isActive(!0)&&A.status&&A.status.isPostTurn()&&!A.switchOutStatus){A.status.incrementTurn();const s=new Lt(!1);if(ut(ME,A,s),ut(BU,A,s),s.value)this.end();else{n.queueMessage(m6(A.status.effect,te(A)));const R=new Et(0);switch(A.status.effect){case ne.POISON:R.value=Math.max(A.getMaxHp()>>3,1);break;case ne.TOXIC:R.value=Math.max(Math.floor(A.getMaxHp()/16*A.status.toxicTurnCount),1);break;case ne.BURN:R.value=Math.max(A.getMaxHp()>>4,1),ut(xU,A,null,!1,R);break}R.value&&(n.damageNumberHandler.add(this.getPokemon(),A.damage(R.value,!1,!0)),A.updateInfo(),k1(Jr,A,R.value,A.hasPassive(),!1,[])),new qI(lA.POISON+(A.status.effect-1),A).play(!1,()=>this.end())}}else this.end()}end(){n.currentBattle.battleSpec===SE.FINAL_BOSS?n.initFinalBossPhaseTwo(this.getPokemon()):super.end()}};N(Fg,"PostTurnStatusEffectPhase");let tS=Fg;const pg=class pg extends uR{constructor(A){super(iA.SWITCH,A,-1,!0)}switchAndSummon(){this.end()}summon(){}onEnd(){const A=this.getPokemon();A.resetSprite(),A.resetTurnData(),A.resetSummonData(),n.updateFieldScale(),n.triggerPokemonFormChange(A,Ds)}};N(pg,"ReturnPhase");let fr=pg;const Wg=class Wg extends Ts{constructor(A,s){super(A),this.shownIvs=s}start(){if(super.start(),!this.shownIvs)return this.end();const A=this.getPokemon();let s=[],R=[],a=[];const i=n.getEnemyField(),r=n.uiTheme;for(let L=0;L<i.length;L++){s=i[L].ivs;const o=n.gameData.dexData[i[L].species.getRootSpeciesId()].ivs,l=n.ui.getMessageHandler().getTopIvs(s,this.shownIvs);R=i[L].getBattleInfo().getStatsValueContainer().list,a=R.filter(C=>C.name.indexOf("icon_stat_label")>=0);for(let C=0;C<a.length;C++){const M=K[a[C].frame.name];if(s[M]>o[M]&&l.indexOf(Number(M))>=0){const D=s[M]===31?aA(Q.PERFECT_IV,!1,r):aA(Q.SUMMARY_GREEN,!1,r),_=Phaser.Display.Color.HexStringToColor(D).color;a[C].setTint(_)}a[C].setVisible(!0)}}n.hideIvs?this.end():n.ui.showText(u.t("battle:ivScannerUseQuestion",{pokemonName:te(A)}),null,()=>{n.ui.setMode(Ie.CONFIRM,()=>{n.ui.setMode(Ie.MESSAGE),n.ui.clearText(),new qI(lA.LOCK_ON,A,A).play(!1,()=>{n.ui.getMessageHandler().promptIvs(A.id,A.ivs,this.shownIvs).then(()=>this.end())})},()=>{n.ui.setMode(Ie.MESSAGE),n.ui.clearText(),this.end()})})}};N(Wg,"ScanIvsPhase");let AS=Wg;const RR=48,aI=82,ML=48,iI=8,sl=6,zD=class zD extends Phaser.GameObjects.Container{constructor(A){A!=null&&A.onSide&&(A.top=!1),super(n,A==null?void 0:A.x,A==null?void 0:A.y),this.active=!1,this.descScroll=null;const s=(A==null?void 0:A.scale)||1;this.setScale(s),this.options=A||{};const R=((A==null?void 0:A.width)||zD.getWidth(s))/s;this.descBg=Gt(A!=null&&A.onSide&&!(A!=null&&A.right)?aI:0,A!=null&&A.top?RR:0,R-(A!=null&&A.onSide?aI:0),ML),this.descBg.setOrigin(0,0),this.add(this.descBg),this.desc=le((A!=null&&A.onSide&&!(A!=null&&A.right)?aI:0)+iI,(A!=null&&A.top?RR:0)+iI-2,"",Q.BATTLE_INFO,{wordWrap:{width:(R-(iI-2)*2-(A!=null&&A.onSide?aI:0))*sl}}),this.desc.setLineSpacing(u.resolvedLanguage==="ja"?25:5);const a={x:(A==null?void 0:A.x)||0,y:(A==null?void 0:A.y)||0};a.x<0&&(a.x+=n.game.canvas.width/sl),a.y<0&&(a.y+=n.game.canvas.height/sl);const i=n.make.graphics();i.fillStyle(16711680),i.fillRect(a.x+((A!=null&&A.onSide&&!(A!=null&&A.right)?aI:0)+iI)*s,a.y+((A!=null&&A.top?RR:0)+iI-2)*s,R-((A!=null&&A.onSide?aI:0)-iI*2)*s,(ML-(iI-2)*2)*s),i.setScale(6);const r=this.createGeometryMask(i);this.add(this.desc),this.desc.setMask(r),this.val=new Phaser.GameObjects.Container(n,A!=null&&A.right?R-aI:0,A!=null&&A.top||A!=null&&A.onSide?0:ML),this.add(this.val);const L=Gt(0,0,aI,RR);L.setOrigin(0,0),this.val.add(L),this.typ=n.add.sprite(25,RR-35,YR("types"),"unknown"),this.typ.setScale(.8),this.val.add(this.typ),this.cat=n.add.sprite(57,RR-35,"categories","physical"),this.val.add(this.cat);const o=le(12,RR-25,"PP",Q.MOVE_INFO_CONTENT);o.setOrigin(0,.5),o.setText(u.t("fightUiHandler:pp")),this.val.add(o),this.pp=le(70,RR-25,"--",Q.MOVE_INFO_CONTENT),this.pp.setOrigin(1,.5),this.val.add(this.pp);const l=le(12,RR-17,"POWER",Q.MOVE_INFO_CONTENT);l.setOrigin(0,.5),l.setText(u.t("fightUiHandler:power")),this.val.add(l),this.pow=le(70,RR-17,"---",Q.MOVE_INFO_CONTENT),this.pow.setOrigin(1,.5),this.val.add(this.pow);const C=le(12,RR-9,"ACC",Q.MOVE_INFO_CONTENT);C.setOrigin(0,.5),C.setText(u.t("fightUiHandler:accuracy")),this.val.add(C),this.acc=le(70,RR-9,"---",Q.MOVE_INFO_CONTENT),this.acc.setOrigin(1,.5),this.val.add(this.acc),A!=null&&A.hideEffectBox&&this.val.setVisible(!1),A!=null&&A.hideBg&&this.descBg.setVisible(!1),this.setVisible(!1)}show(A){var R;if(!n.enableMoveInfo)return!1;this.move=A,this.pow.setText(A.power>=0?A.power.toString():"---"),this.acc.setText(A.accuracy>=0?A.accuracy.toString():"---"),this.pp.setText(A.pp>=0?A.pp.toString():"---"),this.typ.setTexture(YR("types"),I[A.type].toLowerCase()),this.cat.setFrame(Pt[A.category].toLowerCase()),this.desc.setText((A==null?void 0:A.effect)||""),this.descScroll&&(this.descScroll.remove(),this.descScroll=null,this.desc.y=((R=this.options)!=null&&R.top?RR:0)+iI-2);const s=Math.floor(this.desc.displayHeight*(96/72)/14.83);return s>3&&(this.descScroll=n.tweens.add({targets:this.desc,delay:st(2e3),loop:-1,hold:st(2e3),duration:st((s-3)*2e3),y:`-=${14.83*(72/96)*(s-3)}`})),this.options.delayVisibility||this.setVisible(!0),this.active=!0,!0}clear(){this.setVisible(!1),this.active=!1}toggleInfo(A){A&&this.setVisible(!0),n.tweens.add({targets:this.desc,duration:st(125),ease:"Sine.easeInOut",alpha:A?1:0}),A||this.setVisible(!1)}isActive(){return this.active}static getWidth(A){return n.game.canvas.width/sl/2}static getHeight(A,s){return(s?Math.max(RR,ML):RR+ML)*A}};N(zD,"MoveInfoOverlay");let MO=zD;const CI=7,_0=12,P0=24,fn=-62,Yg=class Yg extends qn{constructor(){super(Ie.CONFIRM),this.moveInfoOverlayActive=!1,this.rowCursor=0,this.options=[],this.shopOptionsRows=[]}setup(){const A=this.getUi();this.modifierContainer=n.add.container(0,0),A.add(this.modifierContainer);const R=document.createElement("canvas").getContext("2d"),a=Hn(Q.PARTY,n.uiTheme).styleOptions;R&&(R.font=a.fontSize+"px "+a.fontFamily,this.transferButtonWidth=R.measureText(u.t("modifierSelectUiHandler:transfer")).width,this.checkButtonWidth=R.measureText(u.t("modifierSelectUiHandler:checkTeam")).width),this.transferButtonContainer=n.add.container((n.game.canvas.width-this.checkButtonWidth)/6-21,fn),this.transferButtonContainer.setName("transfer-btn"),this.transferButtonContainer.setVisible(!1),A.add(this.transferButtonContainer);const i=le(-4,-2,u.t("modifierSelectUiHandler:transfer"),Q.PARTY);i.setName("text-transfer-btn"),i.setOrigin(1,0),this.transferButtonContainer.add(i),this.checkButtonContainer=n.add.container(n.game.canvas.width/6-1,fn),this.checkButtonContainer.setName("use-btn"),this.checkButtonContainer.setVisible(!1),A.add(this.checkButtonContainer);const r=le(-4,-2,u.t("modifierSelectUiHandler:checkTeam"),Q.PARTY);r.setName("text-use-btn"),r.setOrigin(1,0),this.checkButtonContainer.add(r),this.rerollButtonContainer=n.add.container(16,fn),this.rerollButtonContainer.setName("reroll-brn"),this.rerollButtonContainer.setVisible(!1),A.add(this.rerollButtonContainer);const L=le(-4,-2,u.t("modifierSelectUiHandler:reroll"),Q.PARTY);L.setName("text-reroll-btn"),L.setOrigin(0,0),this.rerollButtonContainer.add(L),this.rerollCostText=le(0,0,"",Q.MONEY),this.rerollCostText.setName("text-reroll-cost"),this.rerollCostText.setOrigin(0,0),this.rerollCostText.setPositionRelative(L,L.displayWidth+5,1),this.rerollButtonContainer.add(this.rerollCostText),this.lockRarityButtonContainer=n.add.container(16,fn),this.lockRarityButtonContainer.setVisible(!1),A.add(this.lockRarityButtonContainer),this.lockRarityButtonText=le(-4,-2,u.t("modifierSelectUiHandler:lockRarities"),Q.PARTY),this.lockRarityButtonText.setOrigin(0,0),this.lockRarityButtonContainer.add(this.lockRarityButtonText),this.continueButtonContainer=n.add.container(n.game.canvas.width/12,-(n.game.canvas.height/12)),this.continueButtonContainer.setVisible(!1),A.add(this.continueButtonContainer);const o=le(-24,5,u.t("modifierSelectUiHandler:continueNextWaveButton"),Q.MESSAGE);o.setName("text-continue-btn"),this.continueButtonContainer.add(o);const l=1;this.moveInfoOverlay=new MO({delayVisibility:!0,scale:l,onSide:!0,right:!0,x:1,y:-MO.getHeight(l,!0)-1,width:n.game.canvas.width/6-2}),A.add(this.moveInfoOverlay),n.addInfoToggle(this.moveInfoOverlay)}show(A){if(n.disableMenu=!1,this.active)return A.length>=3&&(this.awaitingActionInput=!0,this.onActionInput=A[2]),this.moveInfoOverlay.active=this.moveInfoOverlayActive,!1;if(A.length!==4||!(A[1]instanceof Array)||!(A[2]instanceof Function))return!1;super.show(A),this.getUi().clearText(),this.player=A[0];const s=this.player&&!!n.findModifiers(D=>D instanceof dt&&D.isTransferable).length,R=!!n.findModifier(D=>D instanceof go);this.transferButtonContainer.setVisible(!1),this.transferButtonContainer.setAlpha(0),this.checkButtonContainer.setVisible(!1),this.checkButtonContainer.setAlpha(0),this.rerollButtonContainer.setVisible(!1),this.rerollButtonContainer.setAlpha(0),this.lockRarityButtonContainer.setVisible(!1),this.lockRarityButtonContainer.setAlpha(0),this.continueButtonContainer.setVisible(!1),this.continueButtonContainer.setAlpha(0),this.rerollButtonContainer.setPositionRelative(this.lockRarityButtonContainer,0,R?-12:0),this.rerollCost=A[3],this.updateRerollCostText();const a=A[1],i=n.gameMode.hasNoShop,r=new _s(n.getWaveMoneyAmount(1));n.applyModifier(aa,!0,r);const L=i?[]:X6(n.currentBattle.waveIndex,r.value),o=L.length>CI?-_0:-P0;for(let D=0;D<a.length;D++){const _=n.game.canvas.width/6/(a.length+2),P=new UC(_*(D+1)+_*.5,-n.game.canvas.height/12+o,a[D]);P.setScale(.5),n.add.existing(P),this.modifierContainer.add(P),this.options.push(P)}const l=this.continueButtonContainer.getAt(0);l.y=o-5,l.setVisible(this.options.length===0);for(let D=0;D<L.length;D++){const _=D<CI?0:1,P=D<CI?D:D-CI,h=L.slice(_?CI:0,_?void 0:CI),H=n.game.canvas.width/6/(h.length+2),d=new UC(H*(P+1)+H*.5,-n.game.canvas.height/12-n.game.canvas.height/32-(42-(28*_-1)),L[D]);d.setScale(.375),n.add.existing(d),this.modifierContainer.add(d),_>=this.shopOptionsRows.length&&this.shopOptionsRows.push([]),this.shopOptionsRows[_].push(d)}const C=a.map(D=>D.upgradeCount).reduce((D,_)=>Math.max(_,D),0);n.getModifierBar().updateModifiers(n.modifiers,!0),n.showShopOverlay(750*n.gameSpeed),n.updateAndShowText(750),n.updateBiomeWaveText(),n.updateMoneyText();let M=0;return n.tweens.addCounter({ease:"Sine.easeIn",duration:1250,onUpdate:N(D=>{const _=D.getValue(),P=Math.floor(_*a.length);if(P>M&&P<=a.length){const h=this.options[M];h==null||h.show(Math.floor((1-_)*1250)*.325+2e3*C,-(C-a[M].upgradeCount)),M++}},"onUpdate")}),n.time.delayedCall(1e3+C*2e3,()=>{for(const D of this.shopOptionsRows.flat())D.show(0,0)}),n.time.delayedCall(4e3+C*2e3,()=>{s&&(this.transferButtonContainer.setAlpha(0),this.transferButtonContainer.setVisible(!0),n.tweens.add({targets:this.transferButtonContainer,alpha:1,duration:250})),this.rerollButtonContainer.setAlpha(0),this.checkButtonContainer.setAlpha(0),this.lockRarityButtonContainer.setAlpha(0),this.continueButtonContainer.setAlpha(0),this.rerollButtonContainer.setVisible(!0),this.checkButtonContainer.setVisible(!0),this.continueButtonContainer.setVisible(this.rerollCost<0),this.lockRarityButtonContainer.setVisible(R),n.tweens.add({targets:[this.checkButtonContainer,this.continueButtonContainer],alpha:1,duration:250}),n.tweens.add({targets:[this.rerollButtonContainer,this.lockRarityButtonContainer],alpha:this.rerollCost<0?.5:1,duration:250});const D=N(()=>{n.shopCursorTarget===bn.CHECK_TEAM?(this.setRowCursor(0),this.setCursor(2)):n.shopCursorTarget===bn.SHOP&&n.gameMode.hasNoShop?(this.setRowCursor(bn.REWARDS),this.setCursor(0)):(this.setRowCursor(n.shopCursorTarget),this.setCursor(0))},"updateCursorTarget");D(),VI(tO.Select_Item).then(_=>{_&&D(),this.awaitingActionInput=!0,this.onActionInput=A[2]})}),!0}processInput(A){const s=this.getUi();if(!this.awaitingActionInput)return!1;let R=!1;if(A===k.ACTION){if(R=!0,this.onActionInput){const a=this.onActionInput;this.awaitingActionInput=!1,this.onActionInput=null,a(this.rowCursor,this.cursor)?(this.moveInfoOverlayActive=this.moveInfoOverlay.active,this.moveInfoOverlay.setVisible(!1),this.moveInfoOverlay.active=!1):(this.awaitingActionInput=!0,this.onActionInput=a)}}else if(A===k.CANCEL){if(this.player&&(R=!0,this.onActionInput)){const a=this.onActionInput;this.awaitingActionInput=!1,this.onActionInput=null,a(-1),this.moveInfoOverlayActive=this.moveInfoOverlay.active,this.moveInfoOverlay.setVisible(!1),this.moveInfoOverlay.active=!1}}else switch(A){case k.UP:this.rowCursor===0&&this.cursor===3?R=this.setCursor(0):this.rowCursor<this.shopOptionsRows.length+1?R=this.setRowCursor(this.rowCursor+1):R=this.setRowCursor(0);break;case k.DOWN:this.rowCursor?R=this.setRowCursor(this.rowCursor-1):this.lockRarityButtonContainer.visible&&this.cursor===0?R=this.setCursor(3):R=this.setRowCursor(this.shopOptionsRows.length+1);break;case k.LEFT:if(this.rowCursor)this.cursor?R=this.setCursor(this.cursor-1):this.rowCursor===1&&this.options.length===0?R=!1:R=this.setCursor(this.getRowItems(this.rowCursor)-1);else switch(this.cursor){case 0:R=this.setCursor(2);break;case 1:this.lockRarityButtonContainer.visible?R=this.setCursor(3):R=this.rerollButtonContainer.visible&&this.setCursor(0);break;case 2:this.transferButtonContainer.visible?R=this.setCursor(1):this.rerollButtonContainer.visible?R=this.setCursor(0):R=!1;break;case 3:this.lockRarityButtonContainer.visible?R=this.setCursor(2):R=!1}break;case k.RIGHT:if(this.rowCursor)this.cursor<this.getRowItems(this.rowCursor)-1?R=this.setCursor(this.cursor+1):this.rowCursor===1&&this.options.length===0?R=this.setRowCursor(0):R=this.setCursor(0);else switch(this.cursor){case 0:this.transferButtonContainer.visible?R=this.setCursor(1):R=this.setCursor(2);break;case 1:R=this.setCursor(2);break;case 2:R=this.setCursor(0);break;case 3:this.transferButtonContainer.visible?R=this.setCursor(1):R=this.setCursor(2);break}break}return R&&s.playSelect(),R}setCursor(A){const s=this.getUi(),R=super.setCursor(A);this.cursorObj||(this.cursorObj=n.add.image(0,0,"cursor"),this.modifierContainer.add(this.cursorObj));const a=this.rowCursor===1?this.options:this.shopOptionsRows[this.shopOptionsRows.length-(this.rowCursor-1)];if(this.cursorObj.setScale(this.rowCursor===1?2:this.rowCursor>=2?1.5:1),this.moveInfoOverlay.clear(),this.rowCursor){if(this.rowCursor===1&&a.length===0)return this.cursorObj.setScale(1.25),this.cursorObj.setPosition(n.game.canvas.width/18+23,-n.game.canvas.height/12-(this.shopOptionsRows.length>1?_0-2:P0-2)),s.showText(u.t("modifierSelectUiHandler:continueNextWaveDescription")),R;const i=n.game.canvas.width/6/(a.length+2);this.rowCursor<2?this.cursorObj.setPosition(i*(A+1)+i*.5-20,-n.game.canvas.height/12-(this.shopOptionsRows.length>1?_0-2:P0-2)):this.cursorObj.setPosition(i*(A+1)+i*.5-16,-n.game.canvas.height/12-n.game.canvas.height/32-(-14+28*(this.rowCursor-(this.shopOptionsRows.length-1))));const r=a[this.cursor].modifierTypeOption.type;r&&s.showText(r.getDescription()),r instanceof ei&&this.moveInfoOverlay.show(we[r.moveId])}else A===0?(this.cursorObj.setPosition(6,this.lockRarityButtonContainer.visible?fn-8:fn+4),s.showText(u.t("modifierSelectUiHandler:rerollDesc"))):A===1?(this.cursorObj.setPosition((n.game.canvas.width-this.transferButtonWidth-this.checkButtonWidth)/6-30,fn+4),s.showText(u.t("modifierSelectUiHandler:transferDesc"))):A===2?(this.cursorObj.setPosition((n.game.canvas.width-this.checkButtonWidth)/6-10,fn+4),s.showText(u.t("modifierSelectUiHandler:checkTeamDesc"))):(this.cursorObj.setPosition(6,fn+4),s.showText(u.t("modifierSelectUiHandler:lockRaritiesDesc")));return R}setRowCursor(A){const s=this.rowCursor;if(A!==s){this.rowCursor=A;let R=Math.round(this.cursor/Math.max(this.getRowItems(s)-1,1)*(this.getRowItems(A)-1));return A===1&&this.options.length===0&&(R=0),A===0&&(this.options.length===0&&(R=1),R===0&&!this.rerollButtonContainer.visible&&(R=1),R===1&&!this.transferButtonContainer.visible&&(R=2)),A===0&&s>1&&R===0&&this.lockRarityButtonContainer.visible&&(R=3),A===this.shopOptionsRows.length+1&&s===0&&this.cursor===3&&(R=0),this.cursor=-1,this.setCursor(R),!0}return!1}getRowItems(A){switch(A){case 0:return 3;case 1:return this.options.length;default:return this.shopOptionsRows[this.shopOptionsRows.length-(A-1)].length}}setRerollCost(A){this.rerollCost=A}updateCostText(){const A=this.shopOptionsRows.flat();for(const s of A)s.updateCostText();this.updateRerollCostText()}updateRerollCostText(){if(this.rerollCost<0){this.rerollCostText.setVisible(!1);return}else this.rerollCostText.setVisible(!0);const s=n.money>=this.rerollCost,R=vo(n.moneyFormat,this.rerollCost);this.rerollCostText.setText(u.t("modifierSelectUiHandler:rerollCost",{formattedMoney:R})),this.rerollCostText.setColor(this.getTextColor(s?Q.MONEY:Q.PARTY_RED)),this.rerollCostText.setShadowColor(this.getTextColor(s?Q.MONEY:Q.PARTY_RED,!0))}updateLockRaritiesText(){const A=n.lockModifierTiers?Q.SUMMARY_BLUE:Q.PARTY;this.lockRarityButtonText.setColor(this.getTextColor(A)),this.lockRarityButtonText.setShadowColor(this.getTextColor(A,!0))}clear(){super.clear(),this.moveInfoOverlay.clear(),this.moveInfoOverlayActive=!1,this.awaitingActionInput=!1,this.onActionInput=null,this.getUi().clearText(),this.eraseCursor(),this.cursor=0,this.rowCursor=0,n.hideShopOverlay(750*n.gameSpeed),n.hideLuckText(250),n.getModifierBar().updateModifiers(n.modifiers);const A=this.options.concat(this.shopOptionsRows.flat());this.options.splice(0,this.options.length),this.shopOptionsRows.splice(0,this.shopOptionsRows.length),n.tweens.add({targets:A,scale:.01,duration:250,ease:"Cubic.easeIn",onComplete:N(()=>A.forEach(s=>s.destroy()),"onComplete")}),[this.rerollButtonContainer,this.checkButtonContainer,this.transferButtonContainer,this.lockRarityButtonContainer,this.continueButtonContainer].forEach(s=>{s.visible&&n.tweens.add({targets:s,alpha:0,duration:250,ease:"Cubic.easeIn",onComplete:N(()=>{this.options.length?s.setAlpha(1):s.setVisible(!1)},"onComplete")})})}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};N(Yg,"ModifierSelectUiHandler");let nP=Yg;const yg=class yg extends sE.GameObjects.Container{constructor(A,s,R){super(n,A,s),this.modifierTypeOption=R,this.setup()}setup(){var s,R,a;if(!this.modifierTypeOption.cost){const i=N(()=>{const r=n.add.sprite(0,-182,"pb",this.getPbAtlasKey(-this.modifierTypeOption.upgradeCount));return r.setScale(2),r},"getPb");this.pb=i(),this.add(this.pb),this.pbTint=i(),this.pbTint.setVisible(!1),this.add(this.pbTint)}this.itemContainer=n.add.container(0,0),this.itemContainer.setScale(.5),this.itemContainer.setAlpha(0),this.add(this.itemContainer);const A=N(()=>{var r;return n.add.sprite(0,0,"items",(r=this.modifierTypeOption.type)==null?void 0:r.iconImage)},"getItem");this.item=A(),this.itemContainer.add(this.item),this.modifierTypeOption.cost||(this.itemTint=A(),this.itemTint.setTintFill(sE.Display.Color.GetColor(255,192,255)),this.itemContainer.add(this.itemTint)),this.itemText=le(0,35,(s=this.modifierTypeOption.type)==null?void 0:s.name,Q.PARTY,{align:"center"}),this.itemText.setOrigin(.5,0),this.itemText.setAlpha(0),this.itemText.setTint((R=this.modifierTypeOption.type)!=null&&R.tier?xi((a=this.modifierTypeOption.type)==null?void 0:a.tier):void 0),this.add(this.itemText),this.modifierTypeOption.cost&&(this.itemCostText=le(0,45,"",Q.MONEY,{align:"center"}),this.itemCostText.setOrigin(.5,0),this.itemCostText.setAlpha(0),this.add(this.itemCostText),this.updateCostText())}show(A,s){if(!this.modifierTypeOption.cost){n.tweens.add({targets:this.pb,y:0,duration:1250,ease:"Bounce.Out"});let R=1,a=0,i=!1;n.tweens.addCounter({from:1,to:0,duration:1250,ease:"Bounce.Out",onUpdate:N(r=>{if(!n)return;const L=r.getValue();!i&&L>R?(n.playSound("se/pb_bounce_1",{volume:1/++a}),i=!0):i&&L<R&&(i=!1),R=L},"onUpdate")});for(let r=0;r<this.modifierTypeOption.upgradeCount;r++){const L=r;n.time.delayedCall(A-2e3*(this.modifierTypeOption.upgradeCount-(L+1+s)),()=>{n.playSound("se/upgrade",{rate:1+.25*L}),this.pbTint.setPosition(this.pb.x,this.pb.y),this.pbTint.setTintFill(16777215),this.pbTint.setAlpha(0),this.pbTint.setVisible(!0),n.tweens.add({targets:this.pbTint,alpha:1,duration:1e3,ease:"Sine.easeIn",onComplete:N(()=>{this.pb.setTexture("pb",this.getPbAtlasKey(-this.modifierTypeOption.upgradeCount+(L+1))),n.tweens.add({targets:this.pbTint,alpha:0,duration:750,ease:"Sine.easeOut",onComplete:N(()=>{this.pbTint.setVisible(!1)},"onComplete")})},"onComplete")})})}}n.time.delayedCall(A+2e3,()=>{n&&(this.modifierTypeOption.cost||(this.pb.setTexture("pb",`${this.getPbAtlasKey(0)}_open`),n.playSound("se/pb_rel"),n.tweens.add({targets:this.pb,duration:500,delay:250,ease:"Sine.easeIn",alpha:0,onComplete:N(()=>this.pb.destroy(),"onComplete")})),n.tweens.add({targets:this.itemContainer,duration:500,ease:"Elastic.Out",scale:2,alpha:1}),this.modifierTypeOption.cost||n.tweens.add({targets:this.itemTint,alpha:0,duration:500,ease:"Sine.easeIn",onComplete:N(()=>this.itemTint.destroy(),"onComplete")}),n.tweens.add({targets:this.itemText,duration:500,alpha:1,y:25,ease:"Cubic.easeInOut"}),this.itemCostText&&n.tweens.add({targets:this.itemCostText,duration:500,alpha:1,y:35,ease:"Cubic.easeInOut"}))})}getPbAtlasKey(A=0){var s;return DO(((s=this.modifierTypeOption.type)==null?void 0:s.tier)+A)}updateCostText(){const A=Ye.WAIVE_ROLL_FEE_OVERRIDE?0:this.modifierTypeOption.cost,s=A<=n.money?Q.MONEY:Q.PARTY_RED,R=vo(n.moneyFormat,A);this.itemCostText.setText(u.t("modifierSelectUiHandler:itemCost",{formattedMoney:R})),this.itemCostText.setColor(aA(s,!1,n.uiTheme)),this.itemCostText.setShadowColor(aA(s,!0,n.uiTheme))}};N(yg,"ModifierOption");let UC=yg;const MN=class MN extends dE{constructor(A=0,s,R,a=!1){super(),this.rerollCount=A,this.modifierTiers=s,this.customModifierSettings=R,this.isCopy=a}start(){var a,i,r;super.start(),!this.rerollCount&&!this.isCopy?this.updateSeed():this.rerollCount&&(n.reroll=!1);const A=n.getPlayerParty();this.isCopy||Na(A,this.getPoolType(),this.rerollCount);const s=new _s(3);if(this.isPlayer()&&(n.applyModifiers(ia,!0,s),n.applyModifiers(ra,!0,s)),this.customModifierSettings){const L=(((a=this.customModifierSettings.guaranteedModifierTiers)==null?void 0:a.length)||0)+(((i=this.customModifierSettings.guaranteedModifierTypeOptions)==null?void 0:i.length)||0)+(((r=this.customModifierSettings.guaranteedModifierTypeFuncs)==null?void 0:r.length)||0);if(this.customModifierSettings.fillRemaining){const o=s.value;s.value=o>L?o:L}else s.value=L}this.typeOptions=this.getModifierTypeOptions(s.value);const R=N((L,o)=>{if(L<0||o<0)return n.ui.showText(u.t("battle:skipItemQuestion"),null,()=>{n.ui.setOverlayMode(Ie.CONFIRM,()=>{n.ui.revertMode(),n.ui.setMode(Ie.MESSAGE),super.end()},()=>n.ui.setMode(Ie.MODIFIER_SELECT,this.isPlayer(),this.typeOptions,R,this.getRerollCost(n.lockModifierTiers)))}),!1;let l,C;const M=this.getRerollCost(n.lockModifierTiers);switch(L){case 0:switch(o){case 0:if(M<0||n.money<M)return n.ui.playError(),!1;n.reroll=!0,n.unshiftPhase(new MN(this.rerollCount+1,this.typeOptions.map(d=>{var f;return(f=d.type)==null?void 0:f.tier}).filter(d=>d!==void 0))),n.ui.clearText(),n.ui.setMode(Ie.MESSAGE).then(()=>super.end()),Ye.WAIVE_ROLL_FEE_OVERRIDE||(n.money-=M,n.updateMoneyText(),n.animateMoneyChanged(!1)),n.playSound("se/buy");break;case 1:n.ui.setModeWithoutClear(Ie.PARTY,Ps.MODIFIER_TRANSFER,-1,(d,f,B,F)=>{if(F!==void 0&&d<6&&F<6&&d!==F&&f>-1){const b=n.findModifiers(x=>x instanceof dt&&x.isTransferable&&x.pokemonId===A[d].id)[f];n.tryTransferHeldItemModifier(b,A[F],!0,B,void 0,void 0,!1)}else n.ui.setMode(Ie.MODIFIER_SELECT,this.isPlayer(),this.typeOptions,R,this.getRerollCost(n.lockModifierTiers))},VE.FilterItemMaxStacks);break;case 2:n.ui.setModeWithoutClear(Ie.PARTY,Ps.CHECK,-1,()=>{n.ui.setMode(Ie.MODIFIER_SELECT,this.isPlayer(),this.typeOptions,R,this.getRerollCost(n.lockModifierTiers))});break;case 3:if(M<0)return n.ui.playError(),!1;n.lockModifierTiers=!n.lockModifierTiers;const H=n.ui.getHandler();return H.setRerollCost(this.getRerollCost(n.lockModifierTiers)),H.updateLockRaritiesText(),H.updateRerollCostText(),!1}return!0;case 1:if(this.typeOptions.length===0)return n.ui.clearText(),n.ui.setMode(Ie.MESSAGE),super.end(),!0;this.typeOptions[o].type&&(l=this.typeOptions[o].type);break;default:const _=X6(n.currentBattle.waveIndex,n.getWaveMoneyAmount(1)),P=_[L>2||_.length<=CI?o:o+CI];P.type&&(l=P.type);const h=new Et(P.cost);n.applyModifier(aa,!0,h),C=h.value;break}if(C&&n.money<C&&!Ye.WAIVE_ROLL_FEE_OVERRIDE)return n.ui.playError(),!1;const D=N((_,P=!1)=>{const h=n.addModifier(_,!1,P,void 0,void 0,C);if((_.type instanceof ir||_.type instanceof ei)&&n.unshiftPhase(this.copy()),C&&!(_.type instanceof ir))h.then(H=>{H?(Ye.WAIVE_ROLL_FEE_OVERRIDE||(n.money-=C,n.updateMoneyText(),n.animateMoneyChanged(!1)),n.playSound("se/buy"),n.ui.getHandler().updateCostText()):n.ui.playError()});else{const H=N(()=>{n.ui.clearText(),n.ui.setMode(Ie.MESSAGE),super.end()},"doEnd");h instanceof Promise?h.then(()=>H()):H()}},"applyModifier");if(l instanceof _R)if(l instanceof RC)n.ui.setModeWithoutClear(Ie.PARTY,Ps.SPLICE,-1,(_,P)=>{P!==void 0&&_<6&&P<6&&_!==P?n.ui.setMode(Ie.MODIFIER_SELECT,this.isPlayer()).then(()=>{const h=l.newModifier(A[_],A[P]);D(h,!0)}):n.ui.setMode(Ie.MODIFIER_SELECT,this.isPlayer(),this.typeOptions,R,this.getRerollCost(n.lockModifierTiers))},l.selectFilter);else{const _=l,P=l instanceof hr,h=l instanceof ei,H=l instanceof ir,d=l instanceof VT||l instanceof xT,f=P?Ps.MOVE_MODIFIER:h?Ps.TM_MODIFIER:H?Ps.REMEMBER_MOVE_MODIFIER:Ps.MODIFIER,B=h?l.moveId:void 0;n.ui.setModeWithoutClear(Ie.PARTY,f,-1,(F,W)=>{F<6?n.ui.setMode(Ie.MODIFIER_SELECT,this.isPlayer()).then(()=>{const b=P?l.newModifier(A[F],W-NS.MOVE_1):H?l.newModifier(A[F],W):l.newModifier(A[F]);D(b,!0)}):n.ui.setMode(Ie.MODIFIER_SELECT,this.isPlayer(),this.typeOptions,R,this.getRerollCost(n.lockModifierTiers))},_.selectFilter,l instanceof hr?l.moveSelectFilter:void 0,B,d)}else D(l.newModifier());return!C},"modifierSelectCallback");n.ui.setMode(Ie.MODIFIER_SELECT,this.isPlayer(),this.typeOptions,R,this.getRerollCost(n.lockModifierTiers))}updateSeed(){n.resetSeed()}isPlayer(){return!0}getRerollCost(A){var r;let s=0;if(Ye.WAIVE_ROLL_FEE_OVERRIDE)return s;if(A){const L=[50,125,300,750,2e3];for(const o of this.typeOptions)s+=L[o.type.tier??0]}else s=250;let R=1;if(!ve((r=this.customModifierSettings)==null?void 0:r.rerollMultiplier)){if(this.customModifierSettings.rerollMultiplier<0)return-1;R=this.customModifierSettings.rerollMultiplier}const a=Math.min(Math.ceil(n.currentBattle.waveIndex/10)*s*2**this.rerollCount*R,Number.MAX_SAFE_INTEGER),i=new Et(a);return n.applyModifier(aa,!0,i),i.value}getPoolType(){return HE.PLAYER}getModifierTypeOptions(A){return B1(A,n.getPlayerParty(),n.lockModifierTiers?this.modifierTiers:void 0,this.customModifierSettings)}copy(){var A;return new MN(this.rerollCount,this.modifierTiers,{guaranteedModifierTypeOptions:this.typeOptions,rerollMultiplier:(A=this.customModifierSettings)==null?void 0:A.rerollMultiplier,allowLuckUpgrades:!1},!0)}addModifier(A){return n.addModifier(A,!1,!0)}};N(MN,"SelectModifierPhase");let _O=MN;const wg=class wg extends dE{constructor(A){super(),this.double=A}start(){super.start();const A=n.getPlayerField().find(s=>s.isActive(!0));A?A.setFieldPosition(this.double&&n.getPokemonAllowedInBattle().length>1?oR.LEFT:oR.CENTER,500).then(()=>{if(A.getFieldIndex()===1){const s=n.getPlayerParty();s[1]=s[0],s[0]=A}this.end()}):this.end()}};N(wg,"ToggleDoublePositionPhase");let PO=wg;const vg=class vg extends aE{constructor(A){super(),this.FIRST_DIALOGUE_PROMPT_DELAY=300,this.optionSelectSettings=A}start(){super.start(),n.clearPhaseQueue(),n.clearPhaseQueueSplice();const A=n.currentBattle.mysteryEncounter;A.updateSeedOffset(),this.optionSelectSettings||n.mysteryEncounterSaveData.encounteredEvents.push(new FP(A.encounterType,A.encounterTier,n.currentBattle.waveIndex)),n.ui.setMode(Ie.MYSTERY_ENCOUNTER,this.optionSelectSettings)}handleOptionSelect(A,s){var R,a;if(n.currentBattle.mysteryEncounter.selectedOption=A,!this.optionSelectSettings){const i=n.mysteryEncounterSaveData.encounteredEvents[n.mysteryEncounterSaveData.encounteredEvents.length-1];i.type===((R=n.currentBattle.mysteryEncounter)==null?void 0:R.encounterType)&&(i.selectedOption=s)}return A.onOptionPhase?(n.currentBattle.mysteryEncounter.populateDialogueTokensFromRequirements(),A.onPreOptionPhase?n.executeWithSeedOffset(async()=>await A.onPreOptionPhase().then(i=>{(ve(i)||i)&&this.continueEncounter()}),(a=n.currentBattle.mysteryEncounter)==null?void 0:a.getSeedOffset()):this.continueEncounter(),!0):!1}continueEncounter(){var R,a,i;const A=N(()=>{n.pushPhase(new IP),this.end()},"endDialogueAndContinueEncounter"),s=(i=(a=(R=n.currentBattle)==null?void 0:R.mysteryEncounter)==null?void 0:a.selectedOption)==null?void 0:i.dialogue;if(s!=null&&s.selected&&s.selected.length>0){n.ui.setMode(Ie.MESSAGE);const r=s.selected;let L=0;const o=N(()=>{const l=L===r.length-1?A:o,C=r[L];let M=null;const D=mA(C.text);C.speaker&&(M=mA(C.speaker)),L++,M?n.ui.showDialogue(D??"",M,null,l,0,L===1?this.FIRST_DIALOGUE_PROMPT_DELAY:0):n.ui.showText(D??"",null,l,L===1?this.FIRST_DIALOGUE_PROMPT_DELAY:0,!0)},"showNextDialogue");o()}else A()}end(){n.ui.setMode(Ie.MESSAGE).then(()=>super.end())}};N(vg,"MysteryEncounterPhase");let uC=vg;const Vg=class Vg extends aE{constructor(){super(),this.onOptionSelect=n.currentBattle.mysteryEncounter.selectedOption.onOptionPhase}start(){var A,s;super.start(),(A=n.currentBattle.mysteryEncounter)!=null&&A.autoHideIntroVisuals?JA().then(()=>{var R;n.executeWithSeedOffset(()=>{this.onOptionSelect().finally(()=>{this.end()})},((R=n.currentBattle.mysteryEncounter)==null?void 0:R.getSeedOffset())*500)}):n.executeWithSeedOffset(()=>{this.onOptionSelect().finally(()=>{this.end()})},((s=n.currentBattle.mysteryEncounter)==null?void 0:s.getSeedOffset())*500)}};N(Vg,"MysteryEncounterOptionSelectedPhase");let IP=Vg;const xg=class xg extends aE{constructor(){super()}start(){super.start();const A=[y.FLINCHED,y.ENDURING];for(n.getField(!0).filter(r=>r.summonData).forEach(r=>{const L=r.summonData.tags;L.filter(o=>A.includes(o.tagType)&&o.lapseTypes.includes(JE.TURN_END)&&!o.lapse(r,JE.TURN_END)).forEach(o=>{o.onRemove(r),L.splice(L.indexOf(o),1)})});n.findPhase(r=>r instanceof tS);)n.tryRemovePhase(r=>r instanceof tS);const R=n.getPokemonAllowedInBattle(),a=R.filter(r=>!r.isActive(!0));if(!R.length)return n.unshiftPhase(new GO),this.end();n.getPlayerField().forEach((r,L)=>{!r.isAllowedInBattle()&&a.length>L&&n.unshiftPhase(new xI(iA.SWITCH,L,!0,!1))}),n.currentBattle.double&&R.length===1&&a.length===0&&n.unshiftPhase(new PO(!0)),this.end()}};N(xg,"MysteryEncounterBattleStartCleanupPhase");let aP=xg;const bg=class bg extends aE{constructor(A=!1){super(),this.disableSwitch=A}start(){super.start(),this.doMysteryEncounterBattle()}getBattleMessage(){var R,a;const A=n.getEnemyField(),s=n.currentBattle.mysteryEncounter.encounterMode;return n.currentBattle.battleSpec===SE.FINAL_BOSS?u.t("battle:bossAppeared",{bossName:A[0].name}):s===lE.TRAINER_BATTLE?n.currentBattle.double?u.t("battle:trainerAppearedDouble",{trainerName:(R=n.currentBattle.trainer)==null?void 0:R.getName(lt.NONE,!0)}):u.t("battle:trainerAppeared",{trainerName:(a=n.currentBattle.trainer)==null?void 0:a.getName(lt.NONE,!0)}):A.length===1?u.t("battle:singleWildAppeared",{pokemonName:A[0].name}):u.t("battle:multiWildAppeared",{pokemonName1:A[0].name,pokemonName2:A[1].name})}doMysteryEncounterBattle(){var s,R,a,i;const A=n.currentBattle.mysteryEncounter.encounterMode;if(A===lE.WILD_BATTLE||A===lE.BOSS_BATTLE){A===lE.BOSS_BATTLE&&n.playBgm();const r=n.getEnemyParty().filter(L=>!L.isFainted()).length;n.unshiftPhase(new QE(0,!1)),n.currentBattle.double&&r>1&&n.unshiftPhase(new QE(1,!1)),(s=n.currentBattle.mysteryEncounter)!=null&&s.hideBattleIntroMessage?this.endBattleSetup():n.ui.showText(this.getBattleMessage(),null,()=>this.endBattleSetup(),0)}else if(A===lE.TRAINER_BATTLE){this.showEnemyTrainer();const r=N(()=>{var l;n.currentBattle.started=!0,n.playBgm(),n.pbTray.showPbTray(n.getPlayerParty()),n.pbTrayEnemy.showPbTray(n.getEnemyParty());const o=N(()=>{this.hideEnemyTrainer();const C=n.getEnemyParty().filter(M=>!M.isFainted()).length;n.unshiftPhase(new QE(0,!1)),n.currentBattle.double&&C>1&&n.unshiftPhase(new QE(1,!1)),this.endBattleSetup()},"doTrainerSummon");(l=n.currentBattle.mysteryEncounter)!=null&&l.hideBattleIntroMessage?o():n.ui.showText(this.getBattleMessage(),null,o,1e3,!0)},"doSummon"),L=(R=n.currentBattle.trainer)==null?void 0:R.getEncounterMessages();if(!L||!L.length)r();else{const o=n.currentBattle.trainer;let l;n.executeWithSeedOffset(()=>l=IE(L),(a=n.currentBattle.mysteryEncounter)==null?void 0:a.getSeedOffset()),l=l;const C=N(()=>{n.ui.showDialogue(l,o==null?void 0:o.getName(lt.NONE,!0),null,()=>{n.charSprite.hide().then(()=>n.hideFieldOverlay(250).then(()=>r()))})},"showDialogueAndSummon");(i=n.currentBattle.trainer)!=null&&i.config.hasCharSprite&&!n.ui.shouldSkipDialogue(l)?n.showFieldOverlay(500).then(()=>n.charSprite.showCharacter(o==null?void 0:o.getKey(),KM(L[0])).then(()=>C())):C()}}}endBattleSetup(){const A=n.getEnemyField(),s=n.currentBattle.mysteryEncounter.encounterMode;if(s!==lE.TRAINER_BATTLE){const a=n.findModifier(i=>i instanceof di);a&&A.map(i=>n.pushPhase(new AS(i.getBattlerIndex(),Math.min(a.getStackCount()*2,6))))}const R=n.getPlayerParty().filter(a=>a.isAllowedInBattle());if(R[0].isOnField()||n.pushPhase(new QE(0)),n.currentBattle.double?R.length>1&&(n.pushPhase(new PO(!0)),R[1].isOnField()||n.pushPhase(new QE(1))):(R.length>1&&R[1].isOnField()&&(n.getPlayerField().forEach(a=>a.lapseTag(y.COMMANDED)),n.pushPhase(new fr(1))),n.pushPhase(new PO(!1))),s!==lE.TRAINER_BATTLE&&!this.disableSwitch){const a=n.currentBattle.double?2:1;R.length>a&&(n.pushPhase(new cn(0,n.currentBattle.double)),n.currentBattle.double&&n.pushPhase(new cn(1,n.currentBattle.double)))}this.end()}showEnemyTrainer(){const A=n.currentBattle.trainer;A&&(A.alpha=0,A.x+=16,A.y-=16,A.setVisible(!0),n.tweens.add({targets:A,x:"-=16",y:"+=16",alpha:1,ease:"Sine.easeInOut",duration:750,onComplete:N(()=>{A.untint(100,"Sine.easeOut"),A.playAnim()},"onComplete")}))}hideEnemyTrainer(){n.tweens.add({targets:n.currentBattle.trainer,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:750})}};N(bg,"MysteryEncounterBattlePhase");let iP=bg;const kg=class kg extends aE{constructor(A=!1){super(),this.addHealPhase=A}start(){super.start();const A=n.currentBattle.mysteryEncounter;A.doContinueEncounter?A.doContinueEncounter().then(()=>{this.end()}):n.executeWithSeedOffset(()=>{A.onRewards?A.onRewards().then(()=>{this.doEncounterRewardsAndContinue()}):this.doEncounterRewardsAndContinue()},n.currentBattle.waveIndex*1e3)}doEncounterRewardsAndContinue(){const A=n.currentBattle.mysteryEncounter;A.doEncounterExp&&A.doEncounterExp(),A.doEncounterRewards?A.doEncounterRewards():this.addHealPhase&&(n.tryRemovePhase(s=>s instanceof _O),n.unshiftPhase(new _O(0,void 0,{fillRemaining:!1,rerollMultiplier:-1}))),n.pushPhase(new rP),this.end()}};N(kg,"MysteryEncounterRewardsPhase");let ES=kg;const Zg=class Zg extends aE{constructor(){var A,s;super(),this.FIRST_DIALOGUE_PROMPT_DELAY=750,this.onPostOptionSelect=(s=(A=n.currentBattle.mysteryEncounter)==null?void 0:A.selectedOption)==null?void 0:s.onPostOptionPhase}start(){var A;super.start(),this.onPostOptionSelect?n.executeWithSeedOffset(async()=>await this.onPostOptionSelect().then(s=>{(ve(s)||s)&&this.continueEncounter()}),((A=n.currentBattle.mysteryEncounter)==null?void 0:A.getSeedOffset())*2e3):this.continueEncounter()}continueEncounter(){var R,a,i;const A=N(()=>{n.pushPhase(new si),this.end()},"endPhase"),s=(i=(a=(R=n.currentBattle)==null?void 0:R.mysteryEncounter)==null?void 0:a.dialogue)==null?void 0:i.outro;if(s&&s.length>0){let r=0;const L=N(()=>{const o=r===s.length-1?A:L,l=s[r];let C=null;const M=mA(l.text);l.speaker&&(C=mA(l.speaker)),r++,n.ui.setMode(Ie.MESSAGE),C?n.ui.showDialogue(M??"",C,null,o,0,r===1?this.FIRST_DIALOGUE_PROMPT_DELAY:0):n.ui.showText(M??"",null,o,r===1?this.FIRST_DIALOGUE_PROMPT_DELAY:0,!0)},"showNextDialogue");L()}else A()}};N(Zg,"PostMysteryEncounterPhase");let rP=Zg;const Xg=class Xg extends Ts{constructor(A,s,R,a=!1){super(A),this.anim=R,this.targetIndex=s,this.playOnEmptyField=a}setAnimation(A){this.anim=A}start(){const A=this.targetIndex!==void 0?(this.player?n.getEnemyField():n.getPlayerField())[this.targetIndex]:this.getPokemon();new qI(this.anim,this.getPokemon(),A).play(!1,()=>{this.end()})}};N(Xg,"CommonAnimPhase");let Ns=Xg;const Qg=class Qg extends Ts{constructor(A){super(A)}start(){super.start();const A=this.getPokemon();A.isActive(!0)&&A.lapseTags(JE.AFTER_MOVE),n.arena.setIgnoreAbilities(!1),this.end()}};N(Qg,"MoveEndPhase");let SO=Qg;const Jg=class Jg extends Ts{constructor(A,s,R){super(A),this.move=R,this.targetIndex=s}start(){super.start();const A=this.getUserPokemon(),s=this.getTargetPokemon(),R=this.move.getMove();if(!s||!R.isChargingMove())return console.warn("Invalid parameters for MoveChargePhase"),super.end();new zS(R.chargeAnim,R.id,A).play(!1,()=>{R.showChargeText(A,s),h6(Dt,A,s,R).then(()=>{A.addTag(y.CHARGING,1,R.id,A.id),this.end()})})}end(){const A=this.getUserPokemon(),s=this.move.getMove();if(s.isChargingMove()){const R=new Lt(!1);h6(Vu,A,null,s,R),R.value?(n.tryRemovePhase(a=>a instanceof SO&&a.getPokemon()===A),n.unshiftPhase(new wA(A,[this.targetIndex],this.move,!1))):A.getMoveQueue().push({move:s.id,targets:[this.targetIndex]}),A.pushMoveHistory({move:this.move.moveId,targets:[this.targetIndex],result:oA.OTHER})}super.end()}getUserPokemon(){return(this.player?n.getPlayerField():n.getEnemyField())[this.fieldIndex]}getTargetPokemon(){return n.getField(!0).find(A=>this.targetIndex===A.getBattlerIndex())}};N(Jg,"MoveChargePhase");let LP=Jg;const $g=class $g extends Ts{constructor(A,s=!1){super(A),this.passive=s}start(){super.start();const A=this.getPokemon();A&&(n.abilityBar.showAbility(A,this.passive),A!=null&&A.battleData&&(A.battleData.abilityRevealed=!0)),this.end()}};N($g,"ShowAbilityPhase");let jn=$g;const zg=class zg extends dE{constructor(A,s,R,a=!1,i=!1){super(),this.failed=!1,this.cancelled=!1,this.pokemon=A,this.targets=s,this.move=R,this.followUp=a,this.ignorePp=i}get pokemon(){return this._pokemon}set pokemon(A){this._pokemon=A}get move(){return this._move}set move(A){this._move=A}get targets(){return this._targets}set targets(A){this._targets=A}canMove(A=!1){return this.pokemon.isActive(!0)&&this.move.isUsable(this.pokemon,this.ignorePp,A)&&!!this.targets.length}fail(){this.failed=!0}cancel(){this.cancelled=!0}start(){if(super.start(),console.log(t[this.move.moveId]),!this.canMove(!0))return this.pokemon.isActive(!0)&&(this.fail(),this.showMoveText(),this.showFailedText()),this.end();this.pokemon.turnData.acted=!0,this.followUp&&(this.pokemon.turnData.hitsLeft=-1,this.pokemon.turnData.hitCount=0),this.followUp||this.move.getMove().checkFlag(tA.IGNORE_ABILITIES,this.pokemon,null)&&n.arena.setIgnoreAbilities(!0,this.pokemon.getBattlerIndex()),this.resolveRedirectTarget(),this.resolveCounterAttackTarget(),this.resolvePreMoveStatusEffects(),this.lapsePreMoveAndMoveTags(),this.failed||this.cancelled||this.resolveFinalPreMoveCancellationChecks(),this.cancelled||this.failed?this.handlePreMoveFailures():this.move.getMove().isChargingMove()&&!this.pokemon.getTag(y.CHARGING)?this.chargeMove():this.useMove(),this.end()}resolveFinalPreMoveCancellationChecks(){const A=this.getActiveTargetPokemon(),s=this.pokemon.getMoveQueue();(A.length===0||s.length&&s[0].move===t.NONE)&&(this.showMoveText(),this.showFailedText(),this.cancel())}getActiveTargetPokemon(){return n.getField(!0).filter(A=>this.targets.includes(A.getBattlerIndex()))}resolvePreMoveStatusEffects(){if(!this.followUp&&this.pokemon.status&&!this.pokemon.status.isPostTurn()){this.pokemon.status.incrementTurn();let A=!1,s=!1;switch(this.pokemon.status.effect){case ne.PARALYSIS:A=(!this.pokemon.randSeedInt(4)||Ye.STATUS_ACTIVATION_OVERRIDE===!0)&&Ye.STATUS_ACTIVATION_OVERRIDE!==!1;break;case ne.SLEEP:MA(eo,this.pokemon,null,this.move.getMove());const R=new Et(this.pokemon.status.sleepTurnsRemaining??0);ut(JU,this.pokemon,null,!1,this.pokemon.status.effect,R),this.pokemon.status.sleepTurnsRemaining=R.value,s=this.pokemon.status.sleepTurnsRemaining<=0,A=!s&&!this.pokemon.getTag(y.BYPASS_SLEEP);break;case ne.FREEZE:s=!!this.move.getMove().findAttr(a=>a instanceof eE&&a.selfTarget&&a.isOfEffect(ne.FREEZE))||!this.pokemon.randSeedInt(5)&&Ye.STATUS_ACTIVATION_OVERRIDE!==!0||Ye.STATUS_ACTIVATION_OVERRIDE===!1,A=!s;break}A?(this.cancel(),n.queueMessage(m6(this.pokemon.status.effect,te(this.pokemon))),n.unshiftPhase(new Ns(this.pokemon.getBattlerIndex(),void 0,lA.POISON+(this.pokemon.status.effect-1)))):s&&(n.queueMessage(La(this.pokemon.status.effect,te(this.pokemon))),this.pokemon.resetStatus(),this.pokemon.updateInfo())}}lapsePreMoveAndMoveTags(){this.pokemon.lapseTags(JE.PRE_MOVE),!this.followUp&&this.canMove()&&!this.cancelled&&this.pokemon.lapseTags(JE.MOVE)}useMove(){var l,C,M;const A=this.getActiveTargetPokemon(),s=this.pokemon.getMoveQueue();if(n.triggerPokemonFormChange(this.pokemon,yT),this.move.getMove().hasAttr(EI)){const D=n.arena.findTags(H=>H.tagType===ge.FUTURE_SIGHT),_=n.arena.findTags(H=>H.tagType===ge.DOOM_DESIRE);let P=!1;const h=A[0].getBattlerIndex();for(const H of D)if(H.targetIndex===h){P=!0;break}for(const H of _)if(H.targetIndex===h){P=!0;break}if(P)return this.showMoveText(),this.showFailedText(),this.end()}if(this.showMoveText(),s.length>0&&(this.ignorePp=((l=s.shift())==null?void 0:l.ignorePP)??!1),((C=this.pokemon.getTag(y.CHARGING))==null?void 0:C.sourceMove)===this.move.moveId&&this.pokemon.lapseTag(y.CHARGING),!this.ignorePp){const D=1+this.getPpIncreaseFromPressure(A);this.move.usePp(D),n.eventTarget.dispatchEvent(new KT((M=this.pokemon)==null?void 0:M.id,this.move.getMove(),this.move.ppUsed))}const a=this.move.getMove(),i=a.applyConditions(this.pokemon,A[0],a),r=n.arena.isMoveWeatherCancelled(this.pokemon,a),L=n.arena.isMoveTerrainCancelled(this.pokemon,this.targets,a),o=i&&!r&&!L;if(we[this.move.moveId].hasAttr(AL)||o&&(n.currentBattle.lastMove=this.move.moveId),o)XO(Qa,this.pokemon,null,this.move.getMove()),n.unshiftPhase(new PR(this.pokemon.getBattlerIndex(),this.targets,this.move));else{[t.ROAR,t.WHIRLWIND,t.TRICK_OR_TREAT,t.FORESTS_CURSE].includes(this.move.moveId)&&XO(Qa,this.pokemon,null,this.move.getMove()),this.pokemon.pushMoveHistory({move:this.move.moveId,targets:this.targets,result:oA.FAIL,virtual:this.move.virtual});let D;const _=a.getFailedText(this.pokemon,A[0],a,new Lt(!1));_?D=_:L&&(D=Vk(this.pokemon,n.arena.getTerrainType())),this.showFailedText(D),this.pokemon.lapseTags(JE.MOVE_EFFECT)}this.move.getMove().hasFlag(tA.DANCE_MOVE)&&!this.followUp&&n.getField(!0).forEach(D=>{PJ(wU,D,this.move,this.pokemon,this.targets)})}chargeMove(){const A=this.move.getMove(),s=this.getActiveTargetPokemon();if(A.applyConditions(this.pokemon,s[0],A))XO(Qa,this.pokemon,null,this.move.getMove()),this.showMoveText(),n.unshiftPhase(new LP(this.pokemon.getBattlerIndex(),this.targets[0],this.move));else{this.pokemon.pushMoveHistory({move:this.move.moveId,targets:this.targets,result:oA.FAIL,virtual:this.move.virtual});const R=A.getFailedText(this.pokemon,s[0],A,new Lt(!1));this.showMoveText(),this.showFailedText(R??void 0),this.pokemon.lapseTags(JE.MOVE_EFFECT)}}end(){!this.followUp&&this.canMove()&&n.unshiftPhase(new SO(this.pokemon.getBattlerIndex())),super.end()}getPpIncreaseFromPressure(A){return this.pokemon.getOpponents().filter(R=>A.includes(R)&&R.isActive(!0)&&R.hasAbilityWithAttr(zU)).length}resolveRedirectTarget(){if(this.targets.length===1){const A=this.targets[0],s=new Et(A);n.getField(!0).filter(a=>a!==this.pokemon).forEach(a=>ut(XU,a,null,!1,this.move.moveId,s));let R=A!==s.value;this.pokemon.getOpponents().forEach(a=>{const i=a.getTag(au);i&&(!i.powder||!this.pokemon.isOfType(I.GRASS)&&!this.pokemon.hasAbility(O.OVERCOAT))&&(s.value=a.getBattlerIndex(),R=!1)}),A!==s.value&&(this.move.getMove().getAttrs(va).forEach(i=>{(!i.abilitiesOnly||R)&&(s.value=A)}),this.pokemon.hasAbilityWithAttr(Xr)&&(s.value=A,n.unshiftPhase(new jn(this.pokemon.getBattlerIndex(),this.pokemon.getPassiveAbility().hasAttr(Xr)))),this.targets[0]=s.value)}}resolveCounterAttackTarget(){var A;if(this.targets.length===1&&this.targets[0]===gt.ATTACKER){if(this.pokemon.turnData.attacksReceived.length&&(this.targets[0]=this.pokemon.turnData.attacksReceived[0].sourceBattlerIndex,n.currentBattle.double&&this.move.getMove().hasFlag(tA.REDIRECT_COUNTER)&&n.getField()[this.targets[0]].hp===0)){const s=this.pokemon.isPlayer()?n.getEnemyField():n.getPlayerField();this.targets[0]=((A=s.find(R=>R.hp>0))==null?void 0:A.getBattlerIndex())??gt.ATTACKER}this.targets[0]===gt.ATTACKER&&(this.fail(),this.showMoveText(),this.showFailedText())}}handlePreMoveFailures(){var A,s,R;if(this.cancelled||this.failed){if(this.failed){const a=this.ignorePp?0:1;a&&this.move.usePp(),n.eventTarget.dispatchEvent(new KT((A=this.pokemon)==null?void 0:A.id,this.move.getMove(),a))}this.cancelled&&((R=(s=this.pokemon.summonData)==null?void 0:s.tags)!=null&&R.find(a=>a.tagType===y.FRENZY))&&Kn(this.pokemon,this.move.getMove()),this.pokemon.pushMoveHistory({move:t.NONE,result:oA.FAIL,targets:this.targets}),this.pokemon.lapseTags(JE.MOVE_EFFECT),this.pokemon.lapseTags(JE.AFTER_MOVE),this.pokemon.getMoveQueue().shift()}}showMoveText(){this.move.moveId!==t.NONE&&(this.pokemon.getTag(y.RECHARGING)||this.pokemon.getTag(y.INTERRUPTED)||(n.queueMessage(u.t("battle:useMove",{pokemonNameWithAffix:te(this.pokemon),moveName:this.move.getName()}),500),MA(ya,this.pokemon,this.pokemon.getOpponents()[0],this.move.getMove())))}showFailedText(A){n.queueMessage(A??u.t("battle:attackFailed"))}};N(zg,"MovePhase");let wA=zg;var i8=(E=>(E.EGG_COUNT_CHANGED="onEggCountChanged",E))(i8||{});const qg=class qg extends Event{constructor(A){super("onEggCountChanged"),this.eggCount=A}};N(qg,"EggCountChangedEvent");let NP=qg;const jg=class jg extends Phaser.GameObjects.Container{constructor(A){super(n,0,0),this.WINDOW_DEFAULT_WIDTH=37,this.WINDOW_MEDIUM_WIDTH=42,this.WINDOW_HEIGHT=26,this.onEggCountChangedEvent=R=>this.onEggCountChanged(R),this.eggCount=A,n.ui.getHandler().eventTarget.addEventListener(i8.EGG_COUNT_CHANGED,this.onEggCountChangedEvent),this.setup()}setup(){const A=this.eggCount>9?this.WINDOW_MEDIUM_WIDTH:this.WINDOW_DEFAULT_WIDTH;this.eggCountWindow=Gt(5,5,A,this.WINDOW_HEIGHT),this.setVisible(this.eggCount>1),this.add(this.eggCountWindow);const s=n.add.sprite(19,18,"egg","egg_0");s.setScale(.32),this.eggCountText=le(28,13,`${this.eggCount}`,Q.MESSAGE,{fontSize:"66px"}),this.eggCountText.setName("text-egg-count"),this.add(s),this.add(this.eggCountText)}setWindowToDefaultSize(){this.eggCountWindow.setSize(this.WINDOW_DEFAULT_WIDTH,this.WINDOW_HEIGHT)}onEggCountChanged(A){var a;const s=A;if(!s||!((a=this.eggCountText)!=null&&a.data))return;const R=s.eggCount;R<10&&this.setWindowToDefaultSize(),R>0?this.eggCountText.setText(R.toString()):this.eggCountText.setVisible(!1)}};N(jg,"EggCounterContainer");let TP=jg;const I9="↑",Ub="↓",eK=class eK extends Vs{constructor(A){super(A),this.scrollCursor=0,this.scale=.1666666667}getWindowHeight(){var A,s;return(Math.min((((A=this.config)==null?void 0:A.options)||[]).length,((s=this.config)==null?void 0:s.maxOptions)||99)+1)*96*this.scale}setup(){const A=this.getUi();this.optionSelectContainer=n.add.container(n.game.canvas.width/6-1,-48),this.optionSelectContainer.setName(`option-select-${this.mode?Ie[this.mode]:"UNKNOWN"}`),this.optionSelectContainer.setVisible(!1),A.add(this.optionSelectContainer),this.optionSelectBg=Gt(0,0,this.getWindowWidth(),this.getWindowHeight()),this.optionSelectBg.setName("option-select-bg"),this.optionSelectBg.setOrigin(1,1),this.optionSelectContainer.add(this.optionSelectBg),this.optionSelectIcons=[],this.scale=Hn(Q.WINDOW,n.uiTheme).scale,this.setCursor(0)}setupOptions(){var R,a,i,r,L,o,l,C,M,D;const A=((R=this.config)==null?void 0:R.options)??[];let s;if(A.length>=10&&n.ui.getMode()===Ie.AUTO_COMPLETE){const _=A.length,P=this.scrollCursor,h=Math.min(_,P+(!P||this.scrollCursor+(((a=this.config)==null?void 0:a.maxOptions)-1)>=_?((i=this.config)==null?void 0:i.maxOptions)-1:((r=this.config)==null?void 0:r.maxOptions)-2));s=A.slice(P,h+2)}else s=A;this.optionSelectText&&this.optionSelectText.destroy(),(L=this.optionSelectIcons)!=null&&L.length&&(this.optionSelectIcons.map(_=>_.destroy()),this.optionSelectIcons.splice(0,this.optionSelectIcons.length)),this.optionSelectText=le(0,0,s.map(_=>_.item?`    ${_.label}`:_.label).join(`
`),Q.WINDOW,{maxLines:s.length}),this.optionSelectText.setLineSpacing(this.scale*72),this.optionSelectText.setName("text-option-select"),this.optionSelectText.setLineSpacing(12),this.optionSelectContainer.add(this.optionSelectText),this.optionSelectContainer.setPosition(n.game.canvas.width/6-1-(((o=this.config)==null?void 0:o.xOffset)||0),-48+(((l=this.config)==null?void 0:l.yOffset)||0)),this.optionSelectBg.width=Math.max(this.optionSelectText.displayWidth+24,this.getWindowWidth()),(C=this.config)!=null&&C.options&&((M=this.config)==null?void 0:M.options.length)>((D=this.config)==null?void 0:D.maxOptions)&&this.optionSelectText.setText(this.getOptionsWithScroll().map(_=>_.label).join(`
`)),this.optionSelectBg.height=this.getWindowHeight(),this.optionSelectText.setPositionRelative(this.optionSelectBg,12+24*this.scale,2+42*this.scale),s.forEach((_,P)=>{if(_.item){const h=n.add.sprite(0,0,"items",_.item);if(h.setScale(3*this.scale),this.optionSelectIcons.push(h),this.optionSelectContainer.add(h),h.setPositionRelative(this.optionSelectText,36*this.scale,7+P*(114*this.scale-3)),_.item==="candy"){const H=n.add.sprite(0,0,"items","candy_overlay");H.setScale(3*this.scale),this.optionSelectIcons.push(H),this.optionSelectContainer.add(H),H.setPositionRelative(this.optionSelectText,36*this.scale,7+P*(114*this.scale-3)),_.itemArgs&&(h.setTint(js(cs(_.itemArgs[0]))),H.setTint(js(cs(_.itemArgs[1]))))}}})}show(A){var s;return!A.length||!A[0].hasOwnProperty("options")||!A[0].options.length?!1:(super.show(A),this.config=A[0],this.setupOptions(),n.ui.bringToTop(this.optionSelectContainer),this.optionSelectContainer.setVisible(!0),this.scrollCursor=0,this.setCursor(0),this.config.delay&&(this.blockInput=!0,this.optionSelectText.setAlpha(.5),(s=this.cursorObj)==null||s.setAlpha(.8),n.time.delayedCall(st(this.config.delay),()=>this.unblockInput())),!0)}processInput(A){var r,L,o,l,C,M,D,_;const s=this.getUi();let R=!1;const a=this.getOptionsWithScroll();let i=!0;if(A===k.ACTION||A===k.CANCEL){if(this.blockInput)return s.playError(),!1;if(R=!0,A===k.CANCEL)if((r=this.config)!=null&&r.maxOptions&&this.config.options.length>this.config.maxOptions)this.scrollCursor=this.config.options.length-this.config.maxOptions+1,this.cursor=a.length-1;else if(!((L=this.config)!=null&&L.noCancel))this.setCursor(a.length-1);else return!1;const P=(o=this.config)==null?void 0:o.options[this.cursor+(this.scrollCursor-(this.scrollCursor?1:0))];P!=null&&P.handler()?(P.keepOpen||this.clear(),i=!P.overrideSound):s.playError()}else if(A===k.SUBMIT&&s.getMode()===Ie.AUTO_COMPLETE){R=!0;const P=(l=this.config)==null?void 0:l.options[this.cursor+(this.scrollCursor-(this.scrollCursor?1:0))];P!=null&&P.handler()?(P.keepOpen||this.clear(),i=!P.overrideSound):s.playError()}else{switch(A){case k.UP:this.cursor?R=this.setCursor(this.cursor-1):this.cursor===0&&(R=this.setCursor(a.length-1));break;case k.DOWN:this.cursor<a.length-1?R=this.setCursor(this.cursor+1):R=this.setCursor(0);break}(C=this.config)!=null&&C.supportHover&&((_=(D=(M=this.config)==null?void 0:M.options[this.cursor+(this.scrollCursor-(this.scrollCursor?1:0))])==null?void 0:D.onHover)==null||_.call(D))}return R&&i&&s.playSelect(),R}unblockInput(){var A;this.blockInput&&(this.blockInput=!1,this.optionSelectText.setAlpha(1),(A=this.cursorObj)==null||A.setAlpha(1))}getOptionsWithScroll(){var i;if(!this.config)return[];const A=this.config.options.slice(0);if(!this.config.maxOptions||this.config.options.length<this.config.maxOptions)return A;const s=A.length,R=this.scrollCursor,a=Math.min(s,R+(!R||this.scrollCursor+(this.config.maxOptions-1)>=s?this.config.maxOptions-1:this.config.maxOptions-2));return(i=this.config)!=null&&i.maxOptions&&A.length>this.config.maxOptions&&(A.splice(a,s),A.splice(0,R),R&&A.unshift({label:I9,handler:N(()=>!0,"handler")}),a<s&&A.push({label:Ub,handler:N(()=>!0,"handler")})),A}setCursor(A){var i;const s=this.cursor!==A;let R=!1;const a=this.getOptionsWithScroll();if(s&&((i=this.config)!=null&&i.maxOptions)&&this.config.options.length>this.config.maxOptions)if(Math.abs(A-this.cursor)===a.length-1){const r=this.config.options.length;this.scrollCursor=A?r-(this.config.maxOptions-1):0,this.setupOptions()}else{const r=A&&A>this.cursor;r?a[A].label===Ub&&(R=!0,this.scrollCursor++):!A&&this.scrollCursor&&(R=!0,this.scrollCursor--),R&&this.scrollCursor===1&&(this.scrollCursor+=r?1:-1)}return R?this.setupOptions():this.cursor=A,this.cursorObj||(this.cursorObj=n.add.image(0,0,"cursor"),this.optionSelectContainer.add(this.cursorObj)),this.cursorObj.setScale(this.scale*6),this.cursorObj.setPositionRelative(this.optionSelectBg,12,102*this.scale+this.cursor*(114*this.scale-3)),s}clear(){super.clear(),this.config=null,this.optionSelectContainer.setVisible(!1),this.scrollCursor=0,this.eraseCursor()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};N(eK,"AbstractOptionSelectUiHandler");let sS=eK;const _N=class _N extends sS{constructor(){super(Ie.CONFIRM)}getWindowWidth(){return _N.windowWidth}show(A){if(A.length===4&&A[0]instanceof Function&&A[1]instanceof Function&&A[2]instanceof Function&&A[3]==="fullParty"){const s={options:[{label:u.t("partyUiHandler:SUMMARY"),handler:N(()=>(A[0](),!0),"handler")},{label:u.t("menu:yes"),handler:N(()=>(A[1](),!0),"handler")},{label:u.t("menu:no"),handler:N(()=>(A[2](),!0),"handler")}],delay:A.length>=8&&A[7]!==null?A[7]:0};super.show([s]),this.switchCheck=A.length>=5&&A[4]!==null&&A[4];const R=A.length>=6&&A[5]!==null?A[5]:0,a=A.length>=7&&A[6]!==null?A[6]:0;return this.optionSelectContainer.setPosition(n.game.canvas.width/6-1+R,-48+a),this.setCursor(this.switchCheck?this.switchCheckCursor:0),!0}else if(A.length>=2&&A[0]instanceof Function&&A[1]instanceof Function){const s={options:[{label:u.t("menu:yes"),handler:N(()=>(A[0](),!0),"handler")},{label:u.t("menu:no"),handler:N(()=>(A[1](),!0),"handler")}],delay:A.length>=6&&A[5]!==null?A[5]:0,noCancel:A.length>=7&&A[6]!==null?A[6]:!1};super.show([s]),this.switchCheck=A.length>=3&&A[2]!==null&&A[2];const R=A.length>=4&&A[3]!==null?A[3]:0,a=A.length>=5&&A[4]!==null?A[4]:0;return this.optionSelectContainer.setPosition(n.game.canvas.width/6-1+R,-48+a),this.setCursor(this.switchCheck?this.switchCheckCursor:0),!0}return!1}processInput(A){var s;return A===k.CANCEL&&this.blockInput&&!((s=this.config)!=null&&s.noCancel)&&this.unblockInput(),super.processInput(A)}setCursor(A){const s=super.setCursor(A);return s&&this.switchCheck&&(this.switchCheckCursor=this.cursor),s}};N(_N,"ConfirmUiHandler"),_N.windowWidth=48;let DC=_N;const sn=24,Fi=[[0,-1],[.825,-.5],[.825,.5],[-.825,-.5],[-.825,.5],[0,1]],a9=-3,Rl=1,ub=[0,Rl,-Rl,Rl,-Rl,a9],i9=[0,5,0,5,0,0],pi=[0,1,2,5,4,3],Ol=new Array(12).fill(null).map(()=>0),tK=class tK extends Phaser.GameObjects.Container{constructor(A,s,R){super(n,A,s),this.showDiff=!!R,this.setup()}setup(){this.setName("stats");const A=new Array(6).fill(null).map((i,r)=>[sn*Fi[pi[r]][0],sn*Fi[pi[r]][1]]).flat(),s=n.add.polygon(48,44,A,14213360,.625);s.setOrigin(0,0);const R=n.add.polygon(s.x,s.y,A).setStrokeStyle(1,4735056);R.setOrigin(0,0);const a=[[0,-1,0,1],[-.825,-.5,.825,.5],[.825,-.5,-.825,.5]].map(i=>{const r=new Phaser.GameObjects.Line(n,s.x,s.y,sn*i[0],sn*i[1],sn*i[2],sn*i[3],16777215).setLineWidth(.5);return r.setOrigin(0,0),r});this.ivChart=n.add.polygon(s.x,s.y,Ol,10016928,.75),this.ivChart.setOrigin(0,0),this.add(s),a.map(i=>this.add(i)),this.add(this.ivChart),this.add(R),this.ivStatValueTexts=[];for(const i of VO){const r=le(s.x+sn*Fi[i][0]*1.325+(this.showDiff?0:ub[i]),s.y+sn*Fi[i][1]*1.325-4+(this.showDiff?0:i9[i]),u.t(hE(i)),Q.TOOLTIP_CONTENT);r.setOrigin(.5),this.ivStatValueTexts[i]=wE(r.x-(this.showDiff?0:ub[i]),r.y+8,"0",Q.TOOLTIP_CONTENT),this.ivStatValueTexts[i].setOrigin(.5),this.add(r),this.add(this.ivStatValueTexts[i])}}updateIvs(A,s){if(A){const R=new Array(6).fill(null).map((l,C)=>[A[pi[C]]/31*sn*Fi[pi[C]][0],A[pi[C]]/31*sn*Fi[pi[C]][1]]).flat(),a=this.statsIvsCache||Ol,i=aA(Q.SUMMARY_GOLD,!1,n.uiTheme);this.statsIvsCache=R.slice(0),this.ivStatValueTexts.map((l,C)=>{let M="";A[C]===31?M+=`[color=${i}][shadow]${A[C].toString()}[/shadow][/color]`:M=A[C].toString(),this.showDiff&&s&&(s[C]<A[C]?M+=` ([color=${aA(Q.SUMMARY_BLUE,!1,n.uiTheme)}][shadow=${aA(Q.SUMMARY_BLUE,!0,n.uiTheme)}]+${A[C]-s[C]}[/shadow][/color])`:M+=" (-)"),l.setText(`[shadow]${M}[/shadow]`)});const r=A.every(l=>l===31)?parseInt(i.substr(1),16):10016928,L=this.ivChart.fillColor,o=L!==r?[Phaser.Display.Color.IntegerToColor(L),Phaser.Display.Color.IntegerToColor(r)]:null;n.tweens.addCounter({from:0,to:1,duration:1e3,ease:"Cubic.easeOut",onUpdate:N(l=>{const C=l.getValue(),M=R.map((D,_)=>D*C+a[_]*(1-C));o&&this.ivChart.setFillStyle(Phaser.Display.Color.ValueToColor(Phaser.Display.Color.Interpolate.ColorWithColor(o[0],o[1],1,C)).color,.75),this.ivChart.setTo(M)},"onUpdate")})}else this.statsIvsCache=Ol,this.ivChart.setTo(Ol)}};N(tK,"StatsContainer");let MC=tK;const nl={pt:{infoContainerTextSize:"60px",infoContainerLabelXPos:-15,infoContainerTextXPos:-12}},AK=class AK extends Phaser.GameObjects.Container{constructor(A=372,s=66){super(n,A,s),this.infoWindowWidth=104,this.numCharsBeforeCutoff=16,this.initialX=A}setup(){this.setName("pkmn-info");const A=u.resolvedLanguage,s=Object.keys(nl).find(l=>A==null?void 0:A.includes(l)),R=nl[s];this.infoBg=Gt(0,0,this.infoWindowWidth,132),this.infoBg.setOrigin(.5,.5),this.infoBg.setName("window-info-bg"),this.pokemonMovesContainer=n.add.container(6,14),this.pokemonMovesContainer.setName("pkmn-moves"),this.movesContainerInitialX=this.pokemonMovesContainer.x,this.pokemonMovesContainers=[],this.pokemonMoveBgs=[],this.pokemonMoveLabels=[];const a=Gt(0,0,58,52);a.setOrigin(1,0),a.setName("window-moves-bg"),this.pokemonMovesContainer.add(a);const i=le(-a.width/2,6,u.t("pokemonInfoContainer:moveset"),Q.WINDOW,{fontSize:"64px"});i.setOrigin(.5,0),i.setName("text-moves"),this.pokemonMovesContainer.add(i);for(let l=0;l<4;l++){const C=n.add.container(-6,18+7*l);C.setScale(.5),C.setName("move");const M=n.add.nineslice(0,0,"type_bgs","unknown",92,14,2,2,2,2);M.setOrigin(1,0),M.setName("nineslice-move-bg");const D=le(-M.width/2,0,"-",Q.PARTY);D.setOrigin(.5,0),D.setName("text-move-label"),this.pokemonMoveBgs.push(M),this.pokemonMoveLabels.push(D),C.add(M),C.add(D),this.pokemonMovesContainers.push(C),this.pokemonMovesContainer.add(C)}this.add(this.pokemonMovesContainer),this.statsContainer=new MC(-48,-64,!0),this.add(this.infoBg),this.add(this.statsContainer);const r=(R==null?void 0:R.infoContainerLabelXPos)||-18,L=(R==null?void 0:R.infoContainerTextXPos)||-14,o=(R==null?void 0:R.infoContainerTextSize)||"64px";this.pokemonFormLabelText=le(r,19,u.t("pokemonInfoContainer:form"),Q.WINDOW,{fontSize:o}),this.pokemonFormLabelText.setOrigin(1,0),this.pokemonFormLabelText.setVisible(!1),this.add(this.pokemonFormLabelText),this.pokemonFormText=le(L,19,"",Q.WINDOW,{fontSize:o}),this.pokemonFormText.setOrigin(0,0),this.pokemonFormText.setVisible(!1),this.add(this.pokemonFormText),this.pokemonGenderText=le(-42,-61,"",Q.WINDOW,{fontSize:o}),this.pokemonGenderText.setOrigin(0,0),this.pokemonGenderText.setVisible(!1),this.pokemonGenderText.setName("text-pkmn-gender"),this.add(this.pokemonGenderText),this.pokemonGenderNewText=le(-36,-61,"",Q.WINDOW,{fontSize:"64px"}),this.pokemonGenderNewText.setOrigin(0,0),this.pokemonGenderNewText.setVisible(!1),this.pokemonGenderNewText.setName("text-pkmn-new-gender"),this.add(this.pokemonGenderNewText),this.pokemonAbilityLabelText=le(r,29,u.t("pokemonInfoContainer:ability"),Q.WINDOW,{fontSize:o}),this.pokemonAbilityLabelText.setOrigin(1,0),this.pokemonAbilityLabelText.setName("text-pkmn-ability-label"),this.add(this.pokemonAbilityLabelText),this.pokemonAbilityText=le(L,29,"",Q.WINDOW,{fontSize:o}),this.pokemonAbilityText.setOrigin(0,0),this.pokemonAbilityText.setName("text-pkmn-ability"),this.add(this.pokemonAbilityText),this.pokemonNatureLabelText=le(r,39,u.t("pokemonInfoContainer:nature"),Q.WINDOW,{fontSize:o}),this.pokemonNatureLabelText.setOrigin(1,0),this.pokemonNatureLabelText.setName("text-pkmn-nature-label"),this.add(this.pokemonNatureLabelText),this.pokemonNatureText=wE(L,39,"",Q.WINDOW,{fontSize:o,lineSpacing:3,maxLines:2}),this.pokemonNatureText.setOrigin(0,0),this.pokemonNatureText.setName("text-pkmn-nature"),this.add(this.pokemonNatureText),this.pokemonShinyIcon=n.add.image(-43.5,48.5,"shiny_star"),this.pokemonShinyIcon.setOrigin(0,0),this.pokemonShinyIcon.setScale(.75),this.pokemonShinyIcon.setInteractive(new Phaser.Geom.Rectangle(0,0,12,15),Phaser.Geom.Rectangle.Contains),this.pokemonShinyIcon.setName("img-pkmn-shiny-icon"),this.add(this.pokemonShinyIcon),this.pokemonShinyNewIcon=le(this.pokemonShinyIcon.x+12,this.pokemonShinyIcon.y,"",Q.WINDOW,{fontSize:o}),this.pokemonShinyNewIcon.setOrigin(0,0),this.pokemonShinyNewIcon.setName("text-pkmn-shiny-new-icon"),this.add(this.pokemonShinyNewIcon),this.pokemonShinyNewIcon.setVisible(!1),this.pokemonFusionShinyIcon=n.add.image(this.pokemonShinyIcon.x,this.pokemonShinyIcon.y,"shiny_star_2"),this.pokemonFusionShinyIcon.setOrigin(0,0),this.pokemonFusionShinyIcon.setScale(.75),this.pokemonFusionShinyIcon.setName("img-pkmn-fusion-shiny-icon"),this.add(this.pokemonFusionShinyIcon),this.setVisible(!1)}show(A,s=!1,R=1,a,i,r=!1){return new Promise(L=>{var b,x,$;a||(a=n.gameData.dexData[A.species.speciesId]),i||(i=n.gameData.starterData[A.species.getRootSpeciesId()]);const o=BigInt(a.caughtAttr);if(A.gender>at.GENDERLESS){this.pokemonGenderText.setText(SL(A.gender)),this.pokemonGenderText.setColor($n(A.gender)),this.pokemonGenderText.setShadowColor($n(A.gender,!0)),this.pokemonGenderText.setVisible(!0);const j=BigInt(1<<A.gender)*Xe.MALE;this.pokemonGenderNewText.setText("(+)"),this.pokemonGenderNewText.setColor(aA(Q.SUMMARY_BLUE,!1,n.uiTheme)),this.pokemonGenderNewText.setShadowColor(aA(Q.SUMMARY_BLUE,!0,n.uiTheme)),this.pokemonGenderNewText.setVisible((j&o)===BigInt(0))}else this.pokemonGenderNewText.setVisible(!1),this.pokemonGenderText.setVisible(!1);const l=($=(x=(b=A.species)==null?void 0:b.forms)==null?void 0:x[A.formIndex])==null?void 0:$.formKey,C=gL(l,"-",!1,!1)||"",M=gL(e[A.species.speciesId],"_",!0,!1);let D="";if(A.species.speciesId===e.ARCEUS)D=u.t(`pokemonInfo:Type.${C==null?void 0:C.toUpperCase()}`);else{const j=`pokemonForm:${M}${C}`;if(u.exists(j))D=u.t(j);else{const se=`pokemonForm:${gL(e[A.species.getRootSpeciesId()],"_",!0,!1)}${C}`;D=u.exists(se)?u.t(se):C}}D?(this.pokemonFormLabelText.setVisible(!0),this.pokemonFormText.setVisible(!0),(BigInt(1<<A.formIndex)*Xe.DEFAULT_FORM&o)===BigInt(0)?(this.pokemonFormLabelText.setColor(aA(Q.SUMMARY_BLUE,!1,n.uiTheme)),this.pokemonFormLabelText.setShadowColor(aA(Q.SUMMARY_BLUE,!0,n.uiTheme))):(this.pokemonFormLabelText.setColor(aA(Q.WINDOW,!1,n.uiTheme)),this.pokemonFormLabelText.setShadowColor(aA(Q.WINDOW,!0,n.uiTheme))),this.pokemonFormText.setText(D.length>this.numCharsBeforeCutoff?D.substring(0,this.numCharsBeforeCutoff-3)+"...":D),D.length>this.numCharsBeforeCutoff?(this.pokemonFormText.setInteractive(new Phaser.Geom.Rectangle(0,0,this.pokemonFormText.width,this.pokemonFormText.height),Phaser.Geom.Rectangle.Contains),this.pokemonFormText.on("pointerover",()=>n.ui.showTooltip("",D,!0)),this.pokemonFormText.on("pointerout",()=>n.ui.hideTooltip())):this.pokemonFormText.disableInteractive()):(this.pokemonFormLabelText.setVisible(!1),this.pokemonFormText.setVisible(!1),this.pokemonFormText.disableInteractive());const _=A.abilityIndex===2?Q.MONEY:Q.WINDOW;this.pokemonAbilityText.setText(A.getAbility(!0).name),this.pokemonAbilityText.setColor(aA(_,!1,n.uiTheme)),this.pokemonAbilityText.setShadowColor(aA(_,!0,n.uiTheme)),A.checkIfPlayerHasAbilityOfStarter(i.abilityAttr)?(this.pokemonAbilityLabelText.setColor(aA(Q.WINDOW,!1,n.uiTheme)),this.pokemonAbilityLabelText.setShadowColor(aA(Q.WINDOW,!0,n.uiTheme))):(this.pokemonAbilityLabelText.setColor(aA(Q.SUMMARY_BLUE,!1,n.uiTheme)),this.pokemonAbilityLabelText.setShadowColor(aA(Q.SUMMARY_BLUE,!0,n.uiTheme))),this.pokemonNatureText.setText($O(A.getNature(),!0,!1,!1,n.uiTheme));const h=a.natureAttr,H=1<<A.nature+1;h&H?(this.pokemonNatureLabelText.setColor(aA(Q.WINDOW,!1,n.uiTheme)),this.pokemonNatureLabelText.setShadowColor(aA(Q.WINDOW,!0,n.uiTheme))):(this.pokemonNatureLabelText.setColor(aA(Q.SUMMARY_BLUE,!1,n.uiTheme)),this.pokemonNatureLabelText.setShadowColor(aA(Q.SUMMARY_BLUE,!0,n.uiTheme)));const d=A.isFusion(),f=d&&A.shiny&&A.fusionShiny,B=f?A.variant:A.getVariant();if(this.pokemonShinyIcon.setTexture(`shiny_star${f?"_1":""}`),this.pokemonShinyIcon.setVisible(A.isShiny()),this.pokemonShinyIcon.setTint(yE(B)),this.pokemonShinyIcon.visible){const j=f||B?`${B===2?u.t("common:epicShiny"):B===1?u.t("common:rareShiny"):u.t("common:commonShiny")}${f?`/${A.fusionVariant===2?u.t("common:epicShiny"):A.fusionVariant===1?u.t("common:rareShiny"):u.t("common:commonShiny")}`:""}`:"";this.pokemonShinyIcon.on("pointerover",()=>n.ui.showTooltip("",`${u.t("common:shinyOnHover")}${j?` (${j})`:""}`,!0)),this.pokemonShinyIcon.on("pointerout",()=>n.ui.hideTooltip());const z=BigInt(1<<(A.shiny?1:0)),se=BigInt(1<<A.variant+4);this.pokemonShinyNewIcon.setText("(+)"),this.pokemonShinyNewIcon.setColor(aA(Q.SUMMARY_BLUE,!1,n.uiTheme)),this.pokemonShinyNewIcon.setShadowColor(aA(Q.SUMMARY_BLUE,!0,n.uiTheme));const Z=(z&o)===BigInt(0)||(se&o)===BigInt(0);this.pokemonShinyNewIcon.setVisible(!!Z)}else(o&Xe.NON_SHINY)===BigInt(0)&&(o&Xe.SHINY)===Xe.SHINY?(this.pokemonShinyNewIcon.setVisible(!0),this.pokemonShinyNewIcon.setText("(+)"),this.pokemonShinyNewIcon.setColor(aA(Q.SUMMARY_BLUE,!1,n.uiTheme)),this.pokemonShinyNewIcon.setShadowColor(aA(Q.SUMMARY_BLUE,!0,n.uiTheme))):this.pokemonShinyNewIcon.setVisible(!1);this.pokemonFusionShinyIcon.setPosition(this.pokemonShinyIcon.x,this.pokemonShinyIcon.y),this.pokemonFusionShinyIcon.setVisible(f),d&&this.pokemonFusionShinyIcon.setTint(yE(A.fusionVariant));const F=A.species.getRootSpeciesId(),W=r?a.caughtAttr?a.ivs:null:n.gameData.dexData[F].caughtAttr?n.gameData.dexData[F].ivs:null;this.statsContainer.updateIvs(A.ivs,W),r||(n.tweens.add({targets:this,duration:st(Math.floor(750/R)),ease:"Cubic.easeInOut",x:this.initialX-this.infoWindowWidth,onComplete:N(()=>{L()},"onComplete")}),s&&n.tweens.add({delay:st(Math.floor(325/R)),targets:this.pokemonMovesContainer,duration:st(Math.floor(325/R)),ease:"Cubic.easeInOut",x:this.movesContainerInitialX-57,onComplete:N(()=>L(),"onComplete")}));for(let j=0;j<4;j++){const z=j<A.moveset.length&&A.moveset[j]?A.moveset[j].getMove():null;this.pokemonMoveBgs[j].setFrame(I[z?z.type:I.UNKNOWN].toString().toLowerCase()),this.pokemonMoveLabels[j].setText(z?z.name:"-"),this.pokemonMovesContainers[j].setVisible(!!z)}this.setVisible(!0),this.shown=!0,n.hideEnemyModifierBar()})}changeToEggSummaryLayout(){const A=u.resolvedLanguage,s=Object.keys(nl).find(L=>A==null?void 0:A.includes(L)),R=nl[s],a=43,i=((R==null?void 0:R.infoContainerLabelXPos)||-18)+a,r=((R==null?void 0:R.infoContainerTextXPos)||-14)+a;this.x=this.initialX-this.infoWindowWidth,this.pokemonGenderText.setPosition(89,-2),this.pokemonGenderNewText.setPosition(79,-2),this.pokemonShinyIcon.setPosition(82,87),this.pokemonShinyNewIcon.setPosition(72,87),this.pokemonFormLabelText.setPosition(i,152),this.pokemonFormText.setPosition(r,152),this.pokemonAbilityLabelText.setPosition(i,110),this.pokemonAbilityText.setPosition(r,110),this.pokemonNatureLabelText.setPosition(i,125),this.pokemonNatureText.setPosition(r,125),this.statsContainer.setScale(.7),this.statsContainer.setPosition(30,-3),this.infoBg.setVisible(!1),this.pokemonMovesContainer.setVisible(!1)}makeRoomForConfirmUi(A=1,s=!1){const R=s?this.initialX-this.infoWindowWidth-65:this.initialX-this.infoWindowWidth-DC.windowWidth;return new Promise(a=>{n.tweens.add({targets:this,duration:st(Math.floor(150/A)),ease:"Cubic.easeInOut",x:R,onComplete:N(()=>{a()},"onComplete")})})}hide(A=1){return new Promise(s=>{if(!this.shown)return n.showEnemyModifierBar(),s();n.tweens.add({targets:this.pokemonMovesContainer,duration:st(Math.floor(750/A)),ease:"Cubic.easeInOut",x:this.movesContainerInitialX}),n.tweens.add({targets:this,duration:st(Math.floor(750/A)),ease:"Cubic.easeInOut",x:this.initialX,onComplete:N(()=>{this.setVisible(!1),this.pokemonShinyIcon.off("pointerover"),this.pokemonShinyIcon.off("pointerout"),n.ui.hideTooltip(),n.showEnemyModifierBar(),s()},"onComplete")}),this.shown=!1})}};N(AK,"PokemonInfoContainer");let RS=AK;const AO={fadeIn:L7,fadeOut:N7},qD=class qD extends aE{constructor(A,s,R){super(),this.eggLapsePhase=A,this.egg=s,this.eggsToHatchCount=R}start(){super.start(),n.ui.setModeForceTransition(Ie.EGG_HATCH_SCENE).then(()=>{if(!this.egg)return this.end();const A=n.gameData.eggs.findIndex(a=>a.id===this.egg.id);if(A===-1)return this.end();n.gameData.eggs.splice(A,1),n.fadeOutBgm(void 0,!1),this.eggHatchHandler=n.ui.getHandler(),this.eggHatchContainer=this.eggHatchHandler.eggHatchContainer,this.eggHatchBg=n.add.image(0,0,"default_bg"),this.eggHatchBg.setOrigin(0,0),this.eggHatchContainer.add(this.eggHatchBg),this.eggContainer=n.add.container(this.eggHatchBg.displayWidth/2,this.eggHatchBg.displayHeight/2),this.eggSprite=n.add.sprite(0,0,"egg",`egg_${this.egg.getKey()}`),this.eggCrackSprite=n.add.sprite(0,0,"egg_crack","0"),this.eggCrackSprite.setVisible(!1),this.eggLightraysOverlay=n.add.sprite(-this.eggHatchBg.displayWidth/2+4,-this.eggHatchBg.displayHeight/2,"egg_lightrays","3"),this.eggLightraysOverlay.setOrigin(0,0),this.eggLightraysOverlay.setVisible(!1),this.eggContainer.add(this.eggSprite),this.eggContainer.add(this.eggCrackSprite),this.eggContainer.add(this.eggLightraysOverlay),this.eggHatchContainer.add(this.eggContainer),this.eggCounterContainer=new TP(this.eggsToHatchCount),this.eggHatchContainer.add(this.eggCounterContainer);const s=N(()=>{const a=n.add.sprite(this.eggHatchBg.displayWidth/2,this.eggHatchBg.displayHeight/2,"pkmn__sub");return a.setPipeline(n.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),a},"getPokemonSprite");this.eggHatchContainer.add(this.pokemonSprite=s()),this.pokemonShinySparkle=n.add.sprite(this.pokemonSprite.x,this.pokemonSprite.y,"shiny"),this.pokemonShinySparkle.setVisible(!1),this.eggHatchContainer.add(this.pokemonShinySparkle),this.eggHatchOverlay=n.add.rectangle(0,-n.game.canvas.height/6,n.game.canvas.width/6,n.game.canvas.height/6,16777215),this.eggHatchOverlay.setOrigin(0,0),this.eggHatchOverlay.setAlpha(0),n.fieldUI.add(this.eggHatchOverlay),this.infoContainer=new RS,this.infoContainer.setup(),this.eggHatchContainer.add(this.infoContainer);const R=this.generatePokemon();R.fusionSpecies&&R.clearFusionSpecies(),this.pokemonSprite.setVisible(!1),this.pokemon=R,R.loadAssets().then(()=>{this.canSkip=!0,n.time.delayedCall(1e3,()=>{this.hatched||(this.evolutionBgm=n.playSoundWithoutBgm("evolution"))}),n.time.delayedCall(2e3,()=>{this.hatched||(this.eggCrackSprite.setVisible(!0),this.doSpray(1,this.eggSprite.displayHeight/-2),this.doEggShake(2).then(()=>{this.hatched||n.time.delayedCall(1e3,()=>{this.hatched||(this.doSpray(2,this.eggSprite.displayHeight/-4),this.eggCrackSprite.setFrame("1"),n.time.delayedCall(125,()=>this.eggCrackSprite.setFrame("2")),this.doEggShake(4).then(()=>{this.hatched||n.time.delayedCall(1e3,()=>{this.hatched||(n.playSound("se/egg_crack"),this.doSpray(4),this.eggCrackSprite.setFrame("3"),n.time.delayedCall(125,()=>this.eggCrackSprite.setFrame("4")),this.doEggShake(8,2).then(()=>{this.hatched||this.doHatch()}))})}))})}))})})})}end(){n.findPhase(A=>A instanceof qD)?this.eggHatchHandler.clear():n.time.delayedCall(250,()=>n.setModifiersVisible(!0)),super.end()}doEggShake(A,s,R){return new Promise(a=>{s===void 0&&(s=0),R===void 0&&(R=0),n.playSound("se/pb_move"),n.tweens.add({targets:this.eggContainer,x:`-=${A/(R?1:2)}`,ease:"Sine.easeInOut",duration:125,onComplete:N(()=>{n.tweens.add({targets:this.eggContainer,x:`+=${A}`,ease:"Sine.easeInOut",duration:250,onComplete:N(()=>{if(R++,R<s)return this.doEggShake(A,s,R).then(()=>a());n.tweens.add({targets:this.eggContainer,x:`-=${A/2}`,ease:"Sine.easeInOut",duration:125,onComplete:N(()=>a(),"onComplete")})},"onComplete")})},"onComplete")})})}trySkip(){var A;return!this.canSkip||this.skipped||((A=this.eggCounterContainer.eggCountText)==null?void 0:A.data)===void 0?!1:(this.skipped=!0,this.hatched?this.doReveal():this.doHatch(),!0)}doHatch(){this.canSkip=!1,this.hatched=!0,this.evolutionBgm&&AO.fadeOut(n,this.evolutionBgm,st(100));for(let A=0;A<5;A++)n.time.delayedCall(st(375*A),()=>n.playSound("se/egg_hatch",{volume:1-A*.2}));this.eggLightraysOverlay.setVisible(!0),this.eggLightraysOverlay.play("egg_lightrays"),n.tweens.add({duration:st(125),targets:this.eggHatchOverlay,alpha:1,ease:"Cubic.easeIn",onComplete:N(()=>{this.skipped=!1,this.canSkip=!0},"onComplete")}),n.time.delayedCall(st(1500),()=>{this.canSkip=!1,this.skipped||this.doReveal()})}doReveal(){const A=this.pokemon.isShiny();this.pokemon.species.subLegendary&&n.validateAchv(Ct.HATCH_SUB_LEGENDARY),this.pokemon.species.legendary&&n.validateAchv(Ct.HATCH_LEGENDARY),this.pokemon.species.mythical&&n.validateAchv(Ct.HATCH_MYTHICAL),A&&n.validateAchv(Ct.HATCH_SHINY),this.eggContainer.setVisible(!1);const s=this.pokemon.getSpriteKey(!0);try{this.pokemonSprite.play(s)}catch(R){console.error(`Failed to play animation for ${s}`,R)}this.pokemonSprite.setPipelineData("ignoreTimeTint",!0),this.pokemonSprite.setPipelineData("spriteKey",this.pokemon.getSpriteKey()),this.pokemonSprite.setPipelineData("shiny",this.pokemon.shiny),this.pokemonSprite.setPipelineData("variant",this.pokemon.variant),this.pokemonSprite.setVisible(!0),n.time.delayedCall(st(250),()=>{this.eggsToHatchCount--,this.eggHatchHandler.eventTarget.dispatchEvent(new NP(this.eggsToHatchCount)),this.pokemon.cry(),A&&n.time.delayedCall(st(500),()=>{gM(this.pokemonShinySparkle,this.pokemon.variant)}),n.time.delayedCall(st(this.skipped?A?750:250:A?1750:1250),()=>{this.infoContainer.show(this.pokemon,!1,this.skipped?2:1),n.playSoundWithoutBgm("evolution_fanfare"),n.ui.showText(u.t("egg:hatchFromTheEgg",{pokemonName:te(this.pokemon)}),null,()=>{n.gameData.updateSpeciesDexIvs(this.pokemon.species.speciesId,this.pokemon.ivs),n.gameData.setPokemonCaught(this.pokemon,!0,!0).then(()=>{n.gameData.setEggMoveUnlocked(this.pokemon.species,this.eggMoveIndex).then(R=>{this.eggHatchData.setEggMoveUnlocked(R),n.ui.showText("",0),this.end()})})},null,!0,3e3)})}),n.tweens.add({duration:st(this.skipped?500:3e3),targets:this.eggHatchOverlay,alpha:0,ease:"Cubic.easeOut"})}sin(A,s){return s*Math.sin(A*(Math.PI/128))}doSpray(A,s){n.tweens.addCounter({repeat:A,duration:TE(1),onRepeat:N(()=>{this.doSprayParticle(_A(8),s||0)},"onRepeat")})}doSprayParticle(A,s){const R=this.eggHatchBg.displayWidth/2,a=this.eggHatchBg.displayHeight/2+s,i=this.egg.isManaphyEgg()?"1":this.egg.tier.toString(),r=n.add.image(R,a,"egg_shard",`${i}_${Math.floor(A/2)}`);this.eggHatchContainer.add(r);let L=0,o=0;const l=3-_A(8),C=24+_A(32),M=n.tweens.addCounter({repeat:-1,duration:TE(1),onRepeat:N(()=>{D()},"onRepeat")}),D=N(()=>{const _=this.skipped?6:1;o+=_,A<160?(r.setPosition(R+l*L/3,a+o),r.y+=-this.sin(A,C),L>108&&r.setScale(1-(L-108)/20),A+=2*_,L+=_):(r.destroy(),M.remove())},"updateParticle");D()}generatePokemon(){return this.eggHatchData=this.eggLapsePhase.generatePokemon(this.egg),this.eggMoveIndex=this.eggHatchData.eggMoveIndex,this.eggHatchData.pokemon}};N(qD,"EggHatchPhase");let _C=qD;const EK=class EK extends aE{constructor(A){super(),this.eggHatchData=A}start(){super.start();const A=N(s=>{s>=this.eggHatchData.length?n.ui.setModeForceTransition(Ie.EGG_HATCH_SUMMARY,this.eggHatchData).then(()=>{n.fadeOutBgm(void 0,!1)}):(this.eggHatchData[s].setDex(),this.eggHatchData[s].updatePokemon().then(()=>{s<this.eggHatchData.length&&A(s+1)}))},"updateNextPokemon");A(0)}end(){n.time.delayedCall(250,()=>n.setModifiersVisible(!0)),n.ui.setModeForceTransition(Ie.MESSAGE).then(()=>{super.end()})}};N(EK,"EggSummaryPhase");let PC=EK;const sK=class sK{constructor(A,s){this.pokemon=A,this.eggMoveIndex=s}setEggMoveUnlocked(A){this.eggMoveUnlocked=A}setDex(){const A=n.gameData.dexData[this.pokemon.species.speciesId],s=n.gameData.starterData[this.pokemon.species.getRootSpeciesId()];this.dexEntryBeforeUpdate={seenAttr:A.seenAttr,caughtAttr:A.caughtAttr,natureAttr:A.natureAttr,seenCount:A.seenCount,caughtCount:A.caughtCount,hatchedCount:A.hatchedCount,ivs:[...A.ivs]},this.starterDataEntryBeforeUpdate={moveset:s.moveset,eggMoves:s.eggMoves,candyCount:s.candyCount,friendship:s.friendship,abilityAttr:s.abilityAttr,passiveAttr:s.passiveAttr,valueReduction:s.valueReduction,classicWinCount:s.classicWinCount}}getDex(){return this.dexEntryBeforeUpdate}getStarterEntry(){return this.starterDataEntryBeforeUpdate}updatePokemon(A=!1){return new Promise(s=>{n.gameData.setPokemonCaught(this.pokemon,!0,!0,A).then(()=>{n.gameData.updateSpeciesDexIvs(this.pokemon.species.speciesId,this.pokemon.ivs),n.gameData.setEggMoveUnlocked(this.pokemon.species,this.eggMoveIndex,A).then(R=>{this.setEggMoveUnlocked(R),s()})})})}};N(sK,"EggHatchData");let SP=sK;const RK=class RK extends aE{constructor(){super(),this.eggHatchData=[],this.minEggsToSkip=2}start(){super.start();const A=n.gameData.eggs.filter(R=>Ye.EGG_IMMEDIATE_HATCH_OVERRIDE?!0:--R.hatchWaves<1),s=A.length;this.eggHatchData=[],s>0?s>=this.minEggsToSkip&&n.eggSkipPreference===1?n.ui.showText(u.t("battle:eggHatching"),0,()=>{n.ui.showText(u.t("battle:eggSkipPrompt",{eggsToHatch:s}),0),n.ui.setModeWithoutClear(Ie.CONFIRM,()=>{this.hatchEggsSkipped(A),this.showSummary()},()=>{this.hatchEggsRegular(A),this.end()},null,null,null,1e3,!0)},100,!0):s>=this.minEggsToSkip&&n.eggSkipPreference===2?(n.queueMessage(u.t("battle:eggHatching")),this.hatchEggsSkipped(A),this.showSummary()):(n.queueMessage(u.t("battle:eggHatching")),this.hatchEggsRegular(A),this.end()):this.end()}hatchEggsRegular(A){let s=A.length;for(const R of A)n.unshiftPhase(new _C(this,R,s)),s--}hatchEggsSkipped(A){for(const s of A)this.hatchEggSilently(s)}showSummary(){n.unshiftPhase(new PC(this.eggHatchData)),this.end()}hatchEggSilently(A){const s=n.gameData.eggs.findIndex(i=>i.id===A.id);if(s===-1)return this.end();n.gameData.eggs.splice(s,1);const a=this.generatePokemon(A).pokemon;a.fusionSpecies&&a.clearFusionSpecies(),a.species.subLegendary&&n.validateAchv(Ct.HATCH_SUB_LEGENDARY),a.species.legendary&&n.validateAchv(Ct.HATCH_LEGENDARY),a.species.mythical&&n.validateAchv(Ct.HATCH_MYTHICAL),a.isShiny()&&n.validateAchv(Ct.HATCH_SHINY)}generatePokemon(A){let s,R;return n.executeWithSeedOffset(()=>{s=A.generatePlayerPokemon(),R=new SP(s,A.eggMoveIndex),R.setDex(),this.eggHatchData.push(R)},A.id,ba.toString()),R}};N(RK,"EggLapsePhase");let Br=RK;const OK=class OK extends dE{constructor(A){super(),this.modifierType=HM(A)}start(){super.start(),this.doReward().then(()=>this.end())}doReward(){return new Promise(A=>{const s=this.modifierType.newModifier();n.addModifier(s).then(()=>{n.playSound("item_fanfare"),n.ui.showText(u.t("battle:rewardGain",{modifierName:s==null?void 0:s.type.name}),null,()=>A(),null,!0)})})}};N(OK,"ModifierRewardPhase");let GE=OK;const nK=class nK extends dE{constructor(A){super(),this.moneyMultiplier=A}start(){const A=new _s(n.getWaveMoneyAmount(this.moneyMultiplier));n.applyModifiers(IO,!0,A),n.arena.getTag(ge.HAPPY_HOUR)&&(A.value*=2),n.addMoney(A.value);const s=navigator.language||"en-US",R=A.value.toLocaleString(s),a=u.t("battle:moneyWon",{moneyAmount:R});n.ui.showText(a,null,()=>this.end(),null,!0)}};N(nK,"MoneyRewardPhase");let oP=nK;const IK=class IK extends dE{constructor(){super()}start(){var R,a,i,r,L,o,l;n.disableMenu=!0,n.playBgm((R=n.currentBattle.trainer)==null?void 0:R.config.victoryBgm),n.unshiftPhase(new oP((a=n.currentBattle.trainer)==null?void 0:a.config.moneyMultiplier));const A=(i=n.currentBattle.trainer)==null?void 0:i.config.modifierRewardFuncs;for(const C of A)n.unshiftPhase(new GE(C));if(n.eventManager.isEventActive())for(const C of(r=n.currentBattle.trainer)==null?void 0:r.config.eventRewardFuncs)n.unshiftPhase(new GE(C));const s=(L=n.currentBattle.trainer)==null?void 0:L.config.trainerType;is.hasOwnProperty(U[s])&&!n.validateVoucher(is[U[s]])&&(o=n.currentBattle.trainer)!=null&&o.config.isBoss&&(n.eventManager.getUpgradeUnlockedVouchers()?n.unshiftPhase(new GE([J.VOUCHER_PLUS,J.VOUCHER_PLUS,J.VOUCHER_PLUS,J.VOUCHER_PREMIUM][is[U[s]].voucherType])):n.unshiftPhase(new GE([J.VOUCHER,J.VOUCHER,J.VOUCHER_PLUS,J.VOUCHER_PREMIUM][is[U[s]].voucherType]))),n.arena.biomeType===T.SPACE&&(s===U.BREEDER||s===U.EXPERT_POKEMON_BREEDER)&&n.validateAchv(Ct.BREEDERS_IN_SPACE),n.ui.showText(u.t("battle:trainerDefeated",{trainerName:(l=n.currentBattle.trainer)==null?void 0:l.getName(lt.NONE,!0)}),null,()=>{var P,h;const C=(P=n.currentBattle.trainer)==null?void 0:P.getVictoryMessages();let M;n.executeWithSeedOffset(()=>M=IE(C),n.currentBattle.waveIndex),M=M;const D=N(()=>{const H=_;_=N(()=>{var d;return n.ui.showDialogue(M,(d=n.currentBattle.trainer)==null?void 0:d.getName(lt.TRAINER,!0),null,H)},"showMessageOrEnd"),_()},"showMessage");let _=N(()=>this.end(),"showMessageOrEnd");if(C!=null&&C.length)if((h=n.currentBattle.trainer)!=null&&h.config.hasCharSprite&&!n.ui.shouldSkipDialogue(M)){const H=_;_=N(()=>n.charSprite.hide().then(()=>n.hideFieldOverlay(250).then(()=>H())),"showMessageOrEnd"),n.showFieldOverlay(500).then(()=>{var d;return n.charSprite.showCharacter((d=n.currentBattle.trainer)==null?void 0:d.getKey(),KM(C[0])).then(()=>D())})}else D();else _()},null,!0),this.showEnemyTrainer()}};N(IK,"TrainerVictoryPhase");let GC=IK;const aK=class aK extends aE{constructor(A,s,R){super(),this.expValue=A,this.useWaveIndexMultiplier=s,this.pokemonParticipantIds=R}start(){super.start(),n.applyPartyExp(this.expValue,!1,this.useWaveIndexMultiplier,this.pokemonParticipantIds),this.end()}};N(aK,"PartyExpPhase");let lP=aK;function r9(){const E=n.add.sprite(0,0,"encounter_exclaim");E.setName("exclamation"),n.field.add(E),n.field.moveTo(E,n.field.getAll().length-1),E.setVisible(!0),E.setPosition(110,68),n.tweens.add({targets:E,y:"-=25",ease:"Cubic.easeOut",duration:300,yoyo:!0,onComplete:N(()=>{n.time.delayedCall(800,()=>{n.field.remove(E,!0)})},"onComplete")}),n.playSound("battle_anims/GEN8- Exclaim",{volume:.7})}N(r9,"doTrainerExclamation");async function $A(E){var l,C;const A=[],s=n.currentBattle;let R=(E==null?void 0:E.doubleBattle)??!1;const a=E==null?void 0:E.trainerType,i=E==null?void 0:E.trainerConfig;let r;if(!ve(a)||i){n.currentBattle.mysteryEncounter.encounterMode=lE.TRAINER_BATTLE,n.currentBattle.trainer&&(n.currentBattle.trainer.setVisible(!1),n.currentBattle.trainer.destroy()),r=i||QA[a];const M=r.doubleOnly||r.hasDouble&&!!E.doubleBattle;R=M;const D=ve(E.female)?!!ce(2):E.female,_=new Gs(r.trainerType,M?OA.DOUBLE:D?OA.FEMALE:OA.DEFAULT,void 0,void 0,void 0,r);_.x+=300,_.setVisible(!1),n.field.add(_),n.currentBattle.trainer=_,A.push(_.loadAssets().then(()=>_.initSprite())),s.enemyLevels=n.currentBattle.trainer.getPartyLevels(n.currentBattle.waveIndex)}else{n.currentBattle.mysteryEncounter.encounterMode=lE.WILD_BATTLE;const M=E!=null&&E.pokemonConfigs&&E.pokemonConfigs.length>0?(l=E==null?void 0:E.pokemonConfigs)==null?void 0:l.length:R?2:1;s.enemyLevels=new Array(M).fill(null).map(()=>n.currentBattle.getLevelForWave())}n.getEnemyParty().forEach(M=>{n.field.remove(M,!0)}),s.enemyParty=[],s.double=R;const L=ve(E.levelAdditiveModifier)?0:E.levelAdditiveModifier,o=Math.max(Math.round(n.currentBattle.waveIndex/10*L),0);s.enemyLevels=s.enemyLevels.map(M=>M+o),s.enemyLevels.forEach((M,D)=>{let _,P,h=!1;if((!ve(a)||r)&&s.trainer)if(E!=null&&E.pokemonConfigs&&D<E.pokemonConfigs.length){const d=E.pokemonConfigs[D];M=d.level?d.level:M,P=d.dataSource,_=d.species,h=d.isBoss,s.enemyParty[D]=n.addEnemyPokemon(_,M,lt.TRAINER,h,!1,P)}else s.enemyParty[D]=s.trainer.genPartyMember(D);else{if(E!=null&&E.pokemonConfigs&&D<E.pokemonConfigs.length){const d=E.pokemonConfigs[D];M=d.level?d.level:M,P=d.dataSource,_=d.species,h=d.isBoss,h&&(n.currentBattle.mysteryEncounter.encounterMode=lE.BOSS_BATTLE)}else _=n.randomSpecies(s.waveIndex,M,!0);s.enemyParty[D]=n.addEnemyPokemon(_,M,lt.NONE,h,!1,P)}const H=n.getEnemyParty()[D];if(H.hp=H.getMaxHp(),H.status=null,H.passive=!1,D<(R?2:1)&&(H.setX(-66+H.getFieldPositionOffset()[0]),H.resetSummonData()),(ve(E.countAsSeen)||E.countAsSeen)&&n.gameData.setPokemonSeen(H,!0,!!(a||r)),E!=null&&E.pokemonConfigs&&D<E.pokemonConfigs.length){const d=E.pokemonConfigs[D];if(ve(d.nickname)||(H.nickname=btoa(unescape(encodeURIComponent(d.nickname)))),d.dataSource&&(H.id=ce(4294967296)),ve(d.formIndex)||(H.formIndex=d.formIndex),ve(d.shiny)||(H.shiny=d.shiny),H.shiny&&!ve(d.variant)&&(H.variant=d.variant),ve(d.customPokemonData)||(H.customPokemonData=d.customPokemonData),d.isBoss){let B=ve(d.bossSegments)?n.getEncounterBossSegments(n.currentBattle.waveIndex,M,_,!0):d.bossSegments;ve(d.bossSegmentModifier)||(B+=d.bossSegmentModifier),H.setBoss(!0,B)}d.passive&&(H.passive=!0),d.nature&&(H.nature=d.nature),d.ivs&&(H.ivs=d.ivs);const f=d.status;if(f){const B=Array.isArray(f)?f[0]:f,F=Array.isArray(f)?f[1]:f===ne.SLEEP?3:void 0;H.status=new za(B,0,F)}if(H.summonData||(H.summonData=new so),ve(d.abilityIndex)||(H.abilityIndex=d.abilityIndex),ve(d.gender)||(H.gender=d.gender,H.summonData.gender=d.gender),ve(d.aiType)||(H.aiType=d.aiType),d!=null&&d.moveSet&&d.moveSet.length>0){const B=d.moveSet.map(F=>new nt(F));H.moveset=B,H.summonData.moveset=B}d.tags&&d.tags.length>0&&d.tags.forEach(F=>H.addTag(F)),d.mysteryEncounterBattleEffects&&(H.mysteryEncounterBattleEffects=d.mysteryEncounterBattleEffects),H.primeSummonData(H.summonData),H.isShiny()&&!H.shinySparkle&&H.initShinySparkle(),H.initBattleInfo(),H.getBattleInfo().initInfo(H),H.generateName()}A.push(H.loadAssets()),console.log(`Pokemon: ${H.name}`,`Species ID: ${H.species.speciesId}`,`Stats: ${H.stats}`,`Ability: ${H.getAbility().name}`,`Passive Ability: ${H.getPassiveAbility().name}`)}),n.pushPhase(new iP(E.disableSwitch)),await Promise.all(A),s.enemyParty.forEach((M,D)=>{D<(R?2:1)&&(M.setVisible(!1),s.double&&M.setFieldPosition(D?oR.RIGHT:oR.LEFT),M.x+=300)});{Na(n.getEnemyField(),s.battleType===Ut.TRAINER?HE.TRAINER:HE.WILD);const M=(C=E==null?void 0:E.pokemonConfigs)==null?void 0:C.filter(D=>D==null?void 0:D.modifierConfigs).map(D=>D.modifierConfigs);n.generateEnemyModifiers(M)}}N($A,"initBattleWithEnemyConfig");function bo(E){return E=Array.isArray(E)?E:[E],Promise.all(E.map(A=>lL(A))).then(()=>CL(E))}N(bo,"loadCustomMovesForEncounter");function RO(E,A=!0,s=!0){n.money=Math.min(Math.max(n.money+E,0),Number.MAX_SAFE_INTEGER),n.updateMoneyText(),n.animateMoneyChanged(!1),A&&n.playSound("se/buy"),s&&(E<0?n.queueMessage(u.t("mysteryEncounterMessages:paid_money",{amount:-E}),null,!0):n.queueMessage(u.t("mysteryEncounterMessages:receive_money",{amount:E}),null,!0))}N(RO,"updatePlayerMoney");function Kt(E,A){const s=Object.keys(J).find(a=>J[a]===E);if(!s)return null;let R=J[s]();return R=R.withIdFromFunc(J[s]).withTierFromPool(HE.PLAYER,n.getPlayerParty()),R instanceof cE?R.generateType(n.getPlayerParty(),A):R}N(Kt,"generateModifierType");function AE(E,A){const s=Kt(E,A);return s&&new Is(s,0)}N(AE,"generateModifierTypeOption");function zE(E,A,s){return new Promise(R=>{const a=n.ui.getMode();n.ui.setMode(Ie.PARTY,Ps.SELECT,-1,(i,r)=>{i<n.getPlayerParty().length?n.ui.setMode(a).then(()=>{const L=n.getPlayerParty()[i],o=E(L);if(!o){n.currentBattle.mysteryEncounter.setDialogueToken("selectedPokemon",L.getNameToRender()),R(!0);return}n.ui.setMode(Ie.MESSAGE).then(()=>{var M,D,_;const l=N(()=>{const P=o.map(H=>{const d=H.handler;return H.handler=()=>(d(),n.currentBattle.mysteryEncounter.setDialogueToken("selectedPokemon",L.getNameToRender()),R(!0),!0),H}).concat({label:u.t("menu:cancel"),handler:N(()=>(n.ui.clearText(),n.ui.setMode(a),R(!1),!0),"handler"),onHover:N(()=>{qt(u.t("mysteryEncounterMessages:cancel_option"),0,0,!1)},"onHover")}),h={options:P,maxOptions:7,yOffset:0,supportHover:!0};P[0].onHover&&P[0].onHover(),n.ui.setModeWithoutClear(Ie.OPTION_SELECT,h,null,!0)},"displayOptions"),C=(_=(D=(M=n.currentBattle.mysteryEncounter)==null?void 0:M.selectedOption)==null?void 0:D.dialogue)==null?void 0:_.secondOptionPrompt;C?qt(C).then(()=>l()):l()})}):n.ui.setMode(a).then(()=>{A&&A(),R(!1)})},s)})}N(zE,"selectPokemonForOption");function L9(E,A,s,R){return new Promise(a=>{const i=n.ui.getMode(),r=N(C=>{n.ui.setMode(Ie.MESSAGE).then(()=>{A?qt(A).then(()=>{o[0].onHover&&o[0].onHover(),n.ui.setMode(Ie.OPTION_SELECT,C)}):(o[0].onHover&&o[0].onHover(),n.ui.setMode(Ie.OPTION_SELECT,C))})},"displayOptions"),L=N(C=>{n.ui.setMode(Ie.PARTY,Ps.SELECT,-1,(M,D)=>{M<n.getPlayerParty().length?n.ui.setMode(i).then(()=>{a({selectedPokemonIndex:M,selectedOptionIndex:C})}):r(l)},s)},"selectPokemonAfterOption"),o=E.map((C,M)=>{const D=C.handler;return C.handler=()=>(D(),L(M),!0),C}).concat({label:u.t("menu:cancel"),handler:N(()=>(n.ui.clearText(),n.ui.setMode(i),a(null),!0),"handler"),onHover:N(()=>{R&&R(),qt(u.t("mysteryEncounterMessages:cancel_option"),0,0,!1)},"onHover")}),l={options:o,maxOptions:7,yOffset:0,supportHover:!0};r(l)})}N(L9,"selectOptionThenPokemon");function Ft(E,A,s){n.currentBattle.mysteryEncounter.doEncounterRewards=()=>(s&&s(),E?n.unshiftPhase(new _O(0,void 0,E)):n.tryRemovePhase(R=>R instanceof _O),A&&A.forEach(R=>{new YI(R).addEggToGameData()}),!0)}N(Ft,"setEncounterRewards");function DR(E,A,s=!0){const R=Array.isArray(E)?E:[E];n.currentBattle.mysteryEncounter.doEncounterExp=()=>(n.unshiftPhase(new lP(A,s,new Set(R))),!0)}N(DR,"setEncounterExp");function OS(E){n.pushPhase(new uC(E))}N(OS,"initSubsequentOptionSelect");function ft(E=!1,A=lE.NO_BATTLE){n.currentBattle.mysteryEncounter.encounterMode=A,n.clearPhaseQueue(),n.clearPhaseQueueSplice(),r8(E)}N(ft,"leaveEncounterWithoutBattle");function r8(E=!1,A=!1){if(n.getPlayerParty().filter(a=>a.isAllowedInBattle()).length===0){n.clearPhaseQueue(),n.unshiftPhase(new GO);return}const R=n.currentBattle.mysteryEncounter;R.continuousEncounter||A||(R.encounterMode===lE.NO_BATTLE?(n.pushPhase(new ES(E)),n.pushPhase(new Br)):n.getEnemyParty().find(a=>R.encounterMode!==lE.TRAINER_BATTLE?a.isOnField():!(a!=null&&a.isFainted(!0)))||(n.pushPhase(new bI(!0)),R.encounterMode===lE.TRAINER_BATTLE&&n.pushPhase(new GC),(n.gameMode.isEndless||!n.gameMode.isWaveFinal(n.currentBattle.waveIndex))&&(n.pushPhase(new ES(E)),R.doContinueEncounter||n.pushPhase(new Br))))}N(r8,"handleMysteryEncounterVictory");function N9(E=!1,A=!1){if(n.getPlayerParty().filter(a=>a.isAllowedInBattle()).length===0){n.clearPhaseQueue(),n.unshiftPhase(new GO);return}const R=n.currentBattle.mysteryEncounter;R.continuousEncounter||A||(R.encounterMode!==lE.NO_BATTLE&&n.pushPhase(new bI(!1)),n.pushPhase(new ES(E)),R.doContinueEncounter||n.pushPhase(new Br))}N(N9,"handleMysteryEncounterBattleFailed");function JA(E=!0,A=!0,s=750){return new Promise(R=>{const a=n.currentBattle.mysteryEncounter.introVisuals,i=n.getEnemyField();i&&(n.currentBattle.enemyParty=[]),a?(E||(a.setVisible(!0),a.x=244,a.y=60,a.alpha=0),n.tweens.add({targets:[a,i],x:`${E?"+":"-"}=16`,y:`${E?"-":"+"}=16`,alpha:E?0:1,ease:"Sine.easeInOut",duration:s,onComplete:N(()=>{E&&A&&(n.field.remove(a,!0),i.forEach(r=>{n.field.remove(r,!0)}),n.currentBattle.mysteryEncounter.introVisuals=void 0),R(!0)},"onComplete")})):R(!0)})}N(JA,"transitionMysteryEncounterIntroVisuals");function T9(){const E=n.currentBattle.mysteryEncounter;n.currentBattle.isBattleMysteryEncounter()&&E&&E.encounterMode!==lE.NO_BATTLE&&!E.startOfBattleEffectsComplete&&(E.startOfBattleEffects.forEach(s=>{let R;s.sourcePokemon?R=s.sourcePokemon:ve(s.sourceBattlerIndex)?R=n.getEnemyField()[0]:s.sourceBattlerIndex===gt.ATTACKER?R=n.getEnemyField()[0]:s.sourceBattlerIndex===gt.ENEMY?R=n.getEnemyField()[0]:s.sourceBattlerIndex===gt.ENEMY_2?R=n.getEnemyField()[1]:s.sourceBattlerIndex===gt.PLAYER?R=n.getPlayerField()[0]:s.sourceBattlerIndex===gt.PLAYER_2&&(R=n.getPlayerField()[1]),n.pushPhase(new wA(R,s.targets,s.move,s.followUp,s.ignorePp))}),n.pushPhase(new aP),E.startOfBattleEffectsComplete=!0)}N(T9,"handleMysteryEncounterBattleStartEffects");function S9(){const E=n.currentBattle.mysteryEncounter;return n.currentBattle.isBattleMysteryEncounter()&&E&&E.onTurnStart?E.onTurnStart():!1}N(S9,"handleMysteryEncounterTurnStartEffects");function y1(E,A=!1,s=!1){let R,a=!1;const i=n.eventManager.getEventEncounters();if(i.length>0&&ce(2)===1){const L=IE(i),o=ke(L.species).getWildSpeciesForLevel(E,!L.blockEvolution,A,n.gameMode);a=!0,R=ke(o)}else R=n.arena.randomSpecies(n.currentBattle.waveIndex,E,0,Hr(n.getPlayerParty()),A);const r=new xs(R,E,lt.NONE,A);return a&&!r.shiny&&r.trySetShinySeed(),s&&r.abilityIndex!==2&&r.species.abilityHidden&&r.tryRerollHiddenAbilitySeed(),r}N(y1,"getRandomEncounterSpecies");const iK=class iK extends dE{constructor(A){super(),this.loaded=!!A}start(){var i,r,L,o;super.start(),n.updateGameInfo(),n.initSession(),n.eventTarget.dispatchEvent(new N_),n.gameMode.isClassic&&n.currentBattle.waveIndex>200&&n.unshiftPhase(new GO);const A=[],s=n.currentBattle;s.isBattleMysteryEncounter()&&!s.mysteryEncounter&&n.executeWithSeedOffset(()=>{const l=s.mysteryEncounterType;s.mysteryEncounter=n.getMysteryEncounter(l)},s.waveIndex*16);const R=s.mysteryEncounter;R&&(n.executeWithSeedOffset(()=>{R.onInit&&R.onInit(),R.populateDialogueTokensFromRequirements()},s.waveIndex),R.encounterAnimations&&R.encounterAnimations.length>0&&A.push(VJ(R.encounterAnimations).then(()=>kJ(!0))),R.initIntroVisuals(),n.field.add(R.introVisuals));let a=0;if((i=s.enemyLevels)==null||i.every((l,C)=>{var D,_;if(s.isBattleMysteryEncounter())return!1;if(!this.loaded)if(s.battleType===Ut.TRAINER){for(const P of n.getPlayerParty())P&&P.customPokemonData.resetHitReceivedCount();s.enemyParty[C]=(D=s.trainer)==null?void 0:D.genPartyMember(C)}else{let P=n.randomSpecies(s.waveIndex,l,!0);n.findModifier(h=>h instanceof Ko)&&!n.gameMode.isBoss(s.waveIndex)&&n.arena.biomeType!==T.END&&ce(10)===0&&(P=_9(l)),s.enemyParty[C]=n.addEnemyPokemon(P,l,lt.NONE,!!n.getEncounterBossSegments(s.waveIndex,l,P)),n.currentBattle.battleSpec===SE.FINAL_BOSS&&(s.enemyParty[C].ivs=new Array(6).fill(31)),n.getPlayerParty().slice(0,s.double?2:1).reverse().forEach(h=>{ut(qU,h,null,!1,s.enemyParty[C])})}const M=n.getEnemyParty()[C];return C<(s.double?2:1)&&(M.setX(-66+M.getFieldPositionOffset()[0]),M.resetSummonData()),this.loaded||n.gameData.setPokemonSeen(M,!0,s.battleType===Ut.TRAINER||((_=s==null?void 0:s.mysteryEncounter)==null?void 0:_.encounterMode)===lE.TRAINER_BATTLE),M.species.speciesId===e.ETERNATUS&&(n.gameMode.isClassic&&(s.battleSpec===SE.FINAL_BOSS||n.gameMode.isWaveFinal(s.waveIndex))?(s.battleSpec!==SE.FINAL_BOSS&&(M.formIndex=1,M.updateScale()),M.setBoss()):s.waveIndex%1e3||(M.formIndex=1,M.updateScale())),a+=M.getSpeciesForm().baseTotal,A.push(M.loadAssets()),console.log(`Pokemon: ${te(M)}`,`Species ID: ${M.species.speciesId}`,`Stats: ${M.stats}`,`Ability: ${M.getAbility().name}`,`Passive Ability: ${M.getPassiveAbility().name}`),!0}),n.getPlayerParty().filter(l=>l.isShiny()).length===_r&&n.validateAchv(Ct.SHINY_PARTY),s.battleType===Ut.TRAINER)A.push((r=s.trainer)==null?void 0:r.loadAssets().then(()=>{var l;return(l=s.trainer)==null?void 0:l.initSprite()}));else if(s.isBattleMysteryEncounter())(L=s.mysteryEncounter)!=null&&L.introVisuals&&A.push(s.mysteryEncounter.introVisuals.loadAssets().then(()=>s.mysteryEncounter.introVisuals.initSprite())),(o=s.mysteryEncounter)!=null&&o.loadAssets&&s.mysteryEncounter.loadAssets.length>0&&A.push(...s.mysteryEncounter.loadAssets),A.push(new Promise(l=>{n.loadSe("GEN8- Exclaim","battle_anims","GEN8- Exclaim.wav"),n.loadImage("encounter_exclaim","mystery-encounters"),n.load.once(Phaser.Loader.Events.COMPLETE,()=>l()),n.load.isLoading()||n.load.start()}));else if(!(Ye.OPP_HEALTH_SEGMENTS_OVERRIDE>1)&&s.enemyParty.filter(C=>C.isBoss()).length>1)for(const C of s.enemyParty)C.isBoss()&&!C.isPopulatedFromDataSource&&(C.setBoss(!0,Math.ceil(C.bossSegments*(C.getSpeciesForm().baseTotal/a))),C.initBattleInfo());Promise.all(A).then(()=>{s.enemyParty.every((l,C)=>{var M;if(s.isBattleMysteryEncounter())return!1;if(C<(s.double?2:1)){if(s.battleType===Ut.WILD){n.field.add(l),s.seenEnemyPartyMemberIds.add(l.id);const D=n.getPlayerPokemon();D!=null&&D.isOnField()&&n.field.moveBelow(l,D),l.tint(0,.5)}else s.battleType===Ut.TRAINER&&(l.setVisible(!1),(M=n.currentBattle.trainer)==null||M.tint(0,.5));s.double&&l.setFieldPosition(C?oR.RIGHT:oR.LEFT)}return!0}),!this.loaded&&s.battleType!==Ut.MYSTERY_ENCOUNTER&&(Na(n.getEnemyField(),s.battleType===Ut.TRAINER?HE.TRAINER:HE.WILD),n.generateEnemyModifiers(),Q1(!1),n.getEnemyField().forEach(l=>{J1(l,!1)})),n.ui.setMode(Ie.MESSAGE).then(()=>{this.loaded?(this.doEncounter(),n.resetSeed()):(this.trySetWeatherIfNewBiome(),n.gameData.saveAll(!0,s.waveIndex%5===1||(n.lastSavePlayTime??0)>=300).then(l=>{if(n.disableMenu=!1,!l)return n.reset(!0);this.doEncounter(),n.resetSeed()}))})})}doEncounter(){var i,r;n.playBgm(void 0,!0),n.updateModifiers(!1),n.setFieldScale(1);const{battleType:A,waveIndex:s}=n.currentBattle;n.isMysteryEncounterValidForWave(A,s)&&!n.currentBattle.isBattleMysteryEncounter()&&(n.mysteryEncounterSaveData.encounterSpawnChance+=MQ);for(const L of n.getPlayerParty())L&&L.resetBattleData();const R=n.getEnemyField();n.tweens.add({targets:[n.arenaEnemy,n.currentBattle.trainer,R,n.arenaPlayer,n.trainer].flat(),x:N((L,o,l,C)=>C<2+R.length?l+300:l-300,"x"),duration:2e3,onComplete:N(()=>{this.tryOverrideForBattleSpec()||this.doEncounterCommon()},"onComplete")});const a=(r=(i=n.currentBattle)==null?void 0:i.mysteryEncounter)==null?void 0:r.introVisuals;if(a){const L=a.enterFromRight;L&&(a.x+=500),n.tweens.add({targets:a,x:L?"-=200":"+=300",duration:2e3})}}getEncounterMessage(){var s,R;const A=n.getEnemyField();return n.currentBattle.battleSpec===SE.FINAL_BOSS?u.t("battle:bossAppeared",{bossName:te(A[0])}):n.currentBattle.battleType===Ut.TRAINER?n.currentBattle.double?u.t("battle:trainerAppearedDouble",{trainerName:(s=n.currentBattle.trainer)==null?void 0:s.getName(lt.NONE,!0)}):u.t("battle:trainerAppeared",{trainerName:(R=n.currentBattle.trainer)==null?void 0:R.getName(lt.NONE,!0)}):A.length===1?u.t("battle:singleWildAppeared",{pokemonName:A[0].getNameToRender()}):u.t("battle:multiWildAppeared",{pokemonName1:A[0].getNameToRender(),pokemonName2:A[1].getNameToRender()})}doEncounterCommon(A=!0){var R,a;const s=n.getEnemyField();if(n.currentBattle.battleType===Ut.WILD)s.forEach(i=>{i.untint(100,"Sine.easeOut"),i.cry(),i.showInfo(),i.isShiny()&&n.validateAchv(Ct.SEE_SHINY)}),n.updateFieldScale(),A?n.ui.showText(this.getEncounterMessage(),null,()=>this.end(),1500):this.end();else if(n.currentBattle.battleType===Ut.TRAINER){const i=n.currentBattle.trainer;i==null||i.untint(100,"Sine.easeOut"),i==null||i.playAnim();const r=N(()=>{n.currentBattle.started=!0,n.playBgm(void 0),n.pbTray.showPbTray(n.getPlayerParty()),n.pbTrayEnemy.showPbTray(n.getEnemyParty());const o=N(()=>{this.hideEnemyTrainer();const l=n.getEnemyParty().filter(C=>!C.isFainted()).length;n.unshiftPhase(new QE(0,!1)),n.currentBattle.double&&l>1&&n.unshiftPhase(new QE(1,!1)),this.end()},"doTrainerSummon");A?n.ui.showText(this.getEncounterMessage(),null,o,1500,!0):o()},"doSummon"),L=(R=n.currentBattle.trainer)==null?void 0:R.getEncounterMessages();if(!(L!=null&&L.length))r();else{let o;n.executeWithSeedOffset(()=>o=IE(L),n.currentBattle.waveIndex),o=o;const l=N(()=>{n.ui.showDialogue(o,i==null?void 0:i.getName(lt.NONE,!0),null,()=>{n.charSprite.hide().then(()=>n.hideFieldOverlay(250).then(()=>r()))})},"showDialogueAndSummon");(a=n.currentBattle.trainer)!=null&&a.config.hasCharSprite&&!n.ui.shouldSkipDialogue(o)?n.showFieldOverlay(500).then(()=>n.charSprite.showCharacter(i==null?void 0:i.getKey(),KM(L[0])).then(()=>l())):l()}}else if(n.currentBattle.isBattleMysteryEncounter()&&n.currentBattle.mysteryEncounter){const i=n.currentBattle.mysteryEncounter,r=i.introVisuals;r==null||r.playAnim(),i.onVisualsStart?i.onVisualsStart():i.spriteConfigs&&r&&r.playShinySparkles();const L=N(()=>{const l=N(()=>{n.ui.clearText(),n.ui.getMessageHandler().hideNameText(),n.unshiftPhase(new uC),this.end()},"doShowEncounterOptions");if(A){const C=i.dialogue.intro;if(!C)l();else{let D=0;const _=N(()=>{const P=D===C.length-1?l:_,h=C[D],H=mA(h==null?void 0:h.speaker),d=mA(h.text);D++,H?n.ui.showDialogue(d,H,null,P,0,D===1?750:0):n.ui.showText(d,null,P,D===1?750:0,!0)},"showNextDialogue");C.length>0&&_()}}else l()},"doEncounter"),o=u.t("battle:mysteryEncounterAppeared");o?(r9(),n.ui.showDialogue(o,"???",null,()=>{n.charSprite.hide().then(()=>n.hideFieldOverlay(250).then(()=>L()))})):L()}}end(){const A=n.getEnemyField();if(A.forEach((s,R)=>{if(s.isShiny()&&n.unshiftPhase(new eS(gt.ENEMY+R)),s.species.speciesId===e.ETERNATUS&&(n.gameMode.isBattleClassicFinalBoss(n.currentBattle.waveIndex)||n.gameMode.isEndlessMajorBoss(n.currentBattle.waveIndex))){const a=n.findModifier(i=>i instanceof hi,!1);a&&(n.removeModifier(a,!0),a.setTransferrableFalse(),n.addEnemyModifier(a))}}),![Ut.TRAINER,Ut.MYSTERY_ENCOUNTER].includes(n.currentBattle.battleType)){A.map(R=>n.pushConditionalPhase(new Ei(R.getBattlerIndex()),()=>{if(!n.getPlayerParty().length)return!1;const a=n.getPlayerParty().filter(r=>r.isOnField()).length,i=Math.min(n.getPlayerParty().filter(r=>!r.isFainted()).length,2);return n.currentBattle.double?a===i:a===1}));const s=n.findModifier(R=>R instanceof di);s&&A.map(R=>n.pushPhase(new AS(R.getBattlerIndex(),Math.min(s.getStackCount()*2,6))))}if(!this.loaded){const s=n.getPokemonAllowedInBattle();if(s[0].isOnField()||n.pushPhase(new QE(0)),n.currentBattle.double?s.length>1&&(n.pushPhase(new PO(!0)),s[1].isOnField()||n.pushPhase(new QE(1))):(s.length>1&&s[1].isOnField()&&n.pushPhase(new fr(1)),n.pushPhase(new PO(!1))),n.currentBattle.battleType!==Ut.TRAINER&&(n.currentBattle.waveIndex>1||!n.gameMode.isDaily)){const R=n.currentBattle.double?2:1;s.length>R&&(n.pushPhase(new cn(0,n.currentBattle.double)),n.currentBattle.double&&n.pushPhase(new cn(1,n.currentBattle.double)))}}VI(tO.Access_Menu).then(()=>super.end())}tryOverrideForBattleSpec(){switch(n.currentBattle.battleSpec){case SE.FINAL_BOSS:const A=n.getEnemyPokemon();return n.ui.showText(this.getEncounterMessage(),null,()=>{const s="battleSpecDialogue:encounter";if(n.ui.shouldSkipDialogue(s))console.log(`Dialogue ${s} skipped`),this.doEncounterCommon(!1);else{const R=5643853+n.gameData.gameStats.classicSessionsPlayed,a=!u.exists(s,{fallbackLng:[]})||u.resolvedLanguage==="en"?u.t("battleSpecDialogue:key",{count:R,ordinal:!0}):"",i=R.toLocaleString()+a,r=n.gameData.gender??Vt.UNSET,L=Vt[r].toLowerCase(),o=u.t(s,{context:L,cycleCount:i});n.gameData.getSeenDialogues()[s]||n.gameData.saveSeenDialogue(s),n.ui.showDialogue(o,A==null?void 0:A.species.name,null,()=>{this.doEncounterCommon(!1)})}},1500,!0),!0}return!1}trySetWeatherIfNewBiome(){this.loaded||n.arena.trySetWeather($6(n.arena),!1)}};N(iK,"EncounterPhase");let gr=iK;const rK=class rK extends aE{constructor(){super()}start(){super.start(),n.ui.getMessageHandler().bg.setVisible(!1),n.ui.getMessageHandler().nameBoxContainer.setVisible(!1),this.endCard=n.add.image(0,0,`end_${n.gameData.gender===Vt.FEMALE?"f":"m"}`),this.endCard.setOrigin(0),this.endCard.setScale(.5),n.field.add(this.endCard),this.text=le(n.game.canvas.width/12,n.game.canvas.height/6-16,u.t("battle:congratulations"),Q.SUMMARY,{fontSize:"128px"}),this.text.setOrigin(.5),n.field.add(this.text),n.ui.clearText(),n.ui.fadeIn(1e3).then(()=>{n.ui.showText("",null,()=>{n.ui.getMessageHandler().bg.setVisible(!0),this.end()},null,!0)})}};N(rK,"EndCardPhase");let cC=rK;const LK=class LK extends GE{constructor(A){super(A)}doReward(){return new Promise(A=>{const s=this.modifierType.newModifier();n.addModifier(s).then(()=>{n.playSound("level_up_fanfare"),n.ui.setMode(Ie.MESSAGE),n.ui.fadeIn(250).then(()=>{n.ui.showText(u.t("battle:rewardGain",{modifierName:s==null?void 0:s.type.name}),null,()=>{n.time.delayedCall(1500,()=>n.arenaBg.setVisible(!0)),A()},null,!0,1500)})})})}};N(LK,"GameOverModifierRewardPhase");let CP=LK;const _L=5,rI=3;var hC=(E=>(E[E.LOAD=0]="LOAD",E[E.SAVE=1]="SAVE",E))(hC||{});const NK=class NK extends vs{constructor(){super(Ie.SAVE_SLOT),this.scrollCursor=0}setup(){const A=this.getUi();this.saveSlotSelectContainer=n.add.container(0,0),this.saveSlotSelectContainer.setVisible(!1),A.add(this.saveSlotSelectContainer);const s=n.add.rectangle(0,0,n.game.canvas.width/6,-n.game.canvas.height/6,26720);s.setOrigin(0,0),this.saveSlotSelectContainer.add(s),this.sessionSlotsContainerInitialY=-n.game.canvas.height/6+8,this.sessionSlotsContainer=n.add.container(8,this.sessionSlotsContainerInitialY),this.saveSlotSelectContainer.add(this.sessionSlotsContainer),this.saveSlotSelectMessageBoxContainer=n.add.container(0,0),this.saveSlotSelectMessageBoxContainer.setVisible(!1),this.saveSlotSelectContainer.add(this.saveSlotSelectMessageBoxContainer),this.saveSlotSelectMessageBox=Gt(1,-1,318,28),this.saveSlotSelectMessageBox.setOrigin(0,1),this.saveSlotSelectMessageBoxContainer.add(this.saveSlotSelectMessageBox),this.message=le(8,8,"",Q.WINDOW,{maxLines:2}),this.message.setOrigin(0,0),this.saveSlotSelectMessageBoxContainer.add(this.message),this.sessionSlots=[]}show(A){return A.length<2||!(A[1]instanceof Function)?!1:(super.show(A),this.uiMode=A[0],this.saveSlotSelectCallback=A[1],this.saveSlotSelectContainer.setVisible(!0),this.populateSessionSlots(),this.setScrollCursor(0),this.setCursor(0),!0)}processInput(A){const s=this.getUi();let R=!1,a=!1;if(A===k.ACTION||A===k.CANCEL){const i=this.saveSlotSelectCallback;if(A===k.ACTION){const r=this.cursor+this.scrollCursor;if(this.uiMode===0&&!this.sessionSlots[r].hasData)a=!0;else{switch(this.uiMode){case 0:this.saveSlotSelectCallback=null,i&&i(r);break;case 1:const L=N(()=>{const o=this.saveSlotSelectCallback;this.saveSlotSelectCallback=null,s.revertMode(),s.showText("",0),s.setMode(Ie.MESSAGE),o&&o(r)},"saveAndCallback");if(this.sessionSlots[r].hasData)s.showText(u.t("saveSlotSelectUiHandler:overwriteData"),null,()=>{s.setOverlayMode(Ie.CONFIRM,()=>{n.gameData.deleteSession(r).then(o=>{o===!1?n.reset(!0):L()})},()=>{s.revertMode(),s.showText("",0)},!1,0,19,2e3)});else if(this.sessionSlots[r].hasData===!1)L();else return!1;break}R=!0}}else this.saveSlotSelectCallback=null,i&&i(-1),R=!0}else{const i=this.cursor+this.scrollCursor;switch(A){case k.UP:this.cursor?R=this.cursor===0?this.setCursor(this.cursor):this.setCursor(this.cursor-1,i):this.scrollCursor?R=this.setScrollCursor(this.scrollCursor-1,i):this.cursor===0&&this.scrollCursor===0&&(this.setScrollCursor(_L-rI),this.revertSessionSlot(_L-rI),this.setCursor(rI-1),R=!0);break;case k.DOWN:this.cursor<rI-1?R=this.setCursor(this.cursor+1,i):this.scrollCursor<_L-rI?R=this.setScrollCursor(this.scrollCursor+1,i):this.cursor===rI-1&&this.scrollCursor===_L-rI&&(this.setScrollCursor(0),this.revertSessionSlot(rI-1),this.setCursor(0),R=!0);break;case k.RIGHT:this.sessionSlots[i].hasData&&this.sessionSlots[i].saveData&&(n.ui.setOverlayMode(Ie.RUN_INFO,this.sessionSlots[i].saveData,p1.SESSION_PREVIEW),R=!0)}}return R?s.playSelect():a&&s.playError(),R||a}populateSessionSlots(){for(let A=0;A<_L;A++){const s=new uP(A);n.add.existing(s),this.sessionSlotsContainer.add(s),this.sessionSlots.push(s),s.load().then(R=>{R&&this.cursor+this.scrollCursor===A&&this.setCursor(A)})}}showText(A,s,R,a,i,r){super.showText(A,s,R,a,i,r),(A==null?void 0:A.indexOf(`
`))===-1?(this.saveSlotSelectMessageBox.setSize(318,28),this.message.setY(-22)):(this.saveSlotSelectMessageBox.setSize(318,42),this.message.setY(-37)),this.saveSlotSelectMessageBoxContainer.setVisible(!!(A!=null&&A.length))}setCursor(A,s){const R=super.setCursor(A);if(!this.cursorObj){this.cursorObj=n.add.container(0,0);const r=n.add.nineslice(0,0,"select_cursor_highlight_thick",void 0,296,44,6,6,6,6),L=n.add.image(0,0,"cursor");L.setPosition(160,0),L.setName("rightArrow"),this.cursorObj.add([r,L]),this.sessionSlotsContainer.add(this.cursorObj)}const a=A+this.scrollCursor,i=a*56;if(this.sessionSlots[a]&&this.cursorObj){const r=this.sessionSlots[a].hasData;r?(this.cursorObj.setPosition(145,26+i),this.sessionSlots[a].setPosition(-6,i)):(this.cursorObj.setPosition(151,26+i),this.sessionSlots[a].setPosition(0,i)),this.setArrowVisibility(r)}return ve(s)||this.revertSessionSlot(s),R}revertSessionSlot(A){const s=this.sessionSlots[A];s&&s.setPosition(0,A*56)}setArrowVisibility(A){var s;this.cursorObj&&((s=this.cursorObj)==null?void 0:s.getByName("rightArrow")).setVisible(A)}setScrollCursor(A,s){const R=A!==this.scrollCursor;return R&&(this.scrollCursor=A,this.setCursor(this.cursor,s),n.tweens.add({targets:this.sessionSlotsContainer,y:this.sessionSlotsContainerInitialY-56*A,duration:st(325),ease:"Sine.easeInOut"})),R}clear(){super.clear(),this.saveSlotSelectContainer.setVisible(!1),this.setScrollCursor(0),this.eraseCursor(),this.saveSlotSelectCallback=null,this.clearSessionSlots()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}clearSessionSlots(){this.sessionSlots.splice(0,this.sessionSlots.length),this.sessionSlotsContainer.removeAll(!0)}};N(NK,"SaveSlotSelectUiHandler");let UP=NK;const TK=class TK extends Phaser.GameObjects.Container{constructor(A){super(n,0,A*56),this.slotId=A,this.setup()}setup(){const A=Gt(0,0,304,52);this.add(A),this.loadingLabel=le(152,26,u.t("saveSlotSelectUiHandler:loading"),Q.WINDOW),this.loadingLabel.setOrigin(.5,.5),this.add(this.loadingLabel)}async setupWithData(A){this.remove(this.loadingLabel,!0);const s=le(8,5,`${WR.getModeName(A.gameMode)||u.t("gameMode:unkown")} - ${u.t("saveSlotSelectUiHandler:wave")} ${A.waveIndex}`,Q.WINDOW);this.add(s);const R=le(8,19,new Date(A.timestamp).toLocaleString(),Q.WINDOW);this.add(R);const a=le(8,33,P1(A.playTime),Q.WINDOW);this.add(a);const i=n.add.container(144,4);A.party.forEach((o,l)=>{const C=n.add.container(26*l,0);C.setScale(.75);const M=o.toPokemon(),D=n.addPokemonIcon(M,0,0,0,0),_=le(32,20,`${u.t("saveSlotSelectUiHandler:lv")}${Rr(M.level,1e3)}`,Q.PARTY,{fontSize:"54px",color:"#f8f8f8"});_.setShadow(0,0,void 0),_.setStroke("#424242",14),_.setOrigin(1,0),C.add(D),C.add(_),i.add(C),M.destroy()}),this.add(i);const r=n.add.container(148,30);r.setScale(.5);let L=0;for(const o of A.modifiers){const l=o.toModifier(ml[o.className]);if(l instanceof dt)continue;const C=l==null?void 0:l.getIcon(!1);if(C&&(C.setPosition(24*L,0),r.add(C)),++L===12)break}this.add(r)}load(){return new Promise(A=>{n.gameData.getSession(this.slotId).then(async s=>{if(this.active){if(!s){this.hasData=!1,this.loadingLabel.setText(u.t("saveSlotSelectUiHandler:empty")),A(!1);return}this.hasData=!0,this.saveData=s,await this.setupWithData(s),A(!0)}})})}};N(TK,"SessionSlot");let uP=TK;const SK=class SK extends aE{constructor(){super()}start(){super.start(),n.playBgm("menu"),n.ui.setMode(Ie.CHALLENGE_SELECT)}};N(SK,"SelectChallengePhase");let HC=SK;const oK=class oK extends aE{constructor(){super()}start(){super.start(),n.playBgm("menu"),n.ui.setMode(Ie.STARTER_SELECT,A=>{n.ui.clearText(),n.ui.setMode(Ie.SAVE_SLOT,hC.SAVE,s=>{if(s===-1)return n.clearPhaseQueue(),n.pushPhase(new Ri),this.end();n.sessionSlotId=s,this.initBattle(A)})})}initBattle(A){const s=n.getPlayerParty(),R=[];A.forEach((a,i)=>{!i&&Ye.STARTER_SPECIES_OVERRIDE&&(a.species=ke(Ye.STARTER_SPECIES_OVERRIDE));const r=n.gameData.getSpeciesDexAttrProps(a.species,a.dexAttr);let L=Math.min(r.formIndex,Math.max(a.species.forms.length-1,0));a.species.speciesId in Ye.STARTER_FORM_OVERRIDES&&a.species.forms[Ye.STARTER_FORM_OVERRIDES[a.species.speciesId]]&&(L=Ye.STARTER_FORM_OVERRIDES[a.species.speciesId]);let o=a.species.malePercent!==null?r.female?at.FEMALE:at.MALE:at.GENDERLESS;Ye.GENDER_OVERRIDE!==null&&(o=Ye.GENDER_OVERRIDE);const l=n.gameData.dexData[a.species.speciesId].ivs.slice(0),C=n.addPlayerPokemon(a.species,n.gameMode.getStartingLevel(),a.abilityIndex,L,o,r.shiny,r.variant,l,a.nature);a.moveset&&C.tryPopulateMoveset(a.moveset),a.passive&&(C.passive=!0),C.luck=n.gameData.getDexAttrLuck(n.gameData.dexData[a.species.speciesId].caughtAttr),a.pokerus&&(C.pokerus=!0),a.nickname&&(C.nickname=a.nickname),(n.gameMode.isSplicedOnly||Ye.STARTER_FUSION_OVERRIDE)&&C.generateFusionSpecies(!0),C.setVisible(!1),as(n.gameMode,XE.STARTER_MODIFY,C),s.push(C),R.push(C.loadAssets())}),Q1(),J1(s[0]),Promise.all(R).then(()=>{AO.fadeOut(n,n.sound.get("menu"),500,!0),n.time.delayedCall(500,()=>n.playBgm()),n.gameMode.isClassic?n.gameData.gameStats.classicSessionsPlayed++:n.gameData.gameStats.endlessSessionsPlayed++,n.newBattle(),n.arena.init(),n.sessionPlayTime=0,n.lastSavePlayTime=0,n.getPlayerParty().forEach(a=>{n.triggerPokemonFormChange(a,qa)}),this.end()})}};N(oK,"SelectStarterPhase");let dC=oK;const PN=class PN extends aE{constructor(){super(),this.loaded=!1}start(){super.start(),n.ui.clearText(),n.ui.fadeIn(250),n.playBgm("title",!0),n.gameData.getSession((Nt==null?void 0:Nt.lastSessionSlot)??-1).then(A=>{if(A){this.lastSessionData=A;const R=`${Qo(A.arena.biome)}_bg`;n.arenaBg.setTexture(R)}this.showOptions()}).catch(A=>{console.error(A),this.showOptions()})}showOptions(){const A=[];Nt&&Nt.lastSessionSlot>-1&&A.push({label:u.t("continue",{ns:"menu"}),handler:N(()=>(this.loadSaveSlot(this.lastSessionData||!Nt?-1:Nt.lastSessionSlot),!0),"handler")}),A.push({label:u.t("menu:newGame"),handler:N(()=>{const R=N(i=>{this.gameMode=i,n.ui.setMode(Ie.MESSAGE),n.ui.clearText(),this.end()},"setModeAndEnd"),{gameData:a}=n;if(a.isUnlocked(ws.ENDLESS_MODE)){const i=[{label:WR.getModeName(SA.CLASSIC),handler:N(()=>(R(SA.CLASSIC),!0),"handler")},{label:WR.getModeName(SA.CHALLENGE),handler:N(()=>(R(SA.CHALLENGE),!0),"handler")},{label:WR.getModeName(SA.ENDLESS),handler:N(()=>(R(SA.ENDLESS),!0),"handler")}];a.isUnlocked(ws.SPLICED_ENDLESS_MODE)&&i.push({label:WR.getModeName(SA.SPLICED_ENDLESS),handler:N(()=>(R(SA.SPLICED_ENDLESS),!0),"handler")}),i.push({label:u.t("menu:cancel"),handler:N(()=>(n.clearPhaseQueue(),n.pushPhase(new PN),super.end(),!0),"handler")}),n.ui.showText(u.t("menu:selectGameMode"),null,()=>n.ui.setOverlayMode(Ie.OPTION_SELECT,{options:i}))}else this.gameMode=SA.CLASSIC,n.ui.setMode(Ie.MESSAGE),n.ui.clearText(),this.end();return!0},"handler")},{label:u.t("menu:loadGame"),handler:N(()=>(n.ui.setOverlayMode(Ie.SAVE_SLOT,hC.LOAD,R=>{if(R===-1)return this.showOptions();this.loadSaveSlot(R)}),!0),"handler")},{label:u.t("menu:dailyRun"),handler:N(()=>(this.initDailyRun(),!0),"handler"),keepOpen:!0},{label:u.t("menu:settings"),handler:N(()=>(n.ui.setOverlayMode(Ie.SETTINGS),!0),"handler"),keepOpen:!0});const s={options:A,noCancel:!0,yOffset:47};n.ui.setMode(Ie.TITLE,s)}loadSaveSlot(A){n.sessionSlotId=A>-1||!Nt?A:Nt.lastSessionSlot,n.ui.setMode(Ie.MESSAGE),n.ui.resetModeChain(),n.gameData.loadSession(A,A===-1?this.lastSessionData:void 0).then(s=>{s?(this.loaded=!0,n.ui.showText(u.t("menu:sessionSuccess"),null,()=>this.end())):this.end()}).catch(s=>{console.error(s),n.ui.showText(u.t("menu:failedToLoadSession"),null)})}initDailyRun(){n.ui.setMode(Ie.SAVE_SLOT,hC.SAVE,A=>{if(n.clearPhaseQueue(),A===-1)return n.pushPhase(new PN),super.end();n.sessionSlotId=A;const s=N(R=>{n.gameMode=kl(SA.DAILY),n.setSeed(R),n.resetSeed(0),n.money=n.gameMode.getStartingMoney();const a=lk(R),i=n.gameMode.getStartingLevel(),r=n.getPlayerParty(),L=[];for(const l of a){const C=n.gameData.getSpeciesDexAttrProps(l.species,l.dexAttr),M=Math.min(C.formIndex,Math.max(l.species.forms.length-1,0)),D=l.species.malePercent!==null?C.female?at.FEMALE:at.MALE:at.GENDERLESS,_=n.addPlayerPokemon(l.species,i,l.abilityIndex,M,D,C.shiny,C.variant,void 0,l.nature);_.setVisible(!1),r.push(_),L.push(_.loadAssets())}Na(r,HE.DAILY_STARTER);const o=Array(3).fill(null).map(()=>J.EXP_SHARE().withIdFromFunc(J.EXP_SHARE).newModifier()).concat(Array(3).fill(null).map(()=>J.GOLDEN_EXP_CHARM().withIdFromFunc(J.GOLDEN_EXP_CHARM).newModifier())).concat([J.MAP().withIdFromFunc(J.MAP).newModifier()]).concat(Kk(r)).filter(l=>l!==null);for(const l of o)n.addModifier(l,!0,!1,!1,!0);n.updateModifiers(!0,!0),Promise.all(L).then(()=>{n.time.delayedCall(500,()=>n.playBgm()),n.gameData.gameStats.dailyRunSessionsPlayed++,n.newArena(n.gameMode.getStartingBiome()),n.newBattle(),n.arena.init(),n.sessionPlayTime=0,n.lastSavePlayTime=0,this.end()})},"generateDaily");!Or||f6?ok().then(R=>{if(R)s(R);else throw new Error("Daily run seed is null!")}).catch(R=>{console.error(`Failed to load daily run:
`,R)}):s(btoa(new Date().toISOString().substring(0,10)))})}end(){if(!this.loaded&&!n.gameMode.isDaily?(n.arena.preloadBgm(),n.gameMode=kl(this.gameMode),this.gameMode===SA.CHALLENGE?n.pushPhase(new HC):n.pushPhase(new dC),n.newArena(n.gameMode.getStartingBiome())):n.playBgm(),n.pushPhase(new gr(this.loaded)),this.loaded){const A=n.getPokemonAllowedInBattle().length;if(n.pushPhase(new QE(0,!0,!0)),n.currentBattle.double&&A>1&&n.pushPhase(new QE(1,!0,!0)),n.currentBattle.battleType!==Ut.TRAINER&&(n.currentBattle.waveIndex>1||!n.gameMode.isDaily)){const s=n.currentBattle.double?2:1;A>s&&(n.pushPhase(new cn(0,n.currentBattle.double)),n.currentBattle.double&&n.pushPhase(new cn(1,n.currentBattle.double)))}}for(const A of Object.keys(n.gameData.achvUnlocks))is.hasOwnProperty(A)&&A!=="CLASSIC_VICTORY"&&n.validateVoucher(is[A]);super.end()}};N(PN,"TitlePhase");let Ri=PN;const lK=class lK extends aE{constructor(A){super(),this.endCardPhase=A}start(){super.start();const A=N(()=>{n.gameData.saveAll(!0,!0,!0).then(s=>{if(!s)return n.reset(!0);n.gameData.tryClearSession(n.sessionSlotId).then(R=>{if(!R[0])return n.reset(!0);n.reset(),n.unshiftPhase(new Ri),this.end()})})},"saveAndReset");this.endCardPhase?n.ui.fadeOut(500).then(()=>{var s,R;n.ui.getMessageHandler().bg.setVisible(!0),(s=this.endCardPhase)==null||s.endCard.destroy(),(R=this.endCardPhase)==null||R.text.destroy(),A()}):A()}};N(lK,"PostGameOverPhase");let DP=lK;const CK=class CK extends GE{constructor(A,s){super(A),this.species=s}doReward(){return new Promise(A=>{const s=this.modifierType.newModifier();n.addModifier(s).then(()=>{n.playSound("level_up_fanfare"),n.ui.setMode(Ie.MESSAGE),n.ui.showText(u.t("battle:beatModeFirstTime",{speciesName:this.species.name,gameMode:n.gameMode.getName(),newModifier:s==null?void 0:s.type.name}),null,()=>{A()},null,!0,1500)})})}};N(CK,"RibbonModifierRewardPhase");let MP=CK;const UK=class UK extends aE{constructor(A){super(),this.unlockable=A}start(){n.time.delayedCall(2e3,()=>{n.gameData.unlocks[this.unlockable]=!0,n.playSound("level_up_fanfare"),n.ui.setMode(Ie.MESSAGE),n.ui.showText(u.t("battle:unlockedSomething",{unlockedThing:Dk(this.unlockable)}),null,()=>{n.time.delayedCall(1500,()=>n.arenaBg.setVisible(!0)),this.end()},null,!0,1500)})}};N(UK,"UnlockPhase");let Xi=UK;const uK=class uK extends dE{constructor(A=!1){super(),this.firstRibbons=[],this.isVictory=A}start(){var A;if(super.start(),n.gameMode.isClassic&&n.currentBattle.waveIndex>200&&(this.isVictory=!0),!this.isVictory&&((A=n.currentBattle.mysteryEncounter)!=null&&A.onGameOver)&&!n.currentBattle.mysteryEncounter.onGameOver())return this.end();if(this.isVictory&&n.gameMode.isEndless){const s=n.gameData.gender??Vt.UNSET,R=Vt[s].toLowerCase();n.ui.showDialogue(u.t("miscDialogue:ending_endless",{context:R}),u.t("miscDialogue:ending_name"),0,()=>this.handleGameOver())}else this.isVictory||!n.enableRetries?this.handleGameOver():n.ui.showText(u.t("battle:retryBattle"),null,()=>{n.ui.setMode(Ie.CONFIRM,()=>{n.ui.fadeOut(1250).then(()=>{n.reset(),n.clearPhaseQueue(),n.gameData.loadSession(n.sessionSlotId).then(()=>{n.pushPhase(new gr(!0));const s=n.getPokemonAllowedInBattle().length;n.pushPhase(new QE(0)),n.currentBattle.double&&s>1&&n.pushPhase(new QE(1)),n.currentBattle.waveIndex>1&&n.currentBattle.battleType!==Ut.TRAINER&&(n.pushPhase(new cn(0,n.currentBattle.double)),n.currentBattle.double&&s>1&&n.pushPhase(new cn(1,n.currentBattle.double))),n.ui.fadeIn(1250),this.end()})})},()=>this.handleGameOver(),!1,0,0,1e3)})}handleGameOver(){const A=N(s=>{n.disableMenu=!0,n.time.delayedCall(1e3,()=>{let R=!1;if(this.isVictory&&s)if(n.gameMode.isClassic){R=n.validateAchv(Ct.CLASSIC_VICTORY),n.validateAchv(Ct.UNEVOLVED_CLASSIC_VICTORY),n.gameData.gameStats.sessionsWon++;for(const r of n.getPlayerParty())this.awardRibbon(r),r.species.getRootSpeciesId()!==r.species.getRootSpeciesId(!0)&&this.awardRibbon(r,!0)}else n.gameMode.isDaily&&s&&n.gameData.gameStats.dailyRunSessionsWon++;const a=this.isVictory?1e4:5e3;n.fadeOutBgm(a,!0);const i=n.getField().filter(r=>r==null?void 0:r.isActive(!0));i.map(r=>r.hideInfo()),n.ui.fadeOut(a).then(()=>{i.map(L=>L.setVisible(!1)),n.setFieldScale(1,!0),n.clearPhaseQueue(),n.ui.clearText(),this.isVictory&&n.gameMode.isChallenge&&n.gameMode.challenges.forEach(L=>n.validateAchvs(hA,L));const r=N(L=>{if(this.isVictory&&s){this.handleUnlocks();for(const o of this.firstRibbons)n.unshiftPhase(new MP(J.VOUCHER_PLUS,o));R||n.unshiftPhase(new CP(J.VOUCHER_PREMIUM))}this.getRunHistoryEntry().then(o=>{n.gameData.saveRunHistory(o,this.isVictory),n.pushPhase(new DP(L)),this.end()})},"clear");if(this.isVictory&&n.gameMode.isClassic){const L="miscDialogue:ending";if(!n.ui.shouldSkipDialogue(L))n.ui.fadeIn(500).then(()=>{const o=n.gameData.gender??Vt.UNSET,l=Vt[o].toLowerCase(),C=u.t(L,{context:l});n.charSprite.showCharacter(`rival_${n.gameData.gender===Vt.FEMALE?"m":"f"}`,KM(C)).then(()=>{n.ui.showDialogue(L,n.gameData.gender===Vt.FEMALE?QA[U.RIVAL].name:QA[U.RIVAL].nameFemale,null,()=>{n.ui.fadeOut(500).then(()=>{n.charSprite.hide().then(()=>{const M=new cC;n.unshiftPhase(M),r(M)})})})})});else{const o=new cC;n.unshiftPhase(o),r(o)}}else r()})})},"doGameOver");!Or||f6?TO.savedata.session.newclear({slot:n.sessionSlotId,isVictory:this.isVictory,clientSessionId:eP}).then(s=>A(!!s)):this.isVictory?n.gameData.offlineNewClear().then(s=>{A(s)}):A(!1)}handleUnlocks(){this.isVictory&&n.gameMode.isClassic&&(n.gameData.unlocks[ws.ENDLESS_MODE]||n.unshiftPhase(new Xi(ws.ENDLESS_MODE)),n.getPlayerParty().filter(A=>A.fusionSpecies).length&&!n.gameData.unlocks[ws.SPLICED_ENDLESS_MODE]&&n.unshiftPhase(new Xi(ws.SPLICED_ENDLESS_MODE)),n.gameData.unlocks[ws.MINI_BLACK_HOLE]||n.unshiftPhase(new Xi(ws.MINI_BLACK_HOLE)),!n.gameData.unlocks[ws.EVIOLITE]&&n.getPlayerParty().some(A=>A.getSpeciesForm(!0).speciesId in bt)&&n.unshiftPhase(new Xi(ws.EVIOLITE)))}awardRibbon(A,s=!1){const R=ke(A.species.speciesId);n.gameData.incrementRibbonCount(R,s)===1&&this.firstRibbons.push(ke(A.species.getRootSpeciesId(s)))}async getRunHistoryEntry(){var s;const A=await n.gameData.getSession(n.sessionSlotId);return{seed:n.seed,playTime:n.sessionPlayTime,gameMode:n.gameMode.modeId,party:n.getPlayerParty().map(R=>new hs(R)),enemyParty:n.getEnemyParty().map(R=>new hs(R)),modifiers:A?A.modifiers:n.findModifiers(()=>!0).map(R=>new xa(R,!0)),enemyModifiers:A?A.enemyModifiers:n.findModifiers(()=>!0,!1).map(R=>new xa(R,!1)),arena:new QT(n.arena),pokeballCounts:n.pokeballCounts,money:Math.floor(n.money),score:n.score,waveIndex:n.currentBattle.waveIndex,battleType:n.currentBattle.battleType,trainer:n.currentBattle.trainer?new JT(n.currentBattle.trainer):null,gameVersion:n.game.config.gameVersion,timestamp:new Date().getTime(),challenges:n.gameMode.challenges.map(R=>new qT(R)),mysteryEncounterType:((s=n.currentBattle.mysteryEncounter)==null?void 0:s.encounterType)??-1,mysteryEncounterSaveData:n.mysteryEncounterSaveData}}};N(uK,"GameOverPhase");let GO=uK;const DK=class DK extends dE{constructor(A){super(),this.isVictory=A}start(){super.start(),n.gameData.gameStats.battles++,n.gameMode.isEndless&&n.currentBattle.waveIndex+1>n.gameData.gameStats.highestEndlessWave&&(n.gameData.gameStats.highestEndlessWave=n.currentBattle.waveIndex+1),this.isVictory&&(n.currentBattle.addBattleScore(),n.currentBattle.trainer&&n.gameData.gameStats.trainersDefeated++),n.gameMode.isEndless&&n.currentBattle.waveIndex>=5850&&(n.clearPhaseQueue(),n.unshiftPhase(new GO(!0)));for(const s of n.getField())s&&s.battleSummonData&&(s.battleSummonData.waveTurnCount=1);for(const s of n.getPokemonAllowedInBattle())YJ(wS,s,!1,this.isVictory);n.currentBattle.moneyScattered&&n.currentBattle.pickUpScatteredMoney(),n.clearEnemyHeldItemModifiers();const A=n.findModifiers(s=>s instanceof Ea||s instanceof nL);for(const s of A){const R=[];s instanceof nL&&R.push(n.getPokemonById(s.pokemonId)),s.lapse(...R)||n.removeModifier(s)}n.updateModifiers().then(()=>this.end())}};N(DK,"BattleEndPhase");let bI=DK;const MK=class MK extends aE{constructor(){super()}start(){super.start();const A=n.currentBattle.waveIndex,s=A%1e3?A%250?w.COMMON:w.GREAT:w.ULTRA;Na(n.getEnemyParty(),HE.ENEMY_BUFF);const R=Math.ceil(A/250);for(let a=0;a<R;a++)n.addEnemyModifier(Bk(s,n.findModifiers(i=>i instanceof hn,!1)),!0,!0);n.updateModifiers(!1,!0).then(()=>this.end())}};N(MK,"AddEnemyBuffModifierPhase");let _P=MK;const _K=class _K extends Ts{constructor(A,s=!1){super(A),this.isExpOnly=s}start(){var R;super.start();const A=n.currentBattle.isBattleMysteryEncounter();(!A||!((R=n.currentBattle.mysteryEncounter)!=null&&R.preventGameStatsUpdates))&&n.gameData.gameStats.pokemonDefeated++;const s=this.getPokemon().getExpValue();if(n.applyPartyExp(s,!0),A)return r8(!1,this.isExpOnly),this.end();if(!n.getEnemyParty().find(a=>n.currentBattle.battleType===Ut.WILD?a.isOnField():!(a!=null&&a.isFainted(!0))))if(n.pushPhase(new bI(!0)),n.currentBattle.battleType===Ut.TRAINER&&n.pushPhase(new GC),n.gameMode.isEndless||!n.gameMode.isWaveFinal(n.currentBattle.waveIndex)){if(n.pushPhase(new Br),n.gameMode.isClassic&&n.currentBattle.waveIndex===zA.EVIL_BOSS_2&&n.pushPhase(new GE(J.LOCK_CAPSULE)),n.currentBattle.waveIndex%10)n.pushPhase(new _O(void 0,void 0,this.getFixedBattleCustomModifiers()));else if(n.gameMode.isDaily)n.pushPhase(new GE(J.EXP_CHARM)),n.currentBattle.waveIndex>10&&!n.gameMode.isWaveFinal(n.currentBattle.waveIndex)&&n.pushPhase(new GE(J.GOLDEN_POKEBALL));else{const a=n.gameMode.isEndless?10:n.offsetGym?0:20;n.gameMode.isEndless&&n.currentBattle.waveIndex===10&&n.pushPhase(new GE(J.EXP_SHARE)),n.currentBattle.waveIndex<=750&&(n.currentBattle.waveIndex<=500||n.currentBattle.waveIndex%30===a)&&n.pushPhase(new GE(n.currentBattle.waveIndex%30!==a||n.currentBattle.waveIndex>250?J.EXP_CHARM:J.SUPER_EXP_CHARM)),n.currentBattle.waveIndex<=150&&!(n.currentBattle.waveIndex%50)&&n.pushPhase(new GE(J.GOLDEN_POKEBALL)),n.gameMode.isEndless&&!(n.currentBattle.waveIndex%50)&&(n.pushPhase(new GE(n.currentBattle.waveIndex%250?J.VOUCHER_PLUS:J.VOUCHER_PREMIUM)),n.pushPhase(new _P))}n.pushPhase(new si)}else n.currentBattle.battleType=Ut.CLEAR,n.score+=n.gameMode.getClearScoreBonus(),n.updateScoreText(),n.pushPhase(new GO(!0));this.end()}getFixedBattleCustomModifiers(){const A=n.gameMode,s=n.currentBattle.waveIndex;if(A.isFixedBattle(s))return A.getFixedBattle(s).customModifierRewardSettings}};N(_K,"VictoryPhase");let nS=_K;var PP=(E=>(E[E.PROFILE=0]="PROFILE",E[E.STATS=1]="STATS",E[E.MOVES=2]="MOVES",E))(PP||{}),mM=(E=>(E[E.DEFAULT=0]="DEFAULT",E[E.LEARN_MOVE=1]="LEARN_MOVE",E))(mM||{});const PK=class PK extends Vs{constructor(){super(Ie.SUMMARY)}setup(){const A=this.getUi();this.summaryContainer=n.add.container(0,0),this.summaryContainer.setVisible(!1),A.add(this.summaryContainer);const s=n.add.image(0,0,"summary_bg");s.setOrigin(0,1),this.summaryContainer.add(s),this.tabSprite=n.add.sprite(134,-s.displayHeight+16,"summary_tabs_1"),this.tabSprite.setOrigin(1,1),this.summaryContainer.add(this.tabSprite);const R=le(4,-165,u.t("pokemonSummary:pokemonInfo"),Q.SUMMARY);R.setOrigin(0,1),this.summaryContainer.add(R),this.shinyOverlay=n.add.image(6,-54,"summary_overlay_shiny"),this.shinyOverlay.setOrigin(0,1),this.shinyOverlay.setVisible(!1),this.summaryContainer.add(this.shinyOverlay),this.numberText=le(17,-149,"0000",Q.SUMMARY),this.numberText.setOrigin(0,1),this.summaryContainer.add(this.numberText),this.pokemonSprite=n.initPokemonSprite(n.add.sprite(56,-106,"pkmn__sub"),void 0,!1,!0),this.summaryContainer.add(this.pokemonSprite),this.nameText=le(6,-54,"",Q.SUMMARY),this.nameText.setOrigin(0,0),this.summaryContainer.add(this.nameText),this.splicedIcon=n.add.sprite(0,-54,"icon_spliced"),this.splicedIcon.setVisible(!1),this.splicedIcon.setOrigin(0,0),this.splicedIcon.setScale(.75),this.splicedIcon.setInteractive(new Phaser.Geom.Rectangle(0,0,12,15),Phaser.Geom.Rectangle.Contains),this.summaryContainer.add(this.splicedIcon),this.shinyIcon=n.add.image(0,-54,"shiny_star"),this.shinyIcon.setVisible(!1),this.shinyIcon.setOrigin(0,0),this.shinyIcon.setScale(.75),this.shinyIcon.setInteractive(new Phaser.Geom.Rectangle(0,0,12,15),Phaser.Geom.Rectangle.Contains),this.summaryContainer.add(this.shinyIcon),this.fusionShinyIcon=n.add.image(0,0,"shiny_star_2"),this.fusionShinyIcon.setVisible(!1),this.fusionShinyIcon.setOrigin(0,0),this.fusionShinyIcon.setScale(.75),this.summaryContainer.add(this.fusionShinyIcon),this.pokeball=n.add.sprite(6,-19,"pb"),this.pokeball.setOrigin(0,1),this.summaryContainer.add(this.pokeball),this.candyIcon=n.add.sprite(13,-140,"candy"),this.candyIcon.setScale(.8),this.summaryContainer.add(this.candyIcon),this.candyOverlay=n.add.sprite(13,-140,"candy_overlay"),this.candyOverlay.setScale(.8),this.summaryContainer.add(this.candyOverlay),this.candyShadow=n.add.sprite(13,-140,"candy"),this.candyShadow.setTint(0),this.candyShadow.setAlpha(.5),this.candyShadow.setScale(.8),this.candyShadow.setInteractive(new Phaser.Geom.Rectangle(0,0,30,16),Phaser.Geom.Rectangle.Contains),this.summaryContainer.add(this.candyShadow),this.candyCountText=le(20,-146,"x0",Q.WINDOW_ALT,{fontSize:"76px"}),this.candyCountText.setOrigin(0,0),this.summaryContainer.add(this.candyCountText),this.friendshipIcon=n.add.sprite(13,-60,"friendship"),this.friendshipIcon.setScale(.8),this.summaryContainer.add(this.friendshipIcon),this.friendshipOverlay=n.add.sprite(13,-60,"friendship_overlay"),this.friendshipOverlay.setScale(.8),this.summaryContainer.add(this.friendshipOverlay),this.friendshipShadow=n.add.sprite(13,-60,"friendship"),this.friendshipShadow.setTint(0),this.friendshipShadow.setAlpha(.5),this.friendshipShadow.setScale(.8),this.friendshipShadow.setInteractive(new Phaser.Geom.Rectangle(0,0,50,16),Phaser.Geom.Rectangle.Contains),this.summaryContainer.add(this.friendshipShadow),this.friendshipText=le(20,-66,"x0",Q.WINDOW_ALT,{fontSize:"76px"}),this.friendshipText.setOrigin(0,0),this.summaryContainer.add(this.friendshipText),this.championRibbon=n.add.image(88,-146,"champion_ribbon"),this.championRibbon.setOrigin(0,0),this.championRibbon.setScale(1.25),this.summaryContainer.add(this.championRibbon),this.championRibbon.setVisible(!1),this.levelText=le(36,-17,"",Q.SUMMARY_ALT),this.levelText.setOrigin(0,1),this.summaryContainer.add(this.levelText),this.genderText=le(96,-17,"",Q.SUMMARY),this.genderText.setOrigin(0,1),this.summaryContainer.add(this.genderText),this.statusContainer=n.add.container(-106,-16);const a=n.add.image(0,0,"summary_status");a.setOrigin(0,0),this.statusContainer.add(a);const i=le(3,0,u.t("pokemonSummary:status"),Q.SUMMARY);i.setOrigin(0,0),this.statusContainer.add(i),this.status=n.add.sprite(91,4,YR("statuses")),this.status.setOrigin(.5,0),this.statusContainer.add(this.status),this.summaryContainer.add(this.statusContainer),this.moveEffectContainer=n.add.container(106,-62),this.summaryContainer.add(this.moveEffectContainer);const r=n.add.image(0,0,"summary_moves_effect");r.setOrigin(0,0),this.moveEffectContainer.add(r);const L=le(8,12,u.t("pokemonSummary:powerAccuracyCategory"),Q.SUMMARY);L.setLineSpacing(9),L.setOrigin(0,0),this.moveEffectContainer.add(L),this.movePowerText=le(99,27,"0",Q.WINDOW_ALT),this.movePowerText.setOrigin(1,1),this.moveEffectContainer.add(this.movePowerText),this.moveAccuracyText=le(99,43,"0",Q.WINDOW_ALT),this.moveAccuracyText.setOrigin(1,1),this.moveEffectContainer.add(this.moveAccuracyText),this.moveCategoryIcon=n.add.sprite(99,57,"categories"),this.moveCategoryIcon.setOrigin(1,1),this.moveEffectContainer.add(this.moveCategoryIcon);const o=N(()=>{const l=n.add.sprite(0,0,this.getPageKey(0));return l.setOrigin(0,1),l},"getSummaryPageBg");this.summaryContainer.add(this.summaryPageContainer=n.add.container(106,0)),this.summaryPageContainer.add(o()),this.summaryPageContainer.setVisible(!1),this.summaryContainer.add(this.summaryPageTransitionContainer=n.add.container(106,0)),this.summaryPageTransitionContainer.add(o()),this.summaryPageTransitionContainer.setVisible(!1)}getPageKey(A){return A===void 0&&(A=this.cursor),`summary_${PP[A].toLowerCase()}`}show(A){var M,D;super.show(A),this.pokemon=A[0],this.summaryUiMode=A.length>1?A[1]:0,this.playerParty=A[4]??!0,n.ui.bringToTop(this.summaryContainer),this.summaryContainer.setVisible(!0),this.cursor=-1,this.shinyOverlay.setVisible(this.pokemon.isShiny());const s=TR[this.pokemon.species.getRootSpeciesId()];this.candyIcon.setTint(js(cs(s[0]))),this.candyOverlay.setTint(js(cs(s[1]))),this.numberText.setText(Dn(this.pokemon.species.speciesId,4)),this.numberText.setColor(this.getTextColor(this.pokemon.isShiny()?Q.SUMMARY_GOLD:Q.SUMMARY)),this.numberText.setShadowColor(this.getTextColor(this.pokemon.isShiny()?Q.SUMMARY_GOLD:Q.SUMMARY,!0));const R=this.pokemon.getSpriteKey(!0);try{this.pokemonSprite.play(R)}catch(_){console.error(`Failed to play animation for ${R}`,_)}this.pokemonSprite.setPipelineData("teraColor",yR(this.pokemon.getTeraType())),this.pokemonSprite.setPipelineData("ignoreTimeTint",!0),this.pokemonSprite.setPipelineData("spriteKey",this.pokemon.getSpriteKey()),this.pokemonSprite.setPipelineData("shiny",this.pokemon.shiny),this.pokemonSprite.setPipelineData("variant",this.pokemon.variant),["spriteColors","fusionSpriteColors"].map(_=>{var P,h,H;delete this.pokemonSprite.pipelineData[`${_}Base`],(h=(P=this.pokemon)==null?void 0:P.summonData)!=null&&h.speciesForm&&(_+="Base"),this.pokemonSprite.pipelineData[_]=(H=this.pokemon)==null?void 0:H.getSprite().pipelineData[_]}),this.pokemon.cry(),this.nameText.setText(this.pokemon.getNameToRender());const a=this.pokemon.isFusion();this.splicedIcon.setPositionRelative(this.nameText,this.nameText.displayWidth+2,3),this.splicedIcon.setVisible(a),this.splicedIcon.visible&&(this.splicedIcon.on("pointerover",()=>{var _,P,h,H;return n.ui.showTooltip("",`${(_=this.pokemon)==null?void 0:_.species.getName(this.pokemon.formIndex)}/${(H=(P=this.pokemon)==null?void 0:P.fusionSpecies)==null?void 0:H.getName((h=this.pokemon)==null?void 0:h.fusionFormIndex)}`,!0)}),this.splicedIcon.on("pointerout",()=>n.ui.hideTooltip())),n.gameData.starterData[this.pokemon.species.getRootSpeciesId()].classicWinCount>0&&n.gameData.starterData[this.pokemon.species.getRootSpeciesId(!0)].classicWinCount>0?this.championRibbon.setVisible(!0):this.championRibbon.setVisible(!1);let i=n.gameData.starterData[this.pokemon.species.getRootSpeciesId()].friendship;(!i||i===void 0)&&(i=0);const r=H1(KA[this.pokemon.species.getRootSpeciesId()]),L=16-16*(i/r);this.candyShadow.visible&&(this.candyShadow.on("pointerover",()=>n.ui.showTooltip("",`${i}/${r}`,!0)),this.candyShadow.on("pointerout",()=>n.ui.hideTooltip())),this.candyCountText.setText(`x${n.gameData.starterData[this.pokemon.species.getRootSpeciesId()].candyCount}`),this.candyShadow.setCrop(0,0,16,L),this.friendshipShadow.visible&&(this.friendshipShadow.on("pointerover",()=>n.ui.showTooltip("",`${u.t("pokemonSummary:friendship")}`,!0)),this.friendshipShadow.on("pointerout",()=>n.ui.hideTooltip())),this.friendshipText.setText(`${((M=this.pokemon)==null?void 0:M.friendship)||"0"} / 255`),this.friendshipShadow.setCrop(0,0,16,16-16*((((D=this.pokemon)==null?void 0:D.friendship)||0)/255));const o=a&&this.pokemon.shiny&&this.pokemon.fusionShiny,l=o?this.pokemon.variant:this.pokemon.getVariant();if(this.shinyIcon.setPositionRelative(this.nameText,this.nameText.displayWidth+(this.splicedIcon.visible?this.splicedIcon.displayWidth+1:0)+1,3),this.shinyIcon.setTexture(`shiny_star${o?"_1":""}`),this.shinyIcon.setVisible(this.pokemon.isShiny()),this.shinyIcon.setTint(yE(l)),this.shinyIcon.visible){const _=o||l?`${l===2?u.t("common:epicShiny"):l===1?u.t("common:rareShiny"):u.t("common:commonShiny")}${o?`/${this.pokemon.fusionVariant===2?u.t("common:epicShiny"):this.pokemon.fusionVariant===1?u.t("common:rareShiny"):u.t("common:commonShiny")}`:""}`:"";this.shinyIcon.on("pointerover",()=>n.ui.showTooltip("",`${u.t("common:shinyOnHover")}${_?` (${_})`:""}`,!0)),this.shinyIcon.on("pointerout",()=>n.ui.hideTooltip())}switch(this.fusionShinyIcon.setPosition(this.shinyIcon.x,this.shinyIcon.y),this.fusionShinyIcon.setVisible(o),a&&this.fusionShinyIcon.setTint(yE(this.pokemon.fusionVariant)),this.pokeball.setFrame(DO(this.pokemon.pokeball)),this.levelText.setText(this.pokemon.level.toString()),this.genderText.setText(SL(this.pokemon.getGender(!0))),this.genderText.setColor($n(this.pokemon.getGender(!0))),this.genderText.setShadowColor($n(this.pokemon.getGender(!0),!0)),this.summaryUiMode){case 0:const _=A.length<2?0:A[2];this.hideMoveEffect(!0),this.setCursor(_),A.length>3&&(this.selectCallback=A[3]);break;case 1:this.newMove=A[2],this.moveSelectFunction=A[3],this.showMoveEffect(!0),this.setCursor(2),this.showMoveSelect();break}const C=A.length>=2;return this.pokemon.status||this.pokemon.pokerus?(this.showStatus(!C),this.status.setFrame(this.pokemon.status?ne[this.pokemon.status.effect].toLowerCase():"pokerus")):this.hideStatus(!C),!0}processInput(A){var r,L,o,l,C,M,D,_;if(this.transitioning)return!1;const s=this.getUi(),R=s.handlers[Ie.PARTY].active;let a=!1,i=!1;if(this.moveSelect)if(A===k.ACTION)if(this.pokemon&&this.moveCursor<this.pokemon.moveset.length){if(this.summaryUiMode===1)this.moveSelectFunction&&this.moveSelectFunction(this.moveCursor);else if(this.selectedMoveIndex===-1)this.selectedMoveIndex=this.moveCursor,this.setCursor(this.moveCursor);else{if(this.selectedMoveIndex!==this.moveCursor){const P=(r=this.pokemon)==null?void 0:r.moveset[this.selectedMoveIndex];this.pokemon.moveset[this.selectedMoveIndex]=this.pokemon.moveset[this.moveCursor],this.pokemon.moveset[this.moveCursor]=P;const h=this.moveRowsContainer.getAt(this.selectedMoveIndex),H=this.moveRowsContainer.getAt(this.moveCursor);this.moveRowsContainer.moveTo(h,this.moveCursor),this.moveRowsContainer.moveTo(H,this.selectedMoveIndex),h.setY(this.moveCursor*16),H.setY(this.selectedMoveIndex*16)}this.selectedMoveIndex=-1,this.selectedMoveCursorObj&&(this.selectedMoveCursorObj.destroy(),this.selectedMoveCursorObj=null)}a=!0}else{if(this.moveCursor===4)return this.processInput(k.CANCEL);i=!0}else if(A===k.CANCEL)this.hideMoveSelect(),a=!0;else switch(A){case k.UP:a=this.setCursor(this.moveCursor?this.moveCursor-1:4);break;case k.DOWN:a=this.setCursor(this.moveCursor<4?this.moveCursor+1:0);break;case k.LEFT:if(this.moveSelect=!1,this.setCursor(1),this.summaryUiMode===1){this.hideMoveEffect(),this.destroyBlinkCursor(),a=!0;break}else{this.hideMoveSelect(),a=!0;break}}else if(A===k.ACTION)this.cursor===2?(this.showMoveSelect(),a=!0):this.cursor===0&&((L=this.pokemon)!=null&&L.hasPassive())&&((l=this.abilityContainer.nameText)==null||l.setVisible(!((o=this.abilityContainer.descriptionText)!=null&&o.visible)),(C=this.abilityContainer.descriptionText)==null||C.setVisible(!this.abilityContainer.descriptionText.visible),this.abilityContainer.labelImage.setVisible(!this.abilityContainer.labelImage.visible),(D=this.passiveContainer.nameText)==null||D.setVisible(!((M=this.passiveContainer.descriptionText)!=null&&M.visible)),(_=this.passiveContainer.descriptionText)==null||_.setVisible(!this.passiveContainer.descriptionText.visible),this.passiveContainer.labelImage.setVisible(!this.passiveContainer.labelImage.visible));else if(A===k.CANCEL){if(this.summaryUiMode===1)this.hideMoveSelect();else{if(this.selectCallback instanceof Function){const P=this.selectCallback;this.selectCallback=null,P()}R?s.setMode(Ie.PARTY):s.setMode(Ie.MESSAGE)}a=!0}else{const P=DE(PP);switch(A){case k.UP:case k.DOWN:if(this.summaryUiMode===1)break;if(!R)break;const h=A===k.DOWN,H=n.getPlayerParty(),d=this.pokemon?H.indexOf(this.pokemon):-1;if(h&&d<H.length-1||!h&&d){const f=this.cursor;this.clear(),this.show([H[d+(h?1:-1)],this.summaryUiMode,f])}break;case k.LEFT:this.cursor&&(a=this.setCursor(this.cursor-1));break;case k.RIGHT:this.cursor<P.length-1&&(a=this.setCursor(this.cursor+1),this.summaryUiMode===1&&this.cursor===2&&(this.moveSelect=!0));break}}return a?s.playSelect():i&&s.playError(),a||i}setCursor(A,s=!1){let R=s||this.moveCursor!==A;if(this.moveSelect){this.moveCursor=A;const a=this.getSelectedMove();a?(this.moveDescriptionText.setY(84),this.movePowerText.setText(a.power>=0?a.power.toString():"---"),this.moveAccuracyText.setText(a.accuracy>=0?a.accuracy.toString():"---"),this.moveCategoryIcon.setFrame(Pt[a.category].toLowerCase()),this.showMoveEffect()):this.hideMoveEffect(),this.moveDescriptionText.setText((a==null?void 0:a.effect)||"");const i=Math.floor(this.moveDescriptionText.displayHeight/14.83);this.descriptionScrollTween&&(this.descriptionScrollTween.remove(),this.descriptionScrollTween=null),i>3&&(this.descriptionScrollTween=n.tweens.add({targets:this.moveDescriptionText,delay:st(2e3),loop:-1,hold:st(2e3),duration:st((i-3)*2e3),y:`-=${14.83*(i-3)}`})),this.moveCursorObj||(this.moveCursorObj=n.add.sprite(-2,0,"summary_moves_cursor","highlight"),this.moveCursorObj.setOrigin(0,1),this.movesContainer.add(this.moveCursorObj)),this.moveCursorObj.setY(16*this.moveCursor+1),this.moveCursorBlinkTimer&&this.moveCursorBlinkTimer.destroy(),this.moveCursorObj.setVisible(!0),this.moveCursorBlinkTimer=n.time.addEvent({loop:!0,delay:st(600),callback:N(()=>{var r;(r=this.moveCursorObj)==null||r.setVisible(!1),n.time.delayedCall(st(100),()=>{this.moveCursorObj&&this.moveCursorObj.setVisible(!0)})},"callback")}),this.selectedMoveIndex>-1&&(this.selectedMoveCursorObj||(this.selectedMoveCursorObj=n.add.sprite(-2,0,"summary_moves_cursor","select"),this.selectedMoveCursorObj.setOrigin(0,1),this.movesContainer.add(this.selectedMoveCursorObj),this.movesContainer.moveBelow(this.selectedMoveCursorObj,this.moveCursorObj)),this.selectedMoveCursorObj.setY(16*this.selectedMoveIndex+1))}else if(R=this.cursor!==A,R){const a=this.cursor<A;this.cursor=A,this.tabSprite.setTexture(`summary_tabs_${this.cursor+1}`),this.getUi().hideTooltip(),this.summaryPageContainer.visible?(this.transitioning=!0,this.populatePageContainer(this.summaryPageTransitionContainer,a?A:A+1),a?this.summaryPageTransitionContainer.x+=214:this.populatePageContainer(this.summaryPageContainer),n.tweens.add({targets:this.summaryPageTransitionContainer,x:a?"-=214":"+=214",duration:250,onComplete:N(()=>{a?(this.populatePageContainer(this.summaryPageContainer),this.cursor===2&&(this.moveCursorObj=null,this.showMoveSelect(),this.showMoveEffect())):this.summaryPageTransitionContainer.x-=214,this.summaryPageTransitionContainer.setVisible(!1),this.transitioning=!1},"onComplete")}),this.summaryPageTransitionContainer.setVisible(!0)):(this.populatePageContainer(this.summaryPageContainer),this.summaryPageContainer.setVisible(!0))}return R}populatePageContainer(A,s){var a,i,r,L,o,l,C,M,D,_,P,h,H,d,f,B,F,W,b,x,$,j,z;s===void 0&&(s=this.cursor),A.getAll().length>1&&(A.each(se=>{se instanceof Phaser.GameObjects.Container&&se.removeAll(!0)}),A.removeBetween(1,void 0,!0));const R=A.getAt(0);switch(R.setTexture(this.getPageKey(s)),this.descriptionScrollTween&&(this.descriptionScrollTween.remove(),this.descriptionScrollTween=null),s){case 0:const se=n.add.container(0,-R.height);A.add(se);const Z=wE(7,12,`${u.t("pokemonSummary:ot")}/${NO((Nt==null?void 0:Nt.username)||u.t("pokemonSummary:unknown"),n.gameData.gender===Vt.FEMALE?Q.SUMMARY_PINK:Q.SUMMARY_BLUE)}`,Q.SUMMARY_ALT);Z.setOrigin(0,0),se.add(Z);const q=le(174,12,n.gameData.trainerId.toString(),Q.SUMMARY_ALT);q.setOrigin(0,0),se.add(q);const p=le(7,28,`${u.t("pokemonSummary:type")}/`,Q.WINDOW_ALT);p.setOrigin(0,0),se.add(p);const oe=N((pe,qe,$e=!1)=>{const Mt=p.width*p.scale+9+34*pe,Jt=$e?n.add.sprite(Mt,42,"type_tera"):n.add.sprite(Mt,42,YR("types"),I[qe].toLowerCase());if($e){Jt.setScale(.5);const xt=yR(qe);Jt.setTint(Phaser.Display.Color.GetColor(xt[0],xt[1],xt[2]))}return Jt.setOrigin(0,1),Jt},"getTypeIcon"),me=(a=this.pokemon)==null?void 0:a.getTypes(!1,!1,!0);if(se.add(oe(0,me[0])),me.length>1&&se.add(oe(1,me[1])),(i=this.pokemon)!=null&&i.isTerastallized()&&se.add(oe(me.length,this.pokemon.getTeraType(),!0)),(r=this.pokemon)!=null&&r.getLuck()){const pe=le(141,28,u.t("common:luckIndicator"),Q.SUMMARY_ALT);pe.setOrigin(0,0),se.add(pe);const qe=le(141+pe.displayWidth+2,28,this.pokemon.getLuck().toString(),Q.SUMMARY);qe.setOrigin(0,0),qe.setTint(yE(Math.min(this.pokemon.getLuck()-1,2))),se.add(qe)}this.abilityContainer={labelImage:n.add.image(0,0,"summary_profile_ability"),ability:(L=this.pokemon)==null?void 0:L.getAbility(!0),nameText:null,descriptionText:null};const Me=[this.abilityContainer];(o=this.pokemon)!=null&&o.hasPassive()&&(this.passiveContainer={labelImage:n.add.image(0,0,"summary_profile_passive"),ability:this.pokemon.getPassiveAbility(),nameText:null,descriptionText:null},Me.push(this.passiveContainer),this.abilityPrompt=n.add.image(0,0,(l=n.inputController)!=null&&l.gamepadSupport?"summary_profile_prompt_a":"summary_profile_prompt_z"),this.abilityPrompt.setPosition(8,43),this.abilityPrompt.setVisible(!0),this.abilityPrompt.setOrigin(0,0),se.add(this.abilityPrompt)),Me.forEach(pe=>{var Jt,xt;pe.labelImage.setPosition(17,43),pe.labelImage.setVisible(!0),pe.labelImage.setOrigin(0,0),se.add(pe.labelImage),pe.nameText=le(7,66,(Jt=pe.ability)==null?void 0:Jt.name,Q.SUMMARY_ALT),pe.nameText.setOrigin(0,1),se.add(pe.nameText),pe.descriptionText=le(7,69,(xt=pe.ability)==null?void 0:xt.description,Q.WINDOW_ALT,{wordWrap:{width:1224}}),pe.descriptionText.setOrigin(0,0),se.add(pe.descriptionText);const qe=n.make.graphics({});qe.setScale(6),qe.fillStyle(16777215),qe.beginPath(),qe.fillRect(110,90.5,206,31);const $e=qe.createGeometryMask();pe.descriptionText.setMask($e);const Mt=Math.floor(pe.descriptionText.displayHeight/14.83);Mt>2&&(pe.descriptionText.setY(69),this.descriptionScrollTween=n.tweens.add({targets:pe.descriptionText,delay:st(2e3),loop:-1,hold:st(2e3),duration:st((Mt-2)*2e3),y:`-=${14.83*(Mt-2)}`}))}),(C=this.passiveContainer)==null||C.labelImage.setVisible(!1),(D=(M=this.passiveContainer)==null?void 0:M.nameText)==null||D.setVisible(!1),(P=(_=this.passiveContainer)==null?void 0:_.descriptionText)==null||P.setVisible(!1);const We=NO("",Q.WINDOW_ALT),De=Jn(At[(h=this.pokemon)==null?void 0:h.getNature()]),ie=`${NO(Jn($O((H=this.pokemon)==null?void 0:H.getNature())),Q.SUMMARY_RED)}${We}`,Ae=u.t("pokemonSummary:memoString",{metFragment:u.t(`pokemonSummary:metFragment.${((d=this.pokemon)==null?void 0:d.metBiome)===-1?"apparently":"normal"}`,{biome:`${NO(TL((f=this.pokemon)==null?void 0:f.metBiome),Q.SUMMARY_RED)}${We}`,level:`${NO((B=this.pokemon)==null?void 0:B.metLevel.toString(),Q.SUMMARY_RED)}${We}`,wave:`${NO((F=this.pokemon)!=null&&F.metWave?this.pokemon.metWave.toString():u.t("pokemonSummary:unknownTrainer"),Q.SUMMARY_RED)}${We}`}),natureFragment:u.t(`pokemonSummary:natureFragment.${De}`,{nature:ie})}),ee=wE(7,113,String(Ae),Q.WINDOW_ALT);ee.setOrigin(0,0),se.add(ee);break;case 1:const Le=n.add.container(0,-R.height);A.add(Le),VO.forEach((pe,qe)=>{var cR,iE,En,dn;const $e=u.t(hE(pe)),Mt=qe%3,Jt=Math.floor(qe/3),xt=xo((cR=this.pokemon)==null?void 0:cR.getNature(),qe),_E=le(27+115*Jt+(Jt===1?5:0),56+16*Mt,$e,xt===1?Q.SUMMARY:xt>1?Q.SUMMARY_PINK:Q.SUMMARY_BLUE);_E.setOrigin(.5,0),Le.add(_E);const GR=pe!==K.HP?_l((iE=this.pokemon)==null?void 0:iE.getStat(pe)):`${_l((En=this.pokemon)==null?void 0:En.hp,!0)}/${_l((dn=this.pokemon)==null?void 0:dn.getMaxHp(),!0)}`,PE=le(120+88*Jt,56+16*Mt,GR,Q.WINDOW_ALT);PE.setOrigin(1,0),Le.add(PE)}),n.findModifiers(pe=>{var qe;return pe instanceof dt&&pe.pokemonId===((qe=this.pokemon)==null?void 0:qe.id)},this.playerParty).sort(Ro).forEach((pe,qe)=>{const $e=pe.getIcon(!0);$e.setPosition(qe%17*12+3,14*Math.floor(qe/17)+15),Le.add($e),$e.setInteractive(new Phaser.Geom.Rectangle(0,0,32,32),Phaser.Geom.Rectangle.Contains),$e.on("pointerover",()=>n.ui.showTooltip(pe.type.name,pe.type.getDescription(),!0)),$e.on("pointerout",()=>n.ui.hideTooltip())});const de=(W=this.pokemon)==null?void 0:W.level,Rt=(b=this.pokemon)==null?void 0:b.levelExp,Bt=(x=this.pokemon)==null?void 0:x.exp,tt=($=this.pokemon)==null?void 0:$.species.growthRate,ht=g6(de+1,tt),eA=de<n.getMaxExpLevel()?Rt/ht:0,Xt=le(6,112,u.t("pokemonSummary:expPoints"),Q.SUMMARY);Xt.setOrigin(0,0),Le.add(Xt);const XA=le(6,128,u.t("pokemonSummary:nextLv"),Q.SUMMARY);XA.setOrigin(0,0),Le.add(XA);const VA=le(208,112,Bt.toString(),Q.WINDOW_ALT);VA.setOrigin(1,0),Le.add(VA);const v=de<n.getMaxExpLevel()?jR(de+1,tt)-Bt:0,Ke=le(208,128,v.toString(),Q.WINDOW_ALT);Ke.setOrigin(1,0),Le.add(Ke);const fe=n.add.image(140,145,"summary_stats_overlay_exp");fe.setOrigin(0,0),Le.add(fe);const re=n.make.graphics({});re.setScale(6),re.fillStyle(16777215),re.beginPath(),re.fillRect(140+A.x,145+A.y+21,Math.floor(eA*64),3);const ae=re.createGeometryMask();fe.setMask(ae);break;case 2:this.movesContainer=n.add.container(5,-R.height+26),A.add(this.movesContainer),this.extraMoveRowContainer=n.add.container(0,64),this.extraMoveRowContainer.setVisible(!1),this.movesContainer.add(this.extraMoveRowContainer);const Pe=n.add.image(-2,1,"summary_moves_overlay_row");Pe.setOrigin(0,1),this.extraMoveRowContainer.add(Pe);const Qe=le(35,0,this.summaryUiMode===1&&this.newMove?this.newMove.name:u.t("pokemonSummary:cancel"),this.summaryUiMode===1?Q.SUMMARY_PINK:Q.SUMMARY);if(Qe.setOrigin(0,1),this.extraMoveRowContainer.add(Qe),this.summaryUiMode===1){if(this.extraMoveRowContainer.setVisible(!0),this.newMove&&this.pokemon){const Mt=YR("types"),Jt=this.pokemon.getMoveType(this.newMove),xt=n.add.sprite(0,0,Mt,I[Jt].toLowerCase());xt.setOrigin(0,1),this.extraMoveRowContainer.add(xt)}const pe=n.add.image(163,-1,"summary_moves_overlay_pp");pe.setOrigin(0,1),this.extraMoveRowContainer.add(pe);const qe=Dn((j=this.newMove)==null?void 0:j.pp,2,"  "),$e=le(173,1,`${qe}/${qe}`,Q.WINDOW);$e.setOrigin(0,1),this.extraMoveRowContainer.add($e)}this.moveRowsContainer=n.add.container(0,0),this.movesContainer.add(this.moveRowsContainer);for(let pe=0;pe<4;pe++){const qe=this.pokemon&&this.pokemon.moveset.length>pe?(z=this.pokemon)==null?void 0:z.moveset[pe]:null,$e=n.add.container(0,16*pe);if(this.moveRowsContainer.add($e),qe&&this.pokemon){const _E=YR("types"),GR=this.pokemon.getMoveType(qe.getMove()),PE=n.add.sprite(0,0,_E,I[GR].toLowerCase());PE.setOrigin(0,1),$e.add(PE)}const Mt=le(35,0,qe?qe.getName():"-",Q.SUMMARY);Mt.setOrigin(0,1),$e.add(Mt);const Jt=n.add.image(163,-1,"summary_moves_overlay_pp");Jt.setOrigin(0,1),$e.add(Jt);const xt=le(173,1,"--/--",Q.WINDOW);if(xt.setOrigin(0,1),qe){const _E=qe.getMovePp(),GR=_E-qe.ppUsed;xt.setText(`${Dn(GR,2,"  ")}/${Dn(_E,2,"  ")}`)}$e.add(xt)}this.moveDescriptionText=le(2,84,"",Q.WINDOW_ALT,{wordWrap:{width:1212}}),this.movesContainer.add(this.moveDescriptionText);const Ze=n.make.graphics({});Ze.setScale(6),Ze.fillStyle(16777215),Ze.beginPath(),Ze.fillRect(112,130,202,46);const He=Ze.createGeometryMask();this.moveDescriptionText.setMask(He);break}}showStatus(A){this.statusVisible||(this.statusVisible=!0,n.tweens.add({targets:this.statusContainer,x:0,duration:A?0:250,ease:"Sine.easeOut"}))}hideStatus(A){this.statusVisible&&(this.statusVisible=!1,n.tweens.add({targets:this.statusContainer,x:-106,duration:A?0:250,ease:"Sine.easeIn"}))}getSelectedMove(){return this.cursor!==2?null:this.moveCursor<4&&this.pokemon&&this.moveCursor<this.pokemon.moveset.length?this.pokemon.moveset[this.moveCursor].getMove():this.summaryUiMode===1&&this.moveCursor===4?this.newMove:null}showMoveSelect(){this.moveSelect=!0,this.extraMoveRowContainer.setVisible(!0),this.selectedMoveIndex=-1,this.setCursor(0),this.showMoveEffect()}hideMoveSelect(){if(this.summaryUiMode===1){this.moveSelectFunction&&this.moveSelectFunction(4);return}this.moveSelect=!1,this.extraMoveRowContainer.setVisible(!1),this.moveDescriptionText.setText(""),this.destroyBlinkCursor(),this.hideMoveEffect()}destroyBlinkCursor(){this.moveCursorBlinkTimer&&(this.moveCursorBlinkTimer.destroy(),this.moveCursorBlinkTimer=null),this.moveCursorObj&&(this.moveCursorObj.destroy(),this.moveCursorObj=null),this.selectedMoveCursorObj&&(this.selectedMoveCursorObj.destroy(),this.selectedMoveCursorObj=null)}showMoveEffect(A){this.moveEffectsVisible||(this.moveEffectsVisible=!0,n.tweens.add({targets:this.moveEffectContainer,x:6,duration:A?0:250,ease:"Sine.easeOut"}))}hideMoveEffect(A){this.moveEffectsVisible&&(this.moveEffectsVisible=!1,n.tweens.add({targets:this.moveEffectContainer,x:106,duration:A?0:250,ease:"Sine.easeIn"}))}clear(){super.clear(),this.pokemon=null,this.cursor=-1,this.newMove=null,this.moveSelect&&(this.moveSelect=!1,this.moveSelectFunction=null,this.extraMoveRowContainer.setVisible(!1),this.moveCursorBlinkTimer&&(this.moveCursorBlinkTimer.destroy(),this.moveCursorBlinkTimer=null),this.moveCursorObj&&(this.moveCursorObj.destroy(),this.moveCursorObj=null),this.selectedMoveCursorObj&&(this.selectedMoveCursorObj.destroy(),this.selectedMoveCursorObj=null),this.hideMoveEffect(!0)),this.summaryContainer.setVisible(!1),this.summaryPageContainer.setVisible(!1)}};N(PK,"SummaryUiHandler");let GP=PK;const ko=1;function un(E,A,s,R,a){const i=ke(E).getSpriteKey(A??!1,s??0,R??!1,a??0),r=ke(E).getSpriteAtlasPath(A??!1,s??0,R??!1,a??0);return{spriteKey:i,fileRoot:r}}N(un,"getSpriteKeysFromSpecies");function FM(E){const A=E.getSpeciesForm().getSpriteKey(E.getGender()===at.FEMALE,E.formIndex,E.shiny,E.variant),s=E.getSpeciesForm().getSpriteAtlasPath(E.getGender()===at.FEMALE,E.formIndex,E.shiny,E.variant);return{spriteKey:A,fileRoot:s}}N(FM,"getSpriteKeysFromPokemon");function o9(E=!1,A=!1,s=!1){const R=n.getPlayerParty();let a,i=null;const r=R.filter(o=>(!E||o.isAllowedInChallenge())&&(A||!o.isFainted())),L=R.filter(o=>o.isAllowedInChallenge());if(s&&r.length===1){const o=R.filter(l=>(!E||l.isAllowedInChallenge())&&l.isFainted());o.length>0&&(a=ce(o.length),i=o[a])}return!i&&r.length>0&&(a=ce(r.length),i=r[a]),!i&&E&&L.length>0&&(a=ce(L.length),i=L[a]),i||(a=ce(R.length),i=R[a]),i}N(o9,"getRandomPlayerPokemon");function w1(E=!1,A=!1){const s=n.getPlayerParty();let R=null;for(const a of s)E&&!a.isAllowedInChallenge()||!A&&a.isFainted()||(R=R?(R==null?void 0:R.level)<(a==null?void 0:a.level)?a:R:a);return R}N(w1,"getHighestLevelPlayerPokemon");function l9(E,A=!1,s=!1){const R=n.getPlayerParty();let a=null;for(const i of R)A&&!i.isAllowedInChallenge()||!s&&i.isFainted()||(a=a?a.getStat(E)<(i==null?void 0:i.getStat(E))?i:a:i);return a}N(l9,"getHighestStatPlayerPokemon");function C9(E=!1,A=!1){const s=n.getPlayerParty();let R=null;for(const a of s)E&&!a.isAllowedInChallenge()||!A&&a.isFainted()||(R=R?(R==null?void 0:R.stats.reduce((i,r)=>i+r))<(a==null?void 0:a.stats.reduce((i,r)=>i+r))?a:R:a);return R}N(C9,"getHighestStatTotalPlayerPokemon");function v1(E,A,s,R=!0,a=!0,i=!0){let r=Array.isArray(E)?E[0]:E,L=Array.isArray(E)?E[1]:E,o=Object.keys(KA).map(C=>[parseInt(C),KA[C]]).filter(C=>{const M=ke(C[0]);return M&&(!A||!A.includes(C[0]))&&(R||!M.subLegendary)&&(a||!M.legendary)&&(i||!M.mythical)}).map(C=>[ke(C[0]),C[1]]);s&&s.length>0&&(o=o.filter(C=>s.includes(C[0].type1)||!ve(C[0].type2)&&s.includes(C[0].type2)));let l=o.filter(C=>C[1]>=r&&C[1]<=L);for(;l.length===0&&!(r===0&&L===10);)r>0?r--:L++,l=o.filter(C=>C[1]>=r&&C[1]<=L);if(l.length>0){const C=ce(l.length);return Phaser.Math.RND.shuffle(l)[C][0].speciesId}return e.BULBASAUR}N(v1,"getRandomSpeciesByStarterCost");function L8(E){E.hp=0,E.trySetStatus(ne.FAINT),E.updateInfo(),RE(u.t("battle:fainted",{pokemonNameWithAffix:te(E)}))}N(L8,"koPlayerPokemon");function U9(E,A){const s=Math.round(E.hp+A),R=Math.max(Math.min(s,E.getMaxHp()),0);R===0?L8(E):E.hp=R}N(U9,"applyHpChangeToPokemon");function V1(E,A){A<=0&&console.warn("Healing pokemon with `applyDamageToPokemon` is not recommended! Please use `applyHealToPokemon` instead."),E.isAllowedInBattle()&&E.hp-A<=0&&(A=E.hp-1),U9(E,-A)}N(V1,"applyDamageToPokemon");async function Db(E,A){var a;const s=(a=J.MYSTERY_ENCOUNTER_SHUCKLE_JUICE().generateType(n.getPlayerParty(),[A]))==null?void 0:a.withIdFromFunc(J.MYSTERY_ENCOUNTER_SHUCKLE_JUICE),R=s==null?void 0:s.newModifier(E);R&&(await n.addModifier(R,!1,!1,!1,!0),E.calculateStats())}N(Db,"modifyPlayerPokemonBST");async function CR(E,A,s){const R=A.newModifier(E),a=n.findModifier(i=>i instanceof dt&&i.type.id===A.id&&i.pokemonId===E.id&&i.matchType(R));a&&a.getStackCount()>=a.getMaxStackCount()||await n.addModifier(R,!1,!1,!1,!0)}N(CR,"applyModifierTypeToPlayerPokemon");function u9(E,A,s){const R=E.y;if(!s){const L=3*E.getMaxHp(),o=2*E.hp,l=E.species.catchRate,C=bl(A),M=E.status?p6(E.status.effect):1,D=Math.round((L-o)*l*C/L*M);s=Math.round(65536/Math.sqrt(Math.sqrt(255/D)))}const a=E.getFieldPositionOffset(),i=DO(A),r=n.addFieldSprite(91,105,"pb",i);return r.setOrigin(.5,.625),n.field.add(r),n.time.delayedCall(300,()=>{n.field.moveBelow(r,E)}),new Promise(L=>{n.trainer.setTexture(`trainer_${n.gameData.gender===Vt.FEMALE?"f":"m"}_back_pb`),n.time.delayedCall(512,()=>{n.playSound("se/pb_throw"),n.trainer.setFrame("2"),n.time.delayedCall(256,()=>{n.trainer.setFrame("3"),n.time.delayedCall(768,()=>{n.trainer.setTexture(`trainer_${n.gameData.gender===Vt.FEMALE?"f":"m"}_back`)})}),n.tweens.add({targets:r,x:{value:236+a[0],ease:"Linear"},y:{value:16+a[1],ease:"Cubic.easeOut"},duration:500,onComplete:N(()=>{r.setTexture("pb",`${i}_opening`),n.time.delayedCall(17,()=>r.setTexture("pb",`${i}_open`)),n.playSound("se/pb_rel"),E.tint(zO(A)),BM(r.x,r.y,A),n.tweens.add({targets:E,duration:500,ease:"Sine.easeIn",scale:.25,y:20,onComplete:N(()=>{r.setTexture("pb",`${i}_opening`),E.setVisible(!1),n.playSound("se/pb_catch"),n.time.delayedCall(17,()=>r.setTexture("pb",`${i}`));const o=N(()=>{let l=0;const C=r.x,M=n.tweens.addCounter({from:0,to:1,repeat:4,yoyo:!0,ease:"Cubic.easeOut",duration:250,repeatDelay:500,onUpdate:N(D=>{if(l&&l<4){const _=D.getValue(),P=l%2===1?1:-1;r.setX(C+_*4*P),r.setAngle(_*27.5*P)}},"onUpdate"),onRepeat:N(()=>{if(!E.species.isObtainable())M.stop(),Mb(E,R,r,A).then(()=>L(!1));else if(l++<3)ce(65536)<s?n.playSound("se/pb_move"):(M.stop(),Mb(E,R,r,A).then(()=>L(!1)));else{n.playSound("se/pb_lock"),I8(r);const D=n.add.sprite(r.x,r.y,"pb","pb");D.setOrigin(r.originX,r.originY),D.setTintFill(0),D.setAlpha(0),n.field.add(D),n.tweens.add({targets:D,alpha:.375,duration:200,easing:"Sine.easeOut",onComplete:N(()=>{n.tweens.add({targets:D,alpha:0,duration:200,easing:"Sine.easeIn",onComplete:N(()=>D.destroy(),"onComplete")})},"onComplete")})}},"onRepeat"),onComplete:N(()=>{Kr(E,r,A).then(()=>L(!0))},"onComplete")})},"doShake");n.time.delayedCall(250,()=>V6(r,16,72,350,o))},"onComplete")})},"onComplete")})})})}N(u9,"trainerThrowPokeball");function Mb(E,A,s,R){return new Promise(a=>{var r;n.playSound("se/pb_rel"),E.setY(A),((r=E.status)==null?void 0:r.effect)!==ne.SLEEP&&E.cry(E.getHpRatio()>.25?void 0:{rate:.85}),E.tint(zO(R)),E.setVisible(!0),E.untint(250,"Sine.easeOut");const i=DO(R);s.setTexture("pb",`${i}_opening`),n.time.delayedCall(17,()=>s.setTexture("pb",`${i}_open`)),n.tweens.add({targets:E,duration:250,ease:"Sine.easeOut",scale:1}),n.currentBattle.lastUsedPokeball=R,N8(s),n.ui.showText(u.t("battle:pokemonBrokeFree",{pokemonName:E.getNameToRender()}),null,()=>a(),null,!0)})}N(Mb,"failCatch");async function Kr(E,A,s,R=!0,a=!1){const i=E.fusionSpecies?E.getFusionSpeciesForm():E.getSpeciesForm();return i.abilityHidden&&(E.fusionSpecies?E.fusionAbilityIndex:E.abilityIndex)===i.getAbilityCount()-1&&n.validateAchv(Ct.HIDDEN_ABILITY),E.species.subLegendary&&n.validateAchv(Ct.CATCH_SUB_LEGENDARY),E.species.legendary&&n.validateAchv(Ct.CATCH_LEGENDARY),E.species.mythical&&n.validateAchv(Ct.CATCH_MYTHICAL),n.pokemonInfoContainer.show(E,!0),n.gameData.updateSpeciesDexIvs(E.species.getRootSpeciesId(!0),E.ivs),new Promise(r=>{const L=N(()=>{const o=N(()=>{n.getEnemyParty().some(M=>M.id===E.id)||n.getEnemyParty().push(E),n.unshiftPhase(new nS(E.id,!0)),n.pokemonInfoContainer.hide(),A&&N8(A),r()},"end"),l=N(()=>{E&&n.field.remove(E,!0)},"removePokemon"),C=N(M=>{const D=E.addToParty(s,M),_=n.findModifiers(P=>P instanceof dt,!1);n.getPlayerParty().filter(P=>P.isShiny()).length===6&&n.validateAchv(Ct.SHINY_PARTY),Promise.all(_.map(P=>n.addModifier(P,!0))).then(()=>{n.updateModifiers(!0),l(),D?D.loadAssets().then(o):o()})},"addToParty");Promise.all([E.hideInfo(),n.gameData.setPokemonCaught(E)]).then(()=>{if(n.getPlayerParty().length===6){const M=N(()=>{n.ui.showText(u.t("battle:partyFull",{pokemonName:E.getNameToRender()}),null,()=>{n.pokemonInfoContainer.makeRoomForConfirmUi(1,!0),n.ui.setMode(Ie.CONFIRM,()=>{const D=n.addPlayerPokemon(E.species,E.level,E.abilityIndex,E.formIndex,E.gender,E.shiny,E.variant,E.ivs,E.nature,E);n.ui.setMode(Ie.SUMMARY,D,0,mM.DEFAULT,()=>{n.ui.setMode(Ie.MESSAGE).then(()=>{M()})},!1)},()=>{n.ui.setMode(Ie.PARTY,Ps.RELEASE,0,(D,_)=>{n.ui.setMode(Ie.MESSAGE).then(()=>{D<6?C(D):M()})})},()=>{n.ui.setMode(Ie.MESSAGE).then(()=>{l(),o()})},"fullParty")})},"promptRelease");M()}else C()})},"doPokemonCatchMenu");R?n.ui.showText(u.t(a?"battle:pokemonObtained":"battle:pokemonCaught",{pokemonName:E.getNameToRender()}),null,L,0,!0):L()})}N(Kr,"catchPokemon");function N8(E){E&&n.tweens.add({targets:E,duration:250,delay:250,ease:"Sine.easeIn",alpha:0,onComplete:N(()=>{E.destroy()},"onComplete")})}N(N8,"removePb");async function D9(E){await new Promise(A=>{n.playSound("se/flee"),n.tweens.add({targets:E,x:"+=16",y:"-=16",alpha:0,duration:1e3,ease:"Sine.easeIn",scale:E.getSpriteScale(),onComplete:N(()=>{E.setVisible(!1),n.field.remove(E,!0),qt(u.t("battle:pokemonFled",{pokemonName:E.getNameToRender()}),null,600,!1).then(()=>{A()})},"onComplete")})})}N(D9,"doPokemonFlee");function M9(E){return new Promise(A=>{n.tweens.add({targets:E,x:"+=16",y:"-=16",alpha:0,duration:1e3,ease:"Sine.easeIn",scale:E.getSpriteScale(),onComplete:N(()=>{E.setVisible(!1),n.field.remove(E,!0),qt(u.t("battle:playerFled",{pokemonName:E.getNameToRender()}),null,600,!1).then(()=>{A()})},"onComplete")})})}N(M9,"doPlayerFlee");const _b=[[e.SCYTHER,40],[e.SCIZOR,40],[e.KLEAVOR,40],[e.PINSIR,40],[e.HERACROSS,40],[e.YANMA,40],[e.YANMEGA,40],[e.SHUCKLE,40],[e.ANORITH,40],[e.ARMALDO,40],[e.ESCAVALIER,40],[e.ACCELGOR,40],[e.JOLTIK,40],[e.GALVANTULA,40],[e.DURANT,40],[e.LARVESTA,40],[e.VOLCARONA,40],[e.DEWPIDER,40],[e.ARAQUANID,40],[e.WIMPOD,40],[e.GOLISOPOD,40],[e.SIZZLIPEDE,40],[e.CENTISKORCH,40],[e.NYMBLE,40],[e.LOKIX,40],[e.BUZZWOLE,1],[e.PHEROMOSA,1]];function _9(E){const A=_b.reduce((a,i)=>a+i[1],0),s=ce(A);let R=0;for(const a of _b)if(R+=a[1],s<R){const i=ke(a[0]);return ke(i.getSpeciesForLevel(E,!0))}return ke(e.SCYTHER)}N(_9,"getGoldenBugNetSpecies");function Zo(E=0){const A=n.currentBattle;return A.getLevelForWave()+Math.max(Math.round(A.waveIndex/10*E),0)}N(Zo,"getEncounterPokemonLevelForWave");async function Pb(E){const A=E.fusionSpecies?E.getFusionSpeciesForm():E.getSpeciesForm();return A.abilityHidden&&(E.fusionSpecies?E.fusionAbilityIndex:E.abilityIndex)===A.getAbilityCount()-1&&n.validateAchv(Ct.HIDDEN_ABILITY),E.species.subLegendary&&n.validateAchv(Ct.CATCH_SUB_LEGENDARY),E.species.legendary&&n.validateAchv(Ct.CATCH_LEGENDARY),E.species.mythical&&n.validateAchv(Ct.CATCH_MYTHICAL),n.gameData.updateSpeciesDexIvs(E.species.getRootSpeciesId(!0),E.ivs),n.gameData.setPokemonCaught(E,!0,!1,!1)}N(Pb,"addPokemonDataToDexAndValidateAchievements");function Xa(E,A){return E.isAllowedInChallenge()?E.isAllowedInBattle()?null:mA(A)??null:u.t("partyUiHandler:cantBeUsed",{pokemonName:E.getNameToRender()})??null}N(Xa,"isPokemonValidForEncounterOptionSelection");function T8(E,A){E.isFusion()?(E.fusionCustomPokemonData||(E.fusionCustomPokemonData=new rs),E.fusionCustomPokemonData.ability=A):(E.customPokemonData||(E.customPokemonData=new rs),E.customPokemonData.ability=A)}N(T8,"applyAbilityOverrideToPokemon");const GK=class GK extends Phaser.GameObjects.Container{constructor(A){var C;if(super(n,-72,76),this.encounter=A,this.enterFromRight=A.enterIntroVisualsFromRight??!1,this.spriteConfigs=A.spriteConfigs.map(M=>{const D={...M};if(!ve(D.species)){const _=un(D.species,void 0,void 0,D.isShiny,D.variant);D.spriteKey=_.spriteKey,D.fileRoot=_.fileRoot,D.isPokemon=!0}return D}),!this.spriteConfigs)return;const s=N((M,D,_)=>{const P=n.addFieldSprite(0,0,M);return P.setOrigin(.5,1),P.setPipeline(n.spritePipeline,{tone:[0,0,0,0],hasShadow:!!D,yShadowOffset:_??0}),P},"getSprite"),R=N((M,D,_)=>{const P=n.add.sprite(-19,2,"items",M);return P.setOrigin(.5,1),P.setPipeline(n.spritePipeline,{tone:[0,0,0,0],hasShadow:!!D,yShadowOffset:_??0}),P},"getItemSprite"),a=-40,i=40,r=4;let L=0;const o=Math.round((i-a)/Math.max(this.spriteConfigs.filter(M=>!M.x&&!M.y).length,1));this.shinySparkleSprites=[];const l=n.add.container(0,0);(C=this.spriteConfigs)==null||C.forEach(M=>{const{spriteKey:D,isItem:_,hasShadow:P,scale:h,x:H,y:d,yShadow:f,alpha:B,isPokemon:F,isShiny:W,variant:b}=M;let x,$,j;_?(x=R(D,P,f),$=R(D)):(x=s(D,P,f),$=s(D),F&&W&&(x.setPipelineData("spriteKey",D),$.setPipelineData("spriteKey",D),x.setPipelineData("shiny",!0),x.setPipelineData("variant",b),$.setPipelineData("shiny",!0),$.setPipelineData("variant",b),j=n.add.sprite(x.x,x.y,"shiny"),j.setOrigin(.5,1),j.setVisible(!1),this.shinySparkleSprites.push({sprite:j,variant:b??0}),l.add(j))),x.setVisible(!M.hidden),$.setVisible(!1),h&&(x.setScale(h),$.setScale(h)),H||d?(H&&(x.setPosition(r+H,x.y),$.setPosition(r+H,$.y)),d&&(x.setPosition(x.x,x.y+d),$.setPosition($.x,$.y+d))):this.spriteConfigs.length===1?(x.x=r,$.x=r):(x.x=a+(L+.5)*o+r,$.x=a+(L+.5)*o+r,L++),ve(j)||j.setPosition(x.x,x.y),ve(B)||(x.setAlpha(B),$.setAlpha(B)),this.add(x),this.add($)}),this.add(l)}loadAssets(){return new Promise(A=>{this.spriteConfigs||A();const s=[];this.spriteConfigs.forEach(R=>{R.isPokemon?(n.loadPokemonAtlas(R.spriteKey,R.fileRoot),R.isShiny&&s.push(n.loadPokemonVariantAssets(R.spriteKey,R.fileRoot,R.variant))):R.isItem?n.loadAtlas("items",""):n.loadAtlas(R.spriteKey,R.fileRoot)}),n.load.once(Phaser.Loader.Events.COMPLETE,()=>{this.spriteConfigs.every(R=>{if(R.isItem)return!0;const a=console.warn;console.warn=()=>{};const i=n.anims.generateFrameNames(R.spriteKey,{zeroPad:4,suffix:".png",start:1,end:128});return console.warn=a,n.anims.exists(R.spriteKey)||n.anims.create({key:R.spriteKey,frames:i,frameRate:10,repeat:-1}),!0}),Promise.all(s).then(()=>A())}),n.load.isLoading()||n.load.start()})}initSprite(){this.spriteConfigs&&(this.getSprites().map((A,s)=>{if(!this.spriteConfigs[s].isItem&&(A.setTexture(this.spriteConfigs[s].spriteKey).setFrame(0),A.texture.frameTotal>1)){const R=A.texture.frames["0001.png"];A.setFrame(R??0)}}),this.getTintSprites().map((A,s)=>{if(!this.spriteConfigs[s].isItem&&(A.setTexture(this.spriteConfigs[s].spriteKey).setFrame(0),A.texture.frameTotal>1)){const R=A.texture.frames["0001.png"];A.setFrame(R??0)}}),this.spriteConfigs.every((A,s)=>{if(!A.tint)return!0;const R=this.getAt(s*2+1);return this.tint(R,0,A.tint),!0}))}tryPlaySprite(A,s,R){return A.texture.key==="__MISSING"?(console.error(`No texture found for '${R.key}'!`),!1):A.texture.frameTotal<=1?(console.warn(`No animation found for '${R.key}'. Is this intentional?`),!1):(A.play(R),s.play(R),!0)}playShinySparkles(){for(const A of this.shinySparkleSprites)n.time.delayedCall(500,()=>{gM(A.sprite,A.variant)})}playAnim(){if(!this.spriteConfigs)return;const A=this.getSprites(),s=this.getTintSprites();this.spriteConfigs.forEach((R,a)=>{if(!R.disableAnimation){const i={key:R.spriteKey,repeat:R!=null&&R.repeat?-1:0,startFrame:(R==null?void 0:R.startFrame)??0};this.tryPlaySprite(A[a],s[a],i)}})}getSpriteAtIndex(A){if(!this.spriteConfigs)return[];const s=[];return s.push(this.getAt(A*2)),s.push(this.getAt(A*2+1)),s}getSprites(){if(!this.spriteConfigs)return[];const A=[];return this.spriteConfigs.forEach((s,R)=>{A.push(this.getAt(R*2))}),A}getTintSprites(){if(!this.spriteConfigs)return[];const A=[];return this.spriteConfigs.forEach((s,R)=>{A.push(this.getAt(R*2+1))}),A}tint(A,s,R,a,i){A.setTintFill(s),A.setVisible(!0),a?(A.setAlpha(0),n.tweens.add({targets:A,alpha:R||1,duration:a,ease:i||"Linear"})):A.setAlpha(R)}tintAll(A,s,R,a){this.getTintSprites().map(r=>{this.tint(r,A,s,R,a)})}untint(A,s,R){s?n.tweens.add({targets:A,alpha:0,duration:s,ease:R||"Linear",onComplete:N(()=>{A.setVisible(!1),A.setAlpha(1)},"onComplete")}):(A.setVisible(!1),A.setAlpha(1))}untintAll(A,s){this.getTintSprites().map(a=>{this.untint(a,A,s)})}setVisible(A){return this.getSprites().forEach(s=>{s.setVisible(A)}),super.setVisible(A)}};N(GK,"MysteryEncounterIntroVisuals");let IS=GK;const cK=class cK{};N(cK,"EncounterSceneRequirement");let Oi=cK;const hK=class hK{};N(hK,"EncounterPokemonRequirement");let jO=hK;const GN=class GN extends jO{static Some(...A){return new GN(!1,...A)}static Every(...A){return new GN(!0,...A)}constructor(A,...s){super(),this.isAnd=A,this.invertQuery=!1,this.minNumberOfPokemon=1,this.requirements=s}meetsRequirement(){return this.isAnd?this.requirements.every(A=>A.meetsRequirement()):this.requirements.some(A=>A.meetsRequirement())}queryParty(A){if(this.isAnd)return this.requirements.reduce((s,R)=>R.queryParty(s),A);{const s=this.requirements.find(R=>R.queryParty(A).length>0);return s?s.queryParty(A):[]}}getDialogueToken(A){if(this.isAnd)throw new Error("Not implemented (Sorry)");for(const s of this.requirements)if(s.meetsRequirement())return s.getDialogueToken(A);return this.requirements[0].getDialogueToken(A)}};N(GN,"CombinationPokemonRequirement");let ni=GN;const HK=class HK extends Oi{constructor(A){super(),this.waveRange=A}meetsRequirement(){if(!ve(this.waveRange)&&this.waveRange[0]<=this.waveRange[1]){const A=n.currentBattle.waveIndex;if(A>=0&&this.waveRange[0]>=0&&this.waveRange[0]>A||this.waveRange[1]>=0&&this.waveRange[1]<A)return!1}return!0}getDialogueToken(A){return["waveIndex",n.currentBattle.waveIndex.toString()]}};N(HK,"WaveRangeRequirement");let cP=HK;const dK=class dK extends Oi{constructor(A,s){super(),this.waveModuli=A,this.modulusValue=s}meetsRequirement(){return this.waveModuli.includes(n.currentBattle.waveIndex%this.modulusValue)}getDialogueToken(A){return["waveIndex",n.currentBattle.waveIndex.toString()]}};N(dK,"WaveModulusRequirement");let hP=dK;const fK=class fK extends Oi{constructor(A,s){super(),this.partySizeRange=A,this.excludeDisallowedPokemon=s}meetsRequirement(){if(!ve(this.partySizeRange)&&this.partySizeRange[0]<=this.partySizeRange[1]){const A=this.excludeDisallowedPokemon?n.getPokemonAllowedInBattle().length:n.getPlayerParty().length;if(A>=0&&this.partySizeRange[0]>=0&&this.partySizeRange[0]>A||this.partySizeRange[1]>=0&&this.partySizeRange[1]<A)return!1}return!0}getDialogueToken(A){return["partySize",n.getPlayerParty().length.toString()]}};N(fK,"PartySizeRequirement");let HP=fK;const BK=class BK extends Oi{constructor(A,s=1){super(),this.minNumberOfItems=s,this.requiredHeldItemModifiers=Array.isArray(A)?A:[A]}meetsRequirement(){var R;const A=n.getPlayerParty();if(ve(A)||((R=this.requiredHeldItemModifiers)==null?void 0:R.length)<0)return!1;let s=0;return this.requiredHeldItemModifiers.forEach(a=>{const i=n.findModifiers(r=>r.constructor.name===a);(i==null?void 0:i.length)>0&&i.forEach(r=>{s+=r.stackCount})}),s>=this.minNumberOfItems}getDialogueToken(A){return["requiredItem",this.requiredHeldItemModifiers[0]]}};N(BK,"PersistentModifierRequirement");let fC=BK;const gK=class gK extends Oi{constructor(A,s){super(),this.requiredMoney=A??0,this.scalingMultiplier=s??0}meetsRequirement(){const A=n.money;return ve(A)?!1:(this.scalingMultiplier>0&&(this.requiredMoney=n.getWaveMoneyAmount(this.scalingMultiplier)),!(this.requiredMoney>0&&this.requiredMoney>A))}getDialogueToken(A){return["money",this.scalingMultiplier>0?n.getWaveMoneyAmount(this.scalingMultiplier).toString():this.requiredMoney.toString()]}};N(gK,"MoneyRequirement");let en=gK;const KK=class KK extends jO{constructor(A,s=!0,R=1,a=!1){super(),this.excludeFainted=s,this.minNumberOfPokemon=R,this.invertQuery=a,this.requiredType=Array.isArray(A)?A:[A]}meetsRequirement(){let A=n.getPlayerParty();return ve(A)?!1:(this.excludeFainted&&(A=A.filter(s=>!s.isFainted())),this.queryParty(A).length>=this.minNumberOfPokemon)}queryParty(A){return this.invertQuery?A.filter(s=>this.requiredType.filter(R=>s.getTypes().includes(R)).length===0):A.filter(s=>this.requiredType.filter(R=>s.getTypes().includes(R)).length>0)}getDialogueToken(A){const s=this.requiredType.filter(R=>A==null?void 0:A.getTypes().includes(R));return s.length>0?["type",I[s[0]]]:["type",""]}};N(KK,"TypeRequirement");let mr=KK;const mK=class mK extends jO{constructor(A,s,R=1,a=!1){super(),this.requiredMoves=[],this.excludeDisallowedPokemon=s,this.minNumberOfPokemon=R,this.invertQuery=a,this.requiredMoves=Array.isArray(A)?A:[A]}meetsRequirement(){var s;const A=n.getPlayerParty();return ve(A)||((s=this.requiredMoves)==null?void 0:s.length)<0?!1:this.queryParty(A).length>=this.minNumberOfPokemon}queryParty(A){return this.invertQuery?A.filter(s=>(!this.excludeDisallowedPokemon||s.isAllowedInBattle())&&!s.moveset.some(R=>(R==null?void 0:R.moveId)&&this.requiredMoves.includes(R.moveId))):A.filter(s=>(!this.excludeDisallowedPokemon||s.isAllowedInBattle())&&s.moveset.some(R=>(R==null?void 0:R.moveId)&&this.requiredMoves.includes(R.moveId)))}getDialogueToken(A){const s=A==null?void 0:A.moveset.filter(R=>(R==null?void 0:R.moveId)&&this.requiredMoves.includes(R.moveId));return s&&s.length>0&&s[0]?["move",s[0].getName()]:["move",""]}};N(mK,"MoveRequirement");let kI=mK;const FK=class FK extends jO{constructor(A,s,R=1,a=!1){super(),this.excludeDisallowedPokemon=s,this.minNumberOfPokemon=R,this.invertQuery=a,this.requiredAbilities=Array.isArray(A)?A:[A]}meetsRequirement(){var s;const A=n.getPlayerParty();return ve(A)||((s=this.requiredAbilities)==null?void 0:s.length)<0?!1:this.queryParty(A).length>=this.minNumberOfPokemon}queryParty(A){return this.invertQuery?A.filter(s=>(!this.excludeDisallowedPokemon||s.isAllowedInBattle())&&this.requiredAbilities.filter(R=>s.hasAbility(R,!1)).length===0):A.filter(s=>(!this.excludeDisallowedPokemon||s.isAllowedInBattle())&&this.requiredAbilities.some(R=>s.hasAbility(R,!1)))}getDialogueToken(A){const s=this.requiredAbilities.find(R=>A==null?void 0:A.hasAbility(R,!1));return ve(s)?["ability",""]:["ability",NE[s].name]}};N(FK,"AbilityRequirement");let BC=FK;const pK=class pK extends jO{constructor(A,s=1,R=!1){super(),this.minNumberOfPokemon=s,this.invertQuery=R,this.requiredStatusEffect=Array.isArray(A)?A:[A]}meetsRequirement(){var R;const A=n.getPlayerParty();if(ve(A)||((R=this.requiredStatusEffect)==null?void 0:R.length)<0)return!1;const s=this.queryParty(A).length>=this.minNumberOfPokemon;return console.log(s),s}queryParty(A){return this.invertQuery?A.filter(s=>!this.requiredStatusEffect.some(R=>{var a;return R===ne.NONE?ve(s.status)||ve(s.status.effect)||s.status.effect===R:((a=s.status)==null?void 0:a.effect)===R})):A.filter(s=>this.requiredStatusEffect.some(R=>{var a;return R===ne.NONE?ve(s.status)||ve(s.status.effect)||s.status.effect===R:((a=s.status)==null?void 0:a.effect)===R}))}getDialogueToken(A){const s=this.requiredStatusEffect.filter(R=>{var a;return R===ne.NONE?ve(A==null?void 0:A.status)||ve(A.status.effect)||A.status.effect===R:((a=A.status)==null?void 0:a.effect)===R});return s.length>0?["status",ne[s[0]]]:["status",""]}};N(pK,"StatusEffectRequirement");let dP=pK;const WK=class WK extends jO{constructor(A,s=1,R=!1,a=!0){super(),this.minNumberOfPokemon=s,this.invertQuery=R,this.requiredHeldItemModifiers=Array.isArray(A)?A:[A],this.requireTransferable=a}meetsRequirement(){const A=n.getPlayerParty();return ve(A)?!1:this.queryParty(A).length>=this.minNumberOfPokemon}queryParty(A){return this.invertQuery?A.filter(s=>s.getHeldItems().filter(R=>!this.requiredHeldItemModifiers.some(a=>R.constructor.name===a)&&(!this.requireTransferable||R.isTransferable)).length>0):A.filter(s=>this.requiredHeldItemModifiers.some(R=>s.getHeldItems().some(a=>a.constructor.name===R&&(!this.requireTransferable||a.isTransferable))))}getDialogueToken(A){const s=A==null?void 0:A.getHeldItems().filter(R=>this.requiredHeldItemModifiers.some(a=>R.constructor.name===a)&&(!this.requireTransferable||R.isTransferable));return s&&s.length>0?["heldItem",s[0].type.name]:["heldItem",""]}};N(WK,"HeldItemRequirement");let pI=WK;const YK=class YK extends jO{constructor(A,s=1,R=!1,a=!0){super(),this.minNumberOfPokemon=s,this.invertQuery=R,this.requiredHeldItemTypes=Array.isArray(A)?A:[A],this.requireTransferable=a}meetsRequirement(){const A=n.getPlayerParty();return ve(A)?!1:this.queryParty(A).length>=this.minNumberOfPokemon}queryParty(A){return this.invertQuery?A.filter(s=>s.getHeldItems().filter(R=>!this.requiredHeldItemTypes.some(a=>R instanceof Pn&&R.type.moveType===a&&(!this.requireTransferable||R.isTransferable))).length>0):A.filter(s=>this.requiredHeldItemTypes.some(R=>s.getHeldItems().some(a=>a instanceof Pn&&a.type.moveType===R&&(!this.requireTransferable||a.isTransferable))))}getDialogueToken(A){const s=A==null?void 0:A.getHeldItems().filter(R=>this.requiredHeldItemTypes.some(a=>R instanceof Pn&&R.type.moveType===a)&&(!this.requireTransferable||R.isTransferable));return s&&s.length>0?["heldItem",s[0].type.name]:["heldItem",""]}};N(YK,"AttackTypeBoosterHeldItemTypeRequirement");let gC=YK;const yK=class yK extends jO{constructor(A,s=1,R=!1){super(),this.minNumberOfPokemon=s,this.invertQuery=R,this.requiredHealthRange=A}meetsRequirement(){if(!ve(this.requiredHealthRange)&&this.requiredHealthRange[0]<=this.requiredHealthRange[1]){const A=n.getPlayerParty();if(this.queryParty(A).length<this.minNumberOfPokemon)return!1}return!0}queryParty(A){return this.invertQuery?A.filter(s=>s.getHpRatio()<this.requiredHealthRange[0]||s.getHpRatio()>this.requiredHealthRange[1]):A.filter(s=>s.getHpRatio()>=this.requiredHealthRange[0]&&s.getHpRatio()<=this.requiredHealthRange[1])}getDialogueToken(A){const s=A==null?void 0:A.getHpRatio();return ve(s)?["healthRatio",""]:["healthRatio",Math.floor(s*100).toString()+"%"]}};N(yK,"HealthRatioRequirement");let fP=yK;const wK=class wK extends jO{constructor(A,s={}){super(),this.requiredMoves=Array.isArray(A)?A:[A],this.excludeLevelMoves=s.excludeLevelMoves??!1,this.excludeTmMoves=s.excludeTmMoves??!1,this.excludeEggMoves=s.excludeEggMoves??!1,this.includeFainted=s.includeFainted??!1,this.minNumberOfPokemon=s.minNumberOfPokemon??1,this.invertQuery=s.invertQuery??!1}meetsRequirement(){var s;const A=n.getPlayerParty().filter(R=>this.includeFainted?R.isAllowedInChallenge():R.isAllowedInBattle());return ve(A)||((s=this.requiredMoves)==null?void 0:s.length)<0?!1:this.queryParty(A).length>=this.minNumberOfPokemon}queryParty(A){return this.invertQuery?A.filter(s=>!this.requiredMoves.some(R=>this.getAllPokemonMoves(s).includes(R))):A.filter(s=>this.requiredMoves.every(R=>this.getAllPokemonMoves(s).includes(R)))}getDialogueToken(A){return["requiredMoves",this.requiredMoves.map(s=>new nt(s).getName()).join(", ")]}getPokemonLevelMoves(A){return A.getLevelMoves().map(([s,R])=>R)}getAllPokemonMoves(A){const s=[];return this.excludeLevelMoves||s.push(...this.getPokemonLevelMoves(A)??[]),this.excludeTmMoves||s.push(...A.compatibleTms??[]),this.excludeEggMoves||s.push(...A.getEggMoves()??[]),s}};N(wK,"CanLearnMoveRequirement");let BP=wK;var ct=(E=>(E[E.DEFAULT=0]="DEFAULT",E[E.DISABLED_OR_DEFAULT=1]="DISABLED_OR_DEFAULT",E[E.DEFAULT_OR_SPECIAL=2]="DEFAULT_OR_SPECIAL",E[E.DISABLED_OR_SPECIAL=3]="DISABLED_OR_SPECIAL",E))(ct||{});const vK=class vK{constructor(A){ve(A)||Object.assign(this,A),this.hasDexProgress=this.hasDexProgress??!1,this.requirements=this.requirements??[],this.primaryPokemonRequirements=this.primaryPokemonRequirements??[],this.secondaryPokemonRequirements=this.secondaryPokemonRequirements??[]}hasRequirements(){return this.requirements.length>0||this.primaryPokemonRequirements.length>0||this.secondaryPokemonRequirements.length>0}meetsRequirements(){return!this.requirements.some(A=>!A.meetsRequirement())&&this.meetsSupportingRequirementAndSupportingPokemonSelected()&&this.meetsPrimaryRequirementAndPrimaryPokemonSelected()}pokemonMeetsPrimaryRequirements(A){return!this.primaryPokemonRequirements.some(s=>!s.queryParty(n.getPlayerParty()).map(R=>R.id).includes(A.id))}meetsPrimaryRequirementAndPrimaryPokemonSelected(){if(!this.primaryPokemonRequirements||this.primaryPokemonRequirements.length===0)return!0;let A=n.getPlayerParty();for(const s of this.primaryPokemonRequirements)if(s.meetsRequirement()){const R=s.queryParty(n.getPlayerParty());A=A.filter(a=>R.includes(a))}else return this.primaryPokemon=void 0,!1;if(A.length===0)return!1;if(this.excludePrimaryFromSecondaryRequirements&&this.secondaryPokemon&&this.secondaryPokemon.length>0){const s=[],R=[];for(const a of A)this.secondaryPokemon.includes(a)?R.push(a):s.push(a);return s.length>0?(this.primaryPokemon=s[ce(s.length)],!0):R.length>1||this.secondaryPokemon.length-R.length>=1?(this.primaryPokemon=R[ce(R.length)],this.secondaryPokemon=this.secondaryPokemon.filter(a=>a!==this.primaryPokemon),!0):(console.log("Mystery Encounter Edge Case: Requirement not met due to primay pokemon overlapping with support pokemon. There's no valid primary pokemon left."),!1)}else return this.primaryPokemon=A[0],!0}meetsSupportingRequirementAndSupportingPokemonSelected(){if(!this.secondaryPokemonRequirements||this.secondaryPokemonRequirements.length===0)return this.secondaryPokemon=[],!0;let A=n.getPlayerParty();for(const s of this.secondaryPokemonRequirements)if(s.meetsRequirement()){const R=s.queryParty(n.getPlayerParty());A=A.filter(a=>R.includes(a))}else return this.secondaryPokemon=[],!1;return this.secondaryPokemon=A,!0}};N(vK,"MysteryEncounterOption");let gP=vK;const jD=class jD{constructor(){this.optionMode=ct.DEFAULT,this.requirements=[],this.primaryPokemonRequirements=[],this.secondaryPokemonRequirements=[],this.excludePrimaryFromSecondaryRequirements=!1,this.isDisabledOnRequirementsNotMet=!0,this.hasDexProgress=!1}static newOptionWithMode(A){return Object.assign(new jD,{optionMode:A})}withHasDexProgress(A){return Object.assign(this,{hasDexProgress:A})}withSceneRequirement(A){return this.requirements.push(A),Object.assign(this,{requirements:this.requirements})}withSceneMoneyRequirement(A,s){return this.withSceneRequirement(new en(A,s))}withPreOptionPhase(A){return Object.assign(this,{onPreOptionPhase:A})}withOptionPhase(A){return Object.assign(this,{onOptionPhase:A})}withPostOptionPhase(A){return Object.assign(this,{onPostOptionPhase:A})}withPrimaryPokemonRequirement(A){return this.primaryPokemonRequirements.push(A),Object.assign(this,{primaryPokemonRequirements:this.primaryPokemonRequirements})}withPokemonTypeRequirement(A,s,R,a){return this.withPrimaryPokemonRequirement(new mr(A,s,R,a))}withPokemonCanLearnMoveRequirement(A,s){return this.withPrimaryPokemonRequirement(new BP(A,s))}withSecondaryPokemonRequirement(A,s=!0){return this.secondaryPokemonRequirements.push(A),this.excludePrimaryFromSecondaryRequirements=s,Object.assign(this,{secondaryPokemonRequirements:this.secondaryPokemonRequirements})}withDialogue(A){return this.dialogue=A,this}build(){return new gP(this)}};N(jD,"MysteryEncounterOptionBuilder");let pt=jD;var wt=(E=>(E[E.COMMON=66]="COMMON",E[E.GREAT=40]="GREAT",E[E.ULTRA=19]="ULTRA",E[E.ROGUE=3]="ROGUE",E[E.MASTER=0]="MASTER",E))(wt||{});const P9=2,G9=1,VK=class VK{constructor(A){this.startOfBattleEffects=[],ve(A)||Object.assign(this,A),this.encounterTier=this.encounterTier??wt.COMMON,this.localizationKey=this.localizationKey??"",this.dialogue=this.dialogue??{},this.spriteConfigs=this.spriteConfigs?[...this.spriteConfigs]:[],this.maxAllowedEncounters=this.maxAllowedEncounters??this.encounterTier===wt.ROGUE?G9:P9,this.encounterMode=lE.DEFAULT,this.requirements=this.requirements?this.requirements:[],this.hideBattleIntroMessage=this.hideBattleIntroMessage??!1,this.autoHideIntroVisuals=this.autoHideIntroVisuals??!0,this.enterIntroVisualsFromRight=this.enterIntroVisualsFromRight??!1,this.continuousEncounter=this.continuousEncounter??!1,this.startOfBattleEffectsComplete=!1,this.lockEncounterRewardTiers=!0,this.dialogueTokens={},this.enemyPartyConfigs=[],this.startOfBattleEffects=[],this.introVisuals=void 0,this.misc=null,this.expMultiplier=1,this.loadAssets=[]}meetsRequirements(){const A=!this.requirements.some(a=>!a.meetsRequirement()),s=this.meetsSecondaryRequirementAndSecondaryPokemonSelected(),R=this.meetsPrimaryRequirementAndPrimaryPokemonSelected();return A&&s&&R}pokemonMeetsPrimaryRequirements(A){return!this.primaryPokemonRequirements.some(s=>!s.queryParty(n.getPlayerParty()).map(R=>R.id).includes(A.id))}meetsPrimaryRequirementAndPrimaryPokemonSelected(){if(!this.primaryPokemonRequirements||this.primaryPokemonRequirements.length===0){const s=n.getPlayerParty().filter(R=>R.isActive(!0));return s.length>0?this.primaryPokemon=s[0]:this.primaryPokemon=n.getPlayerParty().filter(R=>R.isAllowedInBattle())[0],!0}let A=n.getPlayerParty();for(const s of this.primaryPokemonRequirements)if(s.meetsRequirement())A=A.filter(R=>s.queryParty(n.getPlayerParty()).includes(R));else return this.primaryPokemon=void 0,!1;if(A.length===0)return!1;if(this.excludePrimaryFromSupportRequirements&&this.secondaryPokemon&&this.secondaryPokemon.length>0){const s=[],R=[];for(const a of A)this.secondaryPokemon.includes(a)?R.push(a):s.push(a);return s.length>0?(this.primaryPokemon=s[ce(s.length,0)],!0):R.length>1||this.secondaryPokemon.length-R.length>=1?(this.primaryPokemon=R[ce(R.length,0)],this.secondaryPokemon=this.secondaryPokemon.filter(a=>a!==this.primaryPokemon),!0):(console.log("Mystery Encounter Edge Case: Requirement not met due to primary pokemon overlapping with secondary pokemon. There's no valid primary pokemon left."),!1)}else return this.primaryPokemon=A[ce(A.length,0)],!0}meetsSecondaryRequirementAndSecondaryPokemonSelected(){if(!this.secondaryPokemonRequirements||this.secondaryPokemonRequirements.length===0)return this.secondaryPokemon=[],!0;let A=n.getPlayerParty();for(const s of this.secondaryPokemonRequirements)if(s.meetsRequirement())A=A.filter(R=>s.queryParty(n.getPlayerParty()).includes(R));else return this.secondaryPokemon=[],!1;return this.secondaryPokemon=A,!0}initIntroVisuals(){this.introVisuals=new IS(this)}populateDialogueTokensFromRequirements(){var A,s,R;if(this.meetsRequirements(),((A=this.requirements)==null?void 0:A.length)>0)for(const a of this.requirements){const i=a.getDialogueToken();(i==null?void 0:i.length)===2&&this.setDialogueToken(...i)}if(this.primaryPokemon&&this.primaryPokemon.length>0){this.setDialogueToken("primaryName",this.primaryPokemon.getNameToRender());for(const a of this.primaryPokemonRequirements)if(!a.invertQuery){const i=a.getDialogueToken(this.primaryPokemon);(i==null?void 0:i.length)===2&&this.setDialogueToken("primary"+Ki(i[0]),i[1])}}if(((s=this.secondaryPokemonRequirements)==null?void 0:s.length)>0&&this.secondaryPokemon&&this.secondaryPokemon.length>0){this.setDialogueToken("secondaryName",this.secondaryPokemon[0].getNameToRender());for(const a of this.secondaryPokemonRequirements)if(!a.invertQuery){const i=a.getDialogueToken(this.secondaryPokemon[0]);(i==null?void 0:i.length)===2&&this.setDialogueToken("primary"+Ki(i[0]),i[1]),this.setDialogueToken("secondary"+Ki(i[0]),i[1])}}for(let a=0;a<this.options.length;a++){const i=this.options[a];i.meetsRequirements();const r=a+1;if(i.requirements.length>0)for(const L of i.requirements){const o=L.getDialogueToken();(o==null?void 0:o.length)===2&&this.setDialogueToken("option"+r+Ki(o[0]),o[1])}if(i.primaryPokemonRequirements.length>0&&i.primaryPokemon){this.setDialogueToken("option"+r+"PrimaryName",i.primaryPokemon.getNameToRender());for(const L of i.primaryPokemonRequirements)if(!L.invertQuery){const o=L.getDialogueToken(i.primaryPokemon);(o==null?void 0:o.length)===2&&this.setDialogueToken("option"+r+"Primary"+Ki(o[0]),o[1])}}if(((R=i.secondaryPokemonRequirements)==null?void 0:R.length)>0&&i.secondaryPokemon&&i.secondaryPokemon.length>0){this.setDialogueToken("option"+r+"SecondaryName",i.secondaryPokemon[0].getNameToRender());for(const L of i.secondaryPokemonRequirements)if(!L.invertQuery){const o=L.getDialogueToken(i.secondaryPokemon[0]);(o==null?void 0:o.length)===2&&this.setDialogueToken("option"+r+"Secondary"+Ki(o[0]),o[1])}}}}setDialogueToken(A,s){this.dialogueTokens[A]=s}getSeedOffset(){return this.seedOffset}updateSeedOffset(){const A=this.seedOffset??n.currentBattle.waveIndex*1e3;this.seedOffset=A+512}};N(VK,"MysteryEncounter");let aS=VK;const eM=class eM{constructor(){this.enemyPartyConfigs=[],this.localizationKey="",this.dialogue={},this.requirements=[],this.primaryPokemonRequirements=[],this.secondaryPokemonRequirements=[],this.excludePrimaryFromSupportRequirements=!0,this.dialogueTokens={},this.hideBattleIntroMessage=!1,this.autoHideIntroVisuals=!0,this.enterIntroVisualsFromRight=!1,this.continuousEncounter=!1,this.catchAllowed=!1,this.fleeAllowed=!0,this.lockEncounterRewardTiers=!1,this.startOfBattleEffectsComplete=!1,this.hasBattleAnimationsWithoutTargets=!1,this.skipEnemyBattleTurns=!1,this.skipToFightInput=!1,this.preventGameStatsUpdates=!1,this.maxAllowedEncounters=3,this.expMultiplier=1}static withEncounterType(A){return Object.assign(new eM,{encounterType:A})}withOption(A){return this.options?(this.options.push(A),this):Object.assign(this,{options:[A]})}withSimpleOption(A,s){return this.withOption(pt.newOptionWithMode(ct.DEFAULT).withDialogue(A).withOptionPhase(s).build())}withSimpleDexProgressOption(A,s){return this.withOption(pt.newOptionWithMode(ct.DEFAULT).withHasDexProgress(!0).withDialogue(A).withOptionPhase(s).build())}withIntroSpriteConfigs(A){return Object.assign(this,{spriteConfigs:A})}withIntroDialogue(A=[]){return this.dialogue={...this.dialogue,intro:A},this}withIntro({spriteConfigs:A,dialogue:s}){return this.withIntroSpriteConfigs(A).withIntroDialogue(s)}setLocalizationKey(A){return this.localizationKey=A,this}withEncounterTier(A){return Object.assign(this,{encounterTier:A})}withAnimations(...A){const s=Array.isArray(A)?A:[A];return Object.assign(this,{encounterAnimations:s})}withDisallowedGameModes(...A){const s=Array.isArray(A)?A:[A];return Object.assign(this,{disallowedGameModes:s})}withDisallowedChallenges(...A){const s=Array.isArray(A)?A:[A];return Object.assign(this,{disallowedChallenges:s})}withContinuousEncounter(A){return Object.assign(this,{continuousEncounter:A})}withBattleAnimationsWithoutTargets(A){return Object.assign(this,{hasBattleAnimationsWithoutTargets:A})}withSkipEnemyBattleTurns(A){return Object.assign(this,{skipEnemyBattleTurns:A})}withSkipToFightInput(A){return Object.assign(this,{skipToFightInput:A})}withPreventGameStatsUpdates(A){return Object.assign(this,{preventGameStatsUpdates:A})}withMaxAllowedEncounters(A){return Object.assign(this,{maxAllowedEncounters:A})}withSceneRequirement(A){return this.requirements.push(A),this}withSceneWaveRangeRequirement(A,s){return this.withSceneRequirement(new cP([A,s??A]))}withScenePartySizeRequirement(A,s,R=!1){return this.withSceneRequirement(new HP([A,s??A],R))}withPrimaryPokemonRequirement(A){return this.primaryPokemonRequirements.push(A),Object.assign(this,{primaryPokemonRequirements:this.primaryPokemonRequirements})}withPrimaryPokemonStatusEffectRequirement(A,s=1,R=!1){return this.withPrimaryPokemonRequirement(new dP(A,s,R))}withPrimaryPokemonHealthRatioRequirement(A,s=1,R=!1){return this.withPrimaryPokemonRequirement(new fP(A,s,R))}withSecondaryPokemonRequirement(A,s=!1){return this.secondaryPokemonRequirements.push(A),this.excludePrimaryFromSupportRequirements=s,Object.assign(this,{excludePrimaryFromSecondaryRequirements:this.excludePrimaryFromSupportRequirements,secondaryPokemonRequirements:this.secondaryPokemonRequirements})}withRewards(A){return Object.assign(this,{doEncounterRewards:A})}withExp(A){return Object.assign(this,{doEncounterExp:A})}withOnInit(A){return Object.assign(this,{onInit:A})}withOnVisualsStart(A){return Object.assign(this,{onVisualsStart:A})}withCatchAllowed(A){return Object.assign(this,{catchAllowed:A})}withFleeAllowed(A){return Object.assign(this,{fleeAllowed:A})}withHideWildIntroMessage(A){return Object.assign(this,{hideBattleIntroMessage:A})}withAutoHideIntroVisuals(A){return Object.assign(this,{autoHideIntroVisuals:A})}withEnterIntroVisualsFromRight(A){return Object.assign(this,{enterIntroVisualsFromRight:A})}withTitle(A){const s=this.dialogue.encounterOptionsDialogue??{};return this.dialogue={...this.dialogue,encounterOptionsDialogue:{...s,title:A}},this}withDescription(A){const s=this.dialogue.encounterOptionsDialogue??{};return this.dialogue={...this.dialogue,encounterOptionsDialogue:{...s,description:A}},this}withQuery(A){const s=this.dialogue.encounterOptionsDialogue??{};return this.dialogue={...this.dialogue,encounterOptionsDialogue:{...s,query:A}},this}withOutroDialogue(A=[]){return this.dialogue={...this.dialogue,outro:A},this}build(){return new aS(this)}};N(eM,"MysteryEncounterBuilder");let FA=eM;const fs="mysteryEncounters/darkDeal",c9=[e.NECROZMA,e.COSMOG,e.COSMOEM,e.SOLGALEO,e.LUNALA,e.ETERNATUS,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.ROARING_MOON,e.KORAIDON,e.WALKING_WAKE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.IRON_VALIANT,e.MIRAIDON,e.IRON_LEAVES,e.IRON_BOULDER,e.IRON_CROWN,e.MEW,e.CELEBI,e.DEOXYS,e.JIRACHI,e.DARKRAI,e.PHIONE,e.MANAPHY,e.ARCEUS,e.SHAYMIN,e.VICTINI,e.MELOETTA,e.KELDEO,e.GENESECT,e.DIANCIE,e.HOOPA,e.VOLCANION,e.MAGEARNA,e.MARSHADOW,e.ZERAORA,e.ZARUDE,e.MELTAN,e.MELMETAL,e.PECHARUNT],h9=FA.withEncounterType(Je.DARK_DEAL).withEncounterTier(wt.ROGUE).withIntroSpriteConfigs([{spriteKey:"dark_deal_scientist",fileRoot:"mystery-encounters",hasShadow:!0},{spriteKey:"dark_deal_porygon",fileRoot:"mystery-encounters",hasShadow:!0,repeat:!0}]).withIntroDialogue([{text:`${fs}:intro`},{speaker:`${fs}:speaker`,text:`${fs}:intro_dialogue`}]).withSceneWaveRangeRequirement(30,ZA[1]).withScenePartySizeRequirement(2,6,!0).withCatchAllowed(!0).setLocalizationKey(`${fs}`).withTitle(`${fs}:title`).withDescription(`${fs}:description`).withQuery(`${fs}:query`).withOption(pt.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${fs}:option.1.label`,buttonTooltip:`${fs}:option.1.tooltip`,selected:[{speaker:`${fs}:speaker`,text:`${fs}:option.1.selected_dialogue`},{text:`${fs}:option.1.selected_message`}]}).withPreOptionPhase(async()=>{const E=o9(!0,!1,!0),A=E.getHeldItems().filter(R=>!(R instanceof UR));n.removePokemonFromPlayerParty(E);const s=n.currentBattle.mysteryEncounter;s.setDialogueToken("pokeName",E.getNameToRender()),s.misc={removedTypes:E.getTypes(),modifiers:A}}).withOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter;n.unshiftPhase(new GE(J.ROGUE_BALL));let A=E.misc.removedTypes;const s=n.gameMode.challenges.filter(l=>l.value&&l.id===it.SINGLE_TYPE);n.gameMode.isChallenge&&s.length>0&&(A=s.map(l=>l.value-1));const R=E.misc.modifiers,a=ce(100),i=a>=65?6:a>=15?7:a>=5?8:[9,10],r=ke(v1(i,c9,A)),L={species:r,isBoss:!0,modifierConfigs:R.map(l=>({modifier:l,stackCount:l.getStackCount()}))};!ve(r.forms)&&r.forms.length>0&&(L.formIndex=0),await $A({pokemonConfigs:[L]})}).build()).withSimpleOption({buttonLabel:`${fs}:option.2.label`,buttonTooltip:`${fs}:option.2.tooltip`,selected:[{speaker:`${fs}:speaker`,text:`${fs}:option.2.selected`}]},async()=>(ft(!0),!0)).withOutroDialogue([{text:`${fs}:outro`}]).build(),bs="mysteryEncounters/departmentStoreSale",H9=FA.withEncounterType(Je.DEPARTMENT_STORE_SALE).withEncounterTier(wt.COMMON).withSceneWaveRangeRequirement(ZA[0],100).withIntroSpriteConfigs([{spriteKey:"department_store_sale_lady",fileRoot:"mystery-encounters",hasShadow:!0,x:-20},{spriteKey:"",fileRoot:"",species:e.FURFROU,hasShadow:!0,repeat:!0,x:30}]).withIntroDialogue([{text:`${bs}:intro`},{text:`${bs}:intro_dialogue`,speaker:`${bs}:speaker`}]).withAutoHideIntroVisuals(!1).setLocalizationKey(`${bs}`).withTitle(`${bs}:title`).withDescription(`${bs}:description`).withQuery(`${bs}:query`).withSimpleOption({buttonLabel:`${bs}:option.1.label`,buttonTooltip:`${bs}:option.1.tooltip`},async()=>{const E=[];let A=0;for(;A<5;){const s=ce(5);s<2?E.push(J.TM_COMMON):s<4?E.push(J.TM_GREAT):E.push(J.TM_ULTRA),A++}Ft({guaranteedModifierTypeFuncs:E,fillRemaining:!1}),ft()}).withSimpleOption({buttonLabel:`${bs}:option.2.label`,buttonTooltip:`${bs}:option.2.tooltip`},async()=>{const E=[];let A=0;for(;A<3;)ce(3)===0?E.push(J.PP_UP):E.push(J.BASE_STAT_BOOSTER),A++;Ft({guaranteedModifierTypeFuncs:E,fillRemaining:!1}),ft()}).withSimpleOption({buttonLabel:`${bs}:option.3.label`,buttonTooltip:`${bs}:option.3.tooltip`},async()=>{const E=[];let A=0;for(;A<5;)ce(5)===0?E.push(J.DIRE_HIT):E.push(J.TEMP_STAT_STAGE_BOOSTER),A++;Ft({guaranteedModifierTypeFuncs:E,fillRemaining:!1}),ft()}).withSimpleOption({buttonLabel:`${bs}:option.4.label`,buttonTooltip:`${bs}:option.4.tooltip`},async()=>{const E=[];let A=0;for(;A<4;){const s=ce(65);s<10?E.push(J.POKEBALL):s<40?E.push(J.GREAT_BALL):s<60?E.push(J.ULTRA_BALL):E.push(J.ROGUE_BALL),A++}Ft({guaranteedModifierTypeFuncs:E,fillRemaining:!1}),ft()}).withOutroDialogue([{text:`${bs}:outro`}]).build(),nE="mysteryEncounters/fieldTrip",d9=FA.withEncounterType(Je.FIELD_TRIP).withEncounterTier(wt.COMMON).withSceneWaveRangeRequirement(ZA[0],100).withIntroSpriteConfigs([{spriteKey:"preschooler_m",fileRoot:"trainer",hasShadow:!0},{spriteKey:"field_trip_teacher",fileRoot:"mystery-encounters",hasShadow:!0},{spriteKey:"preschooler_f",fileRoot:"trainer",hasShadow:!0}]).withIntroDialogue([{text:`${nE}:intro`},{text:`${nE}:intro_dialogue`,speaker:`${nE}:speaker`}]).withAutoHideIntroVisuals(!1).setLocalizationKey(`${nE}`).withTitle(`${nE}:title`).withDescription(`${nE}:description`).withQuery(`${nE}:query`).withOption(pt.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${nE}:option.1.label`,buttonTooltip:`${nE}:option.1.tooltip`,secondOptionPrompt:`${nE}:second_option_prompt`}).withPreOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter;return zE(N(s=>s.moveset.map(R=>({label:R.getName(),handler:N(()=>(E.setDialogueToken("moveCategory",u.t(`${nE}:physical`)),G0(s,R,Pt.PHYSICAL),!0),"handler")})),"onPokemonSelected"))}).withOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter;if(E.misc.correctMove){const A=[AE(J.TEMP_STAT_STAGE_BOOSTER,[K.ATK]),AE(J.TEMP_STAT_STAGE_BOOSTER,[K.DEF]),AE(J.TEMP_STAT_STAGE_BOOSTER,[K.SPD]),AE(J.DIRE_HIT),AE(J.RARER_CANDY)];Ft({guaranteedModifierTypeOptions:A,fillRemaining:!1})}ft(!E.misc.correctMove)}).build()).withOption(pt.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${nE}:option.2.label`,buttonTooltip:`${nE}:option.2.tooltip`,secondOptionPrompt:`${nE}:second_option_prompt`}).withPreOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter;return zE(N(s=>s.moveset.map(R=>({label:R.getName(),handler:N(()=>(E.setDialogueToken("moveCategory",u.t(`${nE}:special`)),G0(s,R,Pt.SPECIAL),!0),"handler")})),"onPokemonSelected"))}).withOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter;if(E.misc.correctMove){const A=[AE(J.TEMP_STAT_STAGE_BOOSTER,[K.SPATK]),AE(J.TEMP_STAT_STAGE_BOOSTER,[K.SPDEF]),AE(J.TEMP_STAT_STAGE_BOOSTER,[K.SPD]),AE(J.DIRE_HIT),AE(J.RARER_CANDY)];Ft({guaranteedModifierTypeOptions:A,fillRemaining:!1})}ft(!E.misc.correctMove)}).build()).withOption(pt.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${nE}:option.3.label`,buttonTooltip:`${nE}:option.3.tooltip`,secondOptionPrompt:`${nE}:second_option_prompt`}).withPreOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter;return zE(N(s=>s.moveset.map(R=>({label:R.getName(),handler:N(()=>(E.setDialogueToken("moveCategory",u.t(`${nE}:status`)),G0(s,R,Pt.STATUS),!0),"handler")})),"onPokemonSelected"))}).withOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter;if(E.misc.correctMove){const A=[AE(J.TEMP_STAT_STAGE_BOOSTER,[K.ACC]),AE(J.TEMP_STAT_STAGE_BOOSTER,[K.SPD]),AE(J.GREAT_BALL),AE(J.IV_SCANNER),AE(J.RARER_CANDY)];Ft({guaranteedModifierTypeOptions:A,fillRemaining:!1})}ft(!E.misc.correctMove)}).build()).build();function G0(E,A,s){const R=n.currentBattle.mysteryEncounter,a=A.getMove().category===s;R.setDialogueToken("pokeName",E.getNameToRender()),R.setDialogueToken("move",A.getName()),a?(R.selectedOption.dialogue.selected=[{text:`${nE}:option.selected`},{text:`${nE}:correct`,speaker:`${nE}:speaker`},{text:`${nE}:correct_exp`}],DR([E.id],100)):(R.selectedOption.dialogue.selected=[{text:`${nE}:option.selected`},{text:`${nE}:incorrect`,speaker:`${nE}:speaker`},{text:`${nE}:incorrect_exp`}],DR(n.getPlayerParty().map(i=>i.id),50)),R.misc={correctMove:a}}N(G0,"pokemonAndMoveChosen");const S8=[t.PLUCK,t.COVET,t.KNOCK_OFF,t.THIEF,t.TRICK,t.SWITCHEROO],o8=[t.CHARM,t.FLATTER,t.DRAGON_CHEER,t.ALLURING_VOICE,t.ATTRACT,t.SWEET_SCENT,t.CAPTIVATE,t.AROMATIC_MIST],Gb=[t.AQUA_STEP,t.CLANGOROUS_SOUL,t.DRAGON_DANCE,t.FEATHER_DANCE,t.FIERY_DANCE,t.LUNAR_DANCE,t.PETAL_DANCE,t.REVELATION_DANCE,t.QUIVER_DANCE,t.SWORDS_DANCE,t.TEETER_DANCE,t.VICTORY_DANCE];t.FAKE_OUT,t.FOLLOW_ME,t.TAUNT,t.ROAR,t.TELEPORT,t.CHARM,t.FAKE_TEARS,t.TICKLE,t.CAPTIVATE,t.RAGE_POWDER,t.SUBSTITUTE,t.SHED_TAIL;t.PROTECT,t.WIDE_GUARD,t.MAX_GUARD,t.SAFEGUARD,t.REFLECT,t.BARRIER,t.QUICK_GUARD,t.FLOWER_SHIELD,t.KINGS_SHIELD,t.CRAFTY_SHIELD,t.SPIKY_SHIELD,t.OBSTRUCT,t.DETECT;const f9=[t.BIND,t.CLAMP,t.INFESTATION,t.SAND_TOMB,t.SNAP_TRAP,t.THUNDER_CAGE,t.WRAP,t.SPIRIT_SHACKLE,t.MEAN_LOOK,t.JAW_LOCK,t.BLOCK,t.SPIDER_WEB,t.ANCHOR_SHOT,t.OCTOLOCK,t.PURSUIT,t.CONSTRICT,t.BEAT_UP,t.COIL,t.WRING_OUT,t.STRING_SHOT],B9=[O.INTIMIDATE,O.ARENA_TRAP,O.SHADOW_TAG,O.SUCTION_CUPS,O.STICKY_HOLD],g9=[O.FLAME_BODY,O.FLASH_FIRE,O.WELL_BAKED_BODY,O.HEATPROOF,O.THERMAL_EXCHANGE,O.THICK_FAT,O.WATER_BUBBLE,O.MAGMA_ARMOR,O.WATER_VEIL,O.STEAM_ENGINE,O.PRIMORDIAL_SEA],hI=class hI extends Ts{constructor(A,s,R,a,i=!0,r=!1,L=!0,o=null){super(A),this.selfTarget=s,this.stats=R,this.stages=a,this.showMessage=i,this.ignoreAbilities=r,this.canBeCopied=L,this.onChange=o}start(){if(this.stats.length>1){for(let L=0;L<this.stats.length;L++){const o=[this.stats[L]];n.unshiftPhase(new hI(this.battlerIndex,this.selfTarget,o,this.stages,this.showMessage,this.ignoreAbilities,this.canBeCopied,this.onChange))}return this.end()}const A=this.getPokemon();if(!A.isActive(!0))return this.end();const s=new Et(this.stages);this.ignoreAbilities||ut(WS,A,null,!1,s);let R=!1;const a=this.stats.filter(L=>{const o=new Lt(!1);return!this.selfTarget&&s.value<0&&n.arena.applyTagsForSide(tU,A.isPlayer()?St.PLAYER:St.ENEMY,!1,null,o),!o.value&&!this.selfTarget&&s.value<0&&BJ(zR,A,L,o,R),o.value&&(R=!0),!o.value}),i=a.map(L=>(s.value>=1?Math.min(A.getStatStage(L)+s.value,6):Math.max(A.getStatStage(L)+s.value,-6))-A.getStatStage(L));this.onChange&&this.onChange(this.getPokemon(),a,i);const r=N(()=>{if(this.showMessage){const o=this.getStatStageChangeMessages(a,s.value,i);for(const l of o)n.queueMessage(l)}for(const o of a)s.value>0&&A.getStatStage(o)<6?(A.turnData||A.resetTurnData(),A.turnData.statStagesIncreased=!0):s.value<0&&A.getStatStage(o)>-6&&(A.turnData||A.resetTurnData(),A.turnData.statStagesDecreased=!0),A.setStatStage(o,A.getStatStage(o)+s.value);if(s.value>0&&this.canBeCopied)for(const o of A.getOpponents())ut(vU,o,null,!1,this.stats,s.value);if(gJ(aU,A,a,this.stages,this.selfTarget),!(n.findPhase(o=>o instanceof hI&&o.battlerIndex===this.battlerIndex)instanceof hI)){const o=n.applyModifier(rL,this.player,A);o&&(A.loseHeldItem(o),n.updateModifiers(this.player))}A.updateInfo(),VI(tO.Stat_Change).then(()=>super.end())},"end");if(i.filter(L=>L).length&&n.moveAnimations){A.enableMask();const L=A.maskSprite,o=(this.player?106:236)*A.getSpriteScale()*n.field.scale,l=((this.player?148:84)+(s.value>=1?160:0))*A.getSpriteScale()*n.field.scale,C=156*n.field.scale*A.getSpriteScale(),M=316*n.field.scale*A.getSpriteScale(),D=s.value>=1?K[K.ATK].toLowerCase():K[K.SPD].toLowerCase(),_=n.add.tileSprite(o,l,C,M,"battle_stats",D);_.setPipeline(n.fieldSpritePipeline),_.setAlpha(0),_.setScale(6),_.setOrigin(.5,1),n.playSound(`se/stat_${s.value>=1?"up":"down"}`),_.setMask(new Phaser.Display.Masks.BitmapMask(n,L??void 0)),n.tweens.add({targets:_,duration:250,alpha:.8375,onComplete:N(()=>{n.tweens.add({targets:_,delay:1e3,duration:250,alpha:0})},"onComplete")}),n.tweens.add({targets:_,duration:1500,y:`${s.value>=1?"-":"+"}=${160*6}`}),n.time.delayedCall(1750,()=>{A.disableMask(),r()})}else r()}aggregateStatStageChanges(){const A=[K.ACC,K.EVA],s=A.some(a=>this.stats.includes(a));let R;if(this.stats.length===1)for(;(R=n.findPhase(a=>a instanceof hI&&a.battlerIndex===this.battlerIndex&&a.stats.length===1&&a.stats[0]===this.stats[0]&&a.selfTarget===this.selfTarget&&a.showMessage===this.showMessage&&a.ignoreAbilities===this.ignoreAbilities))&&(this.stages+=R.stages,!!n.tryRemovePhase(a=>a===R)););for(;(R=n.findPhase(a=>a instanceof hI&&a.battlerIndex===this.battlerIndex&&a.selfTarget===this.selfTarget&&A.some(i=>a.stats.includes(i))===s&&a.stages===this.stages&&a.showMessage===this.showMessage&&a.ignoreAbilities===this.ignoreAbilities))&&(this.stats.push(...R.stats),!!n.tryRemovePhase(a=>a===R)););}getStatStageChangeMessages(A,s,R){const a=[],i={};for(let r=0;r<R.length;r++){const L=R[r];i[L]||(i[L]=[]),i[L].push(r)}return Object.keys(i).forEach(r=>{const L=A.filter((l,C)=>i[r].includes(C));let o="";L.length>1?(o=L.length>=5?u.t("battle:stats"):`${L.slice(0,-1).map(l=>u.t(hE(l))).join(", ")}${L.length>2?",":""} ${u.t("battle:statsAnd")} ${u.t(hE(L[L.length-1]))}`,a.push(u.t(_x(Math.abs(parseInt(r)),s>=1),{pokemonNameWithAffix:te(this.getPokemon()),stats:o,count:L.length}))):(o=u.t(hE(L[0])),a.push(u.t(_x(Math.abs(parseInt(r)),s>=1),{pokemonNameWithAffix:te(this.getPokemon()),stats:o,count:L.length})))}),a}};N(hI,"StatStageChangePhase");let zt=hI;const ks="mysteryEncounters/fightOrFlight",K9=FA.withEncounterType(Je.FIGHT_OR_FLIGHT).withEncounterTier(wt.COMMON).withSceneWaveRangeRequirement(...ZA).withCatchAllowed(!0).withHideWildIntroMessage(!0).withFleeAllowed(!1).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${ks}:intro`}]).withOnInit(()=>{const E=n.currentBattle.mysteryEncounter,A=Zo(ko),s=y1(A,!0);E.setDialogueToken("enemyPokemon",s.getNameToRender());const R={pokemonConfigs:[{level:A,species:s.species,dataSource:new hs(s),isBoss:!0,tags:[y.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:N(o=>{RE(`${ks}:option.1.stat_boost`),n.unshiftPhase(new zt(o.getBattlerIndex(),!0,[ce(4,1)],2))},"mysteryEncounterBattleEffects")}]};E.enemyPartyConfigs=[R];const a=n.currentBattle.waveIndex>160?w.MASTER:n.currentBattle.waveIndex>120?w.ROGUE:n.currentBattle.waveIndex>40?w.ULTRA:w.GREAT;Na(n.getPlayerParty(),HE.PLAYER,0);let i=null;for(;!i||i.type.id.includes("TM_")||i.type.id==="CANDY_JAR";)i=B1(1,n.getPlayerParty(),[],{guaranteedModifierTiers:[a],allowLuckUpgrades:!1})[0];E.setDialogueToken("itemName",i.type.name),E.misc=i;const{spriteKey:r,fileRoot:L}=FM(s);return E.spriteConfigs=[{spriteKey:i.type.iconImage,fileRoot:"items",hasShadow:!1,x:35,y:-5,scale:.75,isItem:!0,disableAnimation:!0},{spriteKey:r,fileRoot:L,hasShadow:!0,tint:.25,x:-5,repeat:!0,isPokemon:!0,isShiny:s.shiny,variant:s.variant}],!0}).setLocalizationKey(`${ks}`).withTitle(`${ks}:title`).withDescription(`${ks}:description`).withQuery(`${ks}:query`).withSimpleOption({buttonLabel:`${ks}:option.1.label`,buttonTooltip:`${ks}:option.1.tooltip`,selected:[{text:`${ks}:option.1.selected`}]},async()=>{const E=n.currentBattle.mysteryEncounter.misc;Ft({guaranteedModifierTypeOptions:[E],fillRemaining:!1}),await $A(n.currentBattle.mysteryEncounter.enemyPartyConfigs[0])}).withOption(pt.newOptionWithMode(ct.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(new kI(S8,!0)).withDialogue({buttonLabel:`${ks}:option.2.label`,buttonTooltip:`${ks}:option.2.tooltip`,disabledButtonTooltip:`${ks}:option.2.disabled_tooltip`,selected:[{text:`${ks}:option.2.selected`}]}).withOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter,A=n.currentBattle.mysteryEncounter.misc;Ft({guaranteedModifierTypeOptions:[A],fillRemaining:!1});const s=E.options[1].primaryPokemon;DR(s.id,E.enemyPartyConfigs[0].pokemonConfigs[0].species.baseExp),ft()}).build()).withSimpleOption({buttonLabel:`${ks}:option.3.label`,buttonTooltip:`${ks}:option.3.tooltip`,selected:[{text:`${ks}:option.3.selected`}]},async()=>(ft(!0),!0)).build(),cb=t.SURF,hb=t.FLY,Hb=25,es="mysteryEncounters/lostAtSea",m9=FA.withEncounterType(Je.LOST_AT_SEA).withEncounterTier(wt.COMMON).withSceneWaveRangeRequirement(...ZA).withIntroSpriteConfigs([{spriteKey:"lost_at_sea_buoy",fileRoot:"mystery-encounters",hasShadow:!1,x:20,y:3}]).withIntroDialogue([{text:`${es}:intro`}]).withOnInit(()=>{const E=n.currentBattle.mysteryEncounter;return E.setDialogueToken("damagePercentage",String(Hb)),E.setDialogueToken("option1RequiredMove",new nt(cb).getName()),E.setDialogueToken("option2RequiredMove",new nt(hb).getName()),!0}).setLocalizationKey(`${es}`).withTitle(`${es}:title`).withDescription(`${es}:description`).withQuery(`${es}:query`).withOption(pt.newOptionWithMode(ct.DISABLED_OR_DEFAULT).withPokemonCanLearnMoveRequirement(cb).withDialogue({buttonLabel:`${es}:option.1.label`,disabledButtonLabel:`${es}:option.1.label_disabled`,buttonTooltip:`${es}:option.1.tooltip`,disabledButtonTooltip:`${es}:option.1.tooltip_disabled`,selected:[{text:`${es}:option.1.selected`}]}).withOptionPhase(async()=>db()).build()).withOption(pt.newOptionWithMode(ct.DISABLED_OR_DEFAULT).withPokemonCanLearnMoveRequirement(hb).withDialogue({buttonLabel:`${es}:option.2.label`,disabledButtonLabel:`${es}:option.2.label_disabled`,buttonTooltip:`${es}:option.2.tooltip`,disabledButtonTooltip:`${es}:option.2.tooltip_disabled`,selected:[{text:`${es}:option.2.selected`}]}).withOptionPhase(async()=>db()).build()).withSimpleOption({buttonLabel:`${es}:option.3.label`,buttonTooltip:`${es}:option.3.tooltip`,selected:[{text:`${es}:option.3.selected`}]},async()=>{const E=n.getPlayerParty().filter(A=>A.isAllowedInBattle());for(const A of E){const s=Hb/100,R=Math.floor(A.getMaxHp()*s);V1(A,R)}return ft(),!0}).withOutroDialogue([{text:`${es}:outro`}]).build();function db(){var s,R;const E=ke(e.LAPRAS),{mysteryEncounter:A}=n.currentBattle;return(R=(s=A==null?void 0:A.selectedOption)==null?void 0:s.primaryPokemon)!=null&&R.id?DR(A.selectedOption.primaryPokemon.id,E.baseExp,!0):console.warn("Lost at sea: No guide pokemon found but pokemon guides player. huh!?"),ft(),!0}N(db,"handlePokemonGuidingYouPhase");const OR="mysteryEncounters/mysteriousChallengers",F9=FA.withEncounterType(Je.MYSTERIOUS_CHALLENGERS).withEncounterTier(wt.GREAT).withSceneWaveRangeRequirement(...ZA).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${OR}:intro`}]).withOnInit(()=>{const E=n.currentBattle.mysteryEncounter,A=n.arena.randomTrainerType(n.currentBattle.waveIndex),s=QA[A].clone();let R=!1;s.hasGenders&&(R=!!ce(2));const a=s.getSpriteKey(R,s.doubleOnly);E.enemyPartyConfigs.push({trainerConfig:s,female:R});let i=0,r=n.arena.randomTrainerType(n.currentBattle.waveIndex);for(;i<5&&r===A;)r=n.arena.randomTrainerType(n.currentBattle.waveIndex),i++;const L=new bA(new ze(1,Ve.STRONGER,!1,!0),new ze(Math.min(Math.ceil(n.currentBattle.waveIndex/20),5),Ve.AVERAGE,!1,!0)),o=QA[r].clone();o.setPartyTemplates(L),R=!1,o.hasGenders&&(R=!!ce(2));const l=o.getSpriteKey(R,o.doubleOnly);E.enemyPartyConfigs.push({trainerConfig:o,levelAdditiveModifier:1,female:R});const C=n.arena.randomTrainerType(n.currentBattle.waveIndex,!0),M=et.ELITE_FOUR,D=QA[C].clone();D.title=QA[C].title,D.setPartyTemplates(M),D.partyTemplateFunc=null,R=!1,D.hasGenders&&(R=!!ce(2));const _=D.getSpriteKey(R,D.doubleOnly);return E.enemyPartyConfigs.push({trainerConfig:D,levelAdditiveModifier:1.5,female:R}),E.spriteConfigs=[{spriteKey:a,fileRoot:"trainer",hasShadow:!0,tint:1},{spriteKey:l,fileRoot:"trainer",hasShadow:!0,tint:1},{spriteKey:_,fileRoot:"trainer",hasShadow:!0,tint:1}],!0}).setLocalizationKey(`${OR}`).withTitle(`${OR}:title`).withDescription(`${OR}:description`).withQuery(`${OR}:query`).withSimpleOption({buttonLabel:`${OR}:option.1.label`,buttonTooltip:`${OR}:option.1.tooltip`,selected:[{text:`${OR}:option.selected`}]},async()=>{const A=n.currentBattle.mysteryEncounter.enemyPartyConfigs[0];Ft({guaranteedModifierTypeFuncs:[J.TM_COMMON,J.TM_GREAT,J.MEMORY_MUSHROOM],fillRemaining:!0});let s;n.executeWithSeedOffset(()=>{s=$A(A)},n.currentBattle.waveIndex*10),await s}).withSimpleOption({buttonLabel:`${OR}:option.2.label`,buttonTooltip:`${OR}:option.2.tooltip`,selected:[{text:`${OR}:option.selected`}]},async()=>{const A=n.currentBattle.mysteryEncounter.enemyPartyConfigs[1];Ft({guaranteedModifierTiers:[w.ULTRA,w.ULTRA,w.GREAT,w.GREAT],fillRemaining:!0});let s;n.executeWithSeedOffset(()=>{s=$A(A)},n.currentBattle.waveIndex*100),await s}).withSimpleOption({buttonLabel:`${OR}:option.3.label`,buttonTooltip:`${OR}:option.3.tooltip`,selected:[{text:`${OR}:option.selected`}]},async()=>{const E=n.currentBattle.mysteryEncounter,A=E.enemyPartyConfigs[2];E.expMultiplier=.9,Ft({guaranteedModifierTiers:[w.ROGUE,w.ROGUE,w.ULTRA,w.GREAT],fillRemaining:!0});let s;n.executeWithSeedOffset(()=>{s=$A(A)},n.currentBattle.waveIndex*1e3),await s}).withOutroDialogue([{text:`${OR}:outro`}]).build(),Zs="mysteryEncounters/mysteriousChest",PL=100,fb=35,GL=20,Il=30,c0=10,Bb=5,p9=FA.withEncounterType(Je.MYSTERIOUS_CHEST).withEncounterTier(wt.COMMON).withSceneWaveRangeRequirement(...ZA).withScenePartySizeRequirement(2,6,!0).withAutoHideIntroVisuals(!1).withCatchAllowed(!0).withIntroSpriteConfigs([{spriteKey:"mysterious_chest_blue",fileRoot:"mystery-encounters",hasShadow:!0,y:8,yShadow:6,alpha:1,disableAnimation:!0},{spriteKey:"mysterious_chest_red",fileRoot:"mystery-encounters",hasShadow:!1,y:8,yShadow:6,alpha:0,disableAnimation:!0}]).withIntroDialogue([{text:`${Zs}:intro`}]).setLocalizationKey(`${Zs}`).withTitle(`${Zs}:title`).withDescription(`${Zs}:description`).withQuery(`${Zs}:query`).withOnInit(()=>{const E=n.currentBattle.mysteryEncounter,A={levelAdditiveModifier:.5,disableSwitch:!0,pokemonConfigs:[{species:ke(e.GIMMIGHOUL),formIndex:0,isBoss:!0,moveSet:[t.NASTY_PLOT,t.SHADOW_BALL,t.POWER_GEM,t.THIEF]}]};return E.enemyPartyConfigs=[A],E.setDialogueToken("gimmighoulName",ke(e.GIMMIGHOUL).getName()),E.setDialogueToken("trapPercent",fb.toString()),E.setDialogueToken("commonPercent",GL.toString()),E.setDialogueToken("ultraPercent",Il.toString()),E.setDialogueToken("roguePercent",c0.toString()),E.setDialogueToken("masterPercent",Bb.toString()),!0}).withOption(pt.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${Zs}:option.1.label`,buttonTooltip:`${Zs}:option.1.tooltip`,selected:[{text:`${Zs}:option.1.selected`}]}).withPreOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter,A=E.introVisuals,s=ce(PL);if(E.misc={roll:s},s<fb){const R=A.getSpriteAtIndex(0);A.getSpriteAtIndex(1)[0].setAlpha(1),R[0].setAlpha(.001)}A.spriteConfigs[0].disableAnimation=!1,A.spriteConfigs[1].disableAnimation=!1,A.playAnim()}).withOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter,A=E.misc.roll;if(A>=PL-GL)Ft({guaranteedModifierTiers:[w.COMMON,w.COMMON,w.GREAT,w.GREAT]}),RE(`${Zs}:option.1.normal`),ft();else if(A>=PL-GL-Il)Ft({guaranteedModifierTiers:[w.ULTRA,w.ULTRA,w.ULTRA]}),RE(`${Zs}:option.1.good`),ft();else if(A>=PL-GL-Il-c0)Ft({guaranteedModifierTiers:[w.ROGUE,w.ROGUE]}),RE(`${Zs}:option.1.great`),ft();else if(A>=PL-GL-Il-c0-Bb)Ft({guaranteedModifierTiers:[w.MASTER]}),RE(`${Zs}:option.1.amazing`),ft();else{const s=w1(!0,!1);L8(s),E.setDialogueToken("pokeName",s.getNameToRender()),await qt(`${Zs}:option.1.bad`),n.getPokemonAllowedInBattle().length===0?(n.clearPhaseQueue(),n.unshiftPhase(new GO)):(await JA(!0,!0,500),Ft({fillRemaining:!0}),await $A(E.enemyPartyConfigs[0]))}}).build()).withSimpleOption({buttonLabel:`${Zs}:option.2.label`,buttonTooltip:`${Zs}:option.2.tooltip`,selected:[{text:`${Zs}:option.2.selected`}]},async()=>(ft(!0),!0)).build(),pE="mysteryEncounters/shadyVitaminDealer",gb=1.5,W9=5,Y9=FA.withEncounterType(Je.SHADY_VITAMIN_DEALER).withEncounterTier(wt.COMMON).withSceneWaveRangeRequirement(...ZA).withSceneRequirement(new en(0,gb)).withPrimaryPokemonHealthRatioRequirement([.51,1]).withIntroSpriteConfigs([{spriteKey:e.KROOKODILE.toString(),fileRoot:"pokemon",hasShadow:!0,repeat:!0,x:12,y:-5,yShadow:-5},{spriteKey:"shady_vitamin_dealer",fileRoot:"mystery-encounters",hasShadow:!0,x:-12,y:3,yShadow:3}]).withIntroDialogue([{text:`${pE}:intro`},{text:`${pE}:intro_dialogue`,speaker:`${pE}:speaker`}]).setLocalizationKey(`${pE}`).withTitle(`${pE}:title`).withDescription(`${pE}:description`).withQuery(`${pE}:query`).withOption(pt.newOptionWithMode(ct.DISABLED_OR_DEFAULT).withSceneMoneyRequirement(0,gb).withDialogue({buttonLabel:`${pE}:option.1.label`,buttonTooltip:`${pE}:option.1.tooltip`,selected:[{text:`${pE}:option.selected`}]}).withPreOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter;return zE(N(R=>{RO(-E.options[0].requirements[0].requiredMoney);const a=[Kt(J.BASE_STAT_BOOSTER),Kt(J.BASE_STAT_BOOSTER)];E.setDialogueToken("boost1",a[0].name),E.setDialogueToken("boost2",a[1].name),E.misc={chosenPokemon:R,modifiers:a}},"onPokemonSelected"),void 0,N(R=>R.isAllowedInChallenge()?E.pokemonMeetsPrimaryRequirements(R)?null:mA(`${pE}:invalid_selection`)??null:u.t("partyUiHandler:cantBeUsed",{pokemonName:R.getNameToRender()})??null,"selectableFilter"))}).withOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter,A=E.misc.chosenPokemon,s=E.misc.modifiers;for(const R of s)await CR(A,R);ft(!0)}).withPostOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter,A=E.misc.chosenPokemon;V1(A,Math.floor(A.getMaxHp()/2));const s=A.nature;let R=ce(25);for(;R===s;)R=ce(25);A.setCustomNature(R),E.setDialogueToken("newNature",$O(R)),RE(`${pE}:cheap_side_effects`),DR([A.id],100),await A.updateInfo()}).build()).withOption(pt.newOptionWithMode(ct.DISABLED_OR_DEFAULT).withSceneMoneyRequirement(0,W9).withDialogue({buttonLabel:`${pE}:option.2.label`,buttonTooltip:`${pE}:option.2.tooltip`,selected:[{text:`${pE}:option.selected`}]}).withPreOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter;return zE(N(R=>{RO(-E.options[1].requirements[0].requiredMoney);const a=[Kt(J.BASE_STAT_BOOSTER),Kt(J.BASE_STAT_BOOSTER)];E.setDialogueToken("boost1",a[0].name),E.setDialogueToken("boost2",a[1].name),E.misc={chosenPokemon:R,modifiers:a}},"onPokemonSelected"),void 0,N(R=>Xa(R,`${pE}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter,A=E.misc.chosenPokemon,s=E.misc.modifiers;for(const R of s)await CR(A,R);ft(!0)}).withPostOptionPhase(async()=>{const A=n.currentBattle.mysteryEncounter.misc.chosenPokemon;RE(`${pE}:no_bad_effects`),DR([A.id],100),await A.updateInfo()}).build()).withSimpleOption({buttonLabel:`${pE}:option.3.label`,buttonTooltip:`${pE}:option.3.tooltip`,selected:[{text:`${pE}:option.3.selected`,speaker:`${pE}:speaker`}]},async()=>(ft(!0),!0)).build(),xK=class xK extends dE{constructor(A){super(),this.resumeBgm=A}start(){super.start();const A=n.isBgmPlaying();A&&n.fadeOutBgm(1e3,!1),n.ui.fadeOut(1e3).then(()=>{for(const R of n.getPlayerParty()){R.hp=R.getMaxHp(),R.resetStatus();for(const a of R.moveset)a.ppUsed=0;R.updateInfo(!0)}const s=n.playSoundWithoutBgm("heal");n.time.delayedCall(st(s.totalDuration*1e3),()=>{s.destroy(),this.resumeBgm&&A&&n.playBgm(),n.ui.fadeIn(500).then(()=>this.end())})})}};N(xK,"PartyHealPhase");let Fr=xK;const Xs="mysteryEncounters/slumberingSnorlax",y9=FA.withEncounterType(Je.SLUMBERING_SNORLAX).withEncounterTier(wt.GREAT).withSceneWaveRangeRequirement(...ZA).withCatchAllowed(!0).withHideWildIntroMessage(!0).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:e.SNORLAX.toString(),fileRoot:"pokemon",hasShadow:!0,tint:.25,scale:1.25,repeat:!0,y:5}]).withIntroDialogue([{text:`${Xs}:intro`}]).withOnInit(()=>{const E=n.currentBattle.mysteryEncounter;console.log(E);const R={levelAdditiveModifier:.5,pokemonConfigs:[{species:ke(e.SNORLAX),isBoss:!0,shiny:!1,status:[ne.SLEEP,5],moveSet:[t.REST,t.SLEEP_TALK,t.CRUNCH,t.GIGA_IMPACT],modifierConfigs:[{modifier:Kt(J.BERRY,[_t.SITRUS]),stackCount:2},{modifier:Kt(J.BERRY,[_t.ENIGMA]),stackCount:2}],customPokemonData:new rs({spriteScale:1.25}),aiType:$8.SMART}]};return E.enemyPartyConfigs=[R],bo([t.SNORE]),E.setDialogueToken("snorlaxName",ke(e.SNORLAX).getName()),!0}).setLocalizationKey(`${Xs}`).withTitle(`${Xs}:title`).withDescription(`${Xs}:description`).withQuery(`${Xs}:query`).withSimpleOption({buttonLabel:`${Xs}:option.1.label`,buttonTooltip:`${Xs}:option.1.tooltip`,selected:[{text:`${Xs}:option.1.selected`}]},async()=>{const E=n.currentBattle.mysteryEncounter;Ft({guaranteedModifierTypeFuncs:[J.LEFTOVERS],fillRemaining:!0}),E.startOfBattleEffects.push({sourceBattlerIndex:gt.ENEMY,targets:[gt.PLAYER],move:new nt(t.SNORE),ignorePp:!0},{sourceBattlerIndex:gt.ENEMY,targets:[gt.PLAYER],move:new nt(t.SNORE),ignorePp:!0}),await $A(E.enemyPartyConfigs[0])}).withSimpleOption({buttonLabel:`${Xs}:option.2.label`,buttonTooltip:`${Xs}:option.2.tooltip`,selected:[{text:`${Xs}:option.2.selected`}]},async()=>{n.unshiftPhase(new Fr(!0)),RE(`${Xs}:option.2.rest_result`),ft()}).withOption(pt.newOptionWithMode(ct.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(new kI(S8,!0)).withDialogue({buttonLabel:`${Xs}:option.3.label`,buttonTooltip:`${Xs}:option.3.tooltip`,disabledButtonTooltip:`${Xs}:option.3.disabled_tooltip`,selected:[{text:`${Xs}:option.3.selected`}]}).withOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter;Ft({guaranteedModifierTypeFuncs:[J.LEFTOVERS],fillRemaining:!1}),DR(E.primaryPokemon.id,ke(e.SNORLAX).baseExp),ft()}).build()).build(),oE="mysteryEncounters/trainingSession",w9=FA.withEncounterType(Je.TRAINING_SESSION).withEncounterTier(wt.ULTRA).withSceneWaveRangeRequirement(...ZA).withScenePartySizeRequirement(2,6,!0).withFleeAllowed(!1).withHideWildIntroMessage(!0).withPreventGameStatsUpdates(!0).withIntroSpriteConfigs([{spriteKey:"training_session_gear",fileRoot:"mystery-encounters",hasShadow:!0,y:6,x:5,yShadow:-2}]).withIntroDialogue([{text:`${oE}:intro`}]).setLocalizationKey(`${oE}`).withTitle(`${oE}:title`).withDescription(`${oE}:description`).withQuery(`${oE}:query`).withOption(pt.newOptionWithMode(ct.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${oE}:option.1.label`,buttonTooltip:`${oE}:option.1.tooltip`,selected:[{text:`${oE}:option.selected`}]}).withPreOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter;return zE(N(R=>{E.misc={playerPokemon:R}},"onPokemonSelected"),void 0,N(R=>Xa(R,`${oE}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter,A=E.misc.playerPokemon,s=Math.min(2+Math.floor(n.currentBattle.waveIndex/50),5),R=new bL,a=h0(A,s,R);n.removePokemonFromPlayerParty(A,!1),Ft({fillRemaining:!0},void 0,N(()=>{E.setDialogueToken("stat1","-"),E.setDialogueToken("stat2","-");let r=[];A.ivs.forEach((o,l)=>{o<31&&r.push({iv:o,index:l})});let L=0;for(;r.length>0&&L<2;){r=CO(r);const o=r.pop();let l=o.iv;L===0?E.setDialogueToken("stat1",u.t(hE(o.index))??""):E.setDialogueToken("stat2",u.t(hE(o.index))??""),o.iv<=21&&o.iv-1%5===0&&(l+=1),l+=o.iv<=10?10:o.iv<=20?5:3,l=Math.min(l,31),A.ivs[o.index]=l,L++}L>0&&(A.calculateStats(),n.gameData.updateSpeciesDexIvs(A.species.getRootSpeciesId(!0),A.ivs),n.gameData.setPokemonCaught(A,!1)),n.getPlayerParty().push(A);for(const o of R.value)o.pokemonId=A.id,n.addModifier(o,!0,!1,!1,!0);n.updateModifiers(!0),RE(`${oE}:option.1.finished`)},"onBeforeRewardsPhase")),await $A(a)}).build()).withOption(pt.newOptionWithMode(ct.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${oE}:option.2.label`,buttonTooltip:`${oE}:option.2.tooltip`,secondOptionPrompt:`${oE}:option.2.select_prompt`,selected:[{text:`${oE}:option.selected`}]}).withPreOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter,A=new Array(25).fill(null).map((a,i)=>i);return zE(N(a=>A.map(i=>({label:$O(i,!0,!0,!0,n.uiTheme),handler:N(()=>(E.setDialogueToken("nature",$O(i)),E.misc={playerPokemon:a,chosenNature:i},!0),"handler")})),"onPokemonSelected"),void 0,N(a=>Xa(a,`${oE}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter,A=E.misc.playerPokemon,s=Math.min(2+Math.floor(n.currentBattle.waveIndex/40),6),R=new bL,a=h0(A,s,R);n.removePokemonFromPlayerParty(A,!1),Ft({fillRemaining:!0},void 0,N(()=>{RE(`${oE}:option.2.finished`),A.setCustomNature(E.misc.chosenNature),n.gameData.unlockSpeciesNature(A.species,E.misc.chosenNature),n.getPlayerParty().push(A);for(const r of R.value)r.pokemonId=A.id,n.addModifier(r,!0,!1,!1,!0);n.updateModifiers(!0)},"onBeforeRewardsPhase")),await $A(a)}).build()).withOption(pt.newOptionWithMode(ct.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${oE}:option.3.label`,buttonTooltip:`${oE}:option.3.tooltip`,secondOptionPrompt:`${oE}:option.3.select_prompt`,selected:[{text:`${oE}:option.selected`}]}).withPreOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter;return zE(N(R=>{const a=R.getFusionSpeciesForm()?R.getFusionSpeciesForm():R.getSpeciesForm(),i=a.getAbilityCount(),r=new Array(i).fill(null).map((o,l)=>NE[a.getAbility(l)]),L=[];return r.forEach((o,l)=>{if(!L.some(C=>C.label===o.name)){const C={label:o.name,handler:N(()=>(E.setDialogueToken("ability",o.name),E.misc={playerPokemon:R,abilityIndex:l},!0),"handler"),onHover:N(()=>{qt(o.description,0,0,!1)},"onHover")};L.push(C)}}),L},"onPokemonSelected"),void 0,N(R=>Xa(R,`${oE}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter,A=E.misc.playerPokemon,s=Math.min(2+Math.floor(n.currentBattle.waveIndex/30),6),R=new bL,a=h0(A,s,R);a.pokemonConfigs[0].tags=[y.MYSTERY_ENCOUNTER_POST_SUMMON],n.removePokemonFromPlayerParty(A,!1),Ft({fillRemaining:!0},void 0,N(()=>{var L,o;RE(`${oE}:option.3.finished`);const r=E.misc.abilityIndex;if(A.getFusionSpeciesForm()){A.fusionAbilityIndex=r;const l=(L=A.fusionSpecies)==null?void 0:L.getRootSpeciesId();!ve(l)&&KA.hasOwnProperty(l)&&n.gameData.dexData[l].caughtAttr&&(n.gameData.starterData[l].abilityAttr|=A.fusionAbilityIndex!==1||(o=A.fusionSpecies)!=null&&o.ability2?1<<A.fusionAbilityIndex:Ms.ABILITY_HIDDEN)}else A.abilityIndex=r;A.calculateStats(),n.gameData.setPokemonCaught(A,!1),n.getPlayerParty().push(A);for(const l of R.value)l.pokemonId=A.id,n.addModifier(l,!0,!1,!1,!0);n.updateModifiers(!0)},"onBeforeRewardsPhase")),await $A(a)}).build()).withSimpleOption({buttonLabel:`${oE}:option.4.label`,buttonTooltip:`${oE}:option.4.tooltip`,selected:[{text:`${oE}:option.4.selected`}]},async()=>(ft(!0),!0)).build();function h0(E,A,s){E.resetSummonData(),s.value=E.getHeldItems();const R=s.value.map(i=>({modifier:i.clone(),isTransferable:!1,stackCount:i.stackCount})),a=new hs(E);return{pokemonConfigs:[{species:E.species,isBoss:!0,bossSegments:A,formIndex:E.formIndex,level:E.level,dataSource:a,modifierConfigs:R}]}}N(h0,"getEnemyConfig");const bK=class bK{constructor(){this.value=[]}};N(bK,"ModifiersHolder");let bL=bK;const l8=[e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.ROARING_MOON,e.WALKING_WAKE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.IRON_VALIANT,e.IRON_LEAVES,e.IRON_BOULDER,e.IRON_CROWN];e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON;const EE="mysteryEncounters/safariZone",Nr=[512,184,768],Kb=2,mb=3,v9=FA.withEncounterType(Je.SAFARI_ZONE).withEncounterTier(wt.GREAT).withSceneWaveRangeRequirement(...ZA).withSceneRequirement(new en(0,Kb)).withAutoHideIntroVisuals(!1).withIntroSpriteConfigs([{spriteKey:"safari_zone",fileRoot:"mystery-encounters",hasShadow:!1,x:4,y:6}]).withIntroDialogue([{text:`${EE}:intro`}]).setLocalizationKey(`${EE}`).withTitle(`${EE}:title`).withDescription(`${EE}:description`).withQuery(`${EE}:query`).withOnInit(()=>{var E;return(E=n.currentBattle.mysteryEncounter)==null||E.setDialogueToken("numEncounters",mb.toString()),!0}).withOption(pt.newOptionWithMode(ct.DISABLED_OR_DEFAULT).withSceneRequirement(new en(0,Kb)).withDialogue({buttonLabel:`${EE}:option.1.label`,buttonTooltip:`${EE}:option.1.tooltip`,selected:[{text:`${EE}:option.1.selected`}]}).withOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter;return E.continuousEncounter=!0,E.misc={safariPokemonRemaining:mb},RO(-E.options[0].requirements[0].requiredMoney),n.loadSe("PRSFX- Bug Bite","battle_anims","PRSFX- Bug Bite.wav"),n.loadSe("PRSFX- Sludge Bomb2","battle_anims","PRSFX- Sludge Bomb2.wav"),n.loadSe("PRSFX- Taunt2","battle_anims","PRSFX- Taunt2.wav"),n.loadAtlas("safari_zone_bait","mystery-encounters"),n.loadAtlas("safari_zone_mud","mystery-encounters"),n.currentBattle.enemyParty=[],await JA(),await KC(),OS({overrideOptions:iS,hideDescription:!0}),!0}).build()).withSimpleOption({buttonLabel:`${EE}:option.2.label`,buttonTooltip:`${EE}:option.2.tooltip`,selected:[{text:`${EE}:option.2.selected`}]},async()=>(ft(!0),!0)).build(),iS=[pt.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${EE}:safari.1.label`,buttonTooltip:`${EE}:safari.1.tooltip`,selected:[{text:`${EE}:safari.1.selected`}]}).withOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter,A=E.misc.pokemon;return await V9(A)?E.misc.safariPokemonRemaining>0?(await KC(),OS({overrideOptions:iS,startingCursorIndex:0,hideDescription:!0})):(E.continuousEncounter=!1,ft(!0)):await H0(0),!0}).build(),pt.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${EE}:safari.2.label`,buttonTooltip:`${EE}:safari.2.tooltip`,selected:[{text:`${EE}:safari.2.selected`}]}).withOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter.misc.pokemon;return await x9(E),pb(2),Fb(1,8)?await qt(mA(`${EE}:safari.eating`)??"",null,1e3,!1):await qt(mA(`${EE}:safari.busy_eating`)??"",null,1e3,!1),await H0(1),!0}).build(),pt.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${EE}:safari.3.label`,buttonTooltip:`${EE}:safari.3.tooltip`,selected:[{text:`${EE}:safari.3.selected`}]}).withOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter.misc.pokemon;return await b9(E),Fb(-2),pb(-1,8)?await qt(mA(`${EE}:safari.angry`)??"",null,1e3,!1):await qt(mA(`${EE}:safari.beside_itself_angry`)??"",null,1e3,!1),await H0(2),!0}).build(),pt.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${EE}:safari.4.label`,buttonTooltip:`${EE}:safari.4.tooltip`}).withOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter,A=E.misc.pokemon;return await M9(A),E.misc.safariPokemonRemaining>0?(await KC(),OS({overrideOptions:iS,startingCursorIndex:3,hideDescription:!0})):(E.continuousEncounter=!1,ft(!0)),!0}).build()];async function KC(){const E=n.currentBattle.mysteryEncounter;E.setDialogueToken("remainingCount",E.misc.safariPokemonRemaining),n.queueMessage(mA(`${EE}:safari.remaining_count`)??"",null,!0);let A,s;n.executeWithSeedOffset(()=>{A=Z9();const a=n.currentBattle.getLevelForWave();if(A=ke(A.getWildSpeciesForLevel(a,!0,!1,n.gameMode)),s=n.addEnemyPokemon(A,a,lt.NONE,!1),s.shiny||s.trySetShinySeed(),s.species.abilityHidden){const i=s.species.ability2?2:1;if(s.abilityIndex<i){const r=new _s(256);n.applyModifiers(Gn,!0,r),!ce(r.value)&&(s.abilityIndex=i)}}s.calculateStats(),n.currentBattle.enemyParty.unshift(s)},n.currentBattle.waveIndex*1e3*E.misc.safariPokemonRemaining),n.gameData.setPokemonSeen(s,!0),await s.loadAssets(),E.misc.catchStage=0,E.misc.fleeStage=0,E.misc.pokemon=s,E.misc.safariPokemonRemaining-=1,n.unshiftPhase(new QE(0,!1)),E.setDialogueToken("pokemonName",te(s));const R=n.findModifier(a=>a instanceof di);R&&n.pushPhase(new AS(s.getBattlerIndex(),Math.min(R.getStackCount()*2,6)))}N(KC,"summonSafariPokemon");function V9(E){const A=E.species.catchRate,s=n.currentBattle.mysteryEncounter.misc.catchStage,R=(2+Math.min(Math.max(s,0),6))/(2-Math.max(Math.min(s,0),-6)),i=Math.round(A*1.5*R),r=Math.round(1048560/Math.sqrt(Math.sqrt(16711680/i)));return u9(E,be.POKEBALL,r)}N(V9,"throwPokeball");async function x9(E){const A=E.y,s=E.getFieldPositionOffset(),R=n.addFieldSprite(91,105,"safari_zone_bait","0001.png");return R.setOrigin(.5,.625),n.field.add(R),new Promise(a=>{n.trainer.setTexture(`trainer_${n.gameData.gender===Vt.FEMALE?"f":"m"}_back_pb`),n.time.delayedCall(Nr[0],()=>{n.playSound("se/pb_throw"),n.trainer.setFrame("2"),n.time.delayedCall(Nr[1],()=>{n.trainer.setFrame("3"),n.time.delayedCall(Nr[2],()=>{n.trainer.setTexture(`trainer_${n.gameData.gender===Vt.FEMALE?"f":"m"}_back`)})}),n.tweens.add({targets:R,x:{value:210+s[0],ease:"Linear"},y:{value:55+s[1],ease:"Cubic.easeOut"},duration:500,onComplete:N(()=>{let i=1;n.time.delayedCall(768,()=>{n.tweens.add({targets:E,duration:150,ease:"Cubic.easeOut",yoyo:!0,y:A-5,loop:6,onStart:N(()=>{n.playSound("battle_anims/PRSFX- Bug Bite"),R.setFrame("0002.png")},"onStart"),onLoop:N(()=>{i%2===0&&n.playSound("battle_anims/PRSFX- Bug Bite"),i===4&&R.setFrame("0003.png"),i++},"onLoop"),onComplete:N(()=>{n.time.delayedCall(256,()=>{R.destroy(),a(!0)})},"onComplete")})})},"onComplete")})})})}N(x9,"throwBait");async function b9(E){const A=E.y,s=E.getFieldPositionOffset(),R=n.addFieldSprite(91,115,"safari_zone_mud","0001.png");return R.setOrigin(.5,.625),n.field.add(R),new Promise(a=>{n.trainer.setTexture(`trainer_${n.gameData.gender===Vt.FEMALE?"f":"m"}_back_pb`),n.time.delayedCall(Nr[0],()=>{n.playSound("se/pb_throw"),n.trainer.setFrame("2"),n.time.delayedCall(Nr[1],()=>{n.trainer.setFrame("3"),n.time.delayedCall(Nr[2],()=>{n.trainer.setTexture(`trainer_${n.gameData.gender===Vt.FEMALE?"f":"m"}_back`)})}),n.tweens.add({targets:R,x:{value:230+s[0],ease:"Linear"},y:{value:55+s[1],ease:"Cubic.easeOut"},duration:500,onComplete:N(()=>{n.playSound("battle_anims/PRSFX- Sludge Bomb2"),R.setFrame("0002.png"),n.time.delayedCall(200,()=>{R.setFrame("0003.png"),n.time.delayedCall(400,()=>{R.setFrame("0004.png")})}),n.tweens.add({targets:R,alpha:0,ease:"Cubic.easeIn",duration:1e3,onComplete:N(()=>{R.destroy(),n.tweens.add({targets:E,duration:300,ease:"Cubic.easeOut",yoyo:!0,y:A-20,loop:1,onStart:N(()=>{n.playSound("battle_anims/PRSFX- Taunt2")},"onStart"),onLoop:N(()=>{n.playSound("battle_anims/PRSFX- Taunt2")},"onLoop"),onComplete:N(()=>{a(!0)},"onComplete")})},"onComplete")})},"onComplete")})})})}N(b9,"throwMud");function k9(E,A){const s=E.species.catchRate,R=(2+Math.min(Math.max(A,0),6))/(2-Math.max(Math.min(A,0),-6)),a=(255*255-s*s)/255/2*R;console.log("Flee rate: "+a);const i=ce(256);return console.log("Roll: "+i),i<a}N(k9,"isPokemonFlee");function Fb(E,A){if(A&&ce(10)>=A)return!1;const s=n.currentBattle.mysteryEncounter.misc.fleeStage??0;return n.currentBattle.mysteryEncounter.misc.fleeStage=Math.min(Math.max(s+E,-6),6),!0}N(Fb,"tryChangeFleeStage");function pb(E,A){if(A&&ce(10)>=A)return!1;const s=n.currentBattle.mysteryEncounter.misc.catchStage??0;return n.currentBattle.mysteryEncounter.misc.catchStage=Math.min(Math.max(s+E,-6),6),!0}N(pb,"tryChangeCatchStage");async function H0(E){const A=n.getEnemyParty();if(A.length>1){for(let i=1;i<A.length;i++)A[i].destroy();n.currentBattle.enemyParty=A.slice(0,1)}const s=n.currentBattle.mysteryEncounter,R=s.misc.pokemon;k9(R,s.misc.fleeStage)?(await D9(R),s.misc.safariPokemonRemaining>0?(await KC(),OS({overrideOptions:iS,startingCursorIndex:E,hideDescription:!0})):(s.continuousEncounter=!1,ft(!0))):(n.queueMessage(mA(`${EE}:safari.watching`)??"",0,null,1e3),OS({overrideOptions:iS,startingCursorIndex:E,hideDescription:!0}))}N(H0,"doEndTurn");function Z9(){return ke(v1([0,5],l8,void 0,!1,!1,!1))}N(Z9,"getSafariSpeciesSpawn");var EO=(E=>(E[E.MAGMA_BG=0]="MAGMA_BG",E[E.MAGMA_SPOUT=1]="MAGMA_SPOUT",E[E.SMOKESCREEN=2]="SMOKESCREEN",E[E.DANCE=3]="DANCE",E))(EO||{});const Ks="mysteryEncounters/fieryFallout",X9=20,Q9=FA.withEncounterType(Je.FIERY_FALLOUT).withEncounterTier(wt.COMMON).withSceneWaveRangeRequirement(40,ZA[1]).withCatchAllowed(!0).withIntroSpriteConfigs([]).withAnimations(EO.MAGMA_BG,EO.MAGMA_SPOUT).withAutoHideIntroVisuals(!1).withFleeAllowed(!1).withIntroDialogue([{text:`${Ks}:intro`}]).withOnInit(()=>{const E=n.currentBattle.mysteryEncounter,A=ke(e.VOLCARONA),s={pokemonConfigs:[{species:A,isBoss:!1,gender:at.MALE,tags:[y.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:N(R=>{n.unshiftPhase(new zt(R.getBattlerIndex(),!0,[K.SPDEF,K.SPD],1))},"mysteryEncounterBattleEffects")},{species:A,isBoss:!1,gender:at.FEMALE,tags:[y.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:N(R=>{n.unshiftPhase(new zt(R.getBattlerIndex(),!0,[K.SPDEF,K.SPD],1))},"mysteryEncounterBattleEffects")}],doubleBattle:!0,disableSwitch:!0};return E.enemyPartyConfigs=[s],E.spriteConfigs=[{spriteKey:"",fileRoot:"",species:e.VOLCARONA,repeat:!0,hidden:!0,hasShadow:!0,x:-20,startFrame:20},{spriteKey:"",fileRoot:"",species:e.VOLCARONA,repeat:!0,hidden:!0,hasShadow:!0,x:20}],bo([t.FIRE_SPIN,t.QUIVER_DANCE]),n.arena.trySetWeather(Oe.SUNNY,!0),E.setDialogueToken("volcaronaName",ke(e.VOLCARONA).getName()),!0}).withOnVisualsStart(()=>{new Xn(EO.MAGMA_BG,n.getPlayerPokemon(),n.getPlayerPokemon()).playWithoutTargets(200,70,2,3);const A=new Xn(EO.MAGMA_SPOUT,n.getPlayerPokemon(),n.getPlayerPokemon());return A.playWithoutTargets(80,100,2),n.time.delayedCall(600,()=>{A.playWithoutTargets(-20,100,2)}),n.time.delayedCall(1200,()=>{A.playWithoutTargets(140,150,2)}),!0}).setLocalizationKey(`${Ks}`).withTitle(`${Ks}:title`).withDescription(`${Ks}:description`).withQuery(`${Ks}:query`).withSimpleOption({buttonLabel:`${Ks}:option.1.label`,buttonTooltip:`${Ks}:option.1.tooltip`,selected:[{text:`${Ks}:option.1.selected`}]},async()=>{const E=n.currentBattle.mysteryEncounter;Ft({fillRemaining:!0},void 0,()=>Wb()),E.startOfBattleEffects.push({sourceBattlerIndex:gt.ENEMY,targets:[gt.PLAYER],move:new nt(t.FIRE_SPIN),ignorePp:!0},{sourceBattlerIndex:gt.ENEMY_2,targets:[gt.PLAYER_2],move:new nt(t.FIRE_SPIN),ignorePp:!0}),await $A(n.currentBattle.mysteryEncounter.enemyPartyConfigs[0])}).withSimpleOption({buttonLabel:`${Ks}:option.2.label`,buttonTooltip:`${Ks}:option.2.tooltip`,selected:[{text:`${Ks}:option.2.selected`}]},async()=>{const E=n.currentBattle.mysteryEncounter,A=n.getPlayerParty().filter(R=>R.isAllowedInBattle()&&!R.getTypes().includes(I.FIRE));for(const R of A){const a=X9/100,i=Math.floor(R.getMaxHp()*a);V1(R,i)}const s=A.filter(R=>ve(R.status)||ve(R.status.effect)||R.status.effect===ne.NONE);if((s==null?void 0:s.length)>0){const R=ce(s.length),a=s[R];a.trySetStatus(ne.BURN)&&(E.setDialogueToken("burnedPokemon",a.getNameToRender()),E.setDialogueToken("abilityName",new Re(O.HEATPROOF,3).name),RE(`${Ks}:option.2.target_burned`),T8(a,O.HEATPROOF))}ft(!0)}).withOption(pt.newOptionWithMode(ct.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(ni.Some(new mr(I.FIRE,!0,1),new BC(g9,!0))).withDialogue({buttonLabel:`${Ks}:option.3.label`,buttonTooltip:`${Ks}:option.3.tooltip`,disabledButtonTooltip:`${Ks}:option.3.disabled_tooltip`,selected:[{text:`${Ks}:option.3.selected`}]}).withPreOptionPhase(async()=>{JA(!1,!1,2e3)}).withOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter;await JA(),Ft({fillRemaining:!0},void 0,()=>{Wb()});const A=E.options[2].primaryPokemon;DR([A.id],ke(e.VOLCARONA).baseExp*2),ft()}).build()).build();function Wb(){var A;const E=(A=n.getPlayerParty())==null?void 0:A[0];if(E){let s=Kt(J.ATTACK_TYPE_BOOSTER);s||(s=Kt(J.ATTACK_TYPE_BOOSTER,[I.FIRE])),CR(E,s);const R=n.currentBattle.mysteryEncounter;R.setDialogueToken("itemName",s.name),R.setDialogueToken("leadPokemon",E.getNameToRender()),RE(`${Ks}:found_item`)}}N(Wb,"giveLeadPokemonAttackTypeBoostItem");const HR="mysteryEncounters/theStrongStuff",Yb=15,yb=10,J9=FA.withEncounterType(Je.THE_STRONG_STUFF).withEncounterTier(wt.COMMON).withSceneWaveRangeRequirement(...ZA).withScenePartySizeRequirement(3,6).withMaxAllowedEncounters(1).withHideWildIntroMessage(!0).withAutoHideIntroVisuals(!1).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:"berry_juice",fileRoot:"items",hasShadow:!0,isItem:!0,scale:1.25,x:-15,y:3,disableAnimation:!0},{spriteKey:e.SHUCKLE.toString(),fileRoot:"pokemon",hasShadow:!0,repeat:!0,scale:1.25,x:20,y:10,yShadow:7}]).withIntroDialogue([{text:`${HR}:intro`}]).withOnInit(()=>{const E=n.currentBattle.mysteryEncounter,A={levelAdditiveModifier:1,disableSwitch:!0,pokemonConfigs:[{species:ke(e.SHUCKLE),isBoss:!0,bossSegments:5,shiny:!1,customPokemonData:new rs({spriteScale:1.25}),nature:At.BOLD,moveSet:[t.INFESTATION,t.SALT_CURE,t.GASTRO_ACID,t.HEAL_ORDER],modifierConfigs:[{modifier:Kt(J.BERRY,[_t.SITRUS])},{modifier:Kt(J.BERRY,[_t.ENIGMA])},{modifier:Kt(J.BERRY,[_t.APICOT])},{modifier:Kt(J.BERRY,[_t.GANLON])},{modifier:Kt(J.BERRY,[_t.LUM]),stackCount:2}],tags:[y.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:N(s=>{RE(`${HR}:option.2.stat_boost`),n.unshiftPhase(new zt(s.getBattlerIndex(),!0,[K.DEF,K.SPDEF],2))},"mysteryEncounterBattleEffects")}]};return E.enemyPartyConfigs=[A],bo([t.GASTRO_ACID,t.STEALTH_ROCK]),E.setDialogueToken("shuckleName",ke(e.SHUCKLE).getName()),!0}).setLocalizationKey(`${HR}`).withTitle(`${HR}:title`).withDescription(`${HR}:description`).withQuery(`${HR}:query`).withSimpleOption({buttonLabel:`${HR}:option.1.label`,buttonTooltip:`${HR}:option.1.tooltip`,selected:[{text:`${HR}:option.1.selected`}]},async()=>{const E=n.currentBattle.mysteryEncounter;return n.time.delayedCall(750,()=>{JA(!0,!0,50)}),n.getPlayerParty().slice(0).sort((s,R)=>{const a=s.calculateBaseStats().reduce((r,L)=>r+L,0);return R.calculateBaseStats().reduce((r,L)=>r+L,0)-a}).forEach((s,R)=>{R<2?(Db(s,-Yb),E.setDialogueToken("highBstPokemon"+(R+1),s.getNameToRender())):Db(s,yb)}),E.setDialogueToken("reductionValue",Yb.toString()),E.setDialogueToken("increaseValue",yb.toString()),await qt(`${HR}:option.1.selected_2`,null,void 0,!0),E.dialogue.outro=[{text:`${HR}:outro`}],Ft({fillRemaining:!0}),ft(!0),!0}).withSimpleOption({buttonLabel:`${HR}:option.2.label`,buttonTooltip:`${HR}:option.2.tooltip`,selected:[{text:`${HR}:option.2.selected`}]},async()=>{const E=n.currentBattle.mysteryEncounter;Ft({guaranteedModifierTypeFuncs:[J.SOUL_DEW],fillRemaining:!0}),E.startOfBattleEffects.push({sourceBattlerIndex:gt.ENEMY,targets:[gt.PLAYER],move:new nt(t.GASTRO_ACID),ignorePp:!0},{sourceBattlerIndex:gt.ENEMY,targets:[gt.PLAYER],move:new nt(t.STEALTH_ROCK),ignorePp:!0}),E.dialogue.outro=[],await JA(!0,!0,500),await $A(E.enemyPartyConfigs[0])}).build(),Bs="mysteryEncounters/thePokemonSalesman",al=4,$9=100,z9=FA.withEncounterType(Je.THE_POKEMON_SALESMAN).withEncounterTier(wt.ULTRA).withSceneWaveRangeRequirement(...ZA).withSceneRequirement(new en(0,al)).withAutoHideIntroVisuals(!1).withIntroSpriteConfigs([{spriteKey:"pokemon_salesman",fileRoot:"mystery-encounters",hasShadow:!0}]).withIntroDialogue([{text:`${Bs}:intro`},{text:`${Bs}:intro_dialogue`,speaker:`${Bs}:speaker`}]).setLocalizationKey(`${Bs}`).withTitle(`${Bs}:title`).withDescription(`${Bs}:description`).withQuery(`${Bs}:query`).withOnInit(()=>{const E=n.currentBattle.mysteryEncounter;let A=wb(),s=0;for(;(ve(A.abilityHidden)||A.abilityHidden===O.NONE)&&s<5;)A=wb(),s++;let R;ce($9)===0||ve(A.abilityHidden)||A.abilityHidden===O.NONE?(A=ke(e.MAGIKARP),R=new vE(A,5,2,A.formIndex,void 0,!0)):R=new vE(A,5,2,A.formIndex),R.generateAndPopulateMoveset();const{spriteKey:a,fileRoot:i}=FM(R);E.spriteConfigs.push({spriteKey:a,fileRoot:i,hasShadow:!0,repeat:!0,isPokemon:!0,isShiny:R.shiny,variant:R.variant});const r=KA[A.speciesId];let L=al*(Math.max(r,2.5)/5);R.shiny&&(L=al,R.abilityIndex=0,E.dialogue.encounterOptionsDialogue.description=`${Bs}:description_shiny`,E.options[0].dialogue.buttonTooltip=`${Bs}:option.1.tooltip_shiny`);const o=n.getWaveMoneyAmount(L);return E.setDialogueToken("purchasePokemon",R.getNameToRender()),E.setDialogueToken("price",o.toString()),E.misc={price:o,pokemon:R},R.calculateStats(),!0}).withOption(pt.newOptionWithMode(ct.DISABLED_OR_DEFAULT).withHasDexProgress(!0).withSceneMoneyRequirement(0,al).withDialogue({buttonLabel:`${Bs}:option.1.label`,buttonTooltip:`${Bs}:option.1.tooltip`,selected:[{text:`${Bs}:option.1.selected_message`}]}).withOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter,A=E.misc.price,s=E.misc.pokemon;RO(-A,!0,!1),await Un(`${Bs}:option.1.selected_dialogue`,`${Bs}:speaker`),await JA();const R=new hs(s);R.player=!1,await Kr(R.toPokemon(),null,be.POKEBALL,!0,!0),ft(!0)}).build()).withSimpleOption({buttonLabel:`${Bs}:option.2.label`,buttonTooltip:`${Bs}:option.2.tooltip`,selected:[{text:`${Bs}:option.2.selected`}]},async()=>(ft(!0),!0)).build();function wb(){return ke(v1([0,5],l8,void 0,!1,!1,!1))}N(wb,"getSalesmanSpeciesOffer");const kE="mysteryEncounters/anOfferYouCantRefuse",q9=10,j9=30,eX=FA.withEncounterType(Je.AN_OFFER_YOU_CANT_REFUSE).withEncounterTier(wt.GREAT).withSceneWaveRangeRequirement(...ZA).withScenePartySizeRequirement(2,6,!0).withIntroSpriteConfigs([{spriteKey:e.LIEPARD.toString(),fileRoot:"pokemon",hasShadow:!0,repeat:!0,x:0,y:-4,yShadow:-4},{spriteKey:"rich_kid_m",fileRoot:"trainer",hasShadow:!0,x:2,y:5,yShadow:5}]).withIntroDialogue([{text:`${kE}:intro`},{text:`${kE}:intro_dialogue`,speaker:`${kE}:speaker`}]).setLocalizationKey(`${kE}`).withTitle(`${kE}:title`).withDescription(`${kE}:description`).withQuery(`${kE}:query`).withOnInit(()=>{const E=n.currentBattle.mysteryEncounter,A=C9(!0,!0),s=A.getSpeciesForm().getRootSpeciesId(),R=KA[s]??1,a=Math.max(j9/10*R,q9),i=n.getWaveMoneyAmount(a);if(E.setDialogueToken("strongestPokemon",A.getNameToRender()),E.setDialogueToken("price",i.toString()),E.misc={pokemon:A,price:i},E.options[1].primaryPokemonRequirements[0].meetsRequirement()){const o=E.dialogueTokens.option2PrimaryAbility,l=E.dialogueTokens.option2PrimaryMove;o?E.setDialogueToken("moveOrAbility",o):l&&E.setDialogueToken("moveOrAbility",l)}const L=Kt(J.SHINY_CHARM);return E.setDialogueToken("itemName",(L==null?void 0:L.name)??u.t("modifierType:ModifierType.SHINY_CHARM.name")),E.setDialogueToken("liepardName",ke(e.LIEPARD).getName()),!0}).withOption(pt.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${kE}:option.1.label`,buttonTooltip:`${kE}:option.1.tooltip`,selected:[{text:`${kE}:option.1.selected`,speaker:`${kE}:speaker`}]}).withPreOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter;return RO(E.misc.price),n.removePokemonFromPlayerParty(E.misc.pokemon),!0}).withOptionPhase(async()=>{n.unshiftPhase(new GE(J.SHINY_CHARM)),ft(!0)}).build()).withOption(pt.newOptionWithMode(ct.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(ni.Some(new kI(f9,!0),new BC(B9,!0))).withDialogue({buttonLabel:`${kE}:option.2.label`,buttonTooltip:`${kE}:option.2.tooltip`,disabledButtonTooltip:`${kE}:option.2.tooltip_disabled`,selected:[{speaker:`${kE}:speaker`,text:`${kE}:option.2.selected`}]}).withOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter;RO(E.misc.price),DR(E.options[1].primaryPokemon.id,ke(e.LIEPARD).baseExp,!0),ft(!0)}).build()).withSimpleOption({buttonLabel:`${kE}:option.3.label`,buttonTooltip:`${kE}:option.3.tooltip`,selected:[{speaker:`${kE}:speaker`,text:`${kE}:option.3.selected`}]},async()=>(ft(!0),!0)).build(),ts="mysteryEncounters/delibirdy",d0=["BerryModifier","PokemonInstantReviveModifier"],f0=["BerryModifier","PokemonInstantReviveModifier","TerastallizeModifier","PokemonBaseStatModifier","PokemonBaseStatTotalModifier"],vb=2,LI=N(()=>{const E=n.eventManager.getDelibirdyBuff();if(E.length>0){const A=E.filter(s=>{const R=Kt(J[s]),a=n.findModifier(i=>i.type.id===(R==null?void 0:R.id));return!(a&&a.getStackCount()>=a.getMaxStackCount())});A.length>0?n.unshiftPhase(new GE(J[IE(A)])):n.unshiftPhase(new GE(J.VOUCHER))}},"doEventReward"),tX=FA.withEncounterType(Je.DELIBIRDY).withEncounterTier(wt.GREAT).withSceneWaveRangeRequirement(...ZA).withSceneRequirement(new en(0,vb)).withPrimaryPokemonRequirement(ni.Some(new pI(d0),new pI(f0,1,!0))).withIntroSpriteConfigs([{spriteKey:"",fileRoot:"",species:e.DELIBIRD,hasShadow:!0,repeat:!0,startFrame:38,scale:.94},{spriteKey:"",fileRoot:"",species:e.DELIBIRD,hasShadow:!0,repeat:!0,scale:1.06},{spriteKey:"",fileRoot:"",species:e.DELIBIRD,hasShadow:!0,repeat:!0,startFrame:65,x:1,y:5,yShadow:5}]).withIntroDialogue([{text:`${ts}:intro`}]).setLocalizationKey(`${ts}`).withTitle(`${ts}:title`).withDescription(`${ts}:description`).withQuery(`${ts}:query`).withOutroDialogue([{text:`${ts}:outro`}]).withOnInit(()=>(n.currentBattle.mysteryEncounter.setDialogueToken("delibirdName",ke(e.DELIBIRD).getName()),n.loadBgm("mystery_encounter_delibirdy","mystery_encounter_delibirdy.mp3"),!0)).withOnVisualsStart(()=>(n.fadeAndSwitchBgm("mystery_encounter_delibirdy"),!0)).withOption(pt.newOptionWithMode(ct.DISABLED_OR_DEFAULT).withSceneMoneyRequirement(0,vb).withDialogue({buttonLabel:`${ts}:option.1.label`,buttonTooltip:`${ts}:option.1.tooltip`,selected:[{text:`${ts}:option.1.selected`}]}).withPreOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter;return RO(-E.options[0].requirements[0].requiredMoney,!0,!1),!0}).withOptionPhase(async()=>{const E=n.findModifier(A=>A instanceof IO);if(E&&E.getStackCount()>=E.getMaxStackCount()){const A=Kt(J.SHELL_BELL);await CR(n.getPlayerPokemon(),A),n.playSound("item_fanfare"),await qt(u.t("battle:rewardGain",{modifierName:A.name}),null,void 0,!0),LI()}else n.unshiftPhase(new GE(J.AMULET_COIN)),LI();ft(!0)}).build()).withOption(pt.newOptionWithMode(ct.DISABLED_OR_DEFAULT).withPrimaryPokemonRequirement(new pI(d0)).withDialogue({buttonLabel:`${ts}:option.2.label`,buttonTooltip:`${ts}:option.2.tooltip`,secondOptionPrompt:`${ts}:option.2.select_prompt`,selected:[{text:`${ts}:option.2.selected`}]}).withPreOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter;return zE(N(R=>R.getHeldItems().filter(i=>d0.some(r=>i.constructor.name===r)&&i.isTransferable).map(i=>({label:i.type.name,handler:N(()=>(E.setDialogueToken("chosenItem",i.type.name),E.misc={chosenPokemon:R,chosenModifier:i},!0),"handler")})),"onPokemonSelected"),void 0,N(R=>E.options[1].pokemonMeetsPrimaryRequirements(R)?null:mA(`${ts}:invalid_selection`)??null,"selectableFilter"))}).withOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter,A=E.misc.chosenModifier,s=E.misc.chosenPokemon;if(A instanceof CE){const R=n.findModifier(a=>a instanceof Oa);if(R&&R.getStackCount()>=R.getMaxStackCount()){const a=Kt(J.SHELL_BELL);await CR(n.getPlayerPokemon(),a),n.playSound("item_fanfare"),await qt(u.t("battle:rewardGain",{modifierName:a.name}),null,void 0,!0),LI()}else n.unshiftPhase(new GE(J.CANDY_JAR)),LI()}else{const R=n.findModifier(a=>a instanceof Pi);if(R&&R.getStackCount()>=R.getMaxStackCount()){const a=Kt(J.SHELL_BELL);await CR(n.getPlayerPokemon(),a),n.playSound("item_fanfare"),await qt(u.t("battle:rewardGain",{modifierName:a.name}),null,void 0,!0),LI()}else n.unshiftPhase(new GE(J.BERRY_POUCH)),LI()}s.loseHeldItem(A,!1),ft(!0)}).build()).withOption(pt.newOptionWithMode(ct.DISABLED_OR_DEFAULT).withPrimaryPokemonRequirement(new pI(f0,1,!0)).withDialogue({buttonLabel:`${ts}:option.3.label`,buttonTooltip:`${ts}:option.3.tooltip`,secondOptionPrompt:`${ts}:option.3.select_prompt`,selected:[{text:`${ts}:option.3.selected`}]}).withPreOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter;return zE(N(R=>R.getHeldItems().filter(i=>!f0.some(r=>i.constructor.name===r)&&i.isTransferable).map(i=>({label:i.type.name,handler:N(()=>(E.setDialogueToken("chosenItem",i.type.name),E.misc={chosenPokemon:R,chosenModifier:i},!0),"handler")})),"onPokemonSelected"),void 0,N(R=>E.options[2].pokemonMeetsPrimaryRequirements(R)?null:mA(`${ts}:invalid_selection`)??null,"selectableFilter"))}).withOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter,A=E.misc.chosenModifier,s=E.misc.chosenPokemon,R=n.findModifier(a=>a instanceof Gi);if(R&&R.getStackCount()>=R.getMaxStackCount()){const a=Kt(J.SHELL_BELL);await CR(n.getPlayerParty()[0],a),n.playSound("item_fanfare"),await qt(u.t("battle:rewardGain",{modifierName:a.name}),null,void 0,!0),LI()}else n.unshiftPhase(new GE(J.HEALING_CHARM)),LI();s.loseHeldItem(A,!1),ft(!0)}).build()).build(),Qs="mysteryEncounters/absoluteAvarice",AX=FA.withEncounterType(Je.ABSOLUTE_AVARICE).withEncounterTier(wt.GREAT).withSceneWaveRangeRequirement(...ZA).withSceneRequirement(new fC("BerryModifier",4)).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:"",fileRoot:"",species:e.GREEDENT,hasShadow:!0,alpha:.001,repeat:!0,x:-5},{spriteKey:"",fileRoot:"",species:e.GREEDENT,hasShadow:!1,repeat:!0,x:-5},{spriteKey:"lum_berry",fileRoot:"items",isItem:!0,x:7,y:-14,hidden:!0,disableAnimation:!0},{spriteKey:"salac_berry",fileRoot:"items",isItem:!0,x:2,y:4,hidden:!0,disableAnimation:!0},{spriteKey:"lansat_berry",fileRoot:"items",isItem:!0,x:32,y:5,hidden:!0,disableAnimation:!0},{spriteKey:"liechi_berry",fileRoot:"items",isItem:!0,x:6,y:-5,hidden:!0,disableAnimation:!0},{spriteKey:"sitrus_berry",fileRoot:"items",isItem:!0,x:7,y:8,hidden:!0,disableAnimation:!0},{spriteKey:"enigma_berry",fileRoot:"items",isItem:!0,x:26,y:-4,hidden:!0,disableAnimation:!0},{spriteKey:"leppa_berry",fileRoot:"items",isItem:!0,x:16,y:-27,hidden:!0,disableAnimation:!0},{spriteKey:"petaya_berry",fileRoot:"items",isItem:!0,x:30,y:-17,hidden:!0,disableAnimation:!0},{spriteKey:"ganlon_berry",fileRoot:"items",isItem:!0,x:16,y:-11,hidden:!0,disableAnimation:!0},{spriteKey:"apicot_berry",fileRoot:"items",isItem:!0,x:14,y:-2,hidden:!0,disableAnimation:!0},{spriteKey:"starf_berry",fileRoot:"items",isItem:!0,x:18,y:9,hidden:!0,disableAnimation:!0}]).withHideWildIntroMessage(!0).withAutoHideIntroVisuals(!1).withIntroDialogue([{text:`${Qs}:intro`}]).setLocalizationKey(`${Qs}`).withTitle(`${Qs}:title`).withDescription(`${Qs}:description`).withQuery(`${Qs}:query`).withOnInit(()=>{const E=n.currentBattle.mysteryEncounter;n.loadSe("PRSFX- Bug Bite","battle_anims","PRSFX- Bug Bite.wav"),n.loadSe("Follow Me","battle_anims","Follow Me.mp3");const A=n.findModifiers(r=>r instanceof CE),s=new Map;n.getPlayerParty().forEach(r=>{const L=A.filter(o=>o.pokemonId===r.id);(L==null?void 0:L.length)>0&&s.set(r.id,L)}),E.misc={berryItemsMap:s};const R=[];A.forEach(r=>{for(let L=0;L<r.stackCount;L++){const o=Kt(J.BERRY,[r.berryType]);R.push({modifier:o})}});const a=n.currentBattle.waveIndex<50?[K.SPDEF]:[K.ATK,K.DEF,K.SPATK,K.SPDEF,K.SPD],i={levelAdditiveModifier:1,pokemonConfigs:[{species:ke(e.GREEDENT),isBoss:!0,bossSegments:3,shiny:!1,moveSet:[t.THRASH,t.BODY_PRESS,t.STUFF_CHEEKS,t.CRUNCH],modifierConfigs:R,tags:[y.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:N(r=>{RE(`${Qs}:option.1.boss_enraged`),n.unshiftPhase(new zt(r.getBattlerIndex(),!0,a,1))},"mysteryEncounterBattleEffects")}]};return E.enemyPartyConfigs=[i],E.setDialogueToken("greedentName",ke(e.GREEDENT).getName()),!0}).withOnVisualsStart(()=>(EX(),Vb(),n.findModifiers(A=>A instanceof CE).forEach(A=>{n.removeModifier(A)}),n.updateModifiers(!0),!0)).withOption(pt.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${Qs}:option.1.label`,buttonTooltip:`${Qs}:option.1.tooltip`,selected:[{text:`${Qs}:option.1.selected`}]}).withOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter,A=Kt(J.REVIVER_SEED);E.setDialogueToken("foodReward",(A==null?void 0:A.name)??u.t("modifierType:ModifierType.REVIVER_SEED.name")),Ft({fillRemaining:!0},void 0,N(()=>{n.getPlayerParty().forEach(a=>{const i=a.getHeldItems();if(A&&!i.some(r=>r instanceof iL)){const r=A.newModifier(a);n.addModifier(r,!1,!1,!1,!0)}}),RE(`${Qs}:option.1.food_stash`)},"givePartyPokemonReviverSeeds")),E.startOfBattleEffects.push({sourceBattlerIndex:gt.ENEMY,targets:[gt.ENEMY],move:new nt(t.STUFF_CHEEKS),ignorePp:!0}),await JA(!0,!0,500),await $A(E.enemyPartyConfigs[0])}).build()).withOption(pt.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${Qs}:option.2.label`,buttonTooltip:`${Qs}:option.2.tooltip`,selected:[{text:`${Qs}:option.2.selected`}]}).withOptionPhase(async()=>{const A=n.currentBattle.mysteryEncounter.misc.berryItemsMap;n.getPlayerParty().forEach(R=>{const a=A.get(R.id),i=[];a==null||a.forEach(L=>i.push(...new Array(L.stackCount).fill(L.berryType)));const r=Math.floor((i.length??0)*2/5);if(r>0)for(let L=0;L<r;L++){Phaser.Math.RND.shuffle(i);const o=i.pop(),l=Kt(J.BERRY,[o]);CR(R,l)}}),await n.updateModifiers(!0),await JA(!0,!0,500),ft(!0)}).build()).withOption(pt.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${Qs}:option.3.label`,buttonTooltip:`${Qs}:option.3.tooltip`,selected:[{text:`${Qs}:option.3.selected`}]}).withPreOptionPhase(async()=>(sX(),Vb(!0),!0)).withOptionPhase(async()=>{const E=w1(!1,!0).level-2,A=new xs(ke(e.GREEDENT),E,lt.NONE,!1,!0);A.moveset=[new nt(t.THRASH),new nt(t.BODY_PRESS),new nt(t.STUFF_CHEEKS),new nt(t.SLACK_OFF)],A.passive=!0,await JA(!0,!0,500),await Kr(A,null,be.POKEBALL,!1),ft(!0)}).build()).build();function EX(){var R;const s=(R=n.currentBattle.mysteryEncounter.introVisuals)==null?void 0:R.getSpriteAtIndex(1);n.playSound("battle_anims/Follow Me"),n.tweens.chain({targets:s,tweens:[{duration:500,ease:"Cubic.easeOut",y:"+=75",x:"-=65",scale:1.1},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(_A(2)>0?"-=":"+=")+5,y:(_A(2)>0?"-=":"+=")+5},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(_A(2)>0?"-=":"+=")+5,y:(_A(2)>0?"-=":"+=")+5},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(_A(2)>0?"-=":"+=")+5,y:(_A(2)>0?"-=":"+=")+5},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(_A(2)>0?"-=":"+=")+5,y:(_A(2)>0?"-=":"+=")+5},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(_A(2)>0?"-=":"+=")+5,y:(_A(2)>0?"-=":"+=")+5},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(_A(2)>0?"-=":"+=")+5,y:(_A(2)>0?"-=":"+=")+5},{duration:500,ease:"Cubic.easeOut",y:"-=75",x:"+=65",scale:1},{duration:300,ease:"Cubic.easeOut",yoyo:!0,y:"-=20",loop:1}]})}N(EX,"doGreedentSpriteSteal");function sX(){var s;const E=(s=n.currentBattle.mysteryEncounter.introVisuals)==null?void 0:s.getSpriteAtIndex(1);let A=1;n.tweens.add({targets:E,duration:150,ease:"Cubic.easeOut",yoyo:!0,y:"-=8",loop:5,onStart:N(()=>{n.playSound("battle_anims/PRSFX- Bug Bite")},"onStart"),onLoop:N(()=>{A%2===0&&n.playSound("battle_anims/PRSFX- Bug Bite"),A++},"onLoop")})}N(sX,"doGreedentEatBerries");function Vb(E=!1){let s=["starf","sitrus","lansat","salac","apicot","enigma","liechi","ganlon","lum","petaya","leppa"];E&&(s=s.reverse());const R=n.currentBattle.mysteryEncounter;s.forEach((a,i)=>{var C;const r=R.spriteConfigs.findIndex(M=>{var D;return(D=M.spriteKey)==null?void 0:D.includes(a)});let L,o;const l=(C=R.introVisuals)==null?void 0:C.getSpriteAtIndex(r);l&&(L=l[0],o=l[1]),n.time.delayedCall(150*i+400,()=>{L&&L.setVisible(!E),o&&o.setVisible(!E),a==="petaya"&&L&&o&&!E&&n.time.delayedCall(200,()=>{RX([L,o],30,500)})})})}N(Vb,"doBerrySpritePile");function RX(E,A,s){let R=1,a=A;const i=N(()=>{n.tweens.add({targets:E,y:"+="+a,x:{value:"+="+R*R*10,ease:"Linear"},duration:R*s,ease:"Cubic.easeIn",onComplete:N(()=>{R=R>.01?R*.5:0,R&&(a=a*R,n.tweens.add({targets:E,y:"-="+a,x:{value:"+="+R*R*10,ease:"Linear"},duration:R*s,ease:"Cubic.easeOut",onComplete:N(()=>i(),"onComplete")}))},"onComplete")})},"doBounce");i()}N(RX,"doBerryBounce");const Js="mysteryEncounters/aTrainersTest",OX=FA.withEncounterType(Je.A_TRAINERS_TEST).withEncounterTier(wt.ROGUE).withSceneWaveRangeRequirement(100,ZA[1]).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${Js}:intro`}]).withAutoHideIntroVisuals(!1).withOnInit(()=>{const E=n.currentBattle.mysteryEncounter;let A,s,R;switch(ce(5)){default:case 0:A=U.BUCK,s=un(e.CLAYDOL),R="buck";break;case 1:A=U.CHERYL,s=un(e.BLISSEY),R="cheryl";break;case 2:A=U.MARLEY,s=un(e.ARCANINE),R="marley";break;case 3:A=U.MIRA,s=un(e.ALAKAZAM,!1,1),R="mira";break;case 4:A=U.RILEY,s=un(e.LUCARIO,!1,1),R="riley";break}E.dialogue.intro=[{speaker:`trainerNames:${R}`,text:`${Js}:${R}.intro_dialogue`}],E.options[0].dialogue.selected=[{speaker:`trainerNames:${R}`,text:`${Js}:${R}.accept`}],E.options[1].dialogue.selected=[{speaker:`trainerNames:${R}`,text:`${Js}:${R}.decline`}],E.setDialogueToken("statTrainerName",u.t(`trainerNames:${R}`));const a=u.t(`${Js}:title`)+`:
`+u.t(`trainerNames:${R}`);E.misc={trainerType:A,trainerNameKey:R,trainerEggDescription:a};const i=QA[A].clone(),r=i.getSpriteKey();return E.enemyPartyConfigs.push({levelAdditiveModifier:1,trainerConfig:i}),E.spriteConfigs=[{spriteKey:s.spriteKey,fileRoot:s.fileRoot,hasShadow:!0,repeat:!0,isPokemon:!0,x:22,y:-2,yShadow:-2},{spriteKey:r,fileRoot:"trainer",hasShadow:!0,disableAnimation:!0,x:-24,y:4,yShadow:4}],!0}).setLocalizationKey(`${Js}`).withTitle(`${Js}:title`).withDescription(`${Js}:description`).withQuery(`${Js}:query`).withIntroDialogue().withSimpleOption({buttonLabel:`${Js}:option.1.label`,buttonTooltip:`${Js}:option.1.tooltip`},async()=>{const E=n.currentBattle.mysteryEncounter,A=E.enemyPartyConfigs[0];await JA();const s={pulled:!1,sourceType:WE.EVENT,eggDescriptor:E.misc.trainerEggDescription,tier:m.EPIC};E.setDialogueToken("eggType",u.t(`${Js}:eggTypes.epic`)),Ft({guaranteedModifierTypeFuncs:[J.SACRED_ASH],guaranteedModifierTiers:[w.ROGUE,w.ULTRA],fillRemaining:!0},[s]),await $A(A)}).withSimpleOption({buttonLabel:`${Js}:option.2.label`,buttonTooltip:`${Js}:option.2.tooltip`},async()=>{const E=n.currentBattle.mysteryEncounter;n.unshiftPhase(new Fr(!0));const A={pulled:!1,sourceType:WE.EVENT,eggDescriptor:E.misc.trainerEggDescription,tier:m.RARE};E.setDialogueToken("eggType",u.t(`${Js}:eggTypes.rare`)),Ft({fillRemaining:!1,rerollMultiplier:-1},[A]),ft()}).withOutroDialogue([{text:`${Js}:outro`}]).build(),aO="mysteryEncounters/trashToTreasure",xb=700,bb=2.5,nX=FA.withEncounterType(Je.TRASH_TO_TREASURE).withEncounterTier(wt.ULTRA).withSceneWaveRangeRequirement(60,ZA[1]).withMaxAllowedEncounters(1).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:e.GARBODOR.toString()+"-gigantamax",fileRoot:"pokemon",hasShadow:!1,disableAnimation:!0,scale:1.5,y:8,tint:.4}]).withAutoHideIntroVisuals(!1).withIntroDialogue([{text:`${aO}:intro`}]).setLocalizationKey(`${aO}`).withTitle(`${aO}:title`).withDescription(`${aO}:description`).withQuery(`${aO}:query`).withOnInit(()=>{const E=n.currentBattle.mysteryEncounter,R={levelAdditiveModifier:.5,pokemonConfigs:[{species:ke(e.GARBODOR),isBoss:!0,shiny:!1,formIndex:1,bossSegmentModifier:1,moveSet:[t.PAYBACK,t.GUNK_SHOT,t.STOMPING_TANTRUM,t.DRAIN_PUNCH]}],disableSwitch:!0};return E.enemyPartyConfigs=[R],bo([t.TOXIC,t.AMNESIA]),n.loadSe("PRSFX- Dig2","battle_anims","PRSFX- Dig2.wav"),n.loadSe("PRSFX- Venom Drench","battle_anims","PRSFX- Venom Drench.wav"),E.setDialogueToken("costMultiplier",bb.toString()),!0}).withOption(pt.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${aO}:option.1.label`,buttonTooltip:`${aO}:option.1.tooltip`,selected:[{text:`${aO}:option.1.selected`}]}).withPreOptionPhase(async()=>{aX()}).withOptionPhase(async()=>{await JA(),await IX();const E=Kt(J.MYSTERY_ENCOUNTER_BLACK_SLUDGE,[bb]),A=E==null?void 0:E.newModifier();A&&(await n.addModifier(A,!1,!1,!1,!0),n.playSound("battle_anims/PRSFX- Venom Drench",{volume:2}),await qt(u.t("battle:rewardGain",{modifierName:A.type.name}),null,void 0,!0)),ft(!0)}).build()).withOption(pt.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${aO}:option.2.label`,buttonTooltip:`${aO}:option.2.tooltip`,selected:[{text:`${aO}:option.2.selected`}]}).withOptionPhase(async()=>{n.setFieldScale(.75),await qt(`${aO}:option.2.selected_2`),await JA();const E=n.currentBattle.mysteryEncounter;Ft({guaranteedModifierTiers:[w.ROGUE,w.ROGUE,w.ULTRA,w.GREAT],fillRemaining:!0}),E.startOfBattleEffects.push({sourceBattlerIndex:gt.ENEMY,targets:[gt.PLAYER],move:new nt(t.TOXIC),ignorePp:!0},{sourceBattlerIndex:gt.ENEMY,targets:[gt.ENEMY],move:new nt(t.AMNESIA),ignorePp:!0}),await $A(E.enemyPartyConfigs[0])}).build()).build();async function IX(){const E=Kt(J.SHELL_BELL),A=Kt(J.LEFTOVERS),s=n.getPlayerParty();for(const R of s){const i=n.findModifiers(r=>r instanceof dt&&r.pokemonId===R.id,!0).find(r=>r instanceof _i);if(!i||i.getStackCount()<i.getMaxStackCount()){await CR(R,A);break}}for(const R of s){const i=n.findModifiers(r=>r instanceof dt&&r.pokemonId===R.id,!0).find(r=>r instanceof _i);if(!i||i.getStackCount()<i.getMaxStackCount()){await CR(R,A);break}}n.playSound("item_fanfare"),await qt(u.t("battle:rewardGainCount",{modifierName:A.name,count:2}),null,void 0,!0);for(const R of s){const i=n.findModifiers(r=>r instanceof dt&&r.pokemonId===R.id,!0).find(r=>r instanceof Ra);if(!i||i.getStackCount()<i.getMaxStackCount()){await CR(R,E);break}}for(const R of s){const i=n.findModifiers(r=>r instanceof dt&&r.pokemonId===R.id,!0).find(r=>r instanceof Ra);if(!i||i.getStackCount()<i.getMaxStackCount()){await CR(R,E);break}}n.playSound("item_fanfare"),await qt(u.t("battle:rewardGainCount",{modifierName:E.name,count:2}),null,void 0,!0)}N(IX,"tryApplyDigRewardItems");function aX(){n.playSound("battle_anims/PRSFX- Dig2"),n.time.delayedCall(xb,()=>{n.playSound("battle_anims/PRSFX- Dig2"),n.playSound("battle_anims/PRSFX- Venom Drench",{volume:2})}),n.time.delayedCall(xb*2,()=>{n.playSound("battle_anims/PRSFX- Dig2")})}N(aX,"doGarbageDig");const As="mysteryEncounters/berriesAbound",iX=FA.withEncounterType(Je.BERRIES_ABOUND).withEncounterTier(wt.COMMON).withSceneWaveRangeRequirement(...ZA).withCatchAllowed(!0).withHideWildIntroMessage(!0).withFleeAllowed(!1).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${As}:intro`}]).withOnInit(()=>{const E=n.currentBattle.mysteryEncounter,A=Zo(ko),s=y1(A,!0);E.setDialogueToken("enemyPokemon",te(s));const R={pokemonConfigs:[{level:A,species:s.species,dataSource:new hs(s),isBoss:!0}]};E.enemyPartyConfigs=[R];const a=n.currentBattle.waveIndex>160?7:n.currentBattle.waveIndex>120?5:n.currentBattle.waveIndex>40?4:2;Na(n.getPlayerParty(),HE.PLAYER,0),E.misc={numBerries:a};const{spriteKey:i,fileRoot:r}=FM(s);E.spriteConfigs=[{spriteKey:"berries_abound_bush",fileRoot:"mystery-encounters",x:25,y:-6,yShadow:-7,disableAnimation:!0,hasShadow:!0},{spriteKey:i,fileRoot:r,hasShadow:!0,tint:.25,x:-5,repeat:!0,isPokemon:!0,isShiny:s.shiny,variant:s.variant}];const L=l9(VO[K.SPD],!0,!1);return E.misc.fastestPokemon=L,E.misc.enemySpeed=s.getStat(K.SPD),E.setDialogueToken("fastestPokemon",L.getNameToRender()),!0}).setLocalizationKey(`${As}`).withTitle(`${As}:title`).withDescription(`${As}:description`).withQuery(`${As}:query`).withSimpleOption({buttonLabel:`${As}:option.1.label`,buttonTooltip:`${As}:option.1.tooltip`,selected:[{text:`${As}:option.1.selected`}]},async()=>{const A=n.currentBattle.mysteryEncounter.misc.numBerries,s=N(()=>{const a=u.t(`${As}:berries`);n.playSound("item_fanfare"),RE(u.t("battle:rewardGainCount",{modifierName:a,count:A}));for(let i=0;i<A;i++)B0()},"doBerryRewards"),R=[];for(let a=0;a<5;a++){const i=AE(J.BERRY);i&&R.push(i)}Ft({guaranteedModifierTypeOptions:R,fillRemaining:!1},void 0,s),await $A(n.currentBattle.mysteryEncounter.enemyPartyConfigs[0])}).withOption(pt.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${As}:option.2.label`,buttonTooltip:`${As}:option.2.tooltip`}).withOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter,A=E.misc.fastestPokemon,s=E.misc.enemySpeed,R=A.getStat(K.SPD)/(s*1.1),a=E.misc.numBerries,i=[];for(let r=0;r<5;r++){const L=AE(J.BERRY);L&&i.push(L)}if(R<1){const r=N(()=>{const l=u.t(`${As}:berries`);n.playSound("item_fanfare"),RE(u.t("battle:rewardGainCount",{modifierName:l,count:a}));for(let C=0;C<a;C++)B0()},"doBerryRewards"),L=n.currentBattle.waveIndex<50?[K.DEF,K.SPDEF,K.SPD]:[K.ATK,K.DEF,K.SPATK,K.SPDEF,K.SPD],o=n.currentBattle.mysteryEncounter.enemyPartyConfigs[0];o.pokemonConfigs[0].tags=[y.MYSTERY_ENCOUNTER_POST_SUMMON],o.pokemonConfigs[0].mysteryEncounterBattleEffects=l=>{RE(`${As}:option.2.boss_enraged`),n.unshiftPhase(new zt(l.getBattlerIndex(),!0,L,1))},Ft({guaranteedModifierTypeOptions:i,fillRemaining:!1},void 0,r),await qt(`${As}:option.2.selected_bad`),await $A(o);return}else{const r=Math.max(Math.min(Math.round((R-1)/.08),a),2);E.setDialogueToken("numBerries",String(r));const L=N(()=>{const o=u.t(`${As}:berries`);n.playSound("item_fanfare"),RE(u.t("battle:rewardGainCount",{modifierName:o,count:r}));for(let l=0;l<r;l++)B0(A)},"doFasterBerryRewards");DR(A.id,E.enemyPartyConfigs[0].pokemonConfigs[0].species.baseExp),Ft({guaranteedModifierTypeOptions:i,fillRemaining:!1},void 0,L),await qt(`${As}:option.2.selected`),ft()}}).build()).withSimpleOption({buttonLabel:`${As}:option.3.label`,buttonTooltip:`${As}:option.3.tooltip`,selected:[{text:`${As}:option.3.selected`}]},async()=>(ft(!0),!0)).build();function B0(E){const A=ce(Object.keys(_t).filter(a=>!isNaN(Number(a))).length),s=Kt(J.BERRY,[A]),R=n.getPlayerParty();if(E){const a=n.findModifier(i=>i instanceof CE&&i.pokemonId===E.id&&i.berryType===A,!0);if(!a||a.getStackCount()<a.getMaxStackCount()){CR(E,s);return}}for(const a of R){const i=n.findModifier(r=>r instanceof CE&&r.pokemonId===a.id&&r.berryType===A,!0);if(!i||i.getStackCount()<i.getMaxStackCount()){CR(a,s);return}}}N(B0,"tryGiveBerry");const xA="mysteryEncounters/clowningAround",kb=[O.STURDY,O.PICKUP,O.INTIMIDATE,O.GUTS,O.DROUGHT,O.DRIZZLE,O.SNOW_WARNING,O.SAND_STREAM,O.ELECTRIC_SURGE,O.PSYCHIC_SURGE,O.GRASSY_SURGE,O.MISTY_SURGE,O.MAGICIAN,O.SHEER_FORCE,O.PRANKSTER],rX=FA.withEncounterType(Je.CLOWNING_AROUND).withEncounterTier(wt.ULTRA).withDisallowedChallenges(it.SINGLE_TYPE).withSceneWaveRangeRequirement(80,ZA[1]).withAnimations(EO.SMOKESCREEN).withAutoHideIntroVisuals(!1).withIntroSpriteConfigs([{spriteKey:e.MR_MIME.toString(),fileRoot:"pokemon",hasShadow:!0,repeat:!0,x:-25,tint:.3,y:-3,yShadow:-3},{spriteKey:e.BLACEPHALON.toString(),fileRoot:"pokemon/exp",hasShadow:!0,repeat:!0,x:25,tint:.3,y:-3,yShadow:-3},{spriteKey:"harlequin",fileRoot:"trainer",hasShadow:!0,x:0,y:2,yShadow:2}]).withIntroDialogue([{text:`${xA}:intro`},{text:`${xA}:intro_dialogue`,speaker:`${xA}:speaker`}]).withOnInit(()=>{const E=n.currentBattle.mysteryEncounter,A=U.HARLEQUIN,s=QA[A].clone(),R=new bA(new ze(1,Ve.STRONG),new ze(1,Ve.STRONGER));s.setPartyTemplates(R),s.setDoubleOnly(),s.partyTemplateFunc=null;const a=kb[ce(kb.length)];return E.setDialogueToken("ability",new Re(a,3).name),E.misc={ability:a},E.enemyPartyConfigs.push({trainerConfig:s,pokemonConfigs:[{species:ke(e.MR_MIME),isBoss:!0,moveSet:[t.TEETER_DANCE,t.ALLY_SWITCH,t.DAZZLING_GLEAM,t.PSYCHIC]},{species:ke(e.BLACEPHALON),customPokemonData:new rs({ability:a,types:[ce(18),ce(18)]}),isBoss:!0,moveSet:[t.TRICK,t.HYPNOSIS,t.SHADOW_BALL,t.MIND_BLOWN]}],doubleBattle:!0}),bo([t.ROLE_PLAY,t.TAUNT]),E.setDialogueToken("blacephalonName",ke(e.BLACEPHALON).getName()),!0}).setLocalizationKey(`${xA}`).withTitle(`${xA}:title`).withDescription(`${xA}:description`).withQuery(`${xA}:query`).withOption(pt.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${xA}:option.1.label`,buttonTooltip:`${xA}:option.1.tooltip`,selected:[{text:`${xA}:option.1.selected`,speaker:`${xA}:speaker`}]}).withOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter,A=E.enemyPartyConfigs[0];Ft({fillRemaining:!0}),E.startOfBattleEffects.push({sourceBattlerIndex:gt.ENEMY,targets:[gt.ENEMY_2],move:new nt(t.ROLE_PLAY),ignorePp:!0},{sourceBattlerIndex:gt.ENEMY_2,targets:[gt.PLAYER],move:new nt(t.TAUNT),ignorePp:!0},{sourceBattlerIndex:gt.ENEMY_2,targets:[gt.PLAYER_2],move:new nt(t.TAUNT),ignorePp:!0}),await JA(),await $A(A)}).withPostOptionPhase(async()=>(await LX()&&await qt(`${xA}:option.1.ability_gained`),n.tweens.add({targets:n.currentBattle.trainer,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:250}),new Xn(EO.SMOKESCREEN,n.getPlayerPokemon(),n.getPlayerPokemon()).playWithoutTargets(230,40,2),!0)).build()).withOption(pt.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${xA}:option.2.label`,buttonTooltip:`${xA}:option.2.tooltip`,selected:[{text:`${xA}:option.2.selected`,speaker:`${xA}:speaker`},{text:`${xA}:option.2.selected_2`},{text:`${xA}:option.2.selected_3`,speaker:`${xA}:speaker`}]}).withPreOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter,A=n.getPlayerParty();let s=A[0],R=s.getHeldItems().filter(o=>o.isTransferable&&!(o instanceof CE)).reduce((o,l)=>o+l.stackCount,0);A.forEach(o=>{const l=o.getHeldItems().filter(C=>C.isTransferable&&!(C instanceof CE)).reduce((C,M)=>C+M.stackCount,0);l>R&&(s=o,R=l)}),E.setDialogueToken("switchPokemon",s.getNameToRender());const a=s.getHeldItems();let i=0;a.filter(o=>o instanceof CE).forEach(o=>{i+=o.stackCount,n.removeModifier(o)}),g0(s,i,"Berries");let r=0,L=0;a.filter(o=>o.isTransferable&&!(o instanceof CE)).forEach(o=>{const l=o.type.withTierFromPool(HE.PLAYER,A),C=l.tier??w.ULTRA;l.id==="GOLDEN_EGG"||C===w.ROGUE?(L+=o.stackCount,n.removeModifier(o)):(l.id==="LUCKY_EGG"||l.id==="SOOTHE_BELL"||C===w.ULTRA)&&(r+=o.stackCount,n.removeModifier(o))}),g0(s,r,w.ULTRA),g0(s,L,w.ROGUE)}).withOptionPhase(async()=>{ft(!0)}).withPostOptionPhase(async()=>{new Xn(EO.SMOKESCREEN,n.getPlayerPokemon(),n.getPlayerPokemon()).playWithoutTargets(230,40,2),await JA(!0,!0,200)}).build()).withOption(pt.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${xA}:option.3.label`,buttonTooltip:`${xA}:option.3.tooltip`,selected:[{text:`${xA}:option.3.selected`,speaker:`${xA}:speaker`},{text:`${xA}:option.3.selected_2`},{text:`${xA}:option.3.selected_3`,speaker:`${xA}:speaker`}]}).withPreOptionPhase(async()=>{for(const E of n.getPlayerParty()){const A=E.getTypes(!1,!1,!0);let s=E.moveset.filter(i=>i&&!A.includes(i.getMove().type)&&i.getMove().category!==Pt.STATUS).map(i=>i.getMove().type);(s==null?void 0:s.length)>0&&(s=[...new Set(s)].sort(),s=CO(s));const R=[A[0]];let a=null;for(;a===null||a===R[0]||A.includes(a);)s.length>0?a=s.pop()??null:a=ce(18);R.push(a),E.customPokemonData||(E.customPokemonData=new rs),E.customPokemonData.types=R,E.isFusion()&&(E.fusionCustomPokemonData||(E.fusionCustomPokemonData=new rs),E.fusionCustomPokemonData.types=R)}}).withOptionPhase(async()=>{ft(!0)}).withPostOptionPhase(async()=>{new Xn(EO.SMOKESCREEN,n.getPlayerPokemon(),n.getPlayerPokemon()).playWithoutTargets(230,40,2),await JA(!0,!0,200)}).build()).withOutroDialogue([{text:`${xA}:outro`}]).build();async function LX(){return new Promise(async E=>{await Un(`${xA}:option.1.apply_ability_dialogue`,`${xA}:speaker`),await qt(`${xA}:option.1.apply_ability_message`),n.ui.setMode(Ie.MESSAGE).then(()=>{C8(E)})})}N(LX,"handleSwapAbility");function C8(E){qt(`${xA}:option.1.ability_prompt`,null,500,!1);const s={options:[{label:u.t("menu:yes"),handler:N(()=>(NX(E),!0),"handler")},{label:u.t("menu:no"),handler:N(()=>(E(!1),!0),"handler")}],maxOptions:7,yOffset:0};n.ui.setModeWithoutClear(Ie.OPTION_SELECT,s,null,!0)}N(C8,"displayYesNoOptions");function NX(E){zE(N(R=>{const a=n.currentBattle.mysteryEncounter;T8(R,a.misc.ability),a.setDialogueToken("chosenPokemon",R.getNameToRender()),n.ui.setMode(Ie.MESSAGE).then(()=>E(!0))},"onPokemonSelected"),N(()=>{n.ui.setMode(Ie.MESSAGE).then(()=>{C8(E)})},"onPokemonNotSelected"))}N(NX,"onYesAbilitySwap");function g0(E,A,s){const R=[[J.REVIVER_SEED,1],[J.GOLDEN_PUNCH,5],[J.ATTACK_TYPE_BOOSTER,99],[J.QUICK_CLAW,3],[J.WIDE_LENS,3]],a=[[J.LEFTOVERS,4],[J.SHELL_BELL,4],[J.SOUL_DEW,10],[J.SCOPE_LENS,1],[J.BATON,1],[J.FOCUS_BAND,5],[J.KINGS_ROCK,3],[J.GRIP_CLAW,5]],i=[[_t.APICOT,3],[_t.ENIGMA,2],[_t.GANLON,3],[_t.LANSAT,3],[_t.LEPPA,2],[_t.LIECHI,3],[_t.LUM,2],[_t.PETAYA,3],[_t.SALAC,2],[_t.SITRUS,2],[_t.STARF,3]];let r;s==="Berries"?r=i:r=s===w.ULTRA?R:a;for(let L=0;L<A;L++){if(r.length===0)return;const o=ce(r.length),l=r[o];let C;s==="Berries"?C=Kt(J.BERRY,[l[0]]):C=Kt(l[0]),CR(E,C),l[1]--,l[1]<=0&&r.splice(o,1)}}N(g0,"generateItemsOfTier");const cA="mysteryEncounters/partTimer",TX=FA.withEncounterType(Je.PART_TIMER).withEncounterTier(wt.COMMON).withSceneWaveRangeRequirement(...ZA).withIntroSpriteConfigs([{spriteKey:"part_timer_crate",fileRoot:"mystery-encounters",hasShadow:!1,y:6,x:15},{spriteKey:"worker_f",fileRoot:"trainer",hasShadow:!0,x:-18,y:4}]).withAutoHideIntroVisuals(!1).withIntroDialogue([{text:`${cA}:intro`},{speaker:`${cA}:speaker`,text:`${cA}:intro_dialogue`}]).withOnInit(()=>(n.loadSe("PRSFX- Horn Drill1","battle_anims","PRSFX- Horn Drill1.wav"),n.loadSe("PRSFX- Horn Drill3","battle_anims","PRSFX- Horn Drill3.wav"),n.loadSe("PRSFX- Guillotine2","battle_anims","PRSFX- Guillotine2.wav"),n.loadSe("PRSFX- Heavy Slam2","battle_anims","PRSFX- Heavy Slam2.wav"),n.loadSe("PRSFX- Agility","battle_anims","PRSFX- Agility.wav"),n.loadSe("PRSFX- Extremespeed1","battle_anims","PRSFX- Extremespeed1.wav"),n.loadSe("PRSFX- Accelerock1","battle_anims","PRSFX- Accelerock1.wav"),n.loadSe("PRSFX- Captivate","battle_anims","PRSFX- Captivate.wav"),n.loadSe("PRSFX- Attract2","battle_anims","PRSFX- Attract2.wav"),n.loadSe("PRSFX- Aurora Veil2","battle_anims","PRSFX- Aurora Veil2.wav"),!0)).setLocalizationKey(`${cA}`).withTitle(`${cA}:title`).withDescription(`${cA}:description`).withQuery(`${cA}:query`).withOption(pt.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${cA}:option.1.label`,buttonTooltip:`${cA}:option.1.tooltip`,selected:[{text:`${cA}:option.1.selected`}]}).withPreOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter;return zE(N(R=>{E.setDialogueToken("selectedPokemon",R.getNameToRender());const a=Math.floor((2*90+16)*R.level*.01)+5,i=(R.getStat(K.SPD)-a)/a,r=Math.min(Math.max(2.5*(1+i),1),4);E.misc={moneyMultiplier:r},R.moveset.forEach(L=>{if(L){const o=L.getMovePp()-2;L.ppUsed=L.ppUsed<o?o:L.ppUsed}}),DR(R.id,100),JA(!0,!1),oX()},"onPokemonSelected"),void 0,N(R=>Xa(R,`${cA}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async()=>{await JA(!1,!1);const E=n.currentBattle.mysteryEncounter.misc.moneyMultiplier;E>2.5?await Un(`${cA}:job_complete_good`,`${cA}:speaker`):await Un(`${cA}:job_complete_bad`,`${cA}:speaker`);const A=n.getWaveMoneyAmount(E);RO(A,!0,!1),await qt(u.t("mysteryEncounterMessages:receive_money",{amount:A})),await qt(`${cA}:pokemon_tired`),Ft({fillRemaining:!0}),ft()}).build()).withOption(pt.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${cA}:option.2.label`,buttonTooltip:`${cA}:option.2.tooltip`,selected:[{text:`${cA}:option.2.selected`}]}).withPreOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter;return zE(N(R=>{E.setDialogueToken("selectedPokemon",R.getNameToRender());const a=Math.floor((2*75+16)*R.level*.01)+R.level+10,i=Math.floor((2*75+16)*R.level*.01)+5,r=a+1.5*(i*2),o=(R.getStat(K.HP)+1.5*(R.getStat(K.ATK)+R.getStat(K.DEF))-r)/r,l=Math.min(Math.max(2.5*(1+o),1),4);E.misc={moneyMultiplier:l},R.moveset.forEach(C=>{if(C){const M=C.getMovePp()-2;C.ppUsed=C.ppUsed<M?M:C.ppUsed}}),DR(R.id,100),JA(!0,!1),SX()},"onPokemonSelected"),void 0,N(R=>Xa(R,`${cA}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async()=>{await JA(!1,!1);const E=n.currentBattle.mysteryEncounter.misc.moneyMultiplier;E>2.5?await Un(`${cA}:job_complete_good`,`${cA}:speaker`):await Un(`${cA}:job_complete_bad`,`${cA}:speaker`);const A=n.getWaveMoneyAmount(E);RO(A,!0,!1),await qt(u.t("mysteryEncounterMessages:receive_money",{amount:A})),await qt(`${cA}:pokemon_tired`),Ft({fillRemaining:!0}),ft()}).build()).withOption(pt.newOptionWithMode(ct.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(new kI(o8,!0)).withDialogue({buttonLabel:`${cA}:option.3.label`,buttonTooltip:`${cA}:option.3.tooltip`,disabledButtonTooltip:`${cA}:option.3.disabled_tooltip`,selected:[{text:`${cA}:option.3.selected`}]}).withPreOptionPhase(async()=>{var s;const E=n.currentBattle.mysteryEncounter,A=(s=E.selectedOption)==null?void 0:s.primaryPokemon;return E.setDialogueToken("selectedPokemon",A.getNameToRender()),A.moveset.forEach(R=>{if(R){const a=R.getMovePp()-2;R.ppUsed=R.ppUsed<a?a:R.ppUsed}}),DR(A.id,100),JA(!0,!1),lX(),!0}).withOptionPhase(async()=>{await JA(!1,!1),await Un(`${cA}:job_complete_good`,`${cA}:speaker`);const E=n.getWaveMoneyAmount(2.5);RO(E,!0,!1),await qt(u.t("mysteryEncounterMessages:receive_money",{amount:E})),await qt(`${cA}:pokemon_tired`),Ft({fillRemaining:!0}),ft()}).build()).withOutroDialogue([{speaker:`${cA}:speaker`,text:`${cA}:outro`}]).build();function SX(){n.playSound("battle_anims/PRSFX- Horn Drill1"),n.playSound("battle_anims/PRSFX- Horn Drill1"),n.time.delayedCall(1e3,()=>{n.playSound("battle_anims/PRSFX- Guillotine2")}),n.time.delayedCall(2e3,()=>{n.playSound("battle_anims/PRSFX- Heavy Slam2")}),n.time.delayedCall(2500,()=>{n.playSound("battle_anims/PRSFX- Guillotine2")})}N(SX,"doStrongWorkSfx");function oX(){n.playSound("battle_anims/PRSFX- Accelerock1"),n.time.delayedCall(1500,()=>{n.playSound("battle_anims/PRSFX- Extremespeed1")}),n.time.delayedCall(2e3,()=>{n.playSound("battle_anims/PRSFX- Extremespeed1")}),n.time.delayedCall(2250,()=>{n.playSound("battle_anims/PRSFX- Agility")})}N(oX,"doDeliverySfx");function lX(){n.playSound("battle_anims/PRSFX- Captivate"),n.time.delayedCall(1500,()=>{n.playSound("battle_anims/PRSFX- Attract2")}),n.time.delayedCall(2e3,()=>{n.playSound("battle_anims/PRSFX- Aurora Veil2")}),n.time.delayedCall(3e3,()=>{n.playSound("battle_anims/PRSFX- Attract2")})}N(lX,"doSalesSfx");const kK=class kK extends vs{constructor(){super(Ie.EVOLUTION_SCENE)}setup(){this.canCancel=!1,this.cancelled=!1;const A=this.getUi();this.evolutionContainer=n.add.container(0,-n.game.canvas.height/6),A.add(this.evolutionContainer);const s=n.add.sprite(0,0,"bg",n.windowType);s.setOrigin(0,1),s.setVisible(!1),A.add(s),this.messageBg=s,this.messageContainer=n.add.container(12,-39),this.messageContainer.setVisible(!1),A.add(this.messageContainer);const R=le(0,0,"",Q.MESSAGE,{maxLines:2,wordWrap:{width:1780}});this.messageContainer.add(R),this.message=R,this.initPromptSprite(this.messageContainer)}show(A){return super.show(A),n.ui.bringToTop(this.evolutionContainer),n.ui.bringToTop(this.messageBg),n.ui.bringToTop(this.messageContainer),this.messageBg.setVisible(!0),this.messageContainer.setVisible(!0),!0}processInput(A){if(this.canCancel&&!this.cancelled&&A===k.CANCEL)return this.cancelled=!0,!0;const s=this.getUi();if(this.awaitingActionInput&&(A===k.CANCEL||A===k.ACTION)&&this.onActionInput){s.playSelect();const R=this.onActionInput;return this.onActionInput=null,R(),!0}return!1}setCursor(A){return!1}clear(){this.clearText(),this.canCancel=!1,this.cancelled=!1,this.evolutionContainer.removeAll(!0),this.messageContainer.setVisible(!1),this.messageBg.setVisible(!1)}};N(kK,"EvolutionSceneHandler");let mC=kK;const ZK=class ZK extends CC{constructor(A){super(A,!0)}getPlayerPokemon(){return super.getPokemon()}};N(ZK,"PlayerPartyMemberPokemonPhase");let pr=ZK;var x1=(E=>(E[E.LEARN_MOVE=0]="LEARN_MOVE",E[E.MEMORY=1]="MEMORY",E[E.TM=2]="TM",E))(x1||{});const XK=class XK extends pr{constructor(A,s,R=0,a=-1){super(A),this.moveId=s,this.learnMoveType=R,this.cost=a}start(){super.start();const A=this.getPokemon(),s=we[this.moveId],R=A.getMoveset();if(R.some(i=>(i==null?void 0:i.moveId)===s.id)&&this.moveId!==t.SKETCH)return this.end();this.messageMode=n.ui.getHandler()instanceof mC?Ie.EVOLUTION_SCENE:Ie.MESSAGE,n.ui.setMode(this.messageMode),R.length<4?this.learnMove(R.length,s,A):this.replaceMoveCheck(s,A)}async replaceMoveCheck(A,s){const R=u.t("battle:learnMovePrompt",{pokemonName:te(s),moveName:A.name}),a=u.t("battle:learnMoveLimitReached",{pokemonName:te(s)}),i=u.t("battle:learnMoveReplaceQuestion",{moveName:A.name}),r=[R,a].join("$");await n.ui.showTextPromise(r),await n.ui.showTextPromise(i,void 0,!1),await n.ui.setModeWithoutClear(Ie.CONFIRM,()=>this.forgetMoveProcess(A,s),()=>{n.ui.setMode(this.messageMode),this.rejectMoveAndEnd(A,s)})}async forgetMoveProcess(A,s){n.ui.setMode(this.messageMode),await n.ui.showTextPromise(u.t("battle:learnMoveForgetQuestion"),void 0,!0),await n.ui.setModeWithoutClear(Ie.SUMMARY,s,mM.LEARN_MOVE,A,R=>{if(R===4){n.ui.setMode(this.messageMode).then(()=>this.rejectMoveAndEnd(A,s));return}const a=u.t("battle:learnMoveForgetSuccess",{pokemonName:te(s),moveName:s.moveset[R].getName()}),i=[u.t("battle:countdownPoof"),a,u.t("battle:learnMoveAnd")].join("$");n.ui.setMode(this.messageMode).then(()=>this.learnMove(R,A,s,i))})}async rejectMoveAndEnd(A,s){await n.ui.showTextPromise(u.t("battle:learnMoveStopTeaching",{moveName:A.name}),void 0,!1),n.ui.setModeWithoutClear(Ie.CONFIRM,()=>{n.ui.setMode(this.messageMode),n.ui.showTextPromise(u.t("battle:learnMoveNotLearned",{pokemonName:te(s),moveName:A.name}),void 0,!0).then(()=>this.end())},()=>{n.ui.setMode(this.messageMode),this.replaceMoveCheck(A,s)})}async learnMove(A,s,R,a){this.learnMoveType===2?(R.usedTMs||(R.usedTMs=[]),R.usedTMs.push(this.moveId),n.tryRemovePhase(r=>r instanceof _O)):this.learnMoveType===1&&(this.cost!==-1?(Ye.WAIVE_ROLL_FEE_OVERRIDE||(n.money-=this.cost,n.updateMoneyText(),n.animateMoneyChanged(!1)),n.playSound("se/buy")):n.tryRemovePhase(r=>r instanceof _O)),R.setMove(A,this.moveId),lL(this.moveId).then(()=>{CL([this.moveId],!0)}),n.ui.setMode(this.messageMode);const i=u.t("battle:learnMove",{pokemonName:te(R),moveName:s.name});a&&await n.ui.showTextPromise(a),n.playSound("level_up_fanfare"),n.ui.showText(i,null,()=>{n.triggerPokemonFormChange(R,qa,!0),this.end()},this.messageMode===Ie.EVOLUTION_SCENE?1e3:void 0,!0)}};N(XK,"LearnMovePhase");let eI=XK;const Ss="mysteryEncounters/dancingLessons",CX=[T.VOLCANO,T.BEACH,T.ISLAND,T.WASTELAND,T.MOUNTAIN,T.BADLANDS,T.DESERT],UX=[T.CONSTRUCTION_SITE,T.POWER_PLANT,T.FACTORY,T.LABORATORY,T.SLUM,T.METROPOLIS,T.DOJO],uX=[T.JUNGLE,T.FAIRY_CAVE,T.MEADOW,T.PLAINS,T.GRASS,T.TALL_GRASS,T.FOREST],DX=[T.RUINS,T.SWAMP,T.CAVE,T.ABYSS,T.GRAVEYARD,T.LAKE,T.TEMPLE],MX=FA.withEncounterType(Je.DANCING_LESSONS).withEncounterTier(wt.GREAT).withSceneWaveRangeRequirement(...ZA).withIntroSpriteConfigs([]).withAnimations(EO.DANCE).withHideWildIntroMessage(!0).withAutoHideIntroVisuals(!1).withCatchAllowed(!0).withFleeAllowed(!1).withOnVisualsStart(()=>{const E=n.getEnemyPokemon();return new Xn(EO.DANCE,E,n.getPlayerPokemon()).play(!1,()=>{E.shiny&&E.sparkle()}),!0}).withIntroDialogue([{text:`${Ss}:intro`}]).setLocalizationKey(`${Ss}`).withTitle(`${Ss}:title`).withDescription(`${Ss}:description`).withQuery(`${Ss}:query`).withOnInit(()=>{const E=n.currentBattle.mysteryEncounter,A=ke(e.ORICORIO),s=Zo(ko),R=new xs(A,s,lt.NONE,!1);R.moveset.some(o=>o&&o.getMove().id===t.REVELATION_DANCE)||(R.moveset.length<4?R.moveset.push(new nt(t.REVELATION_DANCE)):R.moveset[0]=new nt(t.REVELATION_DANCE));const a=n.arena.biomeType;CX.includes(a)?R.formIndex=0:UX.includes(a)?R.formIndex=1:uX.includes(a)?R.formIndex=2:DX.includes(a)?R.formIndex=3:R.formIndex=0;const i=new hs(R),r=n.addEnemyPokemon(A,s,lt.NONE,!1,!1,i);n.getEnemyParty().forEach(o=>{n.field.remove(o,!0)}),n.currentBattle.enemyParty=[r],n.field.add(r),r.x-=300,E.loadAssets.push(r.loadAssets());const L={pokemonConfigs:[{species:A,dataSource:i,isBoss:!0,tags:[y.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:N(o=>{RE(`${Ss}:option.1.boss_enraged`),n.unshiftPhase(new zt(o.getBattlerIndex(),!0,[K.ATK,K.DEF,K.SPATK,K.SPDEF],1))},"mysteryEncounterBattleEffects")}]};return E.enemyPartyConfigs=[L],E.misc={oricorioData:i},E.setDialogueToken("oricorioName",ke(e.ORICORIO).getName()),!0}).withOption(pt.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${Ss}:option.1.label`,buttonTooltip:`${Ss}:option.1.tooltip`,selected:[{text:`${Ss}:option.1.selected`}]}).withOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter;E.startOfBattleEffects.push({sourceBattlerIndex:gt.ENEMY,targets:[gt.PLAYER],move:new nt(t.REVELATION_DANCE),ignorePp:!0}),await K0(),Ft({guaranteedModifierTypeFuncs:[J.BATON],fillRemaining:!0}),await $A(E.enemyPartyConfigs[0])}).build()).withOption(pt.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${Ss}:option.2.label`,buttonTooltip:`${Ss}:option.2.tooltip`,selected:[{text:`${Ss}:option.2.selected`}]}).withPreOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter;return zE(N(s=>{E.setDialogueToken("selectedPokemon",s.getNameToRender()),n.unshiftPhase(new eI(n.getPlayerParty().indexOf(s),t.REVELATION_DANCE)),new Xn(EO.DANCE,n.getEnemyPokemon(),n.getPlayerPokemon()).play()},"onPokemonSelected"))}).withOptionPhase(async()=>{await K0(),ft(!0)}).build()).withOption(pt.newOptionWithMode(ct.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(new kI(Gb,!0)).withDialogue({buttonLabel:`${Ss}:option.3.label`,buttonTooltip:`${Ss}:option.3.tooltip`,disabledButtonTooltip:`${Ss}:option.3.disabled_tooltip`,secondOptionPrompt:`${Ss}:option.3.select_prompt`,selected:[{text:`${Ss}:option.3.selected`}]}).withPreOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter;return zE(N(R=>R.moveset.filter(a=>a&&Gb.includes(a.getMove().id)).map(a=>({label:a.getName(),handler:N(()=>(E.setDialogueToken("selectedPokemon",R.getNameToRender()),E.setDialogueToken("selectedMove",a.getName()),E.misc.selectedMove=a,!0),"handler")})),"onPokemonSelected"),void 0,N(R=>R.isAllowedInBattle()?E.options[2].pokemonMeetsPrimaryRequirements(R)?null:mA(`${Ss}:invalid_selection`)??null:u.t("partyUiHandler:cantBeUsed",{pokemonName:R.getNameToRender()})??null,"selectableFilter"))}).withOptionPhase(async()=>{var R;const E=n.currentBattle.mysteryEncounter,A=E.misc.oricorioData.toPokemon();A.passive=!0;const s=(R=E.misc.selectedMove)==null?void 0:R.getMove().id;A.moveset.some(a=>a.getMove().id===s)||(A.moveset.length<4?A.moveset.push(new nt(s)):A.moveset[3]=new nt(s)),await K0(),await Kr(A,null,be.POKEBALL,!1),ft(!0)}).build()).build();function K0(){return new Promise(E=>{const A=n.getEnemyParty()[0];n.tweens.add({targets:A,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:750,onComplete:N(()=>{n.field.remove(A,!0),E()},"onComplete")})})}N(K0,"hideOricorioPokemon");var U8=(E=>(E[E.CENTER=0]="CENTER",E[E.LEFT=1]="LEFT",E[E.RIGHT=2]="RIGHT",E))(U8||{});function KP(E,A,s){return new Promise(R=>{const a=n.fieldUI.getByName("Dream Background"),i=n.add.image(0,0,"default_bg");i.setOrigin(0,0),i.setVisible(!1),a.add(i);let r,L,o,l;const C=s===0?0:s===2?100:-100,M=s!==0?-15:0,D=N(()=>{const _=n.addPokemonSprite(E,i.displayWidth/2+C,i.displayHeight/2+M,"pkmn__sub");return _.setPipeline(n.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),_},"getPokemonSprite");a.add(r=D()),a.add(L=D()),a.add(o=D()),a.add(l=D()),r.setAlpha(0),L.setAlpha(0),L.setTintFill(16777215),o.setVisible(!1),l.setVisible(!1),l.setTintFill(16777215),[r,L,o,l].map(_=>{const P=E.getSpriteKey(!0);try{_.play(P)}catch(h){console.error(`Failed to play animation for ${P}`,h)}_.setPipeline(n.spritePipeline,{tone:[0,0,0,0],hasShadow:!1,teraColor:yR(E.getTeraType())}),_.setPipelineData("ignoreTimeTint",!0),_.setPipelineData("spriteKey",E.getSpriteKey()),_.setPipelineData("shiny",E.shiny),_.setPipelineData("variant",E.variant),["spriteColors","fusionSpriteColors"].map(h=>{var H;(H=E.summonData)!=null&&H.speciesForm&&(h+="Base"),_.pipelineData[h]=E.getSprite().pipelineData[h]})}),[o,l].map(_=>{const P=A.getSpriteKey(!0);try{_.play(P)}catch(h){console.error(`Failed to play animation for ${P}`,h)}_.setPipelineData("ignoreTimeTint",!0),_.setPipelineData("spriteKey",A.getSpriteKey()),_.setPipelineData("shiny",A.shiny),_.setPipelineData("variant",A.variant),["spriteColors","fusionSpriteColors"].map(h=>{var H;(H=A.summonData)!=null&&H.speciesForm&&(h+="Base"),_.pipelineData[h]=A.getSprite().pipelineData[h]})}),n.tweens.add({targets:r,alpha:1,ease:"Cubic.easeInOut",duration:2e3,onComplete:N(()=>{_X(i,a,C,M),n.tweens.addCounter({from:0,to:1,duration:1e3,onUpdate:N(_=>{L.setAlpha(_.getValue())},"onUpdate"),onComplete:N(()=>{r.setVisible(!1),n.time.delayedCall(700,()=>{PX(i,a,C,M),n.time.delayedCall(1e3,()=>{l.setScale(.25),l.setVisible(!0),u8(1.5,6,L,l).then(()=>{o.setVisible(!0),GX(i,a,C,M),n.time.delayedCall(900,()=>{n.tweens.add({targets:l,alpha:0,duration:1500,delay:150,easing:"Sine.easeIn",onComplete:N(()=>{n.time.delayedCall(3e3,()=>{R(),n.tweens.add({targets:o,alpha:0,duration:2e3,delay:150,easing:"Sine.easeIn",onComplete:N(()=>{E.destroy(),A.setVisible(!1),A.setAlpha(1)},"onComplete")})})},"onComplete")})})})})})},"onComplete")})},"onComplete")})})}N(KP,"doPokemonTransformationSequence");function _X(E,A,s,R){let a=0;n.tweens.addCounter({repeat:64,duration:TE(1),onRepeat:N(()=>{if(a<64){if(!(a&7))for(let i=0;i<4;i++)cX((a&120)*2+i*64,E,A,s,R);a++}},"onRepeat")})}N(_X,"doSpiralUpward");function PX(E,A,s,R){let a=0;n.tweens.addCounter({repeat:96,duration:TE(1),onRepeat:N(()=>{if(a<96){if(a<6)for(let i=0;i<9;i++)hX(i*16,E,A,s,R);a++}},"onRepeat")})}N(PX,"doArcDownward");function u8(E,A,s,R){return new Promise(a=>{const i=E===A;n.tweens.add({targets:s,scale:.25,ease:"Cubic.easeInOut",duration:500/E,yoyo:!i}),n.tweens.add({targets:R,scale:1,ease:"Cubic.easeInOut",duration:500/E,yoyo:!i,onComplete:N(()=>{E<A?u8(E+.5,A,s,R).then(r=>a(r)):(s.setVisible(!1),a(!0))},"onComplete")})})}N(u8,"doCycle");function GX(E,A,s,R){let a=0;n.tweens.addCounter({repeat:48,duration:TE(1),onRepeat:N(()=>{if(a){if(a===32)for(let i=0;i<16;i++)Zb(i*16,8,E,A,s,R)}else for(let i=0;i<16;i++)Zb(i*16,4,E,A,s,R);a++},"onRepeat")})}N(GX,"doCircleInward");function cX(E,A,s,R,a){const i=A.displayWidth/2+R,r=n.add.image(i,0,"evo_sparkle");s.add(r);let L=0,o=48;const l=n.tweens.addCounter({repeat:-1,duration:TE(1),onRepeat:N(()=>{C()},"onRepeat")}),C=N(()=>{!L||r.y>8?(r.setPosition(i,88-L*L/80+a),r.y+=Cn(E,o)/4,r.x+=Za(E,o),r.setScale(1-L/80),E+=4,L&1&&o--,L++):(r.destroy(),l.remove())},"updateParticle");C()}N(cX,"doSpiralUpwardParticle");function hX(E,A,s,R,a){const i=A.displayWidth/2+R,r=n.add.image(i,0,"evo_sparkle");r.setScale(.5),s.add(r);let L=0,o=8;const l=n.tweens.addCounter({repeat:-1,duration:TE(1),onRepeat:N(()=>{C()},"onRepeat")}),C=N(()=>{!L||r.y<88?(r.setPosition(i,8+L*L/5+a),r.y+=Cn(E,o)/4,r.x+=Za(E,o),o=8+Cn(L*4,40),L++):(r.destroy(),l.remove())},"updateParticle");C()}N(hX,"doArcDownParticle");function Zb(E,A,s,R,a,i){const r=s.displayWidth/2+a,L=s.displayHeight/2+i,o=n.add.image(r,L,"evo_sparkle");R.add(o);let l=120;const C=n.tweens.addCounter({repeat:-1,duration:TE(1),onRepeat:N(()=>{M()},"onRepeat")}),M=N(()=>{l>8?(o.setPosition(r,L),o.y+=Cn(E,l),o.x+=Za(E,l),l-=A,E+=4):(o.destroy(),C.remove())},"updateParticle");M()}N(Zb,"doCircleInwardParticle");const Es="mysteryEncounters/weirdDream",HX=[e.ETERNATUS,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.ROARING_MOON,e.WALKING_WAKE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.IRON_VALIANT,e.IRON_LEAVES,e.IRON_BOULDER,e.IRON_CROWN,e.COSMOG,e.MELTAN,e.KUBFU,e.COSMOEM,e.POIPOLE,e.TERAPAGOS,e.TYPE_NULL,e.CALYREX,e.NAGANADEL,e.URSHIFU,e.OGERPON,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI],FC=600,Xo=570,D8=20,dX=10,fX=[90,110],BX=[40,50],gX=FA.withEncounterType(Je.WEIRD_DREAM).withEncounterTier(wt.ROGUE).withDisallowedChallenges(it.SINGLE_TYPE,it.SINGLE_GENERATION).withSceneWaveRangeRequirement(30,140).withIntroSpriteConfigs([{spriteKey:"weird_dream_woman",fileRoot:"mystery-encounters",hasShadow:!0,y:11,yShadow:6,x:4}]).withIntroDialogue([{text:`${Es}:intro`},{speaker:`${Es}:speaker`,text:`${Es}:intro_dialogue`}]).setLocalizationKey(`${Es}`).withTitle(`${Es}:title`).withDescription(`${Es}:description`).withQuery(`${Es}:query`).withOnInit(()=>{n.loadBgm("mystery_encounter_weird_dream","mystery_encounter_weird_dream.mp3");const E=KX(),A=E.map(s=>s.newPokemon.loadAssets());return n.currentBattle.mysteryEncounter.misc={teamTransformations:E,loadAssets:A},!0}).withOnVisualsStart(()=>(n.fadeAndSwitchBgm("mystery_encounter_weird_dream"),!0)).withOption(pt.newOptionWithMode(ct.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${Es}:option.1.label`,buttonTooltip:`${Es}:option.1.tooltip`,selected:[{text:`${Es}:option.1.selected`}]}).withPreOptionPhase(async()=>{n.time.delayedCall(1e3,()=>{pX()});for(const E of n.currentBattle.mysteryEncounter.misc.teamTransformations)n.removePokemonFromPlayerParty(E.previousPokemon,!1),n.getPlayerParty().push(E.newPokemon)}).withOptionPhase(async()=>{const E=qt(`${Es}:option.1.cutscene`);await Promise.all(n.currentBattle.mysteryEncounter.misc.loadAssets);const A=n.currentBattle.mysteryEncounter.misc.teamTransformations;if(A.length<=3)for(const s of A){const R=s.previousPokemon,a=s.newPokemon;await KP(R,a,U8.CENTER)}else await YX(A);await E,WX(),await qt(`${Es}:option.1.dream_complete`),await mX(A),Ft({guaranteedModifierTypeFuncs:[J.MEMORY_MUSHROOM,J.ROGUE_BALL,J.MINT,J.MINT,J.MINT],fillRemaining:!1}),ft(!0)}).build()).withSimpleOption({buttonLabel:`${Es}:option.2.label`,buttonTooltip:`${Es}:option.2.tooltip`,selected:[{text:`${Es}:option.2.selected`}]},async()=>{const E=n.currentBattle.mysteryEncounter.misc.teamTransformations,A=[];for(const r of E){const L=r.newPokemon,o=r.previousPokemon;await M8(o,L,L.species.getRootSpeciesId(),!0);const l=new hs(L);l.player=!1;const C=[];for(const D of r.heldItems)C.push({modifier:D.clone(),stackCount:D.getStackCount(),isTransferable:!1});if(_8(L)){const D=P8(L);C.push({modifier:Kt(J.MYSTERY_ENCOUNTER_OLD_GATEAU,[D8,D]),stackCount:1,isTransferable:!1})}const M={species:r.newSpecies,isBoss:L.getSpeciesForm().getBaseStatTotal()>Xo,level:o.level,dataSource:l,modifierConfigs:C};A.push(M)}const s=n.gameData.gender??Vt.UNSET,R=QA[s===Vt.FEMALE?U.FUTURE_SELF_F:U.FUTURE_SELF_M].clone();R.setPartyTemplates(new ze(E.length,Ve.STRONG));const a={trainerConfig:R,pokemonConfigs:A,female:s===Vt.FEMALE},i=N(()=>{const r=n.getPlayerParty().filter(L=>!L.passive);if((r==null?void 0:r.length)>0){const L=r[ce(r.length)];L.passive=!0,L.updateInfo(!0)}},"onBeforeRewards");Ft({guaranteedModifierTiers:[w.ROGUE,w.ROGUE,w.ULTRA,w.ULTRA,w.GREAT,w.GREAT],fillRemaining:!1},void 0,i),await qt(`${Es}:option.2.selected_2`,null,void 0,!0),await $A(a)}).withSimpleOption({buttonLabel:`${Es}:option.3.label`,buttonTooltip:`${Es}:option.3.tooltip`,selected:[{text:`${Es}:option.3.selected`}]},async()=>{for(const E of n.getPlayerParty())E.level=Math.max(Math.ceil((100-dX)/100*E.level),1),E.exp=jR(E.level,E.species.growthRate),E.levelExp=0,E.calculateStats(),E.getBattleInfo().setLevel(E.level),await E.updateInfo();return ft(!0),!0}).build();function KX(){const E=n.getPlayerParty(),A=E.map(L=>L.species),s=E.map(L=>({previousPokemon:L}));let R=!1,a=!1;const i=E.length,r=CO(E.slice(0));for(let L=0;L<i;L++){const o=r[L],l=s.findIndex(P=>P.previousPokemon.id===o.id);s[l].heldItems=o.getHeldItems().filter(P=>!(P instanceof UR));const C=o.calculateBaseStats().reduce((P,h)=>P+h,0);let M;L<2?M=fX:M=BX;const D=FX(C,M,R,a,A),_=D.getBaseStatTotal();_>FC&&(R=!0),_<=FC&&_>=Xo&&(a=!0),s[l].newSpecies=D,console.log("New species: "+JSON.stringify(D)),A.push(D)}for(const L of s){const o=ce(L.newSpecies.getAbilityCount());L.newPokemon=n.addPlayerPokemon(L.newSpecies,L.previousPokemon.level,o,void 0)}return s}N(KX,"getTeamTransformations");async function mX(E){var R;let A=!1;for(const a of E){const i=a.previousPokemon,r=a.newPokemon,L=r.species.getRootSpeciesId();await M8(i,r,L)&&(A=!0);for(const o of a.heldItems)o.pokemonId=r.id,await n.addModifier(o,!1,!1,!1,!0);if(_8(r)){const o=P8(r),l=(R=J.MYSTERY_ENCOUNTER_OLD_GATEAU().generateType(n.getPlayerParty(),[D8,o]))==null?void 0:R.withIdFromFunc(J.MYSTERY_ENCOUNTER_OLD_GATEAU),C=l==null?void 0:l.newModifier(r);C&&await n.addModifier(C,!1,!1,!1,!0)}r.calculateStats(),await r.updateInfo()}const s=n.getPlayerParty().filter(a=>!a.passive);if((s==null?void 0:s.length)>0){const a=s[ce(s.length)];a.passive=!0,await a.updateInfo(!0)}A&&n.playSound("level_up_fanfare")}N(mX,"doNewTeamPostProcess");async function M8(E,A,s,R=!1){let a=!1;if(A.species.abilityHidden){const l=A.species.ability2?2:1;if(A.abilityIndex<l){const C=new _s(256);n.applyModifiers(Gn,!0,C),!ce(C.value)&&(A.abilityIndex=l)}}A.ivs=A.ivs.map(l=>{const C=ce(31);return C>l?C:l}),A.nature=[At.HARDY,At.DOCILE,At.BASHFUL,At.QUIRKY,At.SERIOUS][ce(5)],!R&&(A.getSpeciesForm().getBaseStatTotal()<=Xo||A.isShiny())&&(A.getSpeciesForm().abilityHidden&&A.abilityIndex===A.getSpeciesForm().getAbilityCount()-1&&n.validateAchv(Ct.HIDDEN_ABILITY),A.species.subLegendary&&n.validateAchv(Ct.CATCH_SUB_LEGENDARY),A.species.legendary&&n.validateAchv(Ct.CATCH_LEGENDARY),A.species.mythical&&n.validateAchv(Ct.CATCH_MYTHICAL),n.gameData.updateSpeciesDexIvs(A.species.getRootSpeciesId(!0),A.ivs),await n.gameData.setPokemonCaught(A,!0,!1,!1)&&(a=!0,await qt(u.t("battle:addedAsAStarter",{pokemonName:ke(s).getName()})))),A.pokerus=E.pokerus,A.luck=E.getLuck(),A.ivs=A.ivs.map((l,C)=>E.ivs[C]>l?E.ivs[C]:l),!R&&n.gameData.dexData[s].caughtAttr&&n.gameData.addStarterCandy(ke(s),1),A.generateAndPopulateMoveset();const i=A.moveset;A.moveset=E.moveset.slice(0);const r=await yX(A,s,R);wX(A,i,r);const L=[A.getTypes()[0]];let o=ce(18);for(;o===L[0];)o=ce(18);return L.push(o),A.customPokemonData||(A.customPokemonData=new rs),A.customPokemonData.types=L,A.passive=E.passive,a}N(M8,"postProcessTransformedPokemon");function _8(E){return E.getSpeciesForm().getBaseStatTotal()<Xo}N(_8,"shouldGetOldGateau");function P8(E){const A=[],s=E.getSpeciesForm().baseStats.slice(0);return A.push(s[K.HP]<s[K.SPD]?K.HP:K.SPD),A.push(s[K.ATK]<s[K.SPATK]?K.ATK:K.SPATK),A.push(s[K.DEF]<s[K.SPDEF]?K.DEF:K.SPDEF),A}N(P8,"getOldGateauBoostedStats");function FX(E,A,s,R,a){let i;for(;ve(i);){const r=E+A[1],L=Math.max(E+A[0],0);let o=wR.filter(l=>{const C=l.getBaseStatTotal(),M=C>=L&&C<=r,D=(!R||C<Xo||C>FC)&&(!s||C<=FC);return M&&D&&!HX.includes(l.speciesId)});if((o==null?void 0:o.length)>20)for(o=CO(o),i=o.pop();ve(i)||a.includes(i);)i=o.pop();else A[0]-=10,A[1]+=10}return i}N(FX,"getTransformedSpecies");function pX(){const E=n.add.container(0,-n.game.canvas.height/6);E.name="Dream Background";const A=n.add.rectangle(0,0,n.game.canvas.width/6,n.game.canvas.height/6,0);A.setName("Black Background"),A.setOrigin(0,0),E.add(A),A.setVisible(!0);const s=n.add.video(0,0,"evo_bg").stop();s.setLoop(!0),s.setOrigin(0,0),s.setScale(.4359673025),E.add(s),n.fieldUI.add(E),n.fieldUI.bringToTop(E),s.play(),E.setVisible(!0),E.alpha=0,n.tweens.add({targets:E,alpha:1,duration:3e3,ease:"Sine.easeInOut"})}N(pX,"doShowDreamBackground");function WX(){const E=n.fieldUI.getByName("Dream Background");n.tweens.add({targets:E,alpha:0,duration:3e3,ease:"Sine.easeInOut",onComplete:N(()=>{n.fieldUI.remove(E,!0)},"onComplete")})}N(WX,"doHideDreamBackground");function YX(E){return new Promise(A=>{const s=[];for(let i=0;i<3;i++){const r=i*4e3;n.time.delayedCall(r,()=>{const L=E[i],o=L.previousPokemon,l=L.newPokemon,C=i,M=KP(o,l,C).then(()=>{if(E.length>i+3){const D=E[i+3],_=D.previousPokemon,P=D.newPokemon;s.push(KP(_,P,C))}});s.push(M)})}const R=setInterval(a,500);async function a(){s.length===E.length&&(clearInterval(R),await Promise.all(s),A())}N(a,"checkAllPromisesExist")})}N(YX,"doSideBySideTransformations");async function yX(E,A,s=!1){var i;let R=null;const a=(i=E.getEggMoves())==null?void 0:i.slice(0);if(a){const r=CO([0,1,2,3]);let L=r.pop(),o=ve(L)?null:a[L],l=0;for(;l<3&&(!o||E.moveset.some(C=>(C==null?void 0:C.moveId)===o));)L=r.pop(),o=ve(L)?null:a[L],l++;o&&(E.moveset.some(C=>(C==null?void 0:C.moveId)===o)||(E.moveset.length<4?E.moveset.push(new nt(o)):(R=ce(4),E.moveset[R]=new nt(o))),!s&&!ve(L)&&n.gameData.dexData[A].caughtAttr&&await n.gameData.setEggMoveUnlocked(ke(A),L,!0))}return R}N(yX,"addEggMoveToNewPokemonMoveset");function wX(E,A,s){let R=null;for(const a of A)if((a==null?void 0:a.getMove().type)===E.getTypes()[0]&&!E.moveset.some(i=>(i==null?void 0:i.moveId)===(a==null?void 0:a.moveId))){R=a;break}if(!R){for(const a of A)if(!E.moveset.some(i=>(i==null?void 0:i.moveId)===(a==null?void 0:a.moveId))){R=a;break}}if(R)if(E.moveset.length<4)E.moveset.push(R);else{let a=ce(4);for(;s!==null&&a===s;)a=ce(4);E.moveset[a]=R}}N(wX,"addFavoredMoveToNewPokemonMoveset");const QK=class QK extends dE{constructor(){super()}start(){super.start(),n.trainer.setVisible(!0),n.trainer.setTexture(`trainer_${n.gameData.gender===Vt.FEMALE?"f":"m"}_back`),n.tweens.add({targets:n.trainer,x:106,duration:1e3,onComplete:N(()=>this.end(),"onComplete")})}};N(QK,"ShowTrainerPhase");let pC=QK;const ns="mysteryEncounters/theWinstrateChallenge",vX=FA.withEncounterType(Je.THE_WINSTRATE_CHALLENGE).withEncounterTier(wt.ROGUE).withSceneWaveRangeRequirement(100,ZA[1]).withIntroSpriteConfigs([{spriteKey:"vito",fileRoot:"trainer",hasShadow:!1,x:16,y:-4},{spriteKey:"vivi",fileRoot:"trainer",hasShadow:!1,x:-14,y:-4},{spriteKey:"victor",fileRoot:"trainer",hasShadow:!0,x:-32},{spriteKey:"victoria",fileRoot:"trainer",hasShadow:!0,x:40},{spriteKey:"vicky",fileRoot:"trainer",hasShadow:!0,x:3,y:5,yShadow:5}]).withIntroDialogue([{text:`${ns}:intro`},{speaker:`${ns}:speaker`,text:`${ns}:intro_dialogue`}]).withAutoHideIntroVisuals(!1).withOnInit(()=>{const E=n.currentBattle.mysteryEncounter;return E.enemyPartyConfigs.push(XX()),E.enemyPartyConfigs.push(ZX()),E.enemyPartyConfigs.push(kX()),E.enemyPartyConfigs.push(bX()),E.enemyPartyConfigs.push(xX()),!0}).setLocalizationKey(`${ns}`).withTitle(`${ns}:title`).withDescription(`${ns}:description`).withQuery(`${ns}:query`).withSimpleOption({buttonLabel:`${ns}:option.1.label`,buttonTooltip:`${ns}:option.1.tooltip`,selected:[{speaker:`${ns}:speaker`,text:`${ns}:option.1.selected`}]},async()=>{n.currentBattle.mysteryEncounter.doContinueEncounter=async()=>{await VX()},await JA(!0,!1),await mP()}).withSimpleOption({buttonLabel:`${ns}:option.2.label`,buttonTooltip:`${ns}:option.2.tooltip`,selected:[{speaker:`${ns}:speaker`,text:`${ns}:option.2.selected`}]},async()=>{n.unshiftPhase(new Fr(!0)),Ft({guaranteedModifierTypeFuncs:[J.RARER_CANDY],fillRemaining:!1}),ft()}).build();async function mP(){const E=n.currentBattle.mysteryEncounter,A=E.enemyPartyConfigs.pop();if(A)await $A(A);else{await JA(!1,!1),await Un(`${ns}:victory`,`${ns}:speaker`);const s=J.VOUCHER_PREMIUM().newModifier();await n.addModifier(s),n.playSound("item_fanfare"),await qt(u.t("battle:rewardGain",{modifierName:s==null?void 0:s.type.name})),await Un(`${ns}:victory_2`,`${ns}:speaker`),n.ui.clearText();const R=AE(J.MYSTERY_ENCOUNTER_MACHO_BRACE);R.type.tier=w.MASTER,Ft({guaranteedModifierTypeOptions:[R],fillRemaining:!1}),E.doContinueEncounter=void 0,ft(!1,lE.NO_BATTLE)}}N(mP,"spawnNextTrainerOrEndEncounter");function VX(){return new Promise(async E=>{if(n.currentBattle.mysteryEncounter.enemyPartyConfigs.length===0){const A=n.currentBattle.trainer;A&&n.tweens.add({targets:A,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:750,onComplete:N(()=>{n.field.remove(A,!0)},"onComplete")}),await mP(),E()}else{n.arena.resetArenaEffects();const A=n.getPlayerField();A.forEach(R=>R.lapseTag(y.COMMANDED)),A.forEach((R,a)=>n.unshiftPhase(new fr(a)));for(const R of n.getPlayerParty())R.species.speciesId===e.EISCUE&&R.hasAbility(O.ICE_FACE)&&R.formIndex===1&&n.triggerPokemonFormChange(R,Zt),R.resetBattleData(),y8(xr,R);n.unshiftPhase(new pC);const s=n.currentBattle.trainer;n.currentBattle.trainer=null,await mP(),s&&n.tweens.add({targets:s,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:750,onComplete:N(()=>{n.field.remove(s,!0),E()},"onComplete")})}})}N(VX,"endTrainerBattleAndShowDialogue");function xX(){return{trainerType:U.VICTOR,pokemonConfigs:[{species:ke(e.SWELLOW),isBoss:!1,abilityIndex:0,nature:At.ADAMANT,moveSet:[t.FACADE,t.BRAVE_BIRD,t.PROTECT,t.QUICK_ATTACK],modifierConfigs:[{modifier:Kt(J.FLAME_ORB),isTransferable:!1},{modifier:Kt(J.FOCUS_BAND),stackCount:2,isTransferable:!1}]},{species:ke(e.OBSTAGOON),isBoss:!1,abilityIndex:1,nature:At.ADAMANT,moveSet:[t.FACADE,t.OBSTRUCT,t.NIGHT_SLASH,t.FIRE_PUNCH],modifierConfigs:[{modifier:Kt(J.FLAME_ORB),isTransferable:!1},{modifier:Kt(J.LEFTOVERS),stackCount:2,isTransferable:!1}]}]}}N(xX,"getVictorTrainerConfig");function bX(){return{trainerType:U.VICTORIA,pokemonConfigs:[{species:ke(e.ROSERADE),isBoss:!1,abilityIndex:0,nature:At.CALM,moveSet:[t.SYNTHESIS,t.SLUDGE_BOMB,t.GIGA_DRAIN,t.SLEEP_POWDER],modifierConfigs:[{modifier:Kt(J.SOUL_DEW),isTransferable:!1},{modifier:Kt(J.QUICK_CLAW),stackCount:2,isTransferable:!1}]},{species:ke(e.GARDEVOIR),isBoss:!1,formIndex:1,nature:At.TIMID,moveSet:[t.PSYSHOCK,t.MOONBLAST,t.SHADOW_BALL,t.WILL_O_WISP],modifierConfigs:[{modifier:Kt(J.ATTACK_TYPE_BOOSTER,[I.PSYCHIC]),stackCount:1,isTransferable:!1},{modifier:Kt(J.ATTACK_TYPE_BOOSTER,[I.FAIRY]),stackCount:1,isTransferable:!1}]}]}}N(bX,"getVictoriaTrainerConfig");function kX(){return{trainerType:U.VIVI,pokemonConfigs:[{species:ke(e.SEAKING),isBoss:!1,abilityIndex:3,nature:At.ADAMANT,moveSet:[t.WATERFALL,t.MEGAHORN,t.KNOCK_OFF,t.REST],modifierConfigs:[{modifier:Kt(J.BERRY,[_t.LUM]),stackCount:2,isTransferable:!1},{modifier:Kt(J.BASE_STAT_BOOSTER,[K.HP]),stackCount:4,isTransferable:!1}]},{species:ke(e.BRELOOM),isBoss:!1,abilityIndex:1,nature:At.JOLLY,moveSet:[t.SPORE,t.SWORDS_DANCE,t.SEED_BOMB,t.DRAIN_PUNCH],modifierConfigs:[{modifier:Kt(J.BASE_STAT_BOOSTER,[K.HP]),stackCount:4,isTransferable:!1},{modifier:Kt(J.TOXIC_ORB),isTransferable:!1}]},{species:ke(e.CAMERUPT),isBoss:!1,formIndex:1,nature:At.CALM,moveSet:[t.EARTH_POWER,t.FIRE_BLAST,t.YAWN,t.PROTECT],modifierConfigs:[{modifier:Kt(J.QUICK_CLAW),stackCount:3,isTransferable:!1}]}]}}N(kX,"getViviTrainerConfig");function ZX(){return{trainerType:U.VICKY,pokemonConfigs:[{species:ke(e.MEDICHAM),isBoss:!1,formIndex:1,nature:At.IMPISH,moveSet:[t.AXE_KICK,t.ICE_PUNCH,t.ZEN_HEADBUTT,t.BULLET_PUNCH],modifierConfigs:[{modifier:Kt(J.SHELL_BELL),isTransferable:!1}]}]}}N(ZX,"getVickyTrainerConfig");function XX(){return{trainerType:U.VITO,pokemonConfigs:[{species:ke(e.HISUI_ELECTRODE),isBoss:!1,abilityIndex:0,nature:At.MODEST,moveSet:[t.THUNDERBOLT,t.GIGA_DRAIN,t.FOUL_PLAY,t.THUNDER_WAVE],modifierConfigs:[{modifier:Kt(J.BASE_STAT_BOOSTER,[K.SPD]),stackCount:2,isTransferable:!1}]},{species:ke(e.SWALOT),isBoss:!1,abilityIndex:2,nature:At.QUIET,moveSet:[t.SLUDGE_BOMB,t.GIGA_DRAIN,t.ICE_BEAM,t.EARTHQUAKE],modifierConfigs:[{modifier:Kt(J.BERRY,[_t.SITRUS]),stackCount:2},{modifier:Kt(J.BERRY,[_t.APICOT]),stackCount:2},{modifier:Kt(J.BERRY,[_t.GANLON]),stackCount:2},{modifier:Kt(J.BERRY,[_t.STARF]),stackCount:2},{modifier:Kt(J.BERRY,[_t.SALAC]),stackCount:2},{modifier:Kt(J.BERRY,[_t.LUM]),stackCount:2},{modifier:Kt(J.BERRY,[_t.LANSAT]),stackCount:2},{modifier:Kt(J.BERRY,[_t.LIECHI]),stackCount:2},{modifier:Kt(J.BERRY,[_t.PETAYA]),stackCount:2},{modifier:Kt(J.BERRY,[_t.ENIGMA]),stackCount:2},{modifier:Kt(J.BERRY,[_t.LEPPA]),stackCount:2}]},{species:ke(e.DODRIO),isBoss:!1,abilityIndex:2,nature:At.JOLLY,moveSet:[t.DRILL_PECK,t.QUICK_ATTACK,t.THRASH,t.KNOCK_OFF],modifierConfigs:[{modifier:Kt(J.KINGS_ROCK),stackCount:2,isTransferable:!1}]},{species:ke(e.ALAKAZAM),isBoss:!1,formIndex:1,nature:At.BOLD,moveSet:[t.PSYCHIC,t.SHADOW_BALL,t.FOCUS_BLAST,t.THUNDERBOLT],modifierConfigs:[{modifier:Kt(J.WIDE_LENS),stackCount:2,isTransferable:!1}]},{species:ke(e.DARMANITAN),isBoss:!1,abilityIndex:0,nature:At.IMPISH,moveSet:[t.EARTHQUAKE,t.U_TURN,t.FLARE_BLITZ,t.ROCK_SLIDE],modifierConfigs:[{modifier:Kt(J.QUICK_CLAW),stackCount:2,isTransferable:!1}]}]}}N(XX,"getVitoTrainerConfig");const Cs="mysteryEncounters/teleportingHijinks",m0=1.75,QX=[T.SPACE,T.FAIRY_CAVE,T.LABORATORY,T.ISLAND,T.WASTELAND,T.DOJO],JX=[I.ELECTRIC,I.STEEL],$X=FA.withEncounterType(Je.TELEPORTING_HIJINKS).withEncounterTier(wt.COMMON).withSceneWaveRangeRequirement(...ZA).withSceneRequirement(new hP([1,2,3],10)).withSceneRequirement(new en(0,m0)).withAutoHideIntroVisuals(!1).withCatchAllowed(!0).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:"teleporting_hijinks_teleporter",fileRoot:"mystery-encounters",hasShadow:!0,x:4,y:4,yShadow:1}]).withIntroDialogue([{text:`${Cs}:intro`}]).setLocalizationKey(`${Cs}`).withTitle(`${Cs}:title`).withDescription(`${Cs}:description`).withQuery(`${Cs}:query`).withOnInit(()=>{const E=n.currentBattle.mysteryEncounter,A=n.getWaveMoneyAmount(m0);return E.setDialogueToken("price",A.toString()),E.misc={price:A},!0}).withOption(pt.newOptionWithMode(ct.DISABLED_OR_DEFAULT).withSceneMoneyRequirement(0,m0).withDialogue({buttonLabel:`${Cs}:option.1.label`,buttonTooltip:`${Cs}:option.1.tooltip`,selected:[{text:`${Cs}:option.1.selected`}]}).withPreOptionPhase(async()=>{RO(-n.currentBattle.mysteryEncounter.misc.price,!0,!1)}).withOptionPhase(async()=>{const E=await Xb();Ft({fillRemaining:!0}),await $A(E)}).build()).withOption(pt.newOptionWithMode(ct.DISABLED_OR_SPECIAL).withPokemonTypeRequirement(JX,!0,1).withDialogue({buttonLabel:`${Cs}:option.2.label`,buttonTooltip:`${Cs}:option.2.tooltip`,disabledButtonTooltip:`${Cs}:option.2.disabled_tooltip`,selected:[{text:`${Cs}:option.2.selected`}]}).withOptionPhase(async()=>{const E=await Xb();Ft({fillRemaining:!0}),DR(n.currentBattle.mysteryEncounter.selectedOption.primaryPokemon.id,100),await $A(E)}).build()).withSimpleOption({buttonLabel:`${Cs}:option.3.label`,buttonTooltip:`${Cs}:option.3.tooltip`,selected:[{text:`${Cs}:option.3.selected`}]},async()=>{const E=n.currentBattle.mysteryEncounter,A=Zo(ko),s=n.arena.randomSpecies(n.currentBattle.waveIndex,A,0,Hr(n.getPlayerParty()),!0),R=new xs(s,A,lt.NONE,!0);E.setDialogueToken("enemyPokemon",te(R));const a={pokemonConfigs:[{level:A,species:s,dataSource:new hs(R),isBoss:!0}]},i=AE(J.ATTACK_TYPE_BOOSTER,[I.STEEL]),r=AE(J.ATTACK_TYPE_BOOSTER,[I.ELECTRIC]);Ft({guaranteedModifierTypeOptions:[i,r],fillRemaining:!0}),await JA(!0,!0),await $A(a)}).build();async function Xb(){const E=n.currentBattle.mysteryEncounter,A=QX.filter(o=>n.arena.biomeType!==o),s=A[ce(A.length)];await qt(`${Cs}:transport`),await Promise.all([zX(s),JA()]),n.playBgm(),await qt(`${Cs}:attacked`);const R=Zo(ko),a=n.arena.randomSpecies(n.currentBattle.waveIndex,R,0,Hr(n.getPlayerParty()),!0),i=new xs(a,R,lt.NONE,!0);E.setDialogueToken("enemyPokemon",te(i));const r=n.currentBattle.waveIndex<50?[K.DEF,K.SPDEF,K.SPD]:[K.ATK,K.DEF,K.SPATK,K.SPDEF,K.SPD];return{pokemonConfigs:[{level:R,species:a,dataSource:new hs(i),isBoss:!0,tags:[y.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:N(o=>{RE(`${Cs}:boss_enraged`),n.unshiftPhase(new zt(o.getBattlerIndex(),!0,r,1))},"mysteryEncounterBattleEffects")}]}}N(Xb,"doBiomeTransitionDialogueAndBattleInit");async function zX(E){return new Promise(A=>{n.tweens.add({targets:[n.arenaEnemy,n.lastEnemyTrainer],x:"+=300",duration:2e3,onComplete:N(()=>{n.newArena(E);const R=`${Qo(E)}_bg`;n.arenaBgTransition.setTexture(R),n.arenaBgTransition.setAlpha(0),n.arenaBgTransition.setVisible(!0),n.arenaPlayerTransition.setBiome(E),n.arenaPlayerTransition.setAlpha(0),n.arenaPlayerTransition.setVisible(!0),n.tweens.add({targets:[n.arenaPlayer,n.arenaBgTransition,n.arenaPlayerTransition],duration:1e3,ease:"Sine.easeInOut",alpha:N(a=>a===n.arenaPlayer?0:1,"alpha"),onComplete:N(()=>{n.arenaBg.setTexture(R),n.arenaPlayer.setBiome(E),n.arenaPlayer.setAlpha(1),n.arenaEnemy.setBiome(E),n.arenaEnemy.setAlpha(1),n.arenaNextEnemy.setBiome(E),n.arenaBgTransition.setVisible(!1),n.arenaPlayerTransition.setVisible(!1),n.lastEnemyTrainer&&n.lastEnemyTrainer.destroy(),A(),n.tweens.add({targets:n.arenaEnemy,x:"-=300"})},"onComplete")})},"onComplete")})})}N(zX,"animateBiomeChange");const UA="mysteryEncounters/bugTypeSuperfan",F0=[e.PARASECT,e.VENOMOTH,e.LEDIAN,e.ARIADOS,e.YANMA,e.BEAUTIFLY,e.DUSTOX,e.MASQUERAIN,e.NINJASK,e.VOLBEAT,e.ILLUMISE,e.ANORITH,e.KRICKETUNE,e.WORMADAM,e.MOTHIM,e.SKORUPI,e.JOLTIK,e.LARVESTA,e.VIVILLON,e.CHARJABUG,e.RIBOMBEE,e.SPIDOPS,e.LOKIX],Sa=[e.SCYTHER,e.PINSIR,e.HERACROSS,e.FORRETRESS,e.SCIZOR,e.SHUCKLE,e.SHEDINJA,e.ARMALDO,e.VESPIQUEN,e.DRAPION,e.YANMEGA,e.LEAVANNY,e.SCOLIPEDE,e.CRUSTLE,e.ESCAVALIER,e.ACCELGOR,e.GALVANTULA,e.VIKAVOLT,e.ARAQUANID,e.ORBEETLE,e.CENTISKORCH,e.FROSMOTH,e.KLEAVOR],qX=[{species:e.PINSIR,formIndex:1},{species:e.SCIZOR,formIndex:1},{species:e.HERACROSS,formIndex:1},{species:e.ORBEETLE,formIndex:1},{species:e.CENTISKORCH,formIndex:1},{species:e.DURANT},{species:e.VOLCARONA},{species:e.GOLISOPOD}],Qb=[e.GENESECT,e.SLITHER_WING,e.BUZZWOLE,e.PHEROMOSA],Jb=[t.MEGAHORN,t.X_SCISSOR,t.ATTACK_ORDER,t.PIN_MISSILE,t.FIRST_IMPRESSION],$b=[t.SILVER_WIND,t.BUG_BUZZ,t.SIGNAL_BEAM,t.POLLEN_PUFF],zb=[t.STRING_SHOT,t.STICKY_WEB,t.SILK_TRAP,t.RAGE_POWDER,t.HEAL_ORDER],qb=[t.BUG_BITE,t.LEECH_LIFE,t.DEFEND_ORDER,t.QUIVER_DANCE,t.TAIL_GLOW,t.INFESTATION,t.U_TURN],oI=[30,50,70,100,120,140,160],jX=FA.withEncounterType(Je.BUG_TYPE_SUPERFAN).withEncounterTier(wt.GREAT).withPrimaryPokemonRequirement(ni.Some(new pI(["BypassSpeedChanceModifier","ContactHeldItemTransferChanceModifier"],1),new gC(I.BUG,1),new mr(I.BUG,!1,1))).withMaxAllowedEncounters(1).withSceneWaveRangeRequirement(...ZA).withIntroSpriteConfigs([]).withAutoHideIntroVisuals(!1).withIntroDialogue([{text:`${UA}:intro`},{speaker:`${UA}:speaker`,text:`${UA}:intro_dialogue`}]).withOnInit(()=>{const E=n.currentBattle.mysteryEncounter,A=eQ(n.currentBattle.waveIndex),s=A.getSpriteKey();E.enemyPartyConfigs.push({trainerConfig:A,female:!0});let R,a;n.currentBattle.waveIndex<oI[3]?(R=un(e.BEEDRILL,!1),a=un(e.BUTTERFREE,!1)):(R=un(e.BEEDRILL,!1,1),a=un(e.BUTTERFREE,!1,1)),E.spriteConfigs=[{spriteKey:R.spriteKey,fileRoot:R.fileRoot,hasShadow:!0,repeat:!0,isPokemon:!0,x:-30,tint:.15,y:-4,yShadow:-4},{spriteKey:a.spriteKey,fileRoot:a.fileRoot,hasShadow:!0,repeat:!0,isPokemon:!0,x:30,tint:.15,y:-4,yShadow:-4},{spriteKey:s,fileRoot:"trainer",hasShadow:!0,x:4,y:7,yShadow:7}];const r=[Kt(J.QUICK_CLAW),Kt(J.GRIP_CLAW),Kt(J.ATTACK_TYPE_BOOSTER,[I.BUG])].map(L=>(L==null?void 0:L.name)??"unknown").join("/");return E.setDialogueToken("requiredBugItems",r),!0}).setLocalizationKey(`${UA}`).withTitle(`${UA}:title`).withDescription(`${UA}:description`).withQuery(`${UA}:query`).withSimpleOption({buttonLabel:`${UA}:option.1.label`,buttonTooltip:`${UA}:option.1.tooltip`,selected:[{speaker:`${UA}:speaker`,text:`${UA}:option.1.selected`}]},async()=>{const E=n.currentBattle.mysteryEncounter,A=E.enemyPartyConfigs[0],s=[];s.push(new nt(Jb[ce(Jb.length)])),s.push(new nt($b[ce($b.length)])),s.push(new nt(zb[ce(zb.length)])),s.push(new nt(qb[ce(qb.length)])),E.misc={moveTutorOptions:s},E.onRewards=tQ,Ft({fillRemaining:!0}),await JA(!0,!0),await $A(A)}).withOption(pt.newOptionWithMode(ct.DISABLED_OR_DEFAULT).withPrimaryPokemonRequirement(new mr(I.BUG,!1,1)).withDialogue({buttonLabel:`${UA}:option.2.label`,buttonTooltip:`${UA}:option.2.tooltip`,disabledButtonTooltip:`${UA}:option.2.disabled_tooltip`}).withPreOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter,A=n.getPlayerParty().filter(R=>R.isOfType(I.BUG,!0)).length,s=u.t(`${UA}:numBugTypes`,{count:A});if(E.setDialogueToken("numBugTypes",s),A<2)Ft({guaranteedModifierTypeFuncs:[J.SUPER_LURE,J.GREAT_BALL],fillRemaining:!1}),E.selectedOption.dialogue.selected=[{speaker:`${UA}:speaker`,text:`${UA}:option.2.selected_0_to_1`}];else if(A<4)Ft({guaranteedModifierTypeFuncs:[J.QUICK_CLAW,J.MAX_LURE,J.ULTRA_BALL],fillRemaining:!1}),E.selectedOption.dialogue.selected=[{speaker:`${UA}:speaker`,text:`${UA}:option.2.selected_2_to_3`}];else if(A<6)Ft({guaranteedModifierTypeFuncs:[J.GRIP_CLAW,J.MAX_LURE,J.ROGUE_BALL],fillRemaining:!1}),E.selectedOption.dialogue.selected=[{speaker:`${UA}:speaker`,text:`${UA}:option.2.selected_4_to_5`}];else{const R=[AE(J.MASTER_BALL)],a=[];n.findModifier(l=>l instanceof RL)||R.push(AE(J.MEGA_BRACELET)),n.findModifier(l=>l instanceof OL)||R.push(AE(J.DYNAMAX_BAND));const i=AE(J.EVOLUTION_ITEM);i&&a.push(i);const r=AE(J.RARE_EVOLUTION_ITEM);r&&a.push(r);const L=AE(J.FORM_CHANGE_ITEM);L&&a.push(L);const o=AE(J.RARE_FORM_CHANGE_ITEM);o&&a.push(o),a.length>0&&R.push(a[ce(a.length)]),Ft({guaranteedModifierTypeOptions:R,fillRemaining:!1}),E.selectedOption.dialogue.selected=[{speaker:`${UA}:speaker`,text:`${UA}:option.2.selected_6`}]}}).withOptionPhase(async()=>{ft()}).build()).withOption(pt.newOptionWithMode(ct.DISABLED_OR_DEFAULT).withPrimaryPokemonRequirement(ni.Some(new pI(["BypassSpeedChanceModifier","ContactHeldItemTransferChanceModifier"],1),new gC(I.BUG,1))).withDialogue({buttonLabel:`${UA}:option.3.label`,buttonTooltip:`${UA}:option.3.tooltip`,disabledButtonTooltip:`${UA}:option.3.disabled_tooltip`,selected:[{text:`${UA}:option.3.selected`},{speaker:`${UA}:speaker`,text:`${UA}:option.3.selected_dialogue`}],secondOptionPrompt:`${UA}:option.3.select_prompt`}).withPreOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter;return zE(N(R=>R.getHeldItems().filter(i=>(i instanceof Mi||i instanceof Hi||i instanceof Pn&&i.type.moveType===I.BUG)&&i.isTransferable).map(i=>({label:i.type.name,handler:N(()=>(E.setDialogueToken("selectedItem",i.type.name),E.misc={chosenPokemon:R,chosenModifier:i},!0),"handler")})),"onPokemonSelected"),void 0,N(R=>R.getHeldItems().some(i=>i instanceof Mi||i instanceof Hi||i instanceof Pn&&i.type.moveType===I.BUG)?null:mA(`${UA}:option.3.invalid_selection`)??null,"selectableFilter"))}).withOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter,A=E.misc.chosenModifier;E.misc.chosenPokemon.loseHeldItem(A,!1),n.updateModifiers(!0,!0);const R=AE(J.MYSTERY_ENCOUNTER_GOLDEN_BUG_NET);R.type.tier=w.ROGUE,Ft({guaranteedModifierTypeOptions:[R],guaranteedModifierTypeFuncs:[J.REVIVER_SEED],fillRemaining:!1}),ft(!0)}).build()).withOutroDialogue([{text:`${UA}:outro`}]).build();function eQ(E){const A=QA[U.BUG_TYPE_SUPERFAN].clone();A.name=u.t("trainerNames:bug_type_superfan");let s=qX.slice(0);s=CO(s);const R=s.pop();if(E<oI[0])A.setPartyMemberFunc(0,Ce([e.BEEDRILL],lt.TRAINER,!0)).setPartyMemberFunc(1,Ce([e.BUTTERFREE],lt.TRAINER,!0));else if(E<oI[1])A.setPartyTemplates(new ze(3,Ve.AVERAGE)).setPartyMemberFunc(0,Ce([e.BEEDRILL],lt.TRAINER,!0)).setPartyMemberFunc(1,Ce([e.BUTTERFREE],lt.TRAINER,!0)).setPartyMemberFunc(2,Ce(F0,lt.TRAINER,!0));else if(E<oI[2])A.setPartyTemplates(new ze(4,Ve.AVERAGE)).setPartyMemberFunc(0,Ce([e.BEEDRILL],lt.TRAINER,!0)).setPartyMemberFunc(1,Ce([e.BUTTERFREE],lt.TRAINER,!0)).setPartyMemberFunc(2,Ce(F0,lt.TRAINER,!0)).setPartyMemberFunc(3,Ce(Sa,lt.TRAINER,!0));else if(E<oI[3])A.setPartyTemplates(new ze(5,Ve.AVERAGE)).setPartyMemberFunc(0,Ce([e.BEEDRILL],lt.TRAINER,!0)).setPartyMemberFunc(1,Ce([e.BUTTERFREE],lt.TRAINER,!0)).setPartyMemberFunc(2,Ce(F0,lt.TRAINER,!0)).setPartyMemberFunc(3,Ce(Sa,lt.TRAINER,!0)).setPartyMemberFunc(4,Ce(Sa,lt.TRAINER,!0));else if(E<oI[4])A.setPartyTemplates(new ze(5,Ve.AVERAGE)).setPartyMemberFunc(0,Ce([e.BEEDRILL],lt.TRAINER,!0,a=>{a.formIndex=1,a.generateAndPopulateMoveset(),a.generateName()})).setPartyMemberFunc(1,Ce([e.BUTTERFREE],lt.TRAINER,!0,a=>{a.formIndex=1,a.generateAndPopulateMoveset(),a.generateName()})).setPartyMemberFunc(2,Ce(Sa,lt.TRAINER,!0)).setPartyMemberFunc(3,Ce(Sa,lt.TRAINER,!0)).setPartyMemberFunc(4,Ce([R.species],lt.TRAINER,!0,a=>{ve(R.formIndex)||(a.formIndex=R.formIndex,a.generateAndPopulateMoveset(),a.generateName())}));else if(E<oI[5]){s=CO(s);const a=s.pop();A.setPartyTemplates(new ze(5,Ve.AVERAGE)).setPartyMemberFunc(0,Ce([e.BEEDRILL],lt.TRAINER,!0,i=>{i.formIndex=1,i.generateAndPopulateMoveset(),i.generateName()})).setPartyMemberFunc(1,Ce([e.BUTTERFREE],lt.TRAINER,!0,i=>{i.formIndex=1,i.generateAndPopulateMoveset(),i.generateName()})).setPartyMemberFunc(2,Ce(Sa,lt.TRAINER,!0)).setPartyMemberFunc(3,Ce([R.species],lt.TRAINER,!0,i=>{ve(R.formIndex)||(i.formIndex=R.formIndex,i.generateAndPopulateMoveset(),i.generateName())})).setPartyMemberFunc(4,Ce([a.species],lt.TRAINER,!0,i=>{ve(a.formIndex)||(i.formIndex=a.formIndex,i.generateAndPopulateMoveset(),i.generateName())}))}else if(E<oI[6])A.setPartyTemplates(new bA(new ze(4,Ve.AVERAGE),new ze(1,Ve.STRONG))).setPartyMemberFunc(0,Ce([e.BEEDRILL],lt.TRAINER,!0,a=>{a.formIndex=1,a.generateAndPopulateMoveset(),a.generateName()})).setPartyMemberFunc(1,Ce([e.BUTTERFREE],lt.TRAINER,!0,a=>{a.formIndex=1,a.generateAndPopulateMoveset(),a.generateName()})).setPartyMemberFunc(2,Ce(Sa,lt.TRAINER,!0)).setPartyMemberFunc(3,Ce([R.species],lt.TRAINER,!0,a=>{ve(R.formIndex)||(a.formIndex=R.formIndex,a.generateAndPopulateMoveset(),a.generateName())})).setPartyMemberFunc(4,Ce(Qb,lt.TRAINER,!0));else{s=CO(s);const a=s.pop();A.setPartyTemplates(new bA(new ze(4,Ve.AVERAGE),new ze(1,Ve.STRONG))).setPartyMemberFunc(0,Ce([e.BEEDRILL],lt.TRAINER,!0,i=>{i.setBoss(!0,2),i.formIndex=1,i.generateAndPopulateMoveset(),i.generateName()})).setPartyMemberFunc(1,Ce([e.BUTTERFREE],lt.TRAINER,!0,i=>{i.setBoss(!0,2),i.formIndex=1,i.generateAndPopulateMoveset(),i.generateName()})).setPartyMemberFunc(2,Ce([R.species],lt.TRAINER,!0,i=>{ve(R.formIndex)||(i.formIndex=R.formIndex,i.generateAndPopulateMoveset(),i.generateName())})).setPartyMemberFunc(3,Ce([a.species],lt.TRAINER,!0,i=>{ve(a.formIndex)||(i.formIndex=a.formIndex,i.generateAndPopulateMoveset(),i.generateName())})).setPartyMemberFunc(4,Ce(Qb,lt.TRAINER,!0))}return A}N(eQ,"getTrainerConfigForWave");function tQ(){return new Promise(async E=>{const A=n.currentBattle.mysteryEncounter.misc.moveTutorOptions;await Un(`${UA}:battle_won`,`${UA}:speaker`);const s=1,R=new MO({delayVisibility:!1,scale:s,onSide:!0,right:!0,x:1,y:-MO.getHeight(s,!0)-1,width:n.game.canvas.width/6-2});n.ui.add(R);const a=A.map(L=>({label:L.getName(),handler:N(()=>(R.active=!1,R.setVisible(!1),!0),"handler"),onHover:N(()=>{R.active=!0,R.show(we[L.moveId])},"onHover")})),i=N(()=>{R.active=!1,R.setVisible(!1)},"onHoverOverCancel"),r=await L9(a,`${UA}:teach_move_prompt`,void 0,i);r||(R.active=!1,R.setVisible(!1)),r&&r.selectedOptionIndex<A.length&&n.unshiftPhase(new eI(r.selectedPokemonIndex,A[r.selectedOptionIndex].moveId)),E()})}N(tQ,"doBugTypeMoveTutor");const YE="mysteryEncounters/funAndGames",AQ=FA.withEncounterType(Je.FUN_AND_GAMES).withEncounterTier(wt.GREAT).withSceneWaveRangeRequirement(...ZA).withSceneRequirement(new en(0,1.5)).withAutoHideIntroVisuals(!1).withBattleAnimationsWithoutTargets(!0).withSkipEnemyBattleTurns(!0).withSkipToFightInput(!0).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:"fun_and_games_game",fileRoot:"mystery-encounters",hasShadow:!1,x:0,y:6},{spriteKey:"fun_and_games_wobbuffet",fileRoot:"mystery-encounters",hasShadow:!0,x:-28,y:6,yShadow:6},{spriteKey:"fun_and_games_man",fileRoot:"mystery-encounters",hasShadow:!0,x:40,y:6,yShadow:6}]).withIntroDialogue([{speaker:`${YE}:speaker`,text:`${YE}:intro_dialogue`}]).setLocalizationKey(`${YE}`).withTitle(`${YE}:title`).withDescription(`${YE}:description`).withQuery(`${YE}:query`).withOnInit(()=>{const E=n.currentBattle.mysteryEncounter;return n.loadBgm("mystery_encounter_fun_and_games","mystery_encounter_fun_and_games.mp3"),E.setDialogueToken("wobbuffetName",ke(e.WOBBUFFET).getName()),!0}).withOnVisualsStart(()=>(n.fadeAndSwitchBgm("mystery_encounter_fun_and_games"),!0)).withOption(pt.newOptionWithMode(ct.DISABLED_OR_DEFAULT).withSceneRequirement(new en(0,1.5)).withDialogue({buttonLabel:`${YE}:option.1.label`,buttonTooltip:`${YE}:option.1.tooltip`,selected:[{text:`${YE}:option.1.selected`}]}).withPreOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter;return zE(N(R=>{E.misc={playerPokemon:R}},"onPokemonSelected"),void 0,N(R=>Xa(R,`${YE}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter;E.misc.turnsRemaining=3;const A=E.options[0].requirements[0].requiredMoney;return RO(-A,!0,!1),await qt(u.t("mysteryEncounterMessages:paid_money",{amount:A})),E.onTurnStart=sQ,E.doContinueEncounter=G8,nQ(),await EQ(),await RQ(),!0}).build()).withSimpleOption({buttonLabel:`${YE}:option.2.label`,buttonTooltip:`${YE}:option.2.tooltip`,selected:[{text:`${YE}:option.2.selected`}]},async()=>(await JA(!0,!0),ft(!0),!0)).build();async function EQ(){return new Promise(async E=>{const A=n.currentBattle.mysteryEncounter,s=A.misc.playerPokemon,R=n.getPlayerParty(),a=R.indexOf(s);if(a!==0){const C=R[0];R[0]=s,R[a]=C}let i;n.ui.showText(u.t("battle:playerGo",{pokemonName:te(s)})),n.pbTray.hide(),n.trainer.setTexture(`trainer_${n.gameData.gender===Vt.FEMALE?"f":"m"}_back_pb`),n.time.delayedCall(562,()=>{n.trainer.setFrame("2"),n.time.delayedCall(64,()=>{n.trainer.setFrame("3")})}),n.tweens.add({targets:n.trainer,x:-36,duration:1e3,onComplete:N(()=>n.trainer.setVisible(!1),"onComplete")}),n.time.delayedCall(750,()=>{i=OQ(s)});const r=ke(e.WOBBUFFET);n.currentBattle.enemyParty=[];const L=n.addEnemyPokemon(r,A.misc.playerPokemon.level,lt.NONE,!1,!0);L.ivs=[0,0,0,0,0,0],L.setNature(At.MILD),L.setAlpha(0),L.setVisible(!1),L.calculateStats(),n.currentBattle.enemyParty[0]=L,n.gameData.setPokemonSeen(L,!0),await L.loadAssets();const o=setInterval(l,500);async function l(){i&&(clearInterval(o),await i,E())}N(l,"checkPlayerAnimationPromise")})}N(EQ,"summonPlayerPokemon");function G8(){return new Promise(async E=>{const A=n.getEnemyPokemon();if(!A||A.isFainted(!0)||A.hp===0){A&&(A.hideInfo(),n.field.remove(A)),JA(!0,!0),n.currentBattle.enemyParty=[],n.currentBattle.mysteryEncounter.doContinueEncounter=void 0,ft(!0),await qt(`${YE}:ko`);const s=n.getWaveMoneyAmount(1.5);RO(-s,!0,!1)}E()})}N(G8,"handleLoseMinigame");function sQ(){const E=n.currentBattle.mysteryEncounter,A=n.getEnemyPokemon();if(!A)return G8(),!0;if(E.misc.turnsRemaining<=0){const s=A.hp/A.getMaxHp();let R,a=!1;return s<.03?(Ft({guaranteedModifierTypeFuncs:[J.MULTI_LENS],fillRemaining:!1}),R=`${YE}:best_result`):s<.15?(Ft({guaranteedModifierTypeFuncs:[J.SCOPE_LENS],fillRemaining:!1}),R=`${YE}:great_result`):s<.33?(Ft({guaranteedModifierTypeFuncs:[J.WIDE_LENS],fillRemaining:!1}),R=`${YE}:good_result`):(a=!0,R=`${YE}:bad_result`),A.hideInfo(),n.field.remove(A),n.currentBattle.enemyParty=[],n.currentBattle.mysteryEncounter.doContinueEncounter=void 0,ft(a),RE(`${YE}:end_game`),RE(R),!0}else E.misc.turnsRemaining<3&&RE(`${YE}:charging_continue`),RE(`${YE}:turn_remaining_${E.misc.turnsRemaining}`),E.misc.turnsRemaining--;return!1}N(sQ,"handleNextTurn");async function RQ(){const E=n.getEnemyPokemon();n.add.existing(E),n.field.add(E);const A=n.getPlayerPokemon();A!=null&&A.isOnField()&&n.field.moveBelow(E,A),E.showInfo(),n.time.delayedCall(1e3,()=>{E.cry()}),E.resetSummonData(),n.currentBattle.mysteryEncounter.misc.wobbuffetHealth=E.hp}N(RQ,"showWobbuffetHealthBar");function OQ(E){return new Promise(A=>{const s=n.addFieldSprite(36,80,"pb",DO(E.pokeball));s.setVisible(!1),s.setOrigin(.5,.625),n.field.add(s),E.setFieldPosition(oR.CENTER,0);const R=E.getFieldPositionOffset();s.setVisible(!0),n.tweens.add({targets:s,duration:650,x:100+R[0]}),n.tweens.add({targets:s,duration:150,ease:"Cubic.easeOut",y:70+R[1],onComplete:N(()=>{n.tweens.add({targets:s,duration:500,ease:"Cubic.easeIn",angle:1440,y:132+R[1],onComplete:N(()=>{n.playSound("se/pb_rel"),s.destroy(),n.add.existing(E),n.field.add(E),BM(E.x,E.y-16,E.pokeball),n.updateModifiers(!0),n.updateFieldScale(),E.showInfo(),E.playAnim(),E.setVisible(!0),E.getSprite().setVisible(!0),E.setScale(.5),E.tint(zO(E.pokeball)),E.untint(250,"Sine.easeIn"),n.updateFieldScale(),n.tweens.add({targets:E,duration:250,ease:"Sine.easeIn",scale:E.getSpriteScale(),onComplete:N(()=>{E.cry(E.getHpRatio()>.25?void 0:{rate:.85}),E.getSprite().clearTint(),E.resetSummonData(),n.time.delayedCall(1e3,()=>{E.isShiny()&&n.unshiftPhase(new eS(E.getBattlerIndex())),E.resetTurnData(),n.triggerPokemonFormChange(E,Ds,!0),n.pushPhase(new Ei(E.getBattlerIndex())),A()})},"onComplete")})},"onComplete")})},"onComplete")})})}N(OQ,"summonPlayerPokemonAnimation");function nQ(){var R,a,i;const E=(R=n.currentBattle.mysteryEncounter.introVisuals)==null?void 0:R.getSpriteAtIndex(0)[0],A=(a=n.currentBattle.mysteryEncounter.introVisuals)==null?void 0:a.getSpriteAtIndex(1)[0],s=(i=n.currentBattle.mysteryEncounter.introVisuals)==null?void 0:i.getSpriteAtIndex(2)[0];n.tweens.add({targets:s,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:750}),n.tweens.add({targets:[A,E],x:"+=16",ease:"Sine.easeInOut",duration:750})}N(nQ,"hideShowmanIntroSprite");const gs="mysteryEncounters/uncommonBreed",IQ=FA.withEncounterType(Je.UNCOMMON_BREED).withEncounterTier(wt.COMMON).withSceneWaveRangeRequirement(...ZA).withCatchAllowed(!0).withHideWildIntroMessage(!0).withFleeAllowed(!1).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${gs}:intro`}]).withOnInit(()=>{const E=n.currentBattle.mysteryEncounter,A=w1(!1,!0).level-2,s=y1(A,!0,!0),R=s.getEggMoves();if(R){const o=ce(4),l=R[o];E.misc={eggMove:l,pokemon:s},s.moveset.length<4?s.moveset.push(new nt(l)):s.moveset[0]=new nt(l)}else E.misc.pokemon=s;const a=n.currentBattle.waveIndex<50?[K.DEF,K.SPDEF,K.SPD]:[K.ATK,K.DEF,K.SPATK,K.SPDEF,K.SPD],i={pokemonConfigs:[{level:A,species:s.species,dataSource:new hs(s),isBoss:!1,tags:[y.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:N(o=>{RE(`${gs}:option.1.stat_boost`),n.unshiftPhase(new zt(o.getBattlerIndex(),!0,a,1))},"mysteryEncounterBattleEffects")}]};E.enemyPartyConfigs=[i];const{spriteKey:r,fileRoot:L}=FM(s);return E.spriteConfigs=[{spriteKey:r,fileRoot:L,hasShadow:!0,x:-5,repeat:!0,isPokemon:!0,isShiny:s.shiny,variant:s.variant}],E.setDialogueToken("enemyPokemon",s.getNameToRender()),n.loadSe("PRSFX- Spotlight2","battle_anims","PRSFX- Spotlight2.wav"),!0}).withOnVisualsStart(()=>{const E=n.currentBattle.mysteryEncounter,A=E.introVisuals.getSprites();return n.tweens.add({targets:A,duration:300,ease:"Cubic.easeOut",yoyo:!0,y:"-=20",loop:1,onComplete:N(()=>{var s;return(s=E.introVisuals)==null?void 0:s.playShinySparkles()},"onComplete")}),n.time.delayedCall(500,()=>n.playSound("battle_anims/PRSFX- Spotlight2")),!0}).setLocalizationKey(`${gs}`).withTitle(`${gs}:title`).withDescription(`${gs}:description`).withQuery(`${gs}:query`).withSimpleOption({buttonLabel:`${gs}:option.1.label`,buttonTooltip:`${gs}:option.1.tooltip`,selected:[{text:`${gs}:option.1.selected`}]},async()=>{const E=n.currentBattle.mysteryEncounter,A=E.misc.eggMove;if(!ve(A)){const s=new nt(A),a=s.getMove()instanceof je?gt.ENEMY:gt.PLAYER;E.startOfBattleEffects.push({sourceBattlerIndex:gt.ENEMY,targets:[a],move:s,ignorePp:!0})}Ft({fillRemaining:!0}),await $A(E.enemyPartyConfigs[0])}).withOption(pt.newOptionWithMode(ct.DISABLED_OR_SPECIAL).withSceneRequirement(new fC("BerryModifier",4)).withDialogue({buttonLabel:`${gs}:option.2.label`,buttonTooltip:`${gs}:option.2.tooltip`,disabledButtonTooltip:`${gs}:option.2.disabled_tooltip`,selected:[{text:`${gs}:option.2.selected`}]}).withOptionPhase(async()=>{const E=n.findModifiers(R=>R instanceof CE);for(let R=0;R<4;R++){const a=ce(E.length),i=E[a];i.stackCount--,i.stackCount===0&&(n.removeModifier(i),E.splice(a,1))}await n.updateModifiers(!0,!0);const A=n.currentBattle.mysteryEncounter,s=A.misc.pokemon;jb(s,A.misc.eggMove),await Kr(s,null,be.POKEBALL,!1),Ft({fillRemaining:!0}),ft()}).build()).withOption(pt.newOptionWithMode(ct.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(new kI(o8,!0)).withDialogue({buttonLabel:`${gs}:option.3.label`,buttonTooltip:`${gs}:option.3.tooltip`,disabledButtonTooltip:`${gs}:option.3.disabled_tooltip`,selected:[{text:`${gs}:option.3.selected`}]}).withOptionPhase(async()=>{var s,R;const E=n.currentBattle.mysteryEncounter,A=E.misc.pokemon;jb(A,E.misc.eggMove),A.ivs=A.ivs.map(a=>{const i=ce(31);return i>a?i:a}),await Kr(A,null,be.POKEBALL,!1),(R=(s=E.selectedOption)==null?void 0:s.primaryPokemon)!=null&&R.id&&DR(E.selectedOption.primaryPokemon.id,A.getExpValue(),!1),Ft({fillRemaining:!0}),ft()}).build()).build();function jb(E,A){const s=E.getEggMoves();if(s){let R=s[ce(4)];for(;R===A;)R=s[ce(4)];E.moveset.length<4?E.moveset.push(new nt(R)):E.moveset[1]=new nt(R)}}N(jb,"givePokemonExtraEggMove");const JK=class JK{constructor(A,...s){this.urls=s.length?s:[Jn(U[A]).replace(/ /g,"_")]}hasGenderVariant(...A){return this.femaleUrls=A.length?A:null,this}};N(JK,"TrainerNameConfig");let kt=JK;U.ACE_TRAINER+"",new kt(U.ACE_TRAINER),U.ARTIST+"",new kt(U.ARTIST),U.BACKERS+"",new kt(U.BACKERS),U.BACKPACKER+"",new kt(U.BACKPACKER),U.BAKER+"",new kt(U.BAKER),U.BEAUTY+"",new kt(U.BEAUTY),U.BIKER+"",new kt(U.BIKER),U.BLACK_BELT+"",new kt(U.BLACK_BELT).hasGenderVariant("Battle_Girl"),U.BREEDER+"",new kt(U.BREEDER,"Pokémon_Breeder"),U.CLERK+"",new kt(U.CLERK),U.CYCLIST+"",new kt(U.CYCLIST),U.DANCER+"",new kt(U.DANCER),U.DEPOT_AGENT+"",new kt(U.DEPOT_AGENT),U.DOCTOR+"",new kt(U.DOCTOR).hasGenderVariant("Nurse"),U.FIREBREATHER+"",new kt(U.FIREBREATHER),U.FISHERMAN+"",new kt(U.FISHERMAN),U.GUITARIST+"",new kt(U.GUITARIST),U.HARLEQUIN+"",new kt(U.HARLEQUIN),U.HIKER+"",new kt(U.HIKER),U.HOOLIGANS+"",new kt(U.HOOLIGANS),U.HOOPSTER+"",new kt(U.HOOPSTER),U.INFIELDER+"",new kt(U.INFIELDER),U.JANITOR+"",new kt(U.JANITOR),U.LINEBACKER+"",new kt(U.LINEBACKER),U.MAID+"",new kt(U.MAID),U.MUSICIAN+"",new kt(U.MUSICIAN),U.HEX_MANIAC+"",new kt(U.HEX_MANIAC),U.NURSERY_AIDE+"",new kt(U.NURSERY_AIDE),U.OFFICER+"",new kt(U.OFFICER),U.PARASOL_LADY+"",new kt(U.PARASOL_LADY),U.PILOT+"",new kt(U.PILOT),U.POKEFAN+"",new kt(U.POKEFAN,"Poké_Fan"),U.PRESCHOOLER+"",new kt(U.PRESCHOOLER),U.PSYCHIC+"",new kt(U.PSYCHIC),U.RANGER+"",new kt(U.RANGER),U.RICH+"",new kt(U.RICH,"Gentleman").hasGenderVariant("Madame"),U.RICH_KID+"",new kt(U.RICH_KID,"Rich_Boy").hasGenderVariant("Lady"),U.ROUGHNECK+"",new kt(U.ROUGHNECK),U.SAILOR+"",new kt(U.SAILOR),U.SCIENTIST+"",new kt(U.SCIENTIST),U.SMASHER+"",new kt(U.SMASHER),U.SNOW_WORKER+"",new kt(U.SNOW_WORKER,"Worker"),U.STRIKER+"",new kt(U.STRIKER),U.SCHOOL_KID+"",new kt(U.SCHOOL_KID,"School_Kid"),U.SWIMMER+"",new kt(U.SWIMMER),U.TWINS+"",new kt(U.TWINS),U.VETERAN+"",new kt(U.VETERAN),U.WAITER+"",new kt(U.WAITER).hasGenderVariant("Waitress"),U.WORKER+"",new kt(U.WORKER),U.YOUNGSTER+"",new kt(U.YOUNGSTER).hasGenderVariant("Lass");const kL={[U.ACE_TRAINER]:[["Aaron","Allen","Blake","Brian","Gaven","Jake","Kevin","Mike","Nick","Paul","Ryan","Sean","Darin","Albert","Berke","Clyde","Edgar","George","Leroy","Owen","Parker","Randall","Ruben","Samuel","Vincent","Warren","Wilton","Zane","Alfred","Braxton","Felix","Gerald","Jonathan","Leonel","Marcel","Mitchell","Quincy","Roderick","Colby","Rolando","Yuji","Abel","Anton","Arthur","Cesar","Dalton","Dennis","Ernest","Garrett","Graham","Henry","Isaiah","Jonah","Jose","Keenan","Micah","Omar","Quinn","Rodolfo","Saul","Sergio","Skylar","Stefan","Zachery","Alton","Arabella","Bonita","Cal","Cody","French","Kobe","Paulo","Shaye","Austin","Beckett","Charlie","Corky","David","Dwayne","Elmer","Jesse","Jared","Johan","Jordan","Kipp","Lou","Terry","Tom","Webster","Billy","Doyle","Enzio","Geoff","Grant","Kelsey","Miguel","Pierce","Ray","Santino","Shel","Adelbert","Bence","Emil","Evan","Mathis","Maxim","Neil","Rico","Robbie","Theo","Viktor","Benedict","Cornelius","Hisato","Leopold","Neville","Vito","Chase","Cole","Hiroshi","Jackson","Jim","Kekoa","Makana","Yuki","Elwood","Seth","Alvin","Arjun","Arnold","Cameron","Carl","Carlton","Christopher","Dave","Dax","Dominic","Edmund","Finn","Fred","Garret","Grayson","Jace","Jaxson","Jay","Jirard","Johnson","Kayden","Kite","Louis","Mac","Marty","Percy","Raymond","Ronnie","Satch","Tim","Zach","Conner","Vince","Bedro","Boda","Botan","Daras","Dury","Herton","Rewn","Stum","Tock","Trilo","Berki","Cruik","Dazon","Desid","Dillot","Farfin","Forgon","Hebel","Morfon","Moril","Shadd","Vanhub","Bardo","Carben","Degin","Gorps","Klept","Lask","Malex","Mopar","Niled","Noxon","Teslor","Tetil"],["Beth","Carol","Cybil","Emma","Fran","Gwen","Irene","Jenn","Joyce","Kate","Kelly","Lois","Lola","Megan","Quinn","Reena","Cara","Alexa","Brooke","Caroline","Elaine","Hope","Jennifer","Jody","Julie","Lori","Mary","Michelle","Shannon","Wendy","Alexia","Alicia","Athena","Carolina","Cristin","Darcy","Dianne","Halle","Jazmyn","Katelynn","Keira","Marley","Allyson","Kathleen","Naomi","Alyssa","Ariana","Brandi","Breanna","Brenda","Brenna","Catherine","Clarice","Dana","Deanna","Destiny","Jamie","Jasmin","Kassandra","Laura","Maria","Mariah","Maya","Meagan","Mikayla","Monique","Natasha","Olivia","Sandra","Savannah","Sydney","Moira","Piper","Salma","Allison","Beverly","Cathy","Cheyenne","Clara","Dara","Eileen","Glinda","Junko","Lena","Lucille","Mariana","Olwen","Shanta","Stella","Angi","Belle","Chandra","Cora","Eve","Jacqueline","Jeanne","Juliet","Kathrine","Layla","Lucca","Melina","Miki","Nina","Sable","Shelly","Summer","Trish","Vicki","Alanza","Cordelia","Hilde","Imelda","Michele","Mireille","Claudia","Constance","Harriet","Honor","Melba","Portia","Alexis","Angela","Karla","Lindsey","Tori","Sheri","Jada","Kailee","Amanda","Annie","Kindra","Kyla","Sofia","Yvette","Becky","Flora","Gloria","Buna","Ferda","Lehan","Liqui","Lomen","Neira","Atilo","Detta","Gilly","Gosney","Levens","Moden","Rask","Rateis","Rosno","Tynan","Veron","Zoel","Cida","Dibsin","Dodin","Ebson","Equin","Flostin","Gabsen","Halsion","Hileon","Quelor","Rapeel","Roze","Tensin"]],[U.ARTIST]:[["Ismael","William","Horton","Pierre","Zach","Gough","Salvador","Vincent","Duncan"],["Georgia"]],[U.BACKERS]:[["Alf & Fred","Hawk & Dar","Joe & Ross","Les & Web","Masa & Yas","Stu & Art"],["Ai & Ciel","Ami & Eira","Cam & Abby","Fey & Sue","Kat & Phae","Kay & Ali","Ava & Aya","Cleo & Rio","May & Mal"]],[U.BACKPACKER]:[["Alexander","Carlos","Herman","Jerome","Keane","Kelsey","Kiyo","Michael","Nate","Peter","Sam","Stephen","Talon","Terrance","Toru","Waylon","Boone","Clifford","Ivan","Kendall","Lowell","Randall","Reece","Roland","Shane","Walt","Farid","Heike","Joren","Lane","Roderick","Darnell","Deon","Emory","Graeme","Grayson","Aitor","Alex","Arturo","Asier","Jaime","Jonathan","Julio","Kevin","Kosuke","Lander","Markel","Mateo","Nil","Pau","Samuel"],["Anna","Corin","Elaine","Emi","Jill","Kumiko","Liz","Lois","Lora","Molly","Patty","Ruth","Vicki","Annie","Blossom","Clara","Eileen","Mae","Myra","Rachel","Tami","Ashley","Mikiko","Kiana","Perdy","Maria","Yuho","Peren","Barbara","Diane"]],[U.BAKER]:["Chris","Jenn","Lilly"],[U.BEAUTY]:["Cassie","Julia","Olivia","Samantha","Valerie","Victoria","Bridget","Connie","Jessica","Johanna","Melissa","Sheila","Shirley","Tiffany","Namiko","Thalia","Grace","Lola","Lori","Maura","Tamia","Cyndy","Devon","Gabriella","Harley","Lindsay","Nicola","Callie","Charlotte","Kassandra","December","Fleming","Nikola","Aimee","Anais","Brigitte","Cassandra","Andrea","Brittney","Carolyn","Krystal","Alexis","Alice","Aina","Anya","Arianna","Aubrey","Beverly","Camille","Beauty","Evette","Hansol","Haruka","Jill","Jo","Lana","Lois","Lucy","Mai","Nickie","Nicole","Prita","Rose","Shelly","Suzy","Tessa","Anita","Alissa","Rita","Cudsy","Eloff","Miru","Minot","Nevah","Niven","Ogoin"],[U.BIKER]:["Charles","Dwayne","Glenn","Harris","Joel","Riley","Zeke","Alex","Billy","Ernest","Gerald","Hideo","Isaac","Jared","Jaren","Jaxon","Jordy","Lao","Lukas","Malik","Nikolas","Ricardo","Ruben","Virgil","William","Aiden","Dale","Dan","Jacob","Markey","Reese","Teddy","Theron","Jeremy","Morgann","Phillip","Philip","Stanley","Dillon"],[U.BLACK_BELT]:[["Kenji","Lao","Lung","Nob","Wai","Yoshi","Atsushi","Daisuke","Hideki","Hitoshi","Kiyo","Koichi","Koji","Yuji","Cristian","Rhett","Takao","Theodore","Zander","Aaron","Hugh","Mike","Nicolas","Shea","Takashi","Adam","Carl","Colby","Darren","David","Davon","Derek","Eddie","Gregory","Griffin","Jarrett","Jeffery","Kendal","Kyle","Luke","Miles","Nathaniel","Philip","Rafael","Ray","Ricky","Sean","Willie","Ander","Manford","Benjamin","Corey","Edward","Grant","Jay","Kendrew","Kentaro","Ryder","Teppei","Thomas","Tyrone","Andrey","Donny","Drago","Gordon","Grigor","Jeriel","Kenneth","Martell","Mathis","Rich","Rocky","Rodrigo","Wesley","Zachery","Alonzo","Cadoc","Gunnar","Igor","Killian","Markus","Ricardo","Yanis","Banting","Clayton","Duane","Earl","Greg","Roy","Terry","Tracy","Walter","Alvaro","Curtis","Francis","Ross","Brice","Cheng","Dudley","Eric","Kano","Masahiro","Randy","Ryuji","Steve","Tadashi","Wong","Yuen","Brian","Carter","Reece","Nick","Yang"],["Cora","Cyndy","Jill","Laura","Sadie","Tessa","Vivian","Aisha","Callie","Danielle","Helene","Jocelyn","Lilith","Paula","Reyna","Helen","Kelsey","Tyler","Amy","Chandra","Hillary","Janie","Lee","Maggie","Mikiko","Miriam","Sharon","Susie","Xiao","Alize","Azra","Brenda","Chalina","Chan","Glinda","Maki","Tia","Tiffany","Wendy","Andrea","Gabrielle","Gerardine","Hailey","Hedvig","Justine","Kinsey","Sigrid","Veronique","Tess"]],[U.BREEDER]:[["Isaac","Myles","Salvadore","Albert","Kahlil","Eustace","Galen","Owen","Addison","Marcus","Foster","Cory","Glenn","Jay","Wesley","William","Adrian","Bradley","Jaime"],["Allison","Alize","Bethany","Lily","Lydia","Gabrielle","Jayden","Pat","Veronica","Amber","Jennifer","Kaylee","Adelaide","Brooke","Ethel","April","Irene","Magnolia","Amala","Mercy","Amanda","Ikue","Savannah","Yuka","Chloe","Debra","Denise","Elena"]],[U.CLERK]:[["Chaz","Clemens","Doug","Fredric","Ivan","Isaac","Nelson","Wade","Warren","Augustin","Gilligan","Cody","Jeremy","Shane","Dugal","Royce","Ronald"],["Alberta","Ingrid","Katie","Piper","Trisha","Wren","Britney","Lana","Jessica","Kristen","Michelle","Gabrielle"]],[U.CYCLIST]:[["Axel","James","John","Ryan","Hector","Jeremiah"],["Kayla","Megan","Nicole","Rachel","Krissa","Adelaide"]],[U.DANCER]:["Brian","Davey","Dirk","Edmond","Mickey","Raymond","Cara","Julia","Maika","Mireille","Ronda","Zoe"],[U.DEPOT_AGENT]:["Josh","Hank","Vincent"],[U.DOCTOR]:[["Hank","Jerry","Jules","Logan","Wayne","Braid","Derek","Heath","Julius","Kit","Graham"],["Kirsten","Sachiko","Shery","Carol","Dixie","Mariah"]],[U.FIREBREATHER]:["Bill","Burt","Cliff","Dick","Lyle","Ned","Otis","Ray","Richard","Walt"],[U.FISHERMAN]:["Andre","Arnold","Barney","Chris","Edgar","Henry","Jonah","Justin","Kyle","Martin","Marvin","Ralph","Raymond","Scott","Stephen","Wilton","Tully","Andrew","Barny","Carter","Claude","Dale","Elliot","Eugene","Ivan","Ned","Nolan","Roger","Ronald","Wade","Wayne","Darian","Kai","Chip","Hank","Kaden","Tommy","Tylor","Alec","Brett","Cameron","Cody","Cole","Cory","Erick","George","Joseph","Juan","Kenneth","Luc","Miguel","Travis","Walter","Zachary","Josh","Gideon","Kyler","Liam","Murphy","Bruce","Damon","Devon","Hubert","Jones","Lydon","Mick","Pete","Sean","Sid","Vince","Bucky","Dean","Eustace","Kenzo","Leroy","Mack","Ryder","Ewan","Finn","Murray","Seward","Shad","Wharton","Finley","Fisher","Fisk","River","Sheaffer","Timin","Carl","Ernest","Hal","Herbert","Hisato","Mike","Vernon","Harriet","Marina","Chase"],[U.GUITARIST]:["Anna","Beverly","January","Tina","Alicia","Claudia","Julia","Lidia","Mireia","Noelia","Sara","Sheila","Tatiana"],[U.HARLEQUIN]:["Charley","Ian","Jack","Kerry","Louis","Pat","Paul","Rick","Anders","Clarence","Gary"],[U.HIKER]:["Anthony","Bailey","Benjamin","Daniel","Erik","Jim","Kenny","Leonard","Michael","Parry","Phillip","Russell","Sidney","Tim","Timothy","Alan","Brice","Clark","Eric","Lenny","Lucas","Mike","Trent","Devan","Eli","Marc","Sawyer","Allen","Daryl","Dudley","Earl","Franklin","Jeremy","Marcos","Nob","Oliver","Wayne","Alexander","Damon","Jonathan","Justin","Kevin","Lorenzo","Louis","Maurice","Nicholas","Reginald","Robert","Theodore","Bruce","Clarke","Devin","Dwight","Edwin","Eoin","Noland","Russel","Andy","Bret","Darrell","Gene","Hardy","Hugh","Jebediah","Jeremiah","Kit","Neil","Terrell","Don","Doug","Hunter","Jared","Jerome","Keith","Manuel","Markus","Otto","Shelby","Stephen","Teppei","Tobias","Wade","Zaiem","Aaron","Alain","Bergin","Bernard","Brent","Corwin","Craig","Delmon","Dunstan","Orestes","Ross","Davian","Calhoun","David","Gabriel","Ryan","Thomas","Travis","Zachary","Anuhea","Barnaby","Claus","Collin","Colson","Dexter","Dillan","Eugine","Farkas","Hisato","Julius","Kenji","Irwin","Lionel","Paul","Richter","Valentino","Donald","Douglas","Kevyn","Chester"],[U.HOOLIGANS]:["Jim & Cas","Rob & Sal"],[U.HOOPSTER]:["Bobby","John","Lamarcus","Derrick","Nicolas"],[U.INFIELDER]:["Alex","Connor","Todd"],[U.JANITOR]:["Caleb","Geoff","Brady","Felix","Orville","Melvin","Shawn"],[U.LINEBACKER]:["Bob","Dan","Jonah"],[U.MAID]:["Belinda","Sophie","Emily","Elena","Clare","Alica","Tanya","Tammy"],[U.MUSICIAN]:["Boris","Preston","Charles","Clyde","Vincent","Dalton","Kirk","Shawn","Fabian","Fernando","Joseph","Marcos","Arturo","Jerry","Lonnie","Tony"],[U.NURSERY_AIDE]:["Autumn","Briana","Leah","Miho","Ethel","Hollie","Ilse","June","Kimya","Rosalyn"],[U.OFFICER]:["Dirk","Keith","Alex","Bobby","Caleb","Danny","Dylan","Thomas","Daniel","Jeff","Braven","Dell","Neagle","Haruki","Mitchell","Raymond"],[U.PARASOL_LADY]:["Angelica","Clarissa","Madeline","Akari","Annabell","Kayley","Rachel","Alexa","Sabrina","April","Gwyneth","Laura","Lumi","Mariah","Melita","Nicole","Tihana","Ingrid","Tyra"],[U.PILOT]:["Chase","Leonard","Ted","Elron","Ewing","Flynn","Winslow"],[U.POKEFAN]:[["Alex","Allan","Brandon","Carter","Colin","Derek","Jeremy","Joshua","Rex","Robert","Trevor","William","Colton","Miguel","Francisco","Kaleb","Leonard","Boone","Elliot","Jude","Norbert","Corey","Gabe","Baxter"],["Beverly","Georgia","Jaime","Ruth","Isabel","Marissa","Vanessa","Annika","Bethany","Kimberly","Meredith","Rebekah","Eleanor","Darcy","Lydia","Sachiko","Abigail","Agnes","Lydie","Roisin","Tara","Carmen","Janet"]],[U.PRESCHOOLER]:[["Billy","Doyle","Evan","Homer","Tully","Albert","Buster","Greg","Ike","Jojo","Tyrone","Adrian","Oliver","Hayden","Hunter","Kaleb","Liam","Dylan"],["Juliet","Mia","Sarah","Wendy","Winter","Chrissy","Eva","Lin","Samantha","Ella","Lily","Natalie","Ailey","Hannah","Malia","Kindra","Nancy"]],[U.PSYCHIC]:[["Fidel","Franklin","Gilbert","Greg","Herman","Jared","Mark","Nathan","Norman","Phil","Richard","Rodney","Cameron","Edward","Fritz","Joshua","Preston","Virgil","William","Alvaro","Blake","Cedric","Keenan","Nicholas","Dario","Johan","Lorenzo","Tyron","Bryce","Corbin","Deandre","Elijah","Kody","Landon","Maxwell","Mitchell","Sterling","Eli","Nelson","Vernon","Gaven","Gerard","Low","Micki","Perry","Rudolf","Tommy","Al","Nandor","Tully","Arthur","Emanuel","Franz","Harry","Paschal","Robert","Sayid","Angelo","Anton","Arin","Avery","Danny","Frasier","Harrison","Jaime","Ross","Rui","Vlad","Mason"],["Alexis","Hannah","Jacki","Jaclyn","Kayla","Maura","Samantha","Alix","Brandi","Edie","Macey","Mariella","Marlene","Laura","Rodette","Abigail","Brittney","Chelsey","Daisy","Desiree","Kendra","Lindsey","Rachael","Valencia","Belle","Cybil","Doreen","Dua","Future","Lin","Madhu","Alia","Ena","Joyce","Lynette","Olesia","Sarah"]],[U.RANGER]:[["Carlos","Jackson","Sebastian","Gav","Lorenzo","Logan","Nicolas","Trenton","Deshawn","Dwayne","Jeffery","Kyler","Taylor","Alain","Claude","Crofton","Forrest","Harry","Jaden","Keith","Lewis","Miguel","Pedro","Ralph","Richard","Bret","Daryl","Eddie","Johan","Leaf","Louis","Maxwell","Parker","Rick","Steve","Bjorn","Chaise","Dean","Lee","Maurice","Nash","Ralf","Reed","Shinobu","Silas"],["Catherine","Jenna","Sophia","Merdith","Nora","Beth","Chelsea","Katelyn","Madeline","Allison","Ashlee","Felicia","Krista","Annie","Audra","Brenda","Chloris","Eliza","Heidi","Irene","Mary","Mylene","Shanti","Shelly","Thalia","Anja","Briana","Dianna","Elaine","Elle","Hillary","Katie","Lena","Lois","Malory","Melita","Mikiko","Naoko","Serenity","Ambre","Brooke","Clementine","Melina","Petra","Twiggy"]],[U.RICH]:[["Alfred","Edward","Gregory","Preston","Thomas","Tucker","Walter","Clifford","Everett","Micah","Nate","Pierre","Terrance","Arthur","Brooks","Emanuel","Lamar","Jeremy","Leonardo","Milton","Frederic","Renaud","Robert","Yan","Daniel","Sheldon","Stonewall","Gerald","Ronald","Smith","Stanley","Reginald","Orson","Wilco","Caden","Glenn"],["Rebecca","Reina","Cassandra","Emilia","Grace","Marian","Elizabeth","Kathleen","Sayuri","Caroline","Judy"]],[U.RICH_KID]:[["Garret","Winston","Dawson","Enrique","Jason","Roman","Trey","Liam","Anthony","Brad","Cody","Manuel","Martin","Pierce","Rolan","Keenan","Filbert","Antoin","Cyus","Diek","Dugo","Flitz","Jurek","Lond","Perd","Quint","Basto","Benit","Brot","Denc","Guyit","Marcon","Perc","Puros","Roex","Sainz","Symin","Tark","Venak"],["Anette","Brianna","Cindy","Colleen","Daphne","Elizabeth","Naomi","Sarah","Charlotte","Gillian","Jacki","Lady","Melissa","Celeste","Colette","Elizandra","Isabel","Lynette","Magnolia","Sophie","Lina","Dulcie","Auro","Brin","Caril","Eloos","Gwin","Illa","Kowly","Rima","Ristin","Vesey","Brena","Deasy","Denslon","Kylet","Nemi","Rene","Sanol","Stouner","Sturk","Talmen","Zoila"]],[U.ROUGHNECK]:["Camron","Corey","Gabriel","Isaiah","Jamal","Koji","Luke","Paxton","Raul","Zeek","Kirby","Chance","Dave","Fletcher","Johnny","Reese","Joey","Ricky","Silvester","Martin"],[U.SAILOR]:["Alberto","Bost","Brennan","Brenden","Claude","Cory","Damian","Dirk","Duncan","Dwayne","Dylan","Eddie","Edmond","Elijah","Ernest","Eugene","Garrett","Golos","Gratin","Grestly","Harry","Hols","Hudson","Huey","Jebol","Jeff","Leonald","Luther","Kelvin","Kenneth","Kent","Knook","Marc","Mifis","Monar","Morkor","Ordes","Oxlin","Parker","Paul","Philip","Roberto","Samson","Skyler","Stanly","Tebu","Terrell","Trevor","Yasu","Zachariah"],[U.SCIENTIST]:[["Jed","Marc","Mitch","Rich","Ross","Beau","Braydon","Connor","Ed","Ivan","Jerry","Jose","Joshua","Parker","Rodney","Taylor","Ted","Travis","Zackery","Darrius","Emilio","Fredrick","Shaun","Stefano","Travon","Daniel","Garett","Gregg","Linden","Lowell","Trenton","Dudley","Luke","Markus","Nathan","Orville","Randall","Ron","Ronald","Simon","Steve","William","Franklin","Clarke","Jacques","Terrance","Ernst","Justus","Ikaika","Jayson","Kyle","Reid","Tyrone","Adam","Albert","Alphonse","Cory","Donnie","Elton","Francis","Gordon","Herbert","Humphrey","Jordan","Julian","Keaton","Levi","Melvin","Murray","West","Craig","Coren","Dubik","Kotan","Lethco","Mante","Mort","Myron","Odlow","Ribek","Roeck","Vogi","Vonder","Zogo","Doimo","Doton","Durel","Hildon","Kukla","Messa","Nanot","Platen","Raburn","Reman","Acrod","Coffy","Elrok","Foss","Hardig","Hombol","Hospel","Kaller","Klots","Krilok","Limar","Loket","Mesak","Morbit","Newin","Orill","Tabor","Tekot"],["Blythe","Chan","Kathrine","Marie","Maria","Naoko","Samantha","Satomi","Shannon","Athena","Caroline","Lumi","Lumina","Marissa","Sonia"]],[U.SMASHER]:["Aspen","Elena","Mari","Amy","Lizzy"],[U.SNOW_WORKER]:[["Braden","Brendon","Colin","Conrad","Dillan","Gary","Gerardo","Holden","Jackson","Mason","Quentin","Willy","Noel","Arnold","Brady","Brand","Cairn","Cliff","Don","Eddie","Felix","Filipe","Glenn","Gus","Heath","Matthew","Patton","Rich","Rob","Ryan","Scott","Shelby","Sterling","Tyler","Victor","Zack","Friedrich","Herman","Isaac","Leo","Maynard","Mitchell","Morgann","Nathan","Niel","Pasqual","Paul","Tavarius","Tibor","Dimitri","Narek","Yusif","Frank","Jeff","Vaclav","Ovid","Francis","Keith","Russel","Sangon","Toway","Bomber","Chean","Demit","Hubor","Kebile","Laber","Ordo","Retay","Ronix","Wagel","Dobit","Kaster","Lobel","Releo","Saken","Rustix"],["Georgia","Sandra","Yvonne"]],[U.STRIKER]:["Marco","Roberto","Tony"],[U.SCHOOL_KID]:[["Alan","Billy","Chad","Danny","Dudley","Jack","Joe","Johnny","Kipp","Nate","Ricky","Tommy","Jerry","Paul","Ted","Chance","Esteban","Forrest","Harrison","Connor","Sherman","Torin","Travis","Al","Carter","Edgar","Jem","Sammy","Shane","Shayne","Alvin","Keston","Neil","Seymour","William","Carson","Clark","Nolan"],["Georgia","Karen","Meiko","Christine","Mackenzie","Tiera","Ann","Gina","Lydia","Marsha","Millie","Sally","Serena","Silvia","Alberta","Cassie","Mara","Rita","Georgie","Meena","Nitzel"]],[U.SWIMMER]:[["Berke","Cameron","Charlie","George","Harold","Jerome","Kirk","Mathew","Parker","Randall","Seth","Simon","Tucker","Austin","Barry","Chad","Cody","Darrin","David","Dean","Douglas","Franklin","Gilbert","Herman","Jack","Luis","Matthew","Reed","Richard","Rodney","Roland","Spencer","Stan","Tony","Clarence","Declan","Dominik","Harrison","Kevin","Leonardo","Nolen","Pete","Santiago","Axle","Braden","Finn","Garrett","Mymo","Reece","Samir","Toby","Adrian","Colton","Dillon","Erik","Evan","Francisco","Glenn","Kurt","Oscar","Ricardo","Sam","Sheltin","Troy","Vincent","Wade","Wesley","Duane","Elmo","Esteban","Frankie","Ronald","Tyson","Bart","Matt","Tim","Wright","Jeffery","Kyle","Alessandro","Estaban","Kieran","Ramses","Casey","Dakota","Jared","Kalani","Keoni","Lawrence","Logan","Robert","Roddy","Yasu","Derek","Jacob","Bruce","Clayton"],["Briana","Dawn","Denise","Diana","Elaine","Kara","Kaylee","Lori","Nicole","Nikki","Paula","Susie","Wendy","Alice","Beth","Beverly","Brenda","Dana","Debra","Grace","Jenny","Katie","Laurel","Linda","Missy","Sharon","Tanya","Tara","Tisha","Carlee","Imani","Isabelle","Kyla","Sienna","Abigail","Amara","Anya","Connie","Maria","Melissa","Nora","Shirley","Shania","Tiffany","Aubree","Cassandra","Claire","Crystal","Erica","Gabrielle","Haley","Jessica","Joanna","Lydia","Mallory","Mary","Miranda","Paige","Sophia","Vanessa","Chelan","Debbie","Joy","Kendra","Leona","Mina","Caroline","Joyce","Larissa","Rebecca","Tyra","Dara","Desiree","Kaoru","Ruth","Coral","Genevieve","Isla","Marissa","Romy","Sheryl","Alexandria","Alicia","Chelsea","Jade","Kelsie","Laura","Portia","Shelby","Sara","Tiare","Kyra","Natasha","Layla","Scarlett","Cora"]],[U.TWINS]:["Amy & May","Jo & Zoe","Meg & Peg","Ann & Anne","Lea & Pia","Amy & Liv","Gina & Mia","Miu & Yuki","Tori & Tia","Eli & Anne","Jen & Kira","Joy & Meg","Kiri & Jan","Miu & Mia","Emma & Lil","Liv & Liz","Teri & Tia","Amy & Mimi","Clea & Gil","Day & Dani","Kay & Tia","Tori & Til","Saya & Aya","Emy & Lin","Kumi & Amy","Mayo & May","Ally & Amy","Lia & Lily","Rae & Ula","Sola & Ana","Tara & Val","Faith & Joy","Nana & Nina"],[U.VETERAN]:[["Armando","Brenden","Brian","Clayton","Edgar","Emanuel","Grant","Harlan","Terrell","Arlen","Chester","Hugo","Martell","Ray","Shaun","Abraham","Carter","Claude","Jerry","Lucius","Murphy","Rayne","Ron","Sinan","Sterling","Vincent","Zach","Gerard","Gilles","Louis","Timeo","Akira","Don","Eric","Harry","Leon","Roger","Angus","Aristo","Brone","Johnny"],["Julia","Karla","Kim","Sayuri","Tiffany","Cathy","Cecile","Chloris","Denae","Gina","Maya","Oriana","Portia","Rhona","Rosaline","Catrina","Inga","Trisha","Heather","Lynn","Sheri","Alonsa","Ella","Leticia","Kiara"]],[U.WAITER]:[["Bert","Clint","Maxwell","Lou"],["Kati","Aurora","Bonita","Flo","Tia","Jan","Olwen","Paget","Paula","Talia"]],[U.WORKER]:[["Braden","Brendon","Colin","Conrad","Dillan","Gary","Gerardo","Holden","Jackson","Mason","Quentin","Willy","Noel","Arnold","Brady","Brand","Cairn","Cliff","Don","Eddie","Felix","Filipe","Glenn","Gus","Heath","Matthew","Patton","Rich","Rob","Ryan","Scott","Shelby","Sterling","Tyler","Victor","Zack","Friedrich","Herman","Isaac","Leo","Maynard","Mitchell","Morgann","Nathan","Niel","Pasqual","Paul","Tavarius","Tibor","Dimitri","Narek","Yusif","Frank","Jeff","Vaclav","Ovid","Francis","Keith","Russel","Sangon","Toway","Bomber","Chean","Demit","Hubor","Kebile","Laber","Ordo","Retay","Ronix","Wagel","Dobit","Kaster","Lobel","Releo","Saken","Rustix"],["Georgia","Sandra","Yvonne"]],[U.YOUNGSTER]:[["Albert","Gordon","Ian","Jason","Jimmy","Mikey","Owen","Samuel","Warren","Allen","Ben","Billy","Calvin","Dillion","Eddie","Joey","Josh","Neal","Timmy","Tommy","Breyden","Deandre","Demetrius","Dillon","Jaylen","Johnson","Shigenobu","Chad","Cole","Cordell","Dan","Dave","Destin","Nash","Tyler","Yasu","Austin","Dallas","Darius","Donny","Jonathon","Logan","Michael","Oliver","Sebastian","Tristan","Wayne","Norman","Roland","Regis","Abe","Astor","Keita","Kenneth","Kevin","Kyle","Lester","Masao","Nicholas","Parker","Wes","Zachary","Cody","Henley","Jaye","Karl","Kenny","Masahiro","Pedro","Petey","Sinclair","Terrell","Waylon","Aidan","Anthony","David","Jacob","Jayden","Cutler","Ham","Caleb","Kai","Honus","Kenway","Bret","Chris","Cid","Dennis","Easton","Ken","Robby","Ronny","Shawn","Benjamin","Jake","Travis","Adan","Aday","Beltran","Elian","Hernan","Julen","Luka","Roi","Bernie","Dustin","Jonathan","Wyatt"],["Alice","Bridget","Carrie","Connie","Dana","Ellen","Krise","Laura","Linda","Michelle","Shannon","Andrea","Crissy","Janice","Robin","Sally","Tiana","Haley","Ali","Ann","Dalia","Dawn","Iris","Joana","Julia","Kay","Lisa","Megan","Mikaela","Miriam","Paige","Reli","Blythe","Briana","Caroline","Cassidy","Kaitlin","Madeline","Molly","Natalie","Samantha","Sarah","Cathy","Dye","Eri","Eva","Fey","Kara","Lurleen","Maki","Mali","Maya","Miki","Sibyl","Daya","Diana","Flo","Helia","Henrietta","Isabel","Mai","Persephone","Serena","Anna","Charlotte","Elin","Elsa","Lise","Sara","Suzette","Audrey","Emmy","Isabella","Madison","Rika","Rylee","Salla","Ellie","Alexandra","Amy","Lass","Brittany","Chel","Cindy","Dianne","Emily","Emma","Evelyn","Hana","Harleen","Hazel","Jocelyn","Katrina","Kimberly","Lina","Marge","Mila","Mizuki","Rena","Sal","Satoko","Summer","Tomoe","Vicky","Yue","Yumi","Lauren","Rei","Riley","Lois","Nancy","Tammy","Terry"]],[U.HEX_MANIAC]:["Kindra","Patricia","Tammy","Tasha","Valerie","Alaina","Kathleen","Leah","Makie","Sylvia","Anina","Arachna","Carrie","Desdemona","Josette","Luna","Melanie","Osanna","Raziah"]},BE="mysteryEncounters/globalTradeSystem",aQ=512,iQ=4096,rQ={1:[e.RATTATA,e.PIDGEY,e.WEEDLE],2:[e.SENTRET,e.HOOTHOOT,e.LEDYBA],3:[e.POOCHYENA,e.ZIGZAGOON,e.TAILLOW],4:[e.BIDOOF,e.STARLY,e.KRICKETOT],5:[e.PATRAT,e.PURRLOIN,e.PIDOVE],6:[e.BUNNELBY,e.LITLEO,e.SCATTERBUG],7:[e.PIKIPEK,e.YUNGOOS,e.ROCKRUFF],8:[e.SKWOVET,e.WOOLOO,e.ROOKIDEE],9:[e.LECHONK,e.FIDOUGH,e.TAROUNTULA]},LQ=[e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.ROARING_MOON,e.WALKING_WAKE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.IRON_VALIANT,e.IRON_LEAVES,e.IRON_BOULDER,e.IRON_CROWN],NQ=FA.withEncounterType(Je.GLOBAL_TRADE_SYSTEM).withEncounterTier(wt.COMMON).withSceneWaveRangeRequirement(...ZA).withAutoHideIntroVisuals(!1).withIntroSpriteConfigs([{spriteKey:"global_trade_system",fileRoot:"mystery-encounters",hasShadow:!0,disableAnimation:!0,x:3,y:5,yShadow:1}]).withIntroDialogue([{text:`${BE}:intro`}]).setLocalizationKey(`${BE}`).withTitle(`${BE}:title`).withDescription(`${BE}:description`).withQuery(`${BE}:query`).withOnInit(()=>{const E=n.currentBattle.mysteryEncounter;let A;n.musicPreference===rr.GENFIVE?(A="mystery_encounter_gen_5_gts",n.loadBgm(A,`${A}.mp3`)):(A="mystery_encounter_gen_6_gts",n.loadBgm(A,`${A}.mp3`));const s=TQ();return E.misc={tradeOptionsMap:s,bgmKey:A},!0}).withOnVisualsStart(()=>(n.fadeAndSwitchBgm(n.currentBattle.mysteryEncounter.misc.bgmKey),!0)).withOption(pt.newOptionWithMode(ct.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${BE}:option.1.label`,buttonTooltip:`${BE}:option.1.tooltip`,secondOptionPrompt:`${BE}:option.1.trade_options_prompt`}).withPreOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter;return zE(N(s=>{const a=E.misc.tradeOptionsMap.get(s.id);return a?a.map(i=>({label:i.getNameToRender(),handler:N(()=>(E.setDialogueToken("tradedPokemon",s.getNameToRender()),E.setDialogueToken("received",i.getNameToRender()),E.misc.tradedPokemon=s,E.misc.receivedPokemon=i,!0),"handler"),onHover:N(()=>{const L=i.species.forms&&i.species.forms.length>i.formIndex?i.species.forms[i.formIndex].formName:null,o=u.t("pokemonInfoContainer:ability")+" "+i.getAbility().name+(i.getGender()!==at.GENDERLESS?"     |     "+u.t("pokemonInfoContainer:gender")+" "+SL(i.getGender()):""),l=u.t("pokemonInfoContainer:nature")+" "+$O(i.getNature())+(L?"     |     "+u.t("pokemonInfoContainer:form")+" "+L:"");qt(`${o}
${l}`,0,0,!1)},"onHover")})):[]},"onPokemonSelected"))}).withOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter,A=E.misc.tradedPokemon,s=E.misc.receivedPokemon,R=A.getHeldItems().filter(L=>!(L instanceof UR)&&!(L instanceof Di)),a=p0();E.setDialogueToken("tradeTrainerName",a.trim()),n.removePokemonFromPlayerParty(A,!1),s.passive=A.passive,s.pokeball=_A(4);const i=new hs(s),r=n.addPlayerPokemon(s.species,s.level,i.abilityIndex,i.formIndex,i.gender,i.shiny,i.variant,i.ivs,i.nature,i);n.getPlayerParty().push(r),await r.loadAssets();for(const L of R)L.pokemonId=r.id,n.addModifier(L,!0,!1,!1,!0);await e6(),await A6(A,r),await qt(`${BE}:trade_received`,null,0,!0,4e3),n.playBgm(E.misc.bgmKey),await Pb(r),await t6(),A.destroy(),ft(!0)}).build()).withOption(pt.newOptionWithMode(ct.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${BE}:option.2.label`,buttonTooltip:`${BE}:option.2.tooltip`}).withPreOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter;return zE(N(s=>{const R=c8(n.getPlayerParty().map(r=>r.species)),a=new xs(R,s.level,lt.NONE,!1);if(!a.shiny){const r=new Et(aQ);n.eventManager.isEventActive()&&(r.value*=n.eventManager.getShinyMultiplier()),n.applyModifiers(ci,!0,r);const L=Math.min(r.value,iQ);a.trySetShinySeed(L,!1)}const i=a.species.ability2?2:1;if(a.species.abilityHidden&&a.abilityIndex<i){const r=new Et(64);n.applyModifiers(Gn,!0,r),!ce(r.value)&&(a.abilityIndex=i)}if(!a.shiny&&(!a.species.abilityHidden||a.abilityIndex<i)){const r=a.getEggMoves();if(r){const L=r[ce(3)];if(!a.moveset.some(o=>(o==null?void 0:o.moveId)===L))if(a.moveset.length<4)a.moveset.push(new nt(L));else{const o=ce(4);a.moveset[o]=new nt(L)}}}E.setDialogueToken("tradedPokemon",s.getNameToRender()),E.setDialogueToken("received",a.getNameToRender()),E.misc.tradedPokemon=s,E.misc.receivedPokemon=a},"onPokemonSelected"))}).withOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter,A=E.misc.tradedPokemon,s=E.misc.receivedPokemon,R=A.getHeldItems().filter(L=>!(L instanceof UR)&&!(L instanceof Di)),a=p0();E.setDialogueToken("tradeTrainerName",a.trim()),n.removePokemonFromPlayerParty(A,!1),s.passive=A.passive,s.pokeball=_A(4);const i=new hs(s),r=n.addPlayerPokemon(s.species,s.level,i.abilityIndex,i.formIndex,i.gender,i.shiny,i.variant,i.ivs,i.nature,i);n.getPlayerParty().push(r),await r.loadAssets();for(const L of R)L.pokemonId=r.id,n.addModifier(L,!0,!1,!1,!0);await e6(),await A6(A,r),await qt(`${BE}:trade_received`,null,0,!0,4e3),n.playBgm(E.misc.bgmKey),await Pb(r),await t6(),A.destroy(),ft(!0)}).build()).withOption(pt.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${BE}:option.3.label`,buttonTooltip:`${BE}:option.3.tooltip`,secondOptionPrompt:`${BE}:option.3.trade_options_prompt`}).withPreOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter;return zE(N(R=>R.getHeldItems().filter(i=>i.isTransferable).map(i=>({label:i.type.name,handler:N(()=>(E.setDialogueToken("chosenItem",i.type.name),E.misc.chosenModifier=i,E.misc.chosenPokemon=R,!0),"handler")})),"onPokemonSelected"),void 0,N(R=>R.getHeldItems().filter(i=>i.isTransferable).length>0?null:mA(`${BE}:option.3.invalid_selection`)??null,"selectableFilter"))}).withOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter,A=E.misc.chosenModifier,s=n.getPlayerParty(),R=E.misc.chosenPokemon,a=A.type.withTierFromPool(HE.PLAYER,s);let i=a.tier??w.GREAT;a.id==="WHITE_HERB"?i=w.GREAT:a.id==="LUCKY_EGG"?i=w.ULTRA:a.id==="GOLDEN_EGG"&&(i=w.ROGUE),i<w.MASTER&&i++,Na(s,HE.PLAYER,0);let r=null;for(;!r||r.type.id.includes("TM_");)r=B1(1,s,[],{guaranteedModifierTiers:[i],allowLuckUpgrades:!1})[0];E.setDialogueToken("itemName",r.type.name),Ft({guaranteedModifierTypeOptions:[r],fillRemaining:!1}),R.loseHeldItem(A,!1),await n.updateModifiers(!0,!0);const L=p0();E.setDialogueToken("tradeTrainerName",L.trim()),await qt(`${BE}:item_trade_selected`),ft()}).build()).withSimpleOption({buttonLabel:`${BE}:option.4.label`,buttonTooltip:`${BE}:option.4.tooltip`,selected:[{text:`${BE}:option.4.selected`}]},async()=>(ft(!0),!0)).build();function TQ(){const E=new Map,A=n.getPlayerParty().map(s=>s.species);return n.getPlayerParty().forEach(s=>{if(s.species.legendary||s.species.subLegendary||s.species.mythical){const R=s.species.generation,a=rQ[R].map(i=>{const r=ke(i);return new xs(r,5,lt.NONE,!1)});E.set(s.id,a)}else{const R=s.calculateBaseStats().reduce((i,r)=>i+r,0),a=[];for(let i=0;i<3;i++){const r=c8(A,R);A.push(r),a.push(r)}E.set(s.id,a.map(i=>new xs(i,s.level,lt.NONE,!1)))}}),E}N(TQ,"getPokemonTradeOptions");function c8(E,A){let s,R=9999,a=0;for(A&&(R=A+100,a=A-100);ve(s);){let i=wR.filter(r=>{const L=r.legendary||r.subLegendary||r.mythical,o=r.getBaseStatTotal(),l=o>=a&&o<=R;return!L&&l&&!LQ.includes(r.speciesId)});if((i==null?void 0:i.length)>20)for(i=CO(i),s=i.pop();ve(s)||E.includes(s);)s=i.pop();else a-=10,R+=10}return s}N(c8,"generateTradeOption");function e6(){return new Promise(E=>{const A=n.add.container(0,-n.game.canvas.height/6);A.setName("Trade Background");const s=n.add.rectangle(0,0,n.game.canvas.width/6,n.game.canvas.height/6,0);s.setName("Black Background"),s.setOrigin(0,0),s.setVisible(!1),A.add(s);const R=n.add.image(0,0,"default_bg");R.setName("Trade Background Image"),R.setOrigin(0,0),A.add(R),n.fieldUI.add(A),n.fieldUI.bringToTop(A),A.setVisible(!0),A.alpha=0,n.tweens.add({targets:A,alpha:1,duration:500,ease:"Sine.easeInOut",onComplete:N(()=>{E()},"onComplete")})})}N(e6,"showTradeBackground");function t6(){return new Promise(E=>{const A=n.fieldUI.getByName("Trade Background");n.tweens.add({targets:A,alpha:0,duration:1e3,ease:"Sine.easeInOut",onComplete:N(()=>{n.fieldUI.remove(A,!0),E()},"onComplete")})})}N(t6,"hideTradeBackground");function A6(E,A){return new Promise(s=>{const R=n.fieldUI.getByName("Trade Background"),a=R.getByName("Trade Background Image");let i,r,L,o;const l=N(()=>{const P=n.addPokemonSprite(E,a.displayWidth/2,a.displayHeight/2,"pkmn__sub");return P.setPipeline(n.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),P},"getPokemonSprite");R.add(i=l()),R.add(r=l()),R.add(L=l()),R.add(o=l()),i.setAlpha(0),r.setAlpha(0),r.setTintFill(zO(E.pokeball)),L.setVisible(!1),o.setVisible(!1),o.setTintFill(zO(A.pokeball)),[i,r].map(P=>{const h=E.getSpriteKey(!0);try{P.play(h)}catch(H){console.error(`Failed to play animation for ${h}`,H)}P.setPipeline(n.spritePipeline,{tone:[0,0,0,0],hasShadow:!1,teraColor:yR(E.getTeraType())}),P.setPipelineData("ignoreTimeTint",!0),P.setPipelineData("spriteKey",E.getSpriteKey()),P.setPipelineData("shiny",E.shiny),P.setPipelineData("variant",E.variant),["spriteColors","fusionSpriteColors"].map(H=>{var d;(d=E.summonData)!=null&&d.speciesForm&&(H+="Base"),P.pipelineData[H]=E.getSprite().pipelineData[H]})}),[L,o].map(P=>{const h=A.getSpriteKey(!0);try{P.play(h)}catch(H){console.error(`Failed to play animation for ${h}`,H)}P.setPipeline(n.spritePipeline,{tone:[0,0,0,0],hasShadow:!1,teraColor:yR(E.getTeraType())}),P.setPipelineData("ignoreTimeTint",!0),P.setPipelineData("spriteKey",A.getSpriteKey()),P.setPipelineData("shiny",A.shiny),P.setPipelineData("variant",A.variant),["spriteColors","fusionSpriteColors"].map(H=>{var d;(d=A.summonData)!=null&&d.speciesForm&&(H+="Base"),P.pipelineData[H]=A.getSprite().pipelineData[H]})});const C=DO(E.pokeball),M=n.add.sprite(a.displayWidth/2,a.displayHeight/2,"pb",C);M.setVisible(!1),R.add(M);const D=DO(A.pokeball),_=n.add.sprite(a.displayWidth/2,a.displayHeight/2,"pb",D);_.setVisible(!1),R.add(_),n.tweens.add({targets:i,alpha:1,ease:"Cubic.easeInOut",duration:500,onComplete:N(async()=>{n.fadeOutBgm(1e3,!1),await qt(`${BE}:pokemon_trade_selected`),E.cry(),n.playBgm("evolution"),await qt(`${BE}:pokemon_trade_goodbye`),M.setAlpha(0),M.setVisible(!0),n.tweens.add({targets:M,alpha:1,ease:"Cubic.easeInOut",duration:250,onComplete:N(()=>{M.setTexture("pb",`${C}_opening`),n.time.delayedCall(17,()=>M.setTexture("pb",`${C}_open`)),n.playSound("se/pb_rel"),r.setVisible(!0),n.tweens.add({targets:[r,i],duration:500,ease:"Sine.easeIn",scale:.25,onComplete:N(()=>{i.setVisible(!1),M.setTexture("pb",`${C}_opening`),r.setVisible(!1),n.playSound("se/pb_catch"),n.time.delayedCall(17,()=>M.setTexture("pb",`${C}`)),n.tweens.add({targets:M,y:"+=10",duration:200,delay:250,ease:"Cubic.easeIn",onComplete:N(()=>{n.playSound("se/pb_bounce_1"),n.tweens.add({targets:M,y:"-=100",duration:200,delay:1e3,ease:"Cubic.easeInOut",onStart:N(()=>{n.playSound("se/pb_throw")},"onStart"),onComplete:N(async()=>{await SQ(i,L),await oQ(A,L,o,_,D),s()},"onComplete")})},"onComplete")})},"onComplete")})},"onComplete")})},"onComplete")})})}N(A6,"doPokemonTradeSequence");function SQ(E,A){return new Promise(s=>{const R=n.fieldUI.getByName("Trade Background"),a=R.getByName("Trade Background Image");R.getByName("Black Background").setVisible(!0),R.bringToTop(E),R.bringToTop(A),E.x=a.displayWidth/4,E.y=200,E.scale=1,E.setVisible(!0),A.x=a.displayWidth*3/4,A.y=-200,A.scale=1,A.setVisible(!0);const r=300,L=750,o=1e3;n.tweens.add({targets:a,alpha:0,ease:"Cubic.easeInOut",duration:r,onComplete:N(()=>{n.tweens.add({targets:[A,E],y:a.displayWidth/2-100,ease:"Cubic.easeInOut",duration:o*3,onComplete:N(()=>{n.tweens.add({targets:A,x:a.displayWidth/4,ease:"Cubic.easeInOut",duration:o/2,delay:L}),n.tweens.add({targets:E,x:a.displayWidth*3/4,ease:"Cubic.easeInOut",duration:o/2,delay:L,onComplete:N(()=>{n.tweens.add({targets:A,y:"+=200",ease:"Cubic.easeInOut",duration:o*2,delay:L}),n.tweens.add({targets:E,y:"-=200",ease:"Cubic.easeInOut",duration:o*2,delay:L,onComplete:N(()=>{n.tweens.add({targets:a,alpha:1,ease:"Cubic.easeInOut",duration:r,onComplete:N(()=>{s()},"onComplete")})},"onComplete")})},"onComplete")})},"onComplete")})},"onComplete")})})}N(SQ,"doPokemonTradeFlyBySequence");function oQ(E,A,s,R,a){return new Promise(i=>{const r=n.fieldUI.getByName("Trade Background"),L=r.getByName("Trade Background Image");A.setVisible(!1),A.x=L.displayWidth/2,A.y=L.displayHeight/2,s.setVisible(!1),s.x=L.displayWidth/2,s.y=L.displayHeight/2,R.setVisible(!0),R.x=L.displayWidth/2,R.y=L.displayHeight/2-100;let o;E.shiny&&(o=n.add.sprite(A.x,A.y,"shiny"),o.setVisible(!1),r.add(o));const l=1e3;n.playSound("se/pb_throw"),n.tweens.add({targets:R,y:"+=100",ease:"Cubic.easeInOut",duration:l,onComplete:N(()=>{n.playSound("se/pb_bounce_1"),n.time.delayedCall(100,()=>n.playSound("se/pb_bounce_1")),n.time.delayedCall(2e3,()=>{n.playSound("se/pb_rel"),n.fadeOutBgm(500,!1),E.cry(),s.scale=.25,s.alpha=1,A.setVisible(!0),A.scale=.25,s.alpha=1,s.setVisible(!0),R.setTexture("pb",`${a}_opening`),n.time.delayedCall(17,()=>R.setTexture("pb",`${a}_open`)),n.tweens.add({targets:A,duration:250,ease:"Sine.easeOut",scale:1}),n.tweens.add({targets:s,duration:250,ease:"Sine.easeOut",scale:1,alpha:0,onComplete:N(()=>{E.shiny&&n.time.delayedCall(500,()=>{gM(o,E.variant)}),R.destroy(),n.time.delayedCall(2e3,()=>i())},"onComplete")})})},"onComplete")})})}N(oQ,"doTradeReceivedSequence");function p0(){const E=Object.keys(kL).length;let A=kL[_A(E)+1];for(;!A;)A=kL[_A(E)+1];const s=A[_A(A.length)],a=(s instanceof Array?s[_A(s.length)]:s).split(" & ");return a[_A(a.length)]}N(p0,"generateRandomTraderName");const EA="mysteryEncounters/theExpertPokemonBreeder",pO="trainerNames:expert_pokemon_breeder",xO=45,WO=60,bO=75,lQ=20,$K=class $K{constructor(A,s){this.species=A,this.evolution=s}};N($K,"BreederSpeciesEvolution");let gA=$K;const CQ=[[e.MUNCHLAX,new gA(e.SNORLAX,WO)],[e.HAPPINY,new gA(e.CHANSEY,xO),new gA(e.BLISSEY,bO)],[e.MAGBY,new gA(e.MAGMAR,xO),new gA(e.MAGMORTAR,bO)],[e.ELEKID,new gA(e.ELECTABUZZ,xO),new gA(e.ELECTIVIRE,bO)],[e.RIOLU,new gA(e.LUCARIO,WO)],[e.BUDEW,new gA(e.ROSELIA,xO),new gA(e.ROSERADE,bO)],[e.TOXEL,new gA(e.TOXTRICITY,WO)],[e.MIME_JR,new gA(e.GALAR_MR_MIME,xO),new gA(e.MR_RIME,bO)]],UQ=[[e.PICHU,new gA(e.PIKACHU,xO),new gA(e.RAICHU,bO)],[e.PICHU,new gA(e.PIKACHU,xO),new gA(e.ALOLA_RAICHU,bO)],[e.SMOOCHUM,new gA(e.JYNX,WO)],[e.TYROGUE,new gA(e.HITMONLEE,WO)],[e.TYROGUE,new gA(e.HITMONCHAN,WO)],[e.TYROGUE,new gA(e.HITMONTOP,WO)],[e.IGGLYBUFF,new gA(e.JIGGLYPUFF,xO),new gA(e.WIGGLYTUFF,bO)],[e.AZURILL,new gA(e.MARILL,xO),new gA(e.AZUMARILL,bO)],[e.WYNAUT,new gA(e.WOBBUFFET,WO)],[e.CHINGLING,new gA(e.CHIMECHO,WO)],[e.BONSLY,new gA(e.SUDOWOODO,WO)],[e.MANTYKE,new gA(e.MANTINE,WO)]],uQ=FA.withEncounterType(Je.THE_EXPERT_POKEMON_BREEDER).withEncounterTier(wt.ULTRA).withSceneWaveRangeRequirement(...ZA).withScenePartySizeRequirement(4,6,!0).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${EA}:intro`},{speaker:pO,text:`${EA}:intro_dialogue`}]).withOnInit(()=>{const E=n.currentBattle.mysteryEncounter,A=n.currentBattle.waveIndex;E.enemyPartyConfigs=[DQ()];const s=A<xO?e.CLEFFA:A<bO?e.CLEFAIRY:e.CLEFABLE;E.spriteConfigs=[{spriteKey:s.toString(),fileRoot:"pokemon",hasShadow:!0,repeat:!0,x:14,y:-2,yShadow:-2},{spriteKey:"expert_pokemon_breeder",fileRoot:"trainer",hasShadow:!0,x:-14,y:4,yShadow:2}];let R=n.getPlayerParty().slice(0);R=R.filter(H=>H.isAllowedInBattle()).sort((H,d)=>H.friendship-d.friendship);const a=R[0],i=R[1],r=R[2];E.setDialogueToken("pokemon1Name",a.getNameToRender()),E.setDialogueToken("pokemon2Name",i.getNameToRender()),E.setDialogueToken("pokemon3Name",r.getNameToRender());const[L,o]=W0(a);let l=mA(`${EA}:option.1.tooltip_base`);if(o>0){const H=u.t(`${EA}:numEggs`,{count:o,rarity:u.t("egg:greatTier")});l+=u.t(`${EA}:eggs_tooltip`,{eggs:H}),E.setDialogueToken("pokemon1RareEggs",H)}if(L>0){const H=u.t(`${EA}:numEggs`,{count:L,rarity:u.t("egg:defaultTier")});l+=u.t(`${EA}:eggs_tooltip`,{eggs:H}),E.setDialogueToken("pokemon1CommonEggs",H)}E.options[0].dialogue.buttonTooltip=l;const[C,M]=W0(i);let D=mA(`${EA}:option.2.tooltip_base`);if(M>0){const H=u.t(`${EA}:numEggs`,{count:M,rarity:u.t("egg:greatTier")});D+=u.t(`${EA}:eggs_tooltip`,{eggs:H}),E.setDialogueToken("pokemon2RareEggs",H)}if(C>0){const H=u.t(`${EA}:numEggs`,{count:C,rarity:u.t("egg:defaultTier")});D+=u.t(`${EA}:eggs_tooltip`,{eggs:H}),E.setDialogueToken("pokemon2CommonEggs",H)}E.options[1].dialogue.buttonTooltip=D;const[_,P]=W0(r);let h=mA(`${EA}:option.3.tooltip_base`);if(P>0){const H=u.t(`${EA}:numEggs`,{count:P,rarity:u.t("egg:greatTier")});h+=u.t(`${EA}:eggs_tooltip`,{eggs:H}),E.setDialogueToken("pokemon3RareEggs",H)}if(_>0){const H=u.t(`${EA}:numEggs`,{count:_,rarity:u.t("egg:defaultTier")});h+=u.t(`${EA}:eggs_tooltip`,{eggs:H}),E.setDialogueToken("pokemon3CommonEggs",H)}return E.options[2].dialogue.buttonTooltip=h,E.misc={pokemon1:a,pokemon1CommonEggs:L,pokemon1RareEggs:o,pokemon2:i,pokemon2CommonEggs:C,pokemon2RareEggs:M,pokemon3:r,pokemon3CommonEggs:_,pokemon3RareEggs:P},!0}).setLocalizationKey(`${EA}`).withTitle(`${EA}:title`).withDescription(`${EA}:description`).withQuery(`${EA}:query`).withOption(pt.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${EA}:option.1.label`,selected:[{speaker:pO,text:`${EA}:option.selected`}]}).withOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter,A=E.enemyPartyConfigs[0],{pokemon1:s,pokemon1CommonEggs:R,pokemon1RareEggs:a}=E.misc;E.misc.chosenPokemon=s,E.setDialogueToken("chosenPokemon",s.getNameToRender());const i=Y0(R,a);Ft({guaranteedModifierTypeFuncs:[J.SOOTHE_BELL],fillRemaining:!0},i,()=>v0()),y0(E,s),E.dialogue.outro=[{speaker:pO,text:`${EA}:outro`}],E.dialogueTokens.hasOwnProperty("pokemon1CommonEggs")&&E.dialogue.outro.push({text:u.t(`${EA}:gained_eggs`,{numEggs:E.dialogueTokens.pokemon1CommonEggs})}),E.dialogueTokens.hasOwnProperty("pokemon1RareEggs")&&E.dialogue.outro.push({text:u.t(`${EA}:gained_eggs`,{numEggs:E.dialogueTokens.pokemon1RareEggs})}),E.onGameOver=w0,await $A(A)}).build()).withOption(pt.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${EA}:option.2.label`,selected:[{speaker:pO,text:`${EA}:option.selected`}]}).withOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter,A=E.enemyPartyConfigs[0],{pokemon2:s,pokemon2CommonEggs:R,pokemon2RareEggs:a}=E.misc;E.misc.chosenPokemon=s,E.setDialogueToken("chosenPokemon",s.getNameToRender());const i=Y0(R,a);Ft({guaranteedModifierTypeFuncs:[J.SOOTHE_BELL],fillRemaining:!0},i,()=>v0()),y0(E,s),E.dialogue.outro=[{speaker:pO,text:`${EA}:outro`}],E.dialogueTokens.hasOwnProperty("pokemon2CommonEggs")&&E.dialogue.outro.push({text:u.t(`${EA}:gained_eggs`,{numEggs:E.dialogueTokens.pokemon2CommonEggs})}),E.dialogueTokens.hasOwnProperty("pokemon2RareEggs")&&E.dialogue.outro.push({text:u.t(`${EA}:gained_eggs`,{numEggs:E.dialogueTokens.pokemon2RareEggs})}),E.onGameOver=w0,await $A(A)}).build()).withOption(pt.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${EA}:option.3.label`,selected:[{speaker:pO,text:`${EA}:option.selected`}]}).withOptionPhase(async()=>{const E=n.currentBattle.mysteryEncounter,A=E.enemyPartyConfigs[0],{pokemon3:s,pokemon3CommonEggs:R,pokemon3RareEggs:a}=E.misc;E.misc.chosenPokemon=s,E.setDialogueToken("chosenPokemon",s.getNameToRender());const i=Y0(R,a);Ft({guaranteedModifierTypeFuncs:[J.SOOTHE_BELL],fillRemaining:!0},i,()=>v0()),y0(E,s),E.dialogue.outro=[{speaker:pO,text:`${EA}:outro`}],E.dialogueTokens.hasOwnProperty("pokemon3CommonEggs")&&E.dialogue.outro.push({text:u.t(`${EA}:gained_eggs`,{numEggs:E.dialogueTokens.pokemon3CommonEggs})}),E.dialogueTokens.hasOwnProperty("pokemon3RareEggs")&&E.dialogue.outro.push({text:u.t(`${EA}:gained_eggs`,{numEggs:E.dialogueTokens.pokemon3RareEggs})}),E.onGameOver=w0,await $A(A)}).build()).withOutroDialogue([{speaker:pO,text:`${EA}:outro`}]).build();function DQ(){const E=n.currentBattle.waveIndex,A=QA[U.EXPERT_POKEMON_BREEDER].clone();A.name=u.t(pO);const s=E<xO?e.CLEFFA:E<bO?e.CLEFAIRY:e.CLEFABLE,R={trainerType:U.EXPERT_POKEMON_BREEDER,pokemonConfigs:[{nickname:u.t(`${EA}:cleffa_1_nickname`,{speciesName:ke(s).getName()}),species:ke(s),isBoss:!1,abilityIndex:1,shiny:!1,nature:At.ADAMANT,moveSet:[t.METEOR_MASH,t.FIRE_PUNCH,t.ICE_PUNCH,t.THUNDER_PUNCH],ivs:[31,31,31,31,31,31],modifierConfigs:[{modifier:Kt(J.TERA_SHARD,[I.STEEL])}]}]};if(n.arena.biomeType===T.SPACE)R.pokemonConfigs.push({nickname:u.t(`${EA}:cleffa_2_nickname`,{speciesName:ke(s).getName()}),species:ke(s),isBoss:!1,abilityIndex:1,shiny:!0,variant:1,nature:At.MODEST,moveSet:[t.MOONBLAST,t.MYSTICAL_FIRE,t.ICE_BEAM,t.THUNDERBOLT],ivs:[31,31,31,31,31,31]},{nickname:u.t(`${EA}:cleffa_3_nickname`,{speciesName:ke(s).getName()}),species:ke(s),isBoss:!1,abilityIndex:2,shiny:!0,variant:2,nature:At.BOLD,moveSet:[t.TRI_ATTACK,t.STORED_POWER,t.TAKE_HEART,t.MOONLIGHT],ivs:[31,31,31,31,31,31]});else{const a=E6(CQ,E),i=E6(UQ,E);R.pokemonConfigs.push({species:ke(a),isBoss:!1,ivs:[31,31,31,31,31,31]},{species:ke(i),isBoss:!1,ivs:[31,31,31,31,31,31]})}return R}N(DQ,"getPartyConfig");function E6(E,A){const R=CO(E.slice(0)).pop().slice(0);let a=R.pop();for(;a instanceof gA&&a.evolution>A;)a=R.pop();return a instanceof gA?a.species:a}N(E6,"getSpeciesFromPool");function W0(E){const A=E.calculateBaseStats().reduce((o,l)=>o+l,0),s=Math.min(Math.max(Math.floor((680-A)/20),1),18),R=E.species.getRootSpeciesId();let a=0;if(KA.hasOwnProperty(R)){const o=KA[R];a=Math.min(Math.max(Math.floor(7-o)*2,0),12)}let i=Math.min(a+s,30),r=Math.min(i,5);i-=r;const L=Math.floor(i/4);return r+=i%4,[r,L]}N(W0,"calculateEggRewardsForPokemon");function Y0(E,A){const s=u.t(`${EA}:title`)+`:
`+u.t(pO),R=[];if(E>0)for(let a=0;a<E;a++)R.push({pulled:!1,sourceType:WE.EVENT,eggDescriptor:s,tier:m.COMMON});if(A>0)for(let a=0;a<A;a++)R.push({pulled:!1,sourceType:WE.EVENT,eggDescriptor:s,tier:m.RARE});return R}N(Y0,"getEggOptions");function y0(E,A){const s=n.getPlayerParty(),R=s.indexOf(A);s[R]=s[0],s[0]=A,E.misc.originalParty=n.getPlayerParty().slice(1),E.misc.originalPartyHeldItems=E.misc.originalParty.map(a=>a.getHeldItems()),n.party=[A]}N(y0,"removePokemonFromPartyAndStoreHeldItems");function h8(){const E=n.currentBattle.mysteryEncounter;n.getPlayerParty().push(...E.misc.originalParty),E.misc.originalPartyHeldItems.forEach(s=>{s.forEach(R=>{n.addModifier(R,!0,!1,!1,!0)})}),n.updateModifiers(!0)}N(h8,"restorePartyAndHeldItems");function w0(){const E=n.currentBattle.mysteryEncounter;E.dialogue.outro=[{speaker:pO,text:`${EA}:outro_failed`}],h8();const A=E.misc.chosenPokemon;A.friendship=0,E.doEncounterRewards=void 0,E.misc.encounterFailed=!0,n.playBgm(n.arena.bgm),n.clearPhaseQueue(),n.clearPhaseQueueSplice();const s=n.getEnemyPokemon();return s&&(n.playSound("se/pb_rel"),s.hideInfo(),s.tint(zO(s.pokeball),1,250,"Sine.easeIn"),n.tweens.add({targets:s,duration:250,ease:"Sine.easeIn",scale:.5,onComplete:N(()=>{n.field.remove(s,!0)},"onComplete")})),n.time.delayedCall(250,()=>{var i,r;const R=(i=n.currentBattle.trainer)==null?void 0:i.getSprites(),a=(r=n.currentBattle.trainer)==null?void 0:r.getTintSprites();if(R&&a)for(let L=0;L<R.length;L++)R[L].setVisible(!0),a[L].setVisible(!0),R[L].clearTint(),a[L].clearTint();n.tweens.add({targets:n.currentBattle.trainer,x:"-=16",y:"+=16",alpha:1,ease:"Sine.easeInOut",duration:750})}),N9(!0),!1}N(w0,"onGameOver");function v0(){const E=n.currentBattle.mysteryEncounter;E.misc.encounterFailed||(E.misc.chosenPokemon.addFriendship(lQ),h8())}N(v0,"doPostEncounterCleanup");const H8=3,V0=256,MQ=3,_Q=12,PQ=15,GQ=[T.SEA,T.SEABED,T.BADLANDS,T.DESERT,T.ICE_CAVE,T.VOLCANO,T.WASTELAND,T.ABYSS,T.SPACE,T.END],cQ=[T.TOWN,T.PLAINS,T.GRASS,T.TALL_GRASS,T.METROPOLIS,T.FOREST,T.SWAMP,T.BEACH,T.LAKE,T.MOUNTAIN,T.CAVE,T.MEADOW,T.POWER_PLANT,T.GRAVEYARD,T.DOJO,T.FACTORY,T.RUINS,T.CONSTRUCTION_SITE,T.JUNGLE,T.FAIRY_CAVE,T.TEMPLE,T.SLUM,T.SNOWY_FOREST,T.ISLAND,T.LABORATORY],hQ=[T.TOWN,T.PLAINS,T.GRASS,T.TALL_GRASS,T.METROPOLIS,T.FOREST,T.SWAMP,T.BEACH,T.LAKE,T.MOUNTAIN,T.BADLANDS,T.CAVE,T.DESERT,T.ICE_CAVE,T.MEADOW,T.POWER_PLANT,T.GRAVEYARD,T.DOJO,T.FACTORY,T.RUINS,T.CONSTRUCTION_SITE,T.JUNGLE,T.FAIRY_CAVE,T.TEMPLE,T.SLUM,T.SNOWY_FOREST,T.ISLAND,T.LABORATORY],HQ=[T.TOWN,T.PLAINS,T.GRASS,T.TALL_GRASS,T.METROPOLIS,T.BEACH,T.LAKE,T.MEADOW,T.POWER_PLANT,T.GRAVEYARD,T.DOJO,T.FACTORY,T.CONSTRUCTION_SITE,T.SLUM,T.ISLAND],nA={},dQ=[],fQ=[Je.DANCING_LESSONS],BQ=[Je.MYSTERIOUS_CHALLENGERS,Je.SHADY_VITAMIN_DEALER,Je.THE_POKEMON_SALESMAN,Je.THE_WINSTRATE_CHALLENGE,Je.THE_EXPERT_POKEMON_BREEDER],gQ=[Je.DEPARTMENT_STORE_SALE,Je.PART_TIMER,Je.FUN_AND_GAMES,Je.GLOBAL_TRADE_SYSTEM],KQ=[Je.FIGHT_OR_FLIGHT,Je.DARK_DEAL,Je.MYSTERIOUS_CHEST,Je.TRAINING_SESSION,Je.DELIBIRDY,Je.A_TRAINERS_TEST,Je.TRASH_TO_TREASURE,Je.BERRIES_ABOUND,Je.CLOWNING_AROUND,Je.WEIRD_DREAM,Je.TELEPORTING_HIJINKS,Je.BUG_TYPE_SUPERFAN,Je.UNCOMMON_BREED],wi=new Map([[T.TOWN,[]],[T.PLAINS,[Je.SLUMBERING_SNORLAX,Je.ABSOLUTE_AVARICE]],[T.GRASS,[Je.SLUMBERING_SNORLAX,Je.ABSOLUTE_AVARICE]],[T.TALL_GRASS,[Je.ABSOLUTE_AVARICE]],[T.METROPOLIS,[]],[T.FOREST,[Je.SAFARI_ZONE,Je.ABSOLUTE_AVARICE]],[T.SEA,[Je.LOST_AT_SEA]],[T.SWAMP,[Je.SAFARI_ZONE]],[T.BEACH,[]],[T.LAKE,[]],[T.SEABED,[]],[T.MOUNTAIN,[]],[T.BADLANDS,[Je.DANCING_LESSONS]],[T.CAVE,[Je.THE_STRONG_STUFF]],[T.DESERT,[Je.DANCING_LESSONS]],[T.ICE_CAVE,[]],[T.MEADOW,[]],[T.POWER_PLANT,[]],[T.VOLCANO,[Je.FIERY_FALLOUT,Je.DANCING_LESSONS]],[T.GRAVEYARD,[]],[T.DOJO,[]],[T.FACTORY,[]],[T.RUINS,[]],[T.WASTELAND,[Je.DANCING_LESSONS]],[T.ABYSS,[Je.DANCING_LESSONS]],[T.SPACE,[Je.THE_EXPERT_POKEMON_BREEDER]],[T.CONSTRUCTION_SITE,[]],[T.JUNGLE,[Je.SAFARI_ZONE]],[T.FAIRY_CAVE,[]],[T.TEMPLE,[]],[T.SLUM,[]],[T.SNOWY_FOREST,[]],[T.ISLAND,[]],[T.LABORATORY,[]]]);function mQ(){nA[Je.MYSTERIOUS_CHALLENGERS]=F9,nA[Je.MYSTERIOUS_CHEST]=p9,nA[Je.DARK_DEAL]=h9,nA[Je.FIGHT_OR_FLIGHT]=K9,nA[Je.TRAINING_SESSION]=w9,nA[Je.SLUMBERING_SNORLAX]=y9,nA[Je.DEPARTMENT_STORE_SALE]=H9,nA[Je.SHADY_VITAMIN_DEALER]=Y9,nA[Je.FIELD_TRIP]=d9,nA[Je.SAFARI_ZONE]=v9,nA[Je.LOST_AT_SEA]=m9,nA[Je.FIERY_FALLOUT]=Q9,nA[Je.THE_STRONG_STUFF]=J9,nA[Je.THE_POKEMON_SALESMAN]=z9,nA[Je.AN_OFFER_YOU_CANT_REFUSE]=eX,nA[Je.DELIBIRDY]=tX,nA[Je.ABSOLUTE_AVARICE]=AX,nA[Je.A_TRAINERS_TEST]=OX,nA[Je.TRASH_TO_TREASURE]=nX,nA[Je.BERRIES_ABOUND]=iX,nA[Je.CLOWNING_AROUND]=rX,nA[Je.PART_TIMER]=TX,nA[Je.DANCING_LESSONS]=MX,nA[Je.WEIRD_DREAM]=gX,nA[Je.THE_WINSTRATE_CHALLENGE]=vX,nA[Je.TELEPORTING_HIJINKS]=$X,nA[Je.BUG_TYPE_SUPERFAN]=jX,nA[Je.FUN_AND_GAMES]=AQ,nA[Je.UNCOMMON_BREED]=IQ,nA[Je.GLOBAL_TRADE_SYSTEM]=NQ,nA[Je.THE_EXPERT_POKEMON_BREEDER]=uQ,dQ.forEach(A=>{GQ.forEach(s=>{const R=wi.get(s);R&&!R.includes(A)&&R.push(A)})}),fQ.forEach(A=>{cQ.forEach(s=>{const R=wi.get(s);R&&!R.includes(A)&&R.push(A)})}),BQ.forEach(A=>{hQ.forEach(s=>{const R=wi.get(s);R&&!R.includes(A)&&R.push(A)})}),gQ.forEach(A=>{HQ.forEach(s=>{const R=wi.get(s);R&&!R.includes(A)&&R.push(A)})});let E="";wi.forEach((A,s)=>{KQ.forEach(R=>{A.includes(R)||A.push(R)}),E+=`${TL(s).toUpperCase()}: [${A.map(R=>Je[R].toString().toLowerCase()).sort().join(", ")}]
`})}N(mQ,"initMysteryEncounters");const zK=class zK{constructor(A,s,R,a){this.type=A,this.tier=s,this.waveIndex=R,this.selectedOption=a??-1}};N(zK,"SeenEncounterData");let FP=zK;const qK=class qK{constructor(A){this.encounteredEvents=[],this.encounterSpawnChance=H8,this.queuedEncounters=[],ve(A)||Object.assign(this,A),this.encounteredEvents=this.encounteredEvents??[],this.queuedEncounters=this.queuedEncounters??[]}};N(qK,"MysteryEncounterSaveData");let Wr=qK;const ga=[e.BULBASAUR,e.CHARMANDER,e.SQUIRTLE,e.CHIKORITA,e.CYNDAQUIL,e.TOTODILE,e.TREECKO,e.TORCHIC,e.MUDKIP,e.TURTWIG,e.CHIMCHAR,e.PIPLUP,e.SNIVY,e.TEPIG,e.OSHAWOTT,e.CHESPIN,e.FENNEKIN,e.FROAKIE,e.ROWLET,e.LITTEN,e.POPPLIO,e.GROOKEY,e.SCORBUNNY,e.SOBBLE,e.SPRIGATITO,e.FUECOCO,e.QUAXLY],WC="x0i2O7WRiANTqPmZ";function Wi(E,A=0){switch(E){case uE.SYSTEM:return"data";case uE.SESSION:let s="sessionData";return A&&(s+=A),s;case uE.SETTINGS:return"settings";case uE.TUTORIALS:return"tutorials";case uE.SEEN_DIALOGUES:return"seenDialogues";case uE.RUN_HISTORY:return"runHistoryData"}}N(Wi,"getDataTypeKey");function Yi(E,A){return(A?s=>btoa(s):s=>Lr.AES.encrypt(s,WC))(E)}N(Yi,"encrypt");function oa(E,A){return(A?s=>atob(s):s=>Lr.AES.decrypt(s,WC).toString(Lr.enc.Utf8))(E)}N(oa,"decrypt");const Xe={NON_SHINY:1n,SHINY:2n,MALE:4n,FEMALE:8n,DEFAULT_VARIANT:16n,VARIANT_2:32n,VARIANT_3:64n,DEFAULT_FORM:128n},Ms={ABILITY_1:1,ABILITY_2:2,ABILITY_HIDDEN:4},d8="{}";let x0=d8;const jK=class jK{static load(){return JSON.parse(x0=localStorage.getItem(`starterPrefs_${Nt==null?void 0:Nt.username}`)||d8)}static save(A){const s=JSON.stringify(A);s!==x0&&(localStorage.setItem(`starterPrefs_${Nt==null?void 0:Nt.username}`,s),x0=s)}};N(jK,"StarterPrefs");let YC=jK;const il={seenAttr:"$sa",caughtAttr:"$ca",natureAttr:"$na",seenCount:"$s",caughtCount:"$c",hatchedCount:"$hc",ivs:"$i",moveset:"$m",eggMoves:"$em",candyCount:"$x",friendship:"$f",abilityAttr:"$a",passiveAttr:"$pa",valueReduction:"$vr",classicWinCount:"$wc"},em=class em{constructor(){this.loadSettings(),this.loadGamepadSettings(),this.loadMappingConfigs(),this.trainerId=_A(65536),this.secretId=_A(65536),this.starterData={},this.gameStats=new TC,this.runHistory={},this.unlocks={[ws.ENDLESS_MODE]:!1,[ws.MINI_BLACK_HOLE]:!1,[ws.SPLICED_ENDLESS_MODE]:!1,[ws.EVIOLITE]:!1},this.achvUnlocks={},this.voucherUnlocks={},this.voucherCounts={[rE.REGULAR]:0,[rE.PLUS]:0,[rE.PREMIUM]:0,[rE.GOLDEN]:0},this.eggs=[],this.eggPity=[0,0,0,0],this.unlockPity=[0,0,0,0],this.initDexData(),this.initStarterData()}getSystemSaveData(){return{trainerId:this.trainerId,secretId:this.secretId,gender:this.gender,dexData:this.dexData,starterData:this.starterData,gameStats:this.gameStats,unlocks:this.unlocks,achvUnlocks:this.achvUnlocks,voucherUnlocks:this.voucherUnlocks,voucherCounts:this.voucherCounts,eggs:this.eggs.map(A=>new NC(A)),gameVersion:n.game.config.gameVersion,timestamp:new Date().getTime(),eggPity:this.eggPity.slice(0),unlockPity:this.unlockPity.slice(0)}}isUnlocked(A){return Ye.ITEM_UNLOCK_OVERRIDE.includes(A)?!0:this.unlocks[A]}saveSystem(){return new Promise(A=>{n.ui.savingIcon.show();const s=this.getSystemSaveData(),R=2147483648,a=JSON.stringify(s,(i,r)=>typeof r=="bigint"?r<=R?Number(r):r.toString():r);localStorage.setItem(`data_${Nt==null?void 0:Nt.username}`,Yi(a,Us)),n.ui.savingIcon.hide(),A(!0)})}loadSystem(){return new Promise(A=>{if(console.log("Client Session:",eP),!localStorage.getItem(`data_${Nt==null?void 0:Nt.username}`))return A(!1);this.initSystem(oa(localStorage.getItem(`data_${Nt==null?void 0:Nt.username}`),Us)).then(A)})}initSystem(A,s){return new Promise(R=>{try{let a=this.parseSystemData(A);if(s){const L=this.parseSystemData(s);L.timestamp>a.timestamp?(console.debug("Use cached system"),a=L,A=s):this.clearLocalData()}console.debug(a),localStorage.setItem(`data_${Nt==null?void 0:Nt.username}`,Yi(A,Us));const i=`runHistoryData_${Nt==null?void 0:Nt.username}`;if(localStorage.getItem(i)||localStorage.setItem(i,""),A9(a),this.trainerId=a.trainerId,this.secretId=a.secretId,this.gender=a.gender,this.saveSetting(It.Player_Gender,a.gender===Vt.FEMALE?1:0),a.starterData)this.starterData=a.starterData;else{if(this.initStarterData(),a.starterMoveData){const o=a.starterMoveData;for(const l of Object.keys(o))this.starterData[l].moveset=o[l]}if(a.starterEggMoveData){const o=a.starterEggMoveData;for(const l of Object.keys(o))this.starterData[l].eggMoves=o[l]}this.migrateStarterAbilities(a,this.starterData);const L=Object.keys(this.starterData).map(o=>parseInt(o));for(const o of L)this.starterData[o].candyCount+=a.dexData[o].caughtCount,this.starterData[o].candyCount+=a.dexData[o].hatchedCount*2,a.dexData[o].caughtAttr&Xe.SHINY&&(this.starterData[o].candyCount+=4)}if(a.gameStats&&(this.gameStats=a.gameStats),a.unlocks)for(const L of Object.keys(a.unlocks))this.unlocks.hasOwnProperty(L)&&(this.unlocks[L]=a.unlocks[L]);if(a.achvUnlocks)for(const L of Object.keys(a.achvUnlocks))Ct.hasOwnProperty(L)&&(this.achvUnlocks[L]=a.achvUnlocks[L]);if(a.voucherUnlocks)for(const L of Object.keys(a.voucherUnlocks))is.hasOwnProperty(L)&&(this.voucherUnlocks[L]=a.voucherUnlocks[L]);a.voucherCounts&&lO(rE).forEach(L=>{const o=rE[L];this.voucherCounts[o]=a.voucherCounts[o]||0}),this.eggs=a.eggs?a.eggs.map(L=>L.toEgg()):[],this.eggPity=a.eggPity?a.eggPity.slice(0):[0,0,0,0],this.unlockPity=a.unlockPity?a.unlockPity.slice(0):[0,0,0,0],this.dexData=Object.assign(this.dexData,a.dexData),this.consolidateDexData(this.dexData),this.defaultDexData=null,R(!0)}catch(a){console.error(a),R(!1)}})}async getRunHistoryData(){if(Or){const A=`runHistoryData_${Nt==null?void 0:Nt.username}`,s=localStorage.getItem(A);if(s){const R=s;return R?JSON.parse(oa(R,Us)):{}}else return localStorage.setItem(`runHistoryData_${Nt==null?void 0:Nt.username}`,""),{}}else{const A=`runHistoryData_${Nt==null?void 0:Nt.username}`,s=localStorage.getItem(A);if(s){const R=s;return R?JSON.parse(oa(R,Us)):{}}else return localStorage.setItem(`runHistoryData_${Nt==null?void 0:Nt.username}`,""),{}}}async saveRunHistory(A,s){const R=await this.getRunHistoryData();let a=Object.keys(R).map(Number);for(;a.length>=JZ;){const r=Math.min.apply(Math,a).toString();delete R[r],a=Object.keys(R).map(Number)}const i=A.timestamp.toString();return R[i]={entry:A,isVictory:s,isFavorite:!1},localStorage.setItem(`runHistoryData_${Nt==null?void 0:Nt.username}`,Yi(JSON.stringify(R),Us)),!0}parseSystemData(A){return JSON.parse(A,(s,R)=>{if(s==="gameStats")return new TC(R);if(s==="eggs"){const a=[];R===null&&(R=[]);for(const i of R)a.push(new NC(i));return a}return s.endsWith("Attr")&&!["natureAttr","abilityAttr","passiveAttr"].includes(s)?BigInt(R??0):R})}convertSystemDataStr(A,s=!1){s||(A=A.replace(/\$pAttr/g,"$pa")),A=A.replace(/"trainerId":\d+/g,`"trainerId":${this.trainerId}`),A=A.replace(/"secretId":\d+/g,`"secretId":${this.secretId}`);const R=s?Object.keys(il):Object.values(il),a=s?Object.values(il):Object.keys(il);for(const i in R)A=A.replace(new RegExp(`${R[i].replace("$","\\$")}`,"g"),a[i]);return A}async verify(){return!0}clearLocalData(){}saveSetting(A,s){let R={};return localStorage.hasOwnProperty("settings")&&(R=JSON.parse(localStorage.getItem("settings"))),q_(A,s),R[A]=s,R.gameVersion=n.game.config.gameVersion,localStorage.setItem("settings",JSON.stringify(R)),!0}saveMappingConfigs(A,s){const R=A.toLowerCase();let a={};return localStorage.hasOwnProperty("mappingConfigs")&&(a=JSON.parse(localStorage.getItem("mappingConfigs"))),a[R]||(a[R]={}),a[R].custom=s.custom,localStorage.setItem("mappingConfigs",JSON.stringify(a)),!0}loadMappingConfigs(){if(!localStorage.hasOwnProperty("mappingConfigs"))return!1;const A=JSON.parse(localStorage.getItem("mappingConfigs"));for(const s of Object.keys(A))n.inputController.injectConfig(s,A[s]);return!0}resetMappingToFactory(){return localStorage.hasOwnProperty("mappingConfigs")?(localStorage.removeItem("mappingConfigs"),n.inputController.resetConfigs(),!0):!1}saveControlSetting(A,s,R,a,i){let r={};return localStorage.hasOwnProperty(s)&&(r=JSON.parse(localStorage.getItem(s))),A===IA.GAMEPAD?hl(R,i):A===IA.KEYBOARD&&s8(R,i),Object.keys(a).forEach(L=>{L===R&&(r[L]=i)}),localStorage.setItem(s,JSON.stringify(r)),!0}loadSettings(){if(Xk(),!localStorage.hasOwnProperty("settings"))return!1;const A=JSON.parse(localStorage.getItem("settings"));s9(A);for(const s of Object.keys(A))q_(s,A[s]);return!0}loadGamepadSettings(){if(Object.values(Be).map(s=>s).forEach(s=>hl(s,O8[s])),!localStorage.hasOwnProperty("settingsGamepad"))return!1;const A=JSON.parse(localStorage.getItem("settingsGamepad"));for(const s of Object.keys(A))hl(s,A[s]);return!0}saveTutorialFlag(A,s){const R=Wi(uE.TUTORIALS);let a={};return localStorage.hasOwnProperty(R)&&(a=JSON.parse(localStorage.getItem(R))),Object.keys(tO).map(i=>i).forEach(i=>{const r=tO[i];r===A?a[r]=s:a[r]??(a[r]=!1)}),localStorage.setItem(R,JSON.stringify(a)),!0}getTutorialFlags(){const A=Wi(uE.TUTORIALS),s={};if(Object.values(tO).map(a=>a).forEach(a=>s[tO[a]]=!1),!localStorage.hasOwnProperty(A))return s;const R=JSON.parse(localStorage.getItem(A));for(const a of Object.keys(R))s[a]=R[a];return s}saveSeenDialogue(A){const s=Wi(uE.SEEN_DIALOGUES),R=this.getSeenDialogues();return R[A]=!0,localStorage.setItem(s,JSON.stringify(R)),console.log("Dialogue saved as seen:",A),!0}getSeenDialogues(){const A=Wi(uE.SEEN_DIALOGUES),s={};if(!localStorage.hasOwnProperty(A))return s;const R=JSON.parse(localStorage.getItem(A));for(const a of Object.keys(R))s[a]=R[a];return s}getSessionSaveData(){var A;return{seed:n.seed,playTime:n.sessionPlayTime,gameMode:n.gameMode.modeId,party:n.getPlayerParty().map(s=>new hs(s)),enemyParty:n.getEnemyParty().map(s=>new hs(s)),modifiers:n.findModifiers(()=>!0).map(s=>new xa(s,!0)),enemyModifiers:n.findModifiers(()=>!0,!1).map(s=>new xa(s,!1)),arena:new QT(n.arena),pokeballCounts:n.pokeballCounts,money:Math.floor(n.money),score:n.score,waveIndex:n.currentBattle.waveIndex,battleType:n.currentBattle.battleType,trainer:n.currentBattle.battleType===Ut.TRAINER?new JT(n.currentBattle.trainer):null,gameVersion:n.game.config.gameVersion,timestamp:new Date().getTime(),challenges:n.gameMode.challenges.map(s=>new qT(s)),mysteryEncounterType:((A=n.currentBattle.mysteryEncounter)==null?void 0:A.encounterType)??-1,mysteryEncounterSaveData:n.mysteryEncounterSaveData}}getSession(A){return new Promise(async(s,R)=>{if(A<0)return s(null);const a=N(async i=>{try{const r=this.parseSessionData(i);s(r)}catch(r){R(r);return}},"handleSessionData");{const i=localStorage.getItem(`sessionData${A||""}_${Nt==null?void 0:Nt.username}`);if(i)await a(oa(i,Us));else return s(null)}})}loadSession(A,s){return new Promise(async(R,a)=>{try{const i=N(async r=>{var _,P,h,H,d;console.debug(r),n.gameMode=kl(r.gameMode||SA.CLASSIC),r.challenges&&(n.gameMode.challenges=r.challenges.map(f=>f.toChallenge())),n.setSeed(r.seed||n.game.config.seed[0]),n.resetSeed(),console.log("Seed:",n.seed),n.sessionPlayTime=r.playTime||0,n.lastSavePlayTime=0;const L=[],o=n.getPlayerParty();o.splice(0,o.length);for(const f of r.party){const B=f.toPokemon();B.setVisible(!1),L.push(B.loadAssets()),o.push(B)}Object.keys(n.pokeballCounts).forEach(f=>{n.pokeballCounts[f]=r.pokeballCounts[f]||0}),Ye.POKEBALL_OVERRIDE.active&&(n.pokeballCounts=Ye.POKEBALL_OVERRIDE.pokeballs),n.money=Math.floor(r.money||0),n.updateMoneyText(),n.money>this.gameStats.highestMoney&&(this.gameStats.highestMoney=n.money),n.score=r.score,n.updateScoreText(),n.mysteryEncounterSaveData=new Wr(r.mysteryEncounterSaveData),n.newArena(r.arena.biome);const l=r.battleType||0,C=r.trainer?QA[r.trainer.trainerType]:null,M=r.mysteryEncounterType!==-1?r.mysteryEncounterType:void 0,D=n.newBattle(r.waveIndex,l,r.trainer,l===Ut.TRAINER?(C==null?void 0:C.doubleOnly)||((_=r.trainer)==null?void 0:_.variant)===OA.DOUBLE:r.enemyParty.length>1,M);if(D.enemyLevels=r.enemyParty.map(f=>f.level),n.arena.init(),r.enemyParty.forEach((f,B)=>{var W;const F=f.toPokemon(l,B,((W=r.trainer)==null?void 0:W.variant)===OA.DOUBLE);D.enemyParty[B]=F,l===Ut.WILD&&D.seenEnemyPartyMemberIds.add(F.id),L.push(F.loadAssets())}),n.arena.weather=r.arena.weather,n.arena.eventTarget.dispatchEvent(new FI(Oe.NONE,(P=n.arena.weather)==null?void 0:P.weatherType,(h=n.arena.weather)==null?void 0:h.turnsLeft)),n.arena.terrain=r.arena.terrain,n.arena.eventTarget.dispatchEvent(new zT(Tt.NONE,(H=n.arena.terrain)==null?void 0:H.terrainType,(d=n.arena.terrain)==null?void 0:d.turnsLeft)),n.arena.tags=r.arena.tags,n.arena.tags)for(const f of n.arena.tags)if(f instanceof nO){const{tagType:B,side:F,turnCount:W,layers:b,maxLayers:x}=f;n.arena.eventTarget.dispatchEvent(new Ai(B,F,W,b,x))}else n.arena.eventTarget.dispatchEvent(new Ai(f.tagType,f.side,f.turnCount));for(const f of r.modifiers){const B=f.toModifier(ml[f.className]);B&&n.addModifier(B,!0)}n.updateModifiers(!0);for(const f of r.enemyModifiers){const B=f.toModifier(ml[f.className]);B&&n.addEnemyModifier(B,!0)}n.updateModifiers(!1),Promise.all(L).then(()=>R(!0))},"initSessionFromData");s?i(s):this.getSession(A).then(r=>r&&i(r)).catch(r=>{a(r)})}catch(i){a(i);return}})}deleteSession(A){return new Promise(s=>(localStorage.removeItem(`sessionData${A||""}_${Nt==null?void 0:Nt.username}`),s(!0)))}offlineNewClear(){return new Promise(A=>{const s=this.getSessionSaveData(),R=s.seed;let a=[];return s.gameMode===SA.DAILY?localStorage.hasOwnProperty("daily")?(a=JSON.parse(atob(localStorage.getItem("daily"))),a.includes(R)?A(!1):(a.push(R),localStorage.setItem("daily",btoa(JSON.stringify(a))),A(!0))):(a.push(R),localStorage.setItem("daily",btoa(JSON.stringify(a))),A(!0)):A(!0)})}async tryClearSession(A){let s=[!1,!1];return localStorage.removeItem(`sessionData${A||""}_${Nt==null?void 0:Nt.username}`),s=[!0,!0],await ka(),s}parseSessionData(A){const s=JSON.parse(A,(R,a)=>{if(R==="party"||R==="enemyParty"){const i=[];a===null&&(a=[]);for(const r of a)i.push(new hs(r));return i}if(R==="trainer")return a?new JT(a):null;if(R==="modifiers"||R==="enemyModifiers"){const i=R==="modifiers",r=[];a===null&&(a=[]);for(const L of a)(L==null?void 0:L.className)==="ExpBalanceModifier"&&(L.stackCount=Math.min(L.stackCount,4)),!(L instanceof NL&&L.effect===ne.FREEZE||L.effect===ne.SLEEP)&&r.push(new xa(L,i));return r}if(R==="arena")return new QT(a);if(R==="challenges"){const i=[];a===null&&(a=[]);for(const r of a)i.push(new qT(r));return i}return R==="mysteryEncounterType"?a:R==="mysteryEncounterSaveData"?new Wr(a):a});return E9(s),s}saveAll(A=!1,s=!1,R=!1,a=!1){return new Promise(i=>{Pr(!A,ka).then(r=>{if(r!==null&&!r)return i(!1);s&&n.ui.savingIcon.show();const L=R?this.parseSessionData(oa(localStorage.getItem(`sessionData${n.sessionSlotId?n.sessionSlotId:""}_${Nt==null?void 0:Nt.username}`),Us)):this.getSessionSaveData(),o=2147483648,l=a?this.parseSystemData(oa(localStorage.getItem(`data_${Nt==null?void 0:Nt.username}`),Us)):this.getSystemSaveData();n.sessionSlotId,localStorage.setItem(`data_${Nt==null?void 0:Nt.username}`,Yi(JSON.stringify(l,(C,M)=>typeof M=="bigint"?M<=o?Number(M):M.toString():M),Us)),localStorage.setItem(`sessionData${n.sessionSlotId?n.sessionSlotId:""}_${Nt==null?void 0:Nt.username}`,Yi(JSON.stringify(L),Us)),console.debug("Session data saved"),this.verify().then(C=>{n.ui.savingIcon.hide(),i(C)})})})}tryExportData(A,s=0){return new Promise(R=>{const a=`${Wi(A,s)}_${Nt==null?void 0:Nt.username}`,i=N(r=>{switch(A){case uE.SYSTEM:r=this.convertSystemDataStr(r,!0);break}const L=Lr.AES.encrypt(r,WC),o=new Blob([L.toString()],{type:"text/json"}),l=document.createElement("a");l.href=window.URL.createObjectURL(o),l.download=`${a}.prsv`,l.click(),l.remove()},"handleData");{const r=localStorage.getItem(a);r&&i(oa(r,Us)),R(!!r)}})}importData(A,s=0){const R=`${Wi(A,s)}_${Nt==null?void 0:Nt.username}`;let a=document.getElementById("saveFile");a&&a.remove(),a=document.createElement("input"),a.id="saveFile",a.type="file",a.accept=".prsv",a.style.display="none",a.addEventListener("change",i=>{const r=new FileReader;r.onload=(L=>o=>{var D,_;let l,C=Lr.AES.decrypt((_=(D=o.target)==null?void 0:D.result)==null?void 0:_.toString(),WC).toString(Lr.enc.Utf8),M=!1;try{switch(l=uE[A].toLowerCase(),A){case uE.SYSTEM:C=this.convertSystemDataStr(C);const P=this.parseSystemData(C);M=!!P.dexData&&!!P.timestamp;break;case uE.SESSION:const h=this.parseSessionData(C);M=!!h.party&&!!h.enemyParty&&!!h.timestamp;break;case uE.RUN_HISTORY:const H=JSON.parse(C),d=Object.keys(H);l=u.t("menuUiHandler:RUN_HISTORY").toLowerCase(),d.forEach(f=>{const B=Object.keys(H[f]);M=["isFavorite","isVictory","entry"].every(F=>B.includes(F))&&B.length===3});break;case uE.SETTINGS:case uE.TUTORIALS:M=!0;break}}catch(P){console.error(P)}if(l=l,!M)return n.ui.showText(`Your ${l} data could not be loaded. It may be corrupted.`,null,()=>n.ui.showText("",0),st(1500));n.ui.showText(`Your ${l} data will be overridden and the page will reload. Proceed?`,null,()=>{n.ui.setOverlayMode(Ie.CONFIRM,()=>{localStorage.setItem(R,Yi(C,Us)),window.location=window.location},()=>{n.ui.revertMode(),n.ui.showText("",0)},!1,-98)})})(i.target.files[0]),r.readAsText(i.target.files[0])}),a.click()}initDexData(){const A={};for(const a of wR)A[a.speciesId]={seenAttr:0n,caughtAttr:0n,natureAttr:0,seenCount:0,caughtCount:0,hatchedCount:0,ivs:[0,0,0,0,0,0]};const s=Xe.NON_SHINY|Xe.MALE|Xe.FEMALE|Xe.DEFAULT_VARIANT|Xe.DEFAULT_FORM,R=[];n.executeWithSeedOffset(()=>{const a=[At.HARDY,At.DOCILE,At.SERIOUS,At.BASHFUL,At.QUIRKY];for(let i=0;i<ga.length;i++)R.push(IE(a))},0,"default");for(let a=0;a<ga.length;a++){const i=A[ga[a]];i.seenAttr=s,i.caughtAttr=s,i.natureAttr=1<<R[a]+1;for(const r in i.ivs)i.ivs[r]=15}this.defaultDexData=Object.assign({},A),this.dexData=A}initStarterData(){const A={},s=Object.keys(KA).map(R=>parseInt(R));for(const R of s)A[R]={moveset:null,eggMoves:0,candyCount:0,friendship:0,abilityAttr:ga.includes(R)?Ms.ABILITY_1:0,passiveAttr:0,valueReduction:0,classicWinCount:0};this.starterData=A}setPokemonSeen(A,s=!0,R=!1){var i,r;if((i=n.currentBattle)!=null&&i.isBattleMysteryEncounter()&&((r=n.currentBattle.mysteryEncounter)!=null&&r.preventGameStatsUpdates))return;const a=this.dexData[A.species.speciesId];a.seenAttr|=A.getDexAttr(),s&&(a.seenCount++,this.gameStats.pokemonSeen++,!R&&A.species.subLegendary?this.gameStats.subLegendaryPokemonSeen++:!R&&A.species.legendary?this.gameStats.legendaryPokemonSeen++:!R&&A.species.mythical&&this.gameStats.mythicalPokemonSeen++,!R&&A.isShiny()&&this.gameStats.shinyPokemonSeen++)}setPokemonCaught(A,s=!0,R=!1,a=!0){const i=A.species.getRootSpeciesId();return!s&&!n.gameData.dexData[i].caughtAttr?Promise.resolve(!1):this.setPokemonSpeciesCaught(A,A.species,s,R,a)}setPokemonSpeciesCaught(A,s,R=!0,a=!1,i=!0){return new Promise(r=>{const L=this.dexData[s.speciesId],o=L.caughtAttr,l=A.formIndex,C=A.getDexAttr();A.formIndex=l,L.caughtAttr|=C,KA.hasOwnProperty(s.speciesId)&&(this.starterData[s.speciesId].abilityAttr|=A.abilityIndex!==1||A.species.ability2?1<<A.abilityIndex:Ms.ABILITY_HIDDEN),L.natureAttr|=1<<A.nature+1;const M=yA.hasOwnProperty(s.speciesId),D=!o,_=(o&C)!==C;R&&(a?(L.hatchedCount++,this.gameStats.pokemonHatched++,A.species.subLegendary?this.gameStats.subLegendaryPokemonHatched++:A.species.legendary?this.gameStats.legendaryPokemonHatched++:A.species.mythical&&this.gameStats.mythicalPokemonHatched++,A.isShiny()&&this.gameStats.shinyPokemonHatched++):(L.caughtCount++,this.gameStats.pokemonCaught++,A.species.subLegendary?this.gameStats.subLegendaryPokemonCaught++:A.species.legendary?this.gameStats.legendaryPokemonCaught++:A.species.mythical&&this.gameStats.mythicalPokemonCaught++,A.isShiny()&&this.gameStats.shinyPokemonCaught++),!M&&(!n.gameMode.isDaily||_||a)&&this.addStarterCandy(s,1*(A.isShiny()?5*(1<<(A.variant??0)):1)*(a||A.isBoss()?2:1)));const P=N(h=>{if(M){const H=yA[s.speciesId];this.setPokemonSpeciesCaught(A,ke(H),R,a,i).then(d=>r(d))}else r(h)},"checkPrevolution");if(D&&KA.hasOwnProperty(s.speciesId)){if(!i){r(!0);return}n.playSound("level_up_fanfare"),n.ui.showText(u.t("battle:addedAsAStarter",{pokemonName:s.name}),null,()=>P(!0),null,!0)}else P(!1)})}incrementRibbonCount(A,s=!1){const R=A.getRootSpeciesId(s);this.starterData[R].classicWinCount||(this.starterData[R].classicWinCount=0),this.starterData[R].classicWinCount||n.gameData.gameStats.ribbonsOwned++;const a=n.gameData.gameStats.ribbonsOwned;return a>=100&&n.validateAchv(Ct._100_RIBBONS),a>=75&&n.validateAchv(Ct._75_RIBBONS),a>=50&&n.validateAchv(Ct._50_RIBBONS),a>=25&&n.validateAchv(Ct._25_RIBBONS),a>=10&&n.validateAchv(Ct._10_RIBBONS),++this.starterData[R].classicWinCount}addStarterCandy(A,s){const R=A.getRootSpeciesId();n.gameData.dexData[R].caughtAttr&&(n.candyBar.showStarterSpeciesCandy(A.speciesId,s),this.starterData[A.speciesId].candyCount+=s)}setEggMoveUnlocked(A,s,R=!0,a=!1){return new Promise(i=>{const r=A.speciesId;if(!KE.hasOwnProperty(r)||!KE[r][s]){i(!1);return}this.starterData[r].eggMoves||(this.starterData[r].eggMoves=0);const L=1<<s;if(this.starterData[r].eggMoves&L){i(!1);return}if(this.starterData[r].eggMoves|=L,!R){i(!0);return}n.playSound("level_up_fanfare");const o=we[KE[r][s]].name;let l=a?A.getName()+" ":"";l+=s===3?u.t("egg:rareEggMoveUnlock",{moveName:o}):u.t("egg:eggMoveUnlock",{moveName:o}),n.ui.showText(l,null,()=>i(!0),null,!0)})}isRootSpeciesUnlocked(A){var s;return!!((s=this.dexData[A.getRootSpeciesId()])!=null&&s.caughtAttr)}unlockSpeciesNature(A,s){if(!this.isRootSpeciesUnlocked(A))return;const R=N(a=>{this.dexData[a].natureAttr|=1<<s+1,yA.hasOwnProperty(a)&&R(yA[a])},"_unlockSpeciesNature");R(A.speciesId)}updateSpeciesDexIvs(A,s){let R;do{R=n.gameData.dexData[A];const a=R.ivs;for(let i=0;i<a.length;i++)a[i]<s[i]&&(a[i]=s[i]);a.filter(i=>i===31).length===6&&n.validateAchv(Ct.PERFECT_IVS)}while(yA.hasOwnProperty(A)&&(A=yA[A]))}getSpeciesCount(A){const s=Object.keys(this.dexData);let R=0;for(const a of s)A(this.dexData[a])&&R++;return R}getStarterCount(A){const s=Object.keys(KA);let R=0;for(const a of s){const i=this.dexData[a];A(i)&&R++}return R}getSpeciesDefaultDexAttr(A,s=!1,R=!1){let a=0n;const r=this.dexData[A.speciesId].caughtAttr;return R?r&Xe.SHINY?(a|=Xe.SHINY,r&Xe.VARIANT_3?a|=Xe.VARIANT_3:r&Xe.VARIANT_2?a|=Xe.VARIANT_2:a|=Xe.DEFAULT_VARIANT):(a|=Xe.NON_SHINY,a|=Xe.DEFAULT_VARIANT):(a|=r&Xe.NON_SHINY||!(r&Xe.SHINY)?Xe.NON_SHINY:Xe.SHINY,r&Xe.DEFAULT_VARIANT?a|=Xe.DEFAULT_VARIANT:r&Xe.VARIANT_2?a|=Xe.VARIANT_2:r&Xe.VARIANT_3?a|=Xe.VARIANT_3:a|=Xe.DEFAULT_VARIANT),a|=r&Xe.MALE||!(r&Xe.FEMALE)?Xe.MALE:Xe.FEMALE,a|=this.getFormAttr(this.getFormIndex(r)),a}getSpeciesDexAttrProps(A,s){const R=!(s&Xe.NON_SHINY),a=!(s&Xe.MALE);let i=0;s&Xe.DEFAULT_VARIANT?i=0:s&Xe.VARIANT_2?i=1:s&Xe.VARIANT_3&&(i=2);const r=this.getFormIndex(s);return{shiny:R,female:a,variant:i,formIndex:r}}getStarterSpeciesDefaultAbilityIndex(A){const s=this.starterData[A.speciesId].abilityAttr;return s&Ms.ABILITY_1?0:!A.ability2||s&Ms.ABILITY_2?1:2}getSpeciesDefaultNature(A){const s=this.dexData[A.speciesId];for(let R=0;R<25;R++)if(s.natureAttr&1<<R+1)return R;return 0}getSpeciesDefaultNatureAttr(A){return 1<<this.getSpeciesDefaultNature(A)}getDexAttrLuck(A){return A&Xe.SHINY?A&Xe.VARIANT_3?3:A&Xe.VARIANT_2?2:1:0}getNaturesForAttr(A=0){const s=[];for(let R=0;R<25;R++)A&1<<R+1&&s.push(R);return s}getSpeciesStarterValue(A){let R=KA[A];const a=N(r=>(r>1?r--:r/=2,r),"decrementValue");for(let r=0;r<this.starterData[A].valueReduction;r++)R=a(R);const i=new Et(R);return as(n.gameMode,XE.STARTER_COST,A,i),i.value}getFormIndex(A){if(!A||A<Xe.DEFAULT_FORM)return 0;let s=0;for(;!(A&this.getFormAttr(s));)s++;return s}getFormAttr(A){return BigInt(1)<<BigInt(7+A)}consolidateDexData(A){var s;for(const R of Object.keys(A)){const a=A[R];a.hasOwnProperty("hatchedCount")||(a.hatchedCount=0),(!a.hasOwnProperty("natureAttr")||a.caughtAttr&&!a.natureAttr)&&(a.natureAttr=((s=this.defaultDexData)==null?void 0:s[R].natureAttr)||1<<_A(25,1))}}migrateStarterAbilities(A,s){const R=Object.keys(this.starterData).map(r=>parseInt(r)),a=s||A.starterData,i=A.dexData;for(const r of R){const L=i[r].caughtAttr;a[r].abilityAttr=(L&Xe.DEFAULT_VARIANT?Ms.ABILITY_1:0)|(L&Xe.VARIANT_2?Ms.ABILITY_2:0)|(L&Xe.VARIANT_3?Ms.ABILITY_HIDDEN:0),L&&(L&Xe.DEFAULT_VARIANT||(i[r].caughtAttr^=Xe.DEFAULT_VARIANT),L&Xe.VARIANT_2&&(i[r].caughtAttr^=Xe.VARIANT_2),L&Xe.VARIANT_3&&(i[r].caughtAttr^=Xe.VARIANT_3))}}};N(em,"GameData");let yC=em;const pP=10;var XE=(E=>(E[E.STARTER_CHOICE=0]="STARTER_CHOICE",E[E.STARTER_POINTS=1]="STARTER_POINTS",E[E.STARTER_COST=2]="STARTER_COST",E[E.STARTER_MODIFY=3]="STARTER_MODIFY",E[E.POKEMON_IN_BATTLE=4]="POKEMON_IN_BATTLE",E[E.FIXED_BATTLES=5]="FIXED_BATTLES",E[E.TYPE_EFFECTIVENESS=6]="TYPE_EFFECTIVENESS",E[E.AI_LEVEL=7]="AI_LEVEL",E[E.AI_MOVE_SLOTS=8]="AI_MOVE_SLOTS",E[E.PASSIVE_ACCESS=9]="PASSIVE_ACCESS",E[E.GAME_MODE_MODIFY=10]="GAME_MODE_MODIFY",E[E.MOVE_ACCESS=11]="MOVE_ACCESS",E[E.MOVE_WEIGHT=12]="MOVE_WEIGHT",E[E.FLIP_STAT=13]="FLIP_STAT",E))(XE||{});const tm=class tm{constructor(A,s=Number.MAX_SAFE_INTEGER){this.id=A,this.value=0,this.maxValue=s,this.severity=0,this.maxSeverity=0,this.conditions=[]}reset(){this.value=0,this.severity=0}geti18nKey(){return it[this.id].split("_").map((A,s)=>s?`${A[0]}${A.slice(1).toLowerCase()}`:A.toLowerCase()).join("")}isUnlocked(A){return this.conditions.every(s=>s(A))}condition(A){return this.conditions.push(A),this}getName(){return u.t(`challenges:${this.geti18nKey()}.name`)}getValue(A){const s=A??this.value;return u.t(`challenges:${this.geti18nKey()}.value.${s}`)}getDescription(A){const s=A??this.value;return`${u.t([`challenges:${this.geti18nKey()}.desc.${s}`,`challenges:${this.geti18nKey()}.desc`])}`}increaseValue(){return this.value<this.maxValue?(this.value=Math.min(this.value+1,this.maxValue),!0):!1}decreaseValue(){return this.value>0?(this.value=Math.max(this.value-1,0),!0):!1}hasSeverity(){return this.value!==0&&this.maxSeverity>0}decreaseSeverity(){return this.severity>0?(this.severity=Math.max(this.severity-1,0),!0):!1}increaseSeverity(){return this.severity<this.maxSeverity?(this.severity=Math.min(this.severity+1,this.maxSeverity),!0):!1}getDifficulty(){return this.value}getMinDifficulty(){return 0}static loadChallenge(A){throw new Error("Method not implemented! Use derived class")}applyStarterChoice(A,s,R,a=!1){return!1}applyStarterPoints(A){return!1}applyStarterCost(A,s){return!1}applyStarterModify(A){return!1}applyPokemonInBattle(A,s){return!1}applyFixedBattle(A,s){return!1}applyTypeEffectiveness(A){return!1}applyLevelChange(A,s,R,a){return!1}applyMoveSlot(A,s){return!1}applyPassiveAccess(A,s){return!1}applyGameModeModify(A){return!1}applyMoveAccessLevel(A,s,R,a){return!1}applyMoveWeight(A,s,R,a){return!1}applyFlipStat(A,s){return!1}};N(tm,"Challenge");let tI=tm;const tM=class tM extends tI{constructor(){super(it.SINGLE_GENERATION,9)}applyStarterChoice(A,s,R,a=!1){const i=[A.generation];if(a){const r=[A.speciesId];for(;r.length;){const L=r.pop();L&&bt.hasOwnProperty(L)&&bt[L].forEach(o=>{r.push(o.speciesId),i.push(ke(o.speciesId).generation)})}}return i.includes(this.value)?!1:(s.value=!1,!0)}applyPokemonInBattle(A,s){var i;const R=A.species.speciesId===e.VICTINI?5:ke(A.species.speciesId).generation,a=A.isFusion()?((i=A.fusionSpecies)==null?void 0:i.speciesId)===e.VICTINI?5:ke(A.fusionSpecies.speciesId).generation:0;return A.isPlayer()&&(R!==this.value||A.isFusion()&&a!==this.value)?(s.value=!1,!0):!1}applyFixedBattle(A,s){let R=[];const a=[zA.EVIL_GRUNT_1,zA.EVIL_GRUNT_2,zA.EVIL_GRUNT_3,zA.EVIL_ADMIN_1,zA.EVIL_GRUNT_4,zA.EVIL_ADMIN_2,zA.EVIL_BOSS_1,zA.EVIL_BOSS_2],i=[[U.ROCKET_GRUNT],[U.ROCKET_GRUNT],[U.MAGMA_GRUNT,U.AQUA_GRUNT],[U.GALACTIC_GRUNT],[U.PLASMA_GRUNT],[U.FLARE_GRUNT],[U.AETHER_GRUNT,U.SKULL_GRUNT],[U.MACRO_GRUNT],[U.STAR_GRUNT]],r=[[U.ARCHER,U.ARIANA,U.PROTON,U.PETREL],[U.ARCHER,U.ARIANA,U.PROTON,U.PETREL],[[U.TABITHA,U.COURTNEY],[U.MATT,U.SHELLY]],[U.JUPITER,U.MARS,U.SATURN],[U.ZINZOLIN,U.ROOD],[U.XEROSIC,U.BRYONY],[U.FABA,U.PLUMERIA],[U.OLEANA],[U.GIACOMO,U.MELA,U.ATTICUS,U.ORTEGA,U.ERI]],L=[[U.ROCKET_BOSS_GIOVANNI_1],[U.ROCKET_BOSS_GIOVANNI_1],[U.MAXIE,U.ARCHIE],[U.CYRUS],[U.GHETSIS],[U.LYSANDRE],[U.LUSAMINE,U.GUZMA],[U.ROSE],[U.PENNY]],o=[[U.ROCKET_BOSS_GIOVANNI_2],[U.ROCKET_BOSS_GIOVANNI_2],[U.MAXIE_2,U.ARCHIE_2],[U.CYRUS_2],[U.GHETSIS_2],[U.LYSANDRE_2],[U.LUSAMINE_2,U.GUZMA_2],[U.ROSE_2],[U.PENNY_2]];switch(A){case zA.EVIL_GRUNT_1:return R=i[this.value-1],s.setBattleType(Ut.TRAINER).setGetTrainerFunc(ys(R,!0)),!0;case zA.EVIL_GRUNT_2:case zA.EVIL_GRUNT_3:case zA.EVIL_GRUNT_4:R=i[this.value-1];break;case zA.EVIL_ADMIN_1:case zA.EVIL_ADMIN_2:R=r[this.value-1];break;case zA.EVIL_BOSS_1:return R=L[this.value-1],s.setBattleType(Ut.TRAINER).setSeedOffsetWave(zA.EVIL_GRUNT_1).setGetTrainerFunc(ys(R,!0)).setCustomModifierRewards({guaranteedModifierTiers:[w.ROGUE,w.ROGUE,w.ULTRA,w.ULTRA,w.ULTRA],allowLuckUpgrades:!1}),!0;case zA.EVIL_BOSS_2:return R=o[this.value-1],s.setBattleType(Ut.TRAINER).setSeedOffsetWave(zA.EVIL_GRUNT_1).setGetTrainerFunc(ys(R,!0)).setCustomModifierRewards({guaranteedModifierTiers:[w.ROGUE,w.ROGUE,w.ULTRA,w.ULTRA,w.ULTRA,w.ULTRA],allowLuckUpgrades:!1}),!0;case zA.ELITE_FOUR_1:R=[U.LORELEI,U.WILL,U.SIDNEY,U.AARON,U.SHAUNTAL,U.MALVA,IE([U.HALA,U.MOLAYNE]),U.MARNIE_ELITE,U.RIKA];break;case zA.ELITE_FOUR_2:R=[U.BRUNO,U.KOGA,U.PHOEBE,U.BERTHA,U.MARSHAL,U.SIEBOLD,U.OLIVIA,U.NESSA_ELITE,U.POPPY];break;case zA.ELITE_FOUR_3:R=[U.AGATHA,U.BRUNO,U.GLACIA,U.FLINT,U.GRIMSLEY,U.WIKSTROM,U.ACEROLA,IE([U.BEA_ELITE,U.ALLISTER_ELITE]),U.LARRY_ELITE];break;case zA.ELITE_FOUR_4:R=[U.LANCE,U.KAREN,U.DRAKE,U.LUCIAN,U.CAITLIN,U.DRASNA,U.KAHILI,U.RAIHAN_ELITE,U.HASSEL];break;case zA.CHAMPION:R=[U.BLUE,IE([U.RED,U.LANCE_CHAMPION]),IE([U.STEVEN,U.WALLACE]),U.CYNTHIA,IE([U.ALDER,U.IRIS]),U.DIANTHA,U.HAU,U.LEON,IE([U.GEETA,U.NEMONA])];break}if(R.length===0)return!1;if(a.includes(A))return s.setBattleType(Ut.TRAINER).setSeedOffsetWave(zA.EVIL_GRUNT_1).setGetTrainerFunc(ys(R,!0)),!0;if(A>=zA.ELITE_FOUR_1&&A<=zA.CHAMPION){const l=R;return s.setBattleType(Ut.TRAINER).setGetTrainerFunc(()=>new Gs(l[this.value-1],OA.DEFAULT)),!0}else return!1}getDifficulty(){return this.value>0?1:0}getValue(A){const s=A??this.value;return s===0?u.t("settings:off"):u.t(`starterSelectUiHandler:gen${s}`)}getDescription(A){const s=A??this.value;return s===0?u.t("challenges:singleGeneration.desc_default"):u.t("challenges:singleGeneration.desc",{gen:u.t(`challenges:singleGeneration.gen_${s}`)})}static loadChallenge(A){const s=new tM;return s.value=A.value,s.severity=A.severity,s}};N(tM,"SingleGenerationChallenge");let $R=tM;const HI=class HI extends tI{constructor(){super(it.SINGLE_TYPE,18)}applyStarterChoice(A,s,R,a=!1){const i=Vn(A.speciesId,R.formIndex),r=[i.type1,i.type2];if(a&&!HI.SPECIES_OVERRIDES.includes(A.speciesId)){const L=[A.speciesId];for(;L.length;){const o=L.pop();o&&bt.hasOwnProperty(o)&&bt[o].forEach(l=>{L.push(l.speciesId),r.push(ke(l.speciesId).type1,ke(l.speciesId).type2)}),o&&JO.hasOwnProperty(o)&&JO[o].forEach(l=>{ke(o).forms.forEach(C=>{l.formKey===C.formKey&&r.push(C.type1,C.type2)})})}}return r.includes(this.value-1)?!1:(s.value=!1,!0)}applyPokemonInBattle(A,s){return A.isPlayer()&&!A.isOfType(this.value-1,!1,!1,!0)&&!HI.TYPE_OVERRIDES.some(R=>R.type===this.value-1&&(A.isFusion()&&R.fusion?A.fusionSpecies:A.species).speciesId===R.species)?(s.value=!1,!0):!1}getDifficulty(){return this.value>0?1:0}getValue(A){return A===void 0&&(A=this.value),I[this.value-1].toLowerCase()}getDescription(A){A===void 0&&(A=this.value);const s=u.t(`pokemonInfo:Type.${I[this.value-1]}`),R=`[color=${m1[I[this.value-1]]}][shadow=${F1[I[this.value-1]]}]${s}[/shadow][/color]`,a=u.t("challenges:singleType.desc_default"),i=u.t("challenges:singleType.desc",{type:R});return this.value===0?a:i}static loadChallenge(A){const s=new HI;return s.value=A.value,s.severity=A.severity,s}};N(HI,"SingleTypeChallenge"),HI.TYPE_OVERRIDES=[{species:e.CASTFORM,type:I.NORMAL,fusion:!1}],HI.SPECIES_OVERRIDES=[e.MELOETTA];let gE=HI;const AM=class AM extends tI{constructor(){super(it.FRESH_START,1)}applyStarterChoice(A,s){return ga.includes(A.speciesId)?!1:(s.value=!1,!0)}applyStarterCost(A,s){return ga.includes(A)?(s.value=KA[A],!0):!1}applyStarterModify(A){return A.abilityIndex=0,A.passive=!1,A.nature=At.HARDY,A.moveset=A.species.getLevelMoves().filter(s=>s[0]<=5).map(s=>s[1]).slice(0,4).map(s=>new nt(s)),A.luck=0,A.shiny=!1,A.variant=0,A.formIndex=0,A.ivs=[15,15,15,15,15,15],!0}getDifficulty(){return 0}static loadChallenge(A){const s=new AM;return s.value=A.value,s.severity=A.severity,s}};N(AM,"FreshStartChallenge");let rS=AM;const EM=class EM extends tI{constructor(){super(it.INVERSE_BATTLE,1)}static loadChallenge(A){const s=new EM;return s.value=A.value,s.severity=A.severity,s}getDifficulty(){return 0}applyTypeEffectiveness(A){return A.value<1?(A.value=2,!0):A.value>1?(A.value=.5,!0):!1}};N(EM,"InverseBattleChallenge");let LS=EM;const sM=class sM extends tI{constructor(){super(it.FLIP_STAT,1)}applyFlipStat(A,s){const R=I_(s);return s[0]=R[5],s[1]=R[4],s[2]=R[3],s[3]=R[2],s[4]=R[1],s[5]=R[0],!0}static loadChallenge(A){const s=new sM;return s.value=A.value,s.severity=A.severity,s}};N(sM,"FlipStatChallenge");let Yr=sM;const RM=class RM extends tI{constructor(){super(it.LOWER_MAX_STARTER_COST,9)}getValue(A){return A===void 0&&(A=this.value),(pP-A).toString()}applyStarterChoice(A,s){return KA[A.speciesId]>pP-this.value?(s.value=!1,!0):!1}static loadChallenge(A){const s=new RM;return s.value=A.value,s.severity=A.severity,s}};N(RM,"LowerStarterMaxCostChallenge");let WP=RM;const OM=class OM extends tI{constructor(){super(it.LOWER_STARTER_POINTS,9)}getValue(A){return A===void 0&&(A=this.value),(pP-A).toString()}applyStarterPoints(A){return A.value-=this.value,!0}static loadChallenge(A){const s=new OM;return s.value=A.value,s.severity=A.severity,s}};N(OM,"LowerStarterPointsChallenge");let YP=OM;function as(E,A,...s){let R=!1;return E.challenges.forEach(a=>{if(a.value!==0)switch(A){case 0:R||(R=a.applyStarterChoice(s[0],s[1],s[2],s[3]));break;case 1:R||(R=a.applyStarterPoints(s[0]));break;case 2:R||(R=a.applyStarterCost(s[0],s[1]));break;case 3:R||(R=a.applyStarterModify(s[0]));break;case 4:R||(R=a.applyPokemonInBattle(s[0],s[1]));break;case 5:R||(R=a.applyFixedBattle(s[0],s[1]));break;case 6:R||(R=a.applyTypeEffectiveness(s[0]));break;case 7:R||(R=a.applyLevelChange(s[0],s[1],s[2],s[3]));break;case 8:R||(R=a.applyMoveSlot(s[0],s[1]));break;case 9:R||(R=a.applyPassiveAccess(s[0],s[1]));break;case 10:R||(R=a.applyGameModeModify(E));break;case 11:R||(R=a.applyMoveAccessLevel(s[0],s[1],s[2],s[3]));break;case 12:R||(R=a.applyMoveWeight(s[0],s[1],s[2],s[3]));break;case 13:R||(R=a.applyFlipStat(s[0],s[1]));break}}),R}N(as,"applyChallenges");function f8(E){switch(E.id){case it.SINGLE_GENERATION:return $R.loadChallenge(E);case it.SINGLE_TYPE:return gE.loadChallenge(E);case it.LOWER_MAX_STARTER_COST:return WP.loadChallenge(E);case it.LOWER_STARTER_POINTS:return YP.loadChallenge(E);case it.FRESH_START:return rS.loadChallenge(E);case it.INVERSE_BATTLE:return LS.loadChallenge(E);case it.FLIP_STAT:return Yr.loadChallenge(E)}throw new Error("Unknown challenge copied")}N(f8,"copyChallenge");const B8=[];function FQ(){B8.push(new $R,new gE,new rS,new LS,new Yr)}N(FQ,"initChallenges");const s6=u.t("partyUiHandler:choosePokemon");var Ps=(E=>(E[E.SWITCH=0]="SWITCH",E[E.FAINT_SWITCH=1]="FAINT_SWITCH",E[E.POST_BATTLE_SWITCH=2]="POST_BATTLE_SWITCH",E[E.REVIVAL_BLESSING=3]="REVIVAL_BLESSING",E[E.MODIFIER=4]="MODIFIER",E[E.MOVE_MODIFIER=5]="MOVE_MODIFIER",E[E.TM_MODIFIER=6]="TM_MODIFIER",E[E.REMEMBER_MOVE_MODIFIER=7]="REMEMBER_MOVE_MODIFIER",E[E.MODIFIER_TRANSFER=8]="MODIFIER_TRANSFER",E[E.SPLICE=9]="SPLICE",E[E.RELEASE=10]="RELEASE",E[E.CHECK=11]="CHECK",E[E.SELECT=12]="SELECT",E))(Ps||{}),NS=(E=>(E[E.CANCEL=-1]="CANCEL",E[E.SEND_OUT=0]="SEND_OUT",E[E.PASS_BATON=1]="PASS_BATON",E[E.REVIVE=2]="REVIVE",E[E.APPLY=3]="APPLY",E[E.TEACH=4]="TEACH",E[E.TRANSFER=5]="TRANSFER",E[E.SUMMARY=6]="SUMMARY",E[E.UNPAUSE_EVOLUTION=7]="UNPAUSE_EVOLUTION",E[E.SPLICE=8]="SPLICE",E[E.UNSPLICE=9]="UNSPLICE",E[E.RELEASE=10]="RELEASE",E[E.RENAME=11]="RENAME",E[E.SELECT=12]="SELECT",E[E.SCROLL_UP=1e3]="SCROLL_UP",E[E.SCROLL_DOWN=1001]="SCROLL_DOWN",E[E.FORM_CHANGE_ITEM=2e3]="FORM_CHANGE_ITEM",E[E.MOVE_1=3e3]="MOVE_1",E[E.MOVE_2=3001]="MOVE_2",E[E.MOVE_3=3002]="MOVE_3",E[E.MOVE_4=3003]="MOVE_4",E[E.ALL=4e3]="ALL",E))(NS||{});const FO=class FO extends vs{constructor(){super(Ie.PARTY),this.optionsCursor=0,this.optionsScrollCursor=0,this.optionsScrollTotal=0,this.lastCursor=0,this.FilterChallengeLegal=A=>{const s=new Lt(!0);return as(n.gameMode,XE.POKEMON_IN_BATTLE,A,s),s.value?null:u.t("partyUiHandler:cantBeUsed",{pokemonName:te(A)})},this.localizedOptions=[0,6,-1,3,10,4,8,9,2,5,7,1,11,12]}setup(){const A=this.getUi(),s=n.add.container(0,0);s.setName("party"),s.setVisible(!1),A.add(s),this.partyContainer=s,this.partyBg=n.add.image(0,0,"party_bg"),this.partyBg.setName("img-party-bg"),s.add(this.partyBg),this.partyBg.setOrigin(0,1);const R=n.add.container(0,0);R.setName("party-slots"),s.add(R),this.partySlotsContainer=R;const a=n.add.container(0,-32);a.setName("party-msg-box"),s.add(a);const i=Gt(1,31,262,30);i.setName("window-party-msg-box"),i.setOrigin(0,1),a.add(i),this.partyMessageBox=i;const r=le(10,8,s6,Q.WINDOW,{maxLines:2});r.setName("text-party-msg"),r.setOrigin(0,0),a.add(r),this.message=r;const L=new wP(291,-16);s.add(L),this.partyCancelButton=L,this.optionsContainer=n.add.container(n.game.canvas.width/6-1,-1),s.add(this.optionsContainer),this.iconAnimHandler=new cr,this.iconAnimHandler.setup();const o=1;this.moveInfoOverlay=new MO({scale:o,top:!0,x:1,y:-MO.getHeight(o)-1,width:n.game.canvas.width/12-30}),A.add(this.moveInfoOverlay),this.options=[],this.partySlots=[]}show(A){return!A.length||this.active?!1:(super.show(A),this.moveInfoOverlay.clear(),this.partyUiMode=A[0],this.fieldIndex=A.length>1?A[1]:-1,this.selectCallback=A.length>2&&A[2]instanceof Function?A[2]:void 0,this.selectFilter=A.length>3&&A[3]instanceof Function?A[3]:FO.FilterAll,this.moveSelectFilter=A.length>4&&A[4]instanceof Function?A[4]:FO.FilterAllMoves,this.tmMoveId=A.length>5&&A[5]?A[5]:t.NONE,this.showMovePp=A.length>6&&A[6],this.partyContainer.setVisible(!0),this.partyBg.setTexture(`party_bg${n.currentBattle.double?"_double":""}`),this.populatePartySlots(),this.setCursor(0),!0)}processInput(A){var a,i;const s=this.getUi();if(this.pendingPrompt||this.blockInput)return!1;if(this.awaitingActionInput){if((A===k.ACTION||A===k.CANCEL)&&this.onActionInput){s.playSelect();const r=this.onActionInput;return this.onActionInput=null,r(),this.awaitingActionInput=!1,!0}return!1}let R=!1;if(this.optionsMode){const r=this.options[this.optionsCursor];if(A===k.ACTION){const L=n.getPlayerParty()[this.cursor];if(this.partyUiMode===8&&!this.transferMode&&r!==-1){this.startTransfer();let o;for(let l=0;l<n.getPlayerParty().length;l++){const C=n.getPlayerParty()[l],M=N(P=>n.findModifiers(h=>h instanceof dt&&h.isTransferable&&h.pokemonId===P.id),"getTransferrableItemsFromPokemon"),D=n.findModifier(P=>P instanceof dt&&P.pokemonId===C.id&&P.matchType(M(L)[this.transferOptionCursor])),_=this.partySlots.filter(P=>P.getPokemon()===C)[0];l!==this.transferCursor?D?D.getMaxStackCount()===D.stackCount?o=u.t("partyUiHandler:notAble"):o=u.t("partyUiHandler:able"):o=u.t("partyUiHandler:able"):o="",_.slotHpBar.setVisible(!1),_.slotHpOverlay.setVisible(!1),_.slotHpText.setVisible(!1),_.slotDescriptionLabel.setText(o),_.slotDescriptionLabel.setVisible(!0)}return this.clearOptions(),s.playSelect(),!0}else if(this.partyUiMode===7&&r!==-1){this.moveInfoOverlay.clear();const o=this.selectFilter(L);return o===null?((a=this.selectCallback)==null||a.call(this,this.cursor,r),this.clearOptions()):(this.clearOptions(),this.showText(o,void 0,()=>this.showText("",0),void 0,!0)),s.playSelect(),!0}else if(r!==6&&r!==7&&r!==9&&r!==10&&r!==-1&&r!==11||r===10&&this.partyUiMode===10){let o;const l=N(C=>n.findModifiers(M=>M instanceof dt&&M.isTransferable&&M.pokemonId===C.id),"getTransferrableItemsFromPokemon");if(r!==5&&r!==8?(o=this.selectFilter(L),o===null&&(r===0||r===1)&&(o=this.FilterChallengeLegal(L)),o===null&&this.partyUiMode===5&&(o=this.moveSelectFilter(L.moveset[this.optionsCursor]))):o=this.selectFilter(L,l(n.getPlayerParty()[this.transferCursor])[this.transferOptionCursor]),o===null){if(this.partyUiMode!==9&&this.clearOptions(),this.selectCallback&&this.partyUiMode!==11)if(r===5)this.transferCursor!==this.cursor&&(this.transferAll?l(n.getPlayerParty()[this.transferCursor]).forEach((C,M)=>this.selectCallback(this.transferCursor,M,this.transferQuantitiesMax[M],this.cursor)):this.selectCallback(this.transferCursor,this.transferOptionCursor,this.transferQuantities[this.transferOptionCursor],this.cursor)),this.clearTransfer();else if(this.partyUiMode===9)r===8?(this.selectCallback(this.transferCursor,this.cursor),this.clearTransfer()):this.startTransfer(),this.clearOptions();else if(r===10)this.doRelease(this.cursor);else{const C=this.selectCallback;this.selectCallback=null,C(this.cursor,r)}else if(r>=2e3&&n.getCurrentPhase()instanceof _O){if(this.partyUiMode===11){const M=this.getFormChangeItemsModifiers(L)[r-2e3];M.active=!M.active,n.triggerPokemonFormChange(L,he,!1,!0)}}else this.cursor&&n.getCurrentPhase().handleCommand(LA.POKEMON,this.cursor,r===1);return this.partyUiMode!==4&&this.partyUiMode!==6&&this.partyUiMode!==5&&s.playSelect(),!0}else this.clearOptions(),this.showText(o,void 0,()=>this.showText("",0),void 0,!0)}else{if(r===6)return s.playSelect(),s.setModeWithoutClear(Ie.SUMMARY,L).then(()=>this.clearOptions()),!0;if(r===7)this.clearOptions(),s.playSelect(),L.pauseEvolutions=!L.pauseEvolutions,this.showText(u.t(L.pauseEvolutions?"partyUiHandler:pausedEvolutions":"partyUiHandler:unpausedEvolutions",{pokemonName:te(L)}),void 0,()=>this.showText("",0),null,!0);else if(r===9)this.clearOptions(),s.playSelect(),this.showText(u.t("partyUiHandler:unspliceConfirmation",{fusionName:(i=L.fusionSpecies)==null?void 0:i.name,pokemonName:L.name}),null,()=>{s.setModeWithoutClear(Ie.CONFIRM,()=>{const o=L.name;L.unfuse().then(()=>{this.clearPartySlots(),this.populatePartySlots(),s.setMode(Ie.PARTY),this.showText(u.t("partyUiHandler:wasReverted",{fusionName:o,pokemonName:L.name}),void 0,()=>{s.setMode(Ie.PARTY),this.showText("",0)},null,!0)})},()=>{s.setMode(Ie.PARTY),this.showText("",0)})});else{if(r===10)return this.clearOptions(),s.playSelect(),this.cursor>=n.currentBattle.getBattlerCount()||!L.isAllowedInBattle()?(this.blockInput=!0,this.showText(u.t("partyUiHandler:releaseConfirmation",{pokemonName:te(L)}),null,()=>{this.blockInput=!1,s.setModeWithoutClear(Ie.CONFIRM,()=>{s.setMode(Ie.PARTY),this.doRelease(this.cursor)},()=>{s.setMode(Ie.PARTY),this.showText("",0)})})):this.showText(u.t("partyUiHandler:releaseInBattle"),null,()=>this.showText("",0),null,!0),!0;if(r===11)return this.clearOptions(),s.playSelect(),s.setModeWithoutClear(Ie.RENAME_POKEMON,{buttonActions:[o=>{s.playSelect(),L.nickname=o,L.updateInfo(),this.clearPartySlots(),this.populatePartySlots(),s.setMode(Ie.PARTY)},()=>{s.setMode(Ie.PARTY)}]},L),!0;if(r===-1)return this.processInput(k.CANCEL);if(r===12)return s.playSelect(),!0}}}else{if(A===k.CANCEL)return this.clearOptions(),s.playSelect(),!0;switch(A){case k.LEFT:this.partyUiMode===8&&(this.transferQuantities[r]=this.transferQuantities[r]===1?this.transferQuantitiesMax[r]:this.transferQuantities[r]-1,this.updateOptions(),R=this.setCursor(this.optionsCursor));break;case k.RIGHT:this.partyUiMode===8&&(this.transferQuantities[r]=this.transferQuantities[r]===this.transferQuantitiesMax[r]?1:this.transferQuantities[r]+1,this.updateOptions(),R=this.setCursor(this.optionsCursor));break;case k.UP:this.partyUiMode===8&&(r!==4e3&&(this.transferQuantities[r]=this.transferQuantitiesMax[r]),this.updateOptions()),R=this.setCursor(this.optionsCursor?this.optionsCursor-1:this.options.length-1);break;case k.DOWN:this.partyUiMode===8&&(r!==4e3&&(this.transferQuantities[r]=this.transferQuantitiesMax[r]),this.updateOptions()),R=this.setCursor(this.optionsCursor<this.options.length-1?this.optionsCursor+1:0);break}if(this.partyUiMode===7){const L=this.options[this.optionsCursor],o=n.getPlayerParty()[this.cursor],l=we[o.getLearnableLevelMoves()[L]];l?this.moveInfoOverlay.show(l):this.moveInfoOverlay.clear()}}}else{if(A===k.ACTION){if(this.cursor<6){if(this.partyUiMode===8&&!this.transferMode){const o=n.findModifiers(l=>l instanceof dt&&l.isTransferable&&l.pokemonId===n.getPlayerParty()[this.cursor].id);this.transferQuantities=o.map(l=>l.getStackCount()),this.transferQuantitiesMax=o.map(l=>l.getStackCount())}this.showOptions(),s.playSelect()}else if(this.partyUiMode===1||this.partyUiMode===3)s.playError();else return this.processInput(k.CANCEL);return!0}else if(A===k.CANCEL){if((this.partyUiMode===8||this.partyUiMode===9)&&this.transferMode)this.clearTransfer(),s.playSelect();else if(this.partyUiMode!==1&&this.partyUiMode!==3)if(this.selectCallback){const o=this.selectCallback;this.selectCallback=null,o(6,-1),s.playSelect()}else s.setMode(Ie.COMMAND,this.fieldIndex),s.playSelect();return!0}const r=this.partySlots.length,L=n.currentBattle.getBattlerCount();switch(A){case k.UP:R=this.setCursor(this.cursor?this.cursor<6?this.cursor-1:r-1:6);break;case k.DOWN:R=this.setCursor(this.cursor<6?this.cursor<r-1?this.cursor+1:6:0);break;case k.LEFT:this.cursor>=L&&this.cursor<=6&&(R=this.setCursor(0));break;case k.RIGHT:if(r===L){R=this.setCursor(6);break}else if(L>=2&&r>L&&this.getCursor()===0&&this.lastCursor===1){R=this.setCursor(2);break}else if(r>L&&this.cursor<L){R=this.setCursor(this.lastCursor<6&&this.lastCursor||L);break}}}return R&&s.playSelect(),R}populatePartySlots(){const A=n.getPlayerParty();this.cursor<6&&this.cursor>=A.length?this.cursor=A.length-1:this.cursor===6&&this.partyCancelButton.select(),this.lastCursor<6&&this.lastCursor>=A.length&&(this.lastCursor=A.length-1);for(const s in A){const R=parseInt(s),a=new yP(R,A[s],this.iconAnimHandler,this.partyUiMode,this.tmMoveId);n.add.existing(a),this.partySlotsContainer.add(a),this.partySlots.push(a),this.cursor===R&&a.select()}}setCursor(A){let s;if(this.optionsMode){s=this.optionsCursor!==A;let R=!1;if(s&&this.optionsScroll)if(Math.abs(A-this.optionsCursor)===this.options.length-1)this.optionsScrollCursor=A?this.optionsScrollTotal-8:0,this.updateOptions();else{const a=A&&A>this.optionsCursor;a?this.options[A]===1001&&(R=!0,this.optionsScrollCursor++):!A&&this.optionsScrollCursor&&(R=!0,this.optionsScrollCursor--),R&&this.optionsScrollCursor===1&&(this.optionsScrollCursor+=a?1:-1)}R?this.updateOptions():this.optionsCursor=A,this.optionsCursorObj||(this.optionsCursorObj=n.add.image(0,0,"cursor"),this.optionsCursorObj.setOrigin(0,0),this.optionsContainer.add(this.optionsCursorObj)),this.optionsCursorObj.setPosition(8-this.optionsBg.displayWidth,-19-16*(this.options.length-1-this.optionsCursor))}else s=this.cursor!==A,s&&(this.lastCursor=this.cursor,this.cursor=A,this.lastCursor<6?this.partySlots[this.lastCursor].deselect():this.lastCursor===6&&this.partyCancelButton.deselect(),A<6?this.partySlots[A].select():A===6&&this.partyCancelButton.select());return s}showText(A,s,R,a,i,r){A.length===0&&(A=s6),(A==null?void 0:A.indexOf(`
`))===-1?(this.partyMessageBox.setSize(262,30),this.message.setY(10)):(this.partyMessageBox.setSize(262,42),this.message.setY(-5)),super.showText(A,s,R,a,i,r)}showOptions(){if(this.cursor===6)return;this.optionsMode=!0;let A=u.t("partyUiHandler:doWhatWithThisPokemon");switch(this.partyUiMode){case 5:A=u.t("partyUiHandler:selectAMove");break;case 8:this.transferMode||(A=u.t("partyUiHandler:changeQuantity"));break;case 9:this.transferMode||(A=u.t("partyUiHandler:selectAnotherPokemonToSplice"));break}this.showText(A,0),this.updateOptions(),this.partyUiMode===8?this.partyMessageBox.setSize(262-Math.max(this.optionsBg.displayWidth-56,0),42):this.partyMessageBox.setSize(262-Math.max(this.optionsBg.displayWidth-56,0),30),this.setCursor(0)}updateOptions(){var l;const A=n.getPlayerParty()[this.cursor],s=this.partyUiMode===7?A.getLearnableLevelMoves():[];this.partyUiMode===7&&(s!=null&&s.length)&&this.moveInfoOverlay.show(we[s[0]]);const R=this.partyUiMode===8?n.findModifiers(C=>C instanceof dt&&C.isTransferable&&C.pokemonId===A.id):[];this.options.length&&(this.options.splice(0,this.options.length),this.optionsContainer.removeAll(!0),this.eraseOptionsCursor());let a;if(this.partyUiMode!==5&&this.partyUiMode!==7&&(this.transferMode||this.partyUiMode!==8)){switch(this.partyUiMode){case 0:case 1:case 2:if(this.cursor>=n.currentBattle.getBattlerCount()){const C=this.partyUiMode!==1&&n.findModifier(_=>_ instanceof vI&&_.pokemonId===n.getPlayerField()[this.fieldIndex].id),M=n.getPlayerField()[this.fieldIndex].getMoveHistory(),D=this.partyUiMode===1&&M.length&&((l=we[M[M.length-1].move].getAttrs(zs)[0])==null?void 0:l.isBatonPass())&&M[M.length-1].result===oA.SUCCESS;this.options.push(D&&!C?1:0),C&&!D&&this.options.push(1)}break;case 3:this.options.push(2);break;case 4:this.options.push(3);break;case 6:this.options.push(4);break;case 8:this.options.push(5);break;case 9:this.transferMode?this.cursor!==this.transferCursor&&this.options.push(8):this.options.push(3);break;case 10:this.options.push(10);break;case 11:if(n.getCurrentPhase()instanceof _O){a=this.getFormChangeItemsModifiers(A);for(let C=0;C<a.length;C++)this.options.push(2e3+C)}break;case 12:this.options.push(12);break}this.options.push(6),this.options.push(11),(bt.hasOwnProperty(A.species.speciesId)||A.isFusion()&&A.fusionSpecies&&bt.hasOwnProperty(A.fusionSpecies.speciesId))&&this.options.push(7),this.partyUiMode===0?(A.isFusion()&&this.options.push(9),this.options.push(10)):this.partyUiMode===9&&A.isFusion()&&this.options.push(9)}else if(this.partyUiMode===5)for(let C=0;C<A.moveset.length;C++)this.options.push(3e3+C);else if(this.partyUiMode===7){const C=A.getLearnableLevelMoves();for(let M=0;M<C.length;M++)this.options.push(M)}else{for(let C=0;C<R.length;C++)this.options.push(C);R.length>1&&this.options.push(4e3)}this.optionsScrollTotal=this.options.length;let i=this.optionsScrollCursor,r=Math.min(this.optionsScrollTotal,i+(!i||this.optionsScrollCursor+8>=this.optionsScrollTotal?8:7));this.optionsScroll=this.optionsScrollTotal>9,this.optionsScroll&&(this.options.splice(r,this.optionsScrollTotal),this.options.splice(0,i),i&&this.options.unshift(1e3),r<this.optionsScrollTotal&&this.options.push(1001)),this.options.push(-1),this.optionsBg=Gt(0,0,0,16*this.options.length+13),this.optionsBg.setOrigin(1,1),this.optionsContainer.add(this.optionsBg),i=0,r=this.options.length;let L=0;const o=[];for(let C=i;C<r;C++){const M=this.options[this.options.length-(C+1)];let D=!1,_;if(M===1e3)_="↑";else if(M===1001)_="↓";else if(this.partyUiMode!==7&&(this.partyUiMode!==8||this.transferMode)||M===-1)switch(M){case 3e3:case 3001:case 3002:case 3003:const d=A.moveset[M-3e3];if(this.showMovePp){const f=d.getMovePp(),B=f-d.ppUsed;_=`${d.getName()} ${B}/${f}`}else _=d.getName();break;default:if(a&&M>=2e3){const f=a[M-2e3];_=`${f.active?u.t("partyUiHandler:DEACTIVATE"):u.t("partyUiHandler:ACTIVATE")} ${f.type.name}`}else M===7?_=`${A.pauseEvolutions?u.t("partyUiHandler:UNPAUSE_EVOLUTION"):u.t("partyUiHandler:PAUSE_EVOLUTION")}`:this.localizedOptions.includes(M)?_=u.t(`partyUiHandler:${NS[M]}`):_=Jn(NS[M]);break}else if(this.partyUiMode===7){const d=s[M];_=we[d].name,D=!A.getSpeciesForm().getLevelMoves().find(f=>f[1]===d)}else M===4e3?_=u.t("partyUiHandler:ALL"):_=R[M].type.name;const P=-6-16*C,h=wE(0,P-16,_,Q.WINDOW,{maxLines:1});D&&(h.setColor("#40c8f8"),h.setShadowColor("#006090")),h.setOrigin(0,0);const H=R[M];if(this.partyUiMode===8&&this.transferQuantitiesMax[M]>1&&!this.transferMode&&H!==void 0&&H.type.name===_){let d=` (${this.transferQuantities[M]})`;this.transferQuantitiesMax[M]===H.getMaxHeldItemCount(void 0)&&(d=`[color=${aA(Q.SUMMARY_RED)}]${d}[/color]`),h.setText(_+d)}h.setText(`[shadow]${h.text}[/shadow]`),o.push(h),L=Math.max(h.displayWidth,L),this.optionsContainer.add(h)}this.optionsBg.width=Math.max(L+24,94);for(const C of o)C.x=15-this.optionsBg.width}startTransfer(){this.transferMode=!0,this.transferCursor=this.cursor,this.transferOptionCursor=this.getOptionsCursorWithScroll(),this.transferAll=this.options[this.optionsCursor]===4e3,this.partySlots[this.transferCursor].setTransfer(!0)}clearTransfer(){this.transferMode=!1,this.transferAll=!1,this.partySlots[this.transferCursor].setTransfer(!1);for(let A=0;A<this.partySlots.length;A++)this.partySlots[A].slotDescriptionLabel.setVisible(!1),this.partySlots[A].slotHpBar.setVisible(!0),this.partySlots[A].slotHpOverlay.setVisible(!0),this.partySlots[A].slotHpText.setVisible(!0)}doRelease(A){this.showText(this.getReleaseMessage(te(n.getPlayerParty()[A])),null,()=>{if(this.clearPartySlots(),n.removePartyMemberModifiers(A),n.getPlayerParty().splice(A,1)[0].destroy(),this.populatePartySlots(),this.cursor>=n.getPlayerParty().length&&this.setCursor(this.cursor-1),this.partyUiMode===10){const R=this.selectCallback;this.selectCallback=null,R&&R(this.cursor,10)}this.showText("",0)},null,!0)}getReleaseMessage(A){const s=_A(128);return s<20?u.t("partyUiHandler:goodbye",{pokemonName:A}):s<40?u.t("partyUiHandler:byebye",{pokemonName:A}):s<60?u.t("partyUiHandler:farewell",{pokemonName:A}):s<80?u.t("partyUiHandler:soLong",{pokemonName:A}):s<100?u.t("partyUiHandler:thisIsWhereWePart",{pokemonName:A}):s<108?u.t("partyUiHandler:illMissYou",{pokemonName:A}):s<116?u.t("partyUiHandler:illNeverForgetYou",{pokemonName:A}):s<124?u.t("partyUiHandler:untilWeMeetAgain",{pokemonName:A}):s<127?u.t("partyUiHandler:sayonara",{pokemonName:A}):u.t("partyUiHandler:smellYaLater",{pokemonName:A})}getFormChangeItemsModifiers(A){let s=n.findModifiers(a=>a instanceof UR&&a.pokemonId===A.id);const R=s.filter(a=>a.active&&a.formChangeItem===lR.ULTRANECROZIUM_Z);return R.length>0?R:(s.find(a=>a.active)?s=s.filter(a=>a.active||a.formChangeItem===lR.ULTRANECROZIUM_Z):A.species.speciesId===e.NECROZMA&&(s=s.filter(a=>a.formChangeItem!==lR.ULTRANECROZIUM_Z)),s)}getOptionsCursorWithScroll(){return this.optionsCursor+this.optionsScrollCursor+(this.options&&this.options[0]===1e3?-1:0)}clearOptions(){this.moveInfoOverlay.clear(),this.optionsMode=!1,this.optionsScroll=!1,this.optionsScrollCursor=0,this.optionsScrollTotal=0,this.options.splice(0,this.options.length),this.optionsContainer.removeAll(!0),this.eraseOptionsCursor(),this.partyMessageBox.setSize(262,30),this.showText("",0)}eraseOptionsCursor(){this.optionsCursorObj&&this.optionsCursorObj.destroy(),this.optionsCursorObj=null}clear(){super.clear(),this.moveInfoOverlay.clear(),this.partyContainer.setVisible(!1),this.clearPartySlots()}clearPartySlots(){this.partySlots.splice(0,this.partySlots.length),this.partySlotsContainer.removeAll(!0)}};N(FO,"PartyUiHandler"),FO.FilterAll=A=>null,FO.FilterNonFainted=A=>A.isFainted()?u.t("partyUiHandler:noEnergy",{pokemonName:te(A)}):null,FO.FilterFainted=A=>A.isFainted()?null:u.t("partyUiHandler:hasEnergy",{pokemonName:te(A)}),FO.FilterAllMoves=A=>null,FO.FilterItemMaxStacks=(A,s)=>{const R=n.findModifier(a=>a instanceof dt&&a.pokemonId===A.id&&a.matchType(s));return R&&R.stackCount===R.getMaxStackCount()?u.t("partyUiHandler:tooManyItems",{pokemonName:te(A)}):null},FO.NoEffectMessage=u.t("partyUiHandler:anyEffect");let VE=FO;const Am=class Am extends Phaser.GameObjects.Container{constructor(A,s,R,a,i){super(n,A>=n.currentBattle.getBattlerCount()?230.5:64,A>=n.currentBattle.getBattlerCount()?-184+(n.currentBattle.double?-40:0)+(28+(n.currentBattle.double?8:0))*A:-124+(n.currentBattle.double?-8:0)+A*64),this.slotIndex=A,this.pokemon=s,this.iconAnimHandler=R,this.setup(a,i)}getPokemon(){return this.pokemon}setup(A,s){var h;const R=n.currentBattle.getBattlerCount(),a=`party_slot${this.slotIndex>=R?"":"_main"}`,i=n.add.sprite(0,0,a,`${a}${this.pokemon.hp?"":"_fnt"}`);this.slotBg=i,this.add(i);const r=n.add.sprite(this.slotIndex>=R?-85.5:-51,this.slotIndex>=R?0:-20.5,"party_pb");this.slotPb=r,this.add(r),this.pokemonIcon=n.addPokemonIcon(this.pokemon,r.x,r.y,.5,.5,!0),this.add(this.pokemonIcon),this.iconAnimHandler.addOrUpdate(this.pokemonIcon,eR.PASSIVE);const L=n.add.container(0,0);this.add(L);let o=this.pokemon.getNameToRender(),l;const C=le(0,0,o,Q.PARTY);for(l=C.displayWidth;l>(this.slotIndex>=R?52:76-(this.pokemon.fusionSpecies?8:0));)o=`${o.slice(0,o.endsWith(".")?-2:-1).trimEnd()}.`,C.setText(o),l=C.displayWidth;C.destroy(),this.slotName=le(0,0,o,Q.PARTY),this.slotName.setPositionRelative(i,this.slotIndex>=R?21:24,this.slotIndex>=R?2:10),this.slotName.setOrigin(0,0);const M=n.add.image(0,0,"party_slot_overlay_lv");M.setPositionRelative(this.slotName,8,12),M.setOrigin(0,0);const D=le(0,0,this.pokemon.level.toString(),this.pokemon.level<n.getMaxExpLevel()?Q.PARTY:Q.PARTY_RED);D.setPositionRelative(M,9,0),D.setOrigin(0,.25),L.add([this.slotName,M,D]);const _=SL(this.pokemon.getGender(!0));if(_){const H=le(0,0,_,Q.PARTY);H.setColor($n(this.pokemon.getGender(!0))),H.setShadowColor($n(this.pokemon.getGender(!0),!0)),this.slotIndex>=R?H.setPositionRelative(M,36,0):H.setPositionRelative(this.slotName,76-(this.pokemon.fusionSpecies?8:0),3),H.setOrigin(0,.25),L.add(H)}if(this.pokemon.fusionSpecies){const H=n.add.image(0,0,"icon_spliced");H.setScale(.5),H.setOrigin(0,0),this.slotIndex>=R?H.setPositionRelative(M,36+(_?8:0),.5):H.setPositionRelative(this.slotName,76,3.5),L.add(H)}if(this.pokemon.status){const H=n.add.sprite(0,0,YR("statuses"));H.setFrame(ne[(h=this.pokemon.status)==null?void 0:h.effect].toLowerCase()),H.setOrigin(0,0),H.setPositionRelative(M,this.slotIndex>=R?43:55,0),L.add(H)}if(this.pokemon.isShiny()){const H=this.pokemon.isFusion()&&this.pokemon.shiny&&this.pokemon.fusionShiny,d=n.add.image(0,0,`shiny_star_small${H?"_1":""}`);if(d.setOrigin(0,0),d.setPositionRelative(this.slotName,-9,3),d.setTint(yE(H?this.pokemon.variant:this.pokemon.getVariant())),L.add(d),H){const f=n.add.image(0,0,"shiny_star_small_2");f.setOrigin(0,0),f.setPosition(d.x,d.y),f.setTint(yE(this.pokemon.fusionVariant)),L.add(f)}}this.slotHpBar=n.add.image(0,0,"party_slot_hp_bar"),this.slotHpBar.setPositionRelative(i,this.slotIndex>=R?72:8,this.slotIndex>=R?6:31),this.slotHpBar.setOrigin(0,0),this.slotHpBar.setVisible(!1);const P=this.pokemon.getHpRatio();if(this.slotHpOverlay=n.add.sprite(0,0,"party_slot_hp_overlay",P>.5?"high":P>.25?"medium":"low"),this.slotHpOverlay.setPositionRelative(this.slotHpBar,16,2),this.slotHpOverlay.setOrigin(0,0),this.slotHpOverlay.setScale(P,1),this.slotHpOverlay.setVisible(!1),this.slotHpText=le(0,0,`${this.pokemon.hp}/${this.pokemon.getMaxHp()}`,Q.PARTY),this.slotHpText.setPositionRelative(this.slotHpBar,this.slotHpBar.width-3,this.slotHpBar.height-2),this.slotHpText.setOrigin(1,0),this.slotHpText.setVisible(!1),this.slotDescriptionLabel=le(0,0,"",Q.MESSAGE),this.slotDescriptionLabel.setPositionRelative(i,this.slotIndex>=R?94:32,this.slotIndex>=R?16:46),this.slotDescriptionLabel.setOrigin(0,1),this.slotDescriptionLabel.setVisible(!1),L.add([this.slotHpBar,this.slotHpOverlay,this.slotHpText,this.slotDescriptionLabel]),A!==6)this.slotDescriptionLabel.setVisible(!1),this.slotHpBar.setVisible(!0),this.slotHpOverlay.setVisible(!0),this.slotHpText.setVisible(!0);else{this.slotHpBar.setVisible(!1),this.slotHpOverlay.setVisible(!1),this.slotHpText.setVisible(!1);let H;this.pokemon.getMoveset().filter(d=>(d==null?void 0:d.moveId)===s).length>0?H=u.t("partyUiHandler:learned"):this.pokemon.compatibleTms.indexOf(s)===-1?H=u.t("partyUiHandler:notAble"):H=u.t("partyUiHandler:able"),this.slotDescriptionLabel.setText(H),this.slotDescriptionLabel.setVisible(!0)}}select(){this.selected||(this.selected=!0,this.iconAnimHandler.addOrUpdate(this.pokemonIcon,eR.ACTIVE),this.updateSlotTexture(),this.slotPb.setFrame("party_pb_sel"))}deselect(){this.selected&&(this.selected=!1,this.iconAnimHandler.addOrUpdate(this.pokemonIcon,eR.PASSIVE),this.updateSlotTexture(),this.slotPb.setFrame("party_pb"))}setTransfer(A){this.transfer!==A&&(this.transfer=A,this.updateSlotTexture())}updateSlotTexture(){const A=n.currentBattle.getBattlerCount();this.slotBg.setTexture(`party_slot${this.slotIndex>=A?"":"_main"}`,`party_slot${this.slotIndex>=A?"":"_main"}${this.transfer?"_swap":this.pokemon.hp?"":"_fnt"}${this.selected?"_sel":""}`)}};N(Am,"PartySlot");let yP=Am;const Em=class Em extends Phaser.GameObjects.Container{constructor(A,s){super(n,A,s),this.setup()}setup(){const A=n.add.sprite(0,0,"party_cancel");this.add(A),this.partyCancelBg=A;const s=n.add.sprite(-17,0,"party_pb");this.add(s),this.partyCancelPb=s;const R=le(-8,-7,u.t("partyUiHandler:cancel"),Q.PARTY);this.add(R)}select(){this.selected||(this.selected=!0,this.partyCancelBg.setFrame("party_cancel_sel"),this.partyCancelPb.setFrame("party_pb_sel"))}deselect(){this.selected&&(this.selected=!1,this.partyCancelBg.setFrame("party_cancel"),this.partyCancelPb.setFrame("party_pb"))}};N(Em,"PartyCancelButton");let wP=Em;const sm=class sm extends Ts{constructor(A){super(A)}start(){var R;super.start();const A=n.currentBattle.turnCommands[this.fieldIndex],s=(R=A==null?void 0:A.move)==null?void 0:R.move;n.ui.setMode(Ie.TARGET_SELECT,this.fieldIndex,s,a=>{n.ui.setMode(Ie.MESSAGE);const i=n.getField(),r=i[this.fieldIndex],L=we[s];if(L&&r.isMoveTargetRestricted(L.id,r,i[a[0]])){const o=r.getRestrictingTag(s,r,i[a[0]]).selectionDeniedText(r,L.id);n.queueMessage(u.t(o,{moveName:L.name}),0,!0),a=[]}a.length<1?(n.currentBattle.turnCommands[this.fieldIndex]=null,n.unshiftPhase(new TS(this.fieldIndex))):A.targets=a,(A==null?void 0:A.command)===LA.BALL&&this.fieldIndex&&(n.currentBattle.turnCommands[this.fieldIndex-1].skip=!0),this.end()})}};N(sm,"SelectTargetPhase");let wC=sm;const cN=class cN extends qO{constructor(A){super(),this.fieldIndex=A}start(){var r,L,o,l,C;super.start(),n.updateGameInfo();const A=n.ui.handlers[Ie.COMMAND],s=n.currentBattle.battleType===Ut.MYSTERY_ENCOUNTER||n.currentBattle.battleType===Ut.TRAINER||n.arena.biomeType===T.END;if(A&&(n.currentBattle.turn===1&&(!n.commandCursorMemory||s)||A.getCursor()===LA.POKEMON?A.setCursor(LA.FIGHT):A.setCursor(A.getCursor())),this.fieldIndex)if(n.getPlayerField().filter(M=>M.isActive()).length===1)this.fieldIndex=oR.CENTER;else{const M=n.currentBattle.turnCommands[this.fieldIndex-1];((M==null?void 0:M.command)===LA.BALL||(M==null?void 0:M.command)===LA.RUN)&&(n.currentBattle.turnCommands[this.fieldIndex]={command:M==null?void 0:M.command,skip:!0})}if((r=n.currentBattle)!=null&&r.double&&((o=(L=this.getPokemon().getAlly())==null?void 0:L.getTag(y.COMMANDED))==null?void 0:o.getSourcePokemon())===this.getPokemon()&&(n.currentBattle.turnCommands[this.fieldIndex]={command:LA.FIGHT,move:{move:t.NONE,targets:[]},skip:!0}),this.getPokemon().getTag(y.ENCORE)&&this.getPokemon().lapseTag(y.ENCORE),(l=n.currentBattle.turnCommands[this.fieldIndex])!=null&&l.skip)return this.end();const a=n.getPlayerField()[this.fieldIndex],i=a.getMoveQueue();for(;i.length&&i[0]&&i[0].move&&!i[0].virtual&&(!a.getMoveset().find(M=>(M==null?void 0:M.moveId)===i[0].move)||!a.getMoveset()[a.getMoveset().findIndex(M=>(M==null?void 0:M.moveId)===i[0].move)].isUsable(a,i[0].ignorePP));)i.shift();if(i.length>0){const M=i[0];if(!M.move)this.handleCommand(LA.FIGHT,-1);else{const D=a.getMoveset().findIndex(_=>(_==null?void 0:_.moveId)===M.move);D>-1&&a.getMoveset()[D].isUsable(a,M.ignorePP)||M.virtual?this.handleCommand(LA.FIGHT,D,M.ignorePP,M):n.ui.setMode(Ie.COMMAND,this.fieldIndex)}}else n.currentBattle.isBattleMysteryEncounter()&&((C=n.currentBattle.mysteryEncounter)!=null&&C.skipToFightInput)?(n.ui.clearText(),n.ui.setMode(Ie.FIGHT,this.fieldIndex)):n.ui.setMode(Ie.COMMAND,this.fieldIndex)}handleCommand(A,s,...R){var r,L;const a=n.getPlayerField()[this.fieldIndex];let i=!1;switch(A){case LA.FIGHT:let o=!1;const l=R.length===2?R[1]:void 0;if(s===-1||a.trySelectMove(s,R[0])||(o=s>-1&&!a.getMoveset().filter(h=>h==null?void 0:h.isUsable(a)).length)){let h;o?h=t.STRUGGLE:l!==void 0?h=l.move:s>-1?h=a.getMoveset()[s].moveId:h=t.NONE;const H={command:LA.FIGHT,cursor:s,move:{move:h,targets:[],ignorePP:R[0]},args:R},d=l===void 0?ta(a,h):{targets:l.targets,multiple:l.targets.length>1};h||(H.targets=[this.fieldIndex]),console.log(d,te(a)),d.targets.length>1&&d.multiple&&n.unshiftPhase(new wC(this.fieldIndex)),d.targets.length<=1||d.multiple?H.move.targets=d.targets:a.getTag(y.CHARGING)&&a.getMoveQueue().length>=1?H.move.targets=a.getMoveQueue()[0].targets:n.unshiftPhase(new wC(this.fieldIndex)),n.currentBattle.turnCommands[this.fieldIndex]=H,i=!0}else if(s<a.getMoveset().length){const h=a.getMoveset()[s];n.ui.setMode(Ie.MESSAGE);const H=a.isMoveRestricted(h.moveId,a)?a.getRestrictingTag(h.moveId,a).selectionDeniedText(a,h.moveId):h.getName().endsWith(" (N)")?"battle:moveNotImplemented":"battle:moveNoPP",d=h.getName().replace(" (N)","");n.ui.showText(u.t(H,{moveName:d}),null,()=>{n.ui.clearText(),n.ui.setMode(Ie.FIGHT,this.fieldIndex)},null,!0)}break;case LA.BALL:const C=n.getEnemyField().filter(h=>h.isActive(!0)).some(h=>!n.gameData.dexData[h.species.speciesId].caughtAttr)&&n.gameData.getStarterCount(h=>!!h.caughtAttr)<Object.keys(KA).length-1;if(n.arena.biomeType===T.END&&(!n.gameMode.isClassic||n.gameMode.isFreshStartChallenge()||C))n.ui.setMode(Ie.COMMAND,this.fieldIndex),n.ui.setMode(Ie.MESSAGE),n.ui.showText(u.t("battle:noPokeballForce"),null,()=>{n.ui.showText("",0),n.ui.setMode(Ie.COMMAND,this.fieldIndex)},null,!0);else if(n.currentBattle.battleType===Ut.TRAINER)n.ui.setMode(Ie.COMMAND,this.fieldIndex),n.ui.setMode(Ie.MESSAGE),n.ui.showText(u.t("battle:noPokeballTrainer"),null,()=>{n.ui.showText("",0),n.ui.setMode(Ie.COMMAND,this.fieldIndex)},null,!0);else if(n.currentBattle.isBattleMysteryEncounter()&&!n.currentBattle.mysteryEncounter.catchAllowed)n.ui.setMode(Ie.COMMAND,this.fieldIndex),n.ui.setMode(Ie.MESSAGE),n.ui.showText(u.t("battle:noPokeballMysteryEncounter"),null,()=>{n.ui.showText("",0),n.ui.setMode(Ie.COMMAND,this.fieldIndex)},null,!0);else{const h=n.getEnemyField().filter(H=>H.isActive(!0)).map(H=>H.getBattlerIndex());if(h.length>1)n.ui.setMode(Ie.COMMAND,this.fieldIndex),n.ui.setMode(Ie.MESSAGE),n.ui.showText(u.t("battle:noPokeballMulti"),null,()=>{n.ui.showText("",0),n.ui.setMode(Ie.COMMAND,this.fieldIndex)},null,!0);else if(s<5){const H=n.getEnemyField().find(d=>d.isActive(!0));H!=null&&H.isBoss()&&(H==null?void 0:H.bossSegmentIndex)>=1&&!(H!=null&&H.hasAbility(O.WONDER_GUARD,!1,!0))&&s<be.MASTER_BALL?(n.ui.setMode(Ie.COMMAND,this.fieldIndex),n.ui.setMode(Ie.MESSAGE),n.ui.showText(u.t("battle:noPokeballStrong"),null,()=>{n.ui.showText("",0),n.ui.setMode(Ie.COMMAND,this.fieldIndex)},null,!0)):(n.currentBattle.turnCommands[this.fieldIndex]={command:LA.BALL,cursor:s},n.currentBattle.turnCommands[this.fieldIndex].targets=h,this.fieldIndex&&(n.currentBattle.turnCommands[this.fieldIndex-1].skip=!0),i=!0)}}break;case LA.POKEMON:case LA.RUN:const M=A===LA.POKEMON,{currentBattle:D,arena:_}=n,P=(r=D.mysteryEncounter)==null?void 0:r.fleeAllowed;if(!M&&(_.biomeType===T.END||!ve(P)&&!P))n.ui.setMode(Ie.COMMAND,this.fieldIndex),n.ui.setMode(Ie.MESSAGE),n.ui.showText(u.t("battle:noEscapeForce"),null,()=>{n.ui.showText("",0),n.ui.setMode(Ie.COMMAND,this.fieldIndex)},null,!0);else if(!M&&(D.battleType===Ut.TRAINER||((L=D.mysteryEncounter)==null?void 0:L.encounterMode)===lE.TRAINER_BATTLE))n.ui.setMode(Ie.COMMAND,this.fieldIndex),n.ui.setMode(Ie.MESSAGE),n.ui.showText(u.t("battle:noEscapeTrainer"),null,()=>{n.ui.showText("",0),n.ui.setMode(Ie.COMMAND,this.fieldIndex)},null,!0);else{const h=M&&R[0],H=[];if(h||!a.isTrapped(H))D.turnCommands[this.fieldIndex]=M?{command:LA.POKEMON,cursor:s,args:R}:{command:LA.RUN},i=!0,!M&&this.fieldIndex&&(D.turnCommands[this.fieldIndex-1].skip=!0);else if(H.length>0)M||n.ui.setMode(Ie.MESSAGE),n.ui.showText(H[0],null,()=>{n.ui.showText("",0),M||n.ui.setMode(Ie.COMMAND,this.fieldIndex)},null,!0);else{const d=a.getTag(vR),f=n.arena.getTagOnSide(ge.FAIRY_LOCK,St.PLAYER);if(!d&&!f){u.t(`battle:noEscape${M?"Switch":"Flee"}`);break}M||(n.ui.setMode(Ie.COMMAND,this.fieldIndex),n.ui.setMode(Ie.MESSAGE));const B=N(F=>{n.ui.showText(u.t("battle:noEscapePokemon",{pokemonName:F.sourceId&&n.getPokemonById(F.sourceId)?te(n.getPokemonById(F.sourceId)):"",moveName:F.getMoveName(),escapeVerb:M?u.t("battle:escapeVerbSwitch"):u.t("battle:escapeVerbFlee")}),null,()=>{n.ui.showText("",0),M||n.ui.setMode(Ie.COMMAND,this.fieldIndex)},null,!0)},"showNoEscapeText");d?B(d):f&&B(f)}}break}return i&&this.end(),i}cancel(){this.fieldIndex&&(n.unshiftPhase(new cN(0)),n.unshiftPhase(new cN(1)),this.end())}getFieldIndex(){return this.fieldIndex}getPokemon(){return n.getPlayerField()[this.fieldIndex]}end(){n.ui.setMode(Ie.MESSAGE).then(()=>super.end())}};N(cN,"CommandPhase");let TS=cN;var LA=(E=>(E[E.FIGHT=0]="FIGHT",E[E.BALL=1]="BALL",E[E.POKEMON=2]="POKEMON",E[E.RUN=3]="RUN",E))(LA||{});const Rm=class Rm extends Vs{constructor(){super(Ie.COMMAND),this.fieldIndex=0,this.cursor2=0}setup(){const A=this.getUi(),s=[u.t("commandUiHandler:fight"),u.t("commandUiHandler:ball"),u.t("commandUiHandler:pokemon"),u.t("commandUiHandler:run")];this.commandsContainer=n.add.container(217,-38.7),this.commandsContainer.setName("commands"),this.commandsContainer.setVisible(!1),A.add(this.commandsContainer);for(let R=0;R<s.length;R++){const a=le(R%2===0?0:55.8,R<2?0:16,s[R],Q.WINDOW);a.setName(s[R]),this.commandsContainer.add(a)}}show(A){super.show(A),this.fieldIndex=A.length?A[0]:0,this.commandsContainer.setVisible(!0);let s;const R=n.getCurrentPhase();R instanceof TS?s=R:s=n.getStandbyPhase();const a=this.getUi().getMessageHandler();return a.bg.setVisible(!0),a.commandWindow.setVisible(!0),a.movesWindowContainer.setVisible(!1),a.message.setWordWrapWidth(1110),a.showText(u.t("commandUiHandler:actionMessage",{pokemonName:te(s.getPokemon())}),0),this.getCursor()===2?this.setCursor(0):this.setCursor(this.getCursor()),!0}processInput(A){const s=this.getUi();let R=!1;const a=this.getCursor();if(A===k.CANCEL||A===k.ACTION)if(A===k.ACTION)switch(a){case 0:s.setMode(Ie.FIGHT,n.getCurrentPhase().getFieldIndex()),R=!0;break;case 1:s.setModeWithoutClear(Ie.BALL),R=!0;break;case 2:s.setMode(Ie.PARTY,Ps.SWITCH,n.getCurrentPhase().getPokemon().getFieldIndex(),null,VE.FilterNonFainted),R=!0;break;case 3:n.getCurrentPhase().handleCommand(3,0),R=!0;break}else n.getCurrentPhase().cancel();else switch(A){case k.UP:a>=2&&(R=this.setCursor(a-2));break;case k.DOWN:a<2&&(R=this.setCursor(a+2));break;case k.LEFT:a%2===1&&(R=this.setCursor(a-1));break;case k.RIGHT:a%2===0&&(R=this.setCursor(a+1));break}return R&&s.playSelect(),R}getCursor(){return this.fieldIndex?this.cursor2:this.cursor}setCursor(A){const s=this.getCursor()!==A;return s&&(this.fieldIndex?this.cursor2=A:this.cursor=A),this.cursorObj||(this.cursorObj=n.add.image(0,0,"cursor"),this.commandsContainer.add(this.cursorObj)),this.cursorObj.setPosition(-5+(A%2===1?56:0),8+(A>=2?16:0)),s}clear(){super.clear(),this.getUi().getMessageHandler().commandWindow.setVisible(!1),this.commandsContainer.setVisible(!1),this.getUi().getMessageHandler().clearText(),this.eraseCursor()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};N(Rm,"CommandUiHandler");let vP=Rm;const hN=class hN extends Vs{constructor(){super(Ie.FIGHT),this.fieldIndex=0,this.cursor2=0}setup(){const A=this.getUi();this.movesContainer=n.add.container(18,-38.7),this.movesContainer.setName(hN.MOVES_CONTAINER_NAME),A.add(this.movesContainer),this.moveInfoContainer=n.add.container(1,0),this.moveInfoContainer.setName("move-info"),A.add(this.moveInfoContainer),this.typeIcon=n.add.sprite(n.scaledCanvas.width-57,-36,YR("types"),"unknown"),this.typeIcon.setVisible(!1),this.moveInfoContainer.add(this.typeIcon),this.moveCategoryIcon=n.add.sprite(n.scaledCanvas.width-25,-36,"categories","physical"),this.moveCategoryIcon.setVisible(!1),this.moveInfoContainer.add(this.moveCategoryIcon),this.ppLabel=le(n.scaledCanvas.width-70,-26,"PP",Q.MOVE_INFO_CONTENT),this.ppLabel.setOrigin(0,.5),this.ppLabel.setVisible(!1),this.ppLabel.setText(u.t("fightUiHandler:pp")),this.moveInfoContainer.add(this.ppLabel),this.ppText=le(n.scaledCanvas.width-12,-26,"--/--",Q.MOVE_INFO_CONTENT),this.ppText.setOrigin(1,.5),this.ppText.setVisible(!1),this.moveInfoContainer.add(this.ppText),this.powerLabel=le(n.scaledCanvas.width-70,-18,"POWER",Q.MOVE_INFO_CONTENT),this.powerLabel.setOrigin(0,.5),this.powerLabel.setVisible(!1),this.powerLabel.setText(u.t("fightUiHandler:power")),this.moveInfoContainer.add(this.powerLabel),this.powerText=le(n.scaledCanvas.width-12,-18,"---",Q.MOVE_INFO_CONTENT),this.powerText.setOrigin(1,.5),this.powerText.setVisible(!1),this.moveInfoContainer.add(this.powerText),this.accuracyLabel=le(n.scaledCanvas.width-70,-10,"ACC",Q.MOVE_INFO_CONTENT),this.accuracyLabel.setOrigin(0,.5),this.accuracyLabel.setVisible(!1),this.accuracyLabel.setText(u.t("fightUiHandler:accuracy")),this.moveInfoContainer.add(this.accuracyLabel),this.accuracyText=le(n.scaledCanvas.width-12,-10,"---",Q.MOVE_INFO_CONTENT),this.accuracyText.setOrigin(1,.5),this.accuracyText.setVisible(!1),this.moveInfoContainer.add(this.accuracyText);const s=1;this.moveInfoOverlay=new MO({delayVisibility:!0,scale:s,onSide:!0,right:!0,x:0,y:-MO.getHeight(s,!0),width:n.game.canvas.width/6+4,hideEffectBox:!0,hideBg:!0}),A.add(this.moveInfoOverlay),n.addInfoToggle(this.moveInfoOverlay),n.addInfoToggle(this)}show(A){super.show(A),this.fieldIndex=A.length?A[0]:0;const s=this.getUi().getMessageHandler();return s.bg.setVisible(!1),s.commandWindow.setVisible(!1),s.movesWindowContainer.setVisible(!0),n.getCurrentPhase().getPokemon().battleSummonData.turnCount<=1?this.setCursor(0):this.setCursor(this.getCursor()),this.displayMoves(),this.toggleInfo(!1),this.active=!0,!0}processInput(A){const s=this.getUi();let R=!1;const a=this.getCursor();if(A===k.CANCEL||A===k.ACTION)if(A===k.ACTION)n.getCurrentPhase().handleCommand(LA.FIGHT,a,!1)?R=!0:s.playError();else{const{battleType:i,mysteryEncounter:r}=n.currentBattle;(i!==Ut.MYSTERY_ENCOUNTER||!(r!=null&&r.skipToFightInput))&&(s.setMode(Ie.COMMAND,this.fieldIndex),R=!0)}else switch(A){case k.UP:a>=2&&(R=this.setCursor(a-2));break;case k.DOWN:a<2&&(R=this.setCursor(a+2));break;case k.LEFT:a%2===1&&(R=this.setCursor(a-1));break;case k.RIGHT:a%2===0&&(R=this.setCursor(a+1));break}return R&&s.playSelect(),R}toggleInfo(A){var s,R;A&&(this.movesContainer.setVisible(!1),(s=this.cursorObj)==null||s.setVisible(!1)),n.tweens.add({targets:[this.movesContainer,this.cursorObj],duration:st(125),ease:"Sine.easeInOut",alpha:A?0:1}),A||(this.movesContainer.setVisible(!0),(R=this.cursorObj)==null||R.setVisible(!0))}isActive(){return this.active}getCursor(){return this.fieldIndex?this.cursor2:this.cursor}setCursor(A){const s=this.getUi();this.moveInfoOverlay.clear();const R=this.getCursor()!==A;R&&(this.fieldIndex?this.cursor2=A:this.cursor=A),this.cursorObj||(this.cursorObj=n.add.image(0,0,"cursor"),s.add(this.cursorObj));const a=n.getCurrentPhase().getPokemon(),i=a.getMoveset(),r=A<i.length;if(r){const L=i[A],o=a.getMoveType(L.getMove()),l=YR("types");this.typeIcon.setTexture(l,I[o].toLowerCase()).setScale(.8);const C=L.getMove().category;this.moveCategoryIcon.setTexture("categories",Pt[C].toLowerCase()).setScale(1);const M=L.getMove().power,D=L.getMove().accuracy,_=L.getMovePp(),P=_-L.ppUsed,h=Dn(P,2,"  "),H=Dn(_,2,"  ");this.ppText.setText(`${h}/${H}`),this.powerText.setText(`${M>=0?M:"---"}`),this.accuracyText.setText(`${D>=0?D:"---"}`);const d=P/_;let f=Q.MOVE_PP_FULL;d>.25&&d<=.5?f=Q.MOVE_PP_HALF_FULL:d>0&&d<=.25?f=Q.MOVE_PP_NEAR_EMPTY:d===0&&(f=Q.MOVE_PP_EMPTY),this.ppText.setColor(this.getTextColor(f,!1)),this.ppText.setShadowColor(this.getTextColor(f,!0)),this.moveInfoOverlay.show(L.getMove()),a.getOpponents().forEach(B=>{B.updateEffectiveness(this.getEffectivenessText(a,B,L))})}return this.typeIcon.setVisible(r),this.ppLabel.setVisible(r),this.ppText.setVisible(r),this.powerLabel.setVisible(r),this.powerText.setVisible(r),this.accuracyLabel.setVisible(r),this.accuracyText.setVisible(r),this.moveCategoryIcon.setVisible(r),this.cursorObj.setPosition(13+(A%2===1?100:0),-31+(A>=2?15:0)),R}getEffectivenessText(A,s,R){var i;const a=s.getMoveEffectiveness(A,R.getMove(),!((i=s.battleData)!=null&&i.abilityRevealed));if(a!==void 0)return`${a}x`}displayMoves(){const A=n.getCurrentPhase().getPokemon(),s=A.getMoveset();for(let R=0;R<4;R++){const a=le(R%2===0?0:100,R<2?0:16,"-",Q.WINDOW);if(a.setName("text-empty-move"),R<s.length){const i=s[R];a.setText(i.getName()),a.setName(i.getName()),a.setColor(this.getMoveColor(A,i)??a.style.color)}this.movesContainer.add(a)}}getMoveColor(A,s){if(!n.typeHints)return;const R=A.getOpponents();return R.length<=0?void 0:R.map(i=>i.getMoveEffectiveness(A,s.getMove(),!i.battleData.abilityRevealed)).sort((i,r)=>r-i).map(i=>y7(i??0))[0]}clear(){super.clear();const A=this.getUi().getMessageHandler();this.clearMoves(),this.typeIcon.setVisible(!1),this.ppLabel.setVisible(!1),this.ppText.setVisible(!1),this.powerLabel.setVisible(!1),this.powerText.setVisible(!1),this.accuracyLabel.setVisible(!1),this.accuracyText.setVisible(!1),this.moveCategoryIcon.setVisible(!1),this.moveInfoOverlay.clear(),A.bg.setVisible(!0),this.eraseCursor(),this.active=!1}clearMoves(){this.movesContainer.removeAll(!0),n.getCurrentPhase().getPokemon().getOpponents().forEach(s=>{s.updateEffectiveness(void 0)})}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};N(hN,"FightUiHandler"),hN.MOVES_CONTAINER_NAME="moves";let VP=hN;const Om=class Om extends Vs{constructor(){super(Ie.BALL),this.scale=.1666666667}setup(){const A=this.getUi();this.scale=Hn(Q.WINDOW,n.uiTheme).scale;let s="";for(let i=0;i<Object.keys(n.pokeballCounts).length;i++)s+=`${xl(i)}
`;s+="Cancel";const R=le(0,0,s,Q.WINDOW,{align:"right",maxLines:6}),a=R.displayWidth;this.pokeballSelectContainer=n.add.container(n.game.canvas.width/6-51-Math.max(64,a),-49),this.pokeballSelectContainer.setVisible(!1),A.add(this.pokeballSelectContainer),this.pokeballSelectBg=Gt(0,0,50+Math.max(64,a),32+480*this.scale),this.pokeballSelectBg.setOrigin(0,1),this.pokeballSelectContainer.add(this.pokeballSelectBg),this.pokeballSelectContainer.add(R),R.setOrigin(0,0),R.setPositionRelative(this.pokeballSelectBg,42,9),R.setLineSpacing(this.scale*72),this.countsText=le(0,0,"",Q.WINDOW,{maxLines:5}),this.countsText.setPositionRelative(this.pokeballSelectBg,18,9),this.countsText.setLineSpacing(this.scale*72),this.pokeballSelectContainer.add(this.countsText),this.setCursor(0)}show(A){return super.show(A),this.updateCounts(),this.pokeballSelectContainer.setVisible(!0),this.setCursor(this.cursor),!0}processInput(A){const s=this.getUi();let R=!1;const a=Object.keys(n.pokeballCounts).length;if(A===k.ACTION||A===k.CANCEL){const i=n.getCurrentPhase();R=!0,A===k.ACTION&&this.cursor<a?n.pokeballCounts[this.cursor]?i.handleCommand(LA.BALL,this.cursor)&&(n.ui.setMode(Ie.COMMAND,i.getFieldIndex()),n.ui.setMode(Ie.MESSAGE),R=!0):s.playError():(s.setMode(Ie.COMMAND,i.getFieldIndex()),R=!0)}else switch(A){case k.UP:R=this.setCursor(this.cursor?this.cursor-1:a);break;case k.DOWN:R=this.setCursor(this.cursor<a?this.cursor+1:0);break}return R&&s.playSelect(),R}updateCounts(){this.countsText.setText(Object.values(n.pokeballCounts).map(A=>`x${A}`).join(`
`))}setCursor(A){const s=super.setCursor(A);return this.cursorObj||(this.cursorObj=n.add.image(0,0,"cursor"),this.pokeballSelectContainer.add(this.cursorObj)),this.cursorObj.setScale(this.scale*6),this.cursorObj.setPositionRelative(this.pokeballSelectBg,12,15+(6+this.cursor*96)*this.scale),s}clear(){super.clear(),this.pokeballSelectContainer.setVisible(!1),this.eraseCursor()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};N(Om,"BallUiHandler");let xP=Om;const bP={[e.BULBASAUR]:O.GRASSY_SURGE,[e.CHARMANDER]:O.BEAST_BOOST,[e.SQUIRTLE]:O.STURDY,[e.CATERPIE]:O.MAGICIAN,[e.WEEDLE]:O.TINTED_LENS,[e.PIDGEY]:O.SHEER_FORCE,[e.RATTATA]:O.STRONG_JAW,[e.SPEAROW]:O.MOXIE,[e.EKANS]:O.REGENERATOR,[e.SANDSHREW]:O.TOUGH_CLAWS,[e.NIDORAN_F]:O.FLARE_BOOST,[e.NIDORAN_M]:O.GUTS,[e.VULPIX]:O.FUR_COAT,[e.ZUBAT]:O.INTIMIDATE,[e.ODDISH]:O.TRIAGE,[e.PARAS]:O.TRIAGE,[e.VENONAT]:O.SIMPLE,[e.DIGLETT]:O.STURDY,[e.MEOWTH]:O.TOUGH_CLAWS,[e.PSYDUCK]:O.SIMPLE,[e.MANKEY]:O.IRON_FIST,[e.GROWLITHE]:O.FLUFFY,[e.POLIWAG]:O.NO_GUARD,[e.ABRA]:O.MAGICIAN,[e.MACHOP]:O.QUICK_FEET,[e.BELLSPROUT]:O.FLOWER_GIFT,[e.TENTACOOL]:O.TOXIC_CHAIN,[e.GEODUDE]:O.DRY_SKIN,[e.PONYTA]:O.MAGIC_GUARD,[e.SLOWPOKE]:O.UNAWARE,[e.MAGNEMITE]:O.LEVITATE,[e.FARFETCHD]:O.SNIPER,[e.DODUO]:O.PARENTAL_BOND,[e.SEEL]:O.WATER_BUBBLE,[e.GRIMER]:O.WATER_ABSORB,[e.SHELLDER]:O.ICE_SCALES,[e.GASTLY]:O.SHADOW_SHIELD,[e.ONIX]:O.ROCKY_PAYLOAD,[e.DROWZEE]:O.MAGICIAN,[e.KRABBY]:O.UNBURDEN,[e.VOLTORB]:O.TRANSISTOR,[e.EXEGGCUTE]:O.RIPEN,[e.CUBONE]:O.PARENTAL_BOND,[e.LICKITUNG]:O.CHEEK_POUCH,[e.KOFFING]:O.PARENTAL_BOND,[e.RHYHORN]:O.FILTER,[e.TANGELA]:O.SEED_SOWER,[e.KANGASKHAN]:O.GUTS,[e.HORSEA]:O.DRAGONS_MAW,[e.GOLDEEN]:O.MULTISCALE,[e.STARYU]:O.REGENERATOR,[e.SCYTHER]:O.TINTED_LENS,[e.PINSIR]:O.TINTED_LENS,[e.TAUROS]:O.STAMINA,[e.MAGIKARP]:O.MULTISCALE,[e.LAPRAS]:O.LIGHTNING_ROD,[e.DITTO]:O.ADAPTABILITY,[e.EEVEE]:O.PICKUP,[e.PORYGON]:O.PROTEAN,[e.OMANYTE]:O.STURDY,[e.KABUTO]:O.TOUGH_CLAWS,[e.AERODACTYL]:O.ORICHALCUM_PULSE,[e.ARTICUNO]:O.SNOW_WARNING,[e.ZAPDOS]:O.DRIZZLE,[e.MOLTRES]:O.DROUGHT,[e.DRATINI]:O.AERILATE,[e.MEWTWO]:O.NEUROFORCE,[e.MEW]:O.PROTEAN,[e.CHIKORITA]:O.THICK_FAT,[e.CYNDAQUIL]:O.DROUGHT,[e.TOTODILE]:O.TOUGH_CLAWS,[e.SENTRET]:O.PICKUP,[e.HOOTHOOT]:O.AERILATE,[e.LEDYBA]:O.PRANKSTER,[e.SPINARAK]:O.PRANKSTER,[e.CHINCHOU]:O.REGENERATOR,[e.PICHU]:O.ELECTRIC_SURGE,[e.CLEFFA]:O.ANALYTIC,[e.IGGLYBUFF]:O.HUGE_POWER,[e.TOGEPI]:O.PIXILATE,[e.NATU]:O.SHEER_FORCE,[e.MAREEP]:O.ELECTROMORPHOSIS,[e.HOPPIP]:O.FLUFFY,[e.AIPOM]:O.SCRAPPY,[e.SUNKERN]:O.DROUGHT,[e.YANMA]:O.SHEER_FORCE,[e.WOOPER]:O.COMATOSE,[e.MURKROW]:O.DARK_AURA,[e.MISDREAVUS]:O.BEADS_OF_RUIN,[e.UNOWN]:O.PICKUP,[e.GIRAFARIG]:O.PARENTAL_BOND,[e.PINECO]:O.IRON_BARBS,[e.DUNSPARCE]:O.UNAWARE,[e.GLIGAR]:O.TOXIC_BOOST,[e.SNUBBULL]:O.PIXILATE,[e.QWILFISH]:O.TOXIC_DEBRIS,[e.SHUCKLE]:O.HARVEST,[e.HERACROSS]:O.TECHNICIAN,[e.SNEASEL]:O.TOUGH_CLAWS,[e.TEDDIURSA]:O.THICK_FAT,[e.SLUGMA]:O.DESOLATE_LAND,[e.SWINUB]:O.SLUSH_RUSH,[e.CORSOLA]:O.STORM_DRAIN,[e.REMORAID]:O.SIMPLE,[e.DELIBIRD]:O.HUGE_POWER,[e.SKARMORY]:O.LIGHTNING_ROD,[e.HOUNDOUR]:O.LIGHTNING_ROD,[e.PHANPY]:O.SPEED_BOOST,[e.STANTLER]:O.SPEED_BOOST,[e.SMEARGLE]:O.PRANKSTER,[e.TYROGUE]:O.MOXIE,[e.SMOOCHUM]:O.PSYCHIC_SURGE,[e.ELEKID]:O.SHEER_FORCE,[e.MAGBY]:O.SHEER_FORCE,[e.MILTANK]:O.STAMINA,[e.RAIKOU]:O.BEAST_BOOST,[e.ENTEI]:O.BEAST_BOOST,[e.SUICUNE]:O.BEAST_BOOST,[e.LARVITAR]:O.SAND_RUSH,[e.LUGIA]:O.DELTA_STREAM,[e.HO_OH]:O.MAGIC_GUARD,[e.CELEBI]:O.PSYCHIC_SURGE,[e.TREECKO]:O.TINTED_LENS,[e.TORCHIC]:O.DEFIANT,[e.MUDKIP]:O.DRIZZLE,[e.POOCHYENA]:O.TOUGH_CLAWS,[e.ZIGZAGOON]:O.RUN_AWAY,[e.WURMPLE]:O.SIMPLE,[e.LOTAD]:O.DRIZZLE,[e.SEEDOT]:O.SHARPNESS,[e.TAILLOW]:O.AERILATE,[e.WINGULL]:O.SWIFT_SWIM,[e.RALTS]:O.PSYCHIC_SURGE,[e.SURSKIT]:O.WATER_BUBBLE,[e.SHROOMISH]:O.GUTS,[e.SLAKOTH]:O.GUTS,[e.NINCADA]:O.MAGIC_GUARD,[e.WHISMUR]:O.PUNK_ROCK,[e.MAKUHITA]:O.STAMINA,[e.AZURILL]:O.MISTY_SURGE,[e.NOSEPASS]:O.LEVITATE,[e.SKITTY]:O.SCRAPPY,[e.SABLEYE]:O.UNNERVE,[e.MAWILE]:O.UNNERVE,[e.ARON]:O.EARTH_EATER,[e.MEDITITE]:O.MINDS_EYE,[e.ELECTRIKE]:O.FLASH_FIRE,[e.PLUSLE]:O.POWER_SPOT,[e.MINUN]:O.POWER_SPOT,[e.VOLBEAT]:O.HONEY_GATHER,[e.ILLUMISE]:O.HONEY_GATHER,[e.GULPIN]:O.EARTH_EATER,[e.CARVANHA]:O.SHEER_FORCE,[e.WAILMER]:O.LEVITATE,[e.NUMEL]:O.FUR_COAT,[e.TORKOAL]:O.ANALYTIC,[e.SPOINK]:O.PSYCHIC_SURGE,[e.SPINDA]:O.SIMPLE,[e.TRAPINCH]:O.ADAPTABILITY,[e.CACNEA]:O.SAND_RUSH,[e.SWABLU]:O.FLUFFY,[e.ZANGOOSE]:O.POISON_HEAL,[e.SEVIPER]:O.MULTISCALE,[e.LUNATONE]:O.SHADOW_SHIELD,[e.SOLROCK]:O.DROUGHT,[e.BARBOACH]:O.SIMPLE,[e.CORPHISH]:O.TOUGH_CLAWS,[e.BALTOY]:O.WELL_BAKED_BODY,[e.LILEEP]:O.SEED_SOWER,[e.ANORITH]:O.WATER_ABSORB,[e.FEEBAS]:O.MAGIC_GUARD,[e.CASTFORM]:O.ADAPTABILITY,[e.KECLEON]:O.ADAPTABILITY,[e.SHUPPET]:O.SHADOW_SHIELD,[e.DUSKULL]:O.UNNERVE,[e.TROPIUS]:O.RIPEN,[e.ABSOL]:O.SHARPNESS,[e.WYNAUT]:O.STURDY,[e.SNORUNT]:O.SNOW_WARNING,[e.SPHEAL]:O.UNAWARE,[e.CLAMPERL]:O.ARENA_TRAP,[e.RELICANTH]:O.PRIMORDIAL_SEA,[e.LUVDISC]:O.MULTISCALE,[e.BAGON]:O.MOLD_BREAKER,[e.BELDUM]:O.LEVITATE,[e.REGIROCK]:O.SAND_STREAM,[e.REGICE]:O.SNOW_WARNING,[e.REGISTEEL]:O.STEELY_SPIRIT,[e.LATIAS]:O.PRISM_ARMOR,[e.LATIOS]:O.TINTED_LENS,[e.KYOGRE]:O.MOLD_BREAKER,[e.GROUDON]:O.TURBOBLAZE,[e.RAYQUAZA]:O.UNNERVE,[e.JIRACHI]:O.COMATOSE,[e.DEOXYS]:O.PROTEAN,[e.TURTWIG]:O.THICK_FAT,[e.CHIMCHAR]:O.BEAST_BOOST,[e.PIPLUP]:O.DRIZZLE,[e.STARLY]:O.ROCK_HEAD,[e.BIDOOF]:O.SAP_SIPPER,[e.KRICKETOT]:O.SHARPNESS,[e.SHINX]:O.SPEED_BOOST,[e.BUDEW]:O.GRASSY_SURGE,[e.CRANIDOS]:O.ROCK_HEAD,[e.SHIELDON]:O.EARTH_EATER,[e.BURMY]:O.STURDY,[e.COMBEE]:O.INTIMIDATE,[e.PACHIRISU]:O.HONEY_GATHER,[e.BUIZEL]:O.MOXIE,[e.CHERUBI]:O.ORICHALCUM_PULSE,[e.SHELLOS]:O.REGENERATOR,[e.DRIFLOON]:O.MAGIC_GUARD,[e.BUNEARY]:O.ADAPTABILITY,[e.GLAMEOW]:O.INTIMIDATE,[e.CHINGLING]:O.PUNK_ROCK,[e.STUNKY]:O.NEUTRALIZING_GAS,[e.BRONZOR]:O.MIRROR_ARMOR,[e.BONSLY]:O.SAP_SIPPER,[e.MIME_JR]:O.PRANKSTER,[e.HAPPINY]:O.FUR_COAT,[e.CHATOT]:O.PUNK_ROCK,[e.SPIRITOMB]:O.VESSEL_OF_RUIN,[e.GIBLE]:O.SAND_STREAM,[e.MUNCHLAX]:O.RIPEN,[e.RIOLU]:O.MINDS_EYE,[e.HIPPOPOTAS]:O.UNAWARE,[e.SKORUPI]:O.SUPER_LUCK,[e.CROAGUNK]:O.MOXIE,[e.CARNIVINE]:O.ARENA_TRAP,[e.FINNEON]:O.WATER_BUBBLE,[e.MANTYKE]:O.UNAWARE,[e.SNOVER]:O.GRASSY_SURGE,[e.ROTOM]:O.HADRON_ENGINE,[e.UXIE]:O.UNAWARE,[e.MESPRIT]:O.MOODY,[e.AZELF]:O.NEUROFORCE,[e.DIALGA]:O.LEVITATE,[e.PALKIA]:O.SPEED_BOOST,[e.HEATRAN]:O.EARTH_EATER,[e.REGIGIGAS]:O.SCRAPPY,[e.GIRATINA]:O.SHADOW_SHIELD,[e.CRESSELIA]:O.SHADOW_SHIELD,[e.PHIONE]:O.SIMPLE,[e.MANAPHY]:O.PRIMORDIAL_SEA,[e.DARKRAI]:O.UNNERVE,[e.SHAYMIN]:O.WIND_RIDER,[e.ARCEUS]:O.ADAPTABILITY,[e.VICTINI]:O.SHEER_FORCE,[e.SNIVY]:O.MULTISCALE,[e.TEPIG]:O.ROCK_HEAD,[e.OSHAWOTT]:O.INTREPID_SWORD,[e.PATRAT]:O.NO_GUARD,[e.LILLIPUP]:O.FUR_COAT,[e.PURRLOIN]:O.PICKUP,[e.PANSAGE]:O.WELL_BAKED_BODY,[e.PANSEAR]:O.WATER_ABSORB,[e.PANPOUR]:O.SAP_SIPPER,[e.MUNNA]:O.NEUTRALIZING_GAS,[e.PIDOVE]:O.SNIPER,[e.BLITZLE]:O.ELECTRIC_SURGE,[e.ROGGENROLA]:O.SOLID_ROCK,[e.WOOBAT]:O.OPPORTUNIST,[e.DRILBUR]:O.STURDY,[e.AUDINO]:O.FRIEND_GUARD,[e.TIMBURR]:O.ROCKY_PAYLOAD,[e.TYMPOLE]:O.POISON_HEAL,[e.THROH]:O.STAMINA,[e.SAWK]:O.SCRAPPY,[e.SEWADDLE]:O.SHARPNESS,[e.VENIPEDE]:O.STAMINA,[e.COTTONEE]:O.FLUFFY,[e.PETILIL]:O.SIMPLE,[e.BASCULIN]:O.SUPREME_OVERLORD,[e.SANDILE]:O.TOUGH_CLAWS,[e.DARUMAKA]:O.GORILLA_TACTICS,[e.MARACTUS]:O.WELL_BAKED_BODY,[e.DWEBBLE]:O.ROCKY_PAYLOAD,[e.SCRAGGY]:O.PROTEAN,[e.SIGILYPH]:O.FLARE_BOOST,[e.YAMASK]:O.PURIFYING_SALT,[e.TIRTOUGA]:O.WATER_ABSORB,[e.ARCHEN]:O.MULTISCALE,[e.TRUBBISH]:O.NEUTRALIZING_GAS,[e.ZORUA]:O.DARK_AURA,[e.MINCCINO]:O.FUR_COAT,[e.GOTHITA]:O.UNNERVE,[e.SOLOSIS]:O.PSYCHIC_SURGE,[e.DUCKLETT]:O.DRIZZLE,[e.VANILLITE]:O.SLUSH_RUSH,[e.DEERLING]:O.FUR_COAT,[e.EMOLGA]:O.SERENE_GRACE,[e.KARRABLAST]:O.QUICK_DRAW,[e.FOONGUS]:O.THICK_FAT,[e.FRILLISH]:O.POISON_HEAL,[e.ALOMOMOLA]:O.MULTISCALE,[e.JOLTIK]:O.TRANSISTOR,[e.FERROSEED]:O.ROUGH_SKIN,[e.KLINK]:O.STEELY_SPIRIT,[e.TYNAMO]:O.POISON_HEAL,[e.ELGYEM]:O.BEADS_OF_RUIN,[e.LITWICK]:O.SHADOW_TAG,[e.AXEW]:O.DRAGONS_MAW,[e.CUBCHOO]:O.FUR_COAT,[e.CRYOGONAL]:O.SNOW_WARNING,[e.SHELMET]:O.PROTEAN,[e.STUNFISK]:O.STORM_DRAIN,[e.MIENFOO]:O.NO_GUARD,[e.DRUDDIGON]:O.INTIMIDATE,[e.GOLETT]:O.SHADOW_SHIELD,[e.PAWNIARD]:O.SWORD_OF_RUIN,[e.BOUFFALANT]:O.ROCK_HEAD,[e.RUFFLET]:O.SPEED_BOOST,[e.VULLABY]:O.THICK_FAT,[e.HEATMOR]:O.CONTRARY,[e.DURANT]:O.COMPOUND_EYES,[e.DEINO]:O.PARENTAL_BOND,[e.LARVESTA]:O.DROUGHT,[e.COBALION]:O.INTREPID_SWORD,[e.TERRAKION]:O.ROCKY_PAYLOAD,[e.VIRIZION]:O.SHARPNESS,[e.TORNADUS]:O.DRIZZLE,[e.THUNDURUS]:O.DRIZZLE,[e.RESHIRAM]:O.ORICHALCUM_PULSE,[e.ZEKROM]:O.HADRON_ENGINE,[e.LANDORUS]:O.STORM_DRAIN,[e.KYUREM]:O.SNOW_WARNING,[e.KELDEO]:O.GRIM_NEIGH,[e.MELOETTA]:O.MINDS_EYE,[e.GENESECT]:O.PROTEAN,[e.CHESPIN]:O.DAUNTLESS_SHIELD,[e.FENNEKIN]:O.PSYCHIC_SURGE,[e.FROAKIE]:O.STAKEOUT,[e.BUNNELBY]:O.GUTS,[e.FLETCHLING]:O.MAGIC_GUARD,[e.SCATTERBUG]:O.PRANKSTER,[e.LITLEO]:O.BEAST_BOOST,[e.FLABEBE]:O.GRASSY_SURGE,[e.SKIDDO]:O.SEED_SOWER,[e.PANCHAM]:O.FUR_COAT,[e.FURFROU]:O.FLUFFY,[e.ESPURR]:O.FUR_COAT,[e.HONEDGE]:O.SHARPNESS,[e.SPRITZEE]:O.FUR_COAT,[e.SWIRLIX]:O.RIPEN,[e.INKAY]:O.UNNERVE,[e.BINACLE]:O.SAP_SIPPER,[e.SKRELP]:O.DRAGONS_MAW,[e.CLAUNCHER]:O.PROTEAN,[e.HELIOPTILE]:O.PROTEAN,[e.TYRUNT]:O.RECKLESS,[e.AMAURA]:O.ICE_SCALES,[e.HAWLUCHA]:O.MOXIE,[e.DEDENNE]:O.PIXILATE,[e.CARBINK]:O.SOLID_ROCK,[e.GOOMY]:O.REGENERATOR,[e.KLEFKI]:O.LEVITATE,[e.PHANTUMP]:O.SHADOW_TAG,[e.PUMPKABOO]:O.WELL_BAKED_BODY,[e.BERGMITE]:O.ICE_SCALES,[e.NOIBAT]:O.PUNK_ROCK,[e.XERNEAS]:O.HARVEST,[e.YVELTAL]:O.SOUL_HEART,[e.ZYGARDE]:O.ADAPTABILITY,[e.DIANCIE]:O.PRISM_ARMOR,[e.HOOPA]:O.OPPORTUNIST,[e.VOLCANION]:O.FILTER,[e.ETERNAL_FLOETTE]:O.MAGIC_GUARD,[e.ROWLET]:O.SNIPER,[e.LITTEN]:O.OPPORTUNIST,[e.POPPLIO]:O.PUNK_ROCK,[e.PIKIPEK]:O.TECHNICIAN,[e.YUNGOOS]:O.TOUGH_CLAWS,[e.GRUBBIN]:O.SPEED_BOOST,[e.CRABRAWLER]:O.WATER_BUBBLE,[e.ORICORIO]:O.ADAPTABILITY,[e.CUTIEFLY]:O.TINTED_LENS,[e.ROCKRUFF]:O.ROCKY_PAYLOAD,[e.WISHIWASHI]:O.REGENERATOR,[e.MAREANIE]:O.TOXIC_DEBRIS,[e.MUDBRAY]:O.CUD_CHEW,[e.DEWPIDER]:O.TINTED_LENS,[e.FOMANTIS]:O.SHARPNESS,[e.MORELULL]:O.TRIAGE,[e.SALANDIT]:O.DRAGONS_MAW,[e.STUFFUL]:O.SCRAPPY,[e.BOUNSWEET]:O.MOXIE,[e.COMFEY]:O.FRIEND_GUARD,[e.ORANGURU]:O.POWER_SPOT,[e.PASSIMIAN]:O.LIBERO,[e.WIMPOD]:O.REGENERATOR,[e.SANDYGAST]:O.SAND_SPIT,[e.PYUKUMUKU]:O.PURIFYING_SALT,[e.TYPE_NULL]:O.ADAPTABILITY,[e.MINIOR]:O.STURDY,[e.KOMALA]:O.GUTS,[e.TURTONATOR]:O.DAUNTLESS_SHIELD,[e.TOGEDEMARU]:O.ROUGH_SKIN,[e.MIMIKYU]:O.TOUGH_CLAWS,[e.BRUXISH]:O.MULTISCALE,[e.DRAMPA]:O.THICK_FAT,[e.DHELMISE]:O.WATER_BUBBLE,[e.JANGMO_O]:O.DAUNTLESS_SHIELD,[e.TAPU_KOKO]:O.DAUNTLESS_SHIELD,[e.TAPU_LELE]:O.SHEER_FORCE,[e.TAPU_BULU]:O.TRIAGE,[e.TAPU_FINI]:O.FAIRY_AURA,[e.COSMOG]:O.BEAST_BOOST,[e.NIHILEGO]:O.LEVITATE,[e.BUZZWOLE]:O.MOXIE,[e.PHEROMOSA]:O.TINTED_LENS,[e.XURKITREE]:O.TRANSISTOR,[e.CELESTEELA]:O.HEATPROOF,[e.KARTANA]:O.LONG_REACH,[e.GUZZLORD]:O.POISON_HEAL,[e.NECROZMA]:O.BEAST_BOOST,[e.MAGEARNA]:O.STEELY_SPIRIT,[e.MARSHADOW]:O.IRON_FIST,[e.POIPOLE]:O.LEVITATE,[e.STAKATAKA]:O.SOLID_ROCK,[e.BLACEPHALON]:O.MAGIC_GUARD,[e.ZERAORA]:O.TOUGH_CLAWS,[e.MELTAN]:O.HEATPROOF,[e.ALOLA_RATTATA]:O.ADAPTABILITY,[e.ALOLA_SANDSHREW]:O.ICE_SCALES,[e.ALOLA_VULPIX]:O.SHEER_FORCE,[e.ALOLA_DIGLETT]:O.STURDY,[e.ALOLA_MEOWTH]:O.DARK_AURA,[e.ALOLA_GEODUDE]:O.DRY_SKIN,[e.ALOLA_GRIMER]:O.TOXIC_DEBRIS,[e.GROOKEY]:O.GRASS_PELT,[e.SCORBUNNY]:O.NO_GUARD,[e.SOBBLE]:O.SUPER_LUCK,[e.SKWOVET]:O.HARVEST,[e.ROOKIDEE]:O.IRON_BARBS,[e.BLIPBUG]:O.PSYCHIC_SURGE,[e.NICKIT]:O.MAGICIAN,[e.GOSSIFLEUR]:O.GRASSY_SURGE,[e.WOOLOO]:O.SCRAPPY,[e.CHEWTLE]:O.ROCKY_PAYLOAD,[e.YAMPER]:O.SHEER_FORCE,[e.ROLYCOLY]:O.SOLID_ROCK,[e.APPLIN]:O.DRAGONS_MAW,[e.SILICOBRA]:O.SAND_RUSH,[e.CRAMORANT]:O.LIGHTNING_ROD,[e.ARROKUDA]:O.INTIMIDATE,[e.TOXEL]:O.ELECTRIC_SURGE,[e.SIZZLIPEDE]:O.SPEED_BOOST,[e.CLOBBOPUS]:O.WATER_BUBBLE,[e.SINISTEA]:O.SHADOW_SHIELD,[e.HATENNA]:O.FAIRY_AURA,[e.IMPIDIMP]:O.INTIMIDATE,[e.MILCERY]:O.REGENERATOR,[e.FALINKS]:O.PARENTAL_BOND,[e.PINCURCHIN]:O.ELECTROMORPHOSIS,[e.SNOM]:O.SNOW_WARNING,[e.STONJOURNER]:O.STURDY,[e.EISCUE]:O.ICE_SCALES,[e.INDEEDEE]:O.FRIEND_GUARD,[e.MORPEKO]:O.MOODY,[e.CUFANT]:O.EARTH_EATER,[e.DRACOZOLT]:O.NO_GUARD,[e.ARCTOZOLT]:O.WATER_ABSORB,[e.DRACOVISH]:O.SWIFT_SWIM,[e.ARCTOVISH]:O.STRONG_JAW,[e.DURALUDON]:O.STEELWORKER,[e.DREEPY]:O.PARENTAL_BOND,[e.ZACIAN]:O.UNNERVE,[e.ZAMAZENTA]:O.UNNERVE,[e.ETERNATUS]:O.NEUTRALIZING_GAS,[e.KUBFU]:O.IRON_FIST,[e.ZARUDE]:O.TOUGH_CLAWS,[e.REGIELEKI]:O.ELECTRIC_SURGE,[e.REGIDRAGO]:O.MULTISCALE,[e.GLASTRIER]:O.FILTER,[e.SPECTRIER]:O.SHADOW_SHIELD,[e.CALYREX]:O.HARVEST,[e.ENAMORUS]:O.FAIRY_AURA,[e.GALAR_MEOWTH]:O.UNBURDEN,[e.GALAR_PONYTA]:O.CHILLING_NEIGH,[e.GALAR_SLOWPOKE]:O.UNAWARE,[e.GALAR_FARFETCHD]:O.INTREPID_SWORD,[e.GALAR_ARTICUNO]:O.SERENE_GRACE,[e.GALAR_ZAPDOS]:O.TOUGH_CLAWS,[e.GALAR_MOLTRES]:O.DARK_AURA,[e.GALAR_CORSOLA]:O.SHADOW_SHIELD,[e.GALAR_ZIGZAGOON]:O.POISON_HEAL,[e.GALAR_DARUMAKA]:O.FLASH_FIRE,[e.GALAR_YAMASK]:O.TABLETS_OF_RUIN,[e.GALAR_STUNFISK]:O.ARENA_TRAP,[e.HISUI_GROWLITHE]:O.RECKLESS,[e.HISUI_VOLTORB]:O.TRANSISTOR,[e.HISUI_QWILFISH]:O.MERCILESS,[e.HISUI_SNEASEL]:O.SCRAPPY,[e.HISUI_ZORUA]:O.ADAPTABILITY,[e.SPRIGATITO]:O.MAGICIAN,[e.FUECOCO]:O.PUNK_ROCK,[e.QUAXLY]:O.OPPORTUNIST,[e.LECHONK]:O.SIMPLE,[e.TAROUNTULA]:O.HONEY_GATHER,[e.NYMBLE]:O.GUTS,[e.PAWMI]:O.TRANSISTOR,[e.TANDEMAUS]:O.SCRAPPY,[e.FIDOUGH]:O.WATER_ABSORB,[e.SMOLIV]:O.RIPEN,[e.SQUAWKABILLY]:O.MOXIE,[e.NACLI]:O.SOLID_ROCK,[e.CHARCADET]:O.PRISM_ARMOR,[e.TADBULB]:O.STAMINA,[e.WATTREL]:O.SHEER_FORCE,[e.MASCHIFF]:O.STRONG_JAW,[e.SHROODLE]:O.CORROSION,[e.BRAMBLIN]:O.SHADOW_SHIELD,[e.TOEDSCOOL]:O.PRANKSTER,[e.KLAWF]:O.WATER_ABSORB,[e.CAPSAKID]:O.PARENTAL_BOND,[e.RELLOR]:O.PRANKSTER,[e.FLITTLE]:O.DAZZLING,[e.TINKATINK]:O.STEELWORKER,[e.WIGLETT]:O.STURDY,[e.BOMBIRDIER]:O.UNBURDEN,[e.FINIZEN]:O.IRON_FIST,[e.VAROOM]:O.LEVITATE,[e.CYCLIZAR]:O.PROTEAN,[e.ORTHWORM]:O.REGENERATOR,[e.GLIMMET]:O.LEVITATE,[e.GREAVARD]:O.UNAWARE,[e.FLAMIGO]:O.MOXIE,[e.CETODDLE]:O.REFRIGERATE,[e.VELUZA]:O.SUPER_LUCK,[e.DONDOZO]:O.DRAGONS_MAW,[e.TATSUGIRI]:O.FLUFFY,[e.GREAT_TUSK]:O.INTIMIDATE,[e.SCREAM_TAIL]:O.UNAWARE,[e.BRUTE_BONNET]:O.CHLOROPHYLL,[e.FLUTTER_MANE]:O.DAZZLING,[e.SLITHER_WING]:O.SCRAPPY,[e.SANDY_SHOCKS]:O.ELECTRIC_SURGE,[e.IRON_TREADS]:O.STEELY_SPIRIT,[e.IRON_BUNDLE]:O.SNOW_WARNING,[e.IRON_HANDS]:O.IRON_FIST,[e.IRON_JUGULIS]:O.LIGHTNING_ROD,[e.IRON_MOTH]:O.LEVITATE,[e.IRON_THORNS]:O.SAND_STREAM,[e.FRIGIBAX]:O.INTIMIDATE,[e.GIMMIGHOUL]:O.HONEY_GATHER,[e.WO_CHIEN]:O.VESSEL_OF_RUIN,[e.CHIEN_PAO]:O.INTIMIDATE,[e.TING_LU]:O.STAMINA,[e.CHI_YU]:O.BERSERK,[e.ROARING_MOON]:O.TOUGH_CLAWS,[e.IRON_VALIANT]:O.NEUROFORCE,[e.KORAIDON]:O.OPPORTUNIST,[e.MIRAIDON]:O.OPPORTUNIST,[e.WALKING_WAKE]:O.BEAST_BOOST,[e.IRON_LEAVES]:O.SHARPNESS,[e.POLTCHAGEIST]:O.TRIAGE,[e.OKIDOGI]:O.DARK_AURA,[e.MUNKIDORI]:O.MAGICIAN,[e.FEZANDIPITI]:O.PIXILATE,[e.OGERPON]:O.OPPORTUNIST,[e.GOUGING_FIRE]:O.BEAST_BOOST,[e.RAGING_BOLT]:O.BEAST_BOOST,[e.IRON_BOULDER]:O.SHARPNESS,[e.IRON_CROWN]:O.SHARPNESS,[e.TERAPAGOS]:O.SOUL_HEART,[e.PECHARUNT]:O.TOXIC_CHAIN,[e.PALDEA_TAUROS]:O.ADAPTABILITY,[e.PALDEA_WOOPER]:O.THICK_FAT,[e.BLOODMOON_URSALUNA]:O.BERSERK};var ZR=(E=>(E[E.UNLOCKED=1]="UNLOCKED",E[E.ENABLED=2]="ENABLED",E))(ZR||{}),Qt=(E=>(E[E.ON=0]="ON",E[E.OFF=1]="OFF",E[E.EXCLUDE=2]="EXCLUDE",E[E.UNLOCKABLE=3]="UNLOCKABLE",E[E.ONE=4]="ONE",E[E.TWO=5]="TWO",E))(Qt||{}),UI=(E=>(E[E.SINGLE=0]="SINGLE",E[E.MULTI=1]="MULTI",E[E.HYBRID=2]="HYBRID",E[E.RADIAL=3]="RADIAL",E))(UI||{}),IR=(E=>(E[E.NUMBER=0]="NUMBER",E[E.COST=1]="COST",E[E.CANDY=2]="CANDY",E[E.IV=3]="IV",E[E.NAME=4]="NAME",E[E.CAUGHT=5]="CAUGHT",E[E.HATCHED=6]="HATCHED",E))(IR||{});const nm=class nm{constructor(A,s,R=1){this.text=A||"",this.sprite=s,this.state=R}};N(nm,"DropDownLabel");let $t=nm;const Im=class Im extends Phaser.GameObjects.Container{constructor(A,s){super(n),this.state=0,this.dir=-1,this.onColor=3390463,this.offColor=2565927,this.excludeColor=16733525,this.unlockableColor=16776960,this.oneColor=3390463,this.twoColor=3390463,this.val=A,Array.isArray(s)?this.labels=s:this.labels=s?[s]:[new $t("")],this.currentLabelIndex=0;const R=this.labels[this.currentLabelIndex];this.state=R.state,this.text=le(0,0,R.text||"",Q.TOOLTIP_CONTENT),this.text.setOrigin(0,.5),this.add(this.text);for(let a=0;a<this.labels.length;a++){const i=this.labels[a].sprite;i&&(this.add(i),i.setOrigin(0,.5),a!==this.currentLabelIndex&&i.setVisible(!1))}}setupToggleIcon(A,s){A===0?(this.toggle=n.add.sprite(0,0,"cursor"),this.toggle.setScale(.5),this.toggle.setOrigin(0,.5),this.toggle.setRotation(Math.PI/180*-90)):(this.toggle=n.add.sprite(0,0,"candy"),this.toggle.setScale(.3),this.toggle.setOrigin(0,.5)),this.add(this.toggle),this.toggle.setVisible(s),this.updateToggleIconColor()}updateToggleIconColor(){switch(this.state){case 0:this.toggle.setTint(this.onColor);break;case 1:this.toggle.setTint(this.offColor);break;case 2:this.toggle.setTint(this.excludeColor);break;case 3:this.toggle.setTint(this.unlockableColor);break;case 4:this.toggle.setTint(this.oneColor);break;case 5:this.toggle.setTint(this.twoColor);break}}toggleOptionState(){if(this.labels.length>1)return this.setCurrentLabel((this.currentLabelIndex+1)%this.labels.length);const A=this.state===0?1:0;return this.setOptionState(A)}setOptionState(A){const s=this.labels.findIndex(R=>R.state===A);return s!==-1&&s!==this.currentLabelIndex?this.setCurrentLabel(s):(this.state=A,this.updateToggleIconColor(),A)}setCurrentLabel(A){const s=this.labels[this.currentLabelIndex],R=this.labels[A];return R?(this.currentLabelIndex=A,this.state=R.state,this.updateToggleIconColor(),s.sprite&&(this.text.x-=s.sprite.displayWidth+2,s.sprite.setVisible(!1)),R.sprite&&(this.text.x+=R.sprite.displayWidth+2,R.sprite.setVisible(!0)),this.text.setText(R.text),this.state):this.state}setDirection(A){this.dir=A,this.toggle.flipX=this.dir===1}toggleDirection(){this.setDirection(this.dir*-1)}setLabelPosition(A,s){let R=A;for(let a=0;a<this.labels.length;a++){const i=this.labels[a];i.sprite&&(i.sprite.x=A,i.sprite.y=s,a===this.currentLabelIndex&&(R+=i.sprite.displayWidth+2))}this.text&&(this.text.x=R,this.text.y=s)}setTogglePosition(A,s){this.toggle&&(this.toggle.x=A,this.toggle.y=s)}getCurrentLabelX(){var A;return this.labels[this.currentLabelIndex].sprite?(A=this.labels[this.currentLabelIndex].sprite)==null?void 0:A.x:this.text.x}getWidth(){let A=0;const s=this.text.text;for(const R of this.labels){this.text.setText(R.text);const a=R.sprite?R.sprite.displayWidth+2:0;A=Math.max(A,this.text.displayWidth+a)}return this.text.setText(s),A}};N(Im,"DropDownOption");let WA=Im;const am=class am extends Phaser.GameObjects.Container{constructor(A,s,R,a,i=1,r=2){super(n,A-7-5,s),this.dropDownType=1,this.cursor=0,this.lastCursor=-1,this.defaultCursor=0,this.lastDir=-1,this.options=R,this.dropDownType=i,this.onChange=a,this.cursorObj=n.add.image(7,0,"cursor"),this.cursorObj.setScale(.5),this.cursorObj.setOrigin(0,.5),this.cursorObj.setVisible(!1),(this.dropDownType===1||this.dropDownType===2)&&this.options.unshift(new WA("ALL",new $t(u.t("filterBar:all"),void 0,this.checkForAllOn()?0:1))),this.defaultSettings=this.getSettings(),R.forEach((_,P)=>{const h=i!==0||_.state===0;_.setupToggleIcon(i,h),_.width=100,_.y=P*7+P*r+6;const H=14,d=7/2;_.setLabelPosition(H+8,d),i===0?_.setTogglePosition(H+3,d+1):_.setTogglePosition(H,d)}),this.window=Gt(0,0,100,R[R.length-1].y+7+6,!1,!1,void 0,void 0,sO.XTHIN),this.add(this.window),this.add(R),this.add(this.cursorObj),this.setVisible(!1)}getWidth(){return this.window?this.window.width:this.width}toggleVisibility(){this.setVisible(!this.visible)}setVisible(A){return super.setVisible(A),A&&this.autoSize(),this}resetCursor(){return this.dropDownType===2&&this.checkForAllOff()?this.setCursor(this.lastCursor):this.setCursor(this.defaultCursor)}setCursor(A){return this.cursor=A,A<0?(A=0,this.cursorObj.setVisible(!1),!1):A>=this.options.length?(A=this.options.length-1,this.cursorObj.y=this.options[A].y+3.5,this.cursorObj.setVisible(!0),!1):(this.cursorObj.y=this.options[A].y+3.5,this.cursorObj.setVisible(!0),this.dropDownType===2&&(this.lastCursor=A,this.onChange()),!0)}toggleOptionState(A=this.cursor){const s=this.options[A];if(this.dropDownType===1||this.dropDownType===2){const R=s.toggleOptionState();A===0?this.setAllOptions(R):R===0&&this.checkForAllOn()?this.options[0].setOptionState(0):this.options[0].setOptionState(1)}else this.dropDownType===0?s.state===1?(this.options.forEach(R=>{R.setOptionState(1),R.setDirection(-1),R.toggle.setVisible(!1)}),s.setOptionState(0),s.setDirection(this.lastDir),s.toggle.setVisible(!0)):(s.toggleDirection(),this.lastDir=this.options[this.cursor].dir):this.dropDownType===3&&s.toggleOptionState();this.onChange()}checkForAllOn(){return this.options.every((A,s)=>s===0||A.state===0)}checkForAllOff(){return this.options.every((A,s)=>s===0||A.state===1)}getVals(){if(this.dropDownType===1)return this.options.filter((A,s)=>s>0&&A.state===0).map(A=>A.val);if(this.dropDownType===2){const A=this.options.filter((s,R)=>R>0&&s.state===0).map(s=>s.val);return A.length>0?A:this.cursor===0?this.options.filter((s,R)=>R>0).map(s=>s.val):[this.options[this.cursor].val]}else return this.dropDownType===3?this.options.map(A=>({val:A.val,state:A.state})):this.options.filter(A=>A.state===0).map(A=>({val:A.val,dir:A.dir}))}getSettings(){const A=[];for(let s=0;s<this.options.length;s++)A.push({val:this.options[s].val,state:this.options[s].state,cursor:this.cursor===s,dir:this.options[s].dir});return A}hasDefaultValues(){const A=this.getSettings(),s=N(R=>A.length===this.defaultSettings.length&&A.every((a,i)=>R.every(r=>a[r]===this.defaultSettings[i][r])),"compareValues");switch(this.dropDownType){case 1:case 3:return s(["val","state"]);case 2:return s(["val","state","cursor"]);case 0:return s(["val","state","dir"]);default:return!1}}resetToDefault(){if(this.defaultSettings.length>0){this.setCursor(this.defaultCursor),this.lastDir=-1;for(let A=0;A<this.options.length;A++)this.dropDownType===0?this.defaultSettings[A].state===1?(this.options[A].setOptionState(1),this.options[A].setDirection(-1),this.options[A].toggle.setVisible(!1)):(this.options[A].setOptionState(0),this.options[A].setDirection(-1),this.options[A].toggle.setVisible(!0)):this.defaultSettings[A]&&this.options[A].setOptionState(this.defaultSettings[A].state)}}setAllOptions(A){if(this.dropDownType!==0)for(const s of this.options)s.setOptionState(A)}selectAllOptions(){this.setAllOptions(0)}unselectAllOptions(){this.setAllOptions(1)}autoSize(){let A=0,s=0;for(let R=0;R<this.options.length;R++){const a=this.options[R].getWidth();a>A&&(A=a,s=this.options[R].getCurrentLabelX()??0)}this.window.width=A+s-this.window.x+6,this.x+this.window.width>this.parentContainer.width&&(this.x=this.parentContainer.width-this.window.width)}};N(am,"DropDown");let uI=am;const im=class im extends Phaser.GameObjects.Container{constructor(A){super(n,0,0),this.shinyIcons=[],this.cost=0,this.species=A;const s=n.gameData.getSpeciesDefaultDexAttr(A,!1,!0),R=n.gameData.getSpeciesDexAttrProps(A,s),a=n.add.image(2,5,"passive_bg");a.setOrigin(0,0),a.setScale(.75),a.setVisible(!1),this.add(a),this.starterPassiveBgs=a,this.icon=n.add.sprite(-2,2,A.getIconAtlasKey(R.formIndex,R.shiny,R.variant)),this.icon.setScale(.5),this.icon.setOrigin(0,0),this.icon.setFrame(A.getIconId(R.female,R.formIndex,R.shiny,R.variant)),this.checkIconId(R.female,R.formIndex,R.shiny,R.variant),this.icon.setTint(0),this.add(this.icon);for(let M=0;M<3;M++){const D=n.add.image(M*-3+12,2,"shiny_star_small");D.setScale(.5),D.setOrigin(0,0),D.setVisible(!1),this.shinyIcons.push(D)}this.add(this.shinyIcons);const i=le(1,2,"0",Q.WINDOW,{fontSize:"32px"});i.setShadowOffset(2,2),i.setOrigin(0,0),i.setVisible(!1),this.add(i),this.label=i;const r=n.add.image(12,7,"ha_capsule");r.setOrigin(0,0),r.setScale(.5),r.setVisible(!1),this.add(r),this.hiddenAbilityIcon=r;const L=n.add.image(0,7,"favorite");L.setOrigin(0,0),L.setScale(.5),L.setVisible(!1),this.add(L),this.favoriteIcon=L;const o=n.add.image(0,12,"champion_ribbon");o.setOrigin(0,0),o.setScale(.5),o.setVisible(!1),this.add(o),this.classicWinIcon=o;const l=n.add.image(12,12,"candy");l.setOrigin(0,0),l.setScale(.25),l.setVisible(!1),this.add(l),this.candyUpgradeIcon=l;const C=n.add.image(12,12,"candy_overlay");C.setOrigin(0,0),C.setScale(.25),C.setVisible(!1),this.add(C),this.candyUpgradeOverlayIcon=C}checkIconId(A,s,R,a){this.icon.frame.name!==this.species.getIconId(A,s,R,a)&&(console.log(`${this.species.name}'s variant icon does not exist. Replacing with default.`),this.icon.setTexture(this.species.getIconAtlasKey(s,!1,a)),this.icon.setFrame(this.species.getIconId(A,s,!1,a)))}};N(im,"StarterContainer");let kP=im;var ss=(E=>(E[E.GEN=0]="GEN",E[E.TYPES=1]="TYPES",E[E.CAUGHT=2]="CAUGHT",E[E.UNLOCKS=3]="UNLOCKS",E[E.MISC=4]="MISC",E[E.SORT=5]="SORT",E))(ss||{});const rm=class rm extends Phaser.GameObjects.Container{constructor(A,s,R,a){super(n,A,s),this.labels=[],this.dropDowns=[],this.columns=[],this.numFilters=0,this.openDropDown=!1,this.lastCursor=-1,this.width=R,this.height=a,this.window=Gt(0,0,R,a,!1,!1,void 0,void 0,sO.THIN),this.add(this.window),this.cursorObj=n.add.image(1,1,"cursor"),this.cursorObj.setScale(.5),this.cursorObj.setVisible(!1),this.cursorObj.setOrigin(0,0),this.add(this.cursorObj),this.uiTheme=n.uiTheme}addFilter(A,s,R){if(this.columns.includes(A))return!1;this.columns.push(A);const a=le(0,3,s,Q.TOOLTIP_CONTENT);return this.labels.push(a),this.add(a),this.dropDowns.push(R),this.add(R),this.calcFilterPositions(),this.numFilters++,!0}getFilter(A){return this.dropDowns[this.columns.indexOf(A)]}updateFilterLabels(){for(let A=0;A<this.numFilters;A++)this.dropDowns[A].hasDefaultValues()?this.labels[A].setColor(aA(Q.TOOLTIP_CONTENT,!1,this.uiTheme)):this.labels[A].setColor(aA(Q.STATS_LABEL,!1,this.uiTheme))}calcFilterPositions(){let R=20;this.labels.forEach(i=>{R+=i.displayWidth+8});const a=(this.width-R)/(this.labels.length-1);for(let i=0;i<this.labels.length;i++){if(i===0)this.labels[i].x=14;else{const r=this.labels[i-1].x+this.labels[i-1].displayWidth;this.labels[i].x=r+a+8}this.dropDowns[i].x=this.labels[i].x-8-6,this.dropDowns[i].y=this.height}}offsetHybridFilters(){for(let A=0;A<this.dropDowns.length;A++)this.dropDowns[A].dropDownType===UI.HYBRID&&(this.dropDowns[A].autoSize(),this.dropDowns[A].x=-this.dropDowns[A].getWidth(),this.dropDowns[A].y=0)}setCursor(A){this.lastCursor>-1&&this.dropDowns[this.lastCursor].visible&&(this.dropDowns[this.lastCursor].setVisible(!1),this.dropDowns[A].setVisible(!0),this.dropDowns[A].resetCursor()),this.cursorObj.setPosition(this.labels[A].x-8+2,6),this.lastCursor=A}toggleDropDown(A){this.dropDowns[A].toggleVisibility(),this.openDropDown=this.dropDowns[A].visible,this.dropDowns[A].resetCursor()}hideDropDowns(){this.dropDowns.forEach(A=>{A.setVisible(!1)}),this.openDropDown=!1}incDropDownCursor(){return this.dropDowns[this.lastCursor].cursor===this.dropDowns[this.lastCursor].options.length-1?this.dropDowns[this.lastCursor].setCursor(0):this.dropDowns[this.lastCursor].setCursor(this.dropDowns[this.lastCursor].cursor+1)}decDropDownCursor(){return this.dropDowns[this.lastCursor].cursor===0?this.dropDowns[this.lastCursor].setCursor(this.dropDowns[this.lastCursor].options.length-1):this.dropDowns[this.lastCursor].setCursor(this.dropDowns[this.lastCursor].cursor-1)}toggleOptionState(){this.dropDowns[this.lastCursor].toggleOptionState()}getVals(A){return this.getFilter(A).getVals()}setValsToDefault(){for(const A of this.dropDowns)A.resetToDefault()}getNearestFilter(A){const s=A.x+A.icon.displayWidth/2;let R=0,a=1e3;for(let i=0;i<this.labels.length;i++){const r=Math.abs(s-(this.labels[i].x+this.labels[i].displayWidth/3));r<a&&(R=i,a=r)}return R}};N(rm,"FilterBar");let ZP=rm;const Lm=class Lm extends Phaser.GameObjects.Container{constructor(A,s,R,a,i){super(n,A,s),this.maxRows=i,this.totalRows=i,this.currentRow=0;const r=2;R=Math.max(R,4),this.bg=n.add.nineslice(0,0,"scroll_bar",void 0,R,a,r,r,r,r),this.bg.setOrigin(0,0),this.add(this.bg),this.handleBody=n.add.rectangle(1,1,R-2,4,11184810),this.handleBody.setOrigin(0,0),this.add(this.handleBody),this.handleBottom=n.add.nineslice(1,1,"scroll_bar_handle",void 0,R-2,2,2,0,0,0),this.handleBottom.setOrigin(0,0),this.add(this.handleBottom)}setScrollCursor(A){this.currentRow=A,this.updateHandlePosition()}setTotalRows(A){this.totalRows=A,this.handleBody.height=(this.bg.displayHeight-1-this.handleBottom.displayHeight)*this.maxRows/this.totalRows,this.updateHandlePosition(),this.setVisible(this.totalRows>this.maxRows)}updateHandlePosition(){this.handleBody.y=1+(this.bg.displayHeight-1-this.handleBottom.displayHeight)/this.totalRows*this.currentRow,this.handleBottom.y=this.handleBody.y+this.handleBody.displayHeight}};N(Lm,"ScrollBar");let ZI=Lm;const R6={en:{starterInfoTextSize:"56px",instructionTextSize:"38px"},de:{starterInfoTextSize:"48px",instructionTextSize:"35px",starterInfoXPos:33},"es-ES":{starterInfoTextSize:"56px",instructionTextSize:"35px"},fr:{starterInfoTextSize:"54px",instructionTextSize:"38px"},it:{starterInfoTextSize:"56px",instructionTextSize:"38px"},pt_BR:{starterInfoTextSize:"47px",instructionTextSize:"38px",starterInfoXPos:33},zh:{starterInfoTextSize:"47px",instructionTextSize:"38px",starterInfoYOffset:1,starterInfoXPos:24},pt:{starterInfoTextSize:"48px",instructionTextSize:"42px",starterInfoXPos:33},ko:{starterInfoTextSize:"52px",instructionTextSize:"38px"},ja:{starterInfoTextSize:"51px",instructionTextSize:"38px"},"ca-ES":{starterInfoTextSize:"56px",instructionTextSize:"38px"}},O6=2,b0=17,rl=109,Rn=285,Hl=38,Ll=34,SS=107,n6=20;function XP(E,A=0){const a=E%9*18,i=13+(Math.floor(E/9)-A)*17;return{x:a,y:i}}N(XP,"calcStarterPosition");function b1(E){const A=SS/7,s=Hl+A/2;return Math.round(s+A*E)}N(b1,"calcStarterIconY");function I6(E,A=6){let s=SS,R=0;for(let a=0;a<A;a++){const i=Math.abs(E-(b1(a)-13));i<s&&(R=a,s=i)}return R}N(I6,"findClosestStarterIndex");function a6(E,A){const s=b1(E)-13;let R=SS,a=0;for(let i=0;i<A;i++){const r=Math.abs(s-XP(i*9).y);r<R&&(a=i,R=r)}return a}N(a6,"findClosestStarterRow");const Nm=class Nm extends vs{constructor(){super(Ie.STARTER_SELECT),this.starterContainers=[],this.filteredStarterContainers=[],this.validStarterContainers=[],this.starterIconsCursorXOffset=-3,this.starterIconsCursorYOffset=1,this.dexAttrCursor=0n,this.abilityCursor=-1,this.natureCursor=-1,this.filterBarCursor=0,this.allSpecies=[],this.speciesLoaded=new Map,this.starterSpecies=[],this.pokerusSpecies=[],this.starterAttr=[],this.starterAbilityIndexes=[],this.starterNatures=[],this.starterMovesets=[],this.instructionRowX=0,this.instructionRowY=0,this.instructionRowTextOffset=9,this.filterInstructionRowX=0,this.filterInstructionRowY=0,this.blockInput=!1,this.updateStarters=()=>{this.scrollCursor=0,this.filteredStarterContainers=[],this.validStarterContainers=[],this.pokerusCursorObjs.forEach(s=>s.setVisible(!1)),this.starterCursorObjs.forEach(s=>s.setVisible(!1)),this.filterBar.updateFilterLabels(),n.gameMode.modeId===SA.CHALLENGE?this.starterContainers.forEach(s=>{var i;const R=s.species;let a=!1;if(((i=R.forms)==null?void 0:i.length)>0)for(let r=0;r<R.forms.length;r++){const L=BigInt(Math.pow(2,r))*Xe.DEFAULT_FORM,o=new Lt(!0);as(n.gameMode,XE.STARTER_CHOICE,s.species,o,n.gameData.getSpeciesDexAttrProps(R,L),!0),a=a||o.value}else{const r=new Lt(!0);as(n.gameMode,XE.STARTER_CHOICE,s.species,r,n.gameData.getSpeciesDexAttrProps(R,n.gameData.getSpeciesDefaultDexAttr(s.species,!1,!0)),!0),a=r.value}a?this.validStarterContainers.push(s):s.setVisible(!1)}):this.validStarterContainers=this.starterContainers;for(let s=0;s<this.validStarterContainers.length;s++){const R=this.validStarterContainers[s],a=R.icon,i=this.getCurrentDexProps(R.species.speciesId),r=n.gameData.getSpeciesDexAttrProps(R.species,i);a.setTexture(R.species.getIconAtlasKey(r.formIndex,r.shiny,r.variant),R.species.getIconId(r.female,r.formIndex,r.shiny,r.variant)),R.checkIconId(r.female,r.formIndex,r.shiny,r.variant)}this.validStarterContainers.forEach(s=>{var We,De;s.setVisible(!1),s.cost=n.gameData.getSpeciesStarterValue(s.species.speciesId);const R=((We=n.gameData.dexData[s.species.speciesId])==null?void 0:We.caughtAttr)||BigInt(0),a=n.gameData.starterData[s.species.speciesId],i=KE.hasOwnProperty(s.species.speciesId),r=this.filterBar.getVals(ss.GEN).includes(s.species.generation),L=this.filterBar.getVals(ss.TYPES).some(ie=>s.species.isOfType(ie-1)),o=!!(R&Xe.NON_SHINY),l=!!(R&Xe.SHINY),C=l&&!!(R&Xe.DEFAULT_VARIANT),M=l&&!!(R&Xe.VARIANT_2),D=l&&!!(R&Xe.VARIANT_3),_=!o&&!C&&!M&&!D,P=this.filterBar.getVals(ss.CAUGHT).some(ie=>{if(ie==="SHINY3")return D;if(ie==="SHINY2")return M&&!D;if(ie==="SHINY")return C&&!M&&!D;if(ie==="NORMAL")return o&&!C&&!M&&!D;if(ie==="UNCAUGHT")return _}),h=a.passiveAttr>0,H=this.isPassiveAvailable(s.species.speciesId)&&!h,d=this.filterBar.getVals(ss.UNLOCKS).some(ie=>{if(ie.val==="PASSIVE"&&ie.state===Qt.ON)return h;if(ie.val==="PASSIVE"&&ie.state===Qt.EXCLUDE)return i&&!h;if(ie.val==="PASSIVE"&&ie.state===Qt.UNLOCKABLE)return H;if(ie.val==="PASSIVE"&&ie.state===Qt.OFF)return!0}),f=a.valueReduction===1,B=a.valueReduction===2,F=this.isValueReductionAvailable(s.species.speciesId),W=this.filterBar.getVals(ss.UNLOCKS).some(ie=>{if(ie.val==="COST_REDUCTION"&&ie.state===Qt.ON)return f||B;if(ie.val==="COST_REDUCTION"&&ie.state===Qt.ONE)return f;if(ie.val==="COST_REDUCTION"&&ie.state===Qt.TWO)return B;if(ie.val==="COST_REDUCTION"&&ie.state===Qt.EXCLUDE)return i&&!(f||B);if(ie.val==="COST_REDUCTION"&&ie.state===Qt.UNLOCKABLE)return F;if(ie.val==="COST_REDUCTION"&&ie.state===Qt.OFF)return!0}),b=((De=this.starterPreferences[s.species.speciesId])==null?void 0:De.favorite)??!1,x=this.filterBar.getVals(ss.MISC).some(ie=>{if(ie.val==="FAVORITE"&&ie.state===Qt.ON)return b;if(ie.val==="FAVORITE"&&ie.state===Qt.EXCLUDE)return!b;if(ie.val==="FAVORITE"&&ie.state===Qt.OFF)return!0}),$=a.classicWinCount>0,j=a.classicWinCount===0,z=a.classicWinCount===void 0,se=this.filterBar.getVals(ss.MISC).some(ie=>{if(ie.val==="WIN"&&ie.state===Qt.ON)return $;if(ie.val==="WIN"&&ie.state===Qt.EXCLUDE)return j||z;if(ie.val==="WIN"&&ie.state===Qt.OFF)return!0}),Z=s.species.abilityHidden!==s.species.ability1&&s.species.abilityHidden!==O.NONE,q=a.abilityAttr&Ms.ABILITY_HIDDEN,p=this.filterBar.getVals(ss.MISC).some(ie=>{if(ie.val==="HIDDEN_ABILITY"&&ie.state===Qt.ON)return q;if(ie.val==="HIDDEN_ABILITY"&&ie.state===Qt.EXCLUDE)return Z&&!q;if(ie.val==="HIDDEN_ABILITY"&&ie.state===Qt.OFF)return!0}),oe=this.isSameSpeciesEggAvailable(s.species.speciesId),me=this.filterBar.getVals(ss.MISC).some(ie=>{if(ie.val==="EGG"&&ie.state===Qt.ON)return oe;if(ie.val==="EGG"&&ie.state===Qt.EXCLUDE)return i&&!oe;if(ie.val==="EGG"&&ie.state===Qt.OFF)return!0}),Me=this.filterBar.getVals(ss.MISC).some(ie=>{if(ie.val==="POKERUS"&&ie.state===Qt.ON)return this.pokerusSpecies.includes(s.species);if(ie.val==="POKERUS"&&ie.state===Qt.EXCLUDE)return!this.pokerusSpecies.includes(s.species);if(ie.val==="POKERUS"&&ie.state===Qt.OFF)return!0});r&&L&&P&&d&&W&&x&&se&&p&&me&&Me&&this.filteredStarterContainers.push(s)}),this.starterSelectScrollBar.setTotalRows(Math.max(Math.ceil(this.filteredStarterContainers.length/9),1)),this.starterSelectScrollBar.setScrollCursor(0);const A=this.filterBar.getVals(ss.SORT)[0];this.filteredStarterContainers.sort((s,R)=>{switch(A.val){default:break;case IR.NUMBER:return(s.species.speciesId-R.species.speciesId)*-A.dir;case IR.COST:return(s.cost-R.cost)*-A.dir;case IR.CANDY:const a=n.gameData.starterData[s.species.speciesId].candyCount,i=n.gameData.starterData[R.species.speciesId].candyCount;return(a-i)*-A.dir;case IR.IV:const r=n.gameData.dexData[s.species.speciesId].ivs.reduce((o,l)=>o+l,0)/n.gameData.dexData[s.species.speciesId].ivs.length,L=n.gameData.dexData[R.species.speciesId].ivs.reduce((o,l)=>o+l,0)/n.gameData.dexData[R.species.speciesId].ivs.length;return(r-L)*-A.dir;case IR.NAME:return s.species.name.localeCompare(R.species.name)*-A.dir;case IR.CAUGHT:return(n.gameData.dexData[s.species.speciesId].caughtCount-n.gameData.dexData[R.species.speciesId].caughtCount)*-A.dir;case IR.HATCHED:return(n.gameData.dexData[s.species.speciesId].hatchedCount-n.gameData.dexData[R.species.speciesId].hatchedCount)*-A.dir}return 0}),this.updateScroll()},this.updateScroll=()=>{const R=this.scrollCursor*9,a=Math.min(this.filteredStarterContainers.length-1,R+9*9-1);this.starterSelectScrollBar.setScrollCursor(this.scrollCursor);let i=0;this.filteredStarterContainers.forEach((r,L)=>{var l;const o=XP(L,this.scrollCursor);if(r.setPosition(o.x,o.y),L<R||L>a){r.setVisible(!1),this.pokerusSpecies.includes(r.species)&&(this.pokerusCursorObjs[i].setPosition(o.x-1,o.y+1),this.pokerusCursorObjs[i].setVisible(!1),i++),this.starterSpecies.includes(r.species)&&(this.starterCursorObjs[this.starterSpecies.indexOf(r.species)].setPosition(o.x-1,o.y+1),this.starterCursorObjs[this.starterSpecies.indexOf(r.species)].setVisible(!1));return}else{r.setVisible(!0),this.pokerusSpecies.includes(r.species)&&(this.pokerusCursorObjs[i].setPosition(o.x-1,o.y+1),this.pokerusCursorObjs[i].setVisible(!0),i++),this.starterSpecies.includes(r.species)&&(this.starterCursorObjs[this.starterSpecies.indexOf(r.species)].setPosition(o.x-1,o.y+1),this.starterCursorObjs[this.starterSpecies.indexOf(r.species)].setVisible(!0));const C=r.species.speciesId;this.updateStarterValueLabel(r),r.label.setVisible(!0);const M=C&&n.gameData.dexData[C].caughtAttr&Xe.SHINY?[Xe.DEFAULT_VARIANT,Xe.VARIANT_2,Xe.VARIANT_3].filter(D=>!!(n.gameData.dexData[C].caughtAttr&D)):[];for(let D=0;D<3;D++){const _=M.length>D;r.shinyIcons[D].setVisible(_),_&&r.shinyIcons[D].setTint(yE(M[D]===Xe.DEFAULT_VARIANT?0:M[D]===Xe.VARIANT_2?1:2))}r.starterPassiveBgs.setVisible(!!n.gameData.starterData[C].passiveAttr),r.hiddenAbilityIcon.setVisible(!!n.gameData.dexData[C].caughtAttr&&!!(n.gameData.starterData[C].abilityAttr&4)),r.classicWinIcon.setVisible(n.gameData.starterData[C].classicWinCount>0),r.favoriteIcon.setVisible(((l=this.starterPreferences[C])==null?void 0:l.favorite)??!1),n.candyUpgradeDisplay===0?(TR[C]||(TR[C]=["ffffff","ffffff"]),r.candyUpgradeIcon.setTint(js(cs(TR[C][0]))),r.candyUpgradeOverlayIcon.setTint(js(cs(TR[C][1]))),this.setUpgradeIcon(r)):n.candyUpgradeDisplay===1&&(r.candyUpgradeIcon.setVisible(!1),r.candyUpgradeOverlayIcon.setVisible(!1))}})}}setup(){const A=this.getUi(),s=u.resolvedLanguage??"en",R=Object.keys(R6).find(ee=>s.includes(ee))??"en",a=R6[R];this.starterSelectContainer=n.add.container(0,-n.game.canvas.height/6),this.starterSelectContainer.setVisible(!1),A.add(this.starterSelectContainer);const i=n.add.rectangle(0,0,n.game.canvas.width/6,n.game.canvas.height/6,26720);i.setOrigin(0,0),this.starterSelectContainer.add(i);const r=n.add.image(0,0,"starter_select_bg");r.setOrigin(0,0),this.starterSelectContainer.add(r),this.shinyOverlay=n.add.image(6,6,"summary_overlay_shiny"),this.shinyOverlay.setOrigin(0,0),this.shinyOverlay.setVisible(!1),this.starterSelectContainer.add(this.shinyOverlay);const L=Gt(rl,b0+1,175,161),o=n.add.image(rl+1,b0+2,"starter_container_bg");o.setOrigin(0,0),this.starterSelectContainer.add(o),this.starterSelectContainer.add(Gt(Rn,Hl-n6,Ll,n6,!0)),this.starterSelectContainer.add(Gt(Rn,Hl,Ll,SS)),this.starterSelectContainer.add(Gt(Rn,Hl+SS,Ll,Ll,!0)),this.starterSelectContainer.add(L),this.filterBarContainer=n.add.container(0,0),this.filterBar=new ZP(Math.min(rl,Rn),1,210,b0);const l=[new WA(1,new $t(u.t("starterSelectUiHandler:gen1"))),new WA(2,new $t(u.t("starterSelectUiHandler:gen2"))),new WA(3,new $t(u.t("starterSelectUiHandler:gen3"))),new WA(4,new $t(u.t("starterSelectUiHandler:gen4"))),new WA(5,new $t(u.t("starterSelectUiHandler:gen5"))),new WA(6,new $t(u.t("starterSelectUiHandler:gen6"))),new WA(7,new $t(u.t("starterSelectUiHandler:gen7"))),new WA(8,new $t(u.t("starterSelectUiHandler:gen8"))),new WA(9,new $t(u.t("starterSelectUiHandler:gen9")))],C=new uI(0,0,l,this.updateStarters,UI.HYBRID);this.filterBar.addFilter(ss.GEN,u.t("filterBar:genFilter"),C);const M=Object.keys(I).filter(ee=>isNaN(Number(ee))),D=[];M.forEach((ee,Le)=>{if(Le===0||Le===19)return;const ue=n.add.sprite(0,0,YR("types"));ue.setScale(.5),ue.setFrame(ee.toLowerCase()),D.push(new WA(Le,new $t("",ue)))}),this.filterBar.addFilter(ss.TYPES,u.t("filterBar:typeFilter"),new uI(0,0,D,this.updateStarters,UI.HYBRID,.5));const _=n.add.sprite(0,0,"shiny_icons");_.setOrigin(.15,.2),_.setScale(.6),_.setFrame(II(0)),_.setTint(yE(0));const P=n.add.sprite(0,0,"shiny_icons");P.setOrigin(.15,.2),P.setScale(.6),P.setFrame(II(1)),P.setTint(yE(1));const h=n.add.sprite(0,0,"shiny_icons");h.setOrigin(.15,.2),h.setScale(.6),h.setFrame(II(2)),h.setTint(yE(2));const H=[new WA("SHINY3",new $t("",h)),new WA("SHINY2",new $t("",P)),new WA("SHINY",new $t("",_)),new WA("NORMAL",new $t(u.t("filterBar:normal"))),new WA("UNCAUGHT",new $t(u.t("filterBar:uncaught")))];this.filterBar.addFilter(ss.CAUGHT,u.t("filterBar:caughtFilter"),new uI(0,0,H,this.updateStarters,UI.HYBRID));const d=[new $t(u.t("filterBar:passive"),void 0,Qt.OFF),new $t(u.t("filterBar:passiveUnlocked"),void 0,Qt.ON),new $t(u.t("filterBar:passiveUnlockable"),void 0,Qt.UNLOCKABLE),new $t(u.t("filterBar:passiveLocked"),void 0,Qt.EXCLUDE)],f=[new $t(u.t("filterBar:costReduction"),void 0,Qt.OFF),new $t(u.t("filterBar:costReductionUnlocked"),void 0,Qt.ON),new $t(u.t("filterBar:costReductionUnlockedOne"),void 0,Qt.ONE),new $t(u.t("filterBar:costReductionUnlockedTwo"),void 0,Qt.TWO),new $t(u.t("filterBar:costReductionUnlockable"),void 0,Qt.UNLOCKABLE),new $t(u.t("filterBar:costReductionLocked"),void 0,Qt.EXCLUDE)],B=[new WA("PASSIVE",d),new WA("COST_REDUCTION",f)];this.filterBar.addFilter(ss.UNLOCKS,u.t("filterBar:unlocksFilter"),new uI(0,0,B,this.updateStarters,UI.RADIAL));const F=[new $t(u.t("filterBar:favorite"),void 0,Qt.OFF),new $t(u.t("filterBar:isFavorite"),void 0,Qt.ON),new $t(u.t("filterBar:notFavorite"),void 0,Qt.EXCLUDE)],W=[new $t(u.t("filterBar:ribbon"),void 0,Qt.OFF),new $t(u.t("filterBar:hasWon"),void 0,Qt.ON),new $t(u.t("filterBar:hasNotWon"),void 0,Qt.EXCLUDE)],b=[new $t(u.t("filterBar:hiddenAbility"),void 0,Qt.OFF),new $t(u.t("filterBar:hasHiddenAbility"),void 0,Qt.ON),new $t(u.t("filterBar:noHiddenAbility"),void 0,Qt.EXCLUDE)],x=[new $t(u.t("filterBar:egg"),void 0,Qt.OFF),new $t(u.t("filterBar:eggPurchasable"),void 0,Qt.ON)],$=[new $t(u.t("filterBar:pokerus"),void 0,Qt.OFF),new $t(u.t("filterBar:hasPokerus"),void 0,Qt.ON)],j=[new WA("FAVORITE",F),new WA("WIN",W),new WA("HIDDEN_ABILITY",b),new WA("EGG",x),new WA("POKERUS",$)];this.filterBar.addFilter(ss.MISC,u.t("filterBar:miscFilter"),new uI(0,0,j,this.updateStarters,UI.RADIAL));const z=[new WA(IR.NUMBER,new $t(u.t("filterBar:sortByNumber"),void 0,Qt.ON)),new WA(IR.COST,new $t(u.t("filterBar:sortByCost"))),new WA(IR.CANDY,new $t(u.t("filterBar:sortByCandies"))),new WA(IR.IV,new $t(u.t("filterBar:sortByIVs"))),new WA(IR.NAME,new $t(u.t("filterBar:sortByName"))),new WA(IR.CAUGHT,new $t(u.t("filterBar:sortByNumCaught"))),new WA(IR.HATCHED,new $t(u.t("filterBar:sortByNumHatched")))];this.filterBar.addFilter(ss.SORT,u.t("filterBar:sortFilter"),new uI(0,0,z,this.updateStarters,UI.SINGLE)),this.filterBarContainer.add(this.filterBar),this.starterSelectContainer.add(this.filterBarContainer),this.filterBar.offsetHybridFilters(),n.uiTheme||L.setVisible(!1),this.iconAnimHandler=new cr,this.iconAnimHandler.setup(),this.pokemonNumberText=le(17,1,"0000",Q.SUMMARY),this.pokemonNumberText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonNumberText),this.pokemonNameText=le(6,112,"",Q.SUMMARY),this.pokemonNameText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonNameText),this.pokemonGrowthRateLabelText=le(8,106,u.t("starterSelectUiHandler:growthRate"),Q.SUMMARY_ALT,{fontSize:"36px"}),this.pokemonGrowthRateLabelText.setOrigin(0,0),this.pokemonGrowthRateLabelText.setVisible(!1),this.starterSelectContainer.add(this.pokemonGrowthRateLabelText),this.pokemonGrowthRateText=le(34,106,"",Q.SUMMARY_PINK,{fontSize:"36px"}),this.pokemonGrowthRateText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonGrowthRateText),this.pokemonGenderText=le(96,112,"",Q.SUMMARY_ALT),this.pokemonGenderText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonGenderText),this.pokemonUncaughtText=le(6,127,u.t("starterSelectUiHandler:uncaught"),Q.SUMMARY_ALT,{fontSize:"56px"}),this.pokemonUncaughtText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonUncaughtText);const se=(a==null?void 0:a.starterInfoXPos)||31,Z=(a==null?void 0:a.starterInfoYOffset)||0,q=(a==null?void 0:a.starterInfoTextSize)||56;this.pokemonAbilityLabelText=le(6,127+Z,u.t("starterSelectUiHandler:ability"),Q.SUMMARY_ALT,{fontSize:q}),this.pokemonAbilityLabelText.setOrigin(0,0),this.pokemonAbilityLabelText.setVisible(!1),this.starterSelectContainer.add(this.pokemonAbilityLabelText),this.pokemonAbilityText=le(se,127+Z,"",Q.SUMMARY_ALT,{fontSize:q}),this.pokemonAbilityText.setOrigin(0,0),this.pokemonAbilityText.setInteractive(new Phaser.Geom.Rectangle(0,0,250,55),Phaser.Geom.Rectangle.Contains),this.starterSelectContainer.add(this.pokemonAbilityText),this.pokemonPassiveLabelText=le(6,136+Z,u.t("starterSelectUiHandler:passive"),Q.SUMMARY_ALT,{fontSize:q}),this.pokemonPassiveLabelText.setOrigin(0,0),this.pokemonPassiveLabelText.setVisible(!1),this.starterSelectContainer.add(this.pokemonPassiveLabelText),this.pokemonPassiveText=le(se,136+Z,"",Q.SUMMARY_ALT,{fontSize:q}),this.pokemonPassiveText.setOrigin(0,0),this.pokemonPassiveText.setInteractive(new Phaser.Geom.Rectangle(0,0,250,55),Phaser.Geom.Rectangle.Contains),this.starterSelectContainer.add(this.pokemonPassiveText),this.pokemonPassiveDisabledIcon=n.add.sprite(se,137+Z,"icon_stop"),this.pokemonPassiveDisabledIcon.setOrigin(0,.5),this.pokemonPassiveDisabledIcon.setScale(.35),this.pokemonPassiveDisabledIcon.setVisible(!1),this.starterSelectContainer.add(this.pokemonPassiveDisabledIcon),this.pokemonPassiveLockedIcon=n.add.sprite(se,137+Z,"icon_lock"),this.pokemonPassiveLockedIcon.setOrigin(0,.5),this.pokemonPassiveLockedIcon.setScale(.42,.38),this.pokemonPassiveLockedIcon.setVisible(!1),this.starterSelectContainer.add(this.pokemonPassiveLockedIcon),this.pokemonNatureLabelText=le(6,145+Z,u.t("starterSelectUiHandler:nature"),Q.SUMMARY_ALT,{fontSize:q}),this.pokemonNatureLabelText.setOrigin(0,0),this.pokemonNatureLabelText.setVisible(!1),this.starterSelectContainer.add(this.pokemonNatureLabelText),this.pokemonNatureText=wE(se,145+Z,"",Q.SUMMARY_ALT,{fontSize:q}),this.pokemonNatureText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonNatureText),this.pokemonMoveContainers=[],this.pokemonMoveBgs=[],this.pokemonMoveLabels=[],this.pokemonEggMoveContainers=[],this.pokemonEggMoveBgs=[],this.pokemonEggMoveLabels=[],this.valueLimitLabel=le(Rn+17,150,"0/10",Q.TOOLTIP_CONTENT),this.valueLimitLabel.setOrigin(.5,0),this.starterSelectContainer.add(this.valueLimitLabel);const p=le(Rn+17,162,u.t("common:start"),Q.TOOLTIP_CONTENT);p.setOrigin(.5,0),this.starterSelectContainer.add(p),this.startCursorObj=n.add.nineslice(Rn+4,160,"select_cursor",void 0,26,15,6,6,6,6),this.startCursorObj.setVisible(!1),this.startCursorObj.setOrigin(0,0),this.starterSelectContainer.add(this.startCursorObj);const oe=le(Rn+17,23,u.t("starterSelectUiHandler:randomize"),Q.TOOLTIP_CONTENT);oe.setOrigin(.5,0),this.starterSelectContainer.add(oe),this.randomCursorObj=n.add.nineslice(Rn+4,21,"select_cursor",void 0,26,15,6,6,6,6),this.randomCursorObj.setVisible(!1),this.randomCursorObj.setOrigin(0,0),this.starterSelectContainer.add(this.randomCursorObj);const me=[],Me=n.add.container(rl+6,9);this.starterSelectScrollBar=new ZI(161,12,5,L.height-6,9),Me.add(this.starterSelectScrollBar),this.pokerusCursorObjs=new Array(w6).fill(null).map(()=>{const ee=n.add.image(0,0,"select_cursor_pokerus");return ee.setVisible(!1),ee.setOrigin(0,0),Me.add(ee),ee}),this.starterCursorObjs=new Array(6).fill(null).map(()=>{const ee=n.add.image(0,0,"select_cursor_highlight");return ee.setVisible(!1),ee.setOrigin(0,0),Me.add(ee),ee}),this.cursorObj=n.add.image(0,0,"select_cursor"),this.cursorObj.setOrigin(0,0),this.starterIconsCursorObj=n.add.image(289,64,"select_gen_cursor"),this.starterIconsCursorObj.setName("starter-icons-cursor"),this.starterIconsCursorObj.setVisible(!1),this.starterIconsCursorObj.setOrigin(0,0),this.starterSelectContainer.add(this.starterIconsCursorObj),Me.add(this.cursorObj);for(const ee of wR){if(!KA.hasOwnProperty(ee.speciesId)||!ee.isObtainable())continue;me.push(ee.speciesId),this.speciesLoaded.set(ee.speciesId,!1),this.allSpecies.push(ee);const Le=new kP(ee).setVisible(!1);this.iconAnimHandler.addOrUpdate(Le.icon,eR.NONE),this.starterContainers.push(Le),Me.add(Le)}this.starterSelectContainer.add(Me),this.starterIcons=new Array(6).fill(null).map((ee,Le)=>{const ue=n.add.sprite(Rn+7,b1(Le),"pokemon_icons_0");return ue.setScale(.5),ue.setOrigin(0,0),ue.setFrame("unknown"),this.starterSelectContainer.add(ue),this.iconAnimHandler.addOrUpdate(ue,eR.PASSIVE),ue}),this.pokemonSprite=n.add.sprite(53,63,"pkmn__sub"),this.pokemonSprite.setPipeline(n.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),this.starterSelectContainer.add(this.pokemonSprite),this.type1Icon=n.add.sprite(8,98,YR("types")),this.type1Icon.setScale(.5),this.type1Icon.setOrigin(0,0),this.starterSelectContainer.add(this.type1Icon),this.type2Icon=n.add.sprite(26,98,YR("types")),this.type2Icon.setScale(.5),this.type2Icon.setOrigin(0,0),this.starterSelectContainer.add(this.type2Icon),this.pokemonLuckLabelText=le(8,89,u.t("common:luckIndicator"),Q.WINDOW_ALT,{fontSize:"56px"}),this.pokemonLuckLabelText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonLuckLabelText),this.pokemonLuckText=le(8+this.pokemonLuckLabelText.displayWidth+2,89,"0",Q.WINDOW,{fontSize:"56px"}),this.pokemonLuckText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonLuckText),this.pokemonCandyContainer=n.add.container(4.5,18),this.pokemonCandyIcon=n.add.sprite(0,0,"candy"),this.pokemonCandyIcon.setScale(.5),this.pokemonCandyIcon.setOrigin(0,0),this.pokemonCandyContainer.add(this.pokemonCandyIcon),this.pokemonCandyOverlayIcon=n.add.sprite(0,0,"candy_overlay"),this.pokemonCandyOverlayIcon.setScale(.5),this.pokemonCandyOverlayIcon.setOrigin(0,0),this.pokemonCandyContainer.add(this.pokemonCandyOverlayIcon),this.pokemonCandyDarknessOverlay=n.add.sprite(0,0,"candy"),this.pokemonCandyDarknessOverlay.setScale(.5),this.pokemonCandyDarknessOverlay.setOrigin(0,0),this.pokemonCandyDarknessOverlay.setTint(0),this.pokemonCandyDarknessOverlay.setAlpha(.5),this.pokemonCandyContainer.add(this.pokemonCandyDarknessOverlay),this.pokemonCandyCountText=le(9.5,0,"x0",Q.WINDOW_ALT,{fontSize:"56px"}),this.pokemonCandyCountText.setOrigin(0,0),this.pokemonCandyContainer.add(this.pokemonCandyCountText),this.pokemonCandyContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,30,20),Phaser.Geom.Rectangle.Contains),this.starterSelectContainer.add(this.pokemonCandyContainer),this.pokemonFormText=le(6,42,"Form",Q.WINDOW_ALT,{fontSize:"42px"}),this.pokemonFormText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonFormText),this.pokemonCaughtHatchedContainer=n.add.container(2,25),this.pokemonCaughtHatchedContainer.setScale(.5),this.starterSelectContainer.add(this.pokemonCaughtHatchedContainer);const We=n.add.sprite(1,0,"items","pb");We.setOrigin(0,0),We.setScale(.75),this.pokemonCaughtHatchedContainer.add(We),this.pokemonCaughtCountText=le(24,4,"0",Q.SUMMARY_ALT),this.pokemonCaughtCountText.setOrigin(0,0),this.pokemonCaughtHatchedContainer.add(this.pokemonCaughtCountText),this.pokemonHatchedIcon=n.add.sprite(1,14,"egg_icons"),this.pokemonHatchedIcon.setOrigin(.15,.2),this.pokemonHatchedIcon.setScale(.8),this.pokemonCaughtHatchedContainer.add(this.pokemonHatchedIcon),this.pokemonShinyIcon=n.add.sprite(14,76,"shiny_icons"),this.pokemonShinyIcon.setOrigin(.15,.2),this.pokemonShinyIcon.setScale(1),this.pokemonCaughtHatchedContainer.add(this.pokemonShinyIcon),this.pokemonHatchedCountText=le(24,19,"0",Q.SUMMARY_ALT),this.pokemonHatchedCountText.setOrigin(0,0),this.pokemonCaughtHatchedContainer.add(this.pokemonHatchedCountText),this.pokemonMovesContainer=n.add.container(102,16),this.pokemonMovesContainer.setScale(.375);for(let ee=0;ee<4;ee++){const Le=n.add.container(0,14*ee),ue=n.add.nineslice(0,0,"type_bgs","unknown",92,14,2,2,2,2);ue.setOrigin(1,0);const de=le(-ue.width/2,0,"-",Q.PARTY);de.setOrigin(.5,0),this.pokemonMoveBgs.push(ue),this.pokemonMoveLabels.push(de),Le.add(ue),Le.add(de),this.pokemonMoveContainers.push(Le),this.pokemonMovesContainer.add(Le)}this.pokemonAdditionalMoveCountLabel=le(-this.pokemonMoveBgs[0].width/2,56,"(+0)",Q.PARTY),this.pokemonAdditionalMoveCountLabel.setOrigin(.5,0),this.pokemonMovesContainer.add(this.pokemonAdditionalMoveCountLabel),this.starterSelectContainer.add(this.pokemonMovesContainer),this.pokemonEggMovesContainer=n.add.container(102,85),this.pokemonEggMovesContainer.setScale(.375);const De=le(-46,0,u.t("starterSelectUiHandler:eggMoves"),Q.WINDOW_ALT);De.setOrigin(.5,0),this.pokemonEggMovesContainer.add(De);for(let ee=0;ee<4;ee++){const Le=n.add.container(0,16+14*ee),ue=n.add.nineslice(0,0,"type_bgs","unknown",92,14,2,2,2,2);ue.setOrigin(1,0);const de=le(-ue.width/2,0,"???",Q.PARTY);de.setOrigin(.5,0),this.pokemonEggMoveBgs.push(ue),this.pokemonEggMoveLabels.push(de),Le.add(ue),Le.add(de),this.pokemonEggMoveContainers.push(Le),this.pokemonEggMovesContainer.add(Le)}this.starterSelectContainer.add(this.pokemonEggMovesContainer);const ie=a.instructionTextSize;this.instructionsContainer=n.add.container(4,156),this.instructionsContainer.setVisible(!0),this.starterSelectContainer.add(this.instructionsContainer),this.shinyIconElement=new Phaser.GameObjects.Sprite(n,this.instructionRowX,this.instructionRowY,"keyboard","R.png"),this.shinyIconElement.setName("sprite-shiny-icon-element"),this.shinyIconElement.setScale(.675),this.shinyIconElement.setOrigin(0,0),this.shinyLabel=le(this.instructionRowX+this.instructionRowTextOffset,this.instructionRowY,u.t("starterSelectUiHandler:cycleShiny"),Q.PARTY,{fontSize:ie}),this.shinyLabel.setName("text-shiny-label"),this.formIconElement=new Phaser.GameObjects.Sprite(n,this.instructionRowX,this.instructionRowY,"keyboard","F.png"),this.formIconElement.setName("sprite-form-icon-element"),this.formIconElement.setScale(.675),this.formIconElement.setOrigin(0,0),this.formLabel=le(this.instructionRowX+this.instructionRowTextOffset,this.instructionRowY,u.t("starterSelectUiHandler:cycleForm"),Q.PARTY,{fontSize:ie}),this.formLabel.setName("text-form-label"),this.genderIconElement=new Phaser.GameObjects.Sprite(n,this.instructionRowX,this.instructionRowY,"keyboard","G.png"),this.genderIconElement.setName("sprite-gender-icon-element"),this.genderIconElement.setScale(.675),this.genderIconElement.setOrigin(0,0),this.genderLabel=le(this.instructionRowX+this.instructionRowTextOffset,this.instructionRowY,u.t("starterSelectUiHandler:cycleGender"),Q.PARTY,{fontSize:ie}),this.genderLabel.setName("text-gender-label"),this.abilityIconElement=new Phaser.GameObjects.Sprite(n,this.instructionRowX,this.instructionRowY,"keyboard","E.png"),this.abilityIconElement.setName("sprite-ability-icon-element"),this.abilityIconElement.setScale(.675),this.abilityIconElement.setOrigin(0,0),this.abilityLabel=le(this.instructionRowX+this.instructionRowTextOffset,this.instructionRowY,u.t("starterSelectUiHandler:cycleAbility"),Q.PARTY,{fontSize:ie}),this.abilityLabel.setName("text-ability-label"),this.natureIconElement=new Phaser.GameObjects.Sprite(n,this.instructionRowX,this.instructionRowY,"keyboard","N.png"),this.natureIconElement.setName("sprite-nature-icon-element"),this.natureIconElement.setScale(.675),this.natureIconElement.setOrigin(0,0),this.natureLabel=le(this.instructionRowX+this.instructionRowTextOffset,this.instructionRowY,u.t("starterSelectUiHandler:cycleNature"),Q.PARTY,{fontSize:ie}),this.natureLabel.setName("text-nature-label"),this.variantIconElement=new Phaser.GameObjects.Sprite(n,this.instructionRowX,this.instructionRowY,"keyboard","V.png"),this.variantIconElement.setName("sprite-variant-icon-element"),this.variantIconElement.setScale(.675),this.variantIconElement.setOrigin(0,0),this.variantLabel=le(this.instructionRowX+this.instructionRowTextOffset,this.instructionRowY,u.t("starterSelectUiHandler:cycleVariant"),Q.PARTY,{fontSize:ie}),this.variantLabel.setName("text-variant-label"),this.goFilterIconElement=new Phaser.GameObjects.Sprite(n,this.filterInstructionRowX,this.filterInstructionRowY,"keyboard","C.png"),this.goFilterIconElement.setName("sprite-goFilter-icon-element"),this.goFilterIconElement.setScale(.675),this.goFilterIconElement.setOrigin(0,0),this.goFilterLabel=le(this.filterInstructionRowX+this.instructionRowTextOffset,this.filterInstructionRowY,u.t("starterSelectUiHandler:goFilter"),Q.PARTY,{fontSize:ie}),this.goFilterLabel.setName("text-goFilter-label"),this.hideInstructions(),this.filterInstructionsContainer=n.add.container(50,5),this.filterInstructionsContainer.setVisible(!0),this.starterSelectContainer.add(this.filterInstructionsContainer),this.starterSelectMessageBoxContainer=n.add.container(0,n.game.canvas.height/6),this.starterSelectMessageBoxContainer.setVisible(!1),this.starterSelectContainer.add(this.starterSelectMessageBoxContainer),this.starterSelectMessageBox=Gt(1,-1,318,28),this.starterSelectMessageBox.setOrigin(0,1),this.starterSelectMessageBoxContainer.add(this.starterSelectMessageBox),this.message=le(8,8,"",Q.WINDOW,{maxLines:2}),this.message.setOrigin(0,0),this.starterSelectMessageBoxContainer.add(this.message),this.initPromptSprite(this.starterSelectMessageBoxContainer),this.statsContainer=new MC(6,16),n.add.existing(this.statsContainer),this.statsContainer.setVisible(!1),this.starterSelectContainer.add(this.statsContainer);const Ae=1;this.moveInfoOverlay=new MO({scale:Ae,top:!0,x:1,y:n.game.canvas.height/6-MO.getHeight(Ae)-29}),this.starterSelectContainer.add(this.moveInfoOverlay),this.starterSelectContainer.bringToTop(this.filterBarContainer),this.initTutorialOverlay(this.starterSelectContainer),this.starterSelectContainer.bringToTop(this.starterSelectMessageBoxContainer),n.eventTarget.addEventListener(kO.CANDY_UPGRADE_NOTIFICATION_CHANGED,ee=>this.onCandyUpgradeDisplayChanged(ee)),this.updateInstructions()}show(A){return this.starterPreferences||(this.starterPreferences=YC.load()),this.moveInfoOverlay.clear(),this.pokerusSpecies=ak(),A.length>=1&&A[0]instanceof Function?(super.show(A),this.starterSelectCallback=A[0],this.starterSelectContainer.setVisible(!0),this.allSpecies.forEach((s,R)=>{const a=this.starterContainers[R].icon,i=n.gameData.dexData[s.speciesId];this.starterPreferences[s.speciesId]=this.initStarterPrefs(s),i.caughtAttr?a.clearTint():i.seenAttr&&a.setTint(8421504),this.setUpgradeAnimation(a,s)}),this.resetFilters(),this.updateStarters(),this.setFilterMode(!1),this.filterBarCursor=0,this.setCursor(0),this.tryUpdateValue(0),VI(tO.Starter_Select),!0):!1}initStarterPrefs(A){var l;const s=this.starterPreferences[A.speciesId],R=n.gameData.dexData[A.speciesId],a=n.gameData.starterData[A.speciesId];if(!s||!R.caughtAttr)return{};const i=R.caughtAttr,r=i&Xe.SHINY,L=i&Xe.NON_SHINY;if(s.shiny&&!r?(delete s.shiny,delete s.variant):s.shiny===!1&&!L&&delete s.shiny,s.variant!==void 0){const C=[r&&i&Xe.DEFAULT_VARIANT,r&&i&Xe.VARIANT_2,r&&i&Xe.VARIANT_3];(isNaN(s.variant)||s.variant<0||!C[s.variant])&&delete s.variant}if(s.female!==void 0&&((s.female?i&Xe.FEMALE:i&Xe.MALE)||delete s.female),s.ability!==void 0){const C=A.ability2===A.ability1,M=a.abilityAttr,D=M&Ms.ABILITY_1,_=M&Ms.ABILITY_2,P=M&Ms.ABILITY_HIDDEN;[D,C?_&&!D:_,P][s.ability]||delete s.ability}const o=s.form;return o!==void 0&&(!((l=A.forms[o])!=null&&l.isStarterSelectable)||!(i&n.gameData.getFormAttr(o)))&&delete s.form,s.nature!==void 0&&n.gameData.getNaturesForAttr(R.natureAttr).indexOf(s.nature)<0&&delete s.nature,s}resetFilters(){const A=this.filterBar.getFilter(ss.CAUGHT);this.filterBar.setValsToDefault();for(let s=0;s<A.options.length;s++)A.options[s].val!=="ALL"&&A.options[s].val!=="UNCAUGHT"&&A.toggleOptionState(s)}showText(A,s,R,a,i,r,L){super.showText(A,s,R,a,i,r);const o=(A==null?void 0:A.indexOf(`
`))===-1;this.starterSelectMessageBox.setSize(318,o?28:42),L?(this.starterSelectMessageBox.setOrigin(0,0),this.starterSelectMessageBoxContainer.setY(0),this.message.setY(4)):(this.starterSelectMessageBoxContainer.setY(n.game.canvas.height/6),this.starterSelectMessageBox.setOrigin(0,1),this.message.setY(o?-22:-37)),this.starterSelectMessageBoxContainer.setVisible(!!(A!=null&&A.length))}isUpgradeIconEnabled(){return n.candyUpgradeNotification!==0&&n.candyUpgradeDisplay===0}isUpgradeAnimationEnabled(){return n.candyUpgradeNotification!==0&&n.candyUpgradeDisplay===1}isPassiveAvailable(A){const s=n.gameData.starterData[A];return s.candyCount>=hx(KA[A])&&!(s.passiveAttr&ZR.UNLOCKED)}isValueReductionAvailable(A){const s=n.gameData.starterData[A];return s.candyCount>=Hx(KA[A])[s.valueReduction]&&s.valueReduction<O6}isSameSpeciesEggAvailable(A){return n.gameData.starterData[A].candyCount>=dx(KA[A])}setUpgradeAnimation(A,s,R=!1){if(n.tweens.killTweensOf(A),n.candyUpgradeDisplay===0||s.speciesId!==s.getRootSpeciesId(!1))return;A.y=2;const a={targets:A,loop:-1,delay:d6(0,50)*5,loopDelay:1e3,tweens:[{targets:A,y:-3,duration:st(125),ease:"Cubic.easeOut",yoyo:!0},{targets:A,y:-1,duration:st(150),ease:"Cubic.easeOut",yoyo:!0}]},i=this.isPassiveAvailable(s.speciesId),r=this.isValueReductionAvailable(s.speciesId),L=this.isSameSpeciesEggAvailable(s.speciesId);n.candyUpgradeNotification===1?i&&(n.tweens.chain(a).paused=R):n.candyUpgradeNotification===2&&(i||r||L)&&(n.tweens.chain(a).paused=R)}setUpgradeIcon(A){const s=A.species,R=!!(s!=null&&s.speciesId);if(!s||n.candyUpgradeNotification===0||s.speciesId!==s.getRootSpeciesId(!1)){A.candyUpgradeIcon.setVisible(!1),A.candyUpgradeOverlayIcon.setVisible(!1);return}const a=this.isPassiveAvailable(s.speciesId),i=this.isValueReductionAvailable(s.speciesId),r=this.isSameSpeciesEggAvailable(s.speciesId);n.candyUpgradeNotification===1?(A.candyUpgradeIcon.setVisible(R&&a),A.candyUpgradeOverlayIcon.setVisible(R&&A.candyUpgradeIcon.visible)):n.candyUpgradeNotification===2&&(A.candyUpgradeIcon.setVisible(R&&(a||i||r)),A.candyUpgradeOverlayIcon.setVisible(R&&A.candyUpgradeIcon.visible))}updateCandyUpgradeDisplay(A){this.isUpgradeIconEnabled()&&this.setUpgradeIcon(A),this.isUpgradeAnimationEnabled()&&this.setUpgradeAnimation(A.icon,this.lastSpecies,!0)}onCandyUpgradeDisplayChanged(A){if(A){if(n.candyUpgradeDisplay===0){this.filteredStarterContainers.forEach(R=>{this.setUpgradeIcon(R)});return}this.filteredStarterContainers.forEach((R,a)=>{const i=this.filteredStarterContainers[a].icon;this.setUpgradeAnimation(i,R.species)})}}processInput(A){var h,H,d;if(this.blockInput)return!1;const s=9,R=9,a=this.filteredStarterContainers.length,i=Math.ceil(a/s),r=Math.floor(this.cursor/s),L=this.scrollCursor*s,o=Math.min(this.filteredStarterContainers.length-1,L+R*s-1),l=o-L+1,C=Math.ceil(l/s),M=Math.floor((this.cursor-L)/s),D=this.getUi();let _=!1,P=!1;if(A===k.SUBMIT)this.tryStart(!0)?_=!0:P=!0;else if(A===k.CANCEL)this.filterMode&&this.filterBar.openDropDown?(this.filterBar.toggleDropDown(this.filterBarCursor),a>0&&(this.setFilterMode(!1),this.scrollCursor=0,this.updateScroll(),this.setCursor(0)),_=!0):this.statsMode?(this.toggleStatsMode(!1),_=!0):this.starterSpecies.length?(this.popStarter(this.starterSpecies.length-1),_=!0,this.updateInstructions()):(this.tryExit(),_=!0);else if(A===k.STATS)this.filterMode||(this.startCursorObj.setVisible(!1),this.starterIconsCursorObj.setVisible(!1),this.setSpecies(null),this.filterBarCursor=0,this.setFilterMode(!0),this.filterBar.toggleDropDown(this.filterBarCursor));else if(this.startCursorObj.visible)switch(A){case k.ACTION:this.tryStart(!0)?_=!0:P=!0;break;case k.UP:this.startCursorObj.setVisible(!1),this.starterSpecies.length>0?(this.starterIconsCursorIndex=this.starterSpecies.length-1,this.moveStarterIconsCursor(this.starterIconsCursorIndex)):(this.startCursorObj.setVisible(!1),this.randomCursorObj.setVisible(!0)),_=!0;break;case k.DOWN:this.startCursorObj.setVisible(!1),this.filterBarCursor=Math.max(1,this.filterBar.numFilters-1),this.setFilterMode(!0),_=!0;break;case k.LEFT:a>0&&(this.startCursorObj.setVisible(!1),this.cursorObj.setVisible(!0),this.setCursor(L+(C-1)*9+8),_=!0);break;case k.RIGHT:a>0&&(this.startCursorObj.setVisible(!1),this.cursorObj.setVisible(!0),this.setCursor(L+(C-1)*9),_=!0);break}else if(this.filterMode)switch(A){case k.LEFT:this.filterBarCursor>0?_=this.setCursor(this.filterBarCursor-1):_=this.setCursor(this.filterBar.numFilters-1);break;case k.RIGHT:this.filterBarCursor<this.filterBar.numFilters-1?_=this.setCursor(this.filterBarCursor+1):_=this.setCursor(0);break;case k.UP:if(this.filterBar.openDropDown)_=this.filterBar.decDropDownCursor();else if(this.filterBarCursor===this.filterBar.numFilters-1)this.setFilterMode(!1),this.cursorObj.setVisible(!1),this.starterSpecies.length>0?this.startCursorObj.setVisible(!0):this.randomCursorObj.setVisible(!0),_=!0;else if(a>0){this.setFilterMode(!1),this.scrollCursor=Math.max(0,i-9),this.updateScroll();const f=(this.filterBarCursor+.5)/this.filterBar.numFilters,B=Math.min(8,Math.floor(f*11));a%9>B?this.setCursor(a-a%9+B):this.setCursor(Math.max(a-a%9+B-9,0)),_=!0}break;case k.DOWN:if(this.filterBar.openDropDown)_=this.filterBar.incDropDownCursor();else if(this.filterBarCursor===this.filterBar.numFilters-1)this.setFilterMode(!1),this.cursorObj.setVisible(!1),this.randomCursorObj.setVisible(!0),_=!0;else if(a>0){this.setFilterMode(!1),this.scrollCursor=0,this.updateScroll();const f=this.filterBarCursor/Math.max(1,this.filterBar.numFilters-1),B=Math.min(8,Math.floor(f*11));this.setCursor(Math.min(B,a)),_=!0}break;case k.ACTION:this.filterBar.openDropDown?this.filterBar.toggleOptionState():this.filterBar.toggleDropDown(this.filterBarCursor),_=!0;break}else if(this.randomCursorObj.visible)switch(A){case k.ACTION:if(this.starterSpecies.length>=6){P=!0;break}const f=this.starterSpecies.map(q=>q.generation).reduce((q,p,oe)=>q+n.gameData.getSpeciesStarterValue(this.starterSpecies[oe].speciesId),0),B=this.filteredStarterContainers.filter(q=>{const p=q.species,[oe]=this.isInParty(p),me=n.gameData.getSpeciesStarterValue(p.speciesId),Me=new Lt(!0);as(n.gameMode,XE.STARTER_CHOICE,p,Me,n.gameData.getSpeciesDexAttrProps(p,this.getCurrentDexProps(p.speciesId)),this.isPartyValid());const We=n.gameData.dexData[p.speciesId].caughtAttr;return!oe&&Me.value&&f+me<=this.getValueLimit()&&We});if(B.length===0){P=!0;break}const W=B[Math.floor(Math.random()*B.length)].species;this.setSpecies(W);const b=this.getCurrentDexProps(W.speciesId),x=n.gameData.getSpeciesDexAttrProps(W,b),$=this.abilityCursor,j=this.natureCursor,z=(h=this.starterMoveset)==null?void 0:h.slice(0),se=n.gameData.getSpeciesStarterValue(W.speciesId);Vn(W.speciesId,x.formIndex).loadAssets(x.female,x.formIndex,x.shiny,x.variant,!0).then(()=>{this.tryUpdateValue(se,!0)&&(this.addToParty(W,b,$,j,z,!0),D.playSelect())});break;case k.UP:this.randomCursorObj.setVisible(!1),this.filterBarCursor=this.filterBar.numFilters-1,this.setFilterMode(!0),_=!0;break;case k.DOWN:this.randomCursorObj.setVisible(!1),this.starterSpecies.length>0?(this.starterIconsCursorIndex=0,this.moveStarterIconsCursor(this.starterIconsCursorIndex)):(this.filterBarCursor=this.filterBar.numFilters-1,this.setFilterMode(!0)),_=!0;break;case k.LEFT:a>0&&(this.randomCursorObj.setVisible(!1),this.cursorObj.setVisible(!0),this.setCursor(L+8),_=!0);break;case k.RIGHT:a>0&&(this.randomCursorObj.setVisible(!1),this.cursorObj.setVisible(!0),this.setCursor(L),_=!0);break}else{let f;const B=n.gameData.starterData[this.lastSpecies.speciesId];let F=this.starterPreferences[this.lastSpecies.speciesId];if(this.starterIconsCursorObj.visible?f=this.filteredStarterContainers[this.filteredStarterContainers.findIndex(W=>W.species===this.lastSpecies)]:f=this.filteredStarterContainers[this.cursor],A===k.ACTION){if(!((H=this.speciesStarterDexEntry)!=null&&H.caughtAttr))P=!0;else if(this.starterSpecies.length<=6){const W=this.getUi();let b=[];const[x,$]=this.isInParty(this.lastSpecies),j=this.isPartyValid(),z=new Lt(!0);as(n.gameMode,XE.STARTER_CHOICE,this.lastSpecies,z,n.gameData.getSpeciesDexAttrProps(this.lastSpecies,this.getCurrentDexProps(this.lastSpecies.speciesId)),j);const se=this.starterSpecies.map(Me=>Me.generation).reduce((Me,We,De)=>Me+=n.gameData.getSpeciesStarterValue(this.starterSpecies[De].speciesId),0),Z=n.gameData.getSpeciesStarterValue(this.lastSpecies.speciesId);if(!x&&z.value&&se+Z<=this.getValueLimit()&&this.starterSpecies.length<_r?b=[{label:u.t("starterSelectUiHandler:addToParty"),handler:N(()=>{var We;W.setMode(Ie.STARTER_SELECT);const Me=this.tryUpdateValue(n.gameData.getSpeciesStarterValue(this.lastSpecies.speciesId),!0);if(!x&&z.value&&Me){const De=this.starterCursorObjs[this.starterSpecies.length];De.setVisible(!0),De.setPosition(this.cursorObj.x,this.cursorObj.y),this.addToParty(this.lastSpecies,this.dexAttrCursor,this.abilityCursor,this.natureCursor,(We=this.starterMoveset)==null?void 0:We.slice(0)),W.playSelect()}else W.playError();return!0},"handler"),overrideSound:!0}]:x&&(b=[{label:u.t("starterSelectUiHandler:removeFromParty"),handler:N(()=>(this.popStarter($),W.setMode(Ie.STARTER_SELECT),!0),"handler")}]),b.push({label:u.t("starterSelectUiHandler:toggleIVs"),handler:N(()=>(this.toggleStatsMode(),W.setMode(Ie.STARTER_SELECT),!0),"handler")}),this.speciesStarterMoves.length>1){const Me=N(We=>{this.blockInput=!0,W.setMode(Ie.STARTER_SELECT).then(()=>{W.showText(u.t("starterSelectUiHandler:selectMoveSwapOut"),null,()=>{this.moveInfoOverlay.show(we[We[0]]),W.setModeWithoutClear(Ie.OPTION_SELECT,{options:We.map((De,ie)=>({label:we[De].name,handler:N(()=>(this.blockInput=!0,W.setMode(Ie.STARTER_SELECT).then(()=>{W.showText(`${u.t("starterSelectUiHandler:selectMoveSwapWith")} ${we[De].name}.`,null,()=>{const ee=this.speciesStarterMoves.filter(Le=>Le!==De);this.moveInfoOverlay.show(we[ee[0]]),W.setModeWithoutClear(Ie.OPTION_SELECT,{options:ee.map(Le=>({label:we[Le].name,handler:N(()=>(this.switchMoveHandler(ie,Le,De),Me(this.starterMoveset),!0),"handler"),onHover:N(()=>{this.moveInfoOverlay.show(we[Le])},"onHover")})).concat({label:u.t("menu:cancel"),handler:N(()=>(Me(this.starterMoveset),!0),"handler"),onHover:N(()=>{this.moveInfoOverlay.clear()},"onHover")}),supportHover:!0,maxOptions:8,yOffset:19}),this.blockInput=!1})}),!0),"handler"),onHover:N(()=>{this.moveInfoOverlay.show(we[De])},"onHover")})).concat({label:u.t("menu:cancel"),handler:N(()=>(this.moveInfoOverlay.clear(),this.clearText(),W.setMode(Ie.STARTER_SELECT),!0),"handler"),onHover:N(()=>{this.moveInfoOverlay.clear()},"onHover")}),supportHover:!0,maxOptions:8,yOffset:19}),this.blockInput=!1})})},"showSwapOptions");b.push({label:u.t("starterSelectUiHandler:manageMoves"),handler:N(()=>(Me(this.starterMoveset),!0),"handler")})}if(this.canCycleNature){const Me=N(()=>{this.blockInput=!0,W.setMode(Ie.STARTER_SELECT).then(()=>{W.showText(u.t("starterSelectUiHandler:selectNature"),null,()=>{var De;const We=n.gameData.getNaturesForAttr((De=this.speciesStarterDexEntry)==null?void 0:De.natureAttr);W.setModeWithoutClear(Ie.OPTION_SELECT,{options:We.map((ie,Ae)=>({label:$O(ie,!0,!0,!0,n.uiTheme),handler:N(()=>(F||(F=this.starterPreferences[this.lastSpecies.speciesId]={}),F.nature=ie,this.clearText(),W.setMode(Ie.STARTER_SELECT),this.setSpeciesDetails(this.lastSpecies,{natureIndex:ie}),this.blockInput=!1,!0),"handler")})).concat({label:u.t("menu:cancel"),handler:N(()=>(this.clearText(),W.setMode(Ie.STARTER_SELECT),this.blockInput=!1,!0),"handler")}),maxOptions:8,yOffset:19})})})},"showNatureOptions");b.push({label:u.t("starterSelectUiHandler:manageNature"),handler:N(()=>(Me(),!0),"handler")})}const q=B.passiveAttr;q&ZR.UNLOCKED&&(q&ZR.ENABLED?b.push({label:u.t("starterSelectUiHandler:disablePassive"),handler:N(()=>(B.passiveAttr^=ZR.ENABLED,W.setMode(Ie.STARTER_SELECT),this.setSpeciesDetails(this.lastSpecies),!0),"handler")}):b.push({label:u.t("starterSelectUiHandler:enablePassive"),handler:N(()=>(B.passiveAttr|=ZR.ENABLED,W.setMode(Ie.STARTER_SELECT),this.setSpeciesDetails(this.lastSpecies),!0),"handler")})),(F==null?void 0:F.favorite)??!1?b.push({label:u.t("starterSelectUiHandler:removeFromFavorites"),handler:N(()=>(F.favorite=!1,f&&f.favoriteIcon.setVisible(F.favorite),W.setMode(Ie.STARTER_SELECT),!0),"handler")}):b.push({label:u.t("starterSelectUiHandler:addToFavorites"),handler:N(()=>(F.favorite=!0,f&&f.favoriteIcon.setVisible(F.favorite),W.setMode(Ie.STARTER_SELECT),!0),"handler")}),b.push({label:u.t("menu:rename"),handler:N(()=>{W.playSelect();let Me=F.nickname?String(F.nickname):"";return Me=decodeURIComponent(escape(atob(Me))),W.setModeWithoutClear(Ie.RENAME_POKEMON,{buttonActions:[We=>{W.playSelect(),F.nickname=We;const De=decodeURIComponent(escape(atob(F.nickname)));De.length>0?this.pokemonNameText.setText(De):this.pokemonNameText.setText(this.lastSpecies.name),W.setMode(Ie.STARTER_SELECT)},()=>{W.setMode(Ie.STARTER_SELECT)}]},Me),!0},"handler")});const oe=B.candyCount,me=N(()=>{const Me=[];if(!(q&ZR.UNLOCKED)){const ie=hx(KA[this.lastSpecies.speciesId]);Me.push({label:`x${ie} ${u.t("starterSelectUiHandler:unlockPassive")} (${NE[bP[this.lastSpecies.speciesId]].name})`,handler:N(()=>Ye.FREE_CANDY_UPGRADE_OVERRIDE||oe>=ie?(B.passiveAttr|=ZR.UNLOCKED|ZR.ENABLED,Ye.FREE_CANDY_UPGRADE_OVERRIDE||(B.candyCount-=ie),this.pokemonCandyCountText.setText(`x${B.candyCount}`),n.gameData.saveSystem().then(Ae=>{if(!Ae)return n.reset(!0)}),W.setMode(Ie.STARTER_SELECT),this.setSpeciesDetails(this.lastSpecies),n.playSound("se/buy"),f&&(this.updateCandyUpgradeDisplay(f),f.starterPassiveBgs.setVisible(!!n.gameData.starterData[this.lastSpecies.speciesId].passiveAttr)),!0):!1,"handler"),item:"candy",itemArgs:TR[this.lastSpecies.speciesId]})}const We=B.valueReduction;if(We<O6){const ie=Hx(KA[this.lastSpecies.speciesId])[We];Me.push({label:`x${ie} ${u.t("starterSelectUiHandler:reduceCost")}`,handler:N(()=>Ye.FREE_CANDY_UPGRADE_OVERRIDE||oe>=ie?(B.valueReduction++,Ye.FREE_CANDY_UPGRADE_OVERRIDE||(B.candyCount-=ie),this.pokemonCandyCountText.setText(`x${B.candyCount}`),n.gameData.saveSystem().then(Ae=>{if(!Ae)return n.reset(!0)}),this.tryUpdateValue(0),W.setMode(Ie.STARTER_SELECT),n.playSound("se/buy"),f&&(this.updateStarterValueLabel(f),this.updateCandyUpgradeDisplay(f)),!0):!1,"handler"),item:"candy",itemArgs:TR[this.lastSpecies.speciesId]})}const De=dx(KA[this.lastSpecies.speciesId]);Me.push({label:`x${De} ${u.t("starterSelectUiHandler:sameSpeciesEgg")}`,handler:N(()=>Ye.FREE_CANDY_UPGRADE_OVERRIDE||oe>=De?n.gameData.eggs.length>=99&&!Ye.UNLIMITED_EGG_COUNT_OVERRIDE?(this.showText(u.t("egg:tooManyEggs"),void 0,()=>this.showText("",0,()=>this.tutorialActive=!1),2e3,!1,void 0,!0),!1):(Ye.FREE_CANDY_UPGRADE_OVERRIDE||(B.candyCount-=De),this.pokemonCandyCountText.setText(`x${B.candyCount}`),new YI({species:this.lastSpecies.speciesId,sourceType:WE.SAME_SPECIES_EGG}).addEggToGameData(),n.gameData.saveSystem().then(Ae=>{if(!Ae)return n.reset(!0)}),W.setMode(Ie.STARTER_SELECT),n.playSound("se/buy"),f&&this.updateCandyUpgradeDisplay(f),!0):!1,"handler"),item:"candy",itemArgs:TR[this.lastSpecies.speciesId]}),Me.push({label:u.t("menu:cancel"),handler:N(()=>(W.setMode(Ie.STARTER_SELECT),!0),"handler")}),W.setModeWithoutClear(Ie.OPTION_SELECT,{options:Me,yOffset:47})},"showUseCandies");yA.hasOwnProperty(this.lastSpecies.speciesId)||b.push({label:u.t("starterSelectUiHandler:useCandies"),handler:N(()=>(W.setMode(Ie.STARTER_SELECT).then(()=>me()),!0),"handler")}),b.push({label:u.t("menu:cancel"),handler:N(()=>(W.setMode(Ie.STARTER_SELECT),!0),"handler")}),W.setModeWithoutClear(Ie.OPTION_SELECT,{options:b,yOffset:47}),_=!0}}else{const W=n.gameData.getSpeciesDexAttrProps(this.lastSpecies,this.getCurrentDexProps(this.lastSpecies.speciesId));switch(A){case k.CYCLE_SHINY:if(this.canCycleShiny)if(F.shiny=F.shiny!==void 0?!F.shiny:!1,F.shiny){const b=n.gameData.getSpeciesDexAttrProps(this.lastSpecies,this.getCurrentDexProps(this.lastSpecies.speciesId)),x=F.variant?F.variant:b.variant;this.setSpeciesDetails(this.lastSpecies,{shiny:!0,variant:x}),n.playSound("se/sparkle");const $=yE(x);this.pokemonShinyIcon.setFrame(II(x)),this.pokemonShinyIcon.setTint($),this.pokemonShinyIcon.setVisible(!0)}else this.setSpeciesDetails(this.lastSpecies,{shiny:!1,variant:0}),this.pokemonShinyIcon.setVisible(!1),_=!0;break;case k.V:if(this.canCycleVariant){let b=W.variant;do if(b=(b+1)%3,b===0){if(this.speciesStarterDexEntry.caughtAttr&Xe.DEFAULT_VARIANT)break}else if(b===1){if(this.speciesStarterDexEntry.caughtAttr&Xe.VARIANT_2)break}else if(this.speciesStarterDexEntry.caughtAttr&Xe.VARIANT_3)break;while(b!==W.variant);F.variant=b,this.setSpeciesDetails(this.lastSpecies,{variant:b});const x=yE(b);this.pokemonShinyIcon.setFrame(II(b)),this.pokemonShinyIcon.setTint(x),_=!0}break;case k.CYCLE_FORM:if(this.canCycleForm){const b=this.lastSpecies.forms.length;let x=W.formIndex;do if(x=(x+1)%b,this.lastSpecies.forms[x].isStarterSelectable&&this.speciesStarterDexEntry.caughtAttr&n.gameData.getFormAttr(x))break;while(x!==W.formIndex);F.form=x,this.setSpeciesDetails(this.lastSpecies,{formIndex:x}),_=!0}break;case k.CYCLE_GENDER:this.canCycleGender&&(F.female=!W.female,this.setSpeciesDetails(this.lastSpecies,{female:!W.female}),_=!0);break;case k.CYCLE_ABILITY:if(this.canCycleAbility){const b=this.lastSpecies.getAbilityCount(),x=n.gameData.starterData[this.lastSpecies.speciesId].abilityAttr,$=x&Ms.ABILITY_1;let j=this.abilityCursor;do if(j=(j+1)%b,j===0){if($)break}else if(j===1){this.lastSpecies.ability1===this.lastSpecies.ability2&&$&&(j=(j+1)%b);break}else if(x&Ms.ABILITY_HIDDEN)break;while(j!==this.abilityCursor);F.ability=j;const{visible:z}=n.ui.getTooltip();if(z&&this.activeTooltip==="ABILITY"){const se=NE[this.lastSpecies.getAbility(j)];n.ui.editTooltip(`${se.name}`,`${se.description}`)}this.setSpeciesDetails(this.lastSpecies,{abilityIndex:j}),_=!0}break;case k.CYCLE_NATURE:if(this.canCycleNature){const b=n.gameData.getNaturesForAttr((d=this.speciesStarterDexEntry)==null?void 0:d.natureAttr),x=b.indexOf(this.natureCursor),$=b[x<b.length-1?x+1:0];F.nature=$,this.setSpeciesDetails(this.lastSpecies,{natureIndex:$}),_=!0}break;case k.UP:this.starterIconsCursorObj.visible?(this.starterIconsCursorIndex===0?(this.starterIconsCursorObj.setVisible(!1),this.setSpecies(null),this.randomCursorObj.setVisible(!0)):(this.starterIconsCursorIndex--,this.moveStarterIconsCursor(this.starterIconsCursorIndex)),_=!0):r>0?(this.scrollCursor>0&&r-this.scrollCursor===0&&(this.scrollCursor--,this.updateScroll()),_=this.setCursor(this.cursor-9)):(this.filterBarCursor=this.filterBar.getNearestFilter(this.filteredStarterContainers[this.cursor]),this.setFilterMode(!0),_=!0);break;case k.DOWN:this.starterIconsCursorObj.visible?(this.starterIconsCursorIndex<=this.starterSpecies.length-2?(this.starterIconsCursorIndex++,this.moveStarterIconsCursor(this.starterIconsCursorIndex)):(this.starterIconsCursorObj.setVisible(!1),this.setSpecies(null),this.startCursorObj.setVisible(!0)),_=!0):r<i-1?(r-this.scrollCursor===8&&this.scrollCursor++,_=this.setCursor(this.cursor+9),this.updateScroll()):i>1?(this.scrollCursor=0,this.updateScroll(),_=this.setCursor(this.cursor%9)):(this.filterBarCursor=this.filterBar.getNearestFilter(this.filteredStarterContainers[this.cursor]),this.setFilterMode(!0),_=!0);break;case k.LEFT:if(!this.starterIconsCursorObj.visible)this.cursor%9!==0?_=this.setCursor(this.cursor-1):(M===0?(this.cursorObj.setVisible(!1),this.randomCursorObj.setVisible(!0)):this.starterSpecies.length===0?_=this.setCursor(this.cursor+Math.min(8,a-this.cursor)):M<7?(this.cursorObj.setVisible(!1),this.starterIconsCursorIndex=I6(this.cursorObj.y-1,this.starterSpecies.length),this.moveStarterIconsCursor(this.starterIconsCursorIndex)):(this.cursorObj.setVisible(!1),this.setSpecies(null),this.startCursorObj.setVisible(!0)),_=!0);else if(a>0){const b=a6(this.starterIconsCursorIndex,C);this.starterIconsCursorObj.setVisible(!1),this.cursorObj.setVisible(!0),this.setCursor(Math.min(L+b*9+8,o)),_=!0}else _=!1;break;case k.RIGHT:if(!this.starterIconsCursorObj.visible)this.cursor%9<(r<i-1?8:(a-1)%9)?_=this.setCursor(this.cursor+1):(M===0?(this.cursorObj.setVisible(!1),this.randomCursorObj.setVisible(!0)):this.starterSpecies.length===0?_=this.setCursor(this.cursor-Math.min(8,this.cursor%9)):M<7?(this.cursorObj.setVisible(!1),this.starterIconsCursorIndex=I6(this.cursorObj.y-1,this.starterSpecies.length),this.moveStarterIconsCursor(this.starterIconsCursorIndex)):(this.cursorObj.setVisible(!1),this.setSpecies(null),this.startCursorObj.setVisible(!0)),_=!0);else if(a>0){const b=a6(this.starterIconsCursorIndex,C);this.starterIconsCursorObj.setVisible(!1),this.cursorObj.setVisible(!0),this.setCursor(Math.min(L+b*9,o-o%9)),_=!0}else _=!1;break}}}return _?D.playSelect():P&&D.playError(),_||P}isInParty(A){let s=0,R=!1;for(let a=0;a<this.starterSpecies.length;a++)if(this.starterSpecies[a]===A){R=!0,s=a;break}return[R,s]}addToParty(A,s,R,a,i,r=!1){const L=n.gameData.getSpeciesDexAttrProps(A,s);this.starterIcons[this.starterSpecies.length].setTexture(A.getIconAtlasKey(L.formIndex,L.shiny,L.variant)),this.starterIcons[this.starterSpecies.length].setFrame(A.getIconId(L.female,L.formIndex,L.shiny,L.variant)),this.checkIconId(this.starterIcons[this.starterSpecies.length],A,L.female,L.formIndex,L.shiny,L.variant),this.starterSpecies.push(A),this.starterAttr.push(s),this.starterAbilityIndexes.push(R),this.starterNatures.push(a),this.starterMovesets.push(i),(this.speciesLoaded.get(A.speciesId)||r)&&Vn(A.speciesId,L.formIndex).cry(),this.updateInstructions()}updatePartyIcon(A,s){const R=n.gameData.getSpeciesDexAttrProps(A,this.getCurrentDexProps(A.speciesId));this.starterIcons[s].setTexture(A.getIconAtlasKey(R.formIndex,R.shiny,R.variant)),this.starterIcons[s].setFrame(A.getIconId(R.female,R.formIndex,R.shiny,R.variant)),this.checkIconId(this.starterIcons[s],A,R.female,R.formIndex,R.shiny,R.variant)}switchMoveHandler(A,s,R){var L,o,l,C,M;const a=this.lastSpecies.speciesId,i=(L=this.starterMoveset)==null?void 0:L.indexOf(s);this.starterMoveset[A]=s,i>-1&&(this.starterMoveset[i]=R);const r=n.gameData.getSpeciesDexAttrProps(this.lastSpecies,this.dexAttrCursor);if(Nn.hasOwnProperty(a)){(!n.gameData.starterData[a].moveset||Array.isArray(n.gameData.starterData[a].moveset))&&(n.gameData.starterData[a].moveset={[r.formIndex]:(o=this.starterMoveset)==null?void 0:o.slice(0)});const D=n.gameData.starterData[a].moveset;D.hasOwnProperty(r.formIndex)||(n.gameData.starterData[a].moveset[r.formIndex]=(l=this.starterMoveset)==null?void 0:l.slice(0)),D.hasOwnProperty(r.formIndex)&&D[r.formIndex][i]!==s&&(n.gameData.starterData[a].moveset[r.formIndex]=(C=this.starterMoveset)==null?void 0:C.slice(0))}else n.gameData.starterData[a].moveset=(M=this.starterMoveset)==null?void 0:M.slice(0);this.setSpeciesDetails(this.lastSpecies,{forSeen:!1}),this.starterMovesets.length&&Array.from({length:this.starterSpecies.length},(D,_)=>{this.starterSpecies[_].speciesId===a&&(this.starterMovesets[_]=this.starterMoveset)})}updateButtonIcon(A,s,R,a){var r;let i;if(s==="touch")switch(s="keyboard",A){case rt.Button_Cycle_Shiny:i="R.png";break;case rt.Button_Cycle_Form:i="F.png";break;case rt.Button_Cycle_Gender:i="G.png";break;case rt.Button_Cycle_Ability:i="E.png";break;case rt.Button_Cycle_Nature:i="N.png";break;case rt.Button_Cycle_Variant:i="V.png";break;case rt.Button_Stats:i="C.png";break}else i=(r=n.inputController)==null?void 0:r.getIconForLatestInputRecorded(A);R.setTexture(s,i),R.setPosition(this.instructionRowX,this.instructionRowY),a.setPosition(this.instructionRowX+this.instructionRowTextOffset,this.instructionRowY),R.setVisible(!0),a.setVisible(!0),this.instructionsContainer.add([R,a]),this.instructionRowY+=8,this.instructionRowY>=24&&(this.instructionRowY=0,this.instructionRowX+=50)}updateFilterButtonIcon(A,s,R,a){var r;let i;s==="touch"?(s="keyboard",i="C.png"):i=(r=n.inputController)==null?void 0:r.getIconForLatestInputRecorded(A),R.setTexture(s,i),R.setPosition(this.filterInstructionRowX,this.filterInstructionRowY),a.setPosition(this.filterInstructionRowX+this.instructionRowTextOffset,this.filterInstructionRowY),R.setVisible(!0),a.setVisible(!0),this.filterInstructionsContainer.add([R,a]),this.filterInstructionRowY+=8,this.filterInstructionRowY>=24&&(this.filterInstructionRowY=0,this.filterInstructionRowX+=50)}updateInstructions(){var s;this.instructionRowX=0,this.instructionRowY=0,this.filterInstructionRowX=0,this.filterInstructionRowY=0,this.hideInstructions(),this.instructionsContainer.removeAll(),this.filterInstructionsContainer.removeAll();let A;n.inputMethod==="gamepad"?A=n.inputController.getConfig(n.inputController.selectedDevice[IA.GAMEPAD]).padType:A=n.inputMethod,A&&((s=this.speciesStarterDexEntry)!=null&&s.caughtAttr&&(this.canCycleShiny&&this.updateButtonIcon(rt.Button_Cycle_Shiny,A,this.shinyIconElement,this.shinyLabel),this.canCycleForm&&this.updateButtonIcon(rt.Button_Cycle_Form,A,this.formIconElement,this.formLabel),this.canCycleGender&&this.updateButtonIcon(rt.Button_Cycle_Gender,A,this.genderIconElement,this.genderLabel),this.canCycleAbility&&this.updateButtonIcon(rt.Button_Cycle_Ability,A,this.abilityIconElement,this.abilityLabel),this.canCycleNature&&this.updateButtonIcon(rt.Button_Cycle_Nature,A,this.natureIconElement,this.natureLabel),this.canCycleVariant&&this.updateButtonIcon(rt.Button_Cycle_Variant,A,this.variantIconElement,this.variantLabel)),this.filterMode||this.updateFilterButtonIcon(rt.Button_Stats,A,this.goFilterIconElement,this.goFilterLabel))}getValueLimit(){const A=new Et(0);switch(n.gameMode.modeId){case SA.ENDLESS:case SA.SPLICED_ENDLESS:A.value=15;break;default:A.value=10}return as(n.gameMode,XE.STARTER_POINTS,A),A.value}destroy(){this.starterContainers=[]}setCursor(A){var R,a;let s=!1;if(this.filterMode)s=this.filterBarCursor!==A,this.filterBarCursor=A,this.filterBar.setCursor(A);else{A=Math.max(Math.min(this.filteredStarterContainers.length-1,A),0),s=super.setCursor(A);const i=XP(A,this.scrollCursor);this.cursorObj.setPosition(i.x-1,i.y+1);const r=(R=this.filteredStarterContainers[A])==null?void 0:R.species;if(r){const L=this.getCurrentDexProps(r.speciesId),o=n.gameData.getSpeciesDexAttrProps(r,L),l=(a=this.starterPreferences[r.speciesId])!=null&&a.variant?this.starterPreferences[r.speciesId].variant:o.variant,C=yE(l);this.pokemonShinyIcon.setFrame(II(l)),this.pokemonShinyIcon.setTint(C),this.setSpecies(r),this.updateInstructions()}}return s}setFilterMode(A){return this.cursorObj.setVisible(!A),this.filterBar.cursorObj.setVisible(A),A!==this.filterMode?(this.filterMode=A,this.setCursor(A?this.filterBarCursor:this.cursor),A&&(this.setSpecies(null),this.updateInstructions()),!0):!1}moveStarterIconsCursor(A){this.starterIconsCursorObj.x=this.starterIcons[A].x+this.starterIconsCursorXOffset,this.starterIconsCursorObj.y=this.starterIcons[A].y+this.starterIconsCursorYOffset,this.starterSpecies.length>0?(this.starterIconsCursorObj.setVisible(!0),this.setSpecies(this.starterSpecies[A])):(this.starterIconsCursorObj.setVisible(!1),this.setSpecies(null))}getFriendship(A){let s=n.gameData.starterData[A].friendship;(!s||s===void 0)&&(s=0);const R=H1(KA[A]);return{currentFriendship:s,friendshipCap:R}}setSpecies(A){var R,a,i,r;this.speciesStarterDexEntry=A?n.gameData.dexData[A.speciesId]:null,this.dexAttrCursor=A?this.getCurrentDexProps(A.speciesId):0n,this.abilityCursor=A?n.gameData.getStarterSpeciesDefaultAbilityIndex(A):0,this.natureCursor=A?n.gameData.getSpeciesDefaultNature(A):0,!A&&n.ui.getTooltip().visible&&n.ui.hideTooltip(),this.pokemonAbilityText.off("pointerover"),this.pokemonPassiveText.off("pointerover");const s=A?{...this.starterPreferences[A.speciesId]}:null;if(s!=null&&s.nature&&(this.natureCursor=s.nature),s!=null&&s.ability&&!isNaN(s.ability)&&(this.abilityCursor=s.ability),this.statsMode&&((R=this.speciesStarterDexEntry)!=null&&R.caughtAttr?(this.statsContainer.setVisible(!0),this.showStats()):(this.statsContainer.setVisible(!1),this.statsContainer.updateIvs(null))),this.lastSpecies){const L=this.getCurrentDexProps(this.lastSpecies.speciesId),o=n.gameData.getSpeciesDexAttrProps(this.lastSpecies,L),l=this.allSpecies.indexOf(this.lastSpecies),C=this.starterContainers[l].icon;this.checkIconId(C,this.lastSpecies,o.female,o.formIndex,o.shiny,o.variant),this.iconAnimHandler.addOrUpdate(C,eR.NONE);const M=this.starterContainers[l].icon;n.tweens.getTweensOf(M).forEach(D=>D.resume())}if(this.lastSpecies=A,A&&((a=this.speciesStarterDexEntry)!=null&&a.seenAttr||(i=this.speciesStarterDexEntry)!=null&&i.caughtAttr)){if(this.pokemonNumberText.setText(Dn(A.speciesId,4)),s!=null&&s.nickname){const L=decodeURIComponent(escape(atob(s.nickname)));this.pokemonNameText.setText(L)}else this.pokemonNameText.setText(A.name);if((r=this.speciesStarterDexEntry)!=null&&r.caughtAttr){const L=TR[A.speciesId],o=n.gameData.getDexAttrLuck(this.speciesStarterDexEntry.caughtAttr);this.pokemonLuckText.setVisible(!!o),this.pokemonLuckText.setText(o.toString()),this.pokemonLuckText.setTint(yE(Math.min(o-1,2))),this.pokemonLuckLabelText.setVisible(this.pokemonLuckText.visible);let l=Jn(c[A.growthRate]);const C=l.replace(" ","_");u.exists("growth:"+C)&&(l=u.t("growth:"+C)),this.pokemonGrowthRateText.setText(l),this.pokemonGrowthRateText.setColor(Mx(A.growthRate)),this.pokemonGrowthRateText.setShadowColor(Mx(A.growthRate,!0)),this.pokemonGrowthRateLabelText.setVisible(!0),this.pokemonUncaughtText.setVisible(!1),this.pokemonAbilityLabelText.setVisible(!0),this.pokemonPassiveLabelText.setVisible(!0),this.pokemonNatureLabelText.setVisible(!0),this.pokemonCaughtCountText.setText(`${this.speciesStarterDexEntry.caughtCount}`),A.speciesId===e.MANAPHY||A.speciesId===e.PHIONE?this.pokemonHatchedIcon.setFrame("manaphy"):this.pokemonHatchedIcon.setFrame(Zi(A)),this.pokemonHatchedCountText.setText(`${this.speciesStarterDexEntry.hatchedCount}`);const M=this.getCurrentDexProps(A.speciesId),D=n.gameData.getSpeciesDexAttrProps(A,M),_=D.variant,P=yE(_);if(this.pokemonShinyIcon.setFrame(II(_)),this.pokemonShinyIcon.setTint(P),this.pokemonShinyIcon.setVisible(D.shiny),this.pokemonCaughtHatchedContainer.setVisible(!0),this.pokemonFormText.setVisible(!0),yA.hasOwnProperty(A.speciesId))this.pokemonCaughtHatchedContainer.setY(16),this.pokemonShinyIcon.setY(135),this.pokemonShinyIcon.setFrame(II(_)),[this.pokemonCandyContainer,this.pokemonHatchedIcon,this.pokemonHatchedCountText].map(F=>F.setVisible(!1)),this.pokemonFormText.setY(25);else{this.pokemonCaughtHatchedContainer.setY(25),this.pokemonShinyIcon.setY(117),this.pokemonCandyIcon.setTint(js(cs(L[0]))),this.pokemonCandyOverlayIcon.setTint(js(cs(L[1]))),this.pokemonCandyCountText.setText(`x${n.gameData.starterData[A.speciesId].candyCount}`),this.pokemonCandyContainer.setVisible(!0),this.pokemonFormText.setY(42),this.pokemonHatchedIcon.setVisible(!0),this.pokemonHatchedCountText.setVisible(!0);const{currentFriendship:F,friendshipCap:W}=this.getFriendship(this.lastSpecies.speciesId),b=16-16*(F/W);this.pokemonCandyDarknessOverlay.setCrop(0,0,16,b),this.pokemonCandyContainer.on("pointerover",()=>{n.ui.showTooltip("",`${F}/${W}`,!0),this.activeTooltip="CANDY"}),this.pokemonCandyContainer.on("pointerout",()=>{n.ui.hideTooltip(),this.activeTooltip=void 0})}const h=this.allSpecies.indexOf(A),H=this.starterContainers[h].icon;this.isUpgradeAnimationEnabled()&&(n.tweens.getTweensOf(H).forEach(F=>F.pause()),H.x=-2,H.y=2),this.iconAnimHandler.addOrUpdate(H,eR.PASSIVE);const d=this.starterSpecies.indexOf(A);let f;if(d>-1)f=n.gameData.getSpeciesDexAttrProps(A,this.starterAttr[d]),this.setSpeciesDetails(A,{shiny:f.shiny,formIndex:f.formIndex,female:f.female,variant:f.variant,abilityIndex:this.starterAbilityIndexes[d],natureIndex:this.starterNatures[d]});else{const F=this.getCurrentDexProps(A.speciesId),W=(s==null?void 0:s.ability)??n.gameData.getStarterSpeciesDefaultAbilityIndex(A),b=(s==null?void 0:s.nature)||n.gameData.getSpeciesDefaultNature(A);f=n.gameData.getSpeciesDexAttrProps(A,F),s!=null&&s.variant&&!isNaN(s.variant)&&f.shiny&&(f.variant=s.variant),f.formIndex=(s==null?void 0:s.form)??f.formIndex,f.female=(s==null?void 0:s.female)??f.female,this.setSpeciesDetails(A,{shiny:f.shiny,formIndex:f.formIndex,female:f.female,variant:f.variant,abilityIndex:W,natureIndex:b})}const B=Vn(A.speciesId,f.formIndex);this.setTypeIcons(B.type1,B.type2),this.pokemonSprite.clearTint(),this.pokerusSpecies.includes(A)&&VI(tO.Pokerus)}else{this.pokemonGrowthRateText.setText(""),this.pokemonGrowthRateLabelText.setVisible(!1),this.type1Icon.setVisible(!1),this.type2Icon.setVisible(!1),this.pokemonLuckLabelText.setVisible(!1),this.pokemonLuckText.setVisible(!1),this.pokemonShinyIcon.setVisible(!1),this.pokemonUncaughtText.setVisible(!0),this.pokemonAbilityLabelText.setVisible(!1),this.pokemonPassiveLabelText.setVisible(!1),this.pokemonNatureLabelText.setVisible(!1),this.pokemonCaughtHatchedContainer.setVisible(!1),this.pokemonCandyContainer.setVisible(!1),this.pokemonFormText.setVisible(!1);const L=n.gameData.getSpeciesDefaultDexAttr(A,!0,!0),o=n.gameData.getStarterSpeciesDefaultAbilityIndex(A),l=n.gameData.getSpeciesDefaultNature(A),C=n.gameData.getSpeciesDexAttrProps(A,L);this.setSpeciesDetails(A,{shiny:C.shiny,formIndex:C.formIndex,female:C.female,variant:C.variant,abilityIndex:o,natureIndex:l,forSeen:!0}),this.pokemonSprite.setTint(8421504)}}else this.pokemonNumberText.setText(Dn(0,4)),this.pokemonNameText.setText(A?"???":""),this.pokemonGrowthRateText.setText(""),this.pokemonGrowthRateLabelText.setVisible(!1),this.type1Icon.setVisible(!1),this.type2Icon.setVisible(!1),this.pokemonLuckLabelText.setVisible(!1),this.pokemonLuckText.setVisible(!1),this.pokemonShinyIcon.setVisible(!1),this.pokemonUncaughtText.setVisible(!!A),this.pokemonAbilityLabelText.setVisible(!1),this.pokemonPassiveLabelText.setVisible(!1),this.pokemonNatureLabelText.setVisible(!1),this.pokemonCaughtHatchedContainer.setVisible(!1),this.pokemonCandyContainer.setVisible(!1),this.pokemonFormText.setVisible(!1),this.setSpeciesDetails(A,{shiny:!1,formIndex:0,female:!1,variant:0,abilityIndex:0,natureIndex:0}),this.pokemonSprite.clearTint()}setSpeciesDetails(A,s={}){var h,H,d,f,B,F;let{shiny:R,formIndex:a,female:i,variant:r,abilityIndex:L,natureIndex:o}=s;const l=s.forSeen??!1,C=A?n.gameData.getSpeciesDexAttrProps(A,this.dexAttrCursor):null,M=this.abilityCursor>-1?this.abilityCursor:n.gameData.getStarterSpeciesDefaultAbilityIndex(A),D=this.natureCursor>-1?this.natureCursor:n.gameData.getSpeciesDefaultNature(A);this.dexAttrCursor=0n,this.abilityCursor=-1,this.natureCursor=-1;const _=(A==null?void 0:A.genderDiffs)&&!ve(i)||!ve(a)||!ve(R)||!ve(r);if(this.activeTooltip==="CANDY")if(this.lastSpecies&&this.pokemonCandyContainer.visible){const{currentFriendship:W,friendshipCap:b}=this.getFriendship(this.lastSpecies.speciesId);n.ui.editTooltip("",`${W}/${b}`)}else n.ui.hideTooltip();if((h=A==null?void 0:A.forms)!=null&&h.find(W=>W.formKey==="female")&&(i!==void 0?a=i?1:0:a!==void 0&&(i=a===1)),A){this.dexAttrCursor|=(R!==void 0?!R:!(R=C==null?void 0:C.shiny))?Xe.NON_SHINY:Xe.SHINY,this.dexAttrCursor|=(i!==void 0?!i:!(i=C==null?void 0:C.female))?Xe.MALE:Xe.FEMALE,this.dexAttrCursor|=(r!==void 0?!r:!(r=C==null?void 0:C.variant))?Xe.DEFAULT_VARIANT:r===1?Xe.VARIANT_2:Xe.VARIANT_3,this.dexAttrCursor|=n.gameData.getFormAttr(a!==void 0?a:a=C.formIndex),this.abilityCursor=L!==void 0?L:L=M,this.natureCursor=o!==void 0?o:o=D;const[W,b]=this.isInParty(A);W&&this.updatePartyIcon(A,b)}if(this.pokemonSprite.setVisible(!1),this.pokemonPassiveLabelText.setVisible(!1),this.pokemonPassiveText.setVisible(!1),this.pokemonPassiveDisabledIcon.setVisible(!1),this.pokemonPassiveLockedIcon.setVisible(!1),this.assetLoadCancelled&&(this.assetLoadCancelled.value=!0,this.assetLoadCancelled=null),this.starterMoveset=null,this.speciesStarterMoves=[],A){const W=n.gameData.dexData[A.speciesId],b=n.gameData.starterData[A.speciesId].abilityAttr,x=((H=n.gameData.dexData[A.speciesId])==null?void 0:H.caughtAttr)||BigInt(0);if(!W.caughtAttr){const $=n.gameData.getSpeciesDexAttrProps(A,this.getCurrentDexProps(A.speciesId)),j=n.gameData.getStarterSpeciesDefaultAbilityIndex(A),z=n.gameData.getSpeciesDefaultNature(A);(R===void 0||R!==$.shiny)&&(R=$.shiny),(a===void 0||a!==$.formIndex)&&(a=$.formIndex),(i===void 0||i!==$.female)&&(i=$.female),(r===void 0||r!==$.variant)&&(r=$.variant),(L===void 0||L!==j)&&(L=j),(o===void 0||o!==z)&&(o=z)}if(this.shinyOverlay.setVisible(R??!1),this.pokemonNumberText.setColor(this.getTextColor(R?Q.SUMMARY_GOLD:Q.SUMMARY,!1)),this.pokemonNumberText.setShadowColor(this.getTextColor(R?Q.SUMMARY_GOLD:Q.SUMMARY,!0)),l?(d=this.speciesStarterDexEntry)!=null&&d.seenAttr:(f=this.speciesStarterDexEntry)!=null&&f.caughtAttr){const $=this.starterSpecies.indexOf(A);$>-1&&(this.starterAttr[$]=this.dexAttrCursor,this.starterAbilityIndexes[$]=this.abilityCursor,this.starterNatures[$]=this.natureCursor);const j=new Lt(!1);this.assetLoadCancelled=j,_?A.loadAssets(i,a,R,r,!0).then(()=>{j.value||(this.assetLoadCancelled=null,this.speciesLoaded.set(A.speciesId,!0),this.pokemonSprite.play(A.getSpriteKey(i,a,R,r)),this.pokemonSprite.setPipelineData("shiny",R),this.pokemonSprite.setPipelineData("variant",r),this.pokemonSprite.setPipelineData("spriteKey",A.getSpriteKey(i,a,R,r)),this.pokemonSprite.setVisible(!this.statsMode))}):this.pokemonSprite.setVisible(!this.statsMode);const z=new Lt(!0);as(n.gameMode,XE.STARTER_CHOICE,A,z,n.gameData.getSpeciesDexAttrProps(A,this.dexAttrCursor),!!this.starterSpecies.length);const se=this.filteredStarterContainers.find(ee=>ee.species.speciesId===A.speciesId);se&&(se.icon.setTexture(A.getIconAtlasKey(a,R,r),A.getIconId(i,a,R,r)),se.checkIconId(i,a,R,r));const Z=!!(x&Xe.NON_SHINY),q=!!(x&Xe.SHINY),p=q&&!!(x&Xe.DEFAULT_VARIANT),oe=q&&!!(x&Xe.VARIANT_2),me=q&&!!(x&Xe.VARIANT_3);this.canCycleShiny=Z&&q,this.canCycleVariant=!!R&&[p,oe,me].filter(ee=>ee).length>1;const Me=!!(x&Xe.MALE),We=!!(x&Xe.FEMALE);this.canCycleGender=Me&&We;const De=b&Ms.ABILITY_1;let ie=b&Ms.ABILITY_2;const Ae=b&Ms.ABILITY_HIDDEN;De&&ie&&A.ability1===A.ability2&&(ie=0),this.canCycleAbility=[De,ie,Ae].filter(ee=>ee).length>1,this.canCycleForm=A.forms.filter(ee=>{var Le;return ee.isStarterSelectable||!((Le=JO[A.speciesId])!=null&&Le.find(ue=>ue.formKey))}).map((ee,Le)=>W.caughtAttr&n.gameData.getFormAttr(Le)).filter(ee=>ee).length>1,this.canCycleNature=n.gameData.getNaturesForAttr(W.natureAttr).length>1}if(W.caughtAttr&&A.malePercent!==null){const $=i?at.FEMALE:at.MALE;this.pokemonGenderText.setText(SL($)),this.pokemonGenderText.setColor($n($)),this.pokemonGenderText.setShadowColor($n($,!0))}else this.pokemonGenderText.setText("");if(W.caughtAttr){const $=NE[this.lastSpecies.getAbility(L)];this.pokemonAbilityText.setText($.name);const j=L===(this.lastSpecies.ability2?2:1);this.pokemonAbilityText.setColor(this.getTextColor(j?Q.SUMMARY_GOLD:Q.SUMMARY_ALT)),this.pokemonAbilityText.setShadowColor(this.getTextColor(j?Q.SUMMARY_GOLD:Q.SUMMARY_ALT,!0));const z=n.gameData.starterData[A.speciesId].passiveAttr,se=NE[bP[this.lastSpecies.speciesId]];if(this.pokemonAbilityText.visible&&(this.activeTooltip==="ABILITY"&&n.ui.editTooltip(`${$.name}`,`${$.description}`),this.pokemonAbilityText.on("pointerover",()=>{n.ui.showTooltip(`${$.name}`,`${$.description}`,!0),this.activeTooltip="ABILITY"}),this.pokemonAbilityText.on("pointerout",()=>{n.ui.hideTooltip(),this.activeTooltip=void 0})),se){const De=!!(z&ZR.UNLOCKED),ie=!!(z&ZR.ENABLED),Ae=De&&ie?Q.SUMMARY_ALT:Q.SUMMARY_GRAY,ee=De&&ie?1:.5;this.pokemonPassiveLabelText.setVisible(!0),this.pokemonPassiveLabelText.setColor(this.getTextColor(Q.SUMMARY_ALT)),this.pokemonPassiveLabelText.setShadowColor(this.getTextColor(Q.SUMMARY_ALT,!0)),this.pokemonPassiveText.setVisible(!0),this.pokemonPassiveText.setText(se.name),this.pokemonPassiveText.setColor(this.getTextColor(Ae)),this.pokemonPassiveText.setAlpha(ee),this.pokemonPassiveText.setShadowColor(this.getTextColor(Ae,!0)),this.activeTooltip==="PASSIVE"&&n.ui.editTooltip(`${se.name}`,`${se.description}`),this.pokemonPassiveText.visible&&(this.pokemonPassiveText.on("pointerover",()=>{n.ui.showTooltip(`${se.name}`,`${se.description}`,!0),this.activeTooltip="PASSIVE"}),this.pokemonPassiveText.on("pointerout",()=>{n.ui.hideTooltip(),this.activeTooltip=void 0}));const Le={x:this.pokemonPassiveText.x+this.pokemonPassiveText.displayWidth+1,y:this.pokemonPassiveText.y+this.pokemonPassiveText.displayHeight/2};this.pokemonPassiveDisabledIcon.setVisible(De&&!ie),this.pokemonPassiveDisabledIcon.setPosition(Le.x,Le.y),this.pokemonPassiveLockedIcon.setVisible(!De),this.pokemonPassiveLockedIcon.setPosition(Le.x,Le.y)}else this.activeTooltip==="PASSIVE"&&n.ui.hideTooltip();this.pokemonNatureText.setText($O(o,!0,!0,!1,n.uiTheme));let Z;if(Nn.hasOwnProperty(A.speciesId)&&a&&Nn[A.speciesId].hasOwnProperty(a)?Z=Nn[A.speciesId][a]:Z=B_[A.speciesId],this.speciesStarterMoves.push(...Z.filter(De=>De[0]>0&&De[0]<=5).map(De=>De[1])),KE.hasOwnProperty(A.speciesId))for(let De=0;De<4;De++)n.gameData.starterData[A.speciesId].eggMoves&1<<De&&this.speciesStarterMoves.push(KE[A.speciesId][De]);const q=n.gameData.starterData[A.speciesId].moveset,p=q?Array.isArray(q)?q:q[a]:null,oe=this.speciesStarterMoves.concat(KE.hasOwnProperty(A.speciesId)?KE[A.speciesId].filter((De,ie)=>n.gameData.starterData[A.speciesId].eggMoves&1<<ie):[]);this.starterMoveset=(p||this.speciesStarterMoves.slice(0,4)).filter(De=>oe.find(ie=>ie===De)),this.starterMoveset.length<4&&this.starterMoveset.length<oe.length&&this.starterMoveset.push(...oe.filter(De=>{var ie;return((ie=this.starterMoveset)==null?void 0:ie.indexOf(De))===-1}).slice(0,4-this.starterMoveset.length)),this.starterMoveset=this.starterMoveset.filter((De,ie)=>{var Ae;return((Ae=this.starterMoveset)==null?void 0:Ae.indexOf(De))===ie});const me=Vn(A.speciesId,a),Me=gL((B=A==null?void 0:A.forms[a])==null?void 0:B.formKey,"-",!1,!1),We=gL(e[A.speciesId],"_",!0,!1);A.speciesId===e.ARCEUS?this.pokemonFormText.setText(u.t(`pokemonInfo:Type.${Me==null?void 0:Me.toUpperCase()}`)):this.pokemonFormText.setText(Me?u.t(`pokemonForm:${We}${Me}`):""),this.setTypeIcons(me.type1,me.type2)}else this.pokemonAbilityText.setText(""),this.pokemonPassiveText.setText(""),this.pokemonNatureText.setText(""),this.setTypeIcons(null,null)}else this.shinyOverlay.setVisible(!1),this.pokemonNumberText.setColor(this.getTextColor(Q.SUMMARY)),this.pokemonNumberText.setShadowColor(this.getTextColor(Q.SUMMARY,!0)),this.pokemonGenderText.setText(""),this.pokemonAbilityText.setText(""),this.pokemonPassiveText.setText(""),this.pokemonNatureText.setText(""),this.setTypeIcons(null,null);this.starterMoveset||(this.starterMoveset=this.speciesStarterMoves.slice(0,4));for(let W=0;W<4;W++){const b=W<this.starterMoveset.length?we[this.starterMoveset[W]]:null;this.pokemonMoveBgs[W].setFrame(I[b?b.type:I.UNKNOWN].toString().toLowerCase()),this.pokemonMoveLabels[W].setText(b?b.name:"-"),this.pokemonMoveContainers[W].setVisible(!!b)}const P=A&&KE.hasOwnProperty(A.speciesId);for(let W=0;W<4;W++){const b=P?we[KE[A.speciesId][W]]:null,x=b&&n.gameData.starterData[A.speciesId].eggMoves&1<<W;this.pokemonEggMoveBgs[W].setFrame(I[b?b.type:I.UNKNOWN].toString().toLowerCase()),this.pokemonEggMoveLabels[W].setText(b&&x?b.name:"???")}this.pokemonEggMovesContainer.setVisible(!!((F=this.speciesStarterDexEntry)!=null&&F.caughtAttr)&&P),this.pokemonAdditionalMoveCountLabel.setText(`(+${Math.max(this.speciesStarterMoves.length-4,0)})`),this.pokemonAdditionalMoveCountLabel.setVisible(this.speciesStarterMoves.length>4),this.tryUpdateValue(),this.updateInstructions()}setTypeIcons(A,s){A!==null?(this.type1Icon.setVisible(!0),this.type1Icon.setFrame(I[A].toLowerCase())):this.type1Icon.setVisible(!1),s!==null?(this.type2Icon.setVisible(!0),this.type2Icon.setFrame(I[s].toLowerCase())):this.type2Icon.setVisible(!1)}popStarter(A){this.starterSpecies.splice(A,1),this.starterAttr.splice(A,1),this.starterAbilityIndexes.splice(A,1),this.starterNatures.splice(A,1),this.starterMovesets.splice(A,1);for(let s=0;s<this.starterSpecies.length;s++){const R=this.starterSpecies[s],a=this.getCurrentDexProps(R.speciesId),i=n.gameData.getSpeciesDexAttrProps(R,a);this.starterIcons[s].setTexture(R.getIconAtlasKey(i.formIndex,i.shiny,i.variant)),this.starterIcons[s].setFrame(R.getIconId(i.female,i.formIndex,i.shiny,i.variant)),this.checkIconId(this.starterIcons[s],R,i.female,i.formIndex,i.shiny,i.variant),s>=A&&(this.starterCursorObjs[s].setPosition(this.starterCursorObjs[s+1].x,this.starterCursorObjs[s+1].y),this.starterCursorObjs[s].setVisible(this.starterCursorObjs[s+1].visible))}this.starterCursorObjs[this.starterSpecies.length].setVisible(!1),this.starterIcons[this.starterSpecies.length].setTexture("pokemon_icons_0"),this.starterIcons[this.starterSpecies.length].setFrame("unknown"),this.starterIconsCursorObj.visible?(this.starterIconsCursorIndex===this.starterSpecies.length&&(this.starterSpecies.length>0?this.starterIconsCursorIndex--:(this.starterIconsCursorObj.setVisible(!1),this.setSpecies(null),this.filterBarCursor=Math.max(1,this.filterBar.numFilters-1),this.setFilterMode(!0))),this.moveStarterIconsCursor(this.starterIconsCursorIndex)):this.startCursorObj.visible&&this.starterSpecies.length===0&&(this.startCursorObj.setVisible(!1),this.filteredStarterContainers.length>0?(this.cursorObj.setVisible(!0),this.setCursor(0+this.scrollCursor*9)):(this.filterBarCursor=Math.max(1,this.filterBar.numFilters-1),this.setFilterMode(!0))),this.tryUpdateValue()}updateStarterValueLabel(A){const s=A.species.speciesId,R=KA[s],a=n.gameData.getSpeciesStarterValue(s);A.cost=a;let i=a.toString();i.startsWith("0.")&&(i=i.slice(1)),A.label.setText(i);let r;switch(R-a){case 0:r=Q.WINDOW;break;case 1:case .5:r=Q.SUMMARY_BLUE;break;default:r=Q.SUMMARY_GOLD;break}R-a>0&&(A.label.setColor(this.getTextColor(r)),A.label.setShadowColor(this.getTextColor(r,!0)))}tryUpdateValue(A,s){const a=this.starterSpecies.map(C=>C.generation).reduce((C,M,D)=>C+=n.gameData.getSpeciesStarterValue(this.starterSpecies[D].speciesId),0)+(A||0),i=this.getValueLimit(),r=a>i;let L=a.toString();if(L.startsWith("0.")&&(L=L.slice(1)),this.valueLimitLabel.setText(`${L}/${i}`),this.valueLimitLabel.setColor(this.getTextColor(r?Q.SUMMARY_PINK:Q.TOOLTIP_CONTENT)),this.valueLimitLabel.setShadowColor(this.getTextColor(r?Q.SUMMARY_PINK:Q.TOOLTIP_CONTENT,!0)),r)return n.time.delayedCall(st(500),()=>this.tryUpdateValue()),!1;let o=this.isPartyValid();if(s){const C=new Lt(!0),M=this.filteredStarterContainers[this.cursor].species;as(n.gameMode,XE.STARTER_CHOICE,M,C,n.gameData.getSpeciesDexAttrProps(M,this.getCurrentDexProps(M.speciesId)),!1),o=o||C.value}const l=i-a;for(let C=0;C<this.allSpecies.length;C++){const M=n.gameData.getSpeciesStarterValue(this.allSpecies[C].speciesId),D=this.starterContainers[C].icon,_=new Lt(!0);as(n.gameMode,XE.STARTER_CHOICE,this.allSpecies[C],_,n.gameData.getSpeciesDexAttrProps(this.allSpecies[C],this.getCurrentDexProps(this.allSpecies[C].speciesId)),o);const P=l>=M&&_.value,h=this.isInParty(this.allSpecies[C])[0];P||h&&l>=M?D.setAlpha(1):D.setAlpha(.375)}return!0}tryExit(){this.blockInput=!0;const A=this.getUi(),s=N(()=>{A.setMode(Ie.STARTER_SELECT),this.clearText(),this.blockInput=!1},"cancel");return A.showText(u.t("starterSelectUiHandler:confirmExit"),null,()=>{A.setModeWithoutClear(Ie.CONFIRM,()=>{var R;A.setMode(Ie.STARTER_SELECT),n.clearPhaseQueue(),n.gameMode.isChallenge?(n.pushPhase(new HC),n.pushPhase(new gr)):n.pushPhase(new Ri),this.clearText(),(R=n.getCurrentPhase())==null||R.end()},s,null,null,19)}),!0}tryStart(A=!1){if(!this.starterSpecies.length)return!1;const s=this.getUi(),R=N(()=>{s.setMode(Ie.STARTER_SELECT),A||this.popStarter(this.starterSpecies.length-1),this.clearText()},"cancel");return this.isPartyValid()?s.showText(u.t("starterSelectUiHandler:confirmStartTeam"),null,()=>{s.setModeWithoutClear(Ie.CONFIRM,()=>{N(()=>{n.money=n.gameMode.getStartingMoney(),s.setMode(Ie.STARTER_SELECT);const r=this,L=this.starterSelectCallback;this.starterSelectCallback=null,L&&L(new Array(this.starterSpecies.length).fill(0).map(function(o,l){var M;const C=r.starterSpecies[l];return{species:C,dexAttr:r.starterAttr[l],abilityIndex:r.starterAbilityIndexes[l],passive:!(n.gameData.starterData[C.speciesId].passiveAttr^(ZR.ENABLED|ZR.UNLOCKED)),nature:r.starterNatures[l],moveset:r.starterMovesets[l],pokerus:r.pokerusSpecies.includes(C),nickname:(M=r.starterPreferences[C.speciesId])==null?void 0:M.nickname}}))},"startRun")()},R,null,null,19)}):(this.tutorialActive=!0,this.showText(u.t("starterSelectUiHandler:invalidParty"),void 0,()=>this.showText("",0,()=>this.tutorialActive=!1),void 0,!0)),!0}isPartyValid(){let A=!1;for(let s=0;s<this.starterSpecies.length;s++){const R=new Lt(!0),a=this.starterSpecies[s];as(n.gameMode,XE.STARTER_CHOICE,a,R,n.gameData.getSpeciesDexAttrProps(a,this.getCurrentDexProps(a.speciesId)),!1),A=A||R.value}return A}getCurrentDexProps(A){var a,i,r,L,o,l,C;let s=0n;const R=n.gameData.dexData[A].caughtAttr;return(a=this.starterPreferences[A])!=null&&a.female||(R&Xe.FEMALE)>0n&&(R&Xe.MALE)===0n?s+=Xe.FEMALE:s+=Xe.MALE,(i=this.starterPreferences[A])!=null&&i.shiny||(R&Xe.SHINY)>0n&&((r=this.starterPreferences[A])==null?void 0:r.shiny)!==!1?(s+=Xe.SHINY,((L=this.starterPreferences[A])==null?void 0:L.variant)!==void 0?s+=BigInt(Math.pow(2,(o=this.starterPreferences[A])==null?void 0:o.variant))*Xe.DEFAULT_VARIANT:(R&Xe.VARIANT_3)>0?s+=Xe.VARIANT_3:(R&Xe.VARIANT_2)>0?s+=Xe.VARIANT_2:s+=Xe.DEFAULT_VARIANT):(s+=Xe.NON_SHINY,s+=Xe.DEFAULT_VARIANT),(l=this.starterPreferences[A])!=null&&l.form?s+=BigInt(Math.pow(2,(C=this.starterPreferences[A])==null?void 0:C.form))*Xe.DEFAULT_FORM:s+=n.gameData.getFormAttr(n.gameData.getFormIndex(R)),s}toggleStatsMode(A){var s;A===void 0&&(A=!this.statsMode),A?(this.showStats(),this.statsMode=!0,this.pokemonSprite.setVisible(!1)):(this.statsMode=!1,this.statsContainer.setVisible(!1),this.pokemonSprite.setVisible(!!((s=this.speciesStarterDexEntry)!=null&&s.caughtAttr)),this.statsContainer.updateIvs(null))}showStats(){this.speciesStarterDexEntry&&(this.statsContainer.setVisible(!0),this.statsContainer.updateIvs(this.speciesStarterDexEntry.ivs))}clearText(){this.starterSelectMessageBoxContainer.setVisible(!1),super.clearText()}hideInstructions(){this.shinyIconElement.setVisible(!1),this.shinyLabel.setVisible(!1),this.formIconElement.setVisible(!1),this.formLabel.setVisible(!1),this.genderIconElement.setVisible(!1),this.genderLabel.setVisible(!1),this.abilityIconElement.setVisible(!1),this.abilityLabel.setVisible(!1),this.natureIconElement.setVisible(!1),this.natureLabel.setVisible(!1),this.variantIconElement.setVisible(!1),this.variantLabel.setVisible(!1),this.goFilterIconElement.setVisible(!1),this.goFilterLabel.setVisible(!1)}clear(){for(super.clear(),YC.save(this.starterPreferences),this.cursor=-1,this.hideInstructions(),this.activeTooltip=void 0,n.ui.hideTooltip(),this.starterSelectContainer.setVisible(!1),this.blockInput=!1;this.starterSpecies.length;)this.popStarter(this.starterSpecies.length-1);this.statsMode&&this.toggleStatsMode(!1)}checkIconId(A,s,R,a,i,r){A.frame.name!==s.getIconId(R,a,i,r)&&(console.log(`${s.name}'s icon ${A.frame.name} does not match getIconId with female: ${R}, formIndex: ${a}, shiny: ${i}, variant: ${r}`),A.setTexture(s.getIconAtlasKey(a,!1,r)),A.setFrame(s.getIconId(R,a,!1,r)))}};N(Nm,"StarterSelectUiHandler");let oS=Nm;const Tm=class Tm extends Vs{constructor(){super(Ie.TARGET_SELECT),this.isMultipleTargets=!1,this.targetBattleInfoMoveTween=[],this.cursor=-1}setup(){}show(A){if(A.length<3)return!1;super.show(A),this.fieldIndex=A[0],this.move=A[1],this.targetSelectCallback=A[2];const s=n.getPlayerField()[this.fieldIndex],R=ta(s,this.move);return this.targets=R.targets,this.isMultipleTargets=R.multiple??!1,this.targets.length?(this.enemyModifiers=n.getModifierBar(!0),this.fieldIndex===gt.PLAYER?this.resetCursor(this.cursor0,s):this.fieldIndex===gt.PLAYER_2&&this.resetCursor(this.cursor1,s),!0):!1}resetCursor(A,s){ve(A)||([gt.PLAYER,gt.PLAYER_2].includes(A)||s.battleSummonData.waveTurnCount===1)&&(A=-1),this.setCursor(this.targets.includes(A)?A:this.targets[0])}processInput(A){const s=this.getUi();let R=!1;if(A===k.ACTION||A===k.CANCEL){const a=this.isMultipleTargets?this.targets:[this.cursor];this.targetSelectCallback(A===k.ACTION?a:[]),R=!0,this.fieldIndex===gt.PLAYER?(ve(this.cursor0)||this.cursor0!==this.cursor)&&(this.cursor0=this.cursor):this.fieldIndex===gt.PLAYER_2&&(ve(this.cursor1)||this.cursor1!==this.cursor)&&(this.cursor1=this.cursor)}else if(this.isMultipleTargets)R=!1;else switch(A){case k.UP:this.cursor<gt.ENEMY&&this.targets.findIndex(a=>a>=gt.ENEMY)>-1&&(R=this.setCursor(this.targets.find(a=>a>=gt.ENEMY)));break;case k.DOWN:this.cursor>=gt.ENEMY&&this.targets.findIndex(a=>a<gt.ENEMY)>-1&&(R=this.setCursor(this.targets.find(a=>a<gt.ENEMY)));break;case k.LEFT:this.cursor%2&&this.targets.findIndex(a=>a===this.cursor-1)>-1&&(R=this.setCursor(this.cursor-1));break;case k.RIGHT:!(this.cursor%2)&&this.targets.findIndex(a=>a===this.cursor+1)>-1&&(R=this.setCursor(this.cursor+1));break}return R&&s.playSelect(),R}setCursor(A){const s=n.getField()[A],R=this.targets.map(r=>n.getField()[r]);this.targetsHighlighted=this.isMultipleTargets?R:[s];const a=super.setCursor(A);if(this.targetFlashTween){this.targetFlashTween.stop();for(const r of R)r.setAlpha(r.getTag(mE)?.5:1),this.highlightItems(r.id,1)}if(this.targetFlashTween=n.tweens.add({targets:this.targetsHighlighted,key:{start:1,to:.25},loop:-1,loopDelay:150,duration:st(450),ease:"Sine.easeInOut",yoyo:!0,onUpdate:N(r=>{for(const L of this.targetsHighlighted)L.setAlpha(r.getValue()),this.highlightItems(L.id,r.getValue())},"onUpdate")}),this.targetBattleInfoMoveTween.length>=1){this.targetBattleInfoMoveTween.filter(r=>r!==void 0).forEach(r=>r.stop());for(const r of R)r.getBattleInfo().resetY()}return this.targetsHighlighted.map(r=>r.getBattleInfo()).map(r=>{this.targetBattleInfoMoveTween.push(n.tweens.add({targets:[r],y:{start:r.getBaseY(),to:r.getBaseY()+1},loop:-1,duration:st(250),ease:"Linear",yoyo:!0}))}),a}eraseCursor(){this.targetFlashTween&&(this.targetFlashTween.stop(),this.targetFlashTween=null);for(const A of this.targetsHighlighted)A.setAlpha(A.getTag(mE)?.5:1),this.highlightItems(A.id,1);this.targetBattleInfoMoveTween.length>=1&&(this.targetBattleInfoMoveTween.filter(A=>A!==void 0).forEach(A=>A.stop()),this.targetBattleInfoMoveTween=[]);for(const A of this.targetsHighlighted)A.getBattleInfo().resetY()}highlightItems(A,s){const R=this.enemyModifiers.getAll("name",A.toString());for(const a of R)a.setAlpha(s)}clear(){super.clear(),this.eraseCursor()}};N(Tm,"TargetSelectUiHandler");let QP=Tm;const JP="LEFT",g8="RIGHT",Pa=class Pa{constructor(){this.selectedMode=Ie.SETTINGS,this.navigationMenus=new Array,this.modes=[Ie.SETTINGS,Ie.SETTINGS_DISPLAY,Ie.SETTINGS_AUDIO,Ie.SETTINGS_GAMEPAD,Ie.SETTINGS_KEYBOARD],this.labels=[u.t("settings:general"),u.t("settings:display"),u.t("settings:audio"),u.t("settings:gamepad"),u.t("settings:keyboard")]}reset(){this.selectedMode=Ie.SETTINGS,this.updateNavigationMenus()}static getInstance(){return Pa.instance||(Pa.instance=new Pa),Pa.instance}navigate(A){const s=this.modes.indexOf(this.selectedMode),R=this.modes.length-1,a=A===JP?-1:1;s===0&&A===JP?this.selectedMode=this.modes[R]:s===R&&A===g8?this.selectedMode=this.modes[0]:this.selectedMode=this.modes[s+a],n.ui.setMode(this.selectedMode),this.updateNavigationMenus()}updateNavigationMenus(){for(const A of this.navigationMenus)A.update()}updateIcons(){for(const A of this.navigationMenus)A.updateIcons()}clearNavigationMenus(){this.navigationMenus.length=0}};N(Pa,"NavigationManager");let OO=Pa;const Sm=class Sm extends Phaser.GameObjects.Container{constructor(A,s){super(n,A,s),this.headerTitles=new Array,this.setup()}setup(){const A=OO.getInstance(),s=Gt(0,0,n.game.canvas.width/6-2,24);s.setOrigin(0,0),this.add(s),this.width=s.width,this.height=s.height,this.navigationIcons={};const R=n.add.sprite(8,4,"keyboard");R.setOrigin(0,-.1),R.setPositionRelative(s,8,4),this.navigationIcons.BUTTON_CYCLE_FORM=R;const a=n.add.sprite(0,0,"keyboard");a.setOrigin(0,-.1),a.setPositionRelative(s,s.width-20,4),this.navigationIcons.BUTTON_CYCLE_SHINY=a;let i=R,r=R.width*6;for(const L of A.labels){const o=le(0,0,L,Q.SETTINGS_LABEL);o.setOrigin(0,0),o.setPositionRelative(i,6+r/6,0),this.add(o),this.headerTitles.push(o),i=o,r=o.width}this.add(R),this.add(a),A.navigationMenus.push(this),A.updateNavigationMenus()}update(){const A=OO.getInstance(),s=A.modes.indexOf(A.selectedMode);for(const[R,a]of this.headerTitles.entries())F7(a,R===s?Q.SETTINGS_SELECTED:Q.SETTINGS_LABEL)}updateIcons(){var s,R;const A={BUTTON_HOME:"HOME.png",BUTTON_DELETE:"DEL.png"};for(const a of Object.keys(this.navigationIcons)){if(Object.keys(A).includes(a)){this.navigationIcons[a].setTexture("keyboard"),this.navigationIcons[a].setFrame(A[a]),this.navigationIcons[a].alpha=1;continue}const i=(s=n.inputController)==null?void 0:s.getIconForLatestInputRecorded(a);if(i){const r=(R=n.inputController)==null?void 0:R.getLastSourceType();this.navigationIcons[a].setTexture(r),this.navigationIcons[a].setFrame(i),this.navigationIcons[a].alpha=1}else this.navigationIcons[a].alpha=0}}navigate(A){const s=OO.getInstance();switch(A){case k.CYCLE_FORM:return s.navigate(JP),!0;case k.CYCLE_SHINY:return s.navigate(g8),!0}return!1}};N(Sm,"NavigationMenu");let vC=Sm;const om=class om extends vs{constructor(A,s=null){super(s),this.settings=YA.filter(R=>{var a;return R.type===A&&!((a=R==null?void 0:R.isHidden)!=null&&a.call(R))}),this.reloadRequired=!1,this.rowsToDisplay=8}setup(){const A=this.getUi();this.settingsContainer=n.add.container(1,-(n.game.canvas.height/6)+1),this.settingsContainer.setName(`settings-${this.title}`),this.settingsContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,n.game.canvas.width/6,n.game.canvas.height/6-20),Phaser.Geom.Rectangle.Contains),this.navigationIcons={},this.navigationContainer=new vC(0,0),this.optionsBg=Gt(0,this.navigationContainer.height,n.game.canvas.width/6-2,n.game.canvas.height/6-16-this.navigationContainer.height-2),this.optionsBg.setName("window-options-bg"),this.optionsBg.setOrigin(0,0);const s=Gt(0,n.game.canvas.height/6-this.navigationContainer.height,n.game.canvas.width/6-2,22);s.setOrigin(0,0);const R=n.add.sprite(0,0,"keyboard");R.setOrigin(0,-.1),R.setPositionRelative(s,this.navigationContainer.width-32,4),this.navigationIcons.BUTTON_ACTION=R;const a=le(0,0,u.t("settings:action"),Q.SETTINGS_LABEL);a.setOrigin(0,.15),a.setPositionRelative(R,-a.width/6-2,0);const i=n.add.sprite(0,0,"keyboard");i.setOrigin(0,-.1),i.setPositionRelative(s,this.navigationContainer.width-100,4),this.navigationIcons.BUTTON_CANCEL=i;const r=le(0,0,u.t("settings:back"),Q.SETTINGS_LABEL);r.setOrigin(0,.15),r.setPositionRelative(i,-r.width/6-2,0),this.optionsContainer=n.add.container(0,0),this.settingLabels=[],this.optionValueLabels=[],this.reloadSettings=this.settings.filter(l=>l==null?void 0:l.requireReload),this.settings.forEach((l,C)=>{let M=l.label;l!=null&&l.requireReload&&(M+=` (${u.t("settings:requireReload")})`),this.settingLabels[C]=le(8,28+C*16,M,Q.SETTINGS_LABEL),this.settingLabels[C].setOrigin(0,0),this.optionsContainer.add(this.settingLabels[C]),this.optionValueLabels.push(l.options.map((d,f)=>{const B=le(0,0,d.label,l.default===f?Q.SETTINGS_SELECTED:Q.SETTINGS_VALUE);return B.setOrigin(0,0),this.optionsContainer.add(B),B}));const D=this.optionValueLabels[C].map(d=>d.width).reduce((d,f)=>d+=f,0),_=Math.max(78,this.settingLabels[C].displayWidth+8),P=297-_-D/6,h=Math.floor(P/(this.optionValueLabels[C].length-1));let H=0;for(const d of this.optionValueLabels[C])d.setPositionRelative(this.settingLabels[C],_+H,0),H+=d.width/6+h}),this.optionCursors=this.settings.map(l=>l.default),this.scrollBar=new ZI(this.optionsBg.width-9,this.optionsBg.y+5,4,this.optionsBg.height-11,this.rowsToDisplay),this.scrollBar.setTotalRows(this.settings.length),this.messageBoxContainer=n.add.container(0,n.scaledCanvas.height),this.messageBoxContainer.setName("settings-message-box"),this.messageBoxContainer.setVisible(!1);const L=Gt(0,-1,n.scaledCanvas.width-2,48);L.setOrigin(0,1),this.messageBoxContainer.add(L);const o=le(8,-40,"",Q.WINDOW,{maxLines:2});o.setWordWrapWidth(n.game.canvas.width-60),o.setName("settings-message"),o.setOrigin(0,0),this.messageBoxContainer.add(o),this.message=o,this.settingsContainer.add(this.optionsBg),this.settingsContainer.add(this.scrollBar),this.settingsContainer.add(this.navigationContainer),this.settingsContainer.add(s),this.settingsContainer.add(this.optionsContainer),this.settingsContainer.add(R),this.settingsContainer.add(i),this.settingsContainer.add(a),this.settingsContainer.add(r),this.settingsContainer.add(this.messageBoxContainer),A.add(this.settingsContainer),this.setCursor(0),this.setScrollCursor(0),this.settingsContainer.setVisible(!1)}updateBindings(){var A,s;for(const R of Object.keys(this.navigationIcons)){if(R==="BUTTON_HOME"){this.navigationIcons[R].setTexture("keyboard"),this.navigationIcons[R].setFrame("HOME.png"),this.navigationIcons[R].alpha=1;continue}const a=(A=n.inputController)==null?void 0:A.getIconForLatestInputRecorded(R);if(a){const i=(s=n.inputController)==null?void 0:s.getLastSourceType();this.navigationIcons[R].setTexture(i),this.navigationIcons[R].setFrame(a),this.navigationIcons[R].alpha=1}else this.navigationIcons[R].alpha=0}OO.getInstance().updateIcons()}show(A){super.show(A),this.updateBindings();const s=localStorage.hasOwnProperty(this.localStorageKey)?JSON.parse(localStorage.getItem(this.localStorageKey)):{};return this.settings.forEach((R,a)=>this.setOptionCursor(a,s.hasOwnProperty(R.key)?s[R.key]:this.settings[a].default)),this.settingsContainer.setVisible(!0),this.setCursor(0),this.setScrollCursor(0),this.getUi().moveTo(this.settingsContainer,this.getUi().length-1),this.getUi().hideTooltip(),!0}processInput(A){const s=this.getUi();let R=!1;if(A===k.CANCEL)R=!0,OO.getInstance().reset(),n.ui.revertMode();else{const a=this.cursor+this.scrollCursor;switch(A){case k.UP:if(a)this.cursor?R=this.setCursor(this.cursor-1):R=this.setScrollCursor(this.scrollCursor-1);else{const r=this.setCursor(this.rowsToDisplay-1),L=this.setScrollCursor(this.optionValueLabels.length-this.rowsToDisplay);R=r&&L}break;case k.DOWN:if(a<this.optionValueLabels.length-1)this.cursor<this.rowsToDisplay-1?R=this.setCursor(this.cursor+1):this.scrollCursor<this.optionValueLabels.length-this.rowsToDisplay&&(R=this.setScrollCursor(this.scrollCursor+1));else{const r=this.setCursor(0),L=this.setScrollCursor(0);R=r&&L}break;case k.LEFT:this.optionCursors[a]&&(R=this.setOptionCursor(a,this.optionCursors[a]-1,!0));break;case k.RIGHT:this.optionCursors[a]<this.optionValueLabels[a].length-1&&(R=this.setOptionCursor(a,this.optionCursors[a]+1,!0));break;case k.CYCLE_FORM:case k.CYCLE_SHINY:R=this.navigationContainer.navigate(A);break;case k.ACTION:const i=this.settings[a];i!=null&&i.activatable&&(R=this.activateSetting(i));break}}return R&&s.playSelect(),R}activateSetting(A){switch(A.key){case It.Move_Touch_Controls:return n.inputController.moveTouchControlsHandler.enableConfigurationMode(this.getUi()),!0}return!1}setCursor(A){const s=super.setCursor(A);if(!this.cursorObj){const R=n.game.canvas.width/6-(this.scrollBar.visible?16:10);this.cursorObj=n.add.nineslice(0,0,"summary_moves_cursor",void 0,R,16,1,1,1,1),this.cursorObj.setOrigin(0,0),this.optionsContainer.add(this.cursorObj)}return this.cursorObj.setPositionRelative(this.optionsBg,4,4+(this.cursor+this.scrollCursor)*16),s}setOptionCursor(A,s,R){A===-1&&(A=this.cursor+this.scrollCursor);const a=this.settings[A],i=this.optionCursors[A],r=this.optionValueLabels[A][i];r.setColor(this.getTextColor(Q.SETTINGS_VALUE)),r.setShadowColor(this.getTextColor(Q.SETTINGS_VALUE,!0)),this.optionCursors[A]=s;const L=this.optionValueLabels[A][s];if(L.setColor(this.getTextColor(Q.SETTINGS_SELECTED)),L.setShadowColor(this.getTextColor(Q.SETTINGS_SELECTED,!0)),R){const o=N(()=>{n.gameData.saveSetting(a.key,s),a.requireReload&&(this.reloadRequired=!0)},"saveSetting");if(a.options[s].needConfirmation){const l=N(()=>{n.ui.revertMode(),this.showText(""),o()},"confirmUpdateSetting"),C=N(()=>{n.ui.revertMode(),this.showText(""),this.setOptionCursor(A,i,!1)},"cancelUpdateSetting"),M=a.options[s].confirmationMessage??u.t("settings:defaultConfirmMessage");n.ui.showText(M,null,()=>{n.ui.setOverlayMode(Ie.CONFIRM,l,C,null,null,1,750)})}else o()}return!0}setScrollCursor(A){return A===this.scrollCursor?!1:(this.scrollCursor=A,this.scrollBar.setScrollCursor(this.scrollCursor),this.updateSettingsScroll(),this.setCursor(this.cursor),!0)}updateSettingsScroll(){this.optionsContainer.setY(-16*this.scrollCursor);for(let A=0;A<this.settingLabels.length;A++){const s=A>=this.scrollCursor&&A<this.scrollCursor+this.rowsToDisplay;this.settingLabels[A].setVisible(s);for(const R of this.optionValueLabels[A])R.setVisible(s)}}clear(){super.clear(),this.settingsContainer.setVisible(!1),this.setScrollCursor(0),this.eraseCursor(),this.getUi().bgmBar.toggleBgmBar(n.showBgmBar),this.reloadRequired&&(this.reloadRequired=!1,n.reset(!0,!1,!0))}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}showText(A,s,R,a,i,r){this.messageBoxContainer.setVisible(!!(A!=null&&A.length)),super.showText(A,s,R,a,i,r)}};N(om,"AbstractSettingsUiHandler");let lS=om;const lm=class lm extends lS{constructor(A=null){super(dM.GENERAL,A),this.title="General",this.localStorageKey="settings"}};N(lm,"SettingsUiHandler");let VC=lm;const K8={padID:"Xbox 360 controller (XInput STANDARD GAMEPAD)",padType:"xbox",deviceMapping:{RC_S:0,RC_E:1,RC_W:2,RC_N:3,START:9,SELECT:8,LB:4,RB:5,LT:6,RT:7,LS:10,RS:11,LC_N:12,LC_S:13,LC_W:14,LC_E:15},icons:{RC_S:"XB_Letter_A_OL.png",RC_E:"XB_Letter_B_OL.png",RC_W:"XB_Letter_X_OL.png",RC_N:"XB_Letter_Y_OL.png",START:"START.png",SELECT:"SELECT.png",LB:"Bumper_L.png",RB:"Bumper_R.png",LT:"Trigger_L.png",RT:"Trigger_R.png",LS:"LS.png",RS:"RS.png",LC_N:"UP.png",LC_S:"DOWN.png",LC_W:"LEFT.png",LC_E:"RIGHT.png"},settings:{[Be.Button_Up]:k.UP,[Be.Button_Down]:k.DOWN,[Be.Button_Left]:k.LEFT,[Be.Button_Right]:k.RIGHT,[Be.Button_Action]:k.ACTION,[Be.Button_Cancel]:k.CANCEL,[Be.Button_Cycle_Nature]:k.CYCLE_NATURE,[Be.Button_Cycle_Variant]:k.V,[Be.Button_Menu]:k.MENU,[Be.Button_Stats]:k.STATS,[Be.Button_Cycle_Form]:k.CYCLE_FORM,[Be.Button_Cycle_Shiny]:k.CYCLE_SHINY,[Be.Button_Cycle_Gender]:k.CYCLE_GENDER,[Be.Button_Cycle_Ability]:k.CYCLE_ABILITY,[Be.Button_Speed_Up]:k.SPEED_UP,[Be.Button_Slow_Down]:k.SLOW_DOWN},default:{LC_N:Be.Button_Up,LC_S:Be.Button_Down,LC_W:Be.Button_Left,LC_E:Be.Button_Right,RC_S:Be.Button_Action,RC_E:Be.Button_Cancel,RC_W:Be.Button_Cycle_Nature,RC_N:Be.Button_Cycle_Variant,START:Be.Button_Menu,SELECT:Be.Button_Stats,LB:Be.Button_Cycle_Form,RB:Be.Button_Cycle_Shiny,LT:Be.Button_Cycle_Gender,RT:Be.Button_Cycle_Ability,LS:Be.Button_Speed_Up,RS:Be.Button_Slow_Down}},m8={padID:"Dualshock",padType:"dualshock",deviceMapping:{RC_S:0,RC_E:1,RC_W:2,RC_N:3,START:9,SELECT:8,LB:4,RB:5,LT:6,RT:7,LS:10,RS:11,LC_N:12,LC_S:13,LC_W:14,LC_E:15,TOUCH:17},icons:{RC_S:"CROSS.png",RC_E:"CIRCLE.png",RC_W:"SQUARE.png",RC_N:"TRIANGLE.png",START:"START.png",SELECT:"SELECT.png",LB:"L1.png",RB:"R1.png",LT:"L2.png",RT:"R2.png",LS:"L3.png",RS:"R3.png",LC_N:"UP.png",LC_S:"DOWN.png",LC_W:"LEFT.png",LC_E:"RIGHT.png",TOUCH:"TOUCH.png"},settings:{[Be.Button_Up]:k.UP,[Be.Button_Down]:k.DOWN,[Be.Button_Left]:k.LEFT,[Be.Button_Right]:k.RIGHT,[Be.Button_Action]:k.ACTION,[Be.Button_Cancel]:k.CANCEL,[Be.Button_Cycle_Nature]:k.CYCLE_NATURE,[Be.Button_Cycle_Variant]:k.V,[Be.Button_Menu]:k.MENU,[Be.Button_Stats]:k.STATS,[Be.Button_Cycle_Form]:k.CYCLE_FORM,[Be.Button_Cycle_Shiny]:k.CYCLE_SHINY,[Be.Button_Cycle_Gender]:k.CYCLE_GENDER,[Be.Button_Cycle_Ability]:k.CYCLE_ABILITY,[Be.Button_Speed_Up]:k.SPEED_UP,[Be.Button_Slow_Down]:k.SLOW_DOWN,[Be.Button_Submit]:k.SUBMIT},default:{LC_N:Be.Button_Up,LC_S:Be.Button_Down,LC_W:Be.Button_Left,LC_E:Be.Button_Right,RC_S:Be.Button_Action,RC_E:Be.Button_Cancel,RC_W:Be.Button_Cycle_Nature,RC_N:Be.Button_Cycle_Variant,START:Be.Button_Menu,SELECT:Be.Button_Stats,LB:Be.Button_Cycle_Form,RB:Be.Button_Cycle_Shiny,LT:Be.Button_Cycle_Gender,RT:Be.Button_Cycle_Ability,LS:Be.Button_Speed_Up,RS:Be.Button_Slow_Down,TOUCH:Be.Button_Submit}},F8={padID:"081f-e401",padType:"xbox",deviceMapping:{RC_S:2,RC_E:1,RC_W:3,RC_N:0,START:9,SELECT:8,LB:4,RB:5,LC_N:12,LC_S:13,LC_W:14,LC_E:15},icons:{RC_S:"XB_Letter_A_OL.png",RC_E:"XB_Letter_B_OL.png",RC_W:"XB_Letter_X_OL.png",RC_N:"XB_Letter_Y_OL.png",START:"START.png",SELECT:"SELECT.png",LB:"Bumper_L.png",RB:"Bumper_R.png",LC_N:"UP.png",LC_S:"DOWN.png",LC_W:"LEFT.png",LC_E:"RIGHT.png"},settings:{[Be.Button_Up]:k.UP,[Be.Button_Down]:k.DOWN,[Be.Button_Left]:k.LEFT,[Be.Button_Right]:k.RIGHT,[Be.Button_Action]:k.ACTION,[Be.Button_Cancel]:k.CANCEL,[Be.Button_Cycle_Nature]:k.CYCLE_NATURE,[Be.Button_Cycle_Variant]:k.V,[Be.Button_Menu]:k.MENU,[Be.Button_Stats]:k.STATS,[Be.Button_Cycle_Form]:k.CYCLE_FORM,[Be.Button_Cycle_Shiny]:k.CYCLE_SHINY,[Be.Button_Cycle_Gender]:k.CYCLE_GENDER,[Be.Button_Cycle_Ability]:k.CYCLE_ABILITY,[Be.Button_Speed_Up]:k.SPEED_UP,[Be.Button_Slow_Down]:k.SLOW_DOWN},default:{LC_N:Be.Button_Up,LC_S:Be.Button_Down,LC_W:Be.Button_Left,LC_E:Be.Button_Right,RC_S:Be.Button_Action,RC_E:Be.Button_Cancel,RC_W:Be.Button_Cycle_Nature,RC_N:Be.Button_Cycle_Variant,START:Be.Button_Menu,SELECT:Be.Button_Stats,LB:Be.Button_Cycle_Form,RB:Be.Button_Cycle_Shiny,LT:-1,RT:-1,LS:-1,RS:-1}};function yr(E,A){return Object.keys(E.deviceMapping).find(s=>E.deviceMapping[s]===A)}N(yr,"getKeyWithKeycode");function p8(E,A){const s=yr(E,A);return s?E.custom[s]:null}N(p8,"getSettingNameWithKeycode");function Nl(E,A){const s=p8(E,A);return E.settings[s]}N(Nl,"getButtonWithKeycode");function wr(E,A){return Object.keys(E.custom).find(s=>E.custom[s]===A)}N(wr,"getKeyWithSettingName");function $P(E,A){return E.custom[A]}N($P,"getSettingNameWithKey");function pQ(E,A){return E.icons[A]}N(pQ,"getIconWithKey");function xC(E,A){const s=wr(E,A);return pQ(E,s)}N(xC,"getIconWithSettingName");function WQ(E,A,s,R){let a;A==="gamepad"?a=E[s[IA.GAMEPAD]]:a=E[s[IA.KEYBOARD]];const i=xC(a,R);if(!i){const r=R.includes("ALT_");let L;return r?L=R.split("ALT_").splice(1)[0]:L=`ALT_${R}`,xC(a,L)}return i}N(WQ,"getIconForLatestInput");function YQ(E,A,s){if(!vQ(E,yr(E,s))||!VQ(E,A))return!1;const R=p8(E,s);if(R){const r=wr(E,R);r&&(E.custom[r]=-1)}const a=wr(E,A);a&&(E.custom[a]=-1);const i=yr(E,s);return i&&(E.custom[i]=A),!0}N(YQ,"assign");function yQ(E,A,s){if(E.padType==="keyboard")return!1;const R=wr(E,A),a=$P(E,R),i=yr(E,s),r=$P(E,i);return R&&(E.custom[R]=r),i&&(E.custom[i]=a),!0}N(yQ,"swap");function wQ(E,A){const s=wr(E,A);return E.blacklist.includes(s)?!1:(s&&(E.custom[s]=-1),!0)}N(wQ,"deleteBind");function vQ(E,A){var R;const s=$P(E,A);return!((R=E.blacklist)!=null&&R.includes(A))}N(vQ,"canIAssignThisKey");function VQ(E,A){var R;const s=wr(E,A);return!((R=E.blacklist)!=null&&R.includes(s))}N(VQ,"canIOverrideThisSetting");const Cm=class Cm extends Vs{constructor(A=null){super(A),this.layout=new Map,this.rowsToDisplay=8}getLocalStorageSetting(){return localStorage.hasOwnProperty(this.localStoragePropertyName)?JSON.parse(localStorage.getItem(this.localStoragePropertyName)):{}}camelize(A){return A.replace(/(?:^\w|[A-Z]|\b\w)/g,function(s,R){return R===0?s.toLowerCase():s.toUpperCase()}).replace(/\s+/g,"")}setup(){const A=this.getUi();this.navigationIcons={},this.settingsContainer=n.add.container(1,-(n.game.canvas.height/6)+1),this.settingsContainer.setName(`settings-${this.titleSelected}`),this.settingsContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,n.game.canvas.width/6,n.game.canvas.height/6),Phaser.Geom.Rectangle.Contains),this.navigationContainer=new vC(0,0),this.optionsBg=Gt(0,this.navigationContainer.height,n.game.canvas.width/6-2,n.game.canvas.height/6-16-this.navigationContainer.height-2),this.optionsBg.setOrigin(0,0),this.actionsBg=Gt(0,n.game.canvas.height/6-this.navigationContainer.height,n.game.canvas.width/6-2,22),this.actionsBg.setOrigin(0,0);const s=n.add.sprite(0,0,"keyboard");s.setOrigin(0,-.1),s.setPositionRelative(this.actionsBg,this.navigationContainer.width-32,4),this.navigationIcons.BUTTON_ACTION=s;const R=le(0,0,u.t("settings:action"),Q.SETTINGS_LABEL);R.setOrigin(0,.15),R.setPositionRelative(s,-R.width/6-2,0);const a=n.add.sprite(0,0,"keyboard");a.setOrigin(0,-.1),a.setPositionRelative(this.actionsBg,this.navigationContainer.width-100,4),this.navigationIcons.BUTTON_CANCEL=a;const i=le(0,0,u.t("settings:back"),Q.SETTINGS_LABEL);i.setOrigin(0,.15),i.setPositionRelative(a,-i.width/6-2,0);const r=n.add.sprite(0,0,"keyboard");r.setOrigin(0,-.1),r.setPositionRelative(this.actionsBg,this.navigationContainer.width-180,4),this.navigationIcons.BUTTON_HOME=r;const L=le(0,0,u.t("settings:reset"),Q.SETTINGS_LABEL);L.setOrigin(0,.15),L.setPositionRelative(r,-L.width/6-2,0),this.settingsContainer.add(this.optionsBg),this.settingsContainer.add(this.actionsBg),this.settingsContainer.add(this.navigationContainer),this.settingsContainer.add(s),this.settingsContainer.add(a),this.settingsContainer.add(r),this.settingsContainer.add(R),this.settingsContainer.add(i),this.settingsContainer.add(L);for(const o of this.configs){this.layout[o.padType]=new Map;const l=n.add.container(0,0);l.setVisible(!1);const C=Object.keys(o.settings),M=[],D=[],_={},h=[...Object.keys(this.setting).slice(0,this.commonSettingsCount).map(f=>this.setting[f]),...Object.keys(o.settings)],H=Object.values(Object.keys(this.settingDeviceDefaults).filter(f=>h.includes(f)).map(f=>this.settingDeviceDefaults[f]));Object.keys(this.setting).filter(f=>h.includes(this.setting[f])).forEach((f,B)=>{const F=f.replace(/\_/g," "),W=this.settingBlacklisted.includes(this.setting[f]),b=W?Q.SETTINGS_LOCKED:Q.SETTINGS_LABEL;let x;const $=this.camelize(F.replace("Alt ",""));F.toLowerCase().includes("alt")?x=`${u.t(`settings:${$}`)}${u.t("settings:alt")}`:x=u.t(`settings:${$}`),M[B]=le(8,28+B*16,x,b),M[B].setOrigin(0,0),l.add(M[B]);const j=[];for(const[oe,me]of this.settingDeviceOptions[this.setting[f]].entries()){if(C.includes(this.setting[f])){if(oe){const De=le(0,0,W?"":me,Q.WINDOW);De.setOrigin(0,0),l.add(De),j.push(De);continue}const We=n.add.sprite(0,0,this.textureOverride?this.textureOverride:o.padType);We.setOrigin(0,-.15),_[this.setting[f]]=We,l.add(We),j.push(We);continue}const Me=le(0,0,me,this.settingDeviceDefaults[this.setting[f]]===oe?Q.SETTINGS_SELECTED:Q.WINDOW);Me.setOrigin(0,0),l.add(Me),j.push(Me)}D.push(j);const z=D[B].map(oe=>oe.width).reduce((oe,me)=>oe+=me,0),se=Math.max(130,M[B].displayWidth+8),Z=297-se-z/6,q=Math.floor(Z/(D[B].length-1));let p=0;for(const oe of D[B])oe.setPositionRelative(M[B],se+p,0),p+=oe.width/6+q}),this.layout[o.padType].optionsContainer=l,this.layout[o.padType].inputsIcons=_,this.layout[o.padType].settingLabels=M,this.layout[o.padType].optionValueLabels=D,this.layout[o.padType].optionCursors=H,this.layout[o.padType].keys=h,this.layout[o.padType].bindingSettings=C,this.settingsContainer.add(l)}this.scrollBar=new ZI(this.optionsBg.width-9,this.optionsBg.y+5,4,this.optionsBg.height-11,this.rowsToDisplay),this.settingsContainer.add(this.scrollBar),A.add(this.settingsContainer),this.settingsContainer.setVisible(!1)}getActiveConfig(){return n.inputController.getActiveConfig(this.device)}updateBindings(){Object.keys(this.layout).forEach(R=>this.layout[R].optionsContainer.setVisible(!1));const A=this.getActiveConfig();if(!this.setLayout(A))return;const s=this.getLocalStorageSetting();if(this.keys.forEach((R,a)=>{this.setOptionCursor(a,s.hasOwnProperty(R)?s[R]:this.optionCursors[a])}),!!A.custom){for(const R of this.bindingSettings){const a=xC(A,R);a?(this.inputsIcons[R].setFrame(a),this.inputsIcons[R].alpha=1):this.inputsIcons[R].alpha=0}this.setCursor(this.cursor),this.setScrollCursor(this.scrollCursor)}}updateNavigationDisplay(){var s,R;const A={BUTTON_HOME:"HOME.png",BUTTON_DELETE:"DEL.png"};for(const a of Object.keys(this.navigationIcons)){if(Object.keys(A).includes(a)){this.navigationIcons[a].setTexture("keyboard"),this.navigationIcons[a].setFrame(A[a]),this.navigationIcons[a].alpha=1;continue}const i=(s=n.inputController)==null?void 0:s.getIconForLatestInputRecorded(a);if(i){const r=(R=n.inputController)==null?void 0:R.getLastSourceType();this.navigationIcons[a].setTexture(r),this.navigationIcons[a].setFrame(i),this.navigationIcons[a].alpha=1}else this.navigationIcons[a].alpha=0}}show(A){return super.show(A),this.updateNavigationDisplay(),OO.getInstance().updateIcons(),this.updateBindings(),this.settingsContainer.setVisible(!0),this.resetScroll(),this.getUi().moveTo(this.settingsContainer,this.getUi().length-1),this.getUi().hideTooltip(),!0}setLayout(A){if(!A)return this.layout.noGamepads.optionsContainer.setVisible(!0),!1;const s=A.padType,R=this.layout[s];return this.keys=R.keys,this.optionsContainer=R.optionsContainer,this.optionsContainer.setVisible(!0),this.settingLabels=R.settingLabels,this.optionValueLabels=R.optionValueLabels,this.optionCursors=R.optionCursors,this.inputsIcons=R.inputsIcons,this.bindingSettings=R.bindingSettings,this.scrollBar.setTotalRows(R.settingLabels.length),this.scrollBar.setScrollCursor(0),!0}processInput(A){const s=this.getUi();let R=!1;if(this.updateNavigationDisplay(),A===k.CANCEL)R=!0,OO.getInstance().reset(),n.ui.revertMode();else{const a=this.cursor+this.scrollCursor,i=this.setting[Object.keys(this.setting)[a]];switch(A){case k.ACTION:if(!this.optionCursors||!this.optionValueLabels)return!1;this.settingBlacklisted.includes(i)||!i.includes("BUTTON_")?R=!1:R=this.setSetting(i,1);break;case k.UP:if(!this.optionValueLabels)return!1;if(a)this.cursor?R=this.setCursor(this.cursor-1):R=this.setScrollCursor(this.scrollCursor-1);else{const r=this.setCursor(this.rowsToDisplay-1),L=this.setScrollCursor(this.optionValueLabels.length-this.rowsToDisplay);R=r&&L}break;case k.DOWN:if(!this.optionValueLabels)return!1;if(a<this.optionValueLabels.length-1)this.cursor<this.rowsToDisplay-1?R=this.setCursor(this.cursor+1):this.scrollCursor<this.optionValueLabels.length-this.rowsToDisplay&&(R=this.setScrollCursor(this.scrollCursor+1));else{const r=this.setCursor(0),L=this.setScrollCursor(0);R=r&&L}break;case k.LEFT:if(!this.optionCursors||!this.optionValueLabels)return!1;this.settingBlacklisted.includes(i)||i.includes("BUTTON_")?R=!1:this.optionCursors[a]&&(R=this.setOptionCursor(a,this.optionCursors[a]-1,!0));break;case k.RIGHT:if(!this.optionCursors||!this.optionValueLabels)return!1;this.settingBlacklisted.includes(i)||i.includes("BUTTON_")?R=!1:this.optionCursors[a]<this.optionValueLabels[a].length-1&&(R=this.setOptionCursor(a,this.optionCursors[a]+1,!0));break;case k.CYCLE_FORM:case k.CYCLE_SHINY:R=this.navigationContainer.navigate(A);break}}return R&&s.playSelect(),R}resetScroll(){var A;(A=this.cursorObj)==null||A.destroy(),this.cursorObj=null,this.cursor=0,this.setCursor(0),this.setScrollCursor(0),this.updateSettingsScroll()}setCursor(A){const s=super.setCursor(A);if(!this.optionsContainer)return s;if(!this.cursorObj){const R=n.game.canvas.width/6-(this.scrollBar.visible?16:10);this.cursorObj=n.add.nineslice(0,0,"summary_moves_cursor",void 0,R,16,1,1,1,1),this.cursorObj.setOrigin(0,0),this.optionsContainer.add(this.cursorObj)}return this.cursorObj.setPositionRelative(this.optionsBg,4,4+(this.cursor+this.scrollCursor)*16),s}setScrollCursor(A){return A===this.scrollCursor?!1:(this.scrollCursor=A,this.scrollBar.setScrollCursor(this.scrollCursor),this.updateSettingsScroll(),this.setCursor(this.cursor),!0)}setOptionCursor(A,s,R){const a=this.setting[Object.keys(this.setting)[A]],i=this.optionCursors[A];if(!this.bindingSettings.includes(a)&&!a.includes("BUTTON_")){const r=this.optionValueLabels[A][i];r.setColor(this.getTextColor(Q.WINDOW)),r.setShadowColor(this.getTextColor(Q.WINDOW,!0)),this.optionCursors[A]=s;const L=this.optionValueLabels[A][s];L.setColor(this.getTextColor(Q.SETTINGS_SELECTED)),L.setShadowColor(this.getTextColor(Q.SETTINGS_SELECTED,!0))}return R&&this.saveSettingToLocalStorage(a,s),!0}updateSettingsScroll(){if(this.optionsContainer){this.optionsContainer.setY(-16*this.scrollCursor);for(let A=0;A<this.settingLabels.length;A++){const s=A>=this.scrollCursor&&A<this.scrollCursor+this.rowsToDisplay;this.settingLabels[A].setVisible(s);for(const R of this.optionValueLabels[A])R.setVisible(s)}}}clear(){super.clear(),this.settingsContainer.setVisible(!1),this.eraseCursor()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};N(Cm,"AbstractControlSettingsUiHandler");let bC=Cm;const Um=class Um extends bC{constructor(A=null){super(A),this.setSetting=hl,this.titleSelected="Gamepad",this.setting=Be,this.settingDeviceDefaults=O8,this.settingDeviceOptions=R8,this.configs=[K8,m8,F8],this.commonSettingsCount=2,this.localStoragePropertyName="settingsGamepad",this.settingBlacklisted=QZ,this.device=IA.GAMEPAD}setup(){super.setup(),this.layout.noGamepads=new Map;const A=n.add.container(0,0);A.setVisible(!1);const s=le(8,28,u.t("settings:gamepadPleasePlug"),Q.SETTINGS_LABEL);s.setOrigin(0,0),A.add(s),this.settingsContainer.add(A),this.layout.noGamepads.optionsContainer=A,this.layout.noGamepads.label=s}setLayout(A){return A?super.setLayout(A):(this.layout.noGamepads.optionsContainer.setVisible(!0),!1)}updateChosenGamepadDisplay(){this.updateBindings(),this.resetScroll();for(const[A,s]of Object.keys(this.setting).entries())if(this.setting[s]===this.setting.Controller)for(const a of Object.keys(this.layout))a!=="noGamepads"&&this.layout[a].optionValueLabels[A][0].setText(_1(n.inputController.selectedDevice[IA.GAMEPAD],20))}saveSettingToLocalStorage(A,s){this.setting[A]!==this.setting.Controller&&n.gameData.saveControlSetting(this.device,this.localStoragePropertyName,A,this.settingDeviceDefaults,s)}};N(Um,"SettingsGamepadUiHandler");let kC=Um;const um=class um extends Vs{constructor(A=null){super(A),this.leftArrowGap=90,this.arrowSpacing=3}setup(){const A=this.getUi();this.widestTextBox=0,this.challengesContainer=n.add.container(1,-(n.game.canvas.height/6)+1),this.challengesContainer.setName("challenges"),this.challengesContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,n.game.canvas.width/6,n.game.canvas.height/6),Phaser.Geom.Rectangle.Contains);const s=n.add.rectangle(-1,-1,n.scaledCanvas.width,n.scaledCanvas.height,4342338,.8);s.setName("rect-challenge-overlay"),s.setOrigin(0,0),this.challengesContainer.add(s);const R=Gt(0,0,n.game.canvas.width/6,24);R.setName("window-header-bg"),R.setOrigin(0,0);const a=le(0,0,u.t("challenges:title"),Q.SETTINGS_LABEL);a.setName("text-header"),a.setOrigin(0,0),a.setPositionRelative(R,8,4),this.optionsWidth=n.scaledCanvas.width*.6,this.optionsBg=Gt(0,R.height,this.optionsWidth,n.scaledCanvas.height-R.height-2),this.optionsBg.setName("window-options-bg"),this.optionsBg.setOrigin(0,0);const i=Gt(0,R.height,n.scaledCanvas.width-this.optionsWidth,n.scaledCanvas.height-R.height-26);i.setName("window-desc-bg"),i.setOrigin(0,0),i.setPositionRelative(this.optionsBg,this.optionsBg.width,0),this.descriptionText=new H6(n,i.x+6,i.y+4,"",{fontFamily:"emerald",fontSize:84,color:SC.ORANGE,padding:{bottom:6},wrap:{mode:"word",width:(i.width-12)*6}}),this.descriptionText.setName("text-desc"),n.add.existing(this.descriptionText),this.descriptionText.setScale(1/6),this.descriptionText.setShadow(4,5,oC.ORANGE),this.descriptionText.setOrigin(0,0),this.startBg=Gt(0,0,i.width,24),this.startBg.setName("window-start-bg"),this.startBg.setOrigin(0,0),this.startBg.setPositionRelative(i,0,i.height),this.startText=le(0,0,u.t("challenges:noneSelected"),Q.SETTINGS_LABEL),this.startText.setName("text-start"),this.startText.setOrigin(0,0),this.startText.setPositionRelative(this.startBg,(this.startBg.width-this.startText.displayWidth)/2,4),this.startCursor=n.add.nineslice(0,0,"summary_moves_cursor",void 0,i.width-8,16,1,1,1,1),this.startCursor.setName("9s-start-cursor"),this.startCursor.setOrigin(0,0),this.startCursor.setPositionRelative(this.startBg,4,3),this.startCursor.setVisible(!1),this.valuesContainer=n.add.container(0,0),this.valuesContainer.setName("values"),this.challengeLabels=[];for(let r=0;r<9;r++){const L=le(8,28+r*16,"",Q.SETTINGS_LABEL);L.setName(`text-challenge-label-${r}`),L.setOrigin(0,0),this.valuesContainer.add(L);const o=n.add.image(0,0,"cursor_reverse");o.setName(`challenge-left-arrow-${r}`),o.setOrigin(0,0),o.setVisible(!1),o.setScale(.75),this.valuesContainer.add(o);const l=n.add.image(0,0,"cursor");l.setName(`challenge-right-arrow-${r}`),l.setOrigin(0,0),l.setScale(.75),l.setVisible(!1),this.valuesContainer.add(l);const C=le(0,28+r*16,"",Q.SETTINGS_LABEL);C.setName(`challenge-value-text-${r}`),C.setPositionRelative(L,100,0),this.valuesContainer.add(C),this.challengeLabels[r]={label:L,value:C,leftArrow:o,rightArrow:l}}this.monoTypeValue=n.add.sprite(8,98,YR("types")),this.monoTypeValue.setName("challenge-value-monotype-sprite"),this.monoTypeValue.setScale(.86),this.monoTypeValue.setVisible(!1),this.valuesContainer.add(this.monoTypeValue),this.challengesContainer.add(R),this.challengesContainer.add(a),this.challengesContainer.add(this.optionsBg),this.challengesContainer.add(i),this.challengesContainer.add(this.descriptionText),this.challengesContainer.add(this.startBg),this.challengesContainer.add(this.startText),this.challengesContainer.add(this.startCursor),this.challengesContainer.add(this.valuesContainer),A.add(this.challengesContainer),this.setCursor(0),this.setScrollCursor(0),this.challengesContainer.setVisible(!1)}setDescription(A){this.descriptionText.setText(`[color=${SC.ORANGE}][shadow=${oC.ORANGE}]${A}`)}initLabels(){this.setDescription(n.gameMode.challenges[0].getDescription()),this.widestTextBox=0;for(let A=0;A<9;A++)if(A<n.gameMode.challenges.length){this.challengeLabels[A].label.setVisible(!0),this.challengeLabels[A].value.setVisible(!0),this.challengeLabels[A].leftArrow.setVisible(!0),this.challengeLabels[A].rightArrow.setVisible(!0);const s=le(0,0,"",Q.SETTINGS_LABEL);for(let R=0;R<=n.gameMode.challenges[A].maxValue;R++)n.gameMode.challenges[A].id!==it.SINGLE_TYPE&&(s.setText(n.gameMode.challenges[A].getValue(R)),s.displayWidth>this.widestTextBox&&(this.widestTextBox=s.displayWidth));s.destroy()}}updateText(){this.setDescription(this.getActiveChallenge().getDescription());let A=!1;for(let s=0;s<Math.min(9,n.gameMode.challenges.length);s++){const R=n.gameMode.challenges[this.scrollCursor+s],a=this.challengeLabels[s];a.label.setText(R.getName()),a.leftArrow.setPositionRelative(a.label,this.leftArrowGap,4.5),a.leftArrow.setVisible(R.value!==0),a.rightArrow.setPositionRelative(a.leftArrow,Math.max(this.monoTypeValue.width,this.widestTextBox)+a.leftArrow.displayWidth+2*this.arrowSpacing,0),a.rightArrow.setVisible(R.value!==R.maxValue),a.rightArrow.x+a.rightArrow.width+this.optionsBg.rightWidth+this.arrowSpacing>this.optionsWidth&&a.rightArrow.setX(this.optionsWidth-this.arrowSpacing-this.optionsBg.rightWidth);const i=Math.round((a.leftArrow.x+a.rightArrow.x+a.leftArrow.displayWidth)/2);R.id===it.SINGLE_TYPE?(this.monoTypeValue.setX(i),this.monoTypeValue.setY(a.label.y+8),this.monoTypeValue.setFrame(R.getValue()),this.monoTypeValue.setVisible(!0),a.value.setVisible(!1),A=!0):(a.value.setText(R.getValue()),a.value.setX(i),a.value.setOrigin(.5,0),a.value.setVisible(!0))}A||this.monoTypeValue.setVisible(!1),this.hasSelectedChallenge=n.gameMode.challenges.some(s=>s.value!==0),this.hasSelectedChallenge?(this.startText.setText(u.t("common:start")),this.startText.setAlpha(1),this.startText.setPositionRelative(this.startBg,(this.startBg.width-this.startText.displayWidth)/2,4)):(this.startText.setText(u.t("challenges:noneSelected")),this.startText.setAlpha(.5),this.startText.setPositionRelative(this.startBg,(this.startBg.width-this.startText.displayWidth)/2,4)),this.challengesContainer.update()}show(A){return super.show(A),this.startCursor.setVisible(!1),this.updateChallengeArrows(!1),this.challengesContainer.setVisible(!0),this.hasSelectedChallenge=n.gameMode.challenges.some(s=>s.value!==0),this.setCursor(0),this.initLabels(),this.updateText(),this.getUi().moveTo(this.challengesContainer,this.getUi().length-1),this.getUi().hideTooltip(),!0}updateChallengeArrows(A){for(let s=0;s<Math.min(9,n.gameMode.challenges.length);s++){const R=this.challengeLabels[s];A?(R.leftArrow.setTint(8421504),R.rightArrow.setTint(8421504)):(R.leftArrow.clearTint(),R.rightArrow.clearTint())}}processInput(A){var i,r,L,o,l;const s=this.getUi(),R=9;let a=!1;if(A===k.CANCEL)this.startCursor.visible?(this.startCursor.setVisible(!1),(i=this.cursorObj)==null||i.setVisible(!0),this.updateChallengeArrows(this.startCursor.visible)):(n.clearPhaseQueue(),n.pushPhase(new Ri),(r=n.getCurrentPhase())==null||r.end()),a=!0;else if(A===k.SUBMIT||A===k.ACTION)this.hasSelectedChallenge?(this.startCursor.visible?(n.unshiftPhase(new dC),(L=n.getCurrentPhase())==null||L.end()):(this.startCursor.setVisible(!0),(o=this.cursorObj)==null||o.setVisible(!1),this.updateChallengeArrows(this.startCursor.visible)),a=!0):a=!1;else if((l=this.cursorObj)!=null&&l.visible&&!this.startCursor.visible)switch(A){case k.UP:if(this.cursor===0)if(this.scrollCursor===0)if(n.gameMode.challenges.length>R){const C=this.setCursor(R-1),M=this.setScrollCursor(n.gameMode.challenges.length-R);a=C&&M}else a=this.setCursor(n.gameMode.challenges.length-1);else a=this.setScrollCursor(this.scrollCursor-1);else a=this.setCursor(this.cursor-1);a&&this.updateText();break;case k.DOWN:if(this.cursor===R-1)if(this.scrollCursor<n.gameMode.challenges.length-R)a=this.setScrollCursor(this.scrollCursor+1);else{const C=this.setCursor(0),M=this.setScrollCursor(0);a=C&&M}else n.gameMode.challenges.length<R&&this.cursor===n.gameMode.challenges.length-1?a=this.setCursor(0):a=this.setCursor(this.cursor+1);a&&this.updateText();break;case k.LEFT:a=this.getActiveChallenge().decreaseValue(),a&&this.updateText();break;case k.RIGHT:a=this.getActiveChallenge().increaseValue(),a&&this.updateText();break}return a&&s.playSelect(),a}setCursor(A){let s=super.setCursor(A);return this.cursorObj||(this.cursorObj=n.add.nineslice(0,0,"summary_moves_cursor",void 0,this.optionsWidth-8,16,1,1,1,1),this.cursorObj.setOrigin(0,0),this.valuesContainer.add(this.cursorObj)),s||(s=!this.cursorObj.visible),this.cursorObj.setVisible(!0),this.cursorObj.setPositionRelative(this.optionsBg,4,4+(this.cursor+this.scrollCursor)*16),s}setScrollCursor(A){return A===this.scrollCursor?!1:(this.scrollCursor=A,this.setCursor(this.cursor),!0)}getActiveChallenge(){return n.gameMode.challenges[this.cursor+this.scrollCursor]}clear(){super.clear(),this.challengesContainer.setVisible(!1),this.eraseCursor()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};N(um,"GameChallengesUiHandler");let zP=um;const Dm=class Dm extends Phaser.GameObjects.Container{constructor(){super(n,n.game.canvas.width/6,0),this.queue=[],this.playerGender=n.gameData.gender}setup(){this.defaultWidth=200,this.defaultHeight=40,this.bg=n.add.nineslice(0,0,"achv_bar",void 0,this.defaultWidth,this.defaultHeight,41,6,16,4),this.bg.setOrigin(0,0),this.add(this.bg),this.icon=n.add.sprite(4,4,"items"),this.icon.setOrigin(0,0),this.add(this.icon),this.titleText=le(40,3,"",Q.MESSAGE,{fontSize:"72px"}),this.titleText.setOrigin(0,0),this.add(this.titleText),this.scoreText=le(150,3,"",Q.MESSAGE,{fontSize:"72px"}),this.scoreText.setOrigin(1,0),this.add(this.scoreText),this.descriptionText=le(43,16,"",Q.WINDOW_ALT,{fontSize:"72px"}),this.descriptionText.setOrigin(0,0),this.add(this.descriptionText),this.descriptionText.setWordWrapWidth(664),this.descriptionText.setLineSpacing(-5),this.setScale(.5),this.shown=!1}showAchv(A){if(this.shown){this.queue.push(A);return}const s=A.getTier();this.bg.setTexture(`achv_bar${s?`_${s+1}`:""}`),this.icon.setFrame(A.getIconImage()),this.titleText.setText(A.getName(this.playerGender)),this.scoreText.setVisible(A instanceof BA),A instanceof BA?this.descriptionText.setText(f1(A.localizationKey)):A instanceof vT&&this.descriptionText.setText(A.description),A instanceof BA&&this.scoreText.setText(`+${A.score}pt`),this.bg.width=Math.max(this.defaultWidth,this.icon.displayWidth+this.titleText.displayWidth+this.scoreText.displayWidth+16),this.scoreText.x=this.bg.width-2,this.descriptionText.width=this.bg.width-this.icon.displayWidth-16,this.descriptionText.setWordWrapWidth(this.descriptionText.width*6),this.bg.height=Math.max(this.defaultHeight,this.titleText.displayHeight+this.descriptionText.displayHeight+8),this.icon.y=this.bg.height/2-this.icon.height/2,n.playSound("se/achv"),n.tweens.add({targets:this,x:n.game.canvas.width/6-this.bg.width/2,duration:500,ease:"Sine.easeOut"}),n.time.delayedCall(1e4,()=>this.hide(this.playerGender)),this.setVisible(!0),this.shown=!0}hide(A){this.shown&&n.tweens.add({targets:this,x:n.game.canvas.width/6,duration:500,ease:"Sine.easeIn",onComplete:N(()=>{if(this.shown=!1,this.setVisible(!1),this.queue.length){const s=this.queue.shift();s&&this.showAchv(s)}},"onComplete")})}};N(Dm,"AchvBar");let qP=Dm;const i6=-150,xQ=0,r6=0,Mm=class Mm extends Phaser.GameObjects.Container{constructor(){super(n,i6,r6)}setup(){this.defaultWidth=230,this.defaultHeight=100,this.bg=n.add.nineslice(-5,-5,"bgm_bar",void 0,this.defaultWidth,this.defaultHeight,0,0,10,10),this.bg.setOrigin(0,0),this.add(this.bg),this.musicText=le(5,5,"",Q.BGM_BAR),this.musicText.setOrigin(0,0),this.musicText.setWordWrapWidth(650,!0),this.add(this.musicText),this.setVisible(!1),this.shown=!1}setBgmToBgmBar(A){this.musicText.setText(`${u.t("bgmName:music")}${this.getRealBgmName(A)}`),this.musicText.width=this.bg.width-20,this.musicText.setWordWrapWidth(this.defaultWidth*4),this.bg.width=Math.min(this.defaultWidth,this.musicText.displayWidth+23),this.bg.height=Math.min(this.defaultHeight,this.musicText.displayHeight+20),n.fieldUI.bringToTop(this),this.y=r6}toggleBgmBar(A){if(this.musicText.text===""){this.setVisible(!1);return}if(!n.showBgmBar){this.setVisible(!1);return}n.tweens.add({targets:this,x:A?xQ:i6,duration:500,ease:"Sine.easeInOut",onComplete:N(()=>{this.setVisible(!0)},"onComplete")})}getRealBgmName(A){return u.t([`bgmName:${A}`,"bgmName:missing_entries"],{name:Kl(A)})}};N(Mm,"BgmBar");let jP=Mm;const _m=class _m extends Vs{constructor(A=null){super(A),this.buttonContainers=[],this.buttonBgs=[],this.buttonLabels=[]}getButtonTopMargin(){return 0}setup(){const A=this.getUi();this.modalContainer=n.add.container(0,0),this.modalContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,n.game.canvas.width/6,n.game.canvas.height/6),Phaser.Geom.Rectangle.Contains),this.modalBg=Gt(0,0,0,0),this.modalContainer.add(this.modalBg),this.titleText=le(0,4,"",Q.SETTINGS_LABEL),this.titleText.setOrigin(.5,0),this.modalContainer.add(this.titleText),A.add(this.modalContainer);const s=this.getButtonLabels();for(const R of s)this.addButton(R);this.modalContainer.setVisible(!1)}addButton(A){const s=this.getButtonTopMargin(),R=le(0,8,A,Q.TOOLTIP_CONTENT);R.setOrigin(.5,.5);const a=Gt(0,0,R.getBounds().width+8,16,!1,!1,0,0,sO.THIN);a.setOrigin(.5,0),a.setInteractive(new Phaser.Geom.Rectangle(0,0,a.width,a.height),Phaser.Geom.Rectangle.Contains);const i=n.add.container(0,s);this.buttonLabels.push(R),this.buttonBgs.push(a),this.buttonContainers.push(i),i.add(a),i.add(R),this.addInteractionHoverEffect(a),this.modalContainer.add(i)}show(A){if(A.length>=1&&"buttonActions"in A[0]){if(super.show(A),A[0].hasOwnProperty("fadeOut")&&typeof A[0].fadeOut=="function"){const[R,a,i,r]=this.getMargin(),L=n.add.rectangle((this.getWidth()+r+a)/2,(this.getHeight()+R+i)/2,n.game.canvas.width/6,n.game.canvas.height/6,0);L.setOrigin(.5,.5),L.setName("rect-ui-overlay-modal"),L.setAlpha(0),this.modalContainer.add(L),this.modalContainer.moveTo(L,0),n.tweens.add({targets:L,alpha:1,duration:250,ease:"Sine.easeOut",onComplete:A[0].fadeOut})}const s=A[0];this.updateContainer(s),this.modalContainer.setVisible(!0),this.getUi().moveTo(this.modalContainer,this.getUi().length-1);for(let R=0;R<this.buttonBgs.length;R++)R<this.buttonBgs.length&&this.buttonBgs[R].on("pointerdown",a=>s.buttonActions[R]());return!0}return!1}updateContainer(A){const[s,R,a,i]=this.getMargin(A),[r,L]=[this.getWidth(A),this.getHeight(A)];this.modalContainer.setPosition((n.game.canvas.width/6-(r+(R-i)))/2,(-n.game.canvas.height/6-(L+(a-s)))/2),this.modalBg.setSize(r,L);const o=this.getModalTitle(A);this.titleText.setText(o),this.titleText.setX(r/2),this.titleText.setVisible(!!o);for(let l=0;l<this.buttonContainers.length;l++){const C=r/(this.buttonContainers.length+1);this.buttonContainers[l].setPosition(C*(l+1),this.modalBg.height-(this.buttonBgs[l].height+8))}}processInput(A){return!1}clear(){super.clear(),this.modalContainer.setVisible(!1),this.buttonBgs.map(A=>A.off("pointerdown"))}addInteractionHoverEffect(A){A.on("pointerover",()=>{this.setMouseCursorStyle("pointer"),A.setTint(12303291)}),A.on("pointerout",()=>{this.setMouseCursorStyle("default"),A.clearTint()})}};N(_m,"ModalUiHandler");let vr=_m;const Pm=class Pm extends vr{constructor(A=null){super(A),this.editing=!1,this.inputContainers=[],this.inputs=[],this.formLabels=[]}getHeight(A){return 20*this.getInputFieldConfigs().length+(this.getModalTitle()?26:0)+(A!=null&&A.errorMessage?12:0)+this.getButtonTopMargin()+28}getReadableErrorMessage(A){return(A==null?void 0:A.indexOf("connection refused"))>-1?"Could not connect to the server":A}setup(){super.setup();const A=this.getInputFieldConfigs(),s=!!this.getModalTitle();A.length>=1&&this.updateFields(A,s),this.errorMessage=le(10,(s?31:5)+20*(A.length-1)+16+this.getButtonTopMargin(),"",Q.TOOLTIP_CONTENT),this.errorMessage.setColor(this.getTextColor(Q.SUMMARY_PINK)),this.errorMessage.setShadowColor(this.getTextColor(Q.SUMMARY_PINK,!0)),this.errorMessage.setVisible(!1),this.modalContainer.add(this.errorMessage)}updateFields(A,s){this.inputContainers=[],this.inputs=[],this.formLabels=[],A.forEach((R,a)=>{const i=le(10,(s?31:5)+20*a,R.label,Q.TOOLTIP_CONTENT);i.name="formLabel"+a,this.formLabels.push(i),this.modalContainer.add(this.formLabels[this.formLabels.length-1]);const r=n.add.container(70,(s?28:2)+20*a);r.setVisible(!1);const L=Gt(0,0,80,16,!1,!1,0,0,sO.XTHIN),o=R==null?void 0:R.isPassword,l=R==null?void 0:R.isReadOnly,C=p7(4,-2,440,116,Q.TOOLTIP_CONTENT,{type:o?"password":"text",maxLength:o?64:20,readOnly:l});C.setOrigin(0,0),r.add(L),r.add(C),this.inputContainers.push(r),this.modalContainer.add(r),this.inputs.push(C)})}show(A){if(super.show(A)){this.inputContainers.map(R=>R.setVisible(!0));const s=A[0];return this.submitAction=s.buttonActions.length?s.buttonActions[0]:null,this.buttonBgs.length&&(this.buttonBgs[0].off("pointerdown"),this.buttonBgs[0].on("pointerdown",()=>{this.submitAction&&this.submitAction()})),this.modalContainer.y+=24,this.modalContainer.setAlpha(0),this.tween=n.tweens.add({targets:this.modalContainer,duration:st(1e3),ease:"Sine.easeInOut",y:"-=24",alpha:1}),!0}return!1}processInput(A){return A===k.SUBMIT&&this.submitAction?(this.submitAction(),!0):!1}sanitizeInputs(){for(const A of this.inputs)A.text=A.text.trim()}updateContainer(A){super.updateContainer(A),this.errorMessage.setText(this.getReadableErrorMessage((A==null?void 0:A.errorMessage)||"")),this.errorMessage.setVisible(!!this.errorMessage.text)}clear(){super.clear(),this.modalContainer.setVisible(!1),this.inputContainers.map(A=>A.setVisible(!1)),this.submitAction=null,this.tween&&this.tween.remove()}};N(Pm,"FormModalUiHandler");let Ii=Pm;const Gm=class Gm extends Ii{constructor(A=null){super(A),this.buttonGap=10,this.httpUserNotFoundErrorCode=404,this.ERR_REQUIRED_FIELD=s=>s==="username"?`${Kl(s)} is required`:`${Kl(s)} Id is required`,this.SUCCESS_SERVICE_MODE=(s,R)=>`Username and ${s} successfully ${R.toLowerCase()}ed`}getModalTitle(){return"Admin panel"}getWidth(){return this.adminMode===2?180:160}getMargin(){return[0,0,0,0]}getButtonLabels(){switch(this.adminMode){case 0:return["Link Account","Cancel"];case 1:return["Find account","Cancel"];case 2:return["Back to search","Cancel"];default:return["Activate ADMIN","Cancel"]}}getInputFieldConfigs(){const A=[];switch(this.adminMode){case 0:A.push({label:"Username"}),A.push({label:"Discord ID"});break;case 1:A.push({label:"Username"});break;case 2:const s=this.adminResult??{username:"",discordId:"",googleId:"",lastLoggedIn:"",registered:""};A.push({label:"Username",isReadOnly:!0}),A.push({label:"Discord ID",isReadOnly:s.discordId!==""}),A.push({label:"Google ID",isReadOnly:s.googleId!==""}),A.push({label:"Last played",isReadOnly:!0}),A.push({label:"Registered",isReadOnly:!0});break}return A}processInput(A){return A===k.SUBMIT&&this.submitAction?(this.submitAction(),!0):!1}show(A){this.config=A[0],this.adminMode=A[1],this.adminResult=A[2]??{username:"",discordId:"",googleId:"",lastLoggedIn:"",registered:""};const s=A[3],R=this.getInputFieldConfigs(),a=!!this.getModalTitle();this.updateFields(R,a),this.updateContainer(this.config);const i=this.getButtonLabels();for(let r=0;r<i.length;r++)this.buttonLabels[r].setText(i[r]);if(this.errorMessage.setPosition(10,(a?31:5)+20*(R.length-1)+16+this.getButtonTopMargin()),s?(this.errorMessage.setColor(this.getTextColor(Q.SUMMARY_PINK)),this.errorMessage.setShadowColor(this.getTextColor(Q.SUMMARY_PINK,!0))):(this.errorMessage.setColor(this.getTextColor(Q.SUMMARY_GREEN)),this.errorMessage.setShadowColor(this.getTextColor(Q.SUMMARY_GREEN,!0))),super.show(A)){this.populateFields(this.adminMode,this.adminResult);const r=this.submitAction;return this.submitAction=L=>{this.submitAction=r;const o=this.convertInputsToAdmin(),l=this.areFieldsValid(this.adminMode);if(l.error)return n.ui.setMode(Ie.LOADING,{buttonActions:[]}),this.showMessage(l.errorMessage??"",o,!0);n.ui.setMode(Ie.LOADING,{buttonActions:[]}),this.adminMode===0?this.adminLinkUnlink(o,"discord","Link").then(C=>C.error?this.showMessage(C.errorType,o,!0):this.showMessage(this.SUCCESS_SERVICE_MODE("discord","link"),o,!1)):this.adminMode===1?this.adminSearch(o).then(C=>{if(C.error)return this.showMessage(C.errorType,o,!0);this.updateAdminPanelInfo(C.adminSearchResult??o)}):this.adminMode===2&&this.updateAdminPanelInfo(o,1)},!0}return!1}showMessage(A,s,R){n.ui.setMode(Ie.ADMIN,Object.assign(this.config,{errorMessage:A==null?void 0:A.trim()}),this.adminMode,s,R),R?n.ui.playError():n.ui.playSelect()}populateFields(A,s){switch(A){case 0:this.inputs[0].setText(s.username),this.inputs[1].setText(s.discordId);break;case 1:this.inputs[0].setText(s.username);break;case 2:Object.keys(s).forEach((R,a)=>{if(this.inputs[a].setText(s[R]),R==="discordId"||R==="googleId"){const i=this.inputContainers[a].list.find(L=>L.type==="NineSlice"),r=n.add.image(this.inputContainers[a].x+i.width+this.buttonGap,this.inputContainers[a].y+Math.floor(i.height/2),s[R]===""?"link_icon":"unlink_icon");r.setName(`adminBtn_${R}`),r.setOrigin(.5,.5),r.setInteractive(),r.on("pointerdown",()=>{const L=R.toLowerCase().replace("id",""),o=s[R]===""?"Link":"Unlink",l=this.areFieldsValid(this.adminMode,L);if(l.error)return n.ui.setMode(Ie.LOADING,{buttonActions:[]}),this.showMessage(l.errorMessage??"",s,!0);this.adminLinkUnlink(this.convertInputsToAdmin(),L,o).then(C=>{if(C.error)return n.ui.setMode(Ie.LOADING,{buttonActions:[]}),this.showMessage(C.errorType,s,!0);n.ui.setMode(Ie.LOADING,{buttonActions:[]}),this.adminSearch(s).then(M=>M.error?this.showMessage(M.errorType,s,!0):this.showMessage(this.SUCCESS_SERVICE_MODE(L,o),M.adminSearchResult??s,!1))})}),this.addInteractionHoverEffect(r),this.modalContainer.add(r)}});break}}areFieldsValid(A,s){switch(A){case 0:if(!this.inputs[0].text)return{error:!0,errorMessage:this.ERR_REQUIRED_FIELD("username")};if(!this.inputs[1].text)return{error:!0,errorMessage:this.ERR_REQUIRED_FIELD("discord")};break;case 1:if(!this.inputs[0].text)return{error:!0,errorMessage:this.ERR_REQUIRED_FIELD("username")};break;case 2:if(!this.inputs[1].text&&s==="discord")return{error:!0,errorMessage:this.ERR_REQUIRED_FIELD(s)};if(!this.inputs[2].text&&s==="google")return{error:!0,errorMessage:this.ERR_REQUIRED_FIELD(s)};break}return{error:!1}}convertInputsToAdmin(){var A,s,R,a,i,r,L,o,l;return{username:(A=this.inputs[0])!=null&&A.node?this.inputs[0].text:"",discordId:(s=this.inputs[1])!=null&&s.node?(R=this.inputs[1])==null?void 0:R.text:"",googleId:(a=this.inputs[2])!=null&&a.node?(i=this.inputs[2])==null?void 0:i.text:"",lastLoggedIn:(r=this.inputs[3])!=null&&r.node?(L=this.inputs[3])==null?void 0:L.text:"",registered:(o=this.inputs[4])!=null&&o.node?(l=this.inputs[4])==null?void 0:l.text:""}}async adminSearch(A){try{const[s,R]=await TO.admin.searchAccount({username:A.username});return R||!s?{adminSearchResult:A,error:!0,errorType:R}:{adminSearchResult:s,error:!1}}catch(s){return console.error(s),{error:!0,errorType:s}}}async adminLinkUnlink(A,s,R){try{let a=null;return s==="discord"?R==="Link"?a=await TO.admin.linkAccountToDiscord({discordId:A.discordId,username:A.username}):R==="Unlink"?a=await TO.admin.unlinkAccountFromDiscord({discordId:A.discordId,username:A.username}):console.warn("Unknown mode",R,"for service",s):s==="google"?R==="Link"?a=await TO.admin.linkAccountToGoogleId({googleId:A.googleId,username:A.username}):R==="Unlink"?a=await TO.admin.unlinkAccountFromGoogleId({googleId:A.googleId,username:A.username}):console.warn("Unknown mode",R,"for service",s):console.warn("Unknown service",s),a?{adminSearchResult:A,error:!0,errorType:a}:{adminSearchResult:A,error:!1}}catch(a){return console.error(a),{error:!0,errorType:a}}}updateAdminPanelInfo(A,s){s=s??2,n.ui.setMode(Ie.ADMIN,{buttonActions:[()=>{n.ui.revertMode(),n.ui.revertMode()},()=>{n.ui.revertMode(),n.ui.revertMode()}]},s,A)}clear(){super.clear();const A=["formLabel","adminBtn"],s=[],R=this.modalContainer.list;for(let a=R.length-1;a>=0;a--)(A.some(i=>R[a].name.includes(i))||R[a].type==="Container"&&R[a].list.find(i=>i.type==="rexInputText"))&&s.push(R[a]);for(;s.length>0;)this.modalContainer.remove(s.pop(),!0)}};N(Gm,"AdminUiHandler");let eG=Gm;var lI=(E=>(E[E.GAME_SETTINGS=0]="GAME_SETTINGS",E[E.ACHIEVEMENTS=1]="ACHIEVEMENTS",E[E.STATS=2]="STATS",E[E.RUN_HISTORY=3]="RUN_HISTORY",E[E.EGG_LIST=4]="EGG_LIST",E[E.EGG_GACHA=5]="EGG_GACHA",E[E.MANAGE_DATA=6]="MANAGE_DATA",E[E.COMMUNITY=7]="COMMUNITY",E[E.SAVE_AND_QUIT=8]="SAVE_AND_QUIT",E[E.LOG_OUT=9]="LOG_OUT",E))(lI||{});let L6="https://wiki.pokerogue.net/start";const bQ="https://discord.gg/uWpTfdKG49",kQ="https://github.com/pagefaultgames/pokerogue",ZQ="https://www.reddit.com/r/pokerogue",XQ="https://github.com/sponsors/pagefaultgames",cm=class cm extends vs{constructor(A=null){super(A),this.textPadding=8,this.defaultMessageBoxWidth=220,this.defaultWordWrapWidth=1224,this.scale=.1666666667,this.excludedMenus=()=>[{condition:[Ie.COMMAND,Ie.TITLE].includes(A??Ie.TITLE),options:[5,4]},{condition:Us,options:[9]}],this.menuOptions=lO(lI).map(s=>parseInt(lI[s])).filter(s=>!this.excludedMenus().some(R=>R.condition&&R.options.includes(s)))}setup(){var R;const A=this.getUi(),s=(R=u.resolvedLanguage)==null?void 0:R.substring(0,2);["de","fr","ko","zh"].includes(s)&&(L6=`https://wiki.pokerogue.net/${s}:start`),this.bgmBar=new jP,this.bgmBar.setup(),A.bgmBar=this.bgmBar,this.menuContainer=n.add.container(1,-(n.game.canvas.height/6)+1),this.menuContainer.setName("menu"),this.menuContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,n.game.canvas.width/6,n.game.canvas.height/6),Phaser.Geom.Rectangle.Contains),this.menuOverlay=new Phaser.GameObjects.Rectangle(n,-1,-1,n.scaledCanvas.width,n.scaledCanvas.height,16777215,.3),this.menuOverlay.setName("menu-overlay"),this.menuOverlay.setOrigin(0,0),this.menuContainer.add(this.menuOverlay),this.menuContainer.add(this.bgmBar),this.menuContainer.setVisible(!1)}render(){const A=this.getUi();this.excludedMenus=()=>[{condition:n.getCurrentPhase()instanceof _O,options:[5]},{condition:Us,options:[9]}],this.menuOptions=lO(lI).map(r=>parseInt(lI[r])).filter(r=>!this.excludedMenus().some(L=>L.condition&&L.options.includes(r))),this.optionSelectText=le(0,0,this.menuOptions.map(r=>`${u.t(`menuUiHandler:${lI[r]}`)}`).join(`
`),Q.WINDOW,{maxLines:this.menuOptions.length}),this.optionSelectText.setLineSpacing(12),this.scale=Hn(Q.WINDOW,n.uiTheme).scale,this.menuBg=Gt(n.game.canvas.width/6-(this.optionSelectText.displayWidth+25),0,this.optionSelectText.displayWidth+19+24*this.scale,n.game.canvas.height/6-2),this.menuBg.setOrigin(0,0),this.optionSelectText.setPositionRelative(this.menuBg,10+24*this.scale,6),this.menuContainer.add(this.menuBg),this.menuContainer.add(this.optionSelectText),A.add(this.menuContainer),this.menuMessageBoxContainer=n.add.container(0,130),this.menuMessageBoxContainer.setName("menu-message-box"),this.menuMessageBoxContainer.setVisible(!1),this.menuMessageBox=Gt(0,0,this.defaultMessageBoxWidth,48),this.menuMessageBox.setOrigin(0,0),this.menuMessageBoxContainer.add(this.menuMessageBox),this.dialogueMessageBox=Gt(-this.textPadding,0,n.game.canvas.width/6+this.textPadding*2,49,!1,!1,0,0,sO.THIN),this.dialogueMessageBox.setOrigin(0,0),this.menuMessageBoxContainer.add(this.dialogueMessageBox);const s=le(this.textPadding,this.textPadding,"",Q.WINDOW,{maxLines:2});s.setName("menu-message"),s.setOrigin(0,0),this.menuMessageBoxContainer.add(s),this.initTutorialOverlay(this.menuContainer),this.initPromptSprite(this.menuMessageBoxContainer),this.message=s,this.setDialogTestMode(!1),this.menuContainer.add(this.menuMessageBoxContainer);const R=[],a=N((r,L,o)=>{A.revertMode(),A.showText(r,null,()=>{const l={options:new Array(5).fill(null).map((C,M)=>M).filter(L).map(C=>({label:u.t("menuUiHandler:slot",{slotNumber:C+1}),handler:N(()=>(o(C),A.revertMode(),A.showText("",0),!0),"handler")})).concat([{label:u.t("menuUiHandler:cancel"),handler:N(()=>(A.revertMode(),A.showText("",0),!0),"handler")}]),xOffset:98};A.setOverlayMode(Ie.MENU_OPTION_SELECT,l)})},"confirmSlot");(Or||YM)&&R.push({label:u.t("menuUiHandler:importSession"),handler:N(()=>(a(u.t("menuUiHandler:importSlotSelect"),()=>!0,r=>n.gameData.importData(uE.SESSION,r)),!0),"handler"),keepOpen:!0}),R.push({label:u.t("menuUiHandler:exportSession"),handler:N(()=>{const r=[];return Promise.all(new Array(5).fill(null).map((L,o)=>{const l=o;return n.gameData.getSession(l).then(C=>{C&&r.push(l)})})).then(()=>{a(u.t("menuUiHandler:exportSlotSelect"),L=>r.indexOf(L)>-1,L=>n.gameData.tryExportData(uE.SESSION,L))}),!0},"handler"),keepOpen:!0}),R.push({label:u.t("menuUiHandler:importRunHistory"),handler:N(()=>(n.gameData.importData(uE.RUN_HISTORY),!0),"handler"),keepOpen:!0}),R.push({label:u.t("menuUiHandler:exportRunHistory"),handler:N(()=>(n.gameData.tryExportData(uE.RUN_HISTORY),!0),"handler"),keepOpen:!0}),(Or||YM)&&R.push({label:u.t("menuUiHandler:importData"),handler:N(()=>(A.revertMode(),n.gameData.importData(uE.SYSTEM),!0),"handler"),keepOpen:!0}),R.push({label:u.t("menuUiHandler:exportData"),handler:N(()=>(n.gameData.tryExportData(uE.SYSTEM),!0),"handler"),keepOpen:!0},{label:u.t("menuUiHandler:consentPreferences"),handler:N(()=>{const r=document.querySelector(".termly-display-preferences"),L=new MouseEvent("click",{view:window,bubbles:!0,cancelable:!0});return r.dispatchEvent(L),r.focus(),!0},"handler"),keepOpen:!0}),(Or||YM)&&R.push({label:"Test Dialogue",handler:N(()=>{A.playSelect();const r="",L={};return L.buttonActions=[o=>{A.revertMode(),A.playSelect();const C=decodeURIComponent(escape(atob(o))),M=A.getHandler();M.tutorialActive=!0;const D={},_=C.split(" "),P=_[0],h=RegExp("\\{\\{(\\w*)\\}\\}","g"),H=u.t(P).match(h)??[];if(H.length>0)for(let d=0;d<H.length;d++)typeof _[d+1]<"u"&&(D[H[d].replace(/\W/g,"")]=u.t(_[d+1]));this.setDialogTestMode(!0),A.showText(String(u.t(P,D)),null,()=>n.ui.showText("",0,()=>{M.tutorialActive=!1,this.setDialogTestMode(!1)}),null,!0)},()=>{A.revertMode()}],A.setMode(Ie.TEST_DIALOGUE,L,r),!0},"handler"),keepOpen:!0}),R.push({label:u.t("menuUiHandler:cancel"),handler:N(()=>(n.ui.revertMode(),!0),"handler"),keepOpen:!0}),this.manageDataConfig={xOffset:98,options:R,maxOptions:7};const i=[{label:"Wiki",handler:N(()=>{var r;return(r=window.open(L6,"_blank"))==null||r.focus(),!0},"handler"),keepOpen:!0},{label:"Discord",handler:N(()=>{var r;return(r=window.open(bQ,"_blank"))==null||r.focus(),!0},"handler"),keepOpen:!0},{label:"GitHub",handler:N(()=>{var r;return(r=window.open(kQ,"_blank"))==null||r.focus(),!0},"handler"),keepOpen:!0},{label:"Reddit",handler:N(()=>{var r;return(r=window.open(ZQ,"_blank"))==null||r.focus(),!0},"handler"),keepOpen:!0},{label:u.t("menuUiHandler:donate"),handler:N(()=>{var r;return(r=window.open(XQ,"_blank"))==null||r.focus(),!0},"handler"),keepOpen:!0}];i.push({label:u.t("menuUiHandler:cancel"),handler:N(()=>(n.ui.revertMode(),!0),"handler")}),this.communityConfig={xOffset:98,options:i},this.setCursor(0)}show(A){return this.render(),super.show(A),this.menuOptions=lO(lI).map(s=>parseInt(lI[s])).filter(s=>!this.excludedMenus().some(R=>R.condition&&R.options.includes(s))),this.menuContainer.setVisible(!0),this.setCursor(0),this.getUi().moveTo(this.menuContainer,this.getUi().length-1),this.getUi().hideTooltip(),n.playSound("ui/menu_open"),this.menuContainer.bringToTop(this.tutorialOverlay),this.menuContainer.bringToTop(this.menuMessageBoxContainer),VI(tO.Menu),this.bgmBar.toggleBgmBar(!0),!0}processInput(A){const s=this.getUi();let R=!1,a=!1;if(A===k.ACTION){let i=this.cursor;const r=this.excludedMenus().find(L=>L.condition);if(r!==void 0&&r.options!==void 0&&r.options.length>0){const L=r.options.sort();for(const o of L)if(i>=o)i++;else break}switch(this.showText("",0),i){case 0:s.setOverlayMode(Ie.SETTINGS),R=!0;break;case 1:s.setOverlayMode(Ie.ACHIEVEMENTS),R=!0;break;case 2:s.setOverlayMode(Ie.GAME_STATS),R=!0;break;case 3:s.setOverlayMode(Ie.RUN_HISTORY),R=!0;break;case 4:n.gameData.eggs.length?(s.revertMode(),s.setOverlayMode(Ie.EGG_LIST),R=!0):(s.showText(u.t("menuUiHandler:noEggs"),null,()=>s.showText(""),st(1500)),a=!0);break;case 5:s.revertMode(),s.setOverlayMode(Ie.EGG_GACHA),R=!0;break;case 6:s.setOverlayMode(Ie.MENU_OPTION_SELECT,this.manageDataConfig),R=!0;break;case 7:s.setOverlayMode(Ie.MENU_OPTION_SELECT,this.communityConfig),R=!0;break;case 8:if(n.currentBattle){R=!0;const o=N(()=>{s.setMode(Ie.LOADING,{buttonActions:[],fadeOut:N(()=>n.gameData.saveAll(!0,!0,!0,!0).then(()=>{n.reset(!0)}),"fadeOut")})},"doSaveQuit");n.currentBattle.turn>1?s.showText(u.t("menuUiHandler:losingProgressionWarning"),null,()=>{if(!this.active){this.showText("",0);return}s.setOverlayMode(Ie.CONFIRM,o,()=>{s.revertMode(),this.showText("",0)},!1,-98)}):o()}else a=!0;break;case 9:R=!0;const L=N(()=>{s.setMode(Ie.LOADING,{buttonActions:[],fadeOut:N(()=>TO.account.logout().then(()=>{ka().then(()=>n.reset(!0,!0))}),"fadeOut")})},"doLogout");n.currentBattle?s.showText(u.t("menuUiHandler:losingProgressionWarning"),null,()=>{if(!this.active){this.showText("",0);return}s.setOverlayMode(Ie.CONFIRM,L,()=>{s.revertMode(),this.showText("",0)},!1,-98)}):L();break}}else if(A===k.CANCEL)R=!0,s.revertMode().then(i=>{i||s.setMode(Ie.MESSAGE)});else switch(A){case k.UP:this.cursor?R=this.setCursor(this.cursor-1):R=this.setCursor(this.menuOptions.length-1);break;case k.DOWN:this.cursor+1<this.menuOptions.length?R=this.setCursor(this.cursor+1):R=this.setCursor(0);break}return R?s.playSelect():a&&s.playError(),R||a}setDialogTestMode(A){this.menuMessageBox.setVisible(!A),this.dialogueMessageBox.setVisible(A),this.message.setWordWrapWidth(A?n.ui.getMessageHandler().wordWrapWidth:this.defaultWordWrapWidth),this.message.setX(A?this.textPadding+1:this.textPadding),this.message.setY(A?this.textPadding+.4:this.textPadding)}showText(A,s,R,a,i,r){this.menuMessageBoxContainer.setVisible(!!A),super.showText(A,s,R,a,i,r)}setCursor(A){const s=super.setCursor(A);return this.cursorObj||(this.cursorObj=n.add.image(0,0,"cursor"),this.cursorObj.setOrigin(0,0),this.menuContainer.add(this.cursorObj)),this.cursorObj.setScale(this.scale*6),this.cursorObj.setPositionRelative(this.menuBg,7,6+(18+this.cursor*96)*this.scale),s}clear(){super.clear(),this.menuContainer.setVisible(!1),this.bgmBar.toggleBgmBar(!1),this.eraseCursor()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};N(cm,"MenuUiHandler");let tG=cm;const QQ={de:{TextSize:"80px"}},hm=class hm extends vs{constructor(A=null){super(A),this.ROWS=4,this.COLS=17,this.achvsTotal=Object.keys(Ct).length,this.vouchersTotal=Object.keys(is).length,this.scrollCursor=0}setup(){var _;const A=this.getUi();this.mainContainer=n.add.container(1,-(n.game.canvas.height/6)+1),this.mainContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,n.game.canvas.width/6,n.game.canvas.height/6),Phaser.Geom.Rectangle.Contains),this.headerBg=Gt(0,0,n.game.canvas.width/6-2,24),this.headerBg.setOrigin(0,0),this.headerText=le(0,0,"",Q.SETTINGS_LABEL),this.headerText.setOrigin(0,0),this.headerText.setPositionRelative(this.headerBg,8,4),this.headerActionButton=new Phaser.GameObjects.Sprite(n,0,0,"keyboard","ACTION.png"),this.headerActionButton.setOrigin(0,0),this.headerActionButton.setPositionRelative(this.headerBg,236,6),this.headerActionText=le(0,0,"",Q.WINDOW,{fontSize:"60px"}),this.headerActionText.setOrigin(0,0),this.headerActionText.setPositionRelative(this.headerBg,264,8);const s=n.gameData.gender??Vt.MALE,R=Vt[s].toLowerCase();this.achvsName=u.t("achv:Achievements.name",{context:R}),this.vouchersName=u.t("voucher:vouchers"),this.iconsBg=Gt(0,this.headerBg.height,n.game.canvas.width/6-2,n.game.canvas.height/6-this.headerBg.height-68),this.iconsBg.setOrigin(0,0);const a=6;this.scrollBar=new ZI(this.iconsBg.width-9,this.iconsBg.y+a,4,this.iconsBg.height-a*2,this.ROWS),this.iconsContainer=n.add.container(5,this.headerBg.height+8),this.icons=[];for(let P=0;P<this.ROWS*this.COLS;P++){const h=P%this.COLS*18,H=Math.floor(P/this.COLS)*18,d=n.add.sprite(h,H,"items","unknown");d.setOrigin(0,0),d.setScale(.5),this.icons.push(d),this.iconsContainer.add(d)}const i=Gt(0,this.headerBg.height+this.iconsBg.height,174,24);i.setOrigin(0,0),this.titleBg=i,this.titleText=le(0,0,"",Q.WINDOW);const r=((_=QQ[u.language])==null?void 0:_.TextSize)??this.titleText.style.fontSize;this.titleText.setFontSize(r);const L=i.x+i.width/2,o=i.y+i.height/2;this.titleText.setOrigin(.5,.5),this.titleText.setPosition(L,o),this.scoreContainer=n.add.container(i.x+i.width,i.y);const l=Gt(0,0,46,24);l.setOrigin(0,0),this.scoreContainer.add(l),this.scoreText=le(l.width/2,l.height/2,"",Q.WINDOW),this.scoreText.setOrigin(.5,.5),this.scoreContainer.add(this.scoreText);const C=Gt(this.scoreContainer.x+l.width,i.y,98,24);C.setOrigin(0,0),this.unlockText=le(0,0,"",Q.WINDOW),this.unlockText.setOrigin(.5,.5),this.unlockText.setPositionRelative(C,C.width/2,C.height/2);const M=Gt(0,i.y+i.height,n.game.canvas.width/6-2,42);M.setOrigin(0,0);const D=le(0,0,"",Q.WINDOW,{maxLines:2});D.setWordWrapWidth(1870),D.setOrigin(0,0),D.setPositionRelative(M,8,4),this.message=D,this.mainContainer.add(this.headerBg),this.mainContainer.add(this.headerActionButton),this.mainContainer.add(this.headerText),this.mainContainer.add(this.headerActionText),this.mainContainer.add(this.iconsBg),this.mainContainer.add(this.scrollBar),this.mainContainer.add(this.iconsContainer),this.mainContainer.add(i),this.mainContainer.add(this.titleText),this.mainContainer.add(this.scoreContainer),this.mainContainer.add(C),this.mainContainer.add(this.unlockText),this.mainContainer.add(M),this.mainContainer.add(D),A.add(this.mainContainer),this.currentPage=0,this.mainContainer.setVisible(!1)}show(A){return super.show(A),this.headerBgX=this.headerBg.getTopRight().x,this.updateAchvIcons(),this.mainContainer.setVisible(!0),this.setCursor(0),this.setScrollCursor(0),this.scrollBar.setTotalRows(Math.ceil(this.currentTotal/this.COLS)),this.scrollBar.setScrollCursor(0),this.getUi().moveTo(this.mainContainer,this.getUi().length-1),this.getUi().hideTooltip(),!0}showAchv(A){const s=n.gameData.gender??Vt.MALE,R=Vt[s].toLowerCase();A.name=u.t(`achv:${A.localizationKey}.name`,{context:R}),A.description=f1(A.localizationKey);const a=n.gameData.achvUnlocks,i=a.hasOwnProperty(A.id),r=!i&&A.secret&&(!A.parentId||!a.hasOwnProperty(A.parentId));this.titleText.setText(i?A.name:"???"),this.showText(r?"":A.description),this.scoreText.setText(`${A.score}pt`),this.unlockText.setText(i?new Date(a[A.id]).toLocaleDateString():u.t("achv:Locked.name"))}showVoucher(A){const s=n.gameData.voucherUnlocks,R=s.hasOwnProperty(A.id);this.titleText.setText(Xl(A.voucherType)),this.showText(A.description),this.unlockText.setText(R?new Date(s[A.id]).toLocaleDateString():u.t("voucher:locked"))}processInput(A){const s=this.getUi();let R=!1;if(A===k.ACTION&&(R=!0,this.setScrollCursor(0),this.currentPage===0?(this.currentPage=1,this.updateVoucherIcons()):this.currentPage===1&&(this.currentPage=0,this.updateAchvIcons()),this.setCursor(0,!0),this.scrollBar.setTotalRows(Math.ceil(this.currentTotal/this.COLS)),this.scrollBar.setScrollCursor(0),this.mainContainer.update()),A===k.CANCEL)R=!0,n.ui.revertMode();else{const a=Math.floor(this.cursor/this.COLS),i=this.scrollCursor*this.COLS;switch(A){case k.UP:if(this.cursor<this.COLS)if(this.scrollCursor)R=this.setScrollCursor(this.scrollCursor-1);else{R=this.setScrollCursor(Math.ceil(this.currentTotal/this.COLS)-this.ROWS);let L=this.cursor+(this.ROWS-1)*this.COLS;L>this.currentTotal-this.scrollCursor*this.COLS-1&&(L-=this.COLS),R=R&&this.setCursor(L)}else R=this.setCursor(this.cursor-this.COLS);break;case k.DOWN:const r=i+1<this.currentTotal;a>=this.ROWS-1?this.scrollCursor<Math.ceil(this.currentTotal/this.COLS)-this.ROWS&&r?R=this.setScrollCursor(this.scrollCursor+1):R=this.setScrollCursor(0)&&this.setCursor(this.cursor%this.COLS):r&&(R=this.setCursor(Math.min(this.cursor+this.COLS,this.currentTotal-i-1)));break;case k.LEFT:this.cursor%this.COLS===0?R=this.setCursor(Math.min(this.cursor+this.COLS-1,this.currentTotal-i-1)):R=this.setCursor(this.cursor-1);break;case k.RIGHT:(this.cursor+1)%this.COLS===0||this.cursor+i===this.currentTotal-1?R=this.setCursor(this.cursor-this.cursor%this.COLS):R=this.setCursor(this.cursor+1);break}}return R&&s.playSelect(),R}setCursor(A,s){const R=super.setCursor(A);let a=R;if(this.cursorObj||(this.cursorObj=n.add.nineslice(0,0,"select_cursor_highlight",void 0,16,16,1,1,1,1),this.cursorObj.setOrigin(0,0),this.iconsContainer.add(this.cursorObj),a=!0),this.cursorObj.setPositionRelative(this.icons[this.cursor],0,0),a||s)switch(this.currentPage){case 0:s&&(this.titleBg.width=174,this.titleText.x=this.titleBg.width/2,this.scoreContainer.setVisible(!0)),this.showAchv(Ct[Object.keys(Ct)[A+this.scrollCursor*this.COLS]]);break;case 1:s&&(this.titleBg.width=220,this.titleText.x=this.titleBg.width/2,this.scoreContainer.setVisible(!1)),this.showVoucher(is[Object.keys(is)[A+this.scrollCursor*this.COLS]]);break}return R}setScrollCursor(A){if(A===this.scrollCursor)return!1;this.scrollCursor=A,this.scrollBar.setScrollCursor(this.scrollCursor);const s=Math.min(this.cursor,this.currentTotal-this.scrollCursor*this.COLS-1);switch(s!==this.cursor&&this.setCursor(s),this.currentPage){case 0:this.updateAchvIcons(),this.showAchv(Ct[Object.keys(Ct)[this.cursor+this.scrollCursor*this.COLS]]);break;case 1:this.updateVoucherIcons(),this.showVoucher(is[Object.keys(is)[this.cursor+this.scrollCursor*this.COLS]]);break}return!0}updateAchvIcons(){this.headerText.text=this.achvsName,this.headerActionText.text=this.vouchersName;const A=this.headerBgX-this.headerActionText.displayWidth-8;this.headerActionText.setX(A),this.headerActionButton.setX(A-this.headerActionButton.displayWidth-4);const s=n.gameData.achvUnlocks,R=this.scrollCursor*this.COLS,a=this.ROWS*this.COLS,i=Object.values(Ct).slice(R,a+R);i.forEach((r,L)=>{const o=this.icons[L],l=s.hasOwnProperty(r.id),C=!l&&r.secret&&(!r.parentId||!s.hasOwnProperty(r.parentId)),M=!C&&!l;o.setFrame(C?"unknown":r.iconImage),o.setVisible(!0),M?o.setTintFill(0):o.clearTint()}),i.length<this.icons.length&&this.icons.slice(i.length).map(r=>r.setVisible(!1)),this.currentTotal=this.achvsTotal}updateVoucherIcons(){this.headerText.text=this.vouchersName,this.headerActionText.text=this.achvsName;const A=this.headerBgX-this.headerActionText.displayWidth-8;this.headerActionText.setX(A),this.headerActionButton.setX(A-this.headerActionButton.displayWidth-4);const s=n.gameData.voucherUnlocks,R=this.scrollCursor*this.COLS,a=this.ROWS*this.COLS,i=Object.values(is).slice(R,a+R);i.forEach((r,L)=>{const o=this.icons[L],l=s.hasOwnProperty(r.id);o.setFrame(wn(r.voucherType)),o.setVisible(!0),l?o.clearTint():o.setTintFill(0)}),i.length<this.icons.length&&this.icons.slice(i.length).map(r=>r.setVisible(!1)),this.currentTotal=this.vouchersTotal}clear(){super.clear(),this.currentPage=0,this.mainContainer.setVisible(!1),this.setScrollCursor(0),this.setCursor(0,!0),this.eraseCursor()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};N(hm,"AchvsUiHandler");let AG=hm;const Hm=class Hm extends sS{constructor(A=Ie.OPTION_SELECT){super(A)}getWindowWidth(){return 64}};N(Hm,"OptionSelectUiHandler");let CS=Hm;const dm=class dm extends Vs{constructor(){super(Ie.EGG_HATCH_SCENE),this.eventTarget=new EventTarget}setup(){this.eggHatchContainer=n.add.container(0,-n.game.canvas.height/6),n.fieldUI.add(this.eggHatchContainer);const A=n.anims.generateFrameNames("egg_lightrays",{start:0,end:3});n.anims.exists("egg_lightrays")||n.anims.create({key:"egg_lightrays",frames:A,frameRate:32})}show(A){return super.show(A),this.getUi().showText("",0),n.setModifiersVisible(!1),!0}processInput(A){if(A===k.ACTION||A===k.CANCEL){const s=n.getCurrentPhase();if(s instanceof _C&&s.trySkip())return!0}return n.ui.getMessageHandler().processInput(A)}setCursor(A){return!1}clear(){super.clear(),this.eggHatchContainer.removeAll(!0),this.getUi().hideTooltip()}};N(dm,"EggHatchSceneHandler");let EG=dm;const fm=class fm{constructor(A,s,R){this.handler=A,this.ROWS=s,this.COLUMNS=R,this.scrollCursor=0,this.cursor=0,this.totalElements=s*R}withScrollBar(A){return this.scrollBar=A,this.scrollBar.setTotalRows(Math.ceil(this.totalElements/this.COLUMNS)),this}withUpdateGridCallBack(A){return this.updateGridCallback=A,this}withUpdateSingleElementCallback(A){return this.updateDetailsCallback=A,this}setTotalElements(A){this.totalElements=A,this.scrollBar&&this.scrollBar.setTotalRows(Math.ceil(this.totalElements/this.COLUMNS)),this.setScrollCursor(0)}getItemOffset(){return this.scrollCursor*this.COLUMNS}processInput(A){let s=!1;const R=Math.min(this.ROWS,Math.ceil(this.totalElements/this.COLUMNS)),a=Math.max(0,Math.ceil(this.totalElements/this.COLUMNS)-R),i=Math.floor(this.cursor/this.COLUMNS),r=this.cursor%this.COLUMNS,L=this.scrollCursor*this.COLUMNS,o=Math.min(this.totalElements-1,this.totalElements-a*this.COLUMNS-1);switch(A){case k.UP:if(i>0)s=this.setCursor(this.cursor-this.COLUMNS);else if(this.scrollCursor>0)s=this.setScrollCursor(this.scrollCursor-1);else{let l=this.cursor+(R-1)*this.COLUMNS;l>o&&(l-=this.COLUMNS),s=this.setScrollCursor(a,l)}break;case k.DOWN:i<R-1?s=this.setCursor(Math.min(this.cursor+this.COLUMNS,this.totalElements-L-1)):this.scrollCursor<a?s=this.setScrollCursor(this.scrollCursor+1):s=this.setScrollCursor(0,this.cursor%this.COLUMNS);break;case k.LEFT:r>0?s=this.setCursor(this.cursor-1):this.scrollCursor===a&&i===R-1?s=this.setCursor(o):s=this.setCursor(this.cursor+this.COLUMNS-1);break;case k.RIGHT:r<this.COLUMNS-1&&this.cursor+L<this.totalElements-1?s=this.setCursor(this.cursor+1):s=this.setCursor(this.cursor-r);break}return s}reset(){this.setScrollCursor(0),this.setCursor(0)}setCursor(A){return this.cursor=A,this.handler.setCursor(A)}setScrollCursor(A,s){const R=A!==this.scrollCursor;R&&(this.scrollCursor=A,this.scrollBar&&this.scrollBar.setScrollCursor(A),this.updateGridCallback&&this.updateGridCallback());let a=!1;const i=this.cursor+this.scrollCursor*this.COLUMNS;return s!==void 0?a=this.setCursor(s):i>=this.totalElements?a=this.setCursor(this.totalElements-this.scrollCursor*this.COLUMNS-1):R&&this.updateDetailsCallback&&this.updateDetailsCallback(i),R||a}};N(fm,"ScrollableGridUiHandler");let ZC=fm;const Bm=class Bm extends vs{constructor(){super(Ie.EGG_LIST),this.ROWS=9,this.COLUMNS=11}setup(){const A=this.getUi();this.eggListContainer=n.add.container(0,-n.game.canvas.height/6),this.eggListContainer.setVisible(!1),A.add(this.eggListContainer);const s=n.add.rectangle(0,0,n.game.canvas.width/6,n.game.canvas.height/6,26720);s.setOrigin(0,0),this.eggListContainer.add(s);const R=n.add.image(0,0,"egg_list_bg");R.setOrigin(0,0),this.eggListContainer.add(R),this.eggListContainer.add(Gt(1,85,106,22)),this.eggListContainer.add(Gt(1,102,106,50,!0)),this.eggListContainer.add(Gt(1,147,106,32,!0)),this.eggListContainer.add(Gt(107,1,212,178)),this.iconAnimHandler=new cr,this.iconAnimHandler.setup(),this.eggNameText=le(8,68,"",Q.SUMMARY),this.eggNameText.setOrigin(0,0),this.eggListContainer.add(this.eggNameText),this.eggDateText=le(8,91,"",Q.TOOLTIP_CONTENT),this.eggListContainer.add(this.eggDateText),this.eggHatchWavesText=le(8,108,"",Q.TOOLTIP_CONTENT),this.eggHatchWavesText.setWordWrapWidth(540),this.eggListContainer.add(this.eggHatchWavesText),this.eggGachaInfoText=le(8,152,"",Q.TOOLTIP_CONTENT),this.eggGachaInfoText.setWordWrapWidth(540),this.eggListContainer.add(this.eggGachaInfoText),this.eggListIconContainer=n.add.container(113,5),this.eggListContainer.add(this.eggListIconContainer),this.cursorObj=n.add.image(0,0,"select_cursor"),this.cursorObj.setOrigin(0,0),this.eggListContainer.add(this.cursorObj),this.eggSprite=n.add.sprite(54,37,"egg"),this.eggListContainer.add(this.eggSprite);const a=new ZI(310,5,4,170,this.ROWS);this.eggListContainer.add(a),this.scrollGridHandler=new ZC(this,this.ROWS,this.COLUMNS).withScrollBar(a).withUpdateGridCallBack(()=>this.updateEggIcons()).withUpdateSingleElementCallback(r=>this.setEggDetails(r)),this.eggListMessageBoxContainer=n.add.container(0,n.game.canvas.height/6),this.eggListMessageBoxContainer.setVisible(!1),this.eggListContainer.add(this.eggListMessageBoxContainer);const i=Gt(1,-1,318,28);i.setOrigin(0,1),this.eggListMessageBoxContainer.add(i),this.message=le(8,-8,"",Q.WINDOW,{maxLines:1}),this.message.setOrigin(0,1),this.eggListMessageBoxContainer.add(this.message),this.cursor=-1}show(A){return super.show(A),this.initEggIcons(),this.getUi().bringToTop(this.eggListContainer),this.eggListContainer.setVisible(!0),this.scrollGridHandler.setTotalElements(n.gameData.eggs.length),this.updateEggIcons(),this.setCursor(0),!0}initEggIcons(){this.eggIcons=[];for(let A=0;A<Math.min(this.ROWS*this.COLUMNS,n.gameData.eggs.length);A++){const s=A%this.COLUMNS*18,R=Math.floor(A/this.COLUMNS)*18,a=n.add.sprite(s-2,R+2,"egg_icons");a.setScale(.5),a.setOrigin(0,0),this.eggListIconContainer.add(a),this.eggIcons.push(a)}}updateEggIcons(){const A=this.scrollGridHandler.getItemOffset(),s=Math.min(this.eggIcons.length,n.gameData.eggs.length-A);this.eggIcons.forEach((R,a)=>{if(a!==this.cursor&&this.iconAnimHandler.addOrUpdate(R,eR.NONE),a<s){const i=n.gameData.eggs[a+A];R.setFrame(i.getKey()),R.setVisible(!0)}else R.setVisible(!1)})}setEggDetails(A){const s=n.gameData.eggs[A];this.eggSprite.setFrame(`egg_${s.getKey()}`),this.eggNameText.setText(`${u.t("egg:egg")} (${s.getEggDescriptor()})`),this.eggDateText.setText(new Date(s.timestamp).toLocaleString(void 0,{weekday:"short",year:"numeric",month:"2-digit",day:"numeric"})),this.eggHatchWavesText.setText(s.getEggHatchWavesMessage()),this.eggGachaInfoText.setText(s.getEggTypeDescriptor())}processInput(A){const s=this.getUi();let R=!1;const a=!1;return A===k.CANCEL?(s.revertMode(),R=!0):R=this.scrollGridHandler.processInput(A),R&&s.playSelect(),R||a}setCursor(A){let s=!1;const R=this.cursor;if(s=super.setCursor(A),s){const a=this.eggIcons[A];this.cursorObj.setPositionRelative(a,114,5),R>-1&&this.iconAnimHandler.addOrUpdate(this.eggIcons[R],eR.NONE),this.iconAnimHandler.addOrUpdate(a,eR.ACTIVE),this.setEggDetails(A+this.scrollGridHandler.getItemOffset())}return s}clear(){super.clear(),this.scrollGridHandler.reset(),this.cursor=-1,this.eggListContainer.setVisible(!1),this.iconAnimHandler.removeAll(),this.eggListIconContainer.removeAll(!0),this.eggIcons=[]}};N(Bm,"EggListUiHandler");let sG=Bm;const gm=class gm extends vs{constructor(){super(Ie.EGG_GACHA),this.scale=.1666666667,this.gachaContainers=[],this.gachaKnobs=[],this.gachaHatches=[],this.gachaInfoContainers=[],this.voucherCountLabels=[],this.defaultText=u.t("egg:selectMachine")}setup(){this.gachaCursor=0,this.scale=Hn(Q.WINDOW,n.uiTheme).scale;const A=this.getUi();this.eggGachaContainer=n.add.container(0,-n.game.canvas.height/6),this.eggGachaContainer.setVisible(!1),A.add(this.eggGachaContainer);const s=n.add.nineslice(0,0,"default_bg",void 0,320,180,0,0,16,0);s.setOrigin(0,0),this.eggGachaContainer.add(s);const R=n.anims.generateFrameNames("gacha_hatch",{suffix:".png",start:1,end:4});n.anims.exists("open")||n.anims.create({key:"open",frames:R,frameRate:12}),n.anims.exists("close")||n.anims.create({key:"close",frames:R.reverse(),frameRate:12}),DE(mn).forEach((_,P)=>{const h=mn[_].toString().toLowerCase(),H=n.add.container(180*P,18),d=n.add.sprite(0,0,`gacha_${h}`);d.setOrigin(0,0);const f=n.add.sprite(115,80,`gacha_underlay_${h}`);f.setOrigin(0,0);const B=n.add.sprite(0,0,"gacha_eggs");B.setOrigin(0,0);const F=n.add.sprite(0,0,"gacha_glass");F.setOrigin(0,0);const W=n.add.container(160,46),b=u.resolvedLanguage??"en";let x=Q.WINDOW_ALT,$=4,j=0,z=-20,se=6;["de","es-ES","fr","ko","pt-BR"].includes(b)&&(x=Q.SMALLER_WINDOW_ALT,$=2,j=2);let Z=$,q=j;["de","es-ES"].includes(b)&&(z=-25,se=10,Z=-6,q=0);const p=le($,j,u.t("egg:legendaryUPGacha"),x);switch(p.setOrigin(0,0),W.add(p),_){case mn.LEGENDARY:["de","es-ES"].includes(b)&&(p.setAlign("center"),p.setY(0)),["pt-BR"].includes(b)?p.setX(Z-2):p.setX(Z),p.setY(q);const Me=n.add.sprite(z,se,"pokemon_icons_0");["pt-BR"].includes(b)&&Me.setX(z-2),Me.setScale(.5),Me.setOrigin(0,.5),W.add(Me);break;case mn.MOVE:["de","es-ES","fr","pt-BR"].includes(b)&&(p.setAlign("center"),p.setY(0)),p.setText(u.t("egg:moveUPGacha")),p.setX(0),p.setOrigin(.5,0);break;case mn.SHINY:["de","fr","ko"].includes(b)&&(p.setAlign("center"),p.setY(0)),p.setText(u.t("egg:shinyUPGacha")),p.setX(0),p.setOrigin(.5,0);break}const oe=n.add.sprite(191,89,"gacha_knob"),me=n.add.sprite(115,73,"gacha_hatch");me.setOrigin(0,0),H.add(B),H.add(f),H.add(d),H.add(F),H.add(oe),H.add(me),H.add(W),F.setAlpha(.5),me.setAlpha(.9),me.on("animationupdate",(Me,We)=>f.setFrame(We.textureFrame==="4.png"?"open_hatch":"default")),this.gachaContainers.push(H),this.gachaKnobs.push(oe),this.gachaHatches.push(me),this.gachaInfoContainers.push(W),this.eggGachaContainer.add(H),this.updateGachaInfo(P)}),this.eggGachaOptionsContainer=n.add.container(),this.eggGachaOptionsContainer=n.add.container(n.game.canvas.width/6,148),this.eggGachaContainer.add(this.eggGachaOptionsContainer),this.eggGachaOptionSelectBg=Gt(0,0,96,16+576*this.scale),this.eggGachaOptionSelectBg.setOrigin(1,1),this.eggGachaOptionsContainer.add(this.eggGachaOptionSelectBg);const a="x1",r=[{multiplier:a,description:`1 ${u.t("egg:pull")}`,icon:wn(rE.REGULAR)},{multiplier:"x10",description:`10 ${u.t("egg:pulls")}`,icon:wn(rE.REGULAR)},{multiplier:a,description:`5 ${u.t("egg:pulls")}`,icon:wn(rE.PLUS)},{multiplier:a,description:`10 ${u.t("egg:pulls")}`,icon:wn(rE.PREMIUM)},{multiplier:a,description:`25 ${u.t("egg:pulls")}`,icon:wn(rE.GOLDEN)}],L=u.resolvedLanguage??"en",o=r.map(_=>{const P=_.description.split(" ");return P[0].length<2&&(P[0]+=["zh","ko"].includes(L.substring(0,2))?" ":"  "),_.multiplier===a&&(P[0]=" "+P[0]),`     ${_.multiplier.padEnd(5)}${P.join(" ")}`}).join(`
`),l=le(0,0,`${o}
${u.t("menu:cancel")}`,Q.WINDOW);l.setLineSpacing(28),l.setFontSize("80px"),this.eggGachaOptionsContainer.add(l),l.setPositionRelative(this.eggGachaOptionSelectBg,16,9),r.forEach((_,P)=>{const h=n.add.sprite(0,0,"items",_.icon);h.setScale(3*this.scale),h.setPositionRelative(this.eggGachaOptionSelectBg,20,9+(48+P*96)*this.scale),this.eggGachaOptionsContainer.add(h)}),this.eggGachaContainer.add(this.eggGachaOptionsContainer),new Array(lO(rE).length).fill(null).map((_,P)=>{const h=n.add.container(n.game.canvas.width/6-56*P,0),H=Gt(0,0,56,22);H.setOrigin(1,0),h.add(H);const d=le(-48,3,"0",Q.WINDOW);d.setOrigin(0,0),h.add(d),this.voucherCountLabels.push(d);const f=wn(P),B=n.add.sprite(-19,2,"items",f);B.setOrigin(0,0),B.setScale(.5),h.add(B),this.eggGachaContainer.add(h)}),this.eggGachaOverlay=n.add.rectangle(0,0,s.displayWidth,s.displayHeight,0),this.eggGachaOverlay.setOrigin(0,0),this.eggGachaOverlay.setAlpha(0),this.eggGachaContainer.add(this.eggGachaOverlay),this.eggGachaSummaryContainer=n.add.container(0,0),this.eggGachaSummaryContainer.setVisible(!1),this.eggGachaContainer.add(this.eggGachaSummaryContainer);const C=n.add.container(0,148),M=Gt(0,0,320,32);M.setOrigin(0,0),C.add(M),this.eggGachaMessageBox=M;const D=le(8,8,"",Q.WINDOW,{maxLines:2});D.setOrigin(0,0),C.add(D),this.message=D,this.initTutorialOverlay(this.eggGachaContainer),this.eggGachaContainer.add(C),this.initPromptSprite(C),this.setCursor(0)}show(A){super.show(A),this.getUi().showText(this.defaultText,0),this.setGachaCursor(1);for(let s=0;s<this.gachaContainers.length;s++)this.updateGachaInfo(s);return this.updateVoucherCounts(),this.getUi().bringToTop(this.eggGachaContainer),this.eggGachaContainer.setVisible(!0),VI(tO.Egg_Gacha),!0}getDelayValue(A){return this.transitioning&&this.transitionCancelled&&(A=Math.ceil(A/5)),st(A)}pull(A=0,s=0,R){Ye.EGG_GACHA_PULL_COUNT_OVERRIDE&&!s&&(A=Ye.EGG_GACHA_PULL_COUNT_OVERRIDE),this.eggGachaOptionsContainer.setVisible(!1),this.setTransitioning(!0);const a=N(()=>{if(this.transitionCancelled)return this.showSummary(R);const i=n.add.sprite(127,75,"egg",`egg_${R[s].getKey()}`);i.setScale(.5),this.gachaContainers[this.gachaCursor].add(i),this.gachaContainers[this.gachaCursor].moveTo(i,2);const r=N(()=>{n.playSound("se/gacha_running",{loop:!0}),n.time.delayedCall(this.getDelayValue(s?500:1250),()=>{n.playSound("se/gacha_dispense"),n.time.delayedCall(this.getDelayValue(750),()=>{n.sound.stopByKey("se/gacha_running"),n.tweens.add({targets:i,duration:this.getDelayValue(350),y:95,ease:"Bounce.easeOut",onComplete:N(()=>{n.time.delayedCall(this.getDelayValue(125),()=>{n.playSound("se/pb_catch"),this.gachaHatches[this.gachaCursor].play("open"),n.tweens.add({targets:i,duration:this.getDelayValue(350),scale:.75,ease:"Sine.easeIn"}),n.tweens.add({targets:i,y:110,duration:this.getDelayValue(350),ease:"Back.easeOut",onComplete:N(()=>{this.gachaHatches[this.gachaCursor].play("close"),n.tweens.add({targets:i,y:200,duration:this.getDelayValue(350),ease:"Cubic.easeIn",onComplete:N(()=>{++s<A?this.pull(A,s,R):this.showSummary(R)},"onComplete")})},"onComplete")})})},"onComplete")})})})},"doPullAnim");s?r():(n.playSound("se/gacha_dial"),n.tweens.add({targets:this.gachaKnobs[this.gachaCursor],duration:this.getDelayValue(350),angle:90,ease:"Cubic.easeInOut",onComplete:N(()=>{n.tweens.add({targets:this.gachaKnobs[this.gachaCursor],duration:this.getDelayValue(350),angle:0,ease:"Sine.easeInOut"}),n.time.delayedCall(this.getDelayValue(350),r)},"onComplete")}))},"doPull");if(A||(A=1),s||(s=0),!R){R=[];for(let i=1;i<=A;i++){const r={pulled:!0,sourceType:this.gachaCursor};if(i===A){const o=this.getGuaranteedEggTierFromPullCount(A);!R.some(l=>l.tier>=o)&&o!==m.COMMON&&(r.tier=o)}const L=new YI(r);R.push(L)}R=CO(R),(n.currentBattle?n.gameData.saveAll(!0,!0,!0):n.gameData.saveSystem()).then(i=>{if(!i)return n.reset(!0);a()});return}a()}getGuaranteedEggTierFromPullCount(A){switch(A){case 10:return m.RARE;case 25:return m.EPIC;default:return m.COMMON}}showSummary(A){const s=this.getDelayValue(750);this.summaryFinished=!1,this.transitionCancelled=!1,this.setTransitioning(!0),this.eggGachaSummaryContainer.setVisible(!0);const R=A.length<20?1:.5;n.tweens.add({targets:this.eggGachaOverlay,alpha:.5,ease:"Sine.easeOut",duration:s,onComplete:N(()=>{const i=Math.ceil(A.length/5),r=Math.min(A.length,5),L=this.eggGachaOverlay.displayHeight-this.eggGachaMessageBox.displayHeight;A.map((l,C)=>{const M=C%5,D=Math.floor(C/5),_=this.eggGachaOverlay.displayWidth/(r+2),P=L/(i+2),h=P/2*(D/Math.max(i-1,1))+P/4,H=n.add.container(_*(M+1)+_*.5,P*(D+1)+h);H.setScale(1e-4);const d=n.add.sprite(0,0,"egg",`egg_${l.getKey()}`);H.add(d);const f=le(0,14,l.getEggDescriptor(),Q.PARTY,{align:"center"});return f.setOrigin(.5,0),f.setTint(Y7(l.isManaphyEgg()?m.EPIC:l.tier)),H.add(f),this.eggGachaSummaryContainer.addAt(H,0),H}).forEach((l,C)=>{const M=this.transitionCancelled?0:this.getDelayValue(C*100);n.time.delayedCall(M,()=>n.tweens.add({targets:l,duration:this.getDelayValue(350),scale:R,ease:"Sine.easeOut",onComplete:N(()=>{C===A.length-1&&(this.setTransitioning(!1),this.summaryFinished=!0)},"onComplete")}))})},"onComplete")})}hideSummary(){this.setTransitioning(!0),n.tweens.add({targets:[this.eggGachaOverlay,this.eggGachaSummaryContainer],alpha:0,duration:this.getDelayValue(250),ease:"Cubic.easeIn",onComplete:N(()=>{this.eggGachaSummaryContainer.setVisible(!1),this.eggGachaSummaryContainer.setAlpha(1),this.eggGachaSummaryContainer.removeAll(!0),this.setTransitioning(!1),this.summaryFinished=!1,this.eggGachaOptionsContainer.setVisible(!0)},"onComplete")})}updateGachaInfo(A){const s=this.gachaInfoContainers[A];switch(A){case mn.LEGENDARY:const R=ke(j_(new Date().getTime()));s.getAt(1).setTexture(R.getIconAtlasKey(),R.getIconId(!1));break}}consumeVouchers(A,s){n.gameData.voucherCounts[A]=Math.max(n.gameData.voucherCounts[A]-s,0),this.updateVoucherCounts()}updateVoucherCounts(){this.voucherCountLabels.forEach((A,s)=>{A.setText(n.gameData.voucherCounts[s].toString())})}showText(A,s,R,a,i,r){A||(A=this.defaultText),(A==null?void 0:A.indexOf(`
`))===-1?(this.eggGachaMessageBox.setSize(320,32),this.eggGachaMessageBox.setY(0),this.message.setY(8)):(this.eggGachaMessageBox.setSize(320,46),this.eggGachaMessageBox.setY(-14),this.message.setY(-6)),super.showText(A,s,R,a,i,r)}showError(A){this.showText(A,void 0,()=>this.showText(this.defaultText),st(1500))}setTransitioning(A){this.transitioning!==A&&(this.transitioning=A,this.transitionCancelled=!1)}processInput(A){const s=this.getUi();let R=!1,a=!1;if(this.transitioning)if(!this.transitionCancelled&&(A===k.ACTION||A===k.CANCEL))this.transitionCancelled=!0,R=!0;else return!1;else if(this.eggGachaSummaryContainer.visible)this.summaryFinished&&(A===k.ACTION||A===k.CANCEL)&&(this.hideSummary(),R=!0);else switch(A){case k.ACTION:switch(this.cursor){case 0:!n.gameData.voucherCounts[rE.REGULAR]&&!Ye.EGG_FREE_GACHA_PULLS_OVERRIDE?(a=!0,this.showError(u.t("egg:notEnoughVouchers"))):n.gameData.eggs.length<99||Ye.UNLIMITED_EGG_COUNT_OVERRIDE?(Ye.EGG_FREE_GACHA_PULLS_OVERRIDE||this.consumeVouchers(rE.REGULAR,1),this.pull(),R=!0):(a=!0,this.showError(u.t("egg:tooManyEggs")));break;case 2:!n.gameData.voucherCounts[rE.PLUS]&&!Ye.EGG_FREE_GACHA_PULLS_OVERRIDE?(a=!0,this.showError(u.t("egg:notEnoughVouchers"))):n.gameData.eggs.length<95||Ye.UNLIMITED_EGG_COUNT_OVERRIDE?(Ye.EGG_FREE_GACHA_PULLS_OVERRIDE||this.consumeVouchers(rE.PLUS,1),this.pull(5),R=!0):(a=!0,this.showError(u.t("egg:tooManyEggs")));break;case 1:case 3:this.cursor===1&&n.gameData.voucherCounts[rE.REGULAR]<10&&!Ye.EGG_FREE_GACHA_PULLS_OVERRIDE||this.cursor===3&&!n.gameData.voucherCounts[rE.PREMIUM]&&!Ye.EGG_FREE_GACHA_PULLS_OVERRIDE?(a=!0,this.showError(u.t("egg:notEnoughVouchers"))):n.gameData.eggs.length<90||Ye.UNLIMITED_EGG_COUNT_OVERRIDE?(this.cursor===3?Ye.EGG_FREE_GACHA_PULLS_OVERRIDE||this.consumeVouchers(rE.PREMIUM,1):Ye.EGG_FREE_GACHA_PULLS_OVERRIDE||this.consumeVouchers(rE.REGULAR,10),this.pull(10),R=!0):(a=!0,this.showError(u.t("egg:tooManyEggs")));break;case 4:!n.gameData.voucherCounts[rE.GOLDEN]&&!Ye.EGG_FREE_GACHA_PULLS_OVERRIDE?(a=!0,this.showError(u.t("egg:notEnoughVouchers"))):n.gameData.eggs.length<75||Ye.UNLIMITED_EGG_COUNT_OVERRIDE?(Ye.EGG_FREE_GACHA_PULLS_OVERRIDE||this.consumeVouchers(rE.GOLDEN,1),this.pull(25),R=!0):(a=!0,this.showError(u.t("egg:tooManyEggs")));break;case 5:s.revertMode(),R=!0;break}break;case k.CANCEL:this.getUi().revertMode(),R=!0;break;case k.UP:this.cursor&&(R=this.setCursor(this.cursor-1));break;case k.DOWN:this.cursor<5&&(R=this.setCursor(this.cursor+1));break;case k.LEFT:this.gachaCursor&&(R=this.setGachaCursor(this.gachaCursor-1));break;case k.RIGHT:this.gachaCursor<lO(mn).length-1&&(R=this.setGachaCursor(this.gachaCursor+1));break}return R?s.playSelect():a&&s.playError(),R||a}setCursor(A){const s=super.setCursor(A);return this.cursorObj||(this.cursorObj=n.add.image(0,0,"cursor"),this.eggGachaOptionsContainer.add(this.cursorObj)),this.cursorObj.setScale(this.scale*6),this.cursorObj.setPositionRelative(this.eggGachaOptionSelectBg,10,9+(48+this.cursor*96)*this.scale),s}setGachaCursor(A){const R=this.gachaCursor!==A;return R&&(this.gachaCursor=A,this.setTransitioning(!0),n.tweens.add({targets:this.gachaContainers,duration:this.eggGachaContainer.visible?500:0,x:N((a,i,r,L)=>180*(L-A),"x"),ease:"Cubic.easeInOut",onComplete:N(()=>this.setTransitioning(!1),"onComplete")})),R}clear(){super.clear(),this.setGachaCursor(-1),this.eggGachaContainer.setVisible(!1)}};N(gm,"EggGachaUiHandler");let RG=gm;var W8={exports:{}};/*!

JSZip v3.10.1 - A JavaScript class for generating and reading zip files
<http://stuartk.com/jszip>

(c) 2009-2016 Stuart Knightley <stuart [at] stuartk.com>
Dual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/main/LICENSE.markdown.

JSZip uses the library pako released under the MIT license :
https://github.com/nodeca/pako/blob/main/LICENSE
*/(function(E,A){(function(s){E.exports=s()})(function(){return N(function s(R,a,i){function r(l,C){if(!a[l]){if(!R[l]){var M=typeof dL=="function"&&dL;if(!C&&M)return M(l,!0);if(L)return L(l,!0);var D=new Error("Cannot find module '"+l+"'");throw D.code="MODULE_NOT_FOUND",D}var _=a[l]={exports:{}};R[l][0].call(_.exports,function(P){var h=R[l][1][P];return r(h||P)},_,_.exports,s,R,a,i)}return a[l].exports}N(r,"u");for(var L=typeof dL=="function"&&dL,o=0;o<i.length;o++)r(i[o]);return r},"s")({1:[function(s,R,a){var i=s("./utils"),r=s("./support"),L="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";a.encode=function(o){for(var l,C,M,D,_,P,h,H=[],d=0,f=o.length,B=f,F=i.getTypeOf(o)!=="string";d<o.length;)B=f-d,M=F?(l=o[d++],C=d<f?o[d++]:0,d<f?o[d++]:0):(l=o.charCodeAt(d++),C=d<f?o.charCodeAt(d++):0,d<f?o.charCodeAt(d++):0),D=l>>2,_=(3&l)<<4|C>>4,P=1<B?(15&C)<<2|M>>6:64,h=2<B?63&M:64,H.push(L.charAt(D)+L.charAt(_)+L.charAt(P)+L.charAt(h));return H.join("")},a.decode=function(o){var l,C,M,D,_,P,h=0,H=0,d="data:";if(o.substr(0,d.length)===d)throw new Error("Invalid base64 input, it looks like a data url.");var f,B=3*(o=o.replace(/[^A-Za-z0-9+/=]/g,"")).length/4;if(o.charAt(o.length-1)===L.charAt(64)&&B--,o.charAt(o.length-2)===L.charAt(64)&&B--,B%1!=0)throw new Error("Invalid base64 input, bad content length.");for(f=r.uint8array?new Uint8Array(0|B):new Array(0|B);h<o.length;)l=L.indexOf(o.charAt(h++))<<2|(D=L.indexOf(o.charAt(h++)))>>4,C=(15&D)<<4|(_=L.indexOf(o.charAt(h++)))>>2,M=(3&_)<<6|(P=L.indexOf(o.charAt(h++))),f[H++]=l,_!==64&&(f[H++]=C),P!==64&&(f[H++]=M);return f}},{"./support":30,"./utils":32}],2:[function(s,R,a){var i=s("./external"),r=s("./stream/DataWorker"),L=s("./stream/Crc32Probe"),o=s("./stream/DataLengthProbe");function l(C,M,D,_,P){this.compressedSize=C,this.uncompressedSize=M,this.crc32=D,this.compression=_,this.compressedContent=P}N(l,"o"),l.prototype={getContentWorker:N(function(){var C=new r(i.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new o("data_length")),M=this;return C.on("end",function(){if(this.streamInfo.data_length!==M.uncompressedSize)throw new Error("Bug : uncompressed data size mismatch")}),C},"getContentWorker"),getCompressedWorker:N(function(){return new r(i.Promise.resolve(this.compressedContent)).withStreamInfo("compressedSize",this.compressedSize).withStreamInfo("uncompressedSize",this.uncompressedSize).withStreamInfo("crc32",this.crc32).withStreamInfo("compression",this.compression)},"getCompressedWorker")},l.createWorkerFrom=function(C,M,D){return C.pipe(new L).pipe(new o("uncompressedSize")).pipe(M.compressWorker(D)).pipe(new o("compressedSize")).withStreamInfo("compression",M)},R.exports=l},{"./external":6,"./stream/Crc32Probe":25,"./stream/DataLengthProbe":26,"./stream/DataWorker":27}],3:[function(s,R,a){var i=s("./stream/GenericWorker");a.STORE={magic:"\0\0",compressWorker:N(function(){return new i("STORE compression")},"compressWorker"),uncompressWorker:N(function(){return new i("STORE decompression")},"uncompressWorker")},a.DEFLATE=s("./flate")},{"./flate":7,"./stream/GenericWorker":28}],4:[function(s,R,a){var i=s("./utils"),r=function(){for(var L,o=[],l=0;l<256;l++){L=l;for(var C=0;C<8;C++)L=1&L?3988292384^L>>>1:L>>>1;o[l]=L}return o}();R.exports=function(L,o){return L!==void 0&&L.length?i.getTypeOf(L)!=="string"?function(l,C,M,D){var _=r,P=D+M;l^=-1;for(var h=D;h<P;h++)l=l>>>8^_[255&(l^C[h])];return-1^l}(0|o,L,L.length,0):function(l,C,M,D){var _=r,P=D+M;l^=-1;for(var h=D;h<P;h++)l=l>>>8^_[255&(l^C.charCodeAt(h))];return-1^l}(0|o,L,L.length,0):0}},{"./utils":32}],5:[function(s,R,a){a.base64=!1,a.binary=!1,a.dir=!1,a.createFolders=!0,a.date=null,a.compression=null,a.compressionOptions=null,a.comment=null,a.unixPermissions=null,a.dosPermissions=null},{}],6:[function(s,R,a){var i=null;i=typeof Promise<"u"?Promise:s("lie"),R.exports={Promise:i}},{lie:37}],7:[function(s,R,a){var i=typeof Uint8Array<"u"&&typeof Uint16Array<"u"&&typeof Uint32Array<"u",r=s("pako"),L=s("./utils"),o=s("./stream/GenericWorker"),l=i?"uint8array":"array";function C(M,D){o.call(this,"FlateWorker/"+M),this._pako=null,this._pakoAction=M,this._pakoOptions=D,this.meta={}}N(C,"h"),a.magic="\b\0",L.inherits(C,o),C.prototype.processChunk=function(M){this.meta=M.meta,this._pako===null&&this._createPako(),this._pako.push(L.transformTo(l,M.data),!1)},C.prototype.flush=function(){o.prototype.flush.call(this),this._pako===null&&this._createPako(),this._pako.push([],!0)},C.prototype.cleanUp=function(){o.prototype.cleanUp.call(this),this._pako=null},C.prototype._createPako=function(){this._pako=new r[this._pakoAction]({raw:!0,level:this._pakoOptions.level||-1});var M=this;this._pako.onData=function(D){M.push({data:D,meta:M.meta})}},a.compressWorker=function(M){return new C("Deflate",M)},a.uncompressWorker=function(){return new C("Inflate",{})}},{"./stream/GenericWorker":28,"./utils":32,pako:38}],8:[function(s,R,a){function i(_,P){var h,H="";for(h=0;h<P;h++)H+=String.fromCharCode(255&_),_>>>=8;return H}N(i,"A");function r(_,P,h,H,d,f){var B,F,W=_.file,b=_.compression,x=f!==l.utf8encode,$=L.transformTo("string",f(W.name)),j=L.transformTo("string",l.utf8encode(W.name)),z=W.comment,se=L.transformTo("string",f(z)),Z=L.transformTo("string",l.utf8encode(z)),q=j.length!==W.name.length,p=Z.length!==z.length,oe="",me="",Me="",We=W.dir,De=W.date,ie={crc32:0,compressedSize:0,uncompressedSize:0};P&&!h||(ie.crc32=_.crc32,ie.compressedSize=_.compressedSize,ie.uncompressedSize=_.uncompressedSize);var Ae=0;P&&(Ae|=8),x||!q&&!p||(Ae|=2048);var ee=0,Le=0;We&&(ee|=16),d==="UNIX"?(Le=798,ee|=function(de,Rt){var Bt=de;return de||(Bt=Rt?16893:33204),(65535&Bt)<<16}(W.unixPermissions,We)):(Le=20,ee|=function(de){return 63&(de||0)}(W.dosPermissions)),B=De.getUTCHours(),B<<=6,B|=De.getUTCMinutes(),B<<=5,B|=De.getUTCSeconds()/2,F=De.getUTCFullYear()-1980,F<<=4,F|=De.getUTCMonth()+1,F<<=5,F|=De.getUTCDate(),q&&(me=i(1,1)+i(C($),4)+j,oe+="up"+i(me.length,2)+me),p&&(Me=i(1,1)+i(C(se),4)+Z,oe+="uc"+i(Me.length,2)+Me);var ue="";return ue+=`
\0`,ue+=i(Ae,2),ue+=b.magic,ue+=i(B,2),ue+=i(F,2),ue+=i(ie.crc32,4),ue+=i(ie.compressedSize,4),ue+=i(ie.uncompressedSize,4),ue+=i($.length,2),ue+=i(oe.length,2),{fileRecord:M.LOCAL_FILE_HEADER+ue+$+oe,dirRecord:M.CENTRAL_FILE_HEADER+i(Le,2)+ue+i(se.length,2)+"\0\0\0\0"+i(ee,4)+i(H,4)+$+oe+se}}N(r,"n");var L=s("../utils"),o=s("../stream/GenericWorker"),l=s("../utf8"),C=s("../crc32"),M=s("../signature");function D(_,P,h,H){o.call(this,"ZipFileWorker"),this.bytesWritten=0,this.zipComment=P,this.zipPlatform=h,this.encodeFileName=H,this.streamFiles=_,this.accumulate=!1,this.contentBuffer=[],this.dirRecords=[],this.currentSourceOffset=0,this.entriesCount=0,this.currentFile=null,this._sources=[]}N(D,"s"),L.inherits(D,o),D.prototype.push=function(_){var P=_.meta.percent||0,h=this.entriesCount,H=this._sources.length;this.accumulate?this.contentBuffer.push(_):(this.bytesWritten+=_.data.length,o.prototype.push.call(this,{data:_.data,meta:{currentFile:this.currentFile,percent:h?(P+100*(h-H-1))/h:100}}))},D.prototype.openedSource=function(_){this.currentSourceOffset=this.bytesWritten,this.currentFile=_.file.name;var P=this.streamFiles&&!_.file.dir;if(P){var h=r(_,P,!1,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);this.push({data:h.fileRecord,meta:{percent:0}})}else this.accumulate=!0},D.prototype.closedSource=function(_){this.accumulate=!1;var P=this.streamFiles&&!_.file.dir,h=r(_,P,!0,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);if(this.dirRecords.push(h.dirRecord),P)this.push({data:function(H){return M.DATA_DESCRIPTOR+i(H.crc32,4)+i(H.compressedSize,4)+i(H.uncompressedSize,4)}(_),meta:{percent:100}});else for(this.push({data:h.fileRecord,meta:{percent:0}});this.contentBuffer.length;)this.push(this.contentBuffer.shift());this.currentFile=null},D.prototype.flush=function(){for(var _=this.bytesWritten,P=0;P<this.dirRecords.length;P++)this.push({data:this.dirRecords[P],meta:{percent:100}});var h=this.bytesWritten-_,H=function(d,f,B,F,W){var b=L.transformTo("string",W(F));return M.CENTRAL_DIRECTORY_END+"\0\0\0\0"+i(d,2)+i(d,2)+i(f,4)+i(B,4)+i(b.length,2)+b}(this.dirRecords.length,h,_,this.zipComment,this.encodeFileName);this.push({data:H,meta:{percent:100}})},D.prototype.prepareNextSource=function(){this.previous=this._sources.shift(),this.openedSource(this.previous.streamInfo),this.isPaused?this.previous.pause():this.previous.resume()},D.prototype.registerPrevious=function(_){this._sources.push(_);var P=this;return _.on("data",function(h){P.processChunk(h)}),_.on("end",function(){P.closedSource(P.previous.streamInfo),P._sources.length?P.prepareNextSource():P.end()}),_.on("error",function(h){P.error(h)}),this},D.prototype.resume=function(){return!!o.prototype.resume.call(this)&&(!this.previous&&this._sources.length?(this.prepareNextSource(),!0):this.previous||this._sources.length||this.generatedError?void 0:(this.end(),!0))},D.prototype.error=function(_){var P=this._sources;if(!o.prototype.error.call(this,_))return!1;for(var h=0;h<P.length;h++)try{P[h].error(_)}catch{}return!0},D.prototype.lock=function(){o.prototype.lock.call(this);for(var _=this._sources,P=0;P<_.length;P++)_[P].lock()},R.exports=D},{"../crc32":4,"../signature":23,"../stream/GenericWorker":28,"../utf8":31,"../utils":32}],9:[function(s,R,a){var i=s("../compressions"),r=s("./ZipFileWorker");a.generateWorker=function(L,o,l){var C=new r(o.streamFiles,l,o.platform,o.encodeFileName),M=0;try{L.forEach(function(D,_){M++;var P=function(f,B){var F=f||B,W=i[F];if(!W)throw new Error(F+" is not a valid compression method !");return W}(_.options.compression,o.compression),h=_.options.compressionOptions||o.compressionOptions||{},H=_.dir,d=_.date;_._compressWorker(P,h).withStreamInfo("file",{name:D,dir:H,date:d,comment:_.comment||"",unixPermissions:_.unixPermissions,dosPermissions:_.dosPermissions}).pipe(C)}),C.entriesCount=M}catch(D){C.error(D)}return C}},{"../compressions":3,"./ZipFileWorker":8}],10:[function(s,R,a){function i(){if(!(this instanceof i))return new i;if(arguments.length)throw new Error("The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.");this.files=Object.create(null),this.comment=null,this.root="",this.clone=function(){var r=new i;for(var L in this)typeof this[L]!="function"&&(r[L]=this[L]);return r}}N(i,"n"),(i.prototype=s("./object")).loadAsync=s("./load"),i.support=s("./support"),i.defaults=s("./defaults"),i.version="3.10.1",i.loadAsync=function(r,L){return new i().loadAsync(r,L)},i.external=s("./external"),R.exports=i},{"./defaults":5,"./external":6,"./load":11,"./object":15,"./support":30}],11:[function(s,R,a){var i=s("./utils"),r=s("./external"),L=s("./utf8"),o=s("./zipEntries"),l=s("./stream/Crc32Probe"),C=s("./nodejsUtils");function M(D){return new r.Promise(function(_,P){var h=D.decompressed.getContentWorker().pipe(new l);h.on("error",function(H){P(H)}).on("end",function(){h.streamInfo.crc32!==D.decompressed.crc32?P(new Error("Corrupted zip : CRC32 mismatch")):_()}).resume()})}N(M,"f"),R.exports=function(D,_){var P=this;return _=i.extend(_||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:L.utf8decode}),C.isNode&&C.isStream(D)?r.Promise.reject(new Error("JSZip can't accept a stream when loading a zip file.")):i.prepareContent("the loaded zip file",D,!0,_.optimizedBinaryString,_.base64).then(function(h){var H=new o(_);return H.load(h),H}).then(function(h){var H=[r.Promise.resolve(h)],d=h.files;if(_.checkCRC32)for(var f=0;f<d.length;f++)H.push(M(d[f]));return r.Promise.all(H)}).then(function(h){for(var H=h.shift(),d=H.files,f=0;f<d.length;f++){var B=d[f],F=B.fileNameStr,W=i.resolve(B.fileNameStr);P.file(W,B.decompressed,{binary:!0,optimizedBinaryString:!0,date:B.date,dir:B.dir,comment:B.fileCommentStr.length?B.fileCommentStr:null,unixPermissions:B.unixPermissions,dosPermissions:B.dosPermissions,createFolders:_.createFolders}),B.dir||(P.file(W).unsafeOriginalName=F)}return H.zipComment.length&&(P.comment=H.zipComment),P})}},{"./external":6,"./nodejsUtils":14,"./stream/Crc32Probe":25,"./utf8":31,"./utils":32,"./zipEntries":33}],12:[function(s,R,a){var i=s("../utils"),r=s("../stream/GenericWorker");function L(o,l){r.call(this,"Nodejs stream input adapter for "+o),this._upstreamEnded=!1,this._bindStream(l)}N(L,"s"),i.inherits(L,r),L.prototype._bindStream=function(o){var l=this;(this._stream=o).pause(),o.on("data",function(C){l.push({data:C,meta:{percent:0}})}).on("error",function(C){l.isPaused?this.generatedError=C:l.error(C)}).on("end",function(){l.isPaused?l._upstreamEnded=!0:l.end()})},L.prototype.pause=function(){return!!r.prototype.pause.call(this)&&(this._stream.pause(),!0)},L.prototype.resume=function(){return!!r.prototype.resume.call(this)&&(this._upstreamEnded?this.end():this._stream.resume(),!0)},R.exports=L},{"../stream/GenericWorker":28,"../utils":32}],13:[function(s,R,a){var i=s("readable-stream").Readable;function r(L,o,l){i.call(this,o),this._helper=L;var C=this;L.on("data",function(M,D){C.push(M)||C._helper.pause(),l&&l(D)}).on("error",function(M){C.emit("error",M)}).on("end",function(){C.push(null)})}N(r,"n"),s("../utils").inherits(r,i),r.prototype._read=function(){this._helper.resume()},R.exports=r},{"../utils":32,"readable-stream":16}],14:[function(s,R,a){R.exports={isNode:typeof Buffer<"u",newBufferFrom:N(function(i,r){if(Buffer.from&&Buffer.from!==Uint8Array.from)return Buffer.from(i,r);if(typeof i=="number")throw new Error('The "data" argument must not be a number');return new Buffer(i,r)},"newBufferFrom"),allocBuffer:N(function(i){if(Buffer.alloc)return Buffer.alloc(i);var r=new Buffer(i);return r.fill(0),r},"allocBuffer"),isBuffer:N(function(i){return Buffer.isBuffer(i)},"isBuffer"),isStream:N(function(i){return i&&typeof i.on=="function"&&typeof i.pause=="function"&&typeof i.resume=="function"},"isStream")}},{}],15:[function(s,R,a){function i(W,b,x){var $,j=L.getTypeOf(b),z=L.extend(x||{},C);z.date=z.date||new Date,z.compression!==null&&(z.compression=z.compression.toUpperCase()),typeof z.unixPermissions=="string"&&(z.unixPermissions=parseInt(z.unixPermissions,8)),z.unixPermissions&&16384&z.unixPermissions&&(z.dir=!0),z.dosPermissions&&16&z.dosPermissions&&(z.dir=!0),z.dir&&(W=d(W)),z.createFolders&&($=H(W))&&f.call(this,$,!0);var se=j==="string"&&z.binary===!1&&z.base64===!1;x&&x.binary!==void 0||(z.binary=!se),(b instanceof M&&b.uncompressedSize===0||z.dir||!b||b.length===0)&&(z.base64=!1,z.binary=!0,b="",z.compression="STORE",j="string");var Z=null;Z=b instanceof M||b instanceof o?b:P.isNode&&P.isStream(b)?new h(W,b):L.prepareContent(W,b,z.binary,z.optimizedBinaryString,z.base64);var q=new D(W,Z,z);this.files[W]=q}N(i,"s");var r=s("./utf8"),L=s("./utils"),o=s("./stream/GenericWorker"),l=s("./stream/StreamHelper"),C=s("./defaults"),M=s("./compressedObject"),D=s("./zipObject"),_=s("./generate"),P=s("./nodejsUtils"),h=s("./nodejs/NodejsStreamInputAdapter"),H=N(function(W){W.slice(-1)==="/"&&(W=W.substring(0,W.length-1));var b=W.lastIndexOf("/");return 0<b?W.substring(0,b):""},"_"),d=N(function(W){return W.slice(-1)!=="/"&&(W+="/"),W},"g"),f=N(function(W,b){return b=b!==void 0?b:C.createFolders,W=d(W),this.files[W]||i.call(this,W,null,{dir:!0,createFolders:b}),this.files[W]},"b");function B(W){return Object.prototype.toString.call(W)==="[object RegExp]"}N(B,"h");var F={load:N(function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},"load"),forEach:N(function(W){var b,x,$;for(b in this.files)$=this.files[b],(x=b.slice(this.root.length,b.length))&&b.slice(0,this.root.length)===this.root&&W(x,$)},"forEach"),filter:N(function(W){var b=[];return this.forEach(function(x,$){W(x,$)&&b.push($)}),b},"filter"),file:N(function(W,b,x){if(arguments.length!==1)return W=this.root+W,i.call(this,W,b,x),this;if(B(W)){var $=W;return this.filter(function(z,se){return!se.dir&&$.test(z)})}var j=this.files[this.root+W];return j&&!j.dir?j:null},"file"),folder:N(function(W){if(!W)return this;if(B(W))return this.filter(function(j,z){return z.dir&&W.test(j)});var b=this.root+W,x=f.call(this,b),$=this.clone();return $.root=x.name,$},"folder"),remove:N(function(W){W=this.root+W;var b=this.files[W];if(b||(W.slice(-1)!=="/"&&(W+="/"),b=this.files[W]),b&&!b.dir)delete this.files[W];else for(var x=this.filter(function(j,z){return z.name.slice(0,W.length)===W}),$=0;$<x.length;$++)delete this.files[x[$].name];return this},"remove"),generate:N(function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},"generate"),generateInternalStream:N(function(W){var b,x={};try{if((x=L.extend(W||{},{streamFiles:!1,compression:"STORE",compressionOptions:null,type:"",platform:"DOS",comment:null,mimeType:"application/zip",encodeFileName:r.utf8encode})).type=x.type.toLowerCase(),x.compression=x.compression.toUpperCase(),x.type==="binarystring"&&(x.type="string"),!x.type)throw new Error("No output type specified.");L.checkSupport(x.type),x.platform!=="darwin"&&x.platform!=="freebsd"&&x.platform!=="linux"&&x.platform!=="sunos"||(x.platform="UNIX"),x.platform==="win32"&&(x.platform="DOS");var $=x.comment||this.comment||"";b=_.generateWorker(this,x,$)}catch(j){(b=new o("error")).error(j)}return new l(b,x.type||"string",x.mimeType)},"generateInternalStream"),generateAsync:N(function(W,b){return this.generateInternalStream(W).accumulate(b)},"generateAsync"),generateNodeStream:N(function(W,b){return(W=W||{}).type||(W.type="nodebuffer"),this.generateInternalStream(W).toNodejsStream(b)},"generateNodeStream")};R.exports=F},{"./compressedObject":2,"./defaults":5,"./generate":9,"./nodejs/NodejsStreamInputAdapter":12,"./nodejsUtils":14,"./stream/GenericWorker":28,"./stream/StreamHelper":29,"./utf8":31,"./utils":32,"./zipObject":35}],16:[function(s,R,a){R.exports=s("stream")},{stream:void 0}],17:[function(s,R,a){var i=s("./DataReader");function r(L){i.call(this,L);for(var o=0;o<this.data.length;o++)L[o]=255&L[o]}N(r,"i"),s("../utils").inherits(r,i),r.prototype.byteAt=function(L){return this.data[this.zero+L]},r.prototype.lastIndexOfSignature=function(L){for(var o=L.charCodeAt(0),l=L.charCodeAt(1),C=L.charCodeAt(2),M=L.charCodeAt(3),D=this.length-4;0<=D;--D)if(this.data[D]===o&&this.data[D+1]===l&&this.data[D+2]===C&&this.data[D+3]===M)return D-this.zero;return-1},r.prototype.readAndCheckSignature=function(L){var o=L.charCodeAt(0),l=L.charCodeAt(1),C=L.charCodeAt(2),M=L.charCodeAt(3),D=this.readData(4);return o===D[0]&&l===D[1]&&C===D[2]&&M===D[3]},r.prototype.readData=function(L){if(this.checkOffset(L),L===0)return[];var o=this.data.slice(this.zero+this.index,this.zero+this.index+L);return this.index+=L,o},R.exports=r},{"../utils":32,"./DataReader":18}],18:[function(s,R,a){var i=s("../utils");function r(L){this.data=L,this.length=L.length,this.index=0,this.zero=0}N(r,"i"),r.prototype={checkOffset:N(function(L){this.checkIndex(this.index+L)},"checkOffset"),checkIndex:N(function(L){if(this.length<this.zero+L||L<0)throw new Error("End of data reached (data length = "+this.length+", asked index = "+L+"). Corrupted zip ?")},"checkIndex"),setIndex:N(function(L){this.checkIndex(L),this.index=L},"setIndex"),skip:N(function(L){this.setIndex(this.index+L)},"skip"),byteAt:N(function(){},"byteAt"),readInt:N(function(L){var o,l=0;for(this.checkOffset(L),o=this.index+L-1;o>=this.index;o--)l=(l<<8)+this.byteAt(o);return this.index+=L,l},"readInt"),readString:N(function(L){return i.transformTo("string",this.readData(L))},"readString"),readData:N(function(){},"readData"),lastIndexOfSignature:N(function(){},"lastIndexOfSignature"),readAndCheckSignature:N(function(){},"readAndCheckSignature"),readDate:N(function(){var L=this.readInt(4);return new Date(Date.UTC(1980+(L>>25&127),(L>>21&15)-1,L>>16&31,L>>11&31,L>>5&63,(31&L)<<1))},"readDate")},R.exports=r},{"../utils":32}],19:[function(s,R,a){var i=s("./Uint8ArrayReader");function r(L){i.call(this,L)}N(r,"i"),s("../utils").inherits(r,i),r.prototype.readData=function(L){this.checkOffset(L);var o=this.data.slice(this.zero+this.index,this.zero+this.index+L);return this.index+=L,o},R.exports=r},{"../utils":32,"./Uint8ArrayReader":21}],20:[function(s,R,a){var i=s("./DataReader");function r(L){i.call(this,L)}N(r,"i"),s("../utils").inherits(r,i),r.prototype.byteAt=function(L){return this.data.charCodeAt(this.zero+L)},r.prototype.lastIndexOfSignature=function(L){return this.data.lastIndexOf(L)-this.zero},r.prototype.readAndCheckSignature=function(L){return L===this.readData(4)},r.prototype.readData=function(L){this.checkOffset(L);var o=this.data.slice(this.zero+this.index,this.zero+this.index+L);return this.index+=L,o},R.exports=r},{"../utils":32,"./DataReader":18}],21:[function(s,R,a){var i=s("./ArrayReader");function r(L){i.call(this,L)}N(r,"i"),s("../utils").inherits(r,i),r.prototype.readData=function(L){if(this.checkOffset(L),L===0)return new Uint8Array(0);var o=this.data.subarray(this.zero+this.index,this.zero+this.index+L);return this.index+=L,o},R.exports=r},{"../utils":32,"./ArrayReader":17}],22:[function(s,R,a){var i=s("../utils"),r=s("../support"),L=s("./ArrayReader"),o=s("./StringReader"),l=s("./NodeBufferReader"),C=s("./Uint8ArrayReader");R.exports=function(M){var D=i.getTypeOf(M);return i.checkSupport(D),D!=="string"||r.uint8array?D==="nodebuffer"?new l(M):r.uint8array?new C(i.transformTo("uint8array",M)):new L(i.transformTo("array",M)):new o(M)}},{"../support":30,"../utils":32,"./ArrayReader":17,"./NodeBufferReader":19,"./StringReader":20,"./Uint8ArrayReader":21}],23:[function(s,R,a){a.LOCAL_FILE_HEADER="PK",a.CENTRAL_FILE_HEADER="PK",a.CENTRAL_DIRECTORY_END="PK",a.ZIP64_CENTRAL_DIRECTORY_LOCATOR="PK\x07",a.ZIP64_CENTRAL_DIRECTORY_END="PK",a.DATA_DESCRIPTOR="PK\x07\b"},{}],24:[function(s,R,a){var i=s("./GenericWorker"),r=s("../utils");function L(o){i.call(this,"ConvertWorker to "+o),this.destType=o}N(L,"s"),r.inherits(L,i),L.prototype.processChunk=function(o){this.push({data:r.transformTo(this.destType,o.data),meta:o.meta})},R.exports=L},{"../utils":32,"./GenericWorker":28}],25:[function(s,R,a){var i=s("./GenericWorker"),r=s("../crc32");function L(){i.call(this,"Crc32Probe"),this.withStreamInfo("crc32",0)}N(L,"s"),s("../utils").inherits(L,i),L.prototype.processChunk=function(o){this.streamInfo.crc32=r(o.data,this.streamInfo.crc32||0),this.push(o)},R.exports=L},{"../crc32":4,"../utils":32,"./GenericWorker":28}],26:[function(s,R,a){var i=s("../utils"),r=s("./GenericWorker");function L(o){r.call(this,"DataLengthProbe for "+o),this.propName=o,this.withStreamInfo(o,0)}N(L,"s"),i.inherits(L,r),L.prototype.processChunk=function(o){if(o){var l=this.streamInfo[this.propName]||0;this.streamInfo[this.propName]=l+o.data.length}r.prototype.processChunk.call(this,o)},R.exports=L},{"../utils":32,"./GenericWorker":28}],27:[function(s,R,a){var i=s("../utils"),r=s("./GenericWorker");function L(o){r.call(this,"DataWorker");var l=this;this.dataIsReady=!1,this.index=0,this.max=0,this.data=null,this.type="",this._tickScheduled=!1,o.then(function(C){l.dataIsReady=!0,l.data=C,l.max=C&&C.length||0,l.type=i.getTypeOf(C),l.isPaused||l._tickAndRepeat()},function(C){l.error(C)})}N(L,"s"),i.inherits(L,r),L.prototype.cleanUp=function(){r.prototype.cleanUp.call(this),this.data=null},L.prototype.resume=function(){return!!r.prototype.resume.call(this)&&(!this._tickScheduled&&this.dataIsReady&&(this._tickScheduled=!0,i.delay(this._tickAndRepeat,[],this)),!0)},L.prototype._tickAndRepeat=function(){this._tickScheduled=!1,this.isPaused||this.isFinished||(this._tick(),this.isFinished||(i.delay(this._tickAndRepeat,[],this),this._tickScheduled=!0))},L.prototype._tick=function(){if(this.isPaused||this.isFinished)return!1;var o=null,l=Math.min(this.max,this.index+16384);if(this.index>=this.max)return this.end();switch(this.type){case"string":o=this.data.substring(this.index,l);break;case"uint8array":o=this.data.subarray(this.index,l);break;case"array":case"nodebuffer":o=this.data.slice(this.index,l)}return this.index=l,this.push({data:o,meta:{percent:this.max?this.index/this.max*100:0}})},R.exports=L},{"../utils":32,"./GenericWorker":28}],28:[function(s,R,a){function i(r){this.name=r||"default",this.streamInfo={},this.generatedError=null,this.extraStreamInfo={},this.isPaused=!0,this.isFinished=!1,this.isLocked=!1,this._listeners={data:[],end:[],error:[]},this.previous=null}N(i,"n"),i.prototype={push:N(function(r){this.emit("data",r)},"push"),end:N(function(){if(this.isFinished)return!1;this.flush();try{this.emit("end"),this.cleanUp(),this.isFinished=!0}catch(r){this.emit("error",r)}return!0},"end"),error:N(function(r){return!this.isFinished&&(this.isPaused?this.generatedError=r:(this.isFinished=!0,this.emit("error",r),this.previous&&this.previous.error(r),this.cleanUp()),!0)},"error"),on:N(function(r,L){return this._listeners[r].push(L),this},"on"),cleanUp:N(function(){this.streamInfo=this.generatedError=this.extraStreamInfo=null,this._listeners=[]},"cleanUp"),emit:N(function(r,L){if(this._listeners[r])for(var o=0;o<this._listeners[r].length;o++)this._listeners[r][o].call(this,L)},"emit"),pipe:N(function(r){return r.registerPrevious(this)},"pipe"),registerPrevious:N(function(r){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.streamInfo=r.streamInfo,this.mergeStreamInfo(),this.previous=r;var L=this;return r.on("data",function(o){L.processChunk(o)}),r.on("end",function(){L.end()}),r.on("error",function(o){L.error(o)}),this},"registerPrevious"),pause:N(function(){return!this.isPaused&&!this.isFinished&&(this.isPaused=!0,this.previous&&this.previous.pause(),!0)},"pause"),resume:N(function(){if(!this.isPaused||this.isFinished)return!1;var r=this.isPaused=!1;return this.generatedError&&(this.error(this.generatedError),r=!0),this.previous&&this.previous.resume(),!r},"resume"),flush:N(function(){},"flush"),processChunk:N(function(r){this.push(r)},"processChunk"),withStreamInfo:N(function(r,L){return this.extraStreamInfo[r]=L,this.mergeStreamInfo(),this},"withStreamInfo"),mergeStreamInfo:N(function(){for(var r in this.extraStreamInfo)Object.prototype.hasOwnProperty.call(this.extraStreamInfo,r)&&(this.streamInfo[r]=this.extraStreamInfo[r])},"mergeStreamInfo"),lock:N(function(){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.isLocked=!0,this.previous&&this.previous.lock()},"lock"),toString:N(function(){var r="Worker "+this.name;return this.previous?this.previous+" -> "+r:r},"toString")},R.exports=i},{}],29:[function(s,R,a){var i=s("../utils"),r=s("./ConvertWorker"),L=s("./GenericWorker"),o=s("../base64"),l=s("../support"),C=s("../external"),M=null;if(l.nodestream)try{M=s("../nodejs/NodejsStreamOutputAdapter")}catch{}function D(P,h){return new C.Promise(function(H,d){var f=[],B=P._internalType,F=P._outputType,W=P._mimeType;P.on("data",function(b,x){f.push(b),h&&h(x)}).on("error",function(b){f=[],d(b)}).on("end",function(){try{var b=function(x,$,j){switch(x){case"blob":return i.newBlob(i.transformTo("arraybuffer",$),j);case"base64":return o.encode($);default:return i.transformTo(x,$)}}(F,function(x,$){var j,z=0,se=null,Z=0;for(j=0;j<$.length;j++)Z+=$[j].length;switch(x){case"string":return $.join("");case"array":return Array.prototype.concat.apply([],$);case"uint8array":for(se=new Uint8Array(Z),j=0;j<$.length;j++)se.set($[j],z),z+=$[j].length;return se;case"nodebuffer":return Buffer.concat($);default:throw new Error("concat : unsupported type '"+x+"'")}}(B,f),W);H(b)}catch(x){d(x)}f=[]}).resume()})}N(D,"l");function _(P,h,H){var d=h;switch(h){case"blob":case"arraybuffer":d="uint8array";break;case"base64":d="string"}try{this._internalType=d,this._outputType=h,this._mimeType=H,i.checkSupport(d),this._worker=P.pipe(new r(d)),P.lock()}catch(f){this._worker=new L("error"),this._worker.error(f)}}N(_,"f"),_.prototype={accumulate:N(function(P){return D(this,P)},"accumulate"),on:N(function(P,h){var H=this;return P==="data"?this._worker.on(P,function(d){h.call(H,d.data,d.meta)}):this._worker.on(P,function(){i.delay(h,arguments,H)}),this},"on"),resume:N(function(){return i.delay(this._worker.resume,[],this._worker),this},"resume"),pause:N(function(){return this._worker.pause(),this},"pause"),toNodejsStream:N(function(P){if(i.checkSupport("nodestream"),this._outputType!=="nodebuffer")throw new Error(this._outputType+" is not supported by this method");return new M(this,{objectMode:this._outputType!=="nodebuffer"},P)},"toNodejsStream")},R.exports=_},{"../base64":1,"../external":6,"../nodejs/NodejsStreamOutputAdapter":13,"../support":30,"../utils":32,"./ConvertWorker":24,"./GenericWorker":28}],30:[function(s,R,a){if(a.base64=!0,a.array=!0,a.string=!0,a.arraybuffer=typeof ArrayBuffer<"u"&&typeof Uint8Array<"u",a.nodebuffer=typeof Buffer<"u",a.uint8array=typeof Uint8Array<"u",typeof ArrayBuffer>"u")a.blob=!1;else{var i=new ArrayBuffer(0);try{a.blob=new Blob([i],{type:"application/zip"}).size===0}catch{try{var r=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);r.append(i),a.blob=r.getBlob("application/zip").size===0}catch{a.blob=!1}}}try{a.nodestream=!!s("readable-stream").Readable}catch{a.nodestream=!1}},{"readable-stream":16}],31:[function(s,R,a){for(var i=s("./utils"),r=s("./support"),L=s("./nodejsUtils"),o=s("./stream/GenericWorker"),l=new Array(256),C=0;C<256;C++)l[C]=252<=C?6:248<=C?5:240<=C?4:224<=C?3:192<=C?2:1;l[254]=l[254]=1;function M(){o.call(this,"utf-8 decode"),this.leftOver=null}N(M,"a");function D(){o.call(this,"utf-8 encode")}N(D,"l"),a.utf8encode=function(_){return r.nodebuffer?L.newBufferFrom(_,"utf-8"):function(P){var h,H,d,f,B,F=P.length,W=0;for(f=0;f<F;f++)(64512&(H=P.charCodeAt(f)))==55296&&f+1<F&&(64512&(d=P.charCodeAt(f+1)))==56320&&(H=65536+(H-55296<<10)+(d-56320),f++),W+=H<128?1:H<2048?2:H<65536?3:4;for(h=r.uint8array?new Uint8Array(W):new Array(W),f=B=0;B<W;f++)(64512&(H=P.charCodeAt(f)))==55296&&f+1<F&&(64512&(d=P.charCodeAt(f+1)))==56320&&(H=65536+(H-55296<<10)+(d-56320),f++),H<128?h[B++]=H:(H<2048?h[B++]=192|H>>>6:(H<65536?h[B++]=224|H>>>12:(h[B++]=240|H>>>18,h[B++]=128|H>>>12&63),h[B++]=128|H>>>6&63),h[B++]=128|63&H);return h}(_)},a.utf8decode=function(_){return r.nodebuffer?i.transformTo("nodebuffer",_).toString("utf-8"):function(P){var h,H,d,f,B=P.length,F=new Array(2*B);for(h=H=0;h<B;)if((d=P[h++])<128)F[H++]=d;else if(4<(f=l[d]))F[H++]=65533,h+=f-1;else{for(d&=f===2?31:f===3?15:7;1<f&&h<B;)d=d<<6|63&P[h++],f--;1<f?F[H++]=65533:d<65536?F[H++]=d:(d-=65536,F[H++]=55296|d>>10&1023,F[H++]=56320|1023&d)}return F.length!==H&&(F.subarray?F=F.subarray(0,H):F.length=H),i.applyFromCharCode(F)}(_=i.transformTo(r.uint8array?"uint8array":"array",_))},i.inherits(M,o),M.prototype.processChunk=function(_){var P=i.transformTo(r.uint8array?"uint8array":"array",_.data);if(this.leftOver&&this.leftOver.length){if(r.uint8array){var h=P;(P=new Uint8Array(h.length+this.leftOver.length)).set(this.leftOver,0),P.set(h,this.leftOver.length)}else P=this.leftOver.concat(P);this.leftOver=null}var H=function(f,B){var F;for((B=B||f.length)>f.length&&(B=f.length),F=B-1;0<=F&&(192&f[F])==128;)F--;return F<0||F===0?B:F+l[f[F]]>B?F:B}(P),d=P;H!==P.length&&(r.uint8array?(d=P.subarray(0,H),this.leftOver=P.subarray(H,P.length)):(d=P.slice(0,H),this.leftOver=P.slice(H,P.length))),this.push({data:a.utf8decode(d),meta:_.meta})},M.prototype.flush=function(){this.leftOver&&this.leftOver.length&&(this.push({data:a.utf8decode(this.leftOver),meta:{}}),this.leftOver=null)},a.Utf8DecodeWorker=M,i.inherits(D,o),D.prototype.processChunk=function(_){this.push({data:a.utf8encode(_.data),meta:_.meta})},a.Utf8EncodeWorker=D},{"./nodejsUtils":14,"./stream/GenericWorker":28,"./support":30,"./utils":32}],32:[function(s,R,a){var i=s("./support"),r=s("./base64"),L=s("./nodejsUtils"),o=s("./external");function l(h){return h}N(l,"n");function C(h,H){for(var d=0;d<h.length;++d)H[d]=255&h.charCodeAt(d);return H}N(C,"l"),s("setimmediate"),a.newBlob=function(h,H){a.checkSupport("blob");try{return new Blob([h],{type:H})}catch{try{var d=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);return d.append(h),d.getBlob(H)}catch{throw new Error("Bug : can't construct the Blob.")}}};var M={stringifyByChunk:N(function(h,H,d){var f=[],B=0,F=h.length;if(F<=d)return String.fromCharCode.apply(null,h);for(;B<F;)H==="array"||H==="nodebuffer"?f.push(String.fromCharCode.apply(null,h.slice(B,Math.min(B+d,F)))):f.push(String.fromCharCode.apply(null,h.subarray(B,Math.min(B+d,F)))),B+=d;return f.join("")},"stringifyByChunk"),stringifyByChar:N(function(h){for(var H="",d=0;d<h.length;d++)H+=String.fromCharCode(h[d]);return H},"stringifyByChar"),applyCanBeUsed:{uint8array:function(){try{return i.uint8array&&String.fromCharCode.apply(null,new Uint8Array(1)).length===1}catch{return!1}}(),nodebuffer:function(){try{return i.nodebuffer&&String.fromCharCode.apply(null,L.allocBuffer(1)).length===1}catch{return!1}}()}};function D(h){var H=65536,d=a.getTypeOf(h),f=!0;if(d==="uint8array"?f=M.applyCanBeUsed.uint8array:d==="nodebuffer"&&(f=M.applyCanBeUsed.nodebuffer),f)for(;1<H;)try{return M.stringifyByChunk(h,d,H)}catch{H=Math.floor(H/2)}return M.stringifyByChar(h)}N(D,"s");function _(h,H){for(var d=0;d<h.length;d++)H[d]=h[d];return H}N(_,"f"),a.applyFromCharCode=D;var P={};P.string={string:l,array:N(function(h){return C(h,new Array(h.length))},"array"),arraybuffer:N(function(h){return P.string.uint8array(h).buffer},"arraybuffer"),uint8array:N(function(h){return C(h,new Uint8Array(h.length))},"uint8array"),nodebuffer:N(function(h){return C(h,L.allocBuffer(h.length))},"nodebuffer")},P.array={string:D,array:l,arraybuffer:N(function(h){return new Uint8Array(h).buffer},"arraybuffer"),uint8array:N(function(h){return new Uint8Array(h)},"uint8array"),nodebuffer:N(function(h){return L.newBufferFrom(h)},"nodebuffer")},P.arraybuffer={string:N(function(h){return D(new Uint8Array(h))},"string"),array:N(function(h){return _(new Uint8Array(h),new Array(h.byteLength))},"array"),arraybuffer:l,uint8array:N(function(h){return new Uint8Array(h)},"uint8array"),nodebuffer:N(function(h){return L.newBufferFrom(new Uint8Array(h))},"nodebuffer")},P.uint8array={string:D,array:N(function(h){return _(h,new Array(h.length))},"array"),arraybuffer:N(function(h){return h.buffer},"arraybuffer"),uint8array:l,nodebuffer:N(function(h){return L.newBufferFrom(h)},"nodebuffer")},P.nodebuffer={string:D,array:N(function(h){return _(h,new Array(h.length))},"array"),arraybuffer:N(function(h){return P.nodebuffer.uint8array(h).buffer},"arraybuffer"),uint8array:N(function(h){return _(h,new Uint8Array(h.length))},"uint8array"),nodebuffer:l},a.transformTo=function(h,H){if(H=H||"",!h)return H;a.checkSupport(h);var d=a.getTypeOf(H);return P[d][h](H)},a.resolve=function(h){for(var H=h.split("/"),d=[],f=0;f<H.length;f++){var B=H[f];B==="."||B===""&&f!==0&&f!==H.length-1||(B===".."?d.pop():d.push(B))}return d.join("/")},a.getTypeOf=function(h){return typeof h=="string"?"string":Object.prototype.toString.call(h)==="[object Array]"?"array":i.nodebuffer&&L.isBuffer(h)?"nodebuffer":i.uint8array&&h instanceof Uint8Array?"uint8array":i.arraybuffer&&h instanceof ArrayBuffer?"arraybuffer":void 0},a.checkSupport=function(h){if(!i[h.toLowerCase()])throw new Error(h+" is not supported by this platform")},a.MAX_VALUE_16BITS=65535,a.MAX_VALUE_32BITS=-1,a.pretty=function(h){var H,d,f="";for(d=0;d<(h||"").length;d++)f+="\\x"+((H=h.charCodeAt(d))<16?"0":"")+H.toString(16).toUpperCase();return f},a.delay=function(h,H,d){setImmediate(function(){h.apply(d||null,H||[])})},a.inherits=function(h,H){function d(){}N(d,"r"),d.prototype=H.prototype,h.prototype=new d},a.extend=function(){var h,H,d={};for(h=0;h<arguments.length;h++)for(H in arguments[h])Object.prototype.hasOwnProperty.call(arguments[h],H)&&d[H]===void 0&&(d[H]=arguments[h][H]);return d},a.prepareContent=function(h,H,d,f,B){return o.Promise.resolve(H).then(function(F){return i.blob&&(F instanceof Blob||["[object File]","[object Blob]"].indexOf(Object.prototype.toString.call(F))!==-1)&&typeof FileReader<"u"?new o.Promise(function(W,b){var x=new FileReader;x.onload=function($){W($.target.result)},x.onerror=function($){b($.target.error)},x.readAsArrayBuffer(F)}):F}).then(function(F){var W=a.getTypeOf(F);return W?(W==="arraybuffer"?F=a.transformTo("uint8array",F):W==="string"&&(B?F=r.decode(F):d&&f!==!0&&(F=function(b){return C(b,i.uint8array?new Uint8Array(b.length):new Array(b.length))}(F))),F):o.Promise.reject(new Error("Can't read the data of '"+h+"'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"))})}},{"./base64":1,"./external":6,"./nodejsUtils":14,"./support":30,setimmediate:54}],33:[function(s,R,a){var i=s("./reader/readerFor"),r=s("./utils"),L=s("./signature"),o=s("./zipEntry"),l=s("./support");function C(M){this.files=[],this.loadOptions=M}N(C,"h"),C.prototype={checkSignature:N(function(M){if(!this.reader.readAndCheckSignature(M)){this.reader.index-=4;var D=this.reader.readString(4);throw new Error("Corrupted zip or bug: unexpected signature ("+r.pretty(D)+", expected "+r.pretty(M)+")")}},"checkSignature"),isSignature:N(function(M,D){var _=this.reader.index;this.reader.setIndex(M);var P=this.reader.readString(4)===D;return this.reader.setIndex(_),P},"isSignature"),readBlockEndOfCentral:N(function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var M=this.reader.readData(this.zipCommentLength),D=l.uint8array?"uint8array":"array",_=r.transformTo(D,M);this.zipComment=this.loadOptions.decodeFileName(_)},"readBlockEndOfCentral"),readBlockZip64EndOfCentral:N(function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.reader.skip(4),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var M,D,_,P=this.zip64EndOfCentralSize-44;0<P;)M=this.reader.readInt(2),D=this.reader.readInt(4),_=this.reader.readData(D),this.zip64ExtensibleData[M]={id:M,length:D,value:_}},"readBlockZip64EndOfCentral"),readBlockZip64EndOfCentralLocator:N(function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),1<this.disksCount)throw new Error("Multi-volumes zip are not supported")},"readBlockZip64EndOfCentralLocator"),readLocalFiles:N(function(){var M,D;for(M=0;M<this.files.length;M++)D=this.files[M],this.reader.setIndex(D.localHeaderOffset),this.checkSignature(L.LOCAL_FILE_HEADER),D.readLocalPart(this.reader),D.handleUTF8(),D.processAttributes()},"readLocalFiles"),readCentralDir:N(function(){var M;for(this.reader.setIndex(this.centralDirOffset);this.reader.readAndCheckSignature(L.CENTRAL_FILE_HEADER);)(M=new o({zip64:this.zip64},this.loadOptions)).readCentralPart(this.reader),this.files.push(M);if(this.centralDirRecords!==this.files.length&&this.centralDirRecords!==0&&this.files.length===0)throw new Error("Corrupted zip or bug: expected "+this.centralDirRecords+" records in central dir, got "+this.files.length)},"readCentralDir"),readEndOfCentral:N(function(){var M=this.reader.lastIndexOfSignature(L.CENTRAL_DIRECTORY_END);if(M<0)throw this.isSignature(0,L.LOCAL_FILE_HEADER)?new Error("Corrupted zip: can't find end of central directory"):new Error("Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html");this.reader.setIndex(M);var D=M;if(this.checkSignature(L.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===r.MAX_VALUE_16BITS||this.diskWithCentralDirStart===r.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===r.MAX_VALUE_16BITS||this.centralDirRecords===r.MAX_VALUE_16BITS||this.centralDirSize===r.MAX_VALUE_32BITS||this.centralDirOffset===r.MAX_VALUE_32BITS){if(this.zip64=!0,(M=this.reader.lastIndexOfSignature(L.ZIP64_CENTRAL_DIRECTORY_LOCATOR))<0)throw new Error("Corrupted zip: can't find the ZIP64 end of central directory locator");if(this.reader.setIndex(M),this.checkSignature(L.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,L.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(L.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error("Corrupted zip: can't find the ZIP64 end of central directory");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(L.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var _=this.centralDirOffset+this.centralDirSize;this.zip64&&(_+=20,_+=12+this.zip64EndOfCentralSize);var P=D-_;if(0<P)this.isSignature(D,L.CENTRAL_FILE_HEADER)||(this.reader.zero=P);else if(P<0)throw new Error("Corrupted zip: missing "+Math.abs(P)+" bytes.")},"readEndOfCentral"),prepareReader:N(function(M){this.reader=i(M)},"prepareReader"),load:N(function(M){this.prepareReader(M),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()},"load")},R.exports=C},{"./reader/readerFor":22,"./signature":23,"./support":30,"./utils":32,"./zipEntry":34}],34:[function(s,R,a){var i=s("./reader/readerFor"),r=s("./utils"),L=s("./compressedObject"),o=s("./crc32"),l=s("./utf8"),C=s("./compressions"),M=s("./support");function D(_,P){this.options=_,this.loadOptions=P}N(D,"l"),D.prototype={isEncrypted:N(function(){return(1&this.bitFlag)==1},"isEncrypted"),useUTF8:N(function(){return(2048&this.bitFlag)==2048},"useUTF8"),readLocalPart:N(function(_){var P,h;if(_.skip(22),this.fileNameLength=_.readInt(2),h=_.readInt(2),this.fileName=_.readData(this.fileNameLength),_.skip(h),this.compressedSize===-1||this.uncompressedSize===-1)throw new Error("Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)");if((P=function(H){for(var d in C)if(Object.prototype.hasOwnProperty.call(C,d)&&C[d].magic===H)return C[d];return null}(this.compressionMethod))===null)throw new Error("Corrupted zip : compression "+r.pretty(this.compressionMethod)+" unknown (inner file : "+r.transformTo("string",this.fileName)+")");this.decompressed=new L(this.compressedSize,this.uncompressedSize,this.crc32,P,_.readData(this.compressedSize))},"readLocalPart"),readCentralPart:N(function(_){this.versionMadeBy=_.readInt(2),_.skip(2),this.bitFlag=_.readInt(2),this.compressionMethod=_.readString(2),this.date=_.readDate(),this.crc32=_.readInt(4),this.compressedSize=_.readInt(4),this.uncompressedSize=_.readInt(4);var P=_.readInt(2);if(this.extraFieldsLength=_.readInt(2),this.fileCommentLength=_.readInt(2),this.diskNumberStart=_.readInt(2),this.internalFileAttributes=_.readInt(2),this.externalFileAttributes=_.readInt(4),this.localHeaderOffset=_.readInt(4),this.isEncrypted())throw new Error("Encrypted zip are not supported");_.skip(P),this.readExtraFields(_),this.parseZIP64ExtraField(_),this.fileComment=_.readData(this.fileCommentLength)},"readCentralPart"),processAttributes:N(function(){this.unixPermissions=null,this.dosPermissions=null;var _=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),_==0&&(this.dosPermissions=63&this.externalFileAttributes),_==3&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||this.fileNameStr.slice(-1)!=="/"||(this.dir=!0)},"processAttributes"),parseZIP64ExtraField:N(function(){if(this.extraFields[1]){var _=i(this.extraFields[1].value);this.uncompressedSize===r.MAX_VALUE_32BITS&&(this.uncompressedSize=_.readInt(8)),this.compressedSize===r.MAX_VALUE_32BITS&&(this.compressedSize=_.readInt(8)),this.localHeaderOffset===r.MAX_VALUE_32BITS&&(this.localHeaderOffset=_.readInt(8)),this.diskNumberStart===r.MAX_VALUE_32BITS&&(this.diskNumberStart=_.readInt(4))}},"parseZIP64ExtraField"),readExtraFields:N(function(_){var P,h,H,d=_.index+this.extraFieldsLength;for(this.extraFields||(this.extraFields={});_.index+4<d;)P=_.readInt(2),h=_.readInt(2),H=_.readData(h),this.extraFields[P]={id:P,length:h,value:H};_.setIndex(d)},"readExtraFields"),handleUTF8:N(function(){var _=M.uint8array?"uint8array":"array";if(this.useUTF8())this.fileNameStr=l.utf8decode(this.fileName),this.fileCommentStr=l.utf8decode(this.fileComment);else{var P=this.findExtraFieldUnicodePath();if(P!==null)this.fileNameStr=P;else{var h=r.transformTo(_,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(h)}var H=this.findExtraFieldUnicodeComment();if(H!==null)this.fileCommentStr=H;else{var d=r.transformTo(_,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(d)}}},"handleUTF8"),findExtraFieldUnicodePath:N(function(){var _=this.extraFields[28789];if(_){var P=i(_.value);return P.readInt(1)!==1||o(this.fileName)!==P.readInt(4)?null:l.utf8decode(P.readData(_.length-5))}return null},"findExtraFieldUnicodePath"),findExtraFieldUnicodeComment:N(function(){var _=this.extraFields[25461];if(_){var P=i(_.value);return P.readInt(1)!==1||o(this.fileComment)!==P.readInt(4)?null:l.utf8decode(P.readData(_.length-5))}return null},"findExtraFieldUnicodeComment")},R.exports=D},{"./compressedObject":2,"./compressions":3,"./crc32":4,"./reader/readerFor":22,"./support":30,"./utf8":31,"./utils":32}],35:[function(s,R,a){function i(P,h,H){this.name=P,this.dir=H.dir,this.date=H.date,this.comment=H.comment,this.unixPermissions=H.unixPermissions,this.dosPermissions=H.dosPermissions,this._data=h,this._dataBinary=H.binary,this.options={compression:H.compression,compressionOptions:H.compressionOptions}}N(i,"n");var r=s("./stream/StreamHelper"),L=s("./stream/DataWorker"),o=s("./utf8"),l=s("./compressedObject"),C=s("./stream/GenericWorker");i.prototype={internalStream:N(function(P){var h=null,H="string";try{if(!P)throw new Error("No output type specified.");var d=(H=P.toLowerCase())==="string"||H==="text";H!=="binarystring"&&H!=="text"||(H="string"),h=this._decompressWorker();var f=!this._dataBinary;f&&!d&&(h=h.pipe(new o.Utf8EncodeWorker)),!f&&d&&(h=h.pipe(new o.Utf8DecodeWorker))}catch(B){(h=new C("error")).error(B)}return new r(h,H,"")},"internalStream"),async:N(function(P,h){return this.internalStream(P).accumulate(h)},"async"),nodeStream:N(function(P,h){return this.internalStream(P||"nodebuffer").toNodejsStream(h)},"nodeStream"),_compressWorker:N(function(P,h){if(this._data instanceof l&&this._data.compression.magic===P.magic)return this._data.getCompressedWorker();var H=this._decompressWorker();return this._dataBinary||(H=H.pipe(new o.Utf8EncodeWorker)),l.createWorkerFrom(H,P,h)},"_compressWorker"),_decompressWorker:N(function(){return this._data instanceof l?this._data.getContentWorker():this._data instanceof C?this._data:new L(this._data)},"_decompressWorker")};for(var M=["asText","asBinary","asNodeBuffer","asUint8Array","asArrayBuffer"],D=function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},_=0;_<M.length;_++)i.prototype[M[_]]=D;R.exports=i},{"./compressedObject":2,"./stream/DataWorker":27,"./stream/GenericWorker":28,"./stream/StreamHelper":29,"./utf8":31}],36:[function(s,R,a){(function(i){var r,L,o=i.MutationObserver||i.WebKitMutationObserver;if(o){var l=0,C=new o(P),M=i.document.createTextNode("");C.observe(M,{characterData:!0}),r=N(function(){M.data=l=++l%2},"r")}else if(i.setImmediate||i.MessageChannel===void 0)r="document"in i&&"onreadystatechange"in i.document.createElement("script")?function(){var h=i.document.createElement("script");h.onreadystatechange=function(){P(),h.onreadystatechange=null,h.parentNode.removeChild(h),h=null},i.document.documentElement.appendChild(h)}:function(){setTimeout(P,0)};else{var D=new i.MessageChannel;D.port1.onmessage=P,r=N(function(){D.port2.postMessage(0)},"r")}var _=[];function P(){var h,H;L=!0;for(var d=_.length;d;){for(H=_,_=[],h=-1;++h<d;)H[h]();d=_.length}L=!1}N(P,"u"),R.exports=function(h){_.push(h)!==1||L||r()}}).call(this,typeof AA<"u"?AA:typeof self<"u"?self:typeof window<"u"?window:{})},{}],37:[function(s,R,a){var i=s("immediate");function r(){}N(r,"u");var L={},o=["REJECTED"],l=["FULFILLED"],C=["PENDING"];function M(d){if(typeof d!="function")throw new TypeError("resolver must be a function");this.state=C,this.queue=[],this.outcome=void 0,d!==r&&h(this,d)}N(M,"o");function D(d,f,B){this.promise=d,typeof f=="function"&&(this.onFulfilled=f,this.callFulfilled=this.otherCallFulfilled),typeof B=="function"&&(this.onRejected=B,this.callRejected=this.otherCallRejected)}N(D,"h");function _(d,f,B){i(function(){var F;try{F=f(B)}catch(W){return L.reject(d,W)}F===d?L.reject(d,new TypeError("Cannot resolve promise with itself")):L.resolve(d,F)})}N(_,"f");function P(d){var f=d&&d.then;if(d&&(typeof d=="object"||typeof d=="function")&&typeof f=="function")return function(){f.apply(d,arguments)}}N(P,"c");function h(d,f){var B=!1;function F(x){B||(B=!0,L.reject(d,x))}N(F,"n");function W(x){B||(B=!0,L.resolve(d,x))}N(W,"i");var b=H(function(){f(W,F)});b.status==="error"&&F(b.value)}N(h,"d");function H(d,f){var B={};try{B.value=d(f),B.status="success"}catch(F){B.status="error",B.value=F}return B}N(H,"p"),(R.exports=M).prototype.finally=function(d){if(typeof d!="function")return this;var f=this.constructor;return this.then(function(B){return f.resolve(d()).then(function(){return B})},function(B){return f.resolve(d()).then(function(){throw B})})},M.prototype.catch=function(d){return this.then(null,d)},M.prototype.then=function(d,f){if(typeof d!="function"&&this.state===l||typeof f!="function"&&this.state===o)return this;var B=new this.constructor(r);return this.state!==C?_(B,this.state===l?d:f,this.outcome):this.queue.push(new D(B,d,f)),B},D.prototype.callFulfilled=function(d){L.resolve(this.promise,d)},D.prototype.otherCallFulfilled=function(d){_(this.promise,this.onFulfilled,d)},D.prototype.callRejected=function(d){L.reject(this.promise,d)},D.prototype.otherCallRejected=function(d){_(this.promise,this.onRejected,d)},L.resolve=function(d,f){var B=H(P,f);if(B.status==="error")return L.reject(d,B.value);var F=B.value;if(F)h(d,F);else{d.state=l,d.outcome=f;for(var W=-1,b=d.queue.length;++W<b;)d.queue[W].callFulfilled(f)}return d},L.reject=function(d,f){d.state=o,d.outcome=f;for(var B=-1,F=d.queue.length;++B<F;)d.queue[B].callRejected(f);return d},M.resolve=function(d){return d instanceof this?d:L.resolve(new this(r),d)},M.reject=function(d){var f=new this(r);return L.reject(f,d)},M.all=function(d){var f=this;if(Object.prototype.toString.call(d)!=="[object Array]")return this.reject(new TypeError("must be an array"));var B=d.length,F=!1;if(!B)return this.resolve([]);for(var W=new Array(B),b=0,x=-1,$=new this(r);++x<B;)j(d[x],x);return $;function j(z,se){f.resolve(z).then(function(Z){W[se]=Z,++b!==B||F||(F=!0,L.resolve($,W))},function(Z){F||(F=!0,L.reject($,Z))})}},M.race=function(d){var f=this;if(Object.prototype.toString.call(d)!=="[object Array]")return this.reject(new TypeError("must be an array"));var B=d.length,F=!1;if(!B)return this.resolve([]);for(var W=-1,b=new this(r);++W<B;)x=d[W],f.resolve(x).then(function($){F||(F=!0,L.resolve(b,$))},function($){F||(F=!0,L.reject(b,$))});var x;return b}},{immediate:36}],38:[function(s,R,a){var i={};(0,s("./lib/utils/common").assign)(i,s("./lib/deflate"),s("./lib/inflate"),s("./lib/zlib/constants")),R.exports=i},{"./lib/deflate":39,"./lib/inflate":40,"./lib/utils/common":41,"./lib/zlib/constants":44}],39:[function(s,R,a){var i=s("./zlib/deflate"),r=s("./utils/common"),L=s("./utils/strings"),o=s("./zlib/messages"),l=s("./zlib/zstream"),C=Object.prototype.toString,M=0,D=-1,_=0,P=8;function h(d){if(!(this instanceof h))return new h(d);this.options=r.assign({level:D,method:P,chunkSize:16384,windowBits:15,memLevel:8,strategy:_,to:""},d||{});var f=this.options;f.raw&&0<f.windowBits?f.windowBits=-f.windowBits:f.gzip&&0<f.windowBits&&f.windowBits<16&&(f.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var B=i.deflateInit2(this.strm,f.level,f.method,f.windowBits,f.memLevel,f.strategy);if(B!==M)throw new Error(o[B]);if(f.header&&i.deflateSetHeader(this.strm,f.header),f.dictionary){var F;if(F=typeof f.dictionary=="string"?L.string2buf(f.dictionary):C.call(f.dictionary)==="[object ArrayBuffer]"?new Uint8Array(f.dictionary):f.dictionary,(B=i.deflateSetDictionary(this.strm,F))!==M)throw new Error(o[B]);this._dict_set=!0}}N(h,"p");function H(d,f){var B=new h(f);if(B.push(d,!0),B.err)throw B.msg||o[B.err];return B.result}N(H,"n"),h.prototype.push=function(d,f){var B,F,W=this.strm,b=this.options.chunkSize;if(this.ended)return!1;F=f===~~f?f:f===!0?4:0,typeof d=="string"?W.input=L.string2buf(d):C.call(d)==="[object ArrayBuffer]"?W.input=new Uint8Array(d):W.input=d,W.next_in=0,W.avail_in=W.input.length;do{if(W.avail_out===0&&(W.output=new r.Buf8(b),W.next_out=0,W.avail_out=b),(B=i.deflate(W,F))!==1&&B!==M)return this.onEnd(B),!(this.ended=!0);W.avail_out!==0&&(W.avail_in!==0||F!==4&&F!==2)||(this.options.to==="string"?this.onData(L.buf2binstring(r.shrinkBuf(W.output,W.next_out))):this.onData(r.shrinkBuf(W.output,W.next_out)))}while((0<W.avail_in||W.avail_out===0)&&B!==1);return F===4?(B=i.deflateEnd(this.strm),this.onEnd(B),this.ended=!0,B===M):F!==2||(this.onEnd(M),!(W.avail_out=0))},h.prototype.onData=function(d){this.chunks.push(d)},h.prototype.onEnd=function(d){d===M&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=r.flattenChunks(this.chunks)),this.chunks=[],this.err=d,this.msg=this.strm.msg},a.Deflate=h,a.deflate=H,a.deflateRaw=function(d,f){return(f=f||{}).raw=!0,H(d,f)},a.gzip=function(d,f){return(f=f||{}).gzip=!0,H(d,f)}},{"./utils/common":41,"./utils/strings":42,"./zlib/deflate":46,"./zlib/messages":51,"./zlib/zstream":53}],40:[function(s,R,a){var i=s("./zlib/inflate"),r=s("./utils/common"),L=s("./utils/strings"),o=s("./zlib/constants"),l=s("./zlib/messages"),C=s("./zlib/zstream"),M=s("./zlib/gzheader"),D=Object.prototype.toString;function _(h){if(!(this instanceof _))return new _(h);this.options=r.assign({chunkSize:16384,windowBits:0,to:""},h||{});var H=this.options;H.raw&&0<=H.windowBits&&H.windowBits<16&&(H.windowBits=-H.windowBits,H.windowBits===0&&(H.windowBits=-15)),!(0<=H.windowBits&&H.windowBits<16)||h&&h.windowBits||(H.windowBits+=32),15<H.windowBits&&H.windowBits<48&&!(15&H.windowBits)&&(H.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new C,this.strm.avail_out=0;var d=i.inflateInit2(this.strm,H.windowBits);if(d!==o.Z_OK)throw new Error(l[d]);this.header=new M,i.inflateGetHeader(this.strm,this.header)}N(_,"a");function P(h,H){var d=new _(H);if(d.push(h,!0),d.err)throw d.msg||l[d.err];return d.result}N(P,"o"),_.prototype.push=function(h,H){var d,f,B,F,W,b,x=this.strm,$=this.options.chunkSize,j=this.options.dictionary,z=!1;if(this.ended)return!1;f=H===~~H?H:H===!0?o.Z_FINISH:o.Z_NO_FLUSH,typeof h=="string"?x.input=L.binstring2buf(h):D.call(h)==="[object ArrayBuffer]"?x.input=new Uint8Array(h):x.input=h,x.next_in=0,x.avail_in=x.input.length;do{if(x.avail_out===0&&(x.output=new r.Buf8($),x.next_out=0,x.avail_out=$),(d=i.inflate(x,o.Z_NO_FLUSH))===o.Z_NEED_DICT&&j&&(b=typeof j=="string"?L.string2buf(j):D.call(j)==="[object ArrayBuffer]"?new Uint8Array(j):j,d=i.inflateSetDictionary(this.strm,b)),d===o.Z_BUF_ERROR&&z===!0&&(d=o.Z_OK,z=!1),d!==o.Z_STREAM_END&&d!==o.Z_OK)return this.onEnd(d),!(this.ended=!0);x.next_out&&(x.avail_out!==0&&d!==o.Z_STREAM_END&&(x.avail_in!==0||f!==o.Z_FINISH&&f!==o.Z_SYNC_FLUSH)||(this.options.to==="string"?(B=L.utf8border(x.output,x.next_out),F=x.next_out-B,W=L.buf2string(x.output,B),x.next_out=F,x.avail_out=$-F,F&&r.arraySet(x.output,x.output,B,F,0),this.onData(W)):this.onData(r.shrinkBuf(x.output,x.next_out)))),x.avail_in===0&&x.avail_out===0&&(z=!0)}while((0<x.avail_in||x.avail_out===0)&&d!==o.Z_STREAM_END);return d===o.Z_STREAM_END&&(f=o.Z_FINISH),f===o.Z_FINISH?(d=i.inflateEnd(this.strm),this.onEnd(d),this.ended=!0,d===o.Z_OK):f!==o.Z_SYNC_FLUSH||(this.onEnd(o.Z_OK),!(x.avail_out=0))},_.prototype.onData=function(h){this.chunks.push(h)},_.prototype.onEnd=function(h){h===o.Z_OK&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=r.flattenChunks(this.chunks)),this.chunks=[],this.err=h,this.msg=this.strm.msg},a.Inflate=_,a.inflate=P,a.inflateRaw=function(h,H){return(H=H||{}).raw=!0,P(h,H)},a.ungzip=P},{"./utils/common":41,"./utils/strings":42,"./zlib/constants":44,"./zlib/gzheader":47,"./zlib/inflate":49,"./zlib/messages":51,"./zlib/zstream":53}],41:[function(s,R,a){var i=typeof Uint8Array<"u"&&typeof Uint16Array<"u"&&typeof Int32Array<"u";a.assign=function(o){for(var l=Array.prototype.slice.call(arguments,1);l.length;){var C=l.shift();if(C){if(typeof C!="object")throw new TypeError(C+"must be non-object");for(var M in C)C.hasOwnProperty(M)&&(o[M]=C[M])}}return o},a.shrinkBuf=function(o,l){return o.length===l?o:o.subarray?o.subarray(0,l):(o.length=l,o)};var r={arraySet:N(function(o,l,C,M,D){if(l.subarray&&o.subarray)o.set(l.subarray(C,C+M),D);else for(var _=0;_<M;_++)o[D+_]=l[C+_]},"arraySet"),flattenChunks:N(function(o){var l,C,M,D,_,P;for(l=M=0,C=o.length;l<C;l++)M+=o[l].length;for(P=new Uint8Array(M),l=D=0,C=o.length;l<C;l++)_=o[l],P.set(_,D),D+=_.length;return P},"flattenChunks")},L={arraySet:N(function(o,l,C,M,D){for(var _=0;_<M;_++)o[D+_]=l[C+_]},"arraySet"),flattenChunks:N(function(o){return[].concat.apply([],o)},"flattenChunks")};a.setTyped=function(o){o?(a.Buf8=Uint8Array,a.Buf16=Uint16Array,a.Buf32=Int32Array,a.assign(a,r)):(a.Buf8=Array,a.Buf16=Array,a.Buf32=Array,a.assign(a,L))},a.setTyped(i)},{}],42:[function(s,R,a){var i=s("./common"),r=!0,L=!0;try{String.fromCharCode.apply(null,[0])}catch{r=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch{L=!1}for(var o=new i.Buf8(256),l=0;l<256;l++)o[l]=252<=l?6:248<=l?5:240<=l?4:224<=l?3:192<=l?2:1;function C(M,D){if(D<65537&&(M.subarray&&L||!M.subarray&&r))return String.fromCharCode.apply(null,i.shrinkBuf(M,D));for(var _="",P=0;P<D;P++)_+=String.fromCharCode(M[P]);return _}N(C,"l"),o[254]=o[254]=1,a.string2buf=function(M){var D,_,P,h,H,d=M.length,f=0;for(h=0;h<d;h++)(64512&(_=M.charCodeAt(h)))==55296&&h+1<d&&(64512&(P=M.charCodeAt(h+1)))==56320&&(_=65536+(_-55296<<10)+(P-56320),h++),f+=_<128?1:_<2048?2:_<65536?3:4;for(D=new i.Buf8(f),h=H=0;H<f;h++)(64512&(_=M.charCodeAt(h)))==55296&&h+1<d&&(64512&(P=M.charCodeAt(h+1)))==56320&&(_=65536+(_-55296<<10)+(P-56320),h++),_<128?D[H++]=_:(_<2048?D[H++]=192|_>>>6:(_<65536?D[H++]=224|_>>>12:(D[H++]=240|_>>>18,D[H++]=128|_>>>12&63),D[H++]=128|_>>>6&63),D[H++]=128|63&_);return D},a.buf2binstring=function(M){return C(M,M.length)},a.binstring2buf=function(M){for(var D=new i.Buf8(M.length),_=0,P=D.length;_<P;_++)D[_]=M.charCodeAt(_);return D},a.buf2string=function(M,D){var _,P,h,H,d=D||M.length,f=new Array(2*d);for(_=P=0;_<d;)if((h=M[_++])<128)f[P++]=h;else if(4<(H=o[h]))f[P++]=65533,_+=H-1;else{for(h&=H===2?31:H===3?15:7;1<H&&_<d;)h=h<<6|63&M[_++],H--;1<H?f[P++]=65533:h<65536?f[P++]=h:(h-=65536,f[P++]=55296|h>>10&1023,f[P++]=56320|1023&h)}return C(f,P)},a.utf8border=function(M,D){var _;for((D=D||M.length)>M.length&&(D=M.length),_=D-1;0<=_&&(192&M[_])==128;)_--;return _<0||_===0?D:_+o[M[_]]>D?_:D}},{"./common":41}],43:[function(s,R,a){R.exports=function(i,r,L,o){for(var l=65535&i|0,C=i>>>16&65535|0,M=0;L!==0;){for(L-=M=2e3<L?2e3:L;C=C+(l=l+r[o++]|0)|0,--M;);l%=65521,C%=65521}return l|C<<16|0}},{}],44:[function(s,R,a){R.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],45:[function(s,R,a){var i=function(){for(var r,L=[],o=0;o<256;o++){r=o;for(var l=0;l<8;l++)r=1&r?3988292384^r>>>1:r>>>1;L[o]=r}return L}();R.exports=function(r,L,o,l){var C=i,M=l+o;r^=-1;for(var D=l;D<M;D++)r=r>>>8^C[255&(r^L[D])];return-1^r}},{}],46:[function(s,R,a){var i,r=s("../utils/common"),L=s("./trees"),o=s("./adler32"),l=s("./crc32"),C=s("./messages"),M=0,D=4,_=0,P=-2,h=-1,H=4,d=2,f=8,B=9,F=286,W=30,b=19,x=2*F+1,$=15,j=3,z=258,se=z+j+1,Z=42,q=113,p=1,oe=2,me=3,Me=4;function We(v,Ke){return v.msg=C[Ke],Ke}N(We,"R");function De(v){return(v<<1)-(4<v?9:0)}N(De,"T");function ie(v){for(var Ke=v.length;0<=--Ke;)v[Ke]=0}N(ie,"D");function Ae(v){var Ke=v.state,fe=Ke.pending;fe>v.avail_out&&(fe=v.avail_out),fe!==0&&(r.arraySet(v.output,Ke.pending_buf,Ke.pending_out,fe,v.next_out),v.next_out+=fe,Ke.pending_out+=fe,v.total_out+=fe,v.avail_out-=fe,Ke.pending-=fe,Ke.pending===0&&(Ke.pending_out=0))}N(Ae,"F");function ee(v,Ke){L._tr_flush_block(v,0<=v.block_start?v.block_start:-1,v.strstart-v.block_start,Ke),v.block_start=v.strstart,Ae(v.strm)}N(ee,"N");function Le(v,Ke){v.pending_buf[v.pending++]=Ke}N(Le,"U");function ue(v,Ke){v.pending_buf[v.pending++]=Ke>>>8&255,v.pending_buf[v.pending++]=255&Ke}N(ue,"P");function de(v,Ke){var fe,re,ae=v.max_chain_length,Pe=v.strstart,Qe=v.prev_length,Ze=v.nice_match,He=v.strstart>v.w_size-se?v.strstart-(v.w_size-se):0,pe=v.window,qe=v.w_mask,$e=v.prev,Mt=v.strstart+z,Jt=pe[Pe+Qe-1],xt=pe[Pe+Qe];v.prev_length>=v.good_match&&(ae>>=2),Ze>v.lookahead&&(Ze=v.lookahead);do if(pe[(fe=Ke)+Qe]===xt&&pe[fe+Qe-1]===Jt&&pe[fe]===pe[Pe]&&pe[++fe]===pe[Pe+1]){Pe+=2,fe++;do;while(pe[++Pe]===pe[++fe]&&pe[++Pe]===pe[++fe]&&pe[++Pe]===pe[++fe]&&pe[++Pe]===pe[++fe]&&pe[++Pe]===pe[++fe]&&pe[++Pe]===pe[++fe]&&pe[++Pe]===pe[++fe]&&pe[++Pe]===pe[++fe]&&Pe<Mt);if(re=z-(Mt-Pe),Pe=Mt-z,Qe<re){if(v.match_start=Ke,Ze<=(Qe=re))break;Jt=pe[Pe+Qe-1],xt=pe[Pe+Qe]}}while((Ke=$e[Ke&qe])>He&&--ae!=0);return Qe<=v.lookahead?Qe:v.lookahead}N(de,"L");function Rt(v){var Ke,fe,re,ae,Pe,Qe,Ze,He,pe,qe,$e=v.w_size;do{if(ae=v.window_size-v.lookahead-v.strstart,v.strstart>=$e+($e-se)){for(r.arraySet(v.window,v.window,$e,$e,0),v.match_start-=$e,v.strstart-=$e,v.block_start-=$e,Ke=fe=v.hash_size;re=v.head[--Ke],v.head[Ke]=$e<=re?re-$e:0,--fe;);for(Ke=fe=$e;re=v.prev[--Ke],v.prev[Ke]=$e<=re?re-$e:0,--fe;);ae+=$e}if(v.strm.avail_in===0)break;if(Qe=v.strm,Ze=v.window,He=v.strstart+v.lookahead,pe=ae,qe=void 0,qe=Qe.avail_in,pe<qe&&(qe=pe),fe=qe===0?0:(Qe.avail_in-=qe,r.arraySet(Ze,Qe.input,Qe.next_in,qe,He),Qe.state.wrap===1?Qe.adler=o(Qe.adler,Ze,qe,He):Qe.state.wrap===2&&(Qe.adler=l(Qe.adler,Ze,qe,He)),Qe.next_in+=qe,Qe.total_in+=qe,qe),v.lookahead+=fe,v.lookahead+v.insert>=j)for(Pe=v.strstart-v.insert,v.ins_h=v.window[Pe],v.ins_h=(v.ins_h<<v.hash_shift^v.window[Pe+1])&v.hash_mask;v.insert&&(v.ins_h=(v.ins_h<<v.hash_shift^v.window[Pe+j-1])&v.hash_mask,v.prev[Pe&v.w_mask]=v.head[v.ins_h],v.head[v.ins_h]=Pe,Pe++,v.insert--,!(v.lookahead+v.insert<j)););}while(v.lookahead<se&&v.strm.avail_in!==0)}N(Rt,"j");function Bt(v,Ke){for(var fe,re;;){if(v.lookahead<se){if(Rt(v),v.lookahead<se&&Ke===M)return p;if(v.lookahead===0)break}if(fe=0,v.lookahead>=j&&(v.ins_h=(v.ins_h<<v.hash_shift^v.window[v.strstart+j-1])&v.hash_mask,fe=v.prev[v.strstart&v.w_mask]=v.head[v.ins_h],v.head[v.ins_h]=v.strstart),fe!==0&&v.strstart-fe<=v.w_size-se&&(v.match_length=de(v,fe)),v.match_length>=j)if(re=L._tr_tally(v,v.strstart-v.match_start,v.match_length-j),v.lookahead-=v.match_length,v.match_length<=v.max_lazy_match&&v.lookahead>=j){for(v.match_length--;v.strstart++,v.ins_h=(v.ins_h<<v.hash_shift^v.window[v.strstart+j-1])&v.hash_mask,fe=v.prev[v.strstart&v.w_mask]=v.head[v.ins_h],v.head[v.ins_h]=v.strstart,--v.match_length!=0;);v.strstart++}else v.strstart+=v.match_length,v.match_length=0,v.ins_h=v.window[v.strstart],v.ins_h=(v.ins_h<<v.hash_shift^v.window[v.strstart+1])&v.hash_mask;else re=L._tr_tally(v,0,v.window[v.strstart]),v.lookahead--,v.strstart++;if(re&&(ee(v,!1),v.strm.avail_out===0))return p}return v.insert=v.strstart<j-1?v.strstart:j-1,Ke===D?(ee(v,!0),v.strm.avail_out===0?me:Me):v.last_lit&&(ee(v,!1),v.strm.avail_out===0)?p:oe}N(Bt,"Z");function tt(v,Ke){for(var fe,re,ae;;){if(v.lookahead<se){if(Rt(v),v.lookahead<se&&Ke===M)return p;if(v.lookahead===0)break}if(fe=0,v.lookahead>=j&&(v.ins_h=(v.ins_h<<v.hash_shift^v.window[v.strstart+j-1])&v.hash_mask,fe=v.prev[v.strstart&v.w_mask]=v.head[v.ins_h],v.head[v.ins_h]=v.strstart),v.prev_length=v.match_length,v.prev_match=v.match_start,v.match_length=j-1,fe!==0&&v.prev_length<v.max_lazy_match&&v.strstart-fe<=v.w_size-se&&(v.match_length=de(v,fe),v.match_length<=5&&(v.strategy===1||v.match_length===j&&4096<v.strstart-v.match_start)&&(v.match_length=j-1)),v.prev_length>=j&&v.match_length<=v.prev_length){for(ae=v.strstart+v.lookahead-j,re=L._tr_tally(v,v.strstart-1-v.prev_match,v.prev_length-j),v.lookahead-=v.prev_length-1,v.prev_length-=2;++v.strstart<=ae&&(v.ins_h=(v.ins_h<<v.hash_shift^v.window[v.strstart+j-1])&v.hash_mask,fe=v.prev[v.strstart&v.w_mask]=v.head[v.ins_h],v.head[v.ins_h]=v.strstart),--v.prev_length!=0;);if(v.match_available=0,v.match_length=j-1,v.strstart++,re&&(ee(v,!1),v.strm.avail_out===0))return p}else if(v.match_available){if((re=L._tr_tally(v,0,v.window[v.strstart-1]))&&ee(v,!1),v.strstart++,v.lookahead--,v.strm.avail_out===0)return p}else v.match_available=1,v.strstart++,v.lookahead--}return v.match_available&&(re=L._tr_tally(v,0,v.window[v.strstart-1]),v.match_available=0),v.insert=v.strstart<j-1?v.strstart:j-1,Ke===D?(ee(v,!0),v.strm.avail_out===0?me:Me):v.last_lit&&(ee(v,!1),v.strm.avail_out===0)?p:oe}N(tt,"W");function ht(v,Ke,fe,re,ae){this.good_length=v,this.max_lazy=Ke,this.nice_length=fe,this.max_chain=re,this.func=ae}N(ht,"M");function eA(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=f,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new r.Buf16(2*x),this.dyn_dtree=new r.Buf16(2*(2*W+1)),this.bl_tree=new r.Buf16(2*(2*b+1)),ie(this.dyn_ltree),ie(this.dyn_dtree),ie(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new r.Buf16($+1),this.heap=new r.Buf16(2*F+1),ie(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new r.Buf16(2*F+1),ie(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}N(eA,"H");function Xt(v){var Ke;return v&&v.state?(v.total_in=v.total_out=0,v.data_type=d,(Ke=v.state).pending=0,Ke.pending_out=0,Ke.wrap<0&&(Ke.wrap=-Ke.wrap),Ke.status=Ke.wrap?Z:q,v.adler=Ke.wrap===2?0:1,Ke.last_flush=M,L._tr_init(Ke),_):We(v,P)}N(Xt,"G");function XA(v){var Ke=Xt(v);return Ke===_&&function(fe){fe.window_size=2*fe.w_size,ie(fe.head),fe.max_lazy_match=i[fe.level].max_lazy,fe.good_match=i[fe.level].good_length,fe.nice_match=i[fe.level].nice_length,fe.max_chain_length=i[fe.level].max_chain,fe.strstart=0,fe.block_start=0,fe.lookahead=0,fe.insert=0,fe.match_length=fe.prev_length=j-1,fe.match_available=0,fe.ins_h=0}(v.state),Ke}N(XA,"K");function VA(v,Ke,fe,re,ae,Pe){if(!v)return P;var Qe=1;if(Ke===h&&(Ke=6),re<0?(Qe=0,re=-re):15<re&&(Qe=2,re-=16),ae<1||B<ae||fe!==f||re<8||15<re||Ke<0||9<Ke||Pe<0||H<Pe)return We(v,P);re===8&&(re=9);var Ze=new eA;return(v.state=Ze).strm=v,Ze.wrap=Qe,Ze.gzhead=null,Ze.w_bits=re,Ze.w_size=1<<Ze.w_bits,Ze.w_mask=Ze.w_size-1,Ze.hash_bits=ae+7,Ze.hash_size=1<<Ze.hash_bits,Ze.hash_mask=Ze.hash_size-1,Ze.hash_shift=~~((Ze.hash_bits+j-1)/j),Ze.window=new r.Buf8(2*Ze.w_size),Ze.head=new r.Buf16(Ze.hash_size),Ze.prev=new r.Buf16(Ze.w_size),Ze.lit_bufsize=1<<ae+6,Ze.pending_buf_size=4*Ze.lit_bufsize,Ze.pending_buf=new r.Buf8(Ze.pending_buf_size),Ze.d_buf=1*Ze.lit_bufsize,Ze.l_buf=3*Ze.lit_bufsize,Ze.level=Ke,Ze.strategy=Pe,Ze.method=fe,XA(v)}N(VA,"Y"),i=[new ht(0,0,0,0,function(v,Ke){var fe=65535;for(fe>v.pending_buf_size-5&&(fe=v.pending_buf_size-5);;){if(v.lookahead<=1){if(Rt(v),v.lookahead===0&&Ke===M)return p;if(v.lookahead===0)break}v.strstart+=v.lookahead,v.lookahead=0;var re=v.block_start+fe;if((v.strstart===0||v.strstart>=re)&&(v.lookahead=v.strstart-re,v.strstart=re,ee(v,!1),v.strm.avail_out===0)||v.strstart-v.block_start>=v.w_size-se&&(ee(v,!1),v.strm.avail_out===0))return p}return v.insert=0,Ke===D?(ee(v,!0),v.strm.avail_out===0?me:Me):(v.strstart>v.block_start&&(ee(v,!1),v.strm.avail_out),p)}),new ht(4,4,8,4,Bt),new ht(4,5,16,8,Bt),new ht(4,6,32,32,Bt),new ht(4,4,16,16,tt),new ht(8,16,32,32,tt),new ht(8,16,128,128,tt),new ht(8,32,128,256,tt),new ht(32,128,258,1024,tt),new ht(32,258,258,4096,tt)],a.deflateInit=function(v,Ke){return VA(v,Ke,f,15,8,0)},a.deflateInit2=VA,a.deflateReset=XA,a.deflateResetKeep=Xt,a.deflateSetHeader=function(v,Ke){return v&&v.state?v.state.wrap!==2?P:(v.state.gzhead=Ke,_):P},a.deflate=function(v,Ke){var fe,re,ae,Pe;if(!v||!v.state||5<Ke||Ke<0)return v?We(v,P):P;if(re=v.state,!v.output||!v.input&&v.avail_in!==0||re.status===666&&Ke!==D)return We(v,v.avail_out===0?-5:P);if(re.strm=v,fe=re.last_flush,re.last_flush=Ke,re.status===Z)if(re.wrap===2)v.adler=0,Le(re,31),Le(re,139),Le(re,8),re.gzhead?(Le(re,(re.gzhead.text?1:0)+(re.gzhead.hcrc?2:0)+(re.gzhead.extra?4:0)+(re.gzhead.name?8:0)+(re.gzhead.comment?16:0)),Le(re,255&re.gzhead.time),Le(re,re.gzhead.time>>8&255),Le(re,re.gzhead.time>>16&255),Le(re,re.gzhead.time>>24&255),Le(re,re.level===9?2:2<=re.strategy||re.level<2?4:0),Le(re,255&re.gzhead.os),re.gzhead.extra&&re.gzhead.extra.length&&(Le(re,255&re.gzhead.extra.length),Le(re,re.gzhead.extra.length>>8&255)),re.gzhead.hcrc&&(v.adler=l(v.adler,re.pending_buf,re.pending,0)),re.gzindex=0,re.status=69):(Le(re,0),Le(re,0),Le(re,0),Le(re,0),Le(re,0),Le(re,re.level===9?2:2<=re.strategy||re.level<2?4:0),Le(re,3),re.status=q);else{var Qe=f+(re.w_bits-8<<4)<<8;Qe|=(2<=re.strategy||re.level<2?0:re.level<6?1:re.level===6?2:3)<<6,re.strstart!==0&&(Qe|=32),Qe+=31-Qe%31,re.status=q,ue(re,Qe),re.strstart!==0&&(ue(re,v.adler>>>16),ue(re,65535&v.adler)),v.adler=1}if(re.status===69)if(re.gzhead.extra){for(ae=re.pending;re.gzindex<(65535&re.gzhead.extra.length)&&(re.pending!==re.pending_buf_size||(re.gzhead.hcrc&&re.pending>ae&&(v.adler=l(v.adler,re.pending_buf,re.pending-ae,ae)),Ae(v),ae=re.pending,re.pending!==re.pending_buf_size));)Le(re,255&re.gzhead.extra[re.gzindex]),re.gzindex++;re.gzhead.hcrc&&re.pending>ae&&(v.adler=l(v.adler,re.pending_buf,re.pending-ae,ae)),re.gzindex===re.gzhead.extra.length&&(re.gzindex=0,re.status=73)}else re.status=73;if(re.status===73)if(re.gzhead.name){ae=re.pending;do{if(re.pending===re.pending_buf_size&&(re.gzhead.hcrc&&re.pending>ae&&(v.adler=l(v.adler,re.pending_buf,re.pending-ae,ae)),Ae(v),ae=re.pending,re.pending===re.pending_buf_size)){Pe=1;break}Pe=re.gzindex<re.gzhead.name.length?255&re.gzhead.name.charCodeAt(re.gzindex++):0,Le(re,Pe)}while(Pe!==0);re.gzhead.hcrc&&re.pending>ae&&(v.adler=l(v.adler,re.pending_buf,re.pending-ae,ae)),Pe===0&&(re.gzindex=0,re.status=91)}else re.status=91;if(re.status===91)if(re.gzhead.comment){ae=re.pending;do{if(re.pending===re.pending_buf_size&&(re.gzhead.hcrc&&re.pending>ae&&(v.adler=l(v.adler,re.pending_buf,re.pending-ae,ae)),Ae(v),ae=re.pending,re.pending===re.pending_buf_size)){Pe=1;break}Pe=re.gzindex<re.gzhead.comment.length?255&re.gzhead.comment.charCodeAt(re.gzindex++):0,Le(re,Pe)}while(Pe!==0);re.gzhead.hcrc&&re.pending>ae&&(v.adler=l(v.adler,re.pending_buf,re.pending-ae,ae)),Pe===0&&(re.status=103)}else re.status=103;if(re.status===103&&(re.gzhead.hcrc?(re.pending+2>re.pending_buf_size&&Ae(v),re.pending+2<=re.pending_buf_size&&(Le(re,255&v.adler),Le(re,v.adler>>8&255),v.adler=0,re.status=q)):re.status=q),re.pending!==0){if(Ae(v),v.avail_out===0)return re.last_flush=-1,_}else if(v.avail_in===0&&De(Ke)<=De(fe)&&Ke!==D)return We(v,-5);if(re.status===666&&v.avail_in!==0)return We(v,-5);if(v.avail_in!==0||re.lookahead!==0||Ke!==M&&re.status!==666){var Ze=re.strategy===2?function(He,pe){for(var qe;;){if(He.lookahead===0&&(Rt(He),He.lookahead===0)){if(pe===M)return p;break}if(He.match_length=0,qe=L._tr_tally(He,0,He.window[He.strstart]),He.lookahead--,He.strstart++,qe&&(ee(He,!1),He.strm.avail_out===0))return p}return He.insert=0,pe===D?(ee(He,!0),He.strm.avail_out===0?me:Me):He.last_lit&&(ee(He,!1),He.strm.avail_out===0)?p:oe}(re,Ke):re.strategy===3?function(He,pe){for(var qe,$e,Mt,Jt,xt=He.window;;){if(He.lookahead<=z){if(Rt(He),He.lookahead<=z&&pe===M)return p;if(He.lookahead===0)break}if(He.match_length=0,He.lookahead>=j&&0<He.strstart&&($e=xt[Mt=He.strstart-1])===xt[++Mt]&&$e===xt[++Mt]&&$e===xt[++Mt]){Jt=He.strstart+z;do;while($e===xt[++Mt]&&$e===xt[++Mt]&&$e===xt[++Mt]&&$e===xt[++Mt]&&$e===xt[++Mt]&&$e===xt[++Mt]&&$e===xt[++Mt]&&$e===xt[++Mt]&&Mt<Jt);He.match_length=z-(Jt-Mt),He.match_length>He.lookahead&&(He.match_length=He.lookahead)}if(He.match_length>=j?(qe=L._tr_tally(He,1,He.match_length-j),He.lookahead-=He.match_length,He.strstart+=He.match_length,He.match_length=0):(qe=L._tr_tally(He,0,He.window[He.strstart]),He.lookahead--,He.strstart++),qe&&(ee(He,!1),He.strm.avail_out===0))return p}return He.insert=0,pe===D?(ee(He,!0),He.strm.avail_out===0?me:Me):He.last_lit&&(ee(He,!1),He.strm.avail_out===0)?p:oe}(re,Ke):i[re.level].func(re,Ke);if(Ze!==me&&Ze!==Me||(re.status=666),Ze===p||Ze===me)return v.avail_out===0&&(re.last_flush=-1),_;if(Ze===oe&&(Ke===1?L._tr_align(re):Ke!==5&&(L._tr_stored_block(re,0,0,!1),Ke===3&&(ie(re.head),re.lookahead===0&&(re.strstart=0,re.block_start=0,re.insert=0))),Ae(v),v.avail_out===0))return re.last_flush=-1,_}return Ke!==D?_:re.wrap<=0?1:(re.wrap===2?(Le(re,255&v.adler),Le(re,v.adler>>8&255),Le(re,v.adler>>16&255),Le(re,v.adler>>24&255),Le(re,255&v.total_in),Le(re,v.total_in>>8&255),Le(re,v.total_in>>16&255),Le(re,v.total_in>>24&255)):(ue(re,v.adler>>>16),ue(re,65535&v.adler)),Ae(v),0<re.wrap&&(re.wrap=-re.wrap),re.pending!==0?_:1)},a.deflateEnd=function(v){var Ke;return v&&v.state?(Ke=v.state.status)!==Z&&Ke!==69&&Ke!==73&&Ke!==91&&Ke!==103&&Ke!==q&&Ke!==666?We(v,P):(v.state=null,Ke===q?We(v,-3):_):P},a.deflateSetDictionary=function(v,Ke){var fe,re,ae,Pe,Qe,Ze,He,pe,qe=Ke.length;if(!v||!v.state||(Pe=(fe=v.state).wrap)===2||Pe===1&&fe.status!==Z||fe.lookahead)return P;for(Pe===1&&(v.adler=o(v.adler,Ke,qe,0)),fe.wrap=0,qe>=fe.w_size&&(Pe===0&&(ie(fe.head),fe.strstart=0,fe.block_start=0,fe.insert=0),pe=new r.Buf8(fe.w_size),r.arraySet(pe,Ke,qe-fe.w_size,fe.w_size,0),Ke=pe,qe=fe.w_size),Qe=v.avail_in,Ze=v.next_in,He=v.input,v.avail_in=qe,v.next_in=0,v.input=Ke,Rt(fe);fe.lookahead>=j;){for(re=fe.strstart,ae=fe.lookahead-(j-1);fe.ins_h=(fe.ins_h<<fe.hash_shift^fe.window[re+j-1])&fe.hash_mask,fe.prev[re&fe.w_mask]=fe.head[fe.ins_h],fe.head[fe.ins_h]=re,re++,--ae;);fe.strstart=re,fe.lookahead=j-1,Rt(fe)}return fe.strstart+=fe.lookahead,fe.block_start=fe.strstart,fe.insert=fe.lookahead,fe.lookahead=0,fe.match_length=fe.prev_length=j-1,fe.match_available=0,v.next_in=Ze,v.input=He,v.avail_in=Qe,fe.wrap=Pe,_},a.deflateInfo="pako deflate (from Nodeca project)"},{"../utils/common":41,"./adler32":43,"./crc32":45,"./messages":51,"./trees":52}],47:[function(s,R,a){R.exports=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}},{}],48:[function(s,R,a){R.exports=function(i,r){var L,o,l,C,M,D,_,P,h,H,d,f,B,F,W,b,x,$,j,z,se,Z,q,p,oe;L=i.state,o=i.next_in,p=i.input,l=o+(i.avail_in-5),C=i.next_out,oe=i.output,M=C-(r-i.avail_out),D=C+(i.avail_out-257),_=L.dmax,P=L.wsize,h=L.whave,H=L.wnext,d=L.window,f=L.hold,B=L.bits,F=L.lencode,W=L.distcode,b=(1<<L.lenbits)-1,x=(1<<L.distbits)-1;e:do{B<15&&(f+=p[o++]<<B,B+=8,f+=p[o++]<<B,B+=8),$=F[f&b];t:for(;;){if(f>>>=j=$>>>24,B-=j,(j=$>>>16&255)===0)oe[C++]=65535&$;else{if(!(16&j)){if(!(64&j)){$=F[(65535&$)+(f&(1<<j)-1)];continue t}if(32&j){L.mode=12;break e}i.msg="invalid literal/length code",L.mode=30;break e}z=65535&$,(j&=15)&&(B<j&&(f+=p[o++]<<B,B+=8),z+=f&(1<<j)-1,f>>>=j,B-=j),B<15&&(f+=p[o++]<<B,B+=8,f+=p[o++]<<B,B+=8),$=W[f&x];A:for(;;){if(f>>>=j=$>>>24,B-=j,!(16&(j=$>>>16&255))){if(!(64&j)){$=W[(65535&$)+(f&(1<<j)-1)];continue A}i.msg="invalid distance code",L.mode=30;break e}if(se=65535&$,B<(j&=15)&&(f+=p[o++]<<B,(B+=8)<j&&(f+=p[o++]<<B,B+=8)),_<(se+=f&(1<<j)-1)){i.msg="invalid distance too far back",L.mode=30;break e}if(f>>>=j,B-=j,(j=C-M)<se){if(h<(j=se-j)&&L.sane){i.msg="invalid distance too far back",L.mode=30;break e}if(q=d,(Z=0)===H){if(Z+=P-j,j<z){for(z-=j;oe[C++]=d[Z++],--j;);Z=C-se,q=oe}}else if(H<j){if(Z+=P+H-j,(j-=H)<z){for(z-=j;oe[C++]=d[Z++],--j;);if(Z=0,H<z){for(z-=j=H;oe[C++]=d[Z++],--j;);Z=C-se,q=oe}}}else if(Z+=H-j,j<z){for(z-=j;oe[C++]=d[Z++],--j;);Z=C-se,q=oe}for(;2<z;)oe[C++]=q[Z++],oe[C++]=q[Z++],oe[C++]=q[Z++],z-=3;z&&(oe[C++]=q[Z++],1<z&&(oe[C++]=q[Z++]))}else{for(Z=C-se;oe[C++]=oe[Z++],oe[C++]=oe[Z++],oe[C++]=oe[Z++],2<(z-=3););z&&(oe[C++]=oe[Z++],1<z&&(oe[C++]=oe[Z++]))}break}}break}}while(o<l&&C<D);o-=z=B>>3,f&=(1<<(B-=z<<3))-1,i.next_in=o,i.next_out=C,i.avail_in=o<l?l-o+5:5-(o-l),i.avail_out=C<D?D-C+257:257-(C-D),L.hold=f,L.bits=B}},{}],49:[function(s,R,a){var i=s("../utils/common"),r=s("./adler32"),L=s("./crc32"),o=s("./inffast"),l=s("./inftrees"),C=1,M=2,D=0,_=-2,P=1,h=852,H=592;function d(Z){return(Z>>>24&255)+(Z>>>8&65280)+((65280&Z)<<8)+((255&Z)<<24)}N(d,"L");function f(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new i.Buf16(320),this.work=new i.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}N(f,"s");function B(Z){var q;return Z&&Z.state?(q=Z.state,Z.total_in=Z.total_out=q.total=0,Z.msg="",q.wrap&&(Z.adler=1&q.wrap),q.mode=P,q.last=0,q.havedict=0,q.dmax=32768,q.head=null,q.hold=0,q.bits=0,q.lencode=q.lendyn=new i.Buf32(h),q.distcode=q.distdyn=new i.Buf32(H),q.sane=1,q.back=-1,D):_}N(B,"a");function F(Z){var q;return Z&&Z.state?((q=Z.state).wsize=0,q.whave=0,q.wnext=0,B(Z)):_}N(F,"o");function W(Z,q){var p,oe;return Z&&Z.state?(oe=Z.state,q<0?(p=0,q=-q):(p=1+(q>>4),q<48&&(q&=15)),q&&(q<8||15<q)?_:(oe.window!==null&&oe.wbits!==q&&(oe.window=null),oe.wrap=p,oe.wbits=q,F(Z))):_}N(W,"h");function b(Z,q){var p,oe;return Z?(oe=new f,(Z.state=oe).window=null,(p=W(Z,q))!==D&&(Z.state=null),p):_}N(b,"u");var x,$,j=!0;function z(Z){if(j){var q;for(x=new i.Buf32(512),$=new i.Buf32(32),q=0;q<144;)Z.lens[q++]=8;for(;q<256;)Z.lens[q++]=9;for(;q<280;)Z.lens[q++]=7;for(;q<288;)Z.lens[q++]=8;for(l(C,Z.lens,0,288,x,0,Z.work,{bits:9}),q=0;q<32;)Z.lens[q++]=5;l(M,Z.lens,0,32,$,0,Z.work,{bits:5}),j=!1}Z.lencode=x,Z.lenbits=9,Z.distcode=$,Z.distbits=5}N(z,"j");function se(Z,q,p,oe){var me,Me=Z.state;return Me.window===null&&(Me.wsize=1<<Me.wbits,Me.wnext=0,Me.whave=0,Me.window=new i.Buf8(Me.wsize)),oe>=Me.wsize?(i.arraySet(Me.window,q,p-Me.wsize,Me.wsize,0),Me.wnext=0,Me.whave=Me.wsize):(oe<(me=Me.wsize-Me.wnext)&&(me=oe),i.arraySet(Me.window,q,p-oe,me,Me.wnext),(oe-=me)?(i.arraySet(Me.window,q,p-oe,oe,0),Me.wnext=oe,Me.whave=Me.wsize):(Me.wnext+=me,Me.wnext===Me.wsize&&(Me.wnext=0),Me.whave<Me.wsize&&(Me.whave+=me))),0}N(se,"Z"),a.inflateReset=F,a.inflateReset2=W,a.inflateResetKeep=B,a.inflateInit=function(Z){return b(Z,15)},a.inflateInit2=b,a.inflate=function(Z,q){var p,oe,me,Me,We,De,ie,Ae,ee,Le,ue,de,Rt,Bt,tt,ht,eA,Xt,XA,VA,v,Ke,fe,re,ae=0,Pe=new i.Buf8(4),Qe=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!Z||!Z.state||!Z.output||!Z.input&&Z.avail_in!==0)return _;(p=Z.state).mode===12&&(p.mode=13),We=Z.next_out,me=Z.output,ie=Z.avail_out,Me=Z.next_in,oe=Z.input,De=Z.avail_in,Ae=p.hold,ee=p.bits,Le=De,ue=ie,Ke=D;e:for(;;)switch(p.mode){case P:if(p.wrap===0){p.mode=13;break}for(;ee<16;){if(De===0)break e;De--,Ae+=oe[Me++]<<ee,ee+=8}if(2&p.wrap&&Ae===35615){Pe[p.check=0]=255&Ae,Pe[1]=Ae>>>8&255,p.check=L(p.check,Pe,2,0),ee=Ae=0,p.mode=2;break}if(p.flags=0,p.head&&(p.head.done=!1),!(1&p.wrap)||(((255&Ae)<<8)+(Ae>>8))%31){Z.msg="incorrect header check",p.mode=30;break}if((15&Ae)!=8){Z.msg="unknown compression method",p.mode=30;break}if(ee-=4,v=8+(15&(Ae>>>=4)),p.wbits===0)p.wbits=v;else if(v>p.wbits){Z.msg="invalid window size",p.mode=30;break}p.dmax=1<<v,Z.adler=p.check=1,p.mode=512&Ae?10:12,ee=Ae=0;break;case 2:for(;ee<16;){if(De===0)break e;De--,Ae+=oe[Me++]<<ee,ee+=8}if(p.flags=Ae,(255&p.flags)!=8){Z.msg="unknown compression method",p.mode=30;break}if(57344&p.flags){Z.msg="unknown header flags set",p.mode=30;break}p.head&&(p.head.text=Ae>>8&1),512&p.flags&&(Pe[0]=255&Ae,Pe[1]=Ae>>>8&255,p.check=L(p.check,Pe,2,0)),ee=Ae=0,p.mode=3;case 3:for(;ee<32;){if(De===0)break e;De--,Ae+=oe[Me++]<<ee,ee+=8}p.head&&(p.head.time=Ae),512&p.flags&&(Pe[0]=255&Ae,Pe[1]=Ae>>>8&255,Pe[2]=Ae>>>16&255,Pe[3]=Ae>>>24&255,p.check=L(p.check,Pe,4,0)),ee=Ae=0,p.mode=4;case 4:for(;ee<16;){if(De===0)break e;De--,Ae+=oe[Me++]<<ee,ee+=8}p.head&&(p.head.xflags=255&Ae,p.head.os=Ae>>8),512&p.flags&&(Pe[0]=255&Ae,Pe[1]=Ae>>>8&255,p.check=L(p.check,Pe,2,0)),ee=Ae=0,p.mode=5;case 5:if(1024&p.flags){for(;ee<16;){if(De===0)break e;De--,Ae+=oe[Me++]<<ee,ee+=8}p.length=Ae,p.head&&(p.head.extra_len=Ae),512&p.flags&&(Pe[0]=255&Ae,Pe[1]=Ae>>>8&255,p.check=L(p.check,Pe,2,0)),ee=Ae=0}else p.head&&(p.head.extra=null);p.mode=6;case 6:if(1024&p.flags&&(De<(de=p.length)&&(de=De),de&&(p.head&&(v=p.head.extra_len-p.length,p.head.extra||(p.head.extra=new Array(p.head.extra_len)),i.arraySet(p.head.extra,oe,Me,de,v)),512&p.flags&&(p.check=L(p.check,oe,de,Me)),De-=de,Me+=de,p.length-=de),p.length))break e;p.length=0,p.mode=7;case 7:if(2048&p.flags){if(De===0)break e;for(de=0;v=oe[Me+de++],p.head&&v&&p.length<65536&&(p.head.name+=String.fromCharCode(v)),v&&de<De;);if(512&p.flags&&(p.check=L(p.check,oe,de,Me)),De-=de,Me+=de,v)break e}else p.head&&(p.head.name=null);p.length=0,p.mode=8;case 8:if(4096&p.flags){if(De===0)break e;for(de=0;v=oe[Me+de++],p.head&&v&&p.length<65536&&(p.head.comment+=String.fromCharCode(v)),v&&de<De;);if(512&p.flags&&(p.check=L(p.check,oe,de,Me)),De-=de,Me+=de,v)break e}else p.head&&(p.head.comment=null);p.mode=9;case 9:if(512&p.flags){for(;ee<16;){if(De===0)break e;De--,Ae+=oe[Me++]<<ee,ee+=8}if(Ae!==(65535&p.check)){Z.msg="header crc mismatch",p.mode=30;break}ee=Ae=0}p.head&&(p.head.hcrc=p.flags>>9&1,p.head.done=!0),Z.adler=p.check=0,p.mode=12;break;case 10:for(;ee<32;){if(De===0)break e;De--,Ae+=oe[Me++]<<ee,ee+=8}Z.adler=p.check=d(Ae),ee=Ae=0,p.mode=11;case 11:if(p.havedict===0)return Z.next_out=We,Z.avail_out=ie,Z.next_in=Me,Z.avail_in=De,p.hold=Ae,p.bits=ee,2;Z.adler=p.check=1,p.mode=12;case 12:if(q===5||q===6)break e;case 13:if(p.last){Ae>>>=7&ee,ee-=7&ee,p.mode=27;break}for(;ee<3;){if(De===0)break e;De--,Ae+=oe[Me++]<<ee,ee+=8}switch(p.last=1&Ae,ee-=1,3&(Ae>>>=1)){case 0:p.mode=14;break;case 1:if(z(p),p.mode=20,q!==6)break;Ae>>>=2,ee-=2;break e;case 2:p.mode=17;break;case 3:Z.msg="invalid block type",p.mode=30}Ae>>>=2,ee-=2;break;case 14:for(Ae>>>=7&ee,ee-=7&ee;ee<32;){if(De===0)break e;De--,Ae+=oe[Me++]<<ee,ee+=8}if((65535&Ae)!=(Ae>>>16^65535)){Z.msg="invalid stored block lengths",p.mode=30;break}if(p.length=65535&Ae,ee=Ae=0,p.mode=15,q===6)break e;case 15:p.mode=16;case 16:if(de=p.length){if(De<de&&(de=De),ie<de&&(de=ie),de===0)break e;i.arraySet(me,oe,Me,de,We),De-=de,Me+=de,ie-=de,We+=de,p.length-=de;break}p.mode=12;break;case 17:for(;ee<14;){if(De===0)break e;De--,Ae+=oe[Me++]<<ee,ee+=8}if(p.nlen=257+(31&Ae),Ae>>>=5,ee-=5,p.ndist=1+(31&Ae),Ae>>>=5,ee-=5,p.ncode=4+(15&Ae),Ae>>>=4,ee-=4,286<p.nlen||30<p.ndist){Z.msg="too many length or distance symbols",p.mode=30;break}p.have=0,p.mode=18;case 18:for(;p.have<p.ncode;){for(;ee<3;){if(De===0)break e;De--,Ae+=oe[Me++]<<ee,ee+=8}p.lens[Qe[p.have++]]=7&Ae,Ae>>>=3,ee-=3}for(;p.have<19;)p.lens[Qe[p.have++]]=0;if(p.lencode=p.lendyn,p.lenbits=7,fe={bits:p.lenbits},Ke=l(0,p.lens,0,19,p.lencode,0,p.work,fe),p.lenbits=fe.bits,Ke){Z.msg="invalid code lengths set",p.mode=30;break}p.have=0,p.mode=19;case 19:for(;p.have<p.nlen+p.ndist;){for(;ht=(ae=p.lencode[Ae&(1<<p.lenbits)-1])>>>16&255,eA=65535&ae,!((tt=ae>>>24)<=ee);){if(De===0)break e;De--,Ae+=oe[Me++]<<ee,ee+=8}if(eA<16)Ae>>>=tt,ee-=tt,p.lens[p.have++]=eA;else{if(eA===16){for(re=tt+2;ee<re;){if(De===0)break e;De--,Ae+=oe[Me++]<<ee,ee+=8}if(Ae>>>=tt,ee-=tt,p.have===0){Z.msg="invalid bit length repeat",p.mode=30;break}v=p.lens[p.have-1],de=3+(3&Ae),Ae>>>=2,ee-=2}else if(eA===17){for(re=tt+3;ee<re;){if(De===0)break e;De--,Ae+=oe[Me++]<<ee,ee+=8}ee-=tt,v=0,de=3+(7&(Ae>>>=tt)),Ae>>>=3,ee-=3}else{for(re=tt+7;ee<re;){if(De===0)break e;De--,Ae+=oe[Me++]<<ee,ee+=8}ee-=tt,v=0,de=11+(127&(Ae>>>=tt)),Ae>>>=7,ee-=7}if(p.have+de>p.nlen+p.ndist){Z.msg="invalid bit length repeat",p.mode=30;break}for(;de--;)p.lens[p.have++]=v}}if(p.mode===30)break;if(p.lens[256]===0){Z.msg="invalid code -- missing end-of-block",p.mode=30;break}if(p.lenbits=9,fe={bits:p.lenbits},Ke=l(C,p.lens,0,p.nlen,p.lencode,0,p.work,fe),p.lenbits=fe.bits,Ke){Z.msg="invalid literal/lengths set",p.mode=30;break}if(p.distbits=6,p.distcode=p.distdyn,fe={bits:p.distbits},Ke=l(M,p.lens,p.nlen,p.ndist,p.distcode,0,p.work,fe),p.distbits=fe.bits,Ke){Z.msg="invalid distances set",p.mode=30;break}if(p.mode=20,q===6)break e;case 20:p.mode=21;case 21:if(6<=De&&258<=ie){Z.next_out=We,Z.avail_out=ie,Z.next_in=Me,Z.avail_in=De,p.hold=Ae,p.bits=ee,o(Z,ue),We=Z.next_out,me=Z.output,ie=Z.avail_out,Me=Z.next_in,oe=Z.input,De=Z.avail_in,Ae=p.hold,ee=p.bits,p.mode===12&&(p.back=-1);break}for(p.back=0;ht=(ae=p.lencode[Ae&(1<<p.lenbits)-1])>>>16&255,eA=65535&ae,!((tt=ae>>>24)<=ee);){if(De===0)break e;De--,Ae+=oe[Me++]<<ee,ee+=8}if(ht&&!(240&ht)){for(Xt=tt,XA=ht,VA=eA;ht=(ae=p.lencode[VA+((Ae&(1<<Xt+XA)-1)>>Xt)])>>>16&255,eA=65535&ae,!(Xt+(tt=ae>>>24)<=ee);){if(De===0)break e;De--,Ae+=oe[Me++]<<ee,ee+=8}Ae>>>=Xt,ee-=Xt,p.back+=Xt}if(Ae>>>=tt,ee-=tt,p.back+=tt,p.length=eA,ht===0){p.mode=26;break}if(32&ht){p.back=-1,p.mode=12;break}if(64&ht){Z.msg="invalid literal/length code",p.mode=30;break}p.extra=15&ht,p.mode=22;case 22:if(p.extra){for(re=p.extra;ee<re;){if(De===0)break e;De--,Ae+=oe[Me++]<<ee,ee+=8}p.length+=Ae&(1<<p.extra)-1,Ae>>>=p.extra,ee-=p.extra,p.back+=p.extra}p.was=p.length,p.mode=23;case 23:for(;ht=(ae=p.distcode[Ae&(1<<p.distbits)-1])>>>16&255,eA=65535&ae,!((tt=ae>>>24)<=ee);){if(De===0)break e;De--,Ae+=oe[Me++]<<ee,ee+=8}if(!(240&ht)){for(Xt=tt,XA=ht,VA=eA;ht=(ae=p.distcode[VA+((Ae&(1<<Xt+XA)-1)>>Xt)])>>>16&255,eA=65535&ae,!(Xt+(tt=ae>>>24)<=ee);){if(De===0)break e;De--,Ae+=oe[Me++]<<ee,ee+=8}Ae>>>=Xt,ee-=Xt,p.back+=Xt}if(Ae>>>=tt,ee-=tt,p.back+=tt,64&ht){Z.msg="invalid distance code",p.mode=30;break}p.offset=eA,p.extra=15&ht,p.mode=24;case 24:if(p.extra){for(re=p.extra;ee<re;){if(De===0)break e;De--,Ae+=oe[Me++]<<ee,ee+=8}p.offset+=Ae&(1<<p.extra)-1,Ae>>>=p.extra,ee-=p.extra,p.back+=p.extra}if(p.offset>p.dmax){Z.msg="invalid distance too far back",p.mode=30;break}p.mode=25;case 25:if(ie===0)break e;if(de=ue-ie,p.offset>de){if((de=p.offset-de)>p.whave&&p.sane){Z.msg="invalid distance too far back",p.mode=30;break}Rt=de>p.wnext?(de-=p.wnext,p.wsize-de):p.wnext-de,de>p.length&&(de=p.length),Bt=p.window}else Bt=me,Rt=We-p.offset,de=p.length;for(ie<de&&(de=ie),ie-=de,p.length-=de;me[We++]=Bt[Rt++],--de;);p.length===0&&(p.mode=21);break;case 26:if(ie===0)break e;me[We++]=p.length,ie--,p.mode=21;break;case 27:if(p.wrap){for(;ee<32;){if(De===0)break e;De--,Ae|=oe[Me++]<<ee,ee+=8}if(ue-=ie,Z.total_out+=ue,p.total+=ue,ue&&(Z.adler=p.check=p.flags?L(p.check,me,ue,We-ue):r(p.check,me,ue,We-ue)),ue=ie,(p.flags?Ae:d(Ae))!==p.check){Z.msg="incorrect data check",p.mode=30;break}ee=Ae=0}p.mode=28;case 28:if(p.wrap&&p.flags){for(;ee<32;){if(De===0)break e;De--,Ae+=oe[Me++]<<ee,ee+=8}if(Ae!==(4294967295&p.total)){Z.msg="incorrect length check",p.mode=30;break}ee=Ae=0}p.mode=29;case 29:Ke=1;break e;case 30:Ke=-3;break e;case 31:return-4;case 32:default:return _}return Z.next_out=We,Z.avail_out=ie,Z.next_in=Me,Z.avail_in=De,p.hold=Ae,p.bits=ee,(p.wsize||ue!==Z.avail_out&&p.mode<30&&(p.mode<27||q!==4))&&se(Z,Z.output,Z.next_out,ue-Z.avail_out)?(p.mode=31,-4):(Le-=Z.avail_in,ue-=Z.avail_out,Z.total_in+=Le,Z.total_out+=ue,p.total+=ue,p.wrap&&ue&&(Z.adler=p.check=p.flags?L(p.check,me,ue,Z.next_out-ue):r(p.check,me,ue,Z.next_out-ue)),Z.data_type=p.bits+(p.last?64:0)+(p.mode===12?128:0)+(p.mode===20||p.mode===15?256:0),(Le==0&&ue===0||q===4)&&Ke===D&&(Ke=-5),Ke)},a.inflateEnd=function(Z){if(!Z||!Z.state)return _;var q=Z.state;return q.window&&(q.window=null),Z.state=null,D},a.inflateGetHeader=function(Z,q){var p;return Z&&Z.state&&2&(p=Z.state).wrap?((p.head=q).done=!1,D):_},a.inflateSetDictionary=function(Z,q){var p,oe=q.length;return Z&&Z.state?(p=Z.state).wrap!==0&&p.mode!==11?_:p.mode===11&&r(1,q,oe,0)!==p.check?-3:se(Z,q,oe,oe)?(p.mode=31,-4):(p.havedict=1,D):_},a.inflateInfo="pako inflate (from Nodeca project)"},{"../utils/common":41,"./adler32":43,"./crc32":45,"./inffast":48,"./inftrees":50}],50:[function(s,R,a){var i=s("../utils/common"),r=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],L=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],o=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],l=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];R.exports=function(C,M,D,_,P,h,H,d){var f,B,F,W,b,x,$,j,z,se=d.bits,Z=0,q=0,p=0,oe=0,me=0,Me=0,We=0,De=0,ie=0,Ae=0,ee=null,Le=0,ue=new i.Buf16(16),de=new i.Buf16(16),Rt=null,Bt=0;for(Z=0;Z<=15;Z++)ue[Z]=0;for(q=0;q<_;q++)ue[M[D+q]]++;for(me=se,oe=15;1<=oe&&ue[oe]===0;oe--);if(oe<me&&(me=oe),oe===0)return P[h++]=20971520,P[h++]=20971520,d.bits=1,0;for(p=1;p<oe&&ue[p]===0;p++);for(me<p&&(me=p),Z=De=1;Z<=15;Z++)if(De<<=1,(De-=ue[Z])<0)return-1;if(0<De&&(C===0||oe!==1))return-1;for(de[1]=0,Z=1;Z<15;Z++)de[Z+1]=de[Z]+ue[Z];for(q=0;q<_;q++)M[D+q]!==0&&(H[de[M[D+q]]++]=q);if(x=C===0?(ee=Rt=H,19):C===1?(ee=r,Le-=257,Rt=L,Bt-=257,256):(ee=o,Rt=l,-1),Z=p,b=h,We=q=Ae=0,F=-1,W=(ie=1<<(Me=me))-1,C===1&&852<ie||C===2&&592<ie)return 1;for(;;){for($=Z-We,z=H[q]<x?(j=0,H[q]):H[q]>x?(j=Rt[Bt+H[q]],ee[Le+H[q]]):(j=96,0),f=1<<Z-We,p=B=1<<Me;P[b+(Ae>>We)+(B-=f)]=$<<24|j<<16|z|0,B!==0;);for(f=1<<Z-1;Ae&f;)f>>=1;if(f!==0?(Ae&=f-1,Ae+=f):Ae=0,q++,--ue[Z]==0){if(Z===oe)break;Z=M[D+H[q]]}if(me<Z&&(Ae&W)!==F){for(We===0&&(We=me),b+=p,De=1<<(Me=Z-We);Me+We<oe&&!((De-=ue[Me+We])<=0);)Me++,De<<=1;if(ie+=1<<Me,C===1&&852<ie||C===2&&592<ie)return 1;P[F=Ae&W]=me<<24|Me<<16|b-h|0}}return Ae!==0&&(P[b+Ae]=Z-We<<24|64<<16|0),d.bits=me,0}},{"../utils/common":41}],51:[function(s,R,a){R.exports={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"}},{}],52:[function(s,R,a){var i=s("../utils/common"),r=0,L=1;function o(ae){for(var Pe=ae.length;0<=--Pe;)ae[Pe]=0}N(o,"n");var l=0,C=29,M=256,D=M+1+C,_=30,P=19,h=2*D+1,H=15,d=16,f=7,B=256,F=16,W=17,b=18,x=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],$=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],j=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],z=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],se=new Array(2*(D+2));o(se);var Z=new Array(2*_);o(Z);var q=new Array(512);o(q);var p=new Array(256);o(p);var oe=new Array(C);o(oe);var me,Me,We,De=new Array(_);function ie(ae,Pe,Qe,Ze,He){this.static_tree=ae,this.extra_bits=Pe,this.extra_base=Qe,this.elems=Ze,this.max_length=He,this.has_stree=ae&&ae.length}N(ie,"D");function Ae(ae,Pe){this.dyn_tree=ae,this.max_code=0,this.stat_desc=Pe}N(Ae,"F");function ee(ae){return ae<256?q[ae]:q[256+(ae>>>7)]}N(ee,"N");function Le(ae,Pe){ae.pending_buf[ae.pending++]=255&Pe,ae.pending_buf[ae.pending++]=Pe>>>8&255}N(Le,"U");function ue(ae,Pe,Qe){ae.bi_valid>d-Qe?(ae.bi_buf|=Pe<<ae.bi_valid&65535,Le(ae,ae.bi_buf),ae.bi_buf=Pe>>d-ae.bi_valid,ae.bi_valid+=Qe-d):(ae.bi_buf|=Pe<<ae.bi_valid&65535,ae.bi_valid+=Qe)}N(ue,"P");function de(ae,Pe,Qe){ue(ae,Qe[2*Pe],Qe[2*Pe+1])}N(de,"L");function Rt(ae,Pe){for(var Qe=0;Qe|=1&ae,ae>>>=1,Qe<<=1,0<--Pe;);return Qe>>>1}N(Rt,"j");function Bt(ae,Pe,Qe){var Ze,He,pe=new Array(H+1),qe=0;for(Ze=1;Ze<=H;Ze++)pe[Ze]=qe=qe+Qe[Ze-1]<<1;for(He=0;He<=Pe;He++){var $e=ae[2*He+1];$e!==0&&(ae[2*He]=Rt(pe[$e]++,$e))}}N(Bt,"Z");function tt(ae){var Pe;for(Pe=0;Pe<D;Pe++)ae.dyn_ltree[2*Pe]=0;for(Pe=0;Pe<_;Pe++)ae.dyn_dtree[2*Pe]=0;for(Pe=0;Pe<P;Pe++)ae.bl_tree[2*Pe]=0;ae.dyn_ltree[2*B]=1,ae.opt_len=ae.static_len=0,ae.last_lit=ae.matches=0}N(tt,"W");function ht(ae){8<ae.bi_valid?Le(ae,ae.bi_buf):0<ae.bi_valid&&(ae.pending_buf[ae.pending++]=ae.bi_buf),ae.bi_buf=0,ae.bi_valid=0}N(ht,"M");function eA(ae,Pe,Qe,Ze){var He=2*Pe,pe=2*Qe;return ae[He]<ae[pe]||ae[He]===ae[pe]&&Ze[Pe]<=Ze[Qe]}N(eA,"H");function Xt(ae,Pe,Qe){for(var Ze=ae.heap[Qe],He=Qe<<1;He<=ae.heap_len&&(He<ae.heap_len&&eA(Pe,ae.heap[He+1],ae.heap[He],ae.depth)&&He++,!eA(Pe,Ze,ae.heap[He],ae.depth));)ae.heap[Qe]=ae.heap[He],Qe=He,He<<=1;ae.heap[Qe]=Ze}N(Xt,"G");function XA(ae,Pe,Qe){var Ze,He,pe,qe,$e=0;if(ae.last_lit!==0)for(;Ze=ae.pending_buf[ae.d_buf+2*$e]<<8|ae.pending_buf[ae.d_buf+2*$e+1],He=ae.pending_buf[ae.l_buf+$e],$e++,Ze===0?de(ae,He,Pe):(de(ae,(pe=p[He])+M+1,Pe),(qe=x[pe])!==0&&ue(ae,He-=oe[pe],qe),de(ae,pe=ee(--Ze),Qe),(qe=$[pe])!==0&&ue(ae,Ze-=De[pe],qe)),$e<ae.last_lit;);de(ae,B,Pe)}N(XA,"K");function VA(ae,Pe){var Qe,Ze,He,pe=Pe.dyn_tree,qe=Pe.stat_desc.static_tree,$e=Pe.stat_desc.has_stree,Mt=Pe.stat_desc.elems,Jt=-1;for(ae.heap_len=0,ae.heap_max=h,Qe=0;Qe<Mt;Qe++)pe[2*Qe]!==0?(ae.heap[++ae.heap_len]=Jt=Qe,ae.depth[Qe]=0):pe[2*Qe+1]=0;for(;ae.heap_len<2;)pe[2*(He=ae.heap[++ae.heap_len]=Jt<2?++Jt:0)]=1,ae.depth[He]=0,ae.opt_len--,$e&&(ae.static_len-=qe[2*He+1]);for(Pe.max_code=Jt,Qe=ae.heap_len>>1;1<=Qe;Qe--)Xt(ae,pe,Qe);for(He=Mt;Qe=ae.heap[1],ae.heap[1]=ae.heap[ae.heap_len--],Xt(ae,pe,1),Ze=ae.heap[1],ae.heap[--ae.heap_max]=Qe,ae.heap[--ae.heap_max]=Ze,pe[2*He]=pe[2*Qe]+pe[2*Ze],ae.depth[He]=(ae.depth[Qe]>=ae.depth[Ze]?ae.depth[Qe]:ae.depth[Ze])+1,pe[2*Qe+1]=pe[2*Ze+1]=He,ae.heap[1]=He++,Xt(ae,pe,1),2<=ae.heap_len;);ae.heap[--ae.heap_max]=ae.heap[1],function(xt,_E){var GR,PE,cR,iE,En,dn,fO=_E.dyn_tree,Jo=_E.max_code,$o=_E.stat_desc.static_tree,WM=_E.stat_desc.has_stree,zo=_E.stat_desc.extra_bits,qo=_E.stat_desc.extra_base,OI=_E.stat_desc.max_length,gi=0;for(iE=0;iE<=H;iE++)xt.bl_count[iE]=0;for(fO[2*xt.heap[xt.heap_max]+1]=0,GR=xt.heap_max+1;GR<h;GR++)OI<(iE=fO[2*fO[2*(PE=xt.heap[GR])+1]+1]+1)&&(iE=OI,gi++),fO[2*PE+1]=iE,Jo<PE||(xt.bl_count[iE]++,En=0,qo<=PE&&(En=zo[PE-qo]),dn=fO[2*PE],xt.opt_len+=dn*(iE+En),WM&&(xt.static_len+=dn*($o[2*PE+1]+En)));if(gi!==0){do{for(iE=OI-1;xt.bl_count[iE]===0;)iE--;xt.bl_count[iE]--,xt.bl_count[iE+1]+=2,xt.bl_count[OI]--,gi-=2}while(0<gi);for(iE=OI;iE!==0;iE--)for(PE=xt.bl_count[iE];PE!==0;)Jo<(cR=xt.heap[--GR])||(fO[2*cR+1]!==iE&&(xt.opt_len+=(iE-fO[2*cR+1])*fO[2*cR],fO[2*cR+1]=iE),PE--)}}(ae,Pe),Bt(pe,Jt,ae.bl_count)}N(VA,"Y");function v(ae,Pe,Qe){var Ze,He,pe=-1,qe=Pe[1],$e=0,Mt=7,Jt=4;for(qe===0&&(Mt=138,Jt=3),Pe[2*(Qe+1)+1]=65535,Ze=0;Ze<=Qe;Ze++)He=qe,qe=Pe[2*(Ze+1)+1],++$e<Mt&&He===qe||($e<Jt?ae.bl_tree[2*He]+=$e:He!==0?(He!==pe&&ae.bl_tree[2*He]++,ae.bl_tree[2*F]++):$e<=10?ae.bl_tree[2*W]++:ae.bl_tree[2*b]++,pe=He,Jt=($e=0)===qe?(Mt=138,3):He===qe?(Mt=6,3):(Mt=7,4))}N(v,"X");function Ke(ae,Pe,Qe){var Ze,He,pe=-1,qe=Pe[1],$e=0,Mt=7,Jt=4;for(qe===0&&(Mt=138,Jt=3),Ze=0;Ze<=Qe;Ze++)if(He=qe,qe=Pe[2*(Ze+1)+1],!(++$e<Mt&&He===qe)){if($e<Jt)for(;de(ae,He,ae.bl_tree),--$e!=0;);else He!==0?(He!==pe&&(de(ae,He,ae.bl_tree),$e--),de(ae,F,ae.bl_tree),ue(ae,$e-3,2)):$e<=10?(de(ae,W,ae.bl_tree),ue(ae,$e-3,3)):(de(ae,b,ae.bl_tree),ue(ae,$e-11,7));pe=He,Jt=($e=0)===qe?(Mt=138,3):He===qe?(Mt=6,3):(Mt=7,4)}}N(Ke,"V"),o(De);var fe=!1;function re(ae,Pe,Qe,Ze){ue(ae,(l<<1)+(Ze?1:0),3),function(He,pe,qe,$e){ht(He),Le(He,qe),Le(He,~qe),i.arraySet(He.pending_buf,He.window,pe,qe,He.pending),He.pending+=qe}(ae,Pe,Qe)}N(re,"J"),a._tr_init=function(ae){fe||(function(){var Pe,Qe,Ze,He,pe,qe=new Array(H+1);for(He=Ze=0;He<C-1;He++)for(oe[He]=Ze,Pe=0;Pe<1<<x[He];Pe++)p[Ze++]=He;for(p[Ze-1]=He,He=pe=0;He<16;He++)for(De[He]=pe,Pe=0;Pe<1<<$[He];Pe++)q[pe++]=He;for(pe>>=7;He<_;He++)for(De[He]=pe<<7,Pe=0;Pe<1<<$[He]-7;Pe++)q[256+pe++]=He;for(Qe=0;Qe<=H;Qe++)qe[Qe]=0;for(Pe=0;Pe<=143;)se[2*Pe+1]=8,Pe++,qe[8]++;for(;Pe<=255;)se[2*Pe+1]=9,Pe++,qe[9]++;for(;Pe<=279;)se[2*Pe+1]=7,Pe++,qe[7]++;for(;Pe<=287;)se[2*Pe+1]=8,Pe++,qe[8]++;for(Bt(se,D+1,qe),Pe=0;Pe<_;Pe++)Z[2*Pe+1]=5,Z[2*Pe]=Rt(Pe,5);me=new ie(se,x,M+1,D,H),Me=new ie(Z,$,0,_,H),We=new ie(new Array(0),j,0,P,f)}(),fe=!0),ae.l_desc=new Ae(ae.dyn_ltree,me),ae.d_desc=new Ae(ae.dyn_dtree,Me),ae.bl_desc=new Ae(ae.bl_tree,We),ae.bi_buf=0,ae.bi_valid=0,tt(ae)},a._tr_stored_block=re,a._tr_flush_block=function(ae,Pe,Qe,Ze){var He,pe,qe=0;0<ae.level?(ae.strm.data_type===2&&(ae.strm.data_type=function($e){var Mt,Jt=4093624447;for(Mt=0;Mt<=31;Mt++,Jt>>>=1)if(1&Jt&&$e.dyn_ltree[2*Mt]!==0)return r;if($e.dyn_ltree[18]!==0||$e.dyn_ltree[20]!==0||$e.dyn_ltree[26]!==0)return L;for(Mt=32;Mt<M;Mt++)if($e.dyn_ltree[2*Mt]!==0)return L;return r}(ae)),VA(ae,ae.l_desc),VA(ae,ae.d_desc),qe=function($e){var Mt;for(v($e,$e.dyn_ltree,$e.l_desc.max_code),v($e,$e.dyn_dtree,$e.d_desc.max_code),VA($e,$e.bl_desc),Mt=P-1;3<=Mt&&$e.bl_tree[2*z[Mt]+1]===0;Mt--);return $e.opt_len+=3*(Mt+1)+5+5+4,Mt}(ae),He=ae.opt_len+3+7>>>3,(pe=ae.static_len+3+7>>>3)<=He&&(He=pe)):He=pe=Qe+5,Qe+4<=He&&Pe!==-1?re(ae,Pe,Qe,Ze):ae.strategy===4||pe===He?(ue(ae,2+(Ze?1:0),3),XA(ae,se,Z)):(ue(ae,4+(Ze?1:0),3),function($e,Mt,Jt,xt){var _E;for(ue($e,Mt-257,5),ue($e,Jt-1,5),ue($e,xt-4,4),_E=0;_E<xt;_E++)ue($e,$e.bl_tree[2*z[_E]+1],3);Ke($e,$e.dyn_ltree,Mt-1),Ke($e,$e.dyn_dtree,Jt-1)}(ae,ae.l_desc.max_code+1,ae.d_desc.max_code+1,qe+1),XA(ae,ae.dyn_ltree,ae.dyn_dtree)),tt(ae),Ze&&ht(ae)},a._tr_tally=function(ae,Pe,Qe){return ae.pending_buf[ae.d_buf+2*ae.last_lit]=Pe>>>8&255,ae.pending_buf[ae.d_buf+2*ae.last_lit+1]=255&Pe,ae.pending_buf[ae.l_buf+ae.last_lit]=255&Qe,ae.last_lit++,Pe===0?ae.dyn_ltree[2*Qe]++:(ae.matches++,Pe--,ae.dyn_ltree[2*(p[Qe]+M+1)]++,ae.dyn_dtree[2*ee(Pe)]++),ae.last_lit===ae.lit_bufsize-1},a._tr_align=function(ae){ue(ae,2,3),de(ae,B,se),function(Pe){Pe.bi_valid===16?(Le(Pe,Pe.bi_buf),Pe.bi_buf=0,Pe.bi_valid=0):8<=Pe.bi_valid&&(Pe.pending_buf[Pe.pending++]=255&Pe.bi_buf,Pe.bi_buf>>=8,Pe.bi_valid-=8)}(ae)}},{"../utils/common":41}],53:[function(s,R,a){R.exports=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}},{}],54:[function(s,R,a){(function(i){(function(r,L){if(!r.setImmediate){var o,l,C,M,D=1,_={},P=!1,h=r.document,H=Object.getPrototypeOf&&Object.getPrototypeOf(r);H=H&&H.setTimeout?H:r,o={}.toString.call(r.process)==="[object process]"?function(F){process.nextTick(function(){f(F)})}:function(){if(r.postMessage&&!r.importScripts){var F=!0,W=r.onmessage;return r.onmessage=function(){F=!1},r.postMessage("","*"),r.onmessage=W,F}}()?(M="setImmediate$"+Math.random()+"$",r.addEventListener?r.addEventListener("message",B,!1):r.attachEvent("onmessage",B),function(F){r.postMessage(M+F,"*")}):r.MessageChannel?((C=new MessageChannel).port1.onmessage=function(F){f(F.data)},function(F){C.port2.postMessage(F)}):h&&"onreadystatechange"in h.createElement("script")?(l=h.documentElement,function(F){var W=h.createElement("script");W.onreadystatechange=function(){f(F),W.onreadystatechange=null,l.removeChild(W),W=null},l.appendChild(W)}):function(F){setTimeout(f,0,F)},H.setImmediate=function(F){typeof F!="function"&&(F=new Function(""+F));for(var W=new Array(arguments.length-1),b=0;b<W.length;b++)W[b]=arguments[b+1];var x={callback:F,args:W};return _[D]=x,o(D),D++},H.clearImmediate=d}function d(F){delete _[F]}N(d,"f");function f(F){if(P)setTimeout(f,0,F);else{var W=_[F];if(W){P=!0;try{(function(b){var x=b.callback,$=b.args;switch($.length){case 0:x();break;case 1:x($[0]);break;case 2:x($[0],$[1]);break;case 3:x($[0],$[1],$[2]);break;default:x.apply(L,$)}})(W)}finally{d(F),P=!1}}}}N(f,"c");function B(F){F.source===r&&typeof F.data=="string"&&F.data.indexOf(M)===0&&f(+F.data.slice(M.length))}N(B,"d")})(typeof self>"u"?i===void 0?this:i:self)}).call(this,typeof AA<"u"?AA:typeof self<"u"?self:typeof window<"u"?window:{})},{}]},{},[10])(10)})})(W8);var JQ=W8.exports;const $Q=T7(JQ),Km=class Km extends Ii{constructor(A=null){super(A),this.ERR_USERNAME="invalid username",this.ERR_PASSWORD="invalid password",this.ERR_ACCOUNT_EXIST="account doesn't exist",this.ERR_PASSWORD_MATCH="password doesn't match",this.ERR_NO_SAVES="No save files found",this.ERR_TOO_MANY_SAVES="Too many save files found"}setup(){super.setup(),this.buildExternalPartyContainer(),this.infoContainer=n.add.container(0,0),this.usernameInfoImage=this.buildInteractableImage("settings_icon","username-info-icon",{x:20,scale:.5}),this.saveDownloadImage=this.buildInteractableImage("saving_icon","save-download-icon",{x:0,scale:.75}),this.infoContainer.add(this.usernameInfoImage),this.infoContainer.add(this.saveDownloadImage),this.getUi().add(this.infoContainer),this.infoContainer.setVisible(!1),this.infoContainer.disableInteractive()}buildExternalPartyContainer(){this.externalPartyContainer=n.add.container(0,0),this.externalPartyContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,n.game.canvas.width/12,n.game.canvas.height/12),Phaser.Geom.Rectangle.Contains),this.externalPartyTitle=le(0,4,"",Q.SETTINGS_LABEL),this.externalPartyTitle.setOrigin(.5,0),this.externalPartyBg=Gt(0,0,0,0),this.externalPartyContainer.add(this.externalPartyBg),this.externalPartyContainer.add(this.externalPartyTitle),this.googleImage=this.buildInteractableImage("google","google-icon"),this.discordImage=this.buildInteractableImage("discord","discord-icon"),this.externalPartyContainer.add(this.googleImage),this.externalPartyContainer.add(this.discordImage),this.getUi().add(this.externalPartyContainer),this.externalPartyContainer.add(this.googleImage),this.externalPartyContainer.add(this.discordImage),this.externalPartyContainer.setVisible(!1)}getModalTitle(A){return u.t("menu:login")}getWidth(A){return 160}getMargin(A){return[0,0,48,0]}getButtonLabels(A){return[u.t("menu:login"),u.t("menu:register")]}getReadableErrorMessage(A){const s=A==null?void 0:A.indexOf(":");switch(s>0&&(A=A.slice(0,s)),A){case this.ERR_USERNAME:return u.t("menu:invalidLoginUsername");case this.ERR_PASSWORD:return u.t("menu:invalidLoginPassword");case this.ERR_ACCOUNT_EXIST:return u.t("menu:accountNonExistent");case this.ERR_PASSWORD_MATCH:return u.t("menu:unmatchingPassword");case this.ERR_NO_SAVES:return"P01: "+u.t("menu:noSaves");case this.ERR_TOO_MANY_SAVES:return"P02: "+u.t("menu:tooManySaves")}return super.getReadableErrorMessage(A)}getInputFieldConfigs(){const A=[];return A.push({label:u.t("menu:username")}),A.push({label:u.t("menu:password"),isPassword:!0}),A}show(A){if(super.show(A)){const s=A[0];this.processExternalProvider(s);const R=this.submitAction;return this.submitAction=a=>{this.submitAction=R,this.sanitizeInputs(),n.ui.setMode(Ie.LOADING,{buttonActions:[]});const i=N(o=>{n.ui.setMode(Ie.LOGIN_FORM,Object.assign(s,{errorMessage:o==null?void 0:o.trim()})),n.ui.playError()},"onFail");if(!this.inputs[0].text)return i(u.t("menu:emptyUsername"));const[r,L]=this.inputs;TO.account.login({username:r.text,password:L.text}).then(o=>{o?i(o):R&&R()})},!0}return!1}clear(){super.clear(),this.externalPartyContainer.setVisible(!1),this.infoContainer.setVisible(!1),this.setMouseCursorStyle("default"),[this.discordImage,this.googleImage,this.usernameInfoImage,this.saveDownloadImage].forEach(A=>A.off("pointerdown"))}processExternalProvider(A){this.externalPartyTitle.setText(u.t("menu:orUse")??""),this.externalPartyTitle.setX(20+this.externalPartyTitle.text.length),this.externalPartyTitle.setVisible(!0),this.externalPartyContainer.setPositionRelative(this.modalContainer,175,0),this.externalPartyContainer.setVisible(!0),this.externalPartyBg.setSize(this.externalPartyTitle.text.length+50,this.modalBg.height),this.getUi().moveTo(this.externalPartyContainer,this.getUi().length-1),this.googleImage.setPosition(this.externalPartyBg.width/3.1,this.externalPartyBg.height-60),this.discordImage.setPosition(this.externalPartyBg.width/3.1,this.externalPartyBg.height-40),this.infoContainer.setPosition(5,-76),this.infoContainer.setVisible(!0),this.getUi().moveTo(this.infoContainer,this.getUi().length-1),this.usernameInfoImage.setPositionRelative(this.infoContainer,0,0),this.saveDownloadImage.setPositionRelative(this.infoContainer,20,0),this.discordImage.on("pointerdown",()=>{const i=`https://discord.com/api/oauth2/authorize?client_id=1234567890&redirect_uri=${encodeURIComponent("http://localhost:8001/auth/discord/callback")}&response_type=code&scope=identify&prompt=none`;window.open(i,"_self")}),this.googleImage.on("pointerdown",()=>{const i=`https://accounts.google.com/o/oauth2/auth?client_id=1234567890&redirect_uri=${encodeURIComponent("http://localhost:8001/auth/google/callback")}&response_type=code&scope=openid`;window.open(i,"_self")});const s=N(R=>{n.ui.setMode(Ie.LOADING,{buttonActions:[]}),n.ui.setModeForceTransition(Ie.LOGIN_FORM,Object.assign(A,{errorMessage:R==null?void 0:R.trim()})),n.ui.playError()},"onFail");this.usernameInfoImage.on("pointerdown",()=>{const R=Object.keys(localStorage),a="data_",i=R.filter(r=>r.indexOf(a)>=0);if(i.length>0&&i.length<=2){const r=[];for(let L=0;L<i.length;L++)r.push({label:i[L].replace(a,""),handler:N(()=>(n.ui.revertMode(),this.infoContainer.disableInteractive(),!0),"handler")});n.ui.setOverlayMode(Ie.OPTION_SELECT,{options:r,delay:1e3}),this.infoContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,n.game.canvas.width,n.game.canvas.height),Phaser.Geom.Rectangle.Contains)}else return i.length>2?s(this.ERR_TOO_MANY_SAVES):s(this.ERR_NO_SAVES)}),this.saveDownloadImage.on("pointerdown",()=>{const R=Object.keys(localStorage),a="data_",i="sessionData",r=R.filter(o=>o.indexOf(a)>=0),L=R.filter(o=>o.indexOf(i)>=0);if(r.length>0||L.length>0){const o=new $Q;for(let l=0;l<r.length;l++)o.file(r[l]+".prsv",localStorage.getItem(r[l]));for(let l=0;l<L.length;l++)o.file(L[l]+".prsv",localStorage.getItem(L[l]));o.generateAsync({type:"blob"}).then(l=>{const C=URL.createObjectURL(l),M=document.createElement("a");M.href=C,M.download="pokerogue_saves.zip",M.click(),URL.revokeObjectURL(C)})}else return s(this.ERR_NO_SAVES)}),this.externalPartyContainer.setAlpha(0),n.tweens.add({targets:this.externalPartyContainer,duration:st(1e3),ease:"Sine.easeInOut",y:"-=24",alpha:1}),this.infoContainer.setAlpha(0),n.tweens.add({targets:this.infoContainer,duration:st(1e3),ease:"Sine.easeInOut",y:"-=24",alpha:1})}buildInteractableImage(A,s,R={}){const{scale:a=.07,x:i=0,y:r=0,origin:L={x:0,y:0}}=R,o=n.add.image(i,r,A);return o.setName(s),o.setOrigin(L.x,L.y),o.setScale(a),o.setInteractive(),this.addInteractionHoverEffect(o),o}};N(Km,"LoginFormUiHandler");let OG=Km;const k0={"es-ES":{inputFieldFontSize:"50px",errorMessageFontSize:"40px"}},mm=class mm extends Ii{getModalTitle(A){return u.t("menu:register")}getWidth(A){return 160}getMargin(A){return[0,0,48,0]}getButtonTopMargin(){return 8}getButtonLabels(A){return[u.t("menu:register"),u.t("menu:backToLogin")]}getReadableErrorMessage(A){const s=A==null?void 0:A.indexOf(":");switch(s>0&&(A=A.slice(0,s)),A){case"invalid username":return u.t("menu:invalidRegisterUsername");case"invalid password":return u.t("menu:invalidRegisterPassword");case"failed to add account record":return u.t("menu:usernameAlreadyUsed")}return super.getReadableErrorMessage(A)}getInputFieldConfigs(){const A=[];return A.push({label:u.t("menu:username")}),A.push({label:u.t("menu:password"),isPassword:!0}),A.push({label:u.t("menu:confirmPassword"),isPassword:!0}),A}setup(){var R;super.setup(),this.modalContainer.list.forEach(a=>{var i;if(a instanceof Phaser.GameObjects.Text&&a!==this.titleText){const r=(i=k0[u.resolvedLanguage])==null?void 0:i.inputFieldFontSize;r&&a.setFontSize(r)}});const A=((R=k0[u.resolvedLanguage])==null?void 0:R.warningMessageFontSize)??"42px",s=le(10,87,u.t("menu:registrationAgeWarning"),Q.TOOLTIP_CONTENT,{fontSize:A});this.modalContainer.add(s)}show(A){if(super.show(A)){const s=A[0],R=this.submitAction;return this.submitAction=a=>{this.submitAction=R,this.sanitizeInputs(),n.ui.setMode(Ie.LOADING,{buttonActions:[]});const i=N(o=>{var C;n.ui.setMode(Ie.REGISTRATION_FORM,Object.assign(s,{errorMessage:o==null?void 0:o.trim()})),n.ui.playError();const l=(C=k0[u.resolvedLanguage])==null?void 0:C.errorMessageFontSize;l&&this.errorMessage.setFontSize(l)},"onFail");if(!this.inputs[0].text)return i(u.t("menu:emptyUsername"));if(!this.inputs[1].text)return i(this.getReadableErrorMessage("invalid password"));if(this.inputs[1].text!==this.inputs[2].text)return i(u.t("menu:passwordNotMatchingConfirmPassword"));const[r,L]=this.inputs;TO.account.register({username:r.text,password:L.text}).then(o=>{o?i(o):TO.account.login({username:r.text,password:L.text}).then(l=>{l?i(l):R&&R()})})},!0}return!1}};N(mm,"RegistrationFormUiHandler");let nG=mm;const Fm=class Fm extends vr{constructor(A=null){super(A)}getModalTitle(){return""}getWidth(){return 80}getHeight(){return 32}getMargin(){return[0,0,48,0]}getButtonLabels(){return[]}setup(){super.setup();const A=le(this.getWidth()/2,this.getHeight()/2,u.t("menu:loading"),Q.WINDOW);A.setOrigin(.5,.5),this.modalContainer.add(A)}};N(Fm,"LoadingModalUiHandler");let IG=Fm;const rO={playTime:{label_key:"playTime",sourceFunc:N(E=>P1(E.gameStats.playTime),"sourceFunc")},battles:{label_key:"totalBattles",sourceFunc:N(E=>E.gameStats.battles.toString(),"sourceFunc")},startersUnlocked:{label_key:"starters",sourceFunc:N(E=>{const A=E.getStarterCount(s=>!!s.caughtAttr);return`${A} (${Math.floor(A/Object.keys(KA).length*1e3)/10}%)`},"sourceFunc")},shinyStartersUnlocked:{label_key:"shinyStarters",sourceFunc:N(E=>{const A=E.getStarterCount(s=>!!(s.caughtAttr&Xe.SHINY));return`${A} (${Math.floor(A/Object.keys(KA).length*1e3)/10}%)`},"sourceFunc")},dexSeen:{label_key:"speciesSeen",sourceFunc:N(E=>{const A=E.getSpeciesCount(s=>!!s.seenAttr);return`${A} (${Math.floor(A/Object.keys(E.dexData).length*1e3)/10}%)`},"sourceFunc")},dexCaught:{label_key:"speciesCaught",sourceFunc:N(E=>{const A=E.getSpeciesCount(s=>!!s.caughtAttr);return`${A} (${Math.floor(A/Object.keys(E.dexData).length*1e3)/10}%)`},"sourceFunc")},ribbonsOwned:{label_key:"ribbonsOwned",sourceFunc:N(E=>E.gameStats.ribbonsOwned.toString(),"sourceFunc")},classicSessionsPlayed:{label_key:"classicRuns",sourceFunc:N(E=>E.gameStats.classicSessionsPlayed.toString(),"sourceFunc")},sessionsWon:{label_key:"classicWins",sourceFunc:N(E=>E.gameStats.sessionsWon.toString(),"sourceFunc")},dailyRunSessionsPlayed:{label_key:"dailyRunAttempts",sourceFunc:N(E=>E.gameStats.dailyRunSessionsPlayed.toString(),"sourceFunc")},dailyRunSessionsWon:{label_key:"dailyRunWins",sourceFunc:N(E=>E.gameStats.dailyRunSessionsWon.toString(),"sourceFunc")},endlessSessionsPlayed:{label_key:"endlessRuns",sourceFunc:N(E=>E.gameStats.endlessSessionsPlayed.toString(),"sourceFunc"),hidden:!0},highestEndlessWave:{label_key:"highestWaveEndless",sourceFunc:N(E=>E.gameStats.highestEndlessWave.toString(),"sourceFunc"),hidden:!0},highestMoney:{label_key:"highestMoney",sourceFunc:N(E=>n_(E.gameStats.highestMoney),"sourceFunc")},highestDamage:{label_key:"highestDamage",sourceFunc:N(E=>E.gameStats.highestDamage.toString(),"sourceFunc")},highestHeal:{label_key:"highestHPHealed",sourceFunc:N(E=>E.gameStats.highestHeal.toString(),"sourceFunc")},pokemonSeen:{label_key:"pokemonEncountered",sourceFunc:N(E=>E.gameStats.pokemonSeen.toString(),"sourceFunc")},pokemonDefeated:{label_key:"pokemonDefeated",sourceFunc:N(E=>E.gameStats.pokemonDefeated.toString(),"sourceFunc")},pokemonCaught:{label_key:"pokemonCaught",sourceFunc:N(E=>E.gameStats.pokemonCaught.toString(),"sourceFunc")},pokemonHatched:{label_key:"eggsHatched",sourceFunc:N(E=>E.gameStats.pokemonHatched.toString(),"sourceFunc")},subLegendaryPokemonSeen:{label_key:"subLegendsSeen",sourceFunc:N(E=>E.gameStats.subLegendaryPokemonSeen.toString(),"sourceFunc"),hidden:!0},subLegendaryPokemonCaught:{label_key:"subLegendsCaught",sourceFunc:N(E=>E.gameStats.subLegendaryPokemonCaught.toString(),"sourceFunc"),hidden:!0},subLegendaryPokemonHatched:{label_key:"subLegendsHatched",sourceFunc:N(E=>E.gameStats.subLegendaryPokemonHatched.toString(),"sourceFunc"),hidden:!0},legendaryPokemonSeen:{label_key:"legendsSeen",sourceFunc:N(E=>E.gameStats.legendaryPokemonSeen.toString(),"sourceFunc"),hidden:!0},legendaryPokemonCaught:{label_key:"legendsCaught",sourceFunc:N(E=>E.gameStats.legendaryPokemonCaught.toString(),"sourceFunc"),hidden:!0},legendaryPokemonHatched:{label_key:"legendsHatched",sourceFunc:N(E=>E.gameStats.legendaryPokemonHatched.toString(),"sourceFunc"),hidden:!0},mythicalPokemonSeen:{label_key:"mythicalsSeen",sourceFunc:N(E=>E.gameStats.mythicalPokemonSeen.toString(),"sourceFunc"),hidden:!0},mythicalPokemonCaught:{label_key:"mythicalsCaught",sourceFunc:N(E=>E.gameStats.mythicalPokemonCaught.toString(),"sourceFunc"),hidden:!0},mythicalPokemonHatched:{label_key:"mythicalsHatched",sourceFunc:N(E=>E.gameStats.mythicalPokemonHatched.toString(),"sourceFunc"),hidden:!0},shinyPokemonSeen:{label_key:"shiniesSeen",sourceFunc:N(E=>E.gameStats.shinyPokemonSeen.toString(),"sourceFunc"),hidden:!0},shinyPokemonCaught:{label_key:"shiniesCaught",sourceFunc:N(E=>E.gameStats.shinyPokemonCaught.toString(),"sourceFunc"),hidden:!0},shinyPokemonHatched:{label_key:"shiniesHatched",sourceFunc:N(E=>E.gameStats.shinyPokemonHatched.toString(),"sourceFunc"),hidden:!0},pokemonFused:{label_key:"pokemonFused",sourceFunc:N(E=>E.gameStats.pokemonFused.toString(),"sourceFunc"),hidden:!0},trainersDefeated:{label_key:"trainersDefeated",sourceFunc:N(E=>E.gameStats.trainersDefeated.toString(),"sourceFunc")},eggsPulled:{label_key:"eggsPulled",sourceFunc:N(E=>E.gameStats.eggsPulled.toString(),"sourceFunc"),hidden:!0},rareEggsPulled:{label_key:"rareEggsPulled",sourceFunc:N(E=>E.gameStats.rareEggsPulled.toString(),"sourceFunc"),hidden:!0},epicEggsPulled:{label_key:"epicEggsPulled",sourceFunc:N(E=>E.gameStats.epicEggsPulled.toString(),"sourceFunc"),hidden:!0},legendaryEggsPulled:{label_key:"legendaryEggsPulled",sourceFunc:N(E=>E.gameStats.legendaryEggsPulled.toString(),"sourceFunc"),hidden:!0},manaphyEggsPulled:{label_key:"manaphyEggsPulled",sourceFunc:N(E=>E.gameStats.manaphyEggsPulled.toString(),"sourceFunc"),hidden:!0}},pm=class pm extends Vs{constructor(A=null){super(A),this.statLabels=[],this.statValues=[]}setup(){const A=this.getUi();this.gameStatsContainer=n.add.container(1,-(n.game.canvas.height/6)+1),this.gameStatsContainer.setInteractive(new sE.Geom.Rectangle(0,0,n.game.canvas.width/6,n.game.canvas.height/6),sE.Geom.Rectangle.Contains);const s=Gt(0,0,n.game.canvas.width/6-2,24);s.setOrigin(0,0);const R=le(0,0,u.t("gameStatsUiHandler:stats"),Q.SETTINGS_LABEL);R.setOrigin(0,0),R.setPositionRelative(s,8,4);const a=(n.game.canvas.width/6-2)/2,[i,r]=new Array(2).fill(null).map((o,l)=>{const C=a+2,M=Math.floor(n.game.canvas.height/6-s.height-2),D=Gt((a-2)*l,s.height,C,M,!1,!1,l>0?-3:0,1);return D.setOrigin(0,0),D});this.statsContainer=n.add.container(0,0),new Array(18).fill(null).map((o,l)=>{const C=le(8+(l%2===1?a:0),28+Math.floor(l/2)*16,"",Q.STATS_LABEL);C.setOrigin(0,0),this.statsContainer.add(C),this.statLabels.push(C);const M=le(a*(l%2+1)-8,C.y,"",Q.STATS_VALUE);M.setOrigin(1,0),this.statsContainer.add(M),this.statValues.push(M)}),this.gameStatsContainer.add(s),this.gameStatsContainer.add(R),this.gameStatsContainer.add(i),this.gameStatsContainer.add(r),this.gameStatsContainer.add(this.statsContainer);const L=n.uiTheme===uO.LEGACY;this.arrowDown=n.add.sprite(a,n.game.canvas.height/6-(L?9:5),"prompt"),this.gameStatsContainer.add(this.arrowDown),this.arrowUp=n.add.sprite(a,s.height+(L?7:3),"prompt"),this.arrowUp.flipY=!0,this.gameStatsContainer.add(this.arrowUp),A.add(this.gameStatsContainer),this.setCursor(0),this.gameStatsContainer.setVisible(!1)}show(A){return super.show(A),this.setCursor(0),this.updateStats(),this.arrowUp.play("prompt"),this.arrowDown.play("prompt"),n.uiTheme===uO.LEGACY&&(this.arrowUp.setTint(4737096),this.arrowDown.setTint(4737096)),this.updateArrows(),this.gameStatsContainer.setVisible(!0),this.getUi().moveTo(this.gameStatsContainer,this.getUi().length-1),this.getUi().hideTooltip(),!0}updateStats(){const A=Object.keys(rO).slice(this.cursor*2,this.cursor*2+18);if(A.forEach((s,R)=>{const a=rO[s],i=a.sourceFunc(n.gameData);this.statLabels[R].setText(!a.hidden||isNaN(parseInt(i))||parseInt(i)?u.t(`gameStatsUiHandler:${a.label_key}`):"???"),this.statValues[R].setText(i)}),A.length<18)for(let s=A.length;s<18;s++)this.statLabels[s].setText(""),this.statValues[s].setText("")}updateArrows(){const A=this.cursor>0;this.arrowUp.setVisible(A);const s=this.cursor<Math.ceil((Object.keys(rO).length-18)/2);this.arrowDown.setVisible(s)}processInput(A){const s=this.getUi();let R=!1;if(A===k.CANCEL)R=!0,n.ui.revertMode();else switch(A){case k.UP:this.cursor&&(R=this.setCursor(this.cursor-1));break;case k.DOWN:this.cursor<Math.ceil((Object.keys(rO).length-18)/2)&&(R=this.setCursor(this.cursor+1));break}return R&&s.playSelect(),R}setCursor(A){const s=super.setCursor(A);return s&&(this.updateStats(),this.updateArrows()),s}clear(){super.clear(),this.gameStatsContainer.setVisible(!1)}};N(pm,"GameStatsUiHandler");let aG=pm;function zQ(){const E=Object.keys(rO);for(const A of E){if(typeof rO[A]=="string"){let s=rO[A],R=!1;s.endsWith("?")&&(s=s.slice(0,-1),R=!0),rO[A]={label_key:s,sourceFunc:N(a=>a.gameStats[A].toString(),"sourceFunc"),hidden:R}}else rO[A]===null&&(rO[A]={sourceFunc:N(s=>s.gameStats[A].toString(),"sourceFunc")});if(!rO[A].label_key){const s=A.replace(/([a-z]{2,})([A-Z]{1}(?:[^A-Z]|$))/g,"$1_$2");rO[A].label_key=Jn(`${s[0].toUpperCase()}${s.slice(1)}`)}}}N(zQ,"initStatsKeys");const qQ=10,jQ=[...Array(qQ).fill("battlesWon"),"joinTheDiscord","infiniteLevels","everythingIsStackable","optionalSaveScumming","biomes","openSource","playWithSpeed","liveBugTesting","heavyInfluence","pokemonRiskAndPokemonRain","nowWithMoreSalt","infiniteFusionAtHome","brokenEggMoves","magnificent","doPeopleReadThis","thatsCrazy","gottaCatchEmAll","questionableBalancing","coolShaders","aiFree","suddenDifficultySpikes","basedOnAnUnfinishedFlashGame","moreAddictiveThanIntended","mostlyConsistentSeeds","achievementPointsDontDoAnything","nothingBeatsAJellyFilledDonut","dontTalkAboutTheTinkatonIncident","alsoTryPokengine","alsoTryEmeraldRogue","alsoTryRadicalRed","eeveeExpo","checkOutYnoproject","breedersInSpace","alsoTryPokemonUnbound","tryTheJohtoDragonChallenge","basicReadingAbilityRecommended","shoutoutsToTheArtists","gamblingNotEncouraged","dontForgetToTakeABreak","wEvent","ifItsNotAccurateItsAccurate","everyLossIsProgressMade","liveWoChienReaction","itsAFeatureNotABug","theEggsAreNotForEating","7.8outOf10TooManyWaterBiomes","butNothingHappened","thePowerOfScienceIsAmazing","freeToPlay","theresATimeAndPlaceForEverything","nowWithShinierShinies","smilesGoForMiles","certainlyNotDragonFree","haveANiceDay","redacted","hi","transRights","shinyOddsHigherThanYouThink","noFalseTrades","notForProfit","timeForYourDailyRun","moreEggsThanADaycare","disclaimerHarshSunDoesNotGiveVitaminD","whoNeedsAMap","luxrayIsNotADarkType","selfDestructiveEncounters","mostOptionsAreViable","pokerogueMorse","smiley","beAwareOfPassives","asSeenOnTheWorldWideWeb","vaultinVeluzas","tooManyStarters","checkTheWiki","winWithYourFavorites","alsoTryPokerogueWait","theWayISeeItKyogreIsSurrounded","tryOutHoneyGather","notForTheFaintOfHeart","p","flipYourDeviceToEvolveInkay","inArceusWeTrust","whyDidTheTorchicCrossTheRoad","goodLuck","fuseWisely","compensation","prepareForTroubleAndMakeItDouble","anEggForYourTroubles","regirock","hereForAGoodTime","getGoodOrDont","checkTheSubreddit","betterNerfGreninja","inCaseOfUpdateClearYourCache","insertTextHere","endingEndlessNotFound","iLikeMyEggsVouchered","YOU","noAddedSugar","notSponsored","notRated","justOneMoreWaveMom","saltCured","onlyOnPokerogueNet","pixelPerfection","openSource","probablyGood","itsAMonsterHouse","dontForgetYourPassword","tripleTripleTripleAxel","questionExclamation","clownEncounters","fullOfBerries","limitsAreMeantToBeBrokenSometimes","keepItCasual","serversProbablyWorking","mew","makeItRainAndYourProblemsGoAway","customMusicTracks","youAreValid","number591IsLookingOff","timeForYourDeliDelivery","goodFirstImpression","iPreferRarerCandies"];function eJ(){const E=[...jQ];return console.log("use seasonal splash messages",S7),E.map(A=>`splashMessages:${A}`)}N(eJ,"getSplashMessages");const nR=[{name:"Winter Holiday Update",eventType:0,shinyMultiplier:2,upgradeUnlockedVouchers:!0,startDate:new Date(Date.UTC(2024,11,21,0)),endDate:new Date(Date.UTC(2025,0,4,0)),bannerKey:"winter_holidays2024-event-",scale:.21,availableLangs:["en","de","it","fr","ja","ko","es-ES","pt-BR","zh-CN"],eventEncounters:[{species:e.GIMMIGHOUL,blockEvolution:!0},{species:e.DELIBIRD},{species:e.STANTLER},{species:e.CYNDAQUIL},{species:e.PIPLUP},{species:e.CHESPIN},{species:e.BALTOY},{species:e.SNOVER},{species:e.CHINGLING},{species:e.LITWICK},{species:e.CUBCHOO},{species:e.SWIRLIX},{species:e.AMAURA},{species:e.MUDBRAY},{species:e.ROLYCOLY},{species:e.MILCERY},{species:e.SMOLIV},{species:e.ALOLA_VULPIX},{species:e.GALAR_DARUMAKA},{species:e.IRON_BUNDLE}],delibirdyBuff:["CATCHING_CHARM","SHINY_CHARM","ABILITY_CHARM","EXP_CHARM","SUPER_EXP_CHARM","HEALING_CHARM"],weather:[{weatherType:Oe.SNOW,weight:1}],mysteryEncounterTierChanges:[{mysteryEncounter:Je.DELIBIRDY,tier:wt.COMMON},{mysteryEncounter:Je.PART_TIMER,disable:!0},{mysteryEncounter:Je.AN_OFFER_YOU_CANT_REFUSE,disable:!0},{mysteryEncounter:Je.FIELD_TRIP,disable:!0},{mysteryEncounter:Je.DEPARTMENT_STORE_SALE,disable:!0}]},{name:"Year of the Snake",eventType:2,luckBoost:1,startDate:new Date(Date.UTC(2025,0,29,0)),endDate:new Date(Date.UTC(2025,1,3,0)),bannerKey:"yearofthesnakeevent-",scale:.21,availableLangs:["en","de","it","fr","ja","ko","es-ES","pt-BR","zh-CN"],eventEncounters:[{species:e.EKANS},{species:e.ONIX},{species:e.DRATINI},{species:e.CLEFFA},{species:e.UMBREON},{species:e.DUNSPARCE},{species:e.TEDDIURSA},{species:e.SEVIPER},{species:e.LUNATONE},{species:e.CHINGLING},{species:e.SNIVY},{species:e.DARUMAKA},{species:e.DRAMPA},{species:e.SILICOBRA},{species:e.BLOODMOON_URSALUNA}],luckBoostedSpecies:[e.EKANS,e.ARBOK,e.ONIX,e.STEELIX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.CLEFFA,e.CLEFAIRY,e.CLEFABLE,e.UMBREON,e.DUNSPARCE,e.DUDUNSPARCE,e.TEDDIURSA,e.URSARING,e.URSALUNA,e.SEVIPER,e.LUNATONE,e.RAYQUAZA,e.CHINGLING,e.CHIMECHO,e.CRESSELIA,e.DARKRAI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.DARUMAKA,e.DARMANITAN,e.ZYGARDE,e.DRAMPA,e.LUNALA,e.BLACEPHALON,e.SILICOBRA,e.SANDACONDA,e.ROARING_MOON,e.BLOODMOON_URSALUNA]}],Wm=class Wm{constructor(){}isActive(A){return A.startDate<new Date&&new Date<A.endDate}activeEvent(){return nR.find(A=>this.isActive(A))}isEventActive(){return nR.some(A=>this.isActive(A))}activeEventHasBanner(){return nR.filter(s=>this.isActive(s)&&s.hasOwnProperty("bannerFilename")).length>0}getShinyMultiplier(){let A=1;return nR.filter(R=>R.eventType===0&&this.isActive(R)).forEach(R=>{A*=R.shinyMultiplier??1}),A}getEventBannerFilename(){var A;return((A=nR.find(s=>this.isActive(s)))==null?void 0:A.bannerKey)??""}getEventEncounters(){const A=[];return nR.filter(s=>this.isActive(s)).map(s=>{ve(s.eventEncounters)||A.push(...s.eventEncounters)}),A}getClassicFriendshipMultiplier(){let A=sk;return nR.filter(R=>this.isActive(R)).forEach(R=>{!ve(R.classicFriendshipMultiplier)&&R.classicFriendshipMultiplier>A&&(A=R.classicFriendshipMultiplier)}),A}getUpgradeUnlockedVouchers(){return nR.some(A=>this.isActive(A)&&(A.upgradeUnlockedVouchers??!1))}getDelibirdyBuff(){const A=[];return nR.filter(s=>this.isActive(s)).map(s=>{ve(s.delibirdyBuff)||A.push(...s.delibirdyBuff)}),A}getWeather(){const A=[];return nR.filter(s=>this.isActive(s)).map(s=>{ve(s.weather)||A.push(...s.weather)}),A}getAllMysteryEncounterChanges(){const A=[];return nR.filter(s=>this.isActive(s)).map(s=>{ve(s.mysteryEncounterTierChanges)||A.push(...s.mysteryEncounterTierChanges)}),A}getEventMysteryEncountersDisabled(){const A=[];return nR.filter(s=>this.isActive(s)&&!ve(s.mysteryEncounterTierChanges)).map(s=>{var R;(R=s.mysteryEncounterTierChanges)==null||R.map(a=>{a.disable&&A.push(a.mysteryEncounter)})}),A}getMysteryEncounterTierForEvent(A,s){let R=s;return nR.filter(a=>this.isActive(a)&&!ve(a.mysteryEncounterTierChanges)).map(a=>{var i;(i=a.mysteryEncounterTierChanges)==null||i.map(r=>{r.mysteryEncounter===A&&(R=r.tier??s)})}),R}getEventLuckBoost(){let A=0;return nR.filter(R=>this.isActive(R)&&!ve(R.luckBoost)).forEach(R=>{A+=R.luckBoost}),A}getEventLuckBoostedSpecies(){const A=[];return nR.filter(s=>this.isActive(s)).map(s=>{ve(s.luckBoostedSpecies)||A.push(...s.luckBoostedSpecies.filter(R=>!A.includes(R)))}),A}};N(Wm,"TimedEventManager");let iG=Wm;const Ym=class Ym extends Phaser.GameObjects.Container{constructor(A,s,R){super(n,A,s),this.availableWidth=n.scaledCanvas.width,this.event=R,this.setVisible(!1)}setWidth(A){var s;if(A!==this.availableWidth){this.availableWidth=A;const R=this.availableWidth/2+(((s=this.event)==null?void 0:s.xOffset)??0);this.banner&&(this.banner.x=R),this.eventTimerText&&(this.eventTimerText.x=R)}}setup(){const A=u.resolvedLanguage;if(this.event&&this.event.bannerKey){let s=this.event.bannerKey;A&&this.event.availableLangs&&this.event.availableLangs.length>0&&(this.event.availableLangs.includes(A)?s+=A:s+="en"),console.log(this.event.bannerKey);const R=5,a=this.event.eventType!==1,i=n.game.canvas.height/6-R-(a?10:0)-(this.event.yOffset??0);this.banner=new Phaser.GameObjects.Image(n,this.availableWidth/2,i-R,s),this.banner.setName("img-event-banner"),this.banner.setOrigin(.5,1),this.banner.setScale(this.event.scale??.18),a&&(this.eventTimerText=le(this.banner.x,this.banner.y+2,this.timeToGo(this.event.endDate),Q.WINDOW),this.eventTimerText.setName("text-event-timer"),this.eventTimerText.setScale(.15),this.eventTimerText.setOrigin(.5,0),this.add(this.eventTimerText)),this.add(this.banner)}}show(){this.setVisible(!0),this.updateCountdown(),this.eventTimer=setInterval(()=>{this.updateCountdown()},1e3)}clear(){this.setVisible(!1),this.eventTimer&&clearInterval(this.eventTimer),this.eventTimer=null}timeToGo(A){function s(l){return(l<10?"0":"")+l}N(s,"z");const R=new Date;let a=Math.abs(A.getTime()-R.getTime());a=Math.abs(a);const i=a/864e5|0,r=a%864e5/36e5|0,L=a%36e5/6e4|0,o=Math.round(a%6e4/1e3);return u.t("menu:eventTimer",{days:s(i),hours:s(r),mins:s(L),secs:s(o)})}updateCountdown(){this.event&&this.event.eventType!==1&&this.eventTimerText.setText(this.timeToGo(this.event.endDate))}};N(Ym,"TimedEventDisplay");let rG=Ym;const HN=class HN extends CS{constructor(A=Ie.TITLE){super(A)}setup(){super.setup();const A=this.getUi();this.titleContainer=n.add.container(0,-(n.game.canvas.height/6)),this.titleContainer.setName("title"),this.titleContainer.setAlpha(0),A.add(this.titleContainer);const s=n.add.image(n.game.canvas.width/6/2,8,"logo");s.setOrigin(.5,0),this.titleContainer.add(s),n.eventManager.isEventActive()&&(this.eventDisplay=new rG(0,0,n.eventManager.activeEvent()),this.eventDisplay.setup(),this.titleContainer.add(this.eventDisplay)),this.playerCountLabel=le(n.game.canvas.width/6-2,n.game.canvas.height/6-13-576*Hn(Q.WINDOW,n.uiTheme).scale,`? ${u.t("menu:playersOnline")}`,Q.MESSAGE,{fontSize:"54px"}),this.playerCountLabel.setOrigin(1,0),this.titleContainer.add(this.playerCountLabel),this.splashMessageText=le(s.x+64,s.y+s.displayHeight-8,"",Q.MONEY,{fontSize:"54px"}),this.splashMessageText.setOrigin(.5,.5),this.splashMessageText.setAngle(-20),this.titleContainer.add(this.splashMessageText);const R=this.splashMessageText.scale;n.tweens.add({targets:this.splashMessageText,duration:st(350),scale:R*1.25,loop:-1,yoyo:!0}),this.appVersionText=le(s.x-60,s.y+s.displayHeight+4,"",Q.MONEY,{fontSize:"54px"}),this.appVersionText.setOrigin(.5,.5),this.appVersionText.setAngle(0),this.titleContainer.add(this.appVersionText)}updateTitleStats(){TO.getGameTitleStats().then(A=>{A&&(this.playerCountLabel.setText(`${A.playerCount} ${u.t("menu:playersOnline")}`),this.splashMessage==="splashMessages:battlesWon"&&this.splashMessageText.setText(u.t(this.splashMessage,{count:A.battleCount})))}).catch(A=>{console.error(`Failed to fetch title stats:
`,A)})}show(A){const s=super.show(A);if(s){this.splashMessage=o7(eJ()),this.splashMessageText.setText(u.t(this.splashMessage,{count:HN.BATTLES_WON_FALLBACK})),this.appVersionText.setText("v"+Vo);const R=this.getUi();n.eventManager.isEventActive()&&(this.eventDisplay.setWidth(n.scaledCanvas.width-this.optionSelectBg.width-this.optionSelectBg.x),this.eventDisplay.show()),this.updateTitleStats(),this.titleStatsTimer=setInterval(()=>{this.updateTitleStats()},6e4),n.tweens.add({targets:[this.titleContainer,R.getMessageHandler().bg],duration:st(325),alpha:N(a=>a===this.titleContainer?1:0,"alpha"),ease:"Sine.easeInOut"})}return s}clear(){var s;super.clear();const A=this.getUi();(s=this.eventDisplay)==null||s.clear(),this.titleStatsTimer&&clearInterval(this.titleStatsTimer),this.titleStatsTimer=null,n.tweens.add({targets:[this.titleContainer,A.getMessageHandler().bg],duration:st(325),alpha:N(R=>R===this.titleContainer?0:1,"alpha"),ease:"Sine.easeInOut"})}};N(HN,"TitleUiHandler"),HN.BATTLES_WON_FALLBACK=-99999999;let LG=HN;const ym=class ym extends Phaser.GameObjects.Container{constructor(){super(n,n.game.canvas.width/6-4,n.game.canvas.height/6-4)}setup(){this.icon=n.add.sprite(0,0,"saving_icon"),this.icon.setOrigin(1,1),this.add(this.icon),this.animActive=!1,this.shown=!1,this.setAlpha(0),this.setVisible(!1)}show(){this.shown=!0,!this.animActive&&(this.animActive=!0,n.tweens.add({targets:this,alpha:1,duration:st(250),ease:"Sine.easeInOut",onComplete:N(()=>{n.time.delayedCall(st(500),()=>{this.animActive=!1,this.shown||this.hide()})},"onComplete")}),this.setVisible(!0),this.shown=!0)}hide(){this.shown=!1,!this.animActive&&(this.animActive=!0,n.tweens.add({targets:this,alpha:0,duration:st(250),ease:"Sine.easeInOut",onComplete:N(()=>{this.animActive=!1,this.setVisible(!1),this.shown&&this.show()},"onComplete")}),this.shown=!1)}};N(ym,"SavingIconHandler");let NG=ym;const wm=class wm extends vr{constructor(A=null){super(A),this.minTime=1e3*5,this.maxTime=1e3*60*5,this.randVarianceTime=1e3*10,this.reconnectDuration=this.minTime}getModalTitle(){return""}getWidth(){return 160}getHeight(){return 64}getMargin(){return[0,0,48,0]}getButtonLabels(){return[]}setup(){super.setup();const A=le(this.getWidth()/2,this.getHeight()/2,u.t("menu:errorServerDown"),Q.WINDOW,{fontSize:"48px",align:"center"});A.setOrigin(.5,.5),this.modalContainer.add(A)}tryReconnect(){ka().then(A=>{A[0]||[200,400].includes(A[1])?(this.reconnectTimer=null,this.reconnectDuration=this.minTime,n.playSound("se/pb_bounce_1"),this.reconnectCallback()):A[1]===401?(Pl(fL),n.reset(!0,!0)):(this.reconnectDuration=Math.min(this.reconnectDuration*2,this.maxTime),this.reconnectTimer=setTimeout(()=>this.tryReconnect(),this.reconnectDuration+Math.random()*this.randVarianceTime))})}show(A){if(A.length>=1&&A[0]instanceof Function){const s={buttonActions:[]};return this.reconnectCallback=A[0],this.reconnectDuration=this.minTime,this.reconnectTimer=setTimeout(()=>this.tryReconnect(),this.reconnectDuration),super.show([s])}return!1}};N(wm,"UnavailableModalUiHandler");let TG=wm;const vm=class vm extends vr{constructor(A=null){super(A)}getModalTitle(){return""}getWidth(){return 160}getHeight(){return 32}getMargin(){return[0,0,48,0]}getButtonLabels(){return[]}setup(){super.setup();const A=le(this.getWidth()/2,this.getHeight()/2,`Your session is out of date.
Your data will be reloaded…`,Q.WINDOW,{fontSize:"48px",align:"center"});A.setOrigin(.5,.5),this.modalContainer.add(A)}show(A){const s={buttonActions:[]};return super.show([s])}};N(vm,"SessionReloadModalUiHandler");let SG=vm;const Vm=class Vm extends Vs{constructor(A=null){super(A),this.listening=!1,this.buttonPressed=null,this.timeLeftAutoClose=5}setup(){const A=this.getUi();this.optionSelectContainer=n.add.container(0,0),this.actionsContainer=n.add.container(0,0),this.optionSelectContainer.setVisible(!1),this.actionsContainer.setVisible(!1),A.add(this.optionSelectContainer),A.add(this.actionsContainer),this.titleBg=Gt(n.game.canvas.width/6-this.getWindowWidth(),-(n.game.canvas.height/6)+28+21,this.getWindowWidth(),24),this.titleBg.setOrigin(.5),this.optionSelectContainer.add(this.titleBg),this.actionBg=Gt(n.game.canvas.width/6-this.getWindowWidth(),-(n.game.canvas.height/6)+this.getWindowHeight()+28+21+21,this.getWindowWidth(),24),this.actionBg.setOrigin(.5),this.actionsContainer.add(this.actionBg),this.unlockText=le(0,0,u.t("settings:pressButton"),Q.WINDOW),this.unlockText.setOrigin(0,0),this.unlockText.setPositionRelative(this.titleBg,36,4),this.optionSelectContainer.add(this.unlockText),this.timerText=le(0,0,"(5)",Q.WINDOW),this.timerText.setOrigin(0,0),this.timerText.setPositionRelative(this.unlockText,this.unlockText.width/6+5,0),this.optionSelectContainer.add(this.timerText),this.optionSelectBg=Gt(n.game.canvas.width/6-this.getWindowWidth(),-(n.game.canvas.height/6)+this.getWindowHeight()+28,this.getWindowWidth(),this.getWindowHeight()),this.optionSelectBg.setOrigin(.5),this.optionSelectContainer.add(this.optionSelectBg),this.cancelLabel=le(0,0,u.t("settings:back"),Q.SETTINGS_LABEL),this.cancelLabel.setOrigin(0,.5),this.cancelLabel.setPositionRelative(this.actionBg,10,this.actionBg.height/2),this.actionsContainer.add(this.cancelLabel)}manageAutoCloseTimer(){clearTimeout(this.countdownTimer),this.countdownTimer=setTimeout(()=>{this.timeLeftAutoClose-=1,this.timerText.setText(`(${this.timeLeftAutoClose})`),this.timeLeftAutoClose>=0?this.manageAutoCloseTimer():this.cancelFn&&this.cancelFn()},1e3)}show(A){return super.show(A),this.buttonPressed=null,this.timeLeftAutoClose=5,this.cancelFn=A[0].cancelHandler,this.target=A[0].target,this.getUi().bringToTop(this.optionSelectContainer),this.getUi().bringToTop(this.actionsContainer),this.optionSelectContainer.setVisible(!0),setTimeout(()=>{this.listening=!0,this.manageAutoCloseTimer()},100),!0}getWindowWidth(){return 160}getWindowHeight(){return 64}processInput(A){if(this.buttonPressed===null)return!1;const s=this.getUi();let R=!1;switch(A){case k.LEFT:case k.RIGHT:const a=this.cursor?0:1;R=this.setCursor(a);break;case k.ACTION:this.cursor===0?this.cancelFn&&this.cancelFn():(R=this.swapAction(),OO.getInstance().updateIcons(),this.cancelFn&&this.cancelFn(R));break}return R?s.playSelect():s.playError(),R}setCursor(A){return this.cursor=A,A===1?(this.actionLabel.setColor(this.getTextColor(Q.SETTINGS_SELECTED)),this.actionLabel.setShadowColor(this.getTextColor(Q.SETTINGS_SELECTED,!0)),this.cancelLabel.setColor(this.getTextColor(Q.WINDOW)),this.cancelLabel.setShadowColor(this.getTextColor(Q.WINDOW,!0)),!0):(this.actionLabel.setColor(this.getTextColor(Q.WINDOW)),this.actionLabel.setShadowColor(this.getTextColor(Q.WINDOW,!0)),this.cancelLabel.setColor(this.getTextColor(Q.SETTINGS_SELECTED)),this.cancelLabel.setShadowColor(this.getTextColor(Q.SETTINGS_SELECTED,!0)),!0)}clear(){super.clear(),clearTimeout(this.countdownTimer),this.timerText.setText("(5)"),this.timeLeftAutoClose=5,this.listening=!1,this.target=null,this.cancelFn=null,this.optionSelectContainer.setVisible(!1),this.actionsContainer.setVisible(!1),this.newButtonIcon.setVisible(!1),this.buttonPressed=null}onInputDown(A,s,R){clearTimeout(this.countdownTimer),this.timerText.setText(""),this.newButtonIcon.setTexture(R),this.newButtonIcon.setFrame(A),s&&(this.targetButtonIcon.setTexture(R),this.targetButtonIcon.setFrame(s),this.targetButtonIcon.setVisible(!0),this.swapText.setVisible(!0)),this.newButtonIcon.setVisible(!0),this.setCursor(0),this.actionsContainer.setVisible(!0)}};N(Vm,"AbstractBindingUiHandler");let XC=Vm;const xm=class xm extends XC{constructor(A=null){var s;super(A),(s=n.input.gamepad)==null||s.on("down",this.gamepadButtonDown,this)}setup(){super.setup(),this.newButtonIcon=n.add.sprite(0,0,"xbox"),this.newButtonIcon.setPositionRelative(this.optionSelectBg,78,16),this.newButtonIcon.setOrigin(.5),this.newButtonIcon.setVisible(!1),this.swapText=le(0,0,"will swap with",Q.WINDOW),this.swapText.setOrigin(.5),this.swapText.setPositionRelative(this.optionSelectBg,this.optionSelectBg.width/2-2,this.optionSelectBg.height/2-2),this.swapText.setVisible(!1),this.targetButtonIcon=n.add.sprite(0,0,"xbox"),this.targetButtonIcon.setPositionRelative(this.optionSelectBg,78,48),this.targetButtonIcon.setOrigin(.5),this.targetButtonIcon.setVisible(!1),this.actionLabel=le(0,0,"Confirm swap",Q.SETTINGS_LABEL),this.actionLabel.setOrigin(0,.5),this.actionLabel.setPositionRelative(this.actionBg,this.actionBg.width-75,this.actionBg.height/2),this.actionsContainer.add(this.actionLabel),this.optionSelectContainer.add(this.newButtonIcon),this.optionSelectContainer.add(this.swapText),this.optionSelectContainer.add(this.targetButtonIcon)}getSelectedDevice(){var A;return(A=n.inputController)==null?void 0:A.selectedDevice[IA.GAMEPAD]}gamepadButtonDown(A,s,R){const a=[12,13,14,15];if(!this.listening||A.id.toLowerCase()!==this.getSelectedDevice()||a.includes(s.index)||this.buttonPressed!==null)return;const i=n.inputController.getActiveConfig(IA.GAMEPAD),r=i.padType,L=yr(i,s.index),o=i.icons[L];if(!o)return;this.buttonPressed=s.index;const l=xC(i,this.target);this.onInputDown(o,l,r)}swapAction(){const A=n.inputController.getActiveConfig(IA.GAMEPAD);return n.inputController.assignBinding(A,this.target,this.buttonPressed)?(n.gameData.saveMappingConfigs(this.getSelectedDevice(),A),!0):!1}clear(){super.clear(),this.targetButtonIcon.setVisible(!1),this.swapText.setVisible(!1)}};N(xm,"GamepadBindingUiHandler");let oG=xm;const lG={padID:"default",padType:"keyboard",deviceMapping:{KEY_A:Phaser.Input.Keyboard.KeyCodes.A,KEY_B:Phaser.Input.Keyboard.KeyCodes.B,KEY_C:Phaser.Input.Keyboard.KeyCodes.C,KEY_D:Phaser.Input.Keyboard.KeyCodes.D,KEY_E:Phaser.Input.Keyboard.KeyCodes.E,KEY_F:Phaser.Input.Keyboard.KeyCodes.F,KEY_G:Phaser.Input.Keyboard.KeyCodes.G,KEY_H:Phaser.Input.Keyboard.KeyCodes.H,KEY_I:Phaser.Input.Keyboard.KeyCodes.I,KEY_J:Phaser.Input.Keyboard.KeyCodes.J,KEY_K:Phaser.Input.Keyboard.KeyCodes.K,KEY_L:Phaser.Input.Keyboard.KeyCodes.L,KEY_M:Phaser.Input.Keyboard.KeyCodes.M,KEY_N:Phaser.Input.Keyboard.KeyCodes.N,KEY_O:Phaser.Input.Keyboard.KeyCodes.O,KEY_P:Phaser.Input.Keyboard.KeyCodes.P,KEY_Q:Phaser.Input.Keyboard.KeyCodes.Q,KEY_R:Phaser.Input.Keyboard.KeyCodes.R,KEY_S:Phaser.Input.Keyboard.KeyCodes.S,KEY_T:Phaser.Input.Keyboard.KeyCodes.T,KEY_U:Phaser.Input.Keyboard.KeyCodes.U,KEY_V:Phaser.Input.Keyboard.KeyCodes.V,KEY_W:Phaser.Input.Keyboard.KeyCodes.W,KEY_X:Phaser.Input.Keyboard.KeyCodes.X,KEY_Y:Phaser.Input.Keyboard.KeyCodes.Y,KEY_Z:Phaser.Input.Keyboard.KeyCodes.Z,KEY_0:Phaser.Input.Keyboard.KeyCodes.ZERO,KEY_1:Phaser.Input.Keyboard.KeyCodes.ONE,KEY_2:Phaser.Input.Keyboard.KeyCodes.TWO,KEY_3:Phaser.Input.Keyboard.KeyCodes.THREE,KEY_4:Phaser.Input.Keyboard.KeyCodes.FOUR,KEY_5:Phaser.Input.Keyboard.KeyCodes.FIVE,KEY_6:Phaser.Input.Keyboard.KeyCodes.SIX,KEY_7:Phaser.Input.Keyboard.KeyCodes.SEVEN,KEY_8:Phaser.Input.Keyboard.KeyCodes.EIGHT,KEY_9:Phaser.Input.Keyboard.KeyCodes.NINE,KEY_CTRL:Phaser.Input.Keyboard.KeyCodes.CTRL,KEY_DEL:Phaser.Input.Keyboard.KeyCodes.DELETE,KEY_END:Phaser.Input.Keyboard.KeyCodes.END,KEY_ENTER:Phaser.Input.Keyboard.KeyCodes.ENTER,KEY_ESC:Phaser.Input.Keyboard.KeyCodes.ESC,KEY_F1:Phaser.Input.Keyboard.KeyCodes.F1,KEY_F2:Phaser.Input.Keyboard.KeyCodes.F2,KEY_F3:Phaser.Input.Keyboard.KeyCodes.F3,KEY_F4:Phaser.Input.Keyboard.KeyCodes.F4,KEY_F5:Phaser.Input.Keyboard.KeyCodes.F5,KEY_F6:Phaser.Input.Keyboard.KeyCodes.F6,KEY_F7:Phaser.Input.Keyboard.KeyCodes.F7,KEY_F8:Phaser.Input.Keyboard.KeyCodes.F8,KEY_F9:Phaser.Input.Keyboard.KeyCodes.F9,KEY_F10:Phaser.Input.Keyboard.KeyCodes.F10,KEY_F11:Phaser.Input.Keyboard.KeyCodes.F11,KEY_F12:Phaser.Input.Keyboard.KeyCodes.F12,KEY_HOME:Phaser.Input.Keyboard.KeyCodes.HOME,KEY_INSERT:Phaser.Input.Keyboard.KeyCodes.INSERT,KEY_PAGE_DOWN:Phaser.Input.Keyboard.KeyCodes.PAGE_DOWN,KEY_PAGE_UP:Phaser.Input.Keyboard.KeyCodes.PAGE_UP,KEY_PLUS:Phaser.Input.Keyboard.KeyCodes.NUMPAD_ADD,KEY_MINUS:Phaser.Input.Keyboard.KeyCodes.NUMPAD_SUBTRACT,KEY_QUOTATION:Phaser.Input.Keyboard.KeyCodes.QUOTES,KEY_SHIFT:Phaser.Input.Keyboard.KeyCodes.SHIFT,KEY_SPACE:Phaser.Input.Keyboard.KeyCodes.SPACE,KEY_TAB:Phaser.Input.Keyboard.KeyCodes.TAB,KEY_TILDE:Phaser.Input.Keyboard.KeyCodes.BACKTICK,KEY_ARROW_UP:Phaser.Input.Keyboard.KeyCodes.UP,KEY_ARROW_DOWN:Phaser.Input.Keyboard.KeyCodes.DOWN,KEY_ARROW_LEFT:Phaser.Input.Keyboard.KeyCodes.LEFT,KEY_ARROW_RIGHT:Phaser.Input.Keyboard.KeyCodes.RIGHT,KEY_LEFT_BRACKET:Phaser.Input.Keyboard.KeyCodes.OPEN_BRACKET,KEY_RIGHT_BRACKET:Phaser.Input.Keyboard.KeyCodes.CLOSED_BRACKET,KEY_SEMICOLON:Phaser.Input.Keyboard.KeyCodes.SEMICOLON,KEY_BACKSPACE:Phaser.Input.Keyboard.KeyCodes.BACKSPACE,KEY_ALT:Phaser.Input.Keyboard.KeyCodes.ALT},icons:{KEY_A:"A.png",KEY_B:"B.png",KEY_C:"C.png",KEY_D:"D.png",KEY_E:"E.png",KEY_F:"F.png",KEY_G:"G.png",KEY_H:"H.png",KEY_I:"I.png",KEY_J:"J.png",KEY_K:"K.png",KEY_L:"L.png",KEY_M:"M.png",KEY_N:"N.png",KEY_O:"O.png",KEY_P:"P.png",KEY_Q:"Q.png",KEY_R:"R.png",KEY_S:"S.png",KEY_T:"T.png",KEY_U:"U.png",KEY_V:"V.png",KEY_W:"W.png",KEY_X:"X.png",KEY_Y:"Y.png",KEY_Z:"Z.png",KEY_0:"0.png",KEY_1:"1.png",KEY_2:"2.png",KEY_3:"3.png",KEY_4:"4.png",KEY_5:"5.png",KEY_6:"6.png",KEY_7:"7.png",KEY_8:"8.png",KEY_9:"9.png",KEY_F1:"F1.png",KEY_F2:"F2.png",KEY_F3:"F3.png",KEY_F4:"F4.png",KEY_F5:"F5.png",KEY_F6:"F6.png",KEY_F7:"F7.png",KEY_F8:"F8.png",KEY_F9:"F9.png",KEY_F10:"F10.png",KEY_F11:"F11.png",KEY_F12:"F12.png",KEY_PAGE_DOWN:"PAGE_DOWN.png",KEY_PAGE_UP:"PAGE_UP.png",KEY_CTRL:"CTRL.png",KEY_DEL:"DEL.png",KEY_END:"END.png",KEY_ENTER:"ENTER.png",KEY_ESC:"ESC.png",KEY_HOME:"HOME.png",KEY_INSERT:"INS.png",KEY_PLUS:"PLUS.png",KEY_MINUS:"MINUS.png",KEY_QUOTATION:"QUOTE.png",KEY_SHIFT:"SHIFT.png",KEY_SPACE:"SPACE.png",KEY_TAB:"TAB.png",KEY_TILDE:"TILDE.png",KEY_ARROW_UP:"KEY_ARROW_UP.png",KEY_ARROW_DOWN:"KEY_ARROW_DOWN.png",KEY_ARROW_LEFT:"KEY_ARROW_LEFT.png",KEY_ARROW_RIGHT:"KEY_ARROW_RIGHT.png",KEY_LEFT_BRACKET:"LEFT_BRACKET.png",KEY_RIGHT_BRACKET:"RIGHT_BRACKET.png",KEY_SEMICOLON:"SEMICOLON.png",KEY_BACKSPACE:"BACK.png",KEY_ALT:"ALT.png"},settings:{[rt.Button_Up]:k.UP,[rt.Button_Down]:k.DOWN,[rt.Button_Left]:k.LEFT,[rt.Button_Right]:k.RIGHT,[rt.Button_Submit]:k.SUBMIT,[rt.Button_Action]:k.ACTION,[rt.Button_Cancel]:k.CANCEL,[rt.Button_Menu]:k.MENU,[rt.Button_Stats]:k.STATS,[rt.Button_Cycle_Shiny]:k.CYCLE_SHINY,[rt.Button_Cycle_Form]:k.CYCLE_FORM,[rt.Button_Cycle_Gender]:k.CYCLE_GENDER,[rt.Button_Cycle_Ability]:k.CYCLE_ABILITY,[rt.Button_Cycle_Nature]:k.CYCLE_NATURE,[rt.Button_Cycle_Variant]:k.V,[rt.Button_Speed_Up]:k.SPEED_UP,[rt.Button_Slow_Down]:k.SLOW_DOWN,[rt.Alt_Button_Up]:k.UP,[rt.Alt_Button_Down]:k.DOWN,[rt.Alt_Button_Left]:k.LEFT,[rt.Alt_Button_Right]:k.RIGHT,[rt.Alt_Button_Submit]:k.SUBMIT,[rt.Alt_Button_Action]:k.ACTION,[rt.Alt_Button_Cancel]:k.CANCEL,[rt.Alt_Button_Menu]:k.MENU,[rt.Alt_Button_Stats]:k.STATS,[rt.Alt_Button_Cycle_Shiny]:k.CYCLE_SHINY,[rt.Alt_Button_Cycle_Form]:k.CYCLE_FORM,[rt.Alt_Button_Cycle_Gender]:k.CYCLE_GENDER,[rt.Alt_Button_Cycle_Ability]:k.CYCLE_ABILITY,[rt.Alt_Button_Cycle_Nature]:k.CYCLE_NATURE,[rt.Alt_Button_Cycle_Variant]:k.V,[rt.Alt_Button_Speed_Up]:k.SPEED_UP,[rt.Alt_Button_Slow_Down]:k.SLOW_DOWN},default:{KEY_ARROW_UP:rt.Button_Up,KEY_ARROW_DOWN:rt.Button_Down,KEY_ARROW_LEFT:rt.Button_Left,KEY_ARROW_RIGHT:rt.Button_Right,KEY_ENTER:rt.Button_Submit,KEY_SPACE:rt.Button_Action,KEY_BACKSPACE:rt.Button_Cancel,KEY_ESC:rt.Button_Menu,KEY_C:rt.Button_Stats,KEY_R:rt.Button_Cycle_Shiny,KEY_F:rt.Button_Cycle_Form,KEY_G:rt.Button_Cycle_Gender,KEY_E:rt.Button_Cycle_Ability,KEY_N:rt.Button_Cycle_Nature,KEY_V:rt.Button_Cycle_Variant,KEY_PLUS:-1,KEY_MINUS:-1,KEY_A:rt.Alt_Button_Left,KEY_B:-1,KEY_D:rt.Alt_Button_Right,KEY_H:-1,KEY_I:-1,KEY_J:-1,KEY_K:-1,KEY_L:-1,KEY_M:rt.Alt_Button_Menu,KEY_O:-1,KEY_P:-1,KEY_Q:-1,KEY_S:rt.Alt_Button_Down,KEY_T:rt.Alt_Button_Cycle_Form,KEY_U:-1,KEY_W:rt.Alt_Button_Up,KEY_X:rt.Alt_Button_Cancel,KEY_Y:rt.Alt_Button_Cycle_Shiny,KEY_Z:rt.Alt_Button_Action,KEY_0:-1,KEY_1:-1,KEY_2:-1,KEY_3:-1,KEY_4:-1,KEY_5:-1,KEY_6:-1,KEY_7:-1,KEY_8:-1,KEY_9:-1,KEY_CTRL:-1,KEY_DEL:-1,KEY_END:-1,KEY_F1:-1,KEY_F2:-1,KEY_F3:-1,KEY_F4:-1,KEY_F5:-1,KEY_F6:-1,KEY_F7:-1,KEY_F8:-1,KEY_F9:-1,KEY_F10:-1,KEY_F11:-1,KEY_F12:-1,KEY_HOME:-1,KEY_INSERT:-1,KEY_PAGE_DOWN:rt.Button_Slow_Down,KEY_PAGE_UP:rt.Button_Speed_Up,KEY_QUOTATION:-1,KEY_SHIFT:rt.Alt_Button_Stats,KEY_TAB:-1,KEY_TILDE:-1,KEY_LEFT_BRACKET:-1,KEY_RIGHT_BRACKET:-1,KEY_SEMICOLON:-1,KEY_ALT:-1},blacklist:["KEY_ENTER","KEY_ESC","KEY_SPACE","KEY_BACKSPACE","KEY_ARROW_UP","KEY_ARROW_DOWN","KEY_ARROW_LEFT","KEY_ARROW_RIGHT","KEY_DEL","KEY_HOME"]},bm=class bm extends bC{constructor(A=null){var a,i;super(A),this.setSetting=s8,this.titleSelected="Keyboard",this.setting=rt,this.settingDeviceDefaults=ZZ,this.settingDeviceOptions=kZ,this.configs=[lG],this.commonSettingsCount=0,this.textureOverride="keyboard",this.localStoragePropertyName="settingsKeyboard",this.settingBlacklisted=XZ,this.device=IA.KEYBOARD;const s=(a=n.input.keyboard)==null?void 0:a.addKey(Phaser.Input.Keyboard.KeyCodes.DELETE),R=(i=n.input.keyboard)==null?void 0:i.addKey(Phaser.Input.Keyboard.KeyCodes.HOME);s&&s.on("up",this.onDeleteDown,this),R&&R.on("up",this.onHomeDown,this)}setup(){super.setup(),this.layout.noKeyboard=new Map;const A=n.add.container(0,0);A.setVisible(!1);const s=le(8,28,u.t("settings:keyboardPleasePress"),Q.SETTINGS_LABEL);s.setOrigin(0,0),A.add(s),this.settingsContainer.add(A);const R=n.add.sprite(0,0,"keyboard");R.setOrigin(0,-.1),R.setPositionRelative(this.actionsBg,this.navigationContainer.width-260,4),this.navigationIcons.BUTTON_DELETE=R;const a=le(0,0,u.t("settings:delete"),Q.SETTINGS_LABEL);a.setOrigin(0,.15),a.setPositionRelative(R,-a.width/6-2,0),this.settingsContainer.add(R),this.settingsContainer.add(a),this.layout.noKeyboard.optionsContainer=A,this.layout.noKeyboard.label=s}onHomeDown(){[Ie.SETTINGS_KEYBOARD,Ie.SETTINGS_GAMEPAD].includes(n.ui.getMode())&&(n.gameData.resetMappingToFactory(),OO.getInstance().updateIcons())}onDeleteDown(){if(n.ui.getMode()!==Ie.SETTINGS_KEYBOARD)return;const A=this.cursor+this.scrollCursor,s=this.settingLabels[A].text,R=l7(s),a=rt[R],i=this.getActiveConfig();wQ(this.getActiveConfig(),a)&&(this.saveCustomKeyboardMappingToLocalStorage(i),this.updateBindings(),OO.getInstance().updateIcons())}setLayout(A){return A?super.setLayout(A):(this.layout.noKeyboard.optionsContainer.setVisible(!0),!1)}updateChosenKeyboardDisplay(){this.updateBindings();for(const[A,s]of Object.keys(this.setting).entries())if(this.setting[s]===this.setting.Default_Layout)for(const a of Object.keys(this.layout))a!=="noKeyboard"&&this.layout[a].optionValueLabels[A][0].setText(_1(n.inputController.selectedDevice[IA.KEYBOARD],22))}saveCustomKeyboardMappingToLocalStorage(A){var s;n.gameData.saveMappingConfigs((s=n.inputController)==null?void 0:s.selectedDevice[IA.KEYBOARD],A)}saveSettingToLocalStorage(A,s){this.setting[A]!==this.setting.Default_Layout&&n.gameData.saveControlSetting(this.device,this.localStoragePropertyName,A,this.settingDeviceDefaults,s)}};N(bm,"SettingsKeyboardUiHandler");let QC=bm;const km=class km extends XC{constructor(A=null){var s;super(A),(s=n.input.keyboard)==null||s.on("keydown",this.onKeyDown,this)}setup(){super.setup(),this.newButtonIcon=n.add.sprite(0,0,"keyboard"),this.newButtonIcon.setPositionRelative(this.optionSelectBg,78,32),this.newButtonIcon.setOrigin(.5),this.newButtonIcon.setVisible(!1),this.actionLabel=le(0,0,"Assign button",Q.SETTINGS_LABEL),this.actionLabel.setOrigin(0,.5),this.actionLabel.setPositionRelative(this.actionBg,this.actionBg.width-80,this.actionBg.height/2),this.actionsContainer.add(this.actionLabel),this.optionSelectContainer.add(this.newButtonIcon)}getSelectedDevice(){var A;return(A=n.inputController)==null?void 0:A.selectedDevice[IA.KEYBOARD]}onKeyDown(A){const s=[Phaser.Input.Keyboard.KeyCodes.UP,Phaser.Input.Keyboard.KeyCodes.DOWN,Phaser.Input.Keyboard.KeyCodes.LEFT,Phaser.Input.Keyboard.KeyCodes.RIGHT,Phaser.Input.Keyboard.KeyCodes.HOME,Phaser.Input.Keyboard.KeyCodes.ENTER,Phaser.Input.Keyboard.KeyCodes.ESC,Phaser.Input.Keyboard.KeyCodes.DELETE],R=A.keyCode;if(!this.listening||this.buttonPressed!==null||s.includes(R))return;const a=n.inputController.getActiveConfig(IA.KEYBOARD),i=yr(a,R),r=a.icons[i];r&&(this.buttonPressed=R,this.onInputDown(r,null,"keyboard"))}swapAction(){const A=n.inputController.getActiveConfig(IA.KEYBOARD);return n.inputController.assignBinding(A,this.target,this.buttonPressed)?(n.gameData.saveMappingConfigs(this.getSelectedDevice(),A),!0):!1}};N(km,"KeyboardBindingUiHandler");let CG=km;const Zm=class Zm extends lS{constructor(A=null){super(dM.DISPLAY,A),this.title="Display";const s=this.settings.findIndex(R=>R.key===It.Language);if(s>=0)switch(localStorage.getItem("prLang")){case"en":this.settings[s].options[0]={value:"English",label:"English"};break;case"es-ES":this.settings[s].options[0]={value:"Español (ES)",label:"Español (ES)"};break;case"it":this.settings[s].options[0]={value:"Italiano",label:"Italiano"};break;case"fr":this.settings[s].options[0]={value:"Français",label:"Français"};break;case"de":this.settings[s].options[0]={value:"Deutsch",label:"Deutsch"};break;case"pt-BR":this.settings[s].options[0]={value:"Português (BR)",label:"Português (BR)"};break;case"zh-CN":this.settings[s].options[0]={value:"简体中文",label:"简体中文"};break;case"zh-TW":this.settings[s].options[0]={value:"繁體中文",label:"繁體中文"};break;case"ko":case"ko-KR":this.settings[s].options[0]={value:"한국어",label:"한국어"};break;case"ja":this.settings[s].options[0]={value:"日本語",label:"日本語"};break;case"ca-ES":this.settings[s].options[0]={value:"Català",label:"Català"};break;default:this.settings[s].options[0]={value:"English",label:"English"};break}this.localStorageKey="settings"}};N(Zm,"SettingsDisplayUiHandler");let JC=Zm;const Xm=class Xm extends lS{constructor(A=null){super(dM.AUDIO,A),this.title="Audio",this.localStorageKey="settings",this.rowsToDisplay=6}};N(Xm,"SettingsAudioUiHandler");let $C=Xm;const Qm=class Qm extends Ii{getModalTitle(A){return u.t("menu:renamePokemon")}getWidth(A){return 160}getMargin(A){return[0,0,48,0]}getButtonLabels(A){return[u.t("menu:rename"),u.t("menu:cancel")]}getReadableErrorMessage(A){const s=A==null?void 0:A.indexOf(":");return s>0&&(A=A.slice(0,s)),super.getReadableErrorMessage(A)}getInputFieldConfigs(){return[{label:u.t("menu:nickname")}]}show(A){if(super.show(A)){const s=A[0];return A[1]&&typeof A[1].getNameToRender=="function"?this.inputs[0].text=A[1].getNameToRender():this.inputs[0].text=A[1],this.submitAction=R=>{this.sanitizeInputs();const a=btoa(unescape(encodeURIComponent(this.inputs[0].text)));return s.buttonActions[0](a),!0},!0}return!1}};N(Qm,"RenameFormUiHandler");let UG=Qm;const Jm=class Jm extends RS{constructor(A,s=115,R=9){super(s,R),this.pokemonListContainer=A}setup(){super.setup(),super.changeToEggSummaryLayout(),this.currentPokemonSprite=n.add.sprite(54,80,"pkmn__sub"),this.currentPokemonSprite.setScale(.8),this.currentPokemonSprite.setPipeline(n.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),this.pokemonListContainer.add(this.currentPokemonSprite),this.pokemonNumberText=le(80,107.5,"0000",Q.SUMMARY,{fontSize:74}),this.pokemonNumberText.setOrigin(0,0),this.pokemonListContainer.add(this.pokemonNumberText),this.pokemonNameText=le(7,107.5,"",Q.SUMMARY,{fontSize:74}),this.pokemonNameText.setOrigin(0,0),this.pokemonListContainer.add(this.pokemonNameText),this.pokemonHatchedIcon=n.add.sprite(-5,90,"egg_icons"),this.pokemonHatchedIcon.setOrigin(0,.2),this.pokemonHatchedIcon.setScale(.8),this.pokemonListContainer.add(this.pokemonHatchedIcon),this.pokemonCandyIcon=n.add.sprite(4.5,40,"candy"),this.pokemonCandyIcon.setScale(.5),this.pokemonCandyIcon.setOrigin(0,0),this.pokemonListContainer.add(this.pokemonCandyIcon),this.pokemonCandyOverlayIcon=n.add.sprite(4.5,40,"candy_overlay"),this.pokemonCandyOverlayIcon.setScale(.5),this.pokemonCandyOverlayIcon.setOrigin(0,0),this.pokemonListContainer.add(this.pokemonCandyOverlayIcon),this.pokemonCandyCountText=le(14,40,"x0",Q.SUMMARY,{fontSize:"56px"}),this.pokemonCandyCountText.setOrigin(0,0),this.pokemonListContainer.add(this.pokemonCandyCountText),this.pokemonEggMoveContainers=[],this.pokemonEggMoveBgs=[],this.pokemonEggMoveLabels=[],this.pokemonEggMovesContainer=n.add.container(0,200),this.pokemonEggMovesContainer.setVisible(!1),this.pokemonEggMovesContainer.setScale(.5);for(let A=0;A<4;A++){const s=n.add.container(0,0+6*A),R=n.add.nineslice(70,0,"type_bgs","unknown",92,14,2,2,2,2);R.setOrigin(1,0);const a=le(70-R.width/2,0,"???",Q.PARTY);a.setOrigin(.5,0),this.pokemonEggMoveBgs.push(R),this.pokemonEggMoveLabels.push(a),s.add(R),s.add(a),s.setScale(.44),this.pokemonEggMoveContainers.push(s),this.pokemonEggMovesContainer.add(s)}super.add(this.pokemonEggMoveContainers)}hideDisplayPokemon(){this.currentPokemonSprite.setVisible(!1)}displayPokemon(A){const s=A.species,R=A.gender===at.FEMALE,a=A.formIndex,i=A.shiny,r=A.variant;this.currentPokemonSprite.setVisible(!1),s.loadAssets(R,a,i,r,!0).then(()=>{Vn(s.speciesId,A.formIndex).cry(),this.currentPokemonSprite.play(s.getSpriteKey(R,a,i,r)),this.currentPokemonSprite.setPipelineData("shiny",i),this.currentPokemonSprite.setPipelineData("variant",r),this.currentPokemonSprite.setPipelineData("spriteKey",s.getSpriteKey(R,a,i,r)),this.currentPokemonSprite.setVisible(!0)})}showHatchInfo(A){this.pokemonEggMovesContainer.setVisible(!0);const s=A.pokemon,R=s.species;this.displayPokemon(s),super.show(s,!1,1,A.getDex(),A.getStarterEntry(),!0);const a=TR[R.speciesId];this.pokemonCandyIcon.setTint(js(cs(a[0]))),this.pokemonCandyIcon.setVisible(!0),this.pokemonCandyOverlayIcon.setTint(js(cs(a[1]))),this.pokemonCandyOverlayIcon.setVisible(!0),this.pokemonCandyCountText.setText(`x${n.gameData.starterData[R.speciesId].candyCount}`),this.pokemonCandyCountText.setVisible(!0),this.pokemonNumberText.setText(Dn(R.speciesId,4)),this.pokemonNameText.setText(R.name);const i=R&&KE.hasOwnProperty(R.speciesId);for(let r=0;r<4;r++){const L=i?we[KE[R.speciesId][r]]:null,o=L&&n.gameData.starterData[R.speciesId].eggMoves&Math.pow(2,r);this.pokemonEggMoveBgs[r].setFrame(I[L?L.type:I.UNKNOWN].toString().toLowerCase()),this.pokemonEggMoveLabels[r].setText(L&&o?L.name:"???"),!(L&&A.starterDataEntryBeforeUpdate.eggMoves&Math.pow(2,r))&&o&&this.pokemonEggMoveLabels[r].setText("(+) "+L.name)}this.pokemonEggMovesContainer.setVisible(!0),R.speciesId===e.MANAPHY||R.speciesId===e.PHIONE?this.pokemonHatchedIcon.setFrame("manaphy"):this.pokemonHatchedIcon.setFrame(Zi(R))}};N(Jm,"PokemonHatchInfoContainer");let uG=Jm;const $m=class $m extends Phaser.GameObjects.Container{constructor(A,s,R){super(n,A,s);const a=R.pokemon;this.species=a.species;const i=2,r=12,L=a.species,o=a.gender===at.FEMALE,l=a.formIndex,C=a.variant,M=a.shiny,D=n.add.sprite(-i,i,L.getIconAtlasKey(l,M,C));D.setScale(.5),D.setOrigin(0,0),D.setFrame(L.getIconId(o,l,M,C)),this.icon=D,this.checkIconId(o,l,M,C),this.add(this.icon),this.shinyIcon=n.add.image(r,i,"shiny_star_small"),this.shinyIcon.setOrigin(0,0),this.shinyIcon.setScale(.5),this.add(this.shinyIcon);const _=n.add.image(r,i*4,"ha_capsule");_.setOrigin(0,0),_.setScale(.5),this.hiddenAbilityIcon=_,this.add(this.hiddenAbilityIcon);const P=n.add.image(r,i*7,"icon_owned");P.setOrigin(0,0),P.setScale(.5),this.pokeballIcon=P,this.add(this.pokeballIcon);const h=n.add.image(0,i,"icon_egg_move");h.setOrigin(0,0),h.setScale(.5),this.eggMoveIcon=h,this.add(this.eggMoveIcon)}updateAndAnimate(A,s){const R=A.pokemon;this.species=R.species;const i=A.dexEntryBeforeUpdate.caughtAttr,r=BigInt(1<<(R.shiny?1:0)),L=BigInt(1<<R.variant+4),o=(r&i)===BigInt(0)||(L&i)===BigInt(0),l=(BigInt(1<<R.formIndex)*Xe.DEFAULT_FORM&i)===BigInt(0),C=R.gender===at.FEMALE,M=R.formIndex,D=R.variant,_=R.shiny;this.icon.setTexture(this.species.getIconAtlasKey(M,_,D)),this.icon.setFrame(this.species.getIconId(C,M,_,D)),this.checkIconId(C,M,_,D),this.shinyIcon.setVisible(R.shiny),this.shinyIcon.setTint(yE(R.variant)),this.eggMoveIcon.setVisible(A.eggMoveUnlocked),this.hiddenAbilityIcon.setVisible(R.abilityIndex===2),this.pokeballIcon.setVisible(!i||l),!i||o||l?s.addOrUpdate(this.icon,eR.PASSIVE):s.addOrUpdate(this.icon,eR.NONE)}checkIconId(A,s,R,a){this.icon.frame.name!==this.species.getIconId(A,s,R,a)&&(console.log(`${this.species.name}'s variant icon does not exist. Replacing with default.`),this.icon.setTexture(this.species.getIconAtlasKey(s,!1,a)),this.icon.setFrame(this.species.getIconId(A,s,!1,a)))}};N($m,"HatchedPokemonContainer");let DG=$m;const Z0=112,X0=9,Tl=9,NI=11,cL=18,zm=class zm extends vs{constructor(){super(Ie.EGG_HATCH_SUMMARY),this.eventTarget=new EventTarget}setup(){const A=this.getUi();this.summaryContainer=n.add.container(0,-n.game.canvas.height/6),this.summaryContainer.setVisible(!1),A.add(this.summaryContainer),this.eggHatchContainer=n.add.container(0,-n.game.canvas.height/6),this.eggHatchContainer.setVisible(!1),A.add(this.eggHatchContainer),this.iconAnimHandler=new cr,this.iconAnimHandler.setup(),this.eggHatchBg=n.add.image(0,0,"egg_summary_bg"),this.eggHatchBg.setOrigin(0,0),this.eggHatchContainer.add(this.eggHatchBg),this.cursorObj=n.add.image(0,0,"select_cursor"),this.cursorObj.setOrigin(0,0),this.summaryContainer.add(this.cursorObj),this.pokemonContainers=[],this.pokemonIconsContainer=n.add.container(Z0,X0),this.summaryContainer.add(this.pokemonIconsContainer),this.infoContainer=new uG(this.summaryContainer),this.infoContainer.setup(),this.infoContainer.changeToEggSummaryLayout(),this.infoContainer.setVisible(!0),this.summaryContainer.add(this.infoContainer);const s=new ZI(Z0+NI*cL,X0+3,4,n.game.canvas.height/6-20,Tl);this.summaryContainer.add(s),this.scrollGridHandler=new ZC(this,Tl,NI).withScrollBar(s).withUpdateGridCallBack(()=>this.updatePokemonIcons()).withUpdateSingleElementCallback(R=>this.infoContainer.showHatchInfo(this.eggHatchData[R])),this.cursor=-1}clear(){super.clear(),this.scrollGridHandler.reset(),this.cursor=-1,this.summaryContainer.setVisible(!1),this.pokemonIconsContainer.removeAll(!0),this.pokemonContainers=[],this.eggHatchBg.setVisible(!1),this.getUi().hideTooltip();const A=n.getActiveKeys();Object.keys(n.anims.anims.entries).forEach(a=>{a.startsWith("pkmn__")&&!A.includes(a)&&n.anims.remove(a)}),Object.keys(n.cache.audio.entries.entries).forEach(a=>{a.startsWith("cry/")&&!A.includes(a)&&delete n.cache.audio.entries.entries[a]}),this.eggHatchData.length=0,this.iconAnimHandler.removeAll()}show(A){super.show(A),A.length>=1&&(this.eggHatchData=A[0].sort(N(function(a,i){const r=a.pokemon.species,L=i.pokemon.species;return Zi(r)<Zi(L)?-1:Zi(r)>Zi(L)?1:r.speciesId<L.speciesId?-1:r.speciesId>L.speciesId?1:0},"sortHatchData"))),this.getUi().bringToTop(this.summaryContainer),this.summaryContainer.setVisible(!0),this.eggHatchContainer.setVisible(!0),this.eggHatchBg.setVisible(!0),this.infoContainer.hideDisplayPokemon(),this.scrollGridHandler.setTotalElements(this.eggHatchData.length),this.updatePokemonIcons(),this.setCursor(0),n.playSoundWithoutBgm("evolution_fanfare");const s=n.eggSkipPreference===2?2e3:1e3;return this.blockExit=!0,n.time.delayedCall(s,()=>this.blockExit=!1),!0}updatePokemonIcons(){const A=this.scrollGridHandler.getItemOffset(),s=Math.min(Tl*NI,this.eggHatchData.length-A);for(let R=0;R<Tl*NI;R++){const a=this.eggHatchData[R+A];let i=this.pokemonContainers[R];if(R<s){if(!i){const r=R%NI*cL,L=Math.floor(R/NI)*cL;i=new DG(r,L,a).setVisible(!1),this.pokemonContainers.push(i),this.pokemonIconsContainer.add(i)}i.setVisible(!0),i.updateAndAnimate(a,this.iconAnimHandler)}else i&&(i.setVisible(!1),this.iconAnimHandler.addOrUpdate(i.icon,eR.NONE))}}processInput(A){const s=this.getUi();let R=!1,a=!1;if(A===k.CANCEL)if(this.blockExit)a=!0;else{const i=n.getCurrentPhase();i instanceof PC&&i.end(),R=!0}else this.scrollGridHandler.processInput(A);return R?s.playSelect():a&&s.playError(),R||a}setCursor(A){let s=!1;const R=this.cursor;return s=super.setCursor(A),s&&(this.cursorObj.setPosition(Z0-1+cL*(A%NI),X0+1+cL*Math.floor(A/NI)),R>-1&&this.iconAnimHandler.addOrUpdate(this.pokemonContainers[R].icon,eR.NONE),this.iconAnimHandler.addOrUpdate(this.pokemonContainers[A].icon,eR.ACTIVE),this.infoContainer.showHatchInfo(this.eggHatchData[A+this.scrollGridHandler.getItemOffset()])),s}};N(zm,"EggSummaryUiHandler");let MG=zm;const qm=class qm extends Ii{constructor(A){super(A)}setup(){super.setup();const A=N((a,i,r)=>Object.keys(a??{}).map((L,o)=>{const l=Object.values(a)[o];if(typeof l=="object"&&!ve(l))return A(l,i??L,i?r?[...r,L]:[L]:void 0).filter(C=>C.length>0);if(typeof l=="string"||ve(l))return r?`${i}:${r.map(C=>C).join(".")}.${L}`:`${i}:${L}`}).filter(L=>L),"flattenKeys"),R=A(u.getDataByLanguage(String(u.resolvedLanguage))).filter(a=>a.length>0).flat(1/0).map(String);this.keys=R}getModalTitle(A){return"Test Dialogue"}getWidth(A){return 300}getMargin(A){return[0,0,48,0]}getButtonLabels(A){return["Check","Cancel"]}getReadableErrorMessage(A){const s=A==null?void 0:A.indexOf(":");return s>0&&(A=A.slice(0,s)),super.getReadableErrorMessage(A)}getInputFieldConfigs(){return[{label:"Dialogue"}]}show(A){const s=this.getUi(),R=!!this.getModalTitle();this.updateFields(this.getInputFieldConfigs(),R),this.updateContainer(A[0]);const a=this.inputs[0];if(a.setMaxLength(255),a.on("keydown",(i,r)=>{["escape","space"].some(L=>L===r.key.toLowerCase()||L===r.code.toLowerCase())&&s.getMode()===Ie.AUTO_COMPLETE&&(i.on("blur",()=>i.node.focus(),{once:!0}),s.revertMode())}),a.on("textchange",(i,r)=>{s.getMode()===Ie.AUTO_COMPLETE&&s.revertMode();let L=[];const o=i.text.split(" "),l=this.keys.filter(C=>C.toLowerCase().includes(o[o.length-1].toLowerCase()));if(i.text!==""&&l.length>0&&(L=l.slice(0).map(C=>({label:C,handler:N(()=>{var M;if(!ve(r.data)||((M=r.inputType)==null?void 0:M.toLowerCase())==="deletecontentbackward"){const D=i.text.split(" ");D[D.length-1]=C,i.setText(D.join(" "))}return s.revertMode(),!0},"handler")}))),L.length>0){const C={options:L,maxOptions:5,modalContainer:this.modalContainer};s.setOverlayMode(Ie.AUTO_COMPLETE,C)}}),super.show(A)){const i=A[0];return this.inputs[0].resize(1150,116),this.inputContainers[0].list[0].width=200,A[1]&&typeof A[1].getNameToRender=="function"?this.inputs[0].text=A[1].getNameToRender():this.inputs[0].text=A[1],this.submitAction=r=>{if(s.getMode()===Ie.TEST_DIALOGUE){this.sanitizeInputs();const L=btoa(unescape(encodeURIComponent(this.inputs[0].text)));return i.buttonActions[0](L),!0}return!1},!0}return!1}};N(qm,"TestDialogueUiHandler");let _G=qm;const jm=class jm extends sS{constructor(A=Ie.OPTION_SELECT){super(A)}getWindowWidth(){return 64}show(A){if(A[0].modalContainer){const{modalContainer:s}=A[0],R=super.show(A);return this.modalContainer=s,this.setupOptions(),R}return!1}setupOptions(){super.setupOptions(),this.modalContainer&&(this.optionSelectContainer.setSize(this.optionSelectContainer.height,Math.max(this.optionSelectText.displayWidth+24,this.getWindowWidth())),this.optionSelectContainer.setPositionRelative(this.modalContainer,this.optionSelectBg.width,this.optionSelectBg.height+50))}processInput(A){return A!==k.CANCEL&&A!==k.ACTION?super.processInput(A):!1}};N(jm,"AutoCompleteUiHandler");let PG=jm;const eF=class eF extends Vs{constructor(){super(Ie.MYSTERY_ENCOUNTER),this.optionScrollTweens=new Array(4).fill(null),this.showDexProgress=!1,this.encounterOptions=[],this.viewPartyIndex=0,this.viewPartyXPosition=0,this.blockInput=!0}setup(){const A=this.getUi();this.cursorContainer=n.add.container(18,-38.7),this.cursorContainer.setVisible(!1),A.add(this.cursorContainer),this.optionsContainer=n.add.container(12,-38.7),this.optionsContainer.setVisible(!1),A.add(this.optionsContainer),this.dexProgressContainer=n.add.container(214,-43),this.dexProgressContainer.setVisible(!1),A.add(this.dexProgressContainer),this.descriptionContainer=n.add.container(0,-152),this.descriptionContainer.setVisible(!1),A.add(this.descriptionContainer),this.tooltipContainer=n.add.container(210,-48),this.tooltipContainer.setVisible(!1),A.add(this.tooltipContainer),this.setCursor(this.getCursor()),this.descriptionWindow=Gt(0,0,150,105,!1,!1,0,0,sO.THIN),this.descriptionContainer.add(this.descriptionWindow),this.tooltipWindow=Gt(0,0,110,48,!1,!1,0,0,sO.THIN),this.tooltipContainer.add(this.tooltipWindow),this.dexProgressWindow=Gt(0,0,24,28,!1,!1,0,0,sO.THIN),this.dexProgressContainer.add(this.dexProgressWindow),this.rarityBall=n.add.sprite(141,9,"pb"),this.rarityBall.setScale(.75),this.descriptionContainer.add(this.rarityBall);const s=n.add.sprite(12,10,"encounter_radar");s.setScale(.8),this.dexProgressContainer.add(s),this.dexProgressContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,24,28),Phaser.Geom.Rectangle.Contains)}show(A){var r,L,o,l;super.show(A),this.overrideSettings=A[0]??{};const s=ve((r=this.overrideSettings)==null?void 0:r.hideDescription)?!0:!this.overrideSettings.hideDescription,R=ve((L=this.overrideSettings)==null?void 0:L.slideInDescription)?!0:this.overrideSettings.slideInDescription,a=((o=this.overrideSettings)==null?void 0:o.startingCursorIndex)??0;this.cursorContainer.setVisible(!0),this.descriptionContainer.setVisible(s),this.optionsContainer.setVisible(!0),this.dexProgressContainer.setVisible(!0),this.displayEncounterOptions(R);const i=this.getCursor();return i===(((l=this.optionsContainer)==null?void 0:l.length)||0)-1?this.setCursor(i):this.setCursor(a),this.blockInput&&setTimeout(()=>{this.unblockInput()},1e3),this.displayOptionTooltip(),!0}processInput(A){var i;const s=this.getUi();let R=!1;const a=this.getCursor();if(A===k.CANCEL||A===k.ACTION){if(A===k.ACTION){const r=this.encounterOptions[a];if(a===this.viewPartyIndex){R=!0;const L={...this.overrideSettings,slideInDescription:!1};n.ui.setMode(Ie.PARTY,Ps.CHECK,-1,()=>{n.ui.setMode(Ie.MYSTERY_ENCOUNTER,L),setTimeout(()=>{this.setCursor(this.viewPartyIndex),this.unblockInput()},300)})}else this.blockInput||!this.optionsMeetsReqs[a]&&(r.optionMode===ct.DISABLED_OR_DEFAULT||r.optionMode===ct.DISABLED_OR_SPECIAL)?R=!1:n.getCurrentPhase().handleOptionSelect(r,a)?R=!0:s.playError()}}else{switch((i=this.optionsContainer.getAll())==null?void 0:i.length){default:case 3:R=this.handleTwoOptionMoveInput(A);break;case 4:R=this.handleThreeOptionMoveInput(A);break;case 5:R=this.handleFourOptionMoveInput(A);break}this.displayOptionTooltip()}return R&&s.playSelect(),R}handleTwoOptionMoveInput(A){let s=!1;const R=this.getCursor();switch(A){case k.UP:R<this.viewPartyIndex&&(s=this.setCursor(this.viewPartyIndex));break;case k.DOWN:R===this.viewPartyIndex&&(s=this.setCursor(1));break;case k.LEFT:R>0&&(s=this.setCursor(R-1));break;case k.RIGHT:R<this.viewPartyIndex&&(s=this.setCursor(R+1));break}return s}handleThreeOptionMoveInput(A){let s=!1;const R=this.getCursor();switch(A){case k.UP:R===2?s=this.setCursor(R-2):s=this.setCursor(this.viewPartyIndex);break;case k.DOWN:R===this.viewPartyIndex?s=this.setCursor(1):s=this.setCursor(2);break;case k.LEFT:R===this.viewPartyIndex?s=this.setCursor(1):R===1&&(s=this.setCursor(R-1));break;case k.RIGHT:R===1?s=this.setCursor(this.viewPartyIndex):R<1&&(s=this.setCursor(R+1));break}return s}handleFourOptionMoveInput(A){let s=!1;const R=this.getCursor();switch(A){case k.UP:R>=2&&R!==this.viewPartyIndex?s=this.setCursor(R-2):s=this.setCursor(this.viewPartyIndex);break;case k.DOWN:R<=1?s=this.setCursor(R+2):R===this.viewPartyIndex&&(s=this.setCursor(1));break;case k.LEFT:R===this.viewPartyIndex?s=this.setCursor(1):R%2===1&&(s=this.setCursor(R-1));break;case k.RIGHT:R===1?s=this.setCursor(this.viewPartyIndex):R%2===0&&R!==this.viewPartyIndex&&(s=this.setCursor(R+1));break}return s}unblockInput(){if(this.blockInput){this.blockInput=!1;for(let A=0;A<this.optionsContainer.length-1;A++){const s=this.encounterOptions[A].optionMode;!this.optionsMeetsReqs[A]&&(s===ct.DISABLED_OR_DEFAULT||s===ct.DISABLED_OR_SPECIAL)||this.optionsContainer.getAt(A).setAlpha(1)}}}getCursor(){return this.cursor?this.cursor:0}setCursor(A){var a,i,r,L;const R=this.getCursor()!==A;return R&&(this.cursor=A),this.viewPartyIndex=((a=this.optionsContainer.getAll())==null?void 0:a.length)-1,this.cursorObj||(this.cursorObj=n.add.image(0,0,"cursor"),this.cursorContainer.add(this.cursorObj)),A===this.viewPartyIndex?this.cursorObj.setPosition(this.viewPartyXPosition,-17):((i=this.optionsContainer.getAll())==null?void 0:i.length)===3?this.cursorObj.setPosition(-10.5+(A%2===1?100:0),15):((r=this.optionsContainer.getAll())==null?void 0:r.length)===4?this.cursorObj.setPosition(-10.5+(A%2===1?100:0),7+(A>1?16:0)):((L=this.optionsContainer.getAll())==null?void 0:L.length)===5&&this.cursorObj.setPosition(-10.5+(A%2===1?100:0),7+(A>1?16:0)),R}displayEncounterOptions(A=!0){var h,H,d,f;this.getUi().clearText();const s=n.currentBattle.mysteryEncounter;this.encounterOptions=((h=this.overrideSettings)==null?void 0:h.overrideOptions)??s.options,this.optionsMeetsReqs=[];const R=mA((H=s.dialogue.encounterOptionsDialogue)==null?void 0:H.title,Q.TOOLTIP_TITLE),a=mA((d=s.dialogue.encounterOptionsDialogue)==null?void 0:d.description,Q.TOOLTIP_CONTENT),i=mA((f=s.dialogue.encounterOptionsDialogue)==null?void 0:f.query,Q.TOOLTIP_CONTENT);this.optionsContainer.removeAll(!0);for(let B=0;B<this.encounterOptions.length;B++){const F=this.encounterOptions[B];let W;switch(this.encounterOptions.length){default:case 2:W=wE(B%2===0?0:100,8,"-",Q.WINDOW,{fontSize:"80px",lineSpacing:-8});break;case 3:W=wE(B%2===0?0:100,B<2?0:16,"-",Q.WINDOW,{fontSize:"80px",lineSpacing:-8});break;case 4:W=wE(B%2===0?0:100,B<2?0:16,"-",Q.WINDOW,{fontSize:"80px",lineSpacing:-8});break}this.optionsMeetsReqs.push(F.meetsRequirements());const b=F.dialogue,x=!this.optionsMeetsReqs[B]&&b.disabledButtonLabel?b.disabledButtonLabel:b.buttonLabel;let $;F.hasRequirements()&&this.optionsMeetsReqs[B]&&(F.optionMode===ct.DEFAULT_OR_SPECIAL||F.optionMode===ct.DISABLED_OR_SPECIAL)?$=mA(x,Q.ME_OPTION_SPECIAL):$=mA(x,b.style?b.style:Q.ME_OPTION_DEFAULT),$&&W.setText($),!this.optionsMeetsReqs[B]&&(F.optionMode===ct.DISABLED_OR_DEFAULT||F.optionMode===ct.DISABLED_OR_SPECIAL)&&W.setAlpha(.5),this.blockInput&&W.setAlpha(.5);const j=90,z=n.make.graphics({});z.setScale(6),z.fillStyle(16777215),z.beginPath(),z.fillRect(W.x+11,W.y+140,j,18);const se=z.createGeometryMask();W.setMask(se);const Z=W.displayWidth,q=this.optionScrollTweens[B];q&&(q.remove(),this.optionScrollTweens[B]=null),Z>j&&(this.optionScrollTweens[B]=n.tweens.add({targets:W,delay:st(2e3),loop:-1,hold:st(2e3),duration:st((Z-j)/15*2e3),x:`-=${Z-j}`})),this.optionsContainer.add(W)}const r=wE(n.game.canvas.width/6,-24,NO(u.t("mysteryEncounterMessages:view_party_button"),Q.PARTY),Q.PARTY);this.optionsContainer.add(r),r.x-=r.displayWidth+16,this.viewPartyXPosition=r.x-10;const L=wE(0,0,R??"",Q.TOOLTIP_TITLE,{wordWrap:{width:750},align:"center",lineSpacing:-8});this.descriptionContainer.add(L),L.setPosition(72-L.displayWidth/2,5.5);const o=s.encounterTier===wt.COMMON?0:s.encounterTier===wt.GREAT?1:s.encounterTier===wt.ULTRA?2:s.encounterTier===wt.ROGUE?3:4,l=DO(o);this.rarityBall.setTexture("pb",l);const C=wE(6,25,a??"",Q.TOOLTIP_CONTENT,{wordWrap:{width:830}}),M=n.make.graphics({});M.setScale(6),M.fillStyle(16777215),M.beginPath(),M.fillRect(6,53,206,57);const D=M.createGeometryMask();C.setMask(D);const _=Math.floor(C.displayHeight/10);this.descriptionScrollTween&&(this.descriptionScrollTween.remove(),this.descriptionScrollTween=void 0),_>6&&(this.descriptionScrollTween=n.tweens.add({targets:C,delay:st(2e3),loop:-1,hold:st(2e3),duration:st((_-6)*2e3),y:`-=${10*(_-6)}`})),this.descriptionContainer.add(C);const P=wE(0,0,i??"",Q.TOOLTIP_CONTENT,{wordWrap:{width:830}});this.descriptionContainer.add(P),P.setPosition(75-P.displayWidth/2,90),A&&(this.descriptionContainer.x-=150,n.tweens.add({targets:this.descriptionContainer,x:"+=150",ease:"Sine.easeInOut",duration:1e3}))}displayOptionTooltip(){const A=this.getCursor();if(this.tooltipContainer.length>1&&this.tooltipContainer.removeBetween(1,this.tooltipContainer.length,!0),this.tooltipContainer.setVisible(!0),ve(A)||A>this.optionsContainer.length-2){this.showHideDexProgress(!1);return}let s;const R=this.encounterOptions[A],a=R.dialogue;if(!this.optionsMeetsReqs[A]&&(R.optionMode===ct.DISABLED_OR_DEFAULT||R.optionMode===ct.DISABLED_OR_SPECIAL)&&a.disabledButtonTooltip?s=mA(a.disabledButtonTooltip,Q.TOOLTIP_CONTENT):s=mA(a.buttonTooltip,Q.TOOLTIP_CONTENT),s){const i=[...s.match(new RegExp(/\[color=[^\[]*\]\[shadow=[^\[]*\]/i))][0];s=s.replace(/(\(\+\)[^\(\[]*)/gi,r=>"[/color][/shadow]"+NO(r,Q.SUMMARY_GREEN)+"[/color][/shadow]"+i),s=s.replace(/(\(\-\)[^\(\[]*)/gi,r=>"[/color][/shadow]"+NO(r,Q.SUMMARY_BLUE)+"[/color][/shadow]"+i)}if(s){const i=wE(6,7,s,Q.TOOLTIP_CONTENT,{wordWrap:{width:600},fontSize:"72px"});this.tooltipContainer.add(i);const r=n.make.graphics({});r.setScale(6),r.fillStyle(16777215),r.beginPath(),r.fillRect(this.tooltipContainer.x,this.tooltipContainer.y+188.5,150,32);const L=r.createGeometryMask();i.setMask(L);const o=Math.floor(i.displayHeight/11.2);this.tooltipScrollTween&&(this.tooltipScrollTween.remove(),this.tooltipScrollTween=void 0),o>3&&(this.tooltipScrollTween=n.tweens.add({targets:i,delay:st(1200),loop:-1,hold:st(1200),duration:st((o-3)*1200),y:`-=${11.2*(o-3)}`}))}R.hasDexProgress&&!this.showDexProgress?this.showHideDexProgress(!0):R.hasDexProgress||this.showHideDexProgress(!1)}clear(){super.clear(),this.overrideSettings=void 0,this.optionsContainer.setVisible(!1),this.optionsContainer.removeAll(!0),this.dexProgressContainer.setVisible(!1),this.descriptionContainer.setVisible(!1),this.tooltipContainer.setVisible(!1),this.descriptionContainer.removeBetween(2,this.descriptionContainer.length,!0),this.getUi().getMessageHandler().clearText(),this.eraseCursor()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=void 0}showHideDexProgress(A){A&&!this.showDexProgress?(this.showDexProgress=!0,n.tweens.killTweensOf(this.dexProgressContainer),n.tweens.add({targets:this.dexProgressContainer,y:-63,ease:"Sine.easeInOut",duration:750,onComplete:N(()=>{this.dexProgressContainer.on("pointerover",()=>{n.ui.showTooltip("",u.t("mysteryEncounterMessages:affects_pokedex"),!0)}),this.dexProgressContainer.on("pointerout",()=>{n.ui.hideTooltip()})},"onComplete")})):!A&&this.showDexProgress&&(this.showDexProgress=!1,n.tweens.killTweensOf(this.dexProgressContainer),n.tweens.add({targets:this.dexProgressContainer,y:-43,ease:"Sine.easeInOut",duration:750,onComplete:N(()=>{this.dexProgressContainer.off("pointerover"),this.dexProgressContainer.off("pointerout")},"onComplete")}))}};N(eF,"MysteryEncounterUiHandler");let GG=eF;var Ie=(E=>(E[E.MESSAGE=0]="MESSAGE",E[E.TITLE=1]="TITLE",E[E.COMMAND=2]="COMMAND",E[E.FIGHT=3]="FIGHT",E[E.BALL=4]="BALL",E[E.TARGET_SELECT=5]="TARGET_SELECT",E[E.MODIFIER_SELECT=6]="MODIFIER_SELECT",E[E.SAVE_SLOT=7]="SAVE_SLOT",E[E.PARTY=8]="PARTY",E[E.SUMMARY=9]="SUMMARY",E[E.STARTER_SELECT=10]="STARTER_SELECT",E[E.EVOLUTION_SCENE=11]="EVOLUTION_SCENE",E[E.EGG_HATCH_SCENE=12]="EGG_HATCH_SCENE",E[E.EGG_HATCH_SUMMARY=13]="EGG_HATCH_SUMMARY",E[E.CONFIRM=14]="CONFIRM",E[E.OPTION_SELECT=15]="OPTION_SELECT",E[E.MENU=16]="MENU",E[E.MENU_OPTION_SELECT=17]="MENU_OPTION_SELECT",E[E.SETTINGS=18]="SETTINGS",E[E.SETTINGS_DISPLAY=19]="SETTINGS_DISPLAY",E[E.SETTINGS_AUDIO=20]="SETTINGS_AUDIO",E[E.SETTINGS_GAMEPAD=21]="SETTINGS_GAMEPAD",E[E.GAMEPAD_BINDING=22]="GAMEPAD_BINDING",E[E.SETTINGS_KEYBOARD=23]="SETTINGS_KEYBOARD",E[E.KEYBOARD_BINDING=24]="KEYBOARD_BINDING",E[E.ACHIEVEMENTS=25]="ACHIEVEMENTS",E[E.GAME_STATS=26]="GAME_STATS",E[E.EGG_LIST=27]="EGG_LIST",E[E.EGG_GACHA=28]="EGG_GACHA",E[E.LOGIN_FORM=29]="LOGIN_FORM",E[E.REGISTRATION_FORM=30]="REGISTRATION_FORM",E[E.LOADING=31]="LOADING",E[E.SESSION_RELOAD=32]="SESSION_RELOAD",E[E.UNAVAILABLE=33]="UNAVAILABLE",E[E.CHALLENGE_SELECT=34]="CHALLENGE_SELECT",E[E.RENAME_POKEMON=35]="RENAME_POKEMON",E[E.RUN_HISTORY=36]="RUN_HISTORY",E[E.RUN_INFO=37]="RUN_INFO",E[E.TEST_DIALOGUE=38]="TEST_DIALOGUE",E[E.AUTO_COMPLETE=39]="AUTO_COMPLETE",E[E.ADMIN=40]="ADMIN",E[E.MYSTERY_ENCOUNTER=41]="MYSTERY_ENCOUNTER",E))(Ie||{});const N6=[7,8,9,10,11,12,27,28,34,36],Sl=[1,14,15,16,17,22,24,18,20,19,21,23,25,26,29,30,31,32,33,35,38,39,40,41,37],tF=class tF extends Phaser.GameObjects.Container{constructor(){super(n,0,n.game.canvas.height/6),this.mode=0,this.modeChain=[],this.handlers=[new g_,new LG,new vP,new VP,new xP,new QP,new nP,new UP,new VE,new GP,new oS,new mC,new EG,new MG,new DC,new CS,new tG,new CS(17),new VC,new JC,new $C,new kC,new oG,new QC,new CG,new AG,new aG,new sG,new RG,new OG,new nG,new IG,new SG,new TG,new zP,new UG,new tP,new lC,new _G(38),new PG,new eG,new GG]}setup(){this.setName(`ui-${Ie[this.mode]}`);for(const A of this.handlers)A.setup();this.overlay=n.add.rectangle(0,0,n.game.canvas.width/6,n.game.canvas.height/6,0),this.overlay.setName("rect-ui-overlay"),this.overlay.setOrigin(0,0),n.uiContainer.add(this.overlay),this.overlay.setVisible(!1),this.setupTooltip(),this.achvBar=new qP,this.achvBar.setup(),n.uiContainer.add(this.achvBar),this.savingIcon=new NG,this.savingIcon.setup(),n.uiContainer.add(this.savingIcon)}setupTooltip(){this.tooltipContainer=n.add.container(0,0),this.tooltipContainer.setName("tooltip"),this.tooltipContainer.setVisible(!1),this.tooltipBg=Gt(0,0,128,31),this.tooltipBg.setName("window-tooltip-bg"),this.tooltipBg.setOrigin(0,0),this.tooltipTitle=le(64,4,"",Q.TOOLTIP_TITLE),this.tooltipTitle.setName("text-tooltip-title"),this.tooltipTitle.setOrigin(.5,0),this.tooltipContent=le(6,16,"",Q.TOOLTIP_CONTENT),this.tooltipContent.setName("text-tooltip-content"),this.tooltipContent.setWordWrapWidth(850),this.tooltipContainer.add(this.tooltipBg),this.tooltipContainer.add(this.tooltipTitle),this.tooltipContainer.add(this.tooltipContent),n.uiContainer.add(this.tooltipContainer)}getHandler(){return this.handlers[this.mode]}getMessageHandler(){return this.handlers[0]}processInfoButton(A){var s,R;return this.overlayActive?!1:[14,2,3,0].includes(this.mode)?((s=n)==null||s.processInfoButton(A),!0):((R=n)==null||R.processInfoButton(!1),!0)}processInput(A){if(this.overlayActive)return!1;const s=this.getHandler();return s instanceof qn&&s.tutorialActive?s.processTutorialInput(A):s.processInput(A)}showTextPromise(A,s=0,R=!0,a){return new Promise(i=>{this.showText(A??"",null,()=>i(),s,R,a)})}showText(A,s,R,a,i,r){if(i&&A.indexOf("$")>-1){const L=A.split(/\$/g).map(l=>l.trim());let o=N(()=>R&&R(),"showMessageAndCallback");for(let l=L.length-1;l>=0;l--){const C=o;o=N(()=>this.showText(L[l],null,C,null,!0),"showMessageAndCallback")}o()}else{const L=this.getHandler();L instanceof vs?L.showText(A,s,R,a,i,r):this.getMessageHandler().showText(A,s,R,a,i,r)}}showDialogue(A,s,R=0,a,i,r){let L=!1,o=A;const l=n.gameData.gender??Vt.UNSET,C=Vt[l].toLowerCase();if(u.exists(A)){const D=A;if(L=!0,o=u.t(D,{context:C}),this.shouldSkipDialogue(D)){console.log(`Dialogue ${D} skipped`),a();return}}let M=N(()=>{L&&n.gameData.saveSeenDialogue(A),a()},"showMessageAndCallback");if(o.indexOf("$")>-1){const D=o.split(/\$/g).map(_=>_.trim());for(let _=D.length-1;_>=0;_--){const P=M;M=N(()=>this.showDialogue(D[_],s,null,P),"showMessageAndCallback")}M()}else{const D=this.getHandler();D instanceof vs?D.showDialogue(o,s,R,M,i,!0,r):this.getMessageHandler().showDialogue(o,s,R,M,i,!0,r)}}shouldSkipDialogue(A){return!!(u.exists(A)&&n.skipSeenDialogues&&n.gameData.getSeenDialogues()[A]===!0)}getTooltip(){return{visible:this.tooltipContainer.visible,title:this.tooltipTitle.text,content:this.tooltipContent.text}}showTooltip(A,s,R){this.tooltipContainer.setVisible(!0),this.editTooltip(A,s),R?n.uiContainer.moveAbove(this.tooltipContainer,this):n.uiContainer.moveBelow(this.tooltipContainer,this)}editTooltip(A,s){this.tooltipTitle.setText(A||"");const R=this.tooltipContent.runWordWrap(s);this.tooltipContent.setText(R),this.tooltipContent.y=A?16:4,this.tooltipBg.width=Math.min(Math.max(this.tooltipTitle.displayWidth,this.tooltipContent.displayWidth)+12,838),this.tooltipBg.height=(A?31:19)+10.5*(R.split(`
`).length-1),this.tooltipTitle.x=this.tooltipBg.width/2}hideTooltip(){this.tooltipContainer.setVisible(!1),this.tooltipTitle.clearTint()}update(){if(this.tooltipContainer.visible){const A=n.inputMethod==="touch",s=n.game.input.activePointer.x,R=n.game.input.activePointer.y,a=this.tooltipBg.width,i=this.tooltipBg.height,r=2;let L=A?r:s/6+r,o=A?r:R/6+r;A?s<=n.game.canvas.width/2&&R<=n.game.canvas.height/2&&(L=n.game.canvas.width/6-a-r):(L+a+r>n.game.canvas.width/6&&(L=Math.max(r,s/6-a-r)),o+i+r>n.game.canvas.height/6&&(o=Math.max(r,R/6-i-r))),this.tooltipContainer.setPosition(L,o)}}clearText(){const A=this.getHandler();A instanceof vs?A.clearText():this.getMessageHandler().clearText()}setCursor(A){const s=this.getHandler().setCursor(A);return s&&this.playSelect(),s}playSelect(){n.playSound("ui/select")}playError(){n.playSound("ui/error")}fadeOut(A){return new Promise(s=>{if(this.overlayActive)return s();this.overlayActive=!0,this.overlay.setAlpha(0),this.overlay.setVisible(!0),n.tweens.add({targets:this.overlay,alpha:1,duration:A,ease:"Sine.easeOut",onComplete:N(()=>s(),"onComplete")})})}fadeIn(A){return new Promise(s=>{if(!this.overlayActive)return s();n.tweens.add({targets:this.overlay,alpha:0,duration:A,ease:"Sine.easeIn",onComplete:N(()=>{this.overlay.setVisible(!1),s()},"onComplete")}),this.overlayActive=!1})}setModeInternal(A,s,R,a,i){return new Promise(r=>{if(this.mode===A&&!R){r();return}const L=N(()=>{if(this.mode!==A){s&&this.getHandler().clear(),a&&this.mode&&!s&&(this.modeChain.push(this.mode),n.updateGameInfo()),this.mode=A;const o=document==null?void 0:document.getElementById("touchControls");o&&(o.dataset.uiMode=Ie[A]),this.getHandler().show(i)}r()},"doSetMode");!a&&(N6.indexOf(this.mode)>-1||N6.indexOf(A)>-1)&&Sl.indexOf(this.mode)===-1&&Sl.indexOf(A)===-1||a&&Sl.indexOf(A)===-1?this.fadeOut(250).then(()=>{n.time.delayedCall(100,()=>{L(),this.fadeIn(250)})}):L()})}getMode(){return this.mode}setMode(A,...s){return this.setModeInternal(A,!0,!1,!1,s)}setModeForceTransition(A,...s){return this.setModeInternal(A,!0,!0,!1,s)}setModeWithoutClear(A,...s){return this.setModeInternal(A,!1,!1,!1,s)}setOverlayMode(A,...s){return this.setModeInternal(A,!1,!1,!0,s)}resetModeChain(){this.modeChain=[],n.updateGameInfo()}revertMode(){return new Promise(A=>{var a;if(!((a=this==null?void 0:this.modeChain)!=null&&a.length))return A(!1);const s=this.mode,R=N(()=>{this.getHandler().clear(),this.mode=this.modeChain.pop(),n.updateGameInfo();const i=document.getElementById("touchControls");i&&(i.dataset.uiMode=Ie[this.mode]),A(!0)},"doRevertMode");Sl.indexOf(s)===-1?this.fadeOut(250).then(()=>{n.time.delayedCall(100,()=>{R(),this.fadeIn(250)})}):R()})}revertModes(){return new Promise(A=>{var s;if(!((s=this==null?void 0:this.modeChain)!=null&&s.length))return A();this.revertMode().then(R=>Pr(R,this.revertModes).then(()=>A()))})}getModeChain(){return this.modeChain}getGamepadType(){return n.inputMethod==="gamepad"?n.inputController.getConfig(n.inputController.selectedDevice[IA.GAMEPAD]).padType:n.inputMethod}freeUIData(){this.handlers.forEach(A=>A.destroy()),this.handlers=[],OO.getInstance().clearNavigationMenus()}};N(tF,"UI");let cG=tF;function tJ(){const E=this,A=N(o=>o instanceof C7?o.value:E.gameSpeed===1?o:Math.ceil(o/=E.gameSpeed),"transformValue"),s=this.time.addEvent;this.time.addEvent=function(o){return!(o instanceof Phaser.Time.TimerEvent)&&o.delay&&(o.delay=A(o.delay)),s.apply(this,[o])};const R=this.tweens.add;this.tweens.add=function(o){return o.loopDelay&&(o.loopDelay=A(o.loopDelay)),o instanceof Phaser.Tweens.TweenChain||(o.duration&&(o.duration=A(o.duration)),o instanceof Phaser.Tweens.Tween||(o.delay&&(o.delay=A(o.delay)),o.repeatDelay&&(o.repeatDelay=A(o.repeatDelay)),o.hold&&(o.hold=A(o.hold)))),R.apply(this,[o])};const a=this.tweens.chain;this.tweens.chain=function(o){return o.tweens&&o.tweens.forEach(l=>{l.duration&&(l.duration=A(l.duration)),l.delay&&(l.delay=A(l.delay)),l.repeatDelay&&(l.repeatDelay=A(l.repeatDelay)),l.loopDelay&&(l.loopDelay=A(l.loopDelay)),l.hold&&(l.hold=A(l.hold))}),a.apply(this,[o])};const i=this.tweens.addCounter;this.tweens.addCounter=function(o){return o.duration&&(o.duration=A(o.duration)),o.delay&&(o.delay=A(o.delay)),o.repeatDelay&&(o.repeatDelay=A(o.repeatDelay)),o.loopDelay&&(o.loopDelay=A(o.loopDelay)),o.hold&&(o.hold=A(o.hold)),i.apply(this,[o])};const r=AO.fadeOut;AO.fadeOut=(o,l,C,M)=>r(n,l,A(C),M);const L=AO.fadeIn;AO.fadeIn=(o,l,C,M,D)=>L(n,l,A(C),M,D)}N(tJ,"initGameSpeed");const AJ=-118,EJ=0,T6=-116,AF=class AF extends Phaser.GameObjects.Container{constructor(){super(n,AJ,T6)}setup(){this.bg=n.add.image(0,0,"ability_bar_left"),this.bg.setOrigin(0,0),this.add(this.bg),this.abilityBarText=le(15,3,"",Q.MESSAGE,{fontSize:"72px"}),this.abilityBarText.setOrigin(0,0),this.abilityBarText.setWordWrapWidth(600,!0),this.add(this.abilityBarText),this.setVisible(!1),this.shown=!1}showAbility(A,s=!1){this.abilityBarText.setText(`${u.t("fightUiHandler:abilityFlyInText",{pokemonName:te(A),passive:s?u.t("fightUiHandler:passive"):"",abilityName:s?A.getPassiveAbility().name:A.getAbility().name})}`),!this.shown&&(n.fieldUI.bringToTop(this),this.y=T6+(n.currentBattle.double?14:0),this.tween=n.tweens.add({targets:this,x:EJ,duration:500,ease:"Sine.easeOut",onComplete:N(()=>{this.tween=null,this.resetAutoHideTimer()},"onComplete")}),this.setVisible(!0),this.shown=!0)}hide(){this.shown&&(this.autoHideTimer&&clearInterval(this.autoHideTimer),this.tween&&this.tween.stop(),this.tween=n.tweens.add({targets:this,x:-91,duration:500,ease:"Sine.easeIn",onComplete:N(()=>{this.tween=null,this.setVisible(!1)},"onComplete")}),this.shown=!1)}resetAutoHideTimer(){this.autoHideTimer&&clearInterval(this.autoHideTimer),this.autoHideTimer=setTimeout(()=>{this.hide(),this.autoHideTimer=null},2500)}};N(AF,"AbilityBar");let hG=AF;const sJ=`
#ifdef GL_FRAGMENT_PRECISION_HIGH
precision highp float;
#else
precision mediump float;
#endif

uniform sampler2D uMainSampler[%count%];

varying vec2 outTexCoord;
varying float outTexId;
varying float outTintEffect;
varying vec4 outTint;

uniform float time;
uniform int ignoreTimeTint;
uniform int isOutside;
uniform vec3 dayTint;
uniform vec3 duskTint;
uniform vec3 nightTint;
uniform vec3 terrainColor;
uniform float terrainColorRatio;

float blendOverlay(float base, float blend) {
	return base<0.5?(2.0*base*blend):(1.0-2.0*(1.0-base)*(1.0-blend));
}

vec3 blendOverlay(vec3 base, vec3 blend) {
	return vec3(blendOverlay(base.r,blend.r),blendOverlay(base.g,blend.g),blendOverlay(base.b,blend.b));
}

vec3 blendHardLight(vec3 base, vec3 blend) {
	return blendOverlay(blend, base);
}

float hue2rgb(float f1, float f2, float hue) {
	if (hue < 0.0)
		hue += 1.0;
	else if (hue > 1.0)
		hue -= 1.0;
	float res;
	if ((6.0 * hue) < 1.0)
		res = f1 + (f2 - f1) * 6.0 * hue;
	else if ((2.0 * hue) < 1.0)
		res = f2;
	else if ((3.0 * hue) < 2.0)
		res = f1 + (f2 - f1) * ((2.0 / 3.0) - hue) * 6.0;
	else
		res = f1;
	return res;
}

vec3 rgb2hsl(vec3 color) {
	vec3 hsl;
	
	float fmin = min(min(color.r, color.g), color.b);
	float fmax = max(max(color.r, color.g), color.b);
	float delta = fmax - fmin;

	hsl.z = (fmax + fmin) / 2.0;

	if (delta == 0.0) {
		hsl.x = 0.0;
		hsl.y = 0.0;
	} else {
		if (hsl.z < 0.5)
			hsl.y = delta / (fmax + fmin);
		else
			hsl.y = delta / (2.0 - fmax - fmin);
		
		float deltaR = (((fmax - color.r) / 6.0) + (delta / 2.0)) / delta;
		float deltaG = (((fmax - color.g) / 6.0) + (delta / 2.0)) / delta;
		float deltaB = (((fmax - color.b) / 6.0) + (delta / 2.0)) / delta;

		if (color.r == fmax )
			hsl.x = deltaB - deltaG;
		else if (color.g == fmax)
			hsl.x = (1.0 / 3.0) + deltaR - deltaB;
		else if (color.b == fmax)
			hsl.x = (2.0 / 3.0) + deltaG - deltaR;

		if (hsl.x < 0.0)
			hsl.x += 1.0;
		else if (hsl.x > 1.0)
			hsl.x -= 1.0;
	}

	return hsl;
}

vec3 hsl2rgb(vec3 hsl) {
	vec3 rgb;
	
	if (hsl.y == 0.0)
		rgb = vec3(hsl.z);
	else {
		float f2;
		
		if (hsl.z < 0.5)
			f2 = hsl.z * (1.0 + hsl.y);
		else
			f2 = (hsl.z + hsl.y) - (hsl.y * hsl.z);
			
		float f1 = 2.0 * hsl.z - f2;
		
		rgb.r = hue2rgb(f1, f2, hsl.x + (1.0/3.0));
		rgb.g = hue2rgb(f1, f2, hsl.x);
		rgb.b = hue2rgb(f1, f2, hsl.x - (1.0/3.0));
	}
	
	return rgb;
}

vec3 blendHue(vec3 base, vec3 blend) {
	vec3 baseHSL = rgb2hsl(base);
	return hsl2rgb(vec3(rgb2hsl(blend).r, baseHSL.g, baseHSL.b));
}

void main() {
    vec4 texture;

    %forloop%

    vec4 texel = vec4(outTint.bgr * outTint.a, outTint.a);

    //  Multiply texture tint
    vec4 color = texture * texel;

    if (outTintEffect == 1.0) {
        //  Solid color + texture alpha
        color.rgb = mix(texture.rgb, outTint.bgr * outTint.a, texture.a);
    } else if (outTintEffect == 2.0) {
        //  Solid color, no texture
        color = texel;
    }

    /* Apply day/night tint */
    if (color.a > 0.0 && ignoreTimeTint == 0) {
        vec3 dayNightTint;

        if (time < 0.25) {
            dayNightTint = dayTint;
        } else if (isOutside == 0 && time < 0.5) {
            dayNightTint = mix(dayTint, nightTint, (time - 0.25) / 0.25);
        } else if (time < 0.375) {
            dayNightTint = mix(dayTint, duskTint, (time - 0.25) / 0.125);
        } else if (time < 0.5) {
            dayNightTint = mix(duskTint, nightTint, (time - 0.375) / 0.125);
        } else if (time < 0.75) {
            dayNightTint = nightTint;
        } else if (isOutside == 0) {
            dayNightTint = mix(nightTint, dayTint, (time - 0.75) / 0.25);
        } else if (time < 0.875) {
            dayNightTint = mix(nightTint, duskTint, (time - 0.75) / 0.125);
        } else {
            dayNightTint = mix(duskTint, dayTint, (time - 0.875) / 0.125);
        }

        color = vec4(blendHardLight(color.rgb, dayNightTint), color.a);
    }

    if (terrainColorRatio > 0.0 && (1.0 - terrainColorRatio) < outTexCoord.y) {
        if (color.a > 0.0 && (terrainColor.r > 0.0 || terrainColor.g > 0.0 || terrainColor.b > 0.0)) {
            color.rgb = mix(color.rgb, blendHue(color.rgb, terrainColor), 1.0);
        }
    }

    gl_FragColor = color;
}
`,RJ=`
precision mediump float;

uniform mat4 uProjectionMatrix;
uniform int uRoundPixels;
uniform vec2 uResolution;

attribute vec2 inPosition;
attribute vec2 inTexCoord;
attribute float inTexId;
attribute float inTintEffect;
attribute vec4 inTint;

varying vec2 outTexCoord;
varying float outTexId;
varying vec2 outPosition;
varying float outTintEffect;
varying vec4 outTint;

void main() {
    gl_Position = uProjectionMatrix * vec4(inPosition, 1.0, 1.0);
    if (uRoundPixels == 1)
    {
        gl_Position.xy = floor(((gl_Position.xy + 1.0) * 0.5 * uResolution) + 0.5) / uResolution * 2.0 - 1.0;
    }
    outTexCoord = inTexCoord;
    outTexId = inTexId;
    outPosition = inPosition;
    outTint = inTint;
    outTintEffect = inTintEffect;
}
`,EF=class EF extends Phaser.Renderer.WebGL.Pipelines.MultiPipeline{constructor(A,s){super(s||{game:A,name:"field-sprite",fragShader:sJ,vertShader:RJ})}onPreRender(){this.set1f("time",0),this.set1i("ignoreTimeTint",0),this.set1f("terrainColorRatio",0),this.set3fv("terrainColor",[0,0,0])}onBind(A){var L,o;super.onBind();const R=A.pipelineData,a=R.ignoreTimeTint,i=R.terrainColorRatio||0,r=(L=n.currentBattle)!=null&&L.waveIndex?(n.currentBattle.waveIndex+n.waveCycleOffset)%40/40:U7();this.set1f("time",r),this.set1i("ignoreTimeTint",a?1:0),this.set1i("isOutside",n.arena.isOutside()?1:0),this.set3fv("dayTint",n.arena.getDayTint().map(l=>l/255)),this.set3fv("duskTint",n.arena.getDuskTint().map(l=>l/255)),this.set3fv("nightTint",n.arena.getNightTint().map(l=>l/255)),this.set3fv("terrainColor",pk(((o=n.arena.terrain)==null?void 0:o.terrainType)||Tt.NONE).map(l=>l/255)),this.set1f("terrainColorRatio",i)}onBatch(A){A&&this.flush()}};N(EF,"FieldSpritePipeline");let zC=EF;const OJ=`
#ifdef GL_FRAGMENT_PRECISION_HIGH
precision highp float;
#else
precision mediump float;
#endif

uniform sampler2D uMainSampler[%count%];

varying vec2 outTexCoord;
varying float outTexId;
varying vec2 outPosition;
varying float outTintEffect;
varying vec4 outTint;

uniform float time;
uniform int ignoreTimeTint;
uniform int isOutside;
uniform vec3 dayTint;
uniform vec3 duskTint;
uniform vec3 nightTint;
uniform float teraTime;
uniform vec3 teraColor;
uniform int hasShadow;
uniform int yCenter;
uniform float fieldScale;
uniform float vCutoff;
uniform vec2 relPosition;
uniform vec2 texFrameUv;
uniform vec2 size;
uniform vec2 texSize;
uniform float yOffset;
uniform float yShadowOffset;
uniform vec4 tone;
uniform ivec4 baseVariantColors[32];
uniform vec4 variantColors[32];
uniform ivec4 spriteColors[32];
uniform ivec4 fusionSpriteColors[32];

const vec3 lumaF = vec3(.299, .587, .114);

float blendOverlay(float base, float blend) {
	return base<0.5?(2.0*base*blend):(1.0-2.0*(1.0-base)*(1.0-blend));
}

vec3 blendOverlay(vec3 base, vec3 blend) {
	return vec3(blendOverlay(base.r,blend.r),blendOverlay(base.g,blend.g),blendOverlay(base.b,blend.b));
}

vec3 blendHardLight(vec3 base, vec3 blend) {
	return blendOverlay(blend, base);
}

float hue2rgb(float f1, float f2, float hue) {
	if (hue < 0.0)
		hue += 1.0;
	else if (hue > 1.0)
		hue -= 1.0;
	float res;
	if ((6.0 * hue) < 1.0)
		res = f1 + (f2 - f1) * 6.0 * hue;
	else if ((2.0 * hue) < 1.0)
		res = f2;
	else if ((3.0 * hue) < 2.0)
		res = f1 + (f2 - f1) * ((2.0 / 3.0) - hue) * 6.0;
	else
		res = f1;
	return res;
}

vec3 rgb2hsl(vec3 color) {
	vec3 hsl;
	
	float fmin = min(min(color.r, color.g), color.b);
	float fmax = max(max(color.r, color.g), color.b);
	float delta = fmax - fmin;

	hsl.z = (fmax + fmin) / 2.0;

	if (delta == 0.0) {
		hsl.x = 0.0;
		hsl.y = 0.0;
	} else {
		if (hsl.z < 0.5)
			hsl.y = delta / (fmax + fmin);
		else
			hsl.y = delta / (2.0 - fmax - fmin);
		
		float deltaR = (((fmax - color.r) / 6.0) + (delta / 2.0)) / delta;
		float deltaG = (((fmax - color.g) / 6.0) + (delta / 2.0)) / delta;
		float deltaB = (((fmax - color.b) / 6.0) + (delta / 2.0)) / delta;

		if (color.r == fmax )
			hsl.x = deltaB - deltaG;
		else if (color.g == fmax)
			hsl.x = (1.0 / 3.0) + deltaR - deltaB;
		else if (color.b == fmax)
			hsl.x = (2.0 / 3.0) + deltaG - deltaR;

		if (hsl.x < 0.0)
			hsl.x += 1.0;
		else if (hsl.x > 1.0)
			hsl.x -= 1.0;
	}

	return hsl;
}

vec3 hsl2rgb(vec3 hsl) {
	vec3 rgb;
	
	if (hsl.y == 0.0)
		rgb = vec3(hsl.z);
	else {
		float f2;
		
		if (hsl.z < 0.5)
			f2 = hsl.z * (1.0 + hsl.y);
		else
			f2 = (hsl.z + hsl.y) - (hsl.y * hsl.z);
			
		float f1 = 2.0 * hsl.z - f2;
		
		rgb.r = hue2rgb(f1, f2, hsl.x + (1.0/3.0));
		rgb.g = hue2rgb(f1, f2, hsl.x);
		rgb.b= hue2rgb(f1, f2, hsl.x - (1.0/3.0));
	}
	
	return rgb;
}

vec3 blendHue(vec3 base, vec3 blend) {
	vec3 baseHSL = rgb2hsl(base);
	return hsl2rgb(vec3(rgb2hsl(blend).r, baseHSL.g, baseHSL.b));
}

vec3 rgb2hsv(vec3 c) {
    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));

    float d = q.x - min(q.w, q.y);
    float e = 1.0e-10;
    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
}

vec3 hsv2rgb(vec3 c) {
    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
}

void main() {
    vec4 texture = texture2D(uMainSampler[0], outTexCoord);

    ivec4 colorInt = ivec4(int(texture.r * 255.0), int(texture.g * 255.0), int(texture.b * 255.0), int(texture.a * 255.0));

    for (int i = 0; i < 32; i++) {
        if (baseVariantColors[i][3] == 0)
            break;
        if (texture.a > 0.0 && colorInt.r == baseVariantColors[i].r && colorInt.g == baseVariantColors[i].g && colorInt.b == baseVariantColors[i].b) {
            texture.rgb = variantColors[i].rgb;
            break;
        }
    }

    for (int i = 0; i < 32; i++) {
        if (spriteColors[i][3] == 0)
            break;
        if (texture.a > 0.0 && colorInt.r == spriteColors[i].r && colorInt.g == spriteColors[i].g && colorInt.b == spriteColors[i].b) {
            vec3 fusionColor = vec3(float(fusionSpriteColors[i].r) / 255.0, float(fusionSpriteColors[i].g) / 255.0, float(fusionSpriteColors[i].b) / 255.0);
            vec3 bg = vec3(float(spriteColors[i].r) / 255.0, float(spriteColors[i].g) / 255.0, float(spriteColors[i].b) / 255.0);
            float gray = (bg.r + bg.g + bg.b) / 3.0;
            bg = vec3(gray, gray, gray);
            vec3 fg = fusionColor;
            texture.rgb = mix(1.0 - 2.0 * (1.0 - bg) * (1.0 - fg), 2.0 * bg * fg, step(bg, vec3(0.5)));
            break;
        }
    }

    vec4 texel = vec4(outTint.bgr * outTint.a, outTint.a);

    //  Multiply texture tint
    vec4 color = texture * texel;

    if (color.a > 0.0 && teraColor.r > 0.0 && teraColor.g > 0.0 && teraColor.b > 0.0) {
        vec2 relUv = vec2((outTexCoord.x - texFrameUv.x) / (size.x / texSize.x), (outTexCoord.y - texFrameUv.y) / (size.y / texSize.y));
        vec2 teraTexCoord = vec2(relUv.x * (size.x / 200.0), relUv.y * (size.y / 120.0));
        vec4 teraCol = texture2D(uMainSampler[1], teraTexCoord);
        float floorValue = 86.0 / 255.0;
        vec3 teraPatternHsv = rgb2hsv(teraCol.rgb);
        teraCol.rgb = hsv2rgb(vec3((teraPatternHsv.b - floorValue) * 4.0 + teraTexCoord.x * fieldScale / 2.0 + teraTexCoord.y * fieldScale / 2.0 + teraTime * 255.0, teraPatternHsv.b, teraPatternHsv.b));

        color.rgb = mix(color.rgb, blendHue(color.rgb, teraColor), 0.625);
        teraCol.rgb = mix(teraCol.rgb, teraColor, 0.5);
        color.rgb = blendOverlay(color.rgb, teraCol.rgb);

        if (teraColor.r < 1.0 || teraColor.g < 1.0 || teraColor.b < 1.0) {
            vec3 teraColHsv = rgb2hsv(teraColor);
            color.rgb = mix(color.rgb, teraColor, (1.0 - teraColHsv.g) / 2.0);
        }
    }

    if (outTintEffect == 1.0) {
        //  Solid color + texture alpha
        color.rgb = mix(texture.rgb, outTint.bgr * outTint.a, texture.a);
    } else if (outTintEffect == 2.0) {
        //  Solid color, no texture
        color = texel;
    }

    /* Apply gray */
    float luma = dot(color.rgb, lumaF);
    color.rgb = mix(color.rgb, vec3(luma), tone.w);

    /* Apply tone */
    color.rgb += tone.rgb * (color.a / 255.0);

    /* Apply day/night tint */
    if (color.a > 0.0 && ignoreTimeTint == 0) {
        vec3 dayNightTint;

        if (time < 0.25) {
            dayNightTint = dayTint;
        } else if (isOutside == 0 && time < 0.5) {
            dayNightTint = mix(dayTint, nightTint, (time - 0.25) / 0.25);
        } else if (time < 0.375) {
            dayNightTint = mix(dayTint, duskTint, (time - 0.25) / 0.125);
        } else if (time < 0.5) {
            dayNightTint = mix(duskTint, nightTint, (time - 0.375) / 0.125);
        } else if (time < 0.75) {
            dayNightTint = nightTint;
        } else if (isOutside == 0) {
            dayNightTint = mix(nightTint, dayTint, (time - 0.75) / 0.25);
        } else if (time < 0.875) {
            dayNightTint = mix(nightTint, duskTint, (time - 0.75) / 0.125);
        } else {
            dayNightTint = mix(duskTint, dayTint, (time - 0.875) / 0.125);
        }

        color.rgb = blendHardLight(color.rgb, dayNightTint);
    }

    if (hasShadow == 1) {
        float width = size.x - (yOffset / 2.0);

        float spriteX = ((floor(outPosition.x / fieldScale) - relPosition.x) / width) + 0.5;
        float spriteY = ((floor(outPosition.y / fieldScale) - relPosition.y - yShadowOffset) / size.y);

        if (yCenter == 1) {
            spriteY += 0.5;
        } else {
            spriteY += 1.0;
        }

        bool yOverflow = outTexCoord.y >= vCutoff;

        if ((spriteY >= 0.9 && (color.a == 0.0 || yOverflow))) {
            float shadowSpriteY = (spriteY - 0.9) * (1.0 / 0.15);
            if (distance(vec2(spriteX, shadowSpriteY), vec2(0.5, 0.5)) < 0.5) {
                color = vec4(vec3(0.0, 0.0, 0.0), 0.5);
            } else if (yOverflow) {
                discard;
            }
        } else if (yOverflow) {
            discard;
        }
    }

    gl_FragColor = color;
}
`,nJ=`
precision mediump float;

uniform mat4 uProjectionMatrix;
uniform int uRoundPixels;
uniform vec2 uResolution;

attribute vec2 inPosition;
attribute vec2 inTexCoord;
attribute float inTexId;
attribute float inTintEffect;
attribute vec4 inTint;

varying vec2 outTexCoord;
varying vec2 outtexFrameUv;
varying float outTexId;
varying vec2 outPosition;
varying float outTintEffect;
varying vec4 outTint;

void main()
{
    gl_Position = uProjectionMatrix * vec4(inPosition, 1.0, 1.0);
    if (uRoundPixels == 1)
    {
        gl_Position.xy = floor(((gl_Position.xy + 1.0) * 0.5 * uResolution) + 0.5) / uResolution * 2.0 - 1.0;
    }
    outTexCoord = inTexCoord;
    outTexId = inTexId;
    outPosition = inPosition;
    outTint = inTint;
    outTintEffect = inTintEffect;
}
`,sF=class sF extends zC{constructor(A){super(A,{game:A,name:"sprite",fragShader:OJ,vertShader:nJ}),this._tone=[0,0,0,0]}onPreRender(){super.onPreRender(),this.set1f("teraTime",0),this.set3fv("teraColor",[0,0,0]),this.set1i("hasShadow",0),this.set1i("yCenter",0),this.set2f("relPosition",0,0),this.set2f("texFrameUv",0,0),this.set2f("size",0,0),this.set2f("texSize",0,0),this.set1f("yOffset",0),this.set1f("yShadowOffset",0),this.set4fv("tone",this._tone)}onBind(A){super.onBind(A);const s=A,R=s.pipelineData,a=R.tone,i=R.teraColor??[0,0,0],r=R.hasShadow,L=R.yShadowOffset,o=R.ignoreFieldPos,l=R.ignoreOverride,C=s.parentContainer instanceof eO||s.parentContainer instanceof Gs||s.parentContainer instanceof IS,M=C?s.parentContainer.parentContainer:s.parentContainer,D=C?[s.parentContainer.x,s.parentContainer.y]:[s.x,s.y];if(M&&(D[0]+=M.x/M.scale,D[1]+=M.y/M.scale),D[0]+=-(s.width-s.frame.width)/2+s.frame.x+(o?0:s.x-M.x),s.originY===.5&&(D[1]+=s.height/2*((C?s.parentContainer:s).scale-1)+(o?0:s.y-M.y)),this.set1f("teraTime",this.game.getTime()%5e5/5e5),this.set3fv("teraColor",i.map(_=>_/255)),this.set1i("hasShadow",r?1:0),this.set1i("yCenter",s.originY===.5?1:0),this.set1f("fieldScale",(M==null?void 0:M.scale)||1),this.set2f("relPosition",D[0],D[1]),this.set2f("texFrameUv",s.frame.u0,s.frame.v0),this.set2f("size",s.frame.width,s.height),this.set2f("texSize",s.texture.source[0].width,s.texture.source[0].height),this.set1f("yOffset",s.height-s.frame.height*(C?s.parentContainer.scale:s.scale)),this.set1f("yShadowOffset",L??0),this.set4fv("tone",a),this.bindTexture(this.game.textures.get("tera").source[0].glTexture,1),n.fusionPaletteSwaps){const _=l&&R.spriteColorsBase||R.spriteColors||[],P=l&&R.fusionSpriteColorsBase||R.fusionSpriteColors||[],h=[0,0,0,0],H=[],d=[];for(let f=0;f<32;f++)H.splice(H.length,0,...f<_.length?_[f]:h),d.splice(d.length,0,...f<P.length?P[f]:h);this.set4iv("spriteColors",H.flat()),this.set4iv("fusionSpriteColors",d.flat())}}onBatch(A){if(A){const s=A,R=s.pipelineData,a=R.hasOwnProperty("variant")?R.variant:s.parentContainer instanceof eO?s.parentContainer.variant:0;let i;const r=[0,0,0,0],L=[],o=[];if((s.parentContainer instanceof eO?s.parentContainer.shiny:R.shiny)&&(i=ca[s.parentContainer instanceof eO?s.parentContainer.getSprite().texture.key:R.spriteKey])&&i.hasOwnProperty(a)){const l=Object.keys(i[a]);for(let C=0;C<32;C++)if(C<l.length){const M=Array.from(Object.values(cs(l[C]))),D=Array.from(Object.values(cs(i[a][l[C]])));L.splice(L.length,0,...M),o.splice(o.length,0,...D.map(_=>_/255))}else L.splice(L.length,0,...r),o.splice(o.length,0,...r)}else for(let l=0;l<32;l++)L.splice(L.length,0,...r),o.splice(o.length,0,...r);this.set4iv("baseVariantColors",L.flat()),this.set4fv("variantColors",o.flat())}super.onBatch(A)}batchQuad(A,s,R,a,i,r,L,o,l,C,M,D,_,P,h,H,d,f,B,F){const W=A;this.set1f("vCutoff",_);const b=W.pipelineData.hasShadow,x=W.pipelineData.yShadowOffset??0;if(b){const $=W.parentContainer instanceof eO||W.parentContainer instanceof Gs||W.parentContainer instanceof IS,j=$?W.parentContainer.parentContainer:W.parentContainer,z=j.scale/6,se=($?W.parentContainer.y:W.y+W.height)*6/z,Z=Math.ceil(W.height*.05+Math.max(x,0))*6/z,q=(se-i)/j.scale;L=i=se+Z;const p=(_-M)/(W.frame.height*($?W.parentContainer.scale:W.scale));_+=(q+Z/j.scale)*p}return super.batchQuad(A,s,R,a,i,r,L,o,l,C,M,D,_,P,h,H,d,f,B,F)}get tone(){return this._tone}set tone(A){this._tone=A}};N(sF,"SpritePipeline");let HG=sF;const RF=class RF extends Phaser.GameObjects.Container{constructor(){super(n,n.game.canvas.width/6,-(n.game.canvas.height/6)+15)}setup(){this.bg=n.add.nineslice(0,0,"party_exp_bar",void 0,8,18,21,5,6,4),this.bg.setOrigin(0,0),this.add(this.bg),this.expText=le(22,4,"",Q.BATTLE_INFO),this.expText.setOrigin(0,0),this.add(this.expText),this.setVisible(!1),this.shown=!1}showPokemonExp(A,s,R,a){return new Promise(i=>{if(this.shown)return i();this.pokemonIcon=n.addPokemonIcon(A,-8,15,0,.5),this.pokemonIcon.setScale(.5),this.add(this.pokemonIcon),R?a>200?this.expText.setText("Lv. UP"):this.expText.setText(`Lv. UP: ${a.toString()}`):this.expText.setText(`+${s.toString()}`),this.bg.width=this.expText.displayWidth+28,n.fieldUI.bringToTop(this),this.tween&&this.tween.stop(),this.tween=n.tweens.add({targets:this,x:n.game.canvas.width/6-(this.bg.width-5),duration:500/Math.pow(2,n.expGainsSpeed),ease:"Sine.easeOut",onComplete:N(()=>{this.tween=null,i()},"onComplete")}),this.setVisible(!0),this.shown=!0})}hide(){return new Promise(A=>{if(!this.shown)return A();this.tween&&this.tween.stop(),this.tween=n.tweens.add({targets:this,x:n.game.canvas.width/6,duration:500,ease:"Sine.easeIn",onComplete:N(()=>{var s;this.tween=null,this.shown=!1,this.setVisible(!1),(s=this.pokemonIcon)==null||s.destroy(),A()},"onComplete")})})}};N(RF,"PartyExpBar");let dG=RF;const OF=class OF extends Phaser.GameObjects.Container{constructor(A){super(n,A?n.game.canvas.width/6:0,A?-72:-144),this.player=A}setup(){this.bg=n.add.nineslice(0,0,`pb_tray_overlay_${this.player?"player":"enemy"}`,void 0,104,4,48,8,0,0),this.bg.setOrigin(this.player?1:0,0),this.add(this.bg),this.balls=new Array(6).fill(null).map((A,s)=>n.add.sprite((this.player?-83:76)+n.game.canvas.width/6*(this.player?-1:1)+10*s*(this.player?1:-1),-8,"pb_tray_ball","empty"));for(const A of this.balls)A.setOrigin(0,0),this.add(A);this.setVisible(!1),this.shown=!1}showPbTray(A){return new Promise(s=>{if(this.shown)return s();n.fieldUI.bringToTop(this),this.x+=104*(this.player?1:-1),this.bg.width=104,this.bg.alpha=1,this.balls.forEach((R,a)=>{R.x+=(n.game.canvas.width/6+104)*(this.player?1:-1);let i="ball";a>=A.length?i="empty":A[a].hp?A[a].status&&(i="status"):i="faint",R.setFrame(i)}),n.playSound("se/pb_tray_enter"),n.tweens.add({targets:this,x:`${this.player?"-":"+"}=104`,duration:500,ease:"Sine.easeIn",onComplete:N(()=>{this.balls.forEach((R,a)=>{n.tweens.add({targets:R,x:`${this.player?"-":"+"}=104`,duration:a*100,ease:"Sine.easeIn",onComplete:N(()=>n.playSound(`se/${a<A.length?"pb_tray_ball":"pb_tray_empty"}`),"onComplete")})})},"onComplete")}),this.setVisible(!0),this.shown=!0,n.time.delayedCall(1100,()=>s())})}hide(){return new Promise(A=>{if(!this.shown)return A();this.balls.forEach((s,R)=>{n.tweens.add({targets:s,x:`${this.player?"-":"+"}=${n.game.canvas.width/6}`,duration:250,delay:R*100,ease:"Sine.easeIn"})}),n.tweens.add({targets:this.bg,width:144,alpha:0,duration:500,ease:"Sine.easeIn"}),n.time.delayedCall(850,()=>{this.setVisible(!1),A()}),this.shown=!1})}};N(OF,"PokeballTray");let qC=OF;const nF=class nF extends aE{constructor(){super()}start(){super.start(),n.ui.setModeForceTransition(Ie.MESSAGE).then(()=>this.end())}};N(nF,"EndEvolutionPhase");let US=nF;const IF=class IF extends aE{constructor(A,s,R){super(),this.pokemon=A,this.evolution=s,this.lastLevel=R,this.fusionSpeciesEvolved=s instanceof kn}validate(){return!!this.evolution}setMode(){return n.ui.setModeForceTransition(Ie.EVOLUTION_SCENE)}start(){super.start(),this.setMode().then(()=>{if(!this.validate())return this.end();n.fadeOutBgm(void 0,!1),this.evolutionHandler=n.ui.getHandler(),this.evolutionContainer=this.evolutionHandler.evolutionContainer,this.evolutionBaseBg=n.add.image(0,0,"default_bg"),this.evolutionBaseBg.setOrigin(0,0),this.evolutionContainer.add(this.evolutionBaseBg),this.evolutionBg=n.add.video(0,0,"evo_bg").stop(),this.evolutionBg.setOrigin(0,0),this.evolutionBg.setScale(.4359673025),this.evolutionBg.setVisible(!1),this.evolutionContainer.add(this.evolutionBg),this.evolutionBgOverlay=n.add.rectangle(0,0,n.game.canvas.width/6,n.game.canvas.height/6,2500134),this.evolutionBgOverlay.setOrigin(0,0),this.evolutionBgOverlay.setAlpha(0),this.evolutionContainer.add(this.evolutionBgOverlay);const A=N(()=>{const s=n.addPokemonSprite(this.pokemon,this.evolutionBaseBg.displayWidth/2,this.evolutionBaseBg.displayHeight/2,"pkmn__sub");return s.setPipeline(n.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),s},"getPokemonSprite");this.evolutionContainer.add(this.pokemonSprite=A()),this.evolutionContainer.add(this.pokemonTintSprite=A()),this.evolutionContainer.add(this.pokemonEvoSprite=A()),this.evolutionContainer.add(this.pokemonEvoTintSprite=A()),this.pokemonTintSprite.setAlpha(0),this.pokemonTintSprite.setTintFill(16777215),this.pokemonEvoSprite.setVisible(!1),this.pokemonEvoTintSprite.setVisible(!1),this.pokemonEvoTintSprite.setTintFill(16777215),this.evolutionOverlay=n.add.rectangle(0,-n.game.canvas.height/6,n.game.canvas.width/6,n.game.canvas.height/6-48,16777215),this.evolutionOverlay.setOrigin(0,0),this.evolutionOverlay.setAlpha(0),n.ui.add(this.evolutionOverlay),[this.pokemonSprite,this.pokemonTintSprite,this.pokemonEvoSprite,this.pokemonEvoTintSprite].map(s=>{const R=this.pokemon.getSpriteKey(!0);try{s.play(R)}catch(a){console.error(`Failed to play animation for ${R}`,a)}s.setPipeline(n.spritePipeline,{tone:[0,0,0,0],hasShadow:!1,teraColor:yR(this.pokemon.getTeraType())}),s.setPipelineData("ignoreTimeTint",!0),s.setPipelineData("spriteKey",this.pokemon.getSpriteKey()),s.setPipelineData("shiny",this.pokemon.shiny),s.setPipelineData("variant",this.pokemon.variant),["spriteColors","fusionSpriteColors"].map(a=>{var i;(i=this.pokemon.summonData)!=null&&i.speciesForm&&(a+="Base"),s.pipelineData[a]=this.pokemon.getSprite().pipelineData[a]})}),this.preEvolvedPokemonName=te(this.pokemon),this.doEvolution()})}doEvolution(){n.ui.showText(u.t("menu:evolving",{pokemonName:this.preEvolvedPokemonName}),null,()=>{this.pokemon.cry(),this.pokemon.getPossibleEvolution(this.evolution).then(A=>{[this.pokemonEvoSprite,this.pokemonEvoTintSprite].map(s=>{const R=A.getSpriteKey(!0);try{s.play(R)}catch(a){console.error(`Failed to play animation for ${R}`,a)}s.setPipelineData("ignoreTimeTint",!0),s.setPipelineData("spriteKey",A.getSpriteKey()),s.setPipelineData("shiny",A.shiny),s.setPipelineData("variant",A.variant),["spriteColors","fusionSpriteColors"].map(a=>{var i;(i=A.summonData)!=null&&i.speciesForm&&(a+="Base"),s.pipelineData[a]=A.getSprite().pipelineData[a]})}),n.time.delayedCall(1e3,()=>{this.evolutionBgm=n.playSoundWithoutBgm("evolution"),n.tweens.add({targets:this.evolutionBgOverlay,alpha:1,delay:500,duration:1500,ease:"Sine.easeOut",onComplete:N(()=>{n.time.delayedCall(1e3,()=>{n.tweens.add({targets:this.evolutionBgOverlay,alpha:0,duration:250}),this.evolutionBg.setVisible(!0),this.evolutionBg.play()}),n.playSound("se/charge"),this.doSpiralUpward(),n.tweens.addCounter({from:0,to:1,duration:2e3,onUpdate:N(s=>{this.pokemonTintSprite.setAlpha(s.getValue())},"onUpdate"),onComplete:N(()=>{this.pokemonSprite.setVisible(!1),n.time.delayedCall(1100,()=>{n.playSound("se/beam"),this.doArcDownward(),n.time.delayedCall(1500,()=>{this.pokemonEvoTintSprite.setScale(.25),this.pokemonEvoTintSprite.setVisible(!0),this.evolutionHandler.canCancel=!0,this.doCycle(1).then(s=>{s?this.handleSuccessEvolution(A):this.handleFailedEvolution(A)})})})},"onComplete")})},"onComplete")})})})},1e3)}handleFailedEvolution(A){this.pokemonSprite.setVisible(!0),this.pokemonTintSprite.setScale(1),n.tweens.add({targets:[this.evolutionBg,this.pokemonTintSprite,this.pokemonEvoSprite,this.pokemonEvoTintSprite],alpha:0,duration:250,onComplete:N(()=>{this.evolutionBg.setVisible(!1)},"onComplete")}),AO.fadeOut(n,this.evolutionBgm,100),n.unshiftPhase(new US),n.ui.showText(u.t("menu:stoppedEvolving",{pokemonName:this.preEvolvedPokemonName}),null,()=>{n.ui.showText(u.t("menu:pauseEvolutionsQuestion",{pokemonName:this.preEvolvedPokemonName}),null,()=>{const s=N(()=>{n.ui.showText("",0),n.playBgm(),A.destroy(),this.end()},"end");n.ui.setOverlayMode(Ie.CONFIRM,()=>{n.ui.revertMode(),this.pokemon.pauseEvolutions=!0,n.ui.showText(u.t("menu:evolutionsPaused",{pokemonName:this.preEvolvedPokemonName}),null,s,3e3)},()=>{n.ui.revertMode(),n.time.delayedCall(3e3,s)})})},null,!0)}handleSuccessEvolution(A){n.playSound("se/sparkle"),this.pokemonEvoSprite.setVisible(!0),this.doCircleInward();const s=N(()=>{AO.fadeOut(n,this.evolutionBgm,100),n.time.delayedCall(250,()=>{this.pokemon.cry(),n.time.delayedCall(1250,()=>{n.playSoundWithoutBgm("evolution_fanfare"),A.destroy(),n.ui.showText(u.t("menu:evolutionDone",{pokemonName:this.preEvolvedPokemonName,evolvedPokemonName:this.pokemon.name}),null,()=>this.end(),null,!0,st(4e3)),n.time.delayedCall(st(4250),()=>n.playBgm())})})},"onEvolutionComplete");n.time.delayedCall(900,()=>{this.evolutionHandler.canCancel=!1,this.pokemon.evolve(this.evolution,this.pokemon.species).then(()=>{const R=this.fusionSpeciesEvolved?Bl.EVOLUTION_FUSED:this.pokemon.fusionSpecies?Bl.EVOLUTION_FUSED_BASE:Bl.EVOLUTION,a=this.pokemon.getLevelMoves(this.lastLevel+1,!0,!1,!1,R).filter(i=>i[0]===Ee);for(const i of a)n.unshiftPhase(new eI(n.getPlayerParty().indexOf(this.pokemon),i[1]));n.unshiftPhase(new US),n.playSound("se/shine"),this.doSpray(),n.tweens.add({targets:this.evolutionOverlay,alpha:1,duration:250,easing:"Sine.easeIn",onComplete:N(()=>{this.evolutionBgOverlay.setAlpha(1),this.evolutionBg.setVisible(!1),n.tweens.add({targets:[this.evolutionOverlay,this.pokemonEvoTintSprite],alpha:0,duration:2e3,delay:150,easing:"Sine.easeIn",onComplete:N(()=>{n.tweens.add({targets:this.evolutionBgOverlay,alpha:0,duration:250,onComplete:s})},"onComplete")})},"onComplete")})})})}doSpiralUpward(){let A=0;n.tweens.addCounter({repeat:64,duration:TE(1),onRepeat:N(()=>{if(A<64){if(!(A&7))for(let s=0;s<4;s++)this.doSpiralUpwardParticle((A&120)*2+s*64);A++}},"onRepeat")})}doArcDownward(){let A=0;n.tweens.addCounter({repeat:96,duration:TE(1),onRepeat:N(()=>{if(A<96){if(A<6)for(let s=0;s<9;s++)this.doArcDownParticle(s*16);A++}},"onRepeat")})}doCycle(A,s=15){return new Promise(R=>{const a=A===s;n.tweens.add({targets:this.pokemonTintSprite,scale:.25,ease:"Cubic.easeInOut",duration:500/A,yoyo:!a}),n.tweens.add({targets:this.pokemonEvoTintSprite,scale:1,ease:"Cubic.easeInOut",duration:500/A,yoyo:!a,onComplete:N(()=>{if(this.evolutionHandler.cancelled)return R(!1);A<s?this.doCycle(A+.5,s).then(i=>R(i)):(this.pokemonTintSprite.setVisible(!1),R(!0))},"onComplete")})})}doCircleInward(){let A=0;n.tweens.addCounter({repeat:48,duration:TE(1),onRepeat:N(()=>{if(A){if(A===32)for(let s=0;s<16;s++)this.doCircleInwardParticle(s*16,8)}else for(let s=0;s<16;s++)this.doCircleInwardParticle(s*16,4);A++},"onRepeat")})}doSpray(){let A=0;n.tweens.addCounter({repeat:48,duration:TE(1),onRepeat:N(()=>{if(A)A<50&&this.doSprayParticle(_A(8));else for(let s=0;s<8;s++)this.doSprayParticle(s);A++},"onRepeat")})}doSpiralUpwardParticle(A){const s=this.evolutionBaseBg.displayWidth/2,R=n.add.image(s,0,"evo_sparkle");this.evolutionContainer.add(R);let a=0,i=48;const r=n.tweens.addCounter({repeat:-1,duration:TE(1),onRepeat:N(()=>{L()},"onRepeat")}),L=N(()=>{!a||R.y>8?(R.setPosition(s,88-a*a/80),R.y+=Cn(A,i)/4,R.x+=Za(A,i),R.setScale(1-a/80),A+=4,a&1&&i--,a++):(R.destroy(),r.remove())},"updateParticle");L()}doArcDownParticle(A){const s=this.evolutionBaseBg.displayWidth/2,R=n.add.image(s,0,"evo_sparkle");R.setScale(.5),this.evolutionContainer.add(R);let a=0,i=8;const r=n.tweens.addCounter({repeat:-1,duration:TE(1),onRepeat:N(()=>{L()},"onRepeat")}),L=N(()=>{!a||R.y<88?(R.setPosition(s,8+a*a/5),R.y+=Cn(A,i)/4,R.x+=Za(A,i),i=8+Cn(a*4,40),a++):(R.destroy(),r.remove())},"updateParticle");L()}doCircleInwardParticle(A,s){const R=this.evolutionBaseBg.displayWidth/2,a=this.evolutionBaseBg.displayHeight/2,i=n.add.image(R,a,"evo_sparkle");this.evolutionContainer.add(i);let r=120;const L=n.tweens.addCounter({repeat:-1,duration:TE(1),onRepeat:N(()=>{o()},"onRepeat")}),o=N(()=>{r>8?(i.setPosition(R,a),i.y+=Cn(A,r),i.x+=Za(A,r),r-=s,A+=4):(i.destroy(),L.remove())},"updateParticle");o()}doSprayParticle(A){const s=this.evolutionBaseBg.displayWidth/2,R=this.evolutionBaseBg.displayHeight/2,a=n.add.image(s,R,"evo_sparkle");this.evolutionContainer.add(a);let i=0,r=0;const L=3-_A(8),o=48+_A(64),l=n.tweens.addCounter({repeat:-1,duration:TE(1),onRepeat:N(()=>{C()},"onRepeat")}),C=N(()=>{i&3||r++,A<128?(a.setPosition(s+L*i/3,R+r),a.y+=-Cn(A,o),i>108&&a.setScale(1-(i-108)/20),A++,i++):(a.destroy(),l.remove())},"updateParticle");C()}};N(IF,"EvolutionPhase");let uS=IF;const aF=class aF extends uS{constructor(A,s,R){super(A,null,0),this.formChange=s,this.modal=R}validate(){return!!this.formChange}setMode(){return this.modal?n.ui.setOverlayMode(Ie.EVOLUTION_SCENE):super.setMode()}doEvolution(){const A=te(this.pokemon);this.pokemon.getPossibleForm(this.formChange).then(s=>{[this.pokemonEvoSprite,this.pokemonEvoTintSprite].map(R=>{const a=s.getSpriteKey(!0);try{R.play(a)}catch(i){console.error(`Failed to play animation for ${a}`,i)}R.setPipelineData("ignoreTimeTint",!0),R.setPipelineData("spriteKey",s.getSpriteKey()),R.setPipelineData("shiny",s.shiny),R.setPipelineData("variant",s.variant),["spriteColors","fusionSpriteColors"].map(i=>{var r;(r=s.summonData)!=null&&r.speciesForm&&(i+="Base"),R.pipelineData[i]=s.getSprite().pipelineData[i]})}),n.time.delayedCall(250,()=>{n.tweens.add({targets:this.evolutionBgOverlay,alpha:1,delay:500,duration:1500,ease:"Sine.easeOut",onComplete:N(()=>{n.time.delayedCall(1e3,()=>{n.tweens.add({targets:this.evolutionBgOverlay,alpha:0,duration:250}),this.evolutionBg.setVisible(!0),this.evolutionBg.play()}),n.playSound("se/charge"),this.doSpiralUpward(),n.tweens.addCounter({from:0,to:1,duration:2e3,onUpdate:N(R=>{this.pokemonTintSprite.setAlpha(R.getValue())},"onUpdate"),onComplete:N(()=>{this.pokemonSprite.setVisible(!1),n.time.delayedCall(1100,()=>{n.playSound("se/beam"),this.doArcDownward(),n.time.delayedCall(1e3,()=>{this.pokemonEvoTintSprite.setScale(.25),this.pokemonEvoTintSprite.setVisible(!0),this.doCycle(1,1).then(R=>{n.playSound("se/sparkle"),this.pokemonEvoSprite.setVisible(!0),this.doCircleInward(),n.time.delayedCall(900,()=>{this.pokemon.changeForm(this.formChange).then(()=>{this.modal||n.unshiftPhase(new US),n.playSound("se/shine"),this.doSpray(),n.tweens.add({targets:this.evolutionOverlay,alpha:1,duration:250,easing:"Sine.easeIn",onComplete:N(()=>{this.evolutionBgOverlay.setAlpha(1),this.evolutionBg.setVisible(!1),n.tweens.add({targets:[this.evolutionOverlay,this.pokemonEvoTintSprite],alpha:0,duration:2e3,delay:150,easing:"Sine.easeIn",onComplete:N(()=>{n.tweens.add({targets:this.evolutionBgOverlay,alpha:0,duration:250,onComplete:N(()=>{n.time.delayedCall(250,()=>{this.pokemon.cry(),n.time.delayedCall(1250,()=>{let a=!1;this.formChange.formKey.indexOf(Ue.MEGA)>-1?(n.validateAchv(Ct.MEGA_EVOLVE),a=!0):(this.formChange.formKey.indexOf(Ue.GIGANTAMAX)>-1||this.formChange.formKey.indexOf(Ue.ETERNAMAX)>-1)&&(n.validateAchv(Ct.GIGANTAMAX),a=!0);const i=a?4e3:1750;n.playSoundWithoutBgm(a?"evolution_fanfare":"minor_fanfare"),s.destroy(),n.ui.showText(F_(this.pokemon,this.formChange,A),null,()=>this.end(),null,!0,st(i)),n.time.delayedCall(st(i+250),()=>n.playBgm())})})},"onComplete")})},"onComplete")})},"onComplete")})})})})})})},"onComplete")})},"onComplete")})})})}end(){this.pokemon.findAndRemoveTags(A=>A.tagType===y.AUTOTOMIZED),this.modal?n.ui.revertMode().then(()=>{if(n.ui.getMode()===Ie.PARTY){const A=n.ui.getHandler();A.clearPartySlots(),A.populatePartySlots()}super.end()}):super.end()}};N(aF,"FormChangePhase");let fG=aF;const iF=class iF{setup(){this.sprites=new Set,n.tweens.addCounter({duration:st(200),from:0,to:1,yoyo:!0,repeat:-1,onRepeat:N(()=>this.onLapse(),"onRepeat")})}onLapse(){Array.from(this.sprites.values()).filter(A=>!A.scene).map(A=>this.sprites.delete(A));for(const A of this.sprites.values()){if(!A.pipelineData.teraColor||!A.pipelineData.teraColor.find(D=>D)||!A.visible||A.parentContainer instanceof eO&&!A.parentContainer.parentContainer)continue;const s=A.parentContainer instanceof eO?A.parentContainer:null,R=(s||A).parentContainer,a=A.texture,[i,r]=[a.source[0].width,a.source[0].height],[L,o]=[_A(i),_A(r)],l=A.width/i,C=A.height/r,M=a.manager.getPixel(L,o,a.key,"__BASE");if(M!=null&&M.alpha){const[D,_]=[-A.originX*A.width,-A.originY*A.height],P=n.addFieldSprite(((s==null?void 0:s.x)||0)+A.x+L*l+D,((s==null?void 0:s.y)||0)+A.y+o*C+_,"tera_sparkle");P.pipelineData.ignoreTimeTint=A.pipelineData.ignoreTimeTint,P.setName("sprite-tera-sparkle"),P.play("tera_sparkle"),R.add(P),A.scene.time.delayedCall(st(Math.floor(1e3/12*13)),()=>P.destroy())}}}add(A){Array.isArray(A)||(A=[A]);for(const s of A)this.sprites.has(s)||this.sprites.add(s)}remove(A){Array.isArray(A)||(A=[A]);for(const s of A)this.sprites.delete(s)}removeAll(){for(const A of this.sprites.values())this.sprites.delete(A)}};N(iF,"PokemonSpriteSparkleHandler");let BG=iF;const rF=class rF extends Phaser.GameObjects.Container{constructor(){super(n,n.game.canvas.width/6+32,-42)}setup(){[this.sprite,this.transitionSprite]=new Array(2).fill(null).map(()=>{const A=n.add.sprite(0,0,"","");return A.setOrigin(.5,1),this.add(A),A}),this.transitionSprite.setVisible(!1),this.setVisible(!1),this.shown=!1}showCharacter(A,s){return new Promise(R=>{if(A.startsWith("c_")||(A=`c_${A}`),this.shown){if(A===this.key&&s===this.variant)return R();if(A!==this.key)return this.hide().then(()=>this.showCharacter(A,s));this.setVariant(s).then(()=>R());return}this.sprite.setTexture(A,s),n.fieldUI.bringToTop(this),n.tweens.add({targets:this,x:n.game.canvas.width/6-102,duration:750,ease:"Cubic.easeOut",onComplete:N(()=>{R()},"onComplete")}),this.setVisible(n.textures.get(A).key!==u7),this.shown=!0,this.key=A,this.variant=s})}setVariant(A){return new Promise(s=>{n.fieldUI.bringToTop(this),this.transitionSprite.setTexture(this.key,A),this.transitionSprite.setAlpha(0),this.transitionSprite.setVisible(!0),n.tweens.add({targets:this.transitionSprite,alpha:1,duration:250,ease:"Sine.easeIn",onComplete:N(()=>{this.sprite.setTexture(this.key,A),this.transitionSprite.setVisible(!1),s()},"onComplete")}),this.variant=A})}hide(){return new Promise(A=>{if(!this.shown)return A();n.tweens.add({targets:this,x:n.game.canvas.width/6+32,duration:750,ease:"Cubic.easeIn",onComplete:N(()=>{this.shown||this.setVisible(!1),A()},"onComplete")}),this.shown=!1})}};N(rF,"CharSprite");let gG=rF;const LF=class LF{constructor(){this.damageNumbers=new Map}add(A,s,R=vt.EFFECTIVE,a=!1){var M;if(!((M=n)!=null&&M.damageNumbersMode))return;const i=A.getBattlerIndex(),r=A.getSpriteScale()/6,L=le(A.x,-(n.game.canvas.height/6)+A.y-A.getSprite().height/2,_l(s,!0),Q.SUMMARY);L.setName("text-damage-number"),L.setOrigin(.5,1),L.setScale(r);let[o,l]=[null,null];switch(R){case vt.SUPER_EFFECTIVE:[o,l]=["#f8d030","#b8a038"];break;case vt.NOT_VERY_EFFECTIVE:[o,l]=["#f08030","#c03028"];break;case vt.ONE_HIT_KO:[o,l]=["#a040a0","#483850"];break;case vt.HEAL:[o,l]=["#78c850","#588040"];break;default:[o,l]=["#ffffff","#636363"];break}o&&L.setColor(o),l&&(a?(L.setShadowOffset(0,0),L.setStroke(l,12)):L.setShadowColor(l)),n.fieldUI.add(L),this.damageNumbers.has(i)||this.damageNumbers.set(i,[]);const C=this.damageNumbers.get(i).length*-10;if(C&&(L.y+=C),this.damageNumbers.get(i).push(L),n.damageNumbersMode===1){n.tweens.add({targets:L,duration:st(750),alpha:1,y:"-=32"}),n.tweens.add({delay:375,targets:L,duration:st(625),alpha:0,ease:"Sine.easeIn",onComplete:N(()=>{this.damageNumbers.get(i).splice(this.damageNumbers.get(i).indexOf(L),1),L.destroy(!0)},"onComplete")});return}L.setAlpha(0),n.tweens.chain({targets:L,tweens:[{duration:st(250),alpha:1,scaleX:.75*r,scaleY:1.25*r,y:"-=16",ease:"Cubic.easeOut"},{duration:st(175),alpha:1,scaleX:.875*r,scaleY:1.125*r,y:"+=16",ease:"Cubic.easeIn"},{duration:st(100),scaleX:1.25*r,scaleY:.75*r,ease:"Cubic.easeOut"},{duration:st(175),scaleX:.875*r,scaleY:1.125*r,y:"-=8",ease:"Cubic.easeOut"},{duration:st(50),scaleX:.925*r,scaleY:1.075*r,y:"+=8",ease:"Cubic.easeIn"},{duration:st(100),scaleX:1.125*r,scaleY:.875*r,ease:"Cubic.easeOut"},{duration:st(175),scaleX:.925*r,scaleY:1.075*r,y:"-=4",ease:"Cubic.easeOut"},{duration:st(50),scaleX:.975*r,scaleY:1.025*r,y:"+=4",ease:"Cubic.easeIn"},{duration:st(100),scaleX:1.075*r,scaleY:.925*r,ease:"Cubic.easeOut"},{duration:st(25),scaleX:r,scaleY:r,ease:"Cubic.easeOut"},{delay:st(500),alpha:0,onComplete:N(()=>{this.damageNumbers.get(i).splice(this.damageNumbers.get(i).indexOf(L),1),L.destroy(!0)},"onComplete")}]})}};N(LF,"DamageNumberHandler");let KG=LF;const NF=class NF extends Phaser.GameObjects.Container{constructor(){super(n,n.game.canvas.width/6,-(n.game.canvas.height/6)+15)}setup(){this.bg=n.add.nineslice(0,0,"party_exp_bar",void 0,8,18,21,5,6,4),this.bg.setOrigin(0,0),this.add(this.bg),this.candyIcon=n.add.sprite(14,0,"items","candy"),this.candyIcon.setOrigin(.5,0),this.candyIcon.setScale(.5),this.add(this.candyIcon),this.candyOverlayIcon=n.add.sprite(14,0,"items","candy_overlay"),this.candyOverlayIcon.setOrigin(.5,0),this.candyOverlayIcon.setScale(.5),this.add(this.candyOverlayIcon),this.countText=le(22,4,"",Q.BATTLE_INFO),this.countText.setOrigin(0,0),this.add(this.countText),this.setVisible(!1),this.shown=!1}showStarterSpeciesCandy(A,s){return new Promise(R=>{if(this.shown)return this.speciesId===A?R():this.hide().then(()=>this.showStarterSpeciesCandy(A,s)).then(()=>R());const a=TR[A];this.candyIcon.setTint(js(cs(a[0]))),this.candyOverlayIcon.setTint(js(cs(a[1]))),this.countText.setText(`${n.gameData.starterData[A].candyCount+s} (+${s.toString()})`),this.bg.width=this.countText.displayWidth+28,n.fieldUI.bringToTop(this),this.tween&&this.tween.stop(),n.playSound("se/shing"),this.tween=n.tweens.add({targets:this,x:n.game.canvas.width/6-(this.bg.width-5),duration:500,ease:"Sine.easeOut",onComplete:N(()=>{this.tween=null,this.resetAutoHideTimer(),R()},"onComplete")}),this.setVisible(!0),this.shown=!0})}hide(){return new Promise(A=>{if(!this.shown)return A();this.autoHideTimer&&clearInterval(this.autoHideTimer),this.tween&&this.tween.stop(),this.tween=n.tweens.add({targets:this,x:n.game.canvas.width/6,duration:500,ease:"Sine.easeIn",onComplete:N(()=>{this.tween=null,this.shown=!1,this.setVisible(!1),A()},"onComplete")})})}resetAutoHideTimer(){this.autoHideTimer&&clearInterval(this.autoHideTimer),this.autoHideTimer=setTimeout(()=>{this.hide(),this.autoHideTimer=null},2500)}};N(NF,"CandyBar");let mG=NF;const IJ={padID:"Generic",padType:"xbox",deviceMapping:{RC_S:0,RC_E:1,RC_W:2,RC_N:3,START:9,SELECT:8,LB:4,RB:5,LT:6,RT:7,LS:10,RS:11,LC_N:12,LC_S:13,LC_W:14,LC_E:15},icons:{RC_S:"XB_Letter_A_OL.png",RC_E:"XB_Letter_B_OL.png",RC_W:"XB_Letter_X_OL.png",RC_N:"XB_Letter_Y_OL.png",START:"START.png",SELECT:"SELECT.png",LB:"Bumper_L.png",RB:"Bumper_R.png",LT:"Trigger_L.png",RT:"Trigger_R.png",LS:"LS.png",RS:"RS.png",LC_N:"UP.png",LC_S:"DOWN.png",LC_W:"LEFT.png",LC_E:"RIGHT.png"},settings:{[Be.Button_Up]:k.UP,[Be.Button_Down]:k.DOWN,[Be.Button_Left]:k.LEFT,[Be.Button_Right]:k.RIGHT,[Be.Button_Action]:k.ACTION,[Be.Button_Cancel]:k.CANCEL,[Be.Button_Cycle_Nature]:k.CYCLE_NATURE,[Be.Button_Cycle_Variant]:k.V,[Be.Button_Menu]:k.MENU,[Be.Button_Stats]:k.STATS,[Be.Button_Cycle_Form]:k.CYCLE_FORM,[Be.Button_Cycle_Shiny]:k.CYCLE_SHINY,[Be.Button_Cycle_Gender]:k.CYCLE_GENDER,[Be.Button_Cycle_Ability]:k.CYCLE_ABILITY,[Be.Button_Speed_Up]:k.SPEED_UP,[Be.Button_Slow_Down]:k.SLOW_DOWN},default:{LC_N:Be.Button_Up,LC_S:Be.Button_Down,LC_W:Be.Button_Left,LC_E:Be.Button_Right,RC_S:Be.Button_Action,RC_E:Be.Button_Cancel,RC_W:Be.Button_Cycle_Nature,RC_N:Be.Button_Cycle_Variant,START:Be.Button_Menu,SELECT:Be.Button_Stats,LB:Be.Button_Cycle_Form,RB:Be.Button_Cycle_Shiny,LT:Be.Button_Cycle_Gender,RT:Be.Button_Cycle_Ability,LS:Be.Button_Speed_Up,RS:Be.Button_Slow_Down},blacklist:["LC_N","LC_S","LC_W","LC_E"]},aJ={padID:"Pro Controller",padType:"xbox",deviceMapping:{RC_S:1,RC_E:0,RC_W:3,RC_N:2,START:9,SELECT:8,LB:4,RB:5,LT:6,RT:7,LS:10,RS:11,LC_N:12,LC_S:13,LC_W:14,LC_E:15,MENU:16},icons:{RC_S:"XB_Letter_B_OL.png",RC_E:"XB_Letter_A_OL.png",RC_W:"XB_Letter_Y_OL.png",RC_N:"XB_Letter_X_OL.png",START:"START.png",SELECT:"SELECT.png",LB:"Bumper_L.png",RB:"Bumper_R.png",LT:"Trigger_L.png",RT:"Trigger_R.png",LS:"LS.png",RS:"RS.png",LC_N:"UP.png",LC_S:"DOWN.png",LC_W:"LEFT.png",LC_E:"RIGHT.png"},settings:{[Be.Button_Up]:k.UP,[Be.Button_Down]:k.DOWN,[Be.Button_Left]:k.LEFT,[Be.Button_Right]:k.RIGHT,[Be.Button_Action]:k.ACTION,[Be.Button_Cancel]:k.CANCEL,[Be.Button_Cycle_Nature]:k.CYCLE_NATURE,[Be.Button_Cycle_Variant]:k.V,[Be.Button_Menu]:k.MENU,[Be.Button_Stats]:k.STATS,[Be.Button_Cycle_Form]:k.CYCLE_FORM,[Be.Button_Cycle_Shiny]:k.CYCLE_SHINY,[Be.Button_Cycle_Gender]:k.CYCLE_GENDER,[Be.Button_Cycle_Ability]:k.CYCLE_ABILITY,[Be.Button_Speed_Up]:k.SPEED_UP,[Be.Button_Slow_Down]:k.SLOW_DOWN},default:{LC_N:Be.Button_Up,LC_S:Be.Button_Down,LC_W:Be.Button_Left,LC_E:Be.Button_Right,RC_S:Be.Button_Action,RC_E:Be.Button_Cancel,RC_W:Be.Button_Cycle_Nature,RC_N:Be.Button_Cycle_Variant,START:Be.Button_Menu,SELECT:Be.Button_Stats,LB:Be.Button_Cycle_Form,RB:Be.Button_Cycle_Shiny,LT:Be.Button_Cycle_Gender,RT:Be.Button_Cycle_Ability,LS:Be.Button_Speed_Up,RS:Be.Button_Slow_Down}},iJ="touchControlPositionsLandscape",rJ="touchControlPositionsPortrait",TF=class TF{constructor(A){this.draggingElement=null,this.configurationEventListeners={touchstart:[],touchmove:[],touchend:[]},this.isLandscapeMode=this.getScreenSize().width>this.getScreenSize().height,this.isLeft=s=>{var R;return(R=document.querySelector("#touchControls .left"))==null?void 0:R.contains(s)},this.startDrag=s=>{this.draggingElement=s},this.drag=s=>{if(!this.draggingElement)return;const R=this.draggingElement.getBoundingClientRect(),a=this.isLeft(this.draggingElement)?s.clientX-R.width/2:window.innerWidth-s.clientX-R.width/2,i=window.innerHeight-s.clientY-R.height/2;this.setPosition(this.draggingElement,a,i)},this.stopDrag=()=>{this.draggingElement=null},this.touchControls=A,this.inConfigurationMode=!1,this.setPositions(this.getSavedPositionsOfCurrentOrientation()??[]),window.addEventListener("resize",s=>{const R=this.getScreenSize();R.width>R.height!==this.isLandscapeMode&&this.changeOrientation(R.width>R.height)})}async changeOrientation(A){if(this.isLandscapeMode=A,this.inConfigurationMode){const R=document.querySelector("#touchControls #orientation");R&&(R.textContent=this.isLandscapeMode?"Landscape":"Portrait")}const s=this.getSavedPositionsOfCurrentOrientation()??[];this.setPositions(s)}getScreenSize(){return{width:window.screen.width,height:window.screen.height}}createToolbarElement(){const A=document.createElement("div");return A.id="configToolbar",A.innerHTML=`
      <div class="column">
        <div class="button-row">
          <div id="resetButton" class="button">Reset</div>
          <div id="saveButton" class="button">Save & close</div>
          <div id="cancelButton" class="button">Cancel</div>
        </div>
        <div class="info-row">
          <div class="orientation-label"> 
            Orientation: <span id="orientation">${this.isLandscapeMode?"Landscape":"Portrait"}</span>
          </div>
        </div>
      </div>
    `,A}createToolbar(){var i;(i=document.querySelector("#touchControls"))==null||i.prepend(this.createToolbarElement());const A=this.getConfigToolbarRefs();if(!A)return;const{saveButton:s,resetButton:R,cancelButton:a}=A;s.addEventListener("click",()=>{this.saveCurrentPositions(),this.disableConfigurationMode()}),R.addEventListener("click",()=>{this.resetPositions()}),a.addEventListener("click",()=>{const r=this.getSavedPositionsOfCurrentOrientation();this.setPositions(r),this.disableConfigurationMode()})}getConfigToolbarRefs(){const A=document.querySelector("#touchControls #configToolbar");if(A)return{toolbar:A,saveButton:A.querySelector("#saveButton"),resetButton:A.querySelector("#resetButton"),cancelButton:A.querySelector("#cancelButton")}}getModifiedCurrentPositions(){return this.getControlGroupElements().filter(A=>A.style.right||A.style.left).map(A=>({id:A.id,x:parseFloat(this.isLeft(A)?A.style.left:A.style.right),y:parseFloat(A.style.bottom)}))}getLocalStorageKey(){return this.isLandscapeMode?iJ:rJ}getSavedPositionsOfCurrentOrientation(){const A=localStorage.getItem(this.getLocalStorageKey());return A?JSON.parse(A):[]}saveCurrentPositions(){const A=this.getModifiedCurrentPositions();localStorage.setItem(this.getLocalStorageKey(),JSON.stringify(A))}setPositions(A){return this.resetPositions(),A.forEach(s=>{const R=document.querySelector(`#${s.id}`);this.setPosition(R,s.x,s.y)})}setPosition(A,s,R){const a=A.getBoundingClientRect(),i=N((o,l,C)=>Math.min(Math.max(o,l),C),"checkBound"),{height:r,width:L}=this.getScreenSize();s=i(s,0,L-a.width),R=i(R,0,r-a.height),this.isLeft(A)?A.style.left=`${s}px`:A.style.right=`${s}px`,A.style.bottom=`${R}px`}resetPositions(){this.getControlGroupElements().forEach(A=>{A.style.removeProperty("left"),A.style.removeProperty("right"),A.style.removeProperty("bottom")})}getControlGroupElements(){return[...document.querySelectorAll("#touchControls .control-group")]}createConfigurationEventListeners(A){return{touchstart:A.map(s=>{const R=N(()=>this.startDrag(s),"startDrag");return s.addEventListener("touchstart",R,{passive:!0}),R}),touchmove:A.map(()=>{const s=N(R=>this.drag(R.touches[0]),"drag");return window.addEventListener("touchmove",s,{passive:!0}),s}),touchend:A.map(()=>{const s=N(()=>this.stopDrag(),"stopDrag");return window.addEventListener("touchend",s,{passive:!0}),s})}}createOverlay(A){var a;const s=new Phaser.GameObjects.Container(n,0,0),R=new Phaser.GameObjects.Rectangle(n,0,0,n.game.canvas.width,n.game.canvas.height,0,.5);R.setInteractive(),s.add(R),A.add(s),this.overlay=s,(a=document.querySelector("#touchControls"))==null||a.classList.add("config-mode")}enableConfigurationMode(A){this.inConfigurationMode||(this.inConfigurationMode=!0,this.touchControls.disable(),this.createOverlay(A),this.createToolbar(),setTimeout(()=>{this.configurationEventListeners=this.createConfigurationEventListeners(this.getControlGroupElements())},500))}disableConfigurationMode(){var i,r;this.inConfigurationMode=!1,this.draggingElement=null;const{touchstart:A,touchmove:s,touchend:R}=this.configurationEventListeners;this.getControlGroupElements().forEach((L,o)=>L.removeEventListener("touchstart",A[o])),s.forEach(L=>window.removeEventListener("touchmove",L)),R.forEach(L=>window.removeEventListener("touchend",L));const a=document.querySelector("#touchControls #configToolbar");a==null||a.remove(),(i=this.overlay)==null||i.destroy(),(r=document.querySelector("#touchControls"))==null||r.classList.remove("config-mode"),this.touchControls.enable()}};N(TF,"MoveTouchControlsHandler");let FG=TF;const S6=250,SF=class SF{constructor(){this.gamepads=new Array,this.buttonLock=new Array,this.interactions=new Map,this.configs=new Map,this.gamepadSupport=!0,this.disconnectedGamepads=new Array,this.lastSource="keyboard",this.inputInterval=new Array,this.selectedDevice={[IA.GAMEPAD]:null,[IA.KEYBOARD]:"default"};for(const A of DE(k))this.interactions[A]={pressTime:!1,isPressed:!1,source:null};delete this.interactions[k.MENU],delete this.interactions[k.STATS],this.init()}init(){var A,s,R,a,i,r,L,o;if(this.events=n.game.events,n.game.events.on(sE.Core.Events.BLUR,()=>{this.loseFocus()}),typeof n.input.gamepad<"u"){if((A=n.input.gamepad)==null||A.on("connected",function(l){l&&(this.refreshGamepads(),this.setupGamepad(l),this.onReconnect(l))},this),(s=n.input.gamepad)==null||s.on("disconnected",function(l){this.onDisconnect(l)},this),(R=n.input.gamepad)==null||R.refreshPads(),(a=n.input.gamepad)!=null&&a.total){this.refreshGamepads();for(const l of this.gamepads)n.input.gamepad.emit("connected",l)}(i=n.input.gamepad)==null||i.on("down",this.gamepadButtonDown,this),(r=n.input.gamepad)==null||r.on("up",this.gamepadButtonUp,this),(L=n.input.keyboard)==null||L.on("keydown",this.keyboardKeyDown,this),(o=n.input.keyboard)==null||o.on("keyup",this.keyboardKeyUp,this)}this.touchControls=new D7,this.moveTouchControlsHandler=new FG(this.touchControls)}loseFocus(){this.deactivatePressedKey(),this.touchControls.deactivatePressedKey()}setGamepadSupport(A){A?this.gamepadSupport=!0:(this.gamepadSupport=!1,this.deactivatePressedKey())}setChosenGamepad(A){this.deactivatePressedKey(),this.initChosenGamepad(A)}setChosenKeyboardLayout(A){this.deactivatePressedKey(),this.initChosenLayoutKeyboard(A)}getGamepadsName(){return this.gamepads.filter(A=>!this.disconnectedGamepads.includes(A.id)).map(A=>A.id)}initChosenGamepad(A){var R;A&&(this.selectedDevice[IA.GAMEPAD]=A.toLowerCase());const s=(R=n.ui)==null?void 0:R.handlers[Ie.SETTINGS_GAMEPAD];s&&s.updateChosenGamepadDisplay()}initChosenLayoutKeyboard(A){var R;A&&(this.selectedDevice[IA.KEYBOARD]=A.toLowerCase());const s=(R=n.ui)==null?void 0:R.handlers[Ie.SETTINGS_KEYBOARD];s&&s.updateChosenKeyboardDisplay()}onDisconnect(A){this.disconnectedGamepads.push(A.id)}onReconnect(A){this.disconnectedGamepads=this.disconnectedGamepads.filter(s=>s!==A.id)}setupGamepad(A){var a,i,r;const s=this.getGamepadsName();for(const L of s){const o=L.toLowerCase();this.selectedDevice[IA.GAMEPAD]||this.setChosenGamepad(o);const l=I_(this.getConfig(o));l.custom=((a=this.configs[o])==null?void 0:a.custom)||{...l.default},this.configs[o]=l,(i=n.gameData)==null||i.saveMappingConfigs(o,this.configs[o])}this.lastSource="gamepad";const R=(r=n.ui)==null?void 0:r.handlers[Ie.SETTINGS_GAMEPAD];R&&R.updateChosenGamepadDisplay()}setupKeyboard(){var A,s;for(const R of["default"]){const a=I_(this.getConfigKeyboard(R));a.custom=((A=this.configs[R])==null?void 0:A.custom)||{...a.default},this.configs[R]=a,(s=n.gameData)==null||s.saveMappingConfigs(this.selectedDevice[IA.KEYBOARD],this.configs[R])}this.initChosenLayoutKeyboard(this.selectedDevice[IA.KEYBOARD])}refreshGamepads(){var A;this.gamepads=((A=n.input.gamepad)==null?void 0:A.gamepads.filter(function(s){return s!==null}))??[];for(const[s,R]of this.gamepads.entries())R.index=s}ensureKeyboardIsInit(){var A;(A=this.getActiveConfig(IA.KEYBOARD))!=null&&A.padID||this.setupKeyboard()}keyboardKeyDown(A){this.lastSource="keyboard",this.ensureKeyboardIsInit();const s=Nl(this.getActiveConfig(IA.KEYBOARD),A.keyCode);if(s!==void 0){if(this.buttonLock.includes(s))return;this.events.emit("input_down",{controller_type:"keyboard",button:s}),clearInterval(this.inputInterval[s]),this.inputInterval[s]=setInterval(()=>{this.events.emit("input_down",{controller_type:"keyboard",button:s})},S6),this.buttonLock.push(s)}}keyboardKeyUp(A){this.lastSource="keyboard";const s=Nl(this.getActiveConfig(IA.KEYBOARD),A.keyCode);if(s!==void 0){this.events.emit("input_up",{controller_type:"keyboard",button:s});const R=this.buttonLock.indexOf(s);this.buttonLock.splice(R,1),clearInterval(this.inputInterval[s])}}gamepadButtonDown(A,s,R){var r;if((r=this.configs[this.selectedDevice[IA.KEYBOARD]])!=null&&r.padID||this.setupKeyboard(),!A||(this.lastSource="gamepad",(!this.selectedDevice[IA.GAMEPAD]||n.ui.getMode()!==Ie.GAMEPAD_BINDING&&this.selectedDevice[IA.GAMEPAD]!==A.id.toLowerCase())&&this.setChosenGamepad(A.id),!this.gamepadSupport||A.id.toLowerCase()!==this.selectedDevice[IA.GAMEPAD].toLowerCase()))return;const a=this.getActiveConfig(IA.GAMEPAD),i=a&&Nl(a,s.index);if(i!==void 0){if(this.buttonLock.includes(i))return;this.events.emit("input_down",{controller_type:"gamepad",button:i}),clearInterval(this.inputInterval[i]),this.inputInterval[i]=setInterval(()=>{if(!this.buttonLock.includes(i)){clearInterval(this.inputInterval[i]);return}this.events.emit("input_down",{controller_type:"gamepad",button:i})},S6),this.buttonLock.push(i)}}gamepadButtonUp(A,s,R){if(!A||(this.lastSource="gamepad",!this.gamepadSupport||A.id.toLowerCase()!==this.selectedDevice[IA.GAMEPAD]))return;const a=Nl(this.getActiveConfig(IA.GAMEPAD),s.index);if(a!==void 0){this.events.emit("input_up",{controller_type:"gamepad",button:a});const i=this.buttonLock.indexOf(a);this.buttonLock.splice(i,1),clearInterval(this.inputInterval[a])}}getConfig(A){return A=A.toLowerCase(),A.includes("081f")&&A.includes("e401")?F8:A.includes("xbox")&&A.includes("360")?K8:A.includes("054c")?m8:A.includes("057e")&&A.includes("2009")?aJ:IJ}getConfigKeyboard(A){return lG}deactivatePressedKey(){for(const A of Object.keys(this.inputInterval))clearInterval(this.inputInterval[A]);this.buttonLock=[]}getActiveConfig(A){var s;return(s=this.configs[this.selectedDevice[A]])!=null&&s.padID?this.configs[this.selectedDevice[A]]:null}getIconForLatestInputRecorded(A){return this.lastSource==="keyboard"&&this.ensureKeyboardIsInit(),WQ(this.configs,this.lastSource,this.selectedDevice,A)}getLastSourceDevice(){return this.lastSource==="gamepad"?IA.GAMEPAD:IA.KEYBOARD}getLastSourceConfig(){const A=this.getLastSourceDevice();return A===IA.KEYBOARD&&this.ensureKeyboardIsInit(),this.getActiveConfig(A)}getLastSourceType(){const A=this.getLastSourceConfig();return A==null?void 0:A.padType}injectConfig(A,s){this.configs[A]||(this.configs[A]={}),this.configs[A].custom=s.custom}resetConfigs(){var A;this.configs=new Map,(A=this.getGamepadsName())!=null&&A.length&&this.setupGamepad(this.selectedDevice[IA.GAMEPAD]),this.setupKeyboard()}assignBinding(A,s,R){return this.deactivatePressedKey(),A.padType==="keyboard"?YQ(A,s,R):yQ(A,s,R)}};N(SF,"InputsController");let pG=SF;const oF=class oF{constructor(A){this.inputsController=A,this.init()}init(){this.events=this.inputsController.events,this.listenInputs()}detectInputMethod(A){A.controller_type==="keyboard"?A.hasOwnProperty("isTouch")&&A.isTouch?n.inputMethod="touch":n.inputMethod="keyboard":A.controller_type==="gamepad"&&(n.inputMethod="gamepad")}listenInputs(){this.events.on("input_down",A=>{this.detectInputMethod(A);const s=this.getActionsKeyDown();s.hasOwnProperty(A.button)&&s[A.button]()},this),this.events.on("input_up",A=>{const s=this.getActionsKeyUp();s.hasOwnProperty(A.button)&&s[A.button]()},this)}doVibration(A,s){A&&n.enableVibration&&typeof navigator.vibrate<"u"&&navigator.vibrate(s)}getActionsKeyDown(){return{[k.UP]:()=>this.buttonDirection(k.UP),[k.DOWN]:()=>this.buttonDirection(k.DOWN),[k.LEFT]:()=>this.buttonDirection(k.LEFT),[k.RIGHT]:()=>this.buttonDirection(k.RIGHT),[k.SUBMIT]:()=>this.buttonTouch(),[k.ACTION]:()=>this.buttonAb(k.ACTION),[k.CANCEL]:()=>this.buttonAb(k.CANCEL),[k.MENU]:()=>this.buttonMenu(),[k.STATS]:()=>this.buttonGoToFilter(k.STATS),[k.CYCLE_SHINY]:()=>this.buttonCycleOption(k.CYCLE_SHINY),[k.CYCLE_FORM]:()=>this.buttonCycleOption(k.CYCLE_FORM),[k.CYCLE_GENDER]:()=>this.buttonCycleOption(k.CYCLE_GENDER),[k.CYCLE_ABILITY]:()=>this.buttonCycleOption(k.CYCLE_ABILITY),[k.CYCLE_NATURE]:()=>this.buttonCycleOption(k.CYCLE_NATURE),[k.V]:()=>this.buttonCycleOption(k.V),[k.SPEED_UP]:()=>this.buttonSpeedChange(),[k.SLOW_DOWN]:()=>this.buttonSpeedChange(!1)}}getActionsKeyUp(){return{[k.UP]:()=>{},[k.DOWN]:()=>{},[k.LEFT]:()=>{},[k.RIGHT]:()=>{},[k.SUBMIT]:()=>{},[k.ACTION]:()=>{},[k.CANCEL]:()=>{},[k.MENU]:()=>{},[k.STATS]:()=>this.buttonStats(!1),[k.CYCLE_SHINY]:()=>{},[k.CYCLE_FORM]:()=>{},[k.CYCLE_GENDER]:()=>{},[k.CYCLE_ABILITY]:()=>{},[k.CYCLE_NATURE]:()=>{},[k.V]:()=>this.buttonInfo(!1),[k.SPEED_UP]:()=>{},[k.SLOW_DOWN]:()=>{}}}buttonDirection(A){const s=n.ui.processInput(A);this.doVibration(s,5)}buttonAb(A){n.ui.processInput(A)}buttonTouch(){n.ui.processInput(k.SUBMIT)||n.ui.processInput(k.ACTION)}buttonStats(A=!0){for(const s of n.getInfoToggles(!0))s.toggleInfo(A);for(const s of n.getField().filter(R=>R==null?void 0:R.isActive(!0)))s.toggleStats(A)}buttonGoToFilter(A){var a;const s=[oS],R=(a=n.ui)==null?void 0:a.getHandler();s.some(i=>R instanceof i)?n.ui.processInput(A):this.buttonStats(!0)}buttonInfo(A=!0){if(n.showMovesetFlyout)for(const s of n.getField().filter(R=>R==null?void 0:R.isActive(!0)))s.toggleFlyout(A);n.showArenaFlyout&&n.ui.processInfoButton(A)}buttonMenu(){var A;if(!n.disableMenu)switch((A=n.ui)==null?void 0:A.getMode()){case Ie.MESSAGE:const s=n.ui.getHandler();if(!s.pendingPrompt||s.isTextAnimationInProgress())return;case Ie.TITLE:case Ie.COMMAND:case Ie.MODIFIER_SELECT:case Ie.MYSTERY_ENCOUNTER:n.ui.setOverlayMode(Ie.MENU);break;case Ie.STARTER_SELECT:this.buttonTouch();break;case Ie.MENU:n.ui.revertMode(),n.playSound("ui/select");break;default:return}}buttonCycleOption(A){var a;const s=[oS,VC,lC,JC,$C,kC,QC],R=(a=n.ui)==null?void 0:a.getHandler();s.some(i=>R instanceof i)?n.ui.processInput(A):A===k.V&&this.buttonInfo(!0)}buttonSpeedChange(A=!0){var R,a;const s=q6(It.Game_Speed);A&&n.gameSpeed<5?(n.gameData.saveSetting(It.Game_Speed,YA[s].options.findIndex(i=>i.label===`${n.gameSpeed}x`)+1),((R=n.ui)==null?void 0:R.getMode())===Ie.SETTINGS&&n.ui.getHandler().show([])):!A&&n.gameSpeed>1&&(n.gameData.saveSetting(It.Game_Speed,Math.max(YA[s].options.findIndex(i=>i.label===`${n.gameSpeed}x`)-1,0)),((a=n.ui)==null?void 0:a.getMode())===Ie.SETTINGS&&n.ui.getHandler().show([]))}};N(oF,"UiInputs");let WG=oF;const lF=class lF extends Phaser.GameObjects.Container{constructor(A=0,s=0){super(n,A,s),this.timeOfDayIconFgs=new Array(2),this.timeOfDayIconMgs=new Array(2),this.timeOfDayIconBgs=new Array(2),this.timeOfDayIconPairs=new Map([["bg",this.timeOfDayIconBgs],["mg",this.timeOfDayIconMgs],["fg",this.timeOfDayIconFgs]]),this.currentTime=S.ALL,this.previousTime=S.ALL,this.onEncounterPhaseEvent=R=>this.onEncounterPhase(R),this.setVisible(n.showTimeOfDayWidget),n.showTimeOfDayWidget&&(this.timeOfDayIconPairs.forEach((R,a)=>{for(let i=0;i<R.length;i++)R[i]=n.add.sprite(0,0,"dawn_icon_"+a).setOrigin()}),this.timeOfDayIcons=[this.timeOfDayIconBgs,this.timeOfDayIconMgs,this.timeOfDayIconFgs].flat(),this.add(this.timeOfDayIcons),n.eventTarget.addEventListener(kO.ENCOUNTER_PHASE,this.onEncounterPhaseEvent))}get parentVisible(){return this._parentVisible}set parentVisible(A){var s;A&&!this._parentVisible&&((s=this.timeOfDayIcons)==null||s.forEach(R=>n.tweens.getTweensOf(R).forEach(a=>a.resume()))),this._parentVisible=A}getBackTween(){const A={targets:[this.timeOfDayIconMgs[0],this.timeOfDayIconMgs[1]],angle:"+=90",duration:st(1500),ease:"Back.easeOut",paused:!this.parentVisible},s={targets:[this.timeOfDayIconBgs[1],this.timeOfDayIconMgs[1],this.timeOfDayIconFgs[1]],alpha:0,duration:st(500),ease:"Linear",paused:!this.parentVisible};return[A,s]}getBounceTween(){const A={targets:[this.timeOfDayIconMgs[0],this.timeOfDayIconMgs[1]],angle:"+=90",duration:st(2e3),ease:"Bounce.easeOut",paused:!this.parentVisible},s={targets:[this.timeOfDayIconBgs[1],this.timeOfDayIconMgs[1],this.timeOfDayIconFgs[1]],alpha:0,duration:st(800),ease:"Linear",paused:!this.parentVisible};return[A,s]}resetIcons(){this.moveBelow(this.timeOfDayIconBgs[0],this.timeOfDayIconBgs[1]),this.moveBelow(this.timeOfDayIconMgs[0],this.timeOfDayIconBgs[1]),this.moveBelow(this.timeOfDayIconFgs[0],this.timeOfDayIconFgs[1]),this.timeOfDayIconPairs.forEach((A,s)=>{A[0].setTexture(S[this.currentTime].toLowerCase()+"_icon_"+s),A[1].setTexture(S[this.previousTime].toLowerCase()+"_icon_"+s)}),this.timeOfDayIconMgs[0].setRotation(-90*(3.14/180)),this.timeOfDayIcons.forEach(A=>A.setAlpha(1))}tweenTimeOfDayIcon(){n.tweens.killTweensOf(this.timeOfDayIcons),this.resetIcons(),(n.timeOfDayAnimation===$T.BACK?this.getBackTween():this.getBounceTween()).forEach(A=>n.tweens.add(A)),this.timeOfDayIconPairs.forEach(A=>{const s=A.shift();s&&A.push(s)})}onEncounterPhase(A){const s=n.arena.getTimeOfDay();this.currentTime!==s&&(this.currentTime=s,this.previousTime=this.currentTime-1,this.previousTime<S.DAWN&&(this.previousTime=S.NIGHT),this.tweenTimeOfDayIcon())}};N(lF,"TimeOfDayWidget");let YG=lF;function Q0(E){if(!E||E===ge.NONE)return E;const s=`arenaFlyout:${M7(E)}`,R=u.t(s);return!R||R===s?Kl(E):R}N(Q0,"getFieldEffectText");const CF=class CF extends Phaser.GameObjects.Container{constructor(){super(n,0,0),this.flyoutWidth=170,this.flyoutHeight=51,this.fieldEffectInfo=[],this.onNewArenaEvent=A=>this.onNewArena(A),this.onTurnEndEvent=A=>this.onTurnEnd(A),this.onFieldEffectChangedEvent=A=>this.onFieldEffectChanged(A),this.setName("arena-flyout"),this.translationX=this.flyoutWidth,this.anchorX=0,this.anchorY=-98,this.flyoutParent=n.add.container(this.anchorX-this.translationX,this.anchorY),this.flyoutParent.setAlpha(0),this.add(this.flyoutParent),this.flyoutContainer=n.add.container(0,0),this.flyoutParent.add(this.flyoutContainer),this.flyoutWindow=Gt(0,0,this.flyoutWidth,this.flyoutHeight,!1,!1,0,0,sO.THIN),this.flyoutContainer.add(this.flyoutWindow),this.flyoutWindowHeader=Gt(this.flyoutWidth/2,0,this.flyoutWidth/2,14,!1,!1,0,0,sO.XTHIN),this.flyoutWindowHeader.setOrigin(),this.flyoutContainer.add(this.flyoutWindowHeader),this.flyoutTextHeader=le(this.flyoutWidth/2,0,u.t("arenaFlyout:activeBattleEffects"),Q.BATTLE_INFO),this.flyoutTextHeader.setFontSize(54),this.flyoutTextHeader.setAlign("center"),this.flyoutTextHeader.setOrigin(),this.flyoutContainer.add(this.flyoutTextHeader),this.timeOfDayWidget=new YG(this.flyoutWidth/2+this.flyoutWindowHeader.displayWidth/2),this.flyoutContainer.add(this.timeOfDayWidget),this.flyoutTextHeaderPlayer=le(6,5,u.t("arenaFlyout:player"),Q.SUMMARY_BLUE),this.flyoutTextHeaderPlayer.setFontSize(54),this.flyoutTextHeaderPlayer.setAlign("left"),this.flyoutTextHeaderPlayer.setOrigin(0,0),this.flyoutContainer.add(this.flyoutTextHeaderPlayer),this.flyoutTextHeaderField=le(this.flyoutWidth/2,5,u.t("arenaFlyout:neutral"),Q.SUMMARY_GREEN),this.flyoutTextHeaderField.setFontSize(54),this.flyoutTextHeaderField.setAlign("center"),this.flyoutTextHeaderField.setOrigin(.5,0),this.flyoutContainer.add(this.flyoutTextHeaderField),this.flyoutTextHeaderEnemy=le(this.flyoutWidth-6,5,u.t("arenaFlyout:enemy"),Q.SUMMARY_RED),this.flyoutTextHeaderEnemy.setFontSize(54),this.flyoutTextHeaderEnemy.setAlign("right"),this.flyoutTextHeaderEnemy.setOrigin(1,0),this.flyoutContainer.add(this.flyoutTextHeaderEnemy),this.flyoutTextPlayer=le(6,13,"",Q.BATTLE_INFO),this.flyoutTextPlayer.setLineSpacing(-1),this.flyoutTextPlayer.setFontSize(48),this.flyoutTextPlayer.setAlign("left"),this.flyoutTextPlayer.setOrigin(0,0),this.flyoutContainer.add(this.flyoutTextPlayer),this.flyoutTextField=le(this.flyoutWidth/2,13,"",Q.BATTLE_INFO),this.flyoutTextField.setLineSpacing(-1),this.flyoutTextField.setFontSize(48),this.flyoutTextField.setAlign("center"),this.flyoutTextField.setOrigin(.5,0),this.flyoutContainer.add(this.flyoutTextField),this.flyoutTextEnemy=le(this.flyoutWidth-6,13,"",Q.BATTLE_INFO),this.flyoutTextEnemy.setLineSpacing(-1),this.flyoutTextEnemy.setFontSize(48),this.flyoutTextEnemy.setAlign("right"),this.flyoutTextEnemy.setOrigin(1,0),this.flyoutContainer.add(this.flyoutTextEnemy),this.name="Fight Flyout",this.flyoutParent.name="Fight Flyout Parent",n.eventTarget.addEventListener(kO.NEW_ARENA,this.onNewArenaEvent),n.eventTarget.addEventListener(kO.TURN_END,this.onTurnEndEvent)}onNewArena(A){this.fieldEffectInfo.length=0,n.arena.eventTarget.addEventListener(Bn.WEATHER_CHANGED,this.onFieldEffectChangedEvent),n.arena.eventTarget.addEventListener(Bn.TERRAIN_CHANGED,this.onFieldEffectChangedEvent),n.arena.eventTarget.addEventListener(Bn.TAG_ADDED,this.onFieldEffectChangedEvent),n.arena.eventTarget.addEventListener(Bn.TAG_REMOVED,this.onFieldEffectChangedEvent)}clearText(){this.flyoutTextPlayer.text="",this.flyoutTextField.text="",this.flyoutTextEnemy.text=""}updateFieldText(){this.clearText(),this.fieldEffectInfo.sort((A,s)=>A.duration-s.duration);for(let A=0;A<this.fieldEffectInfo.length;A++){const s=this.fieldEffectInfo[A];let R;switch(s.effecType){case 0:R=this.flyoutTextPlayer;break;case 1:case 2:case 3:R=this.flyoutTextField;break;case 4:R=this.flyoutTextEnemy;break}R.text+=s.name,s.maxDuration!==0&&(R.text+="  "+s.duration+"/"+s.maxDuration),R.text+=`
`}}onFieldEffectChanged(A){const s=A;if(!s)return;let R;switch(s.constructor){case Ai:const a=s,i=n.arena.getTag(a.arenaTagType)instanceof nO;let r;a.arenaTagSide===St.BOTH?r=3:a.arenaTagSide===St.PLAYER?r=0:r=4;const L=i?this.fieldEffectInfo.findIndex(_=>a.arenaTagType===_.tagType&&r===_.effecType):-1;let o=Q0(ge[a.arenaTagType]);if(i)if(L!==-1){const _=a.arenaTagMaxLayers>1?` (${a.arenaTagLayers})`:"";this.fieldEffectInfo[L].name=`${o}${_}`;break}else a.arenaTagMaxLayers>1&&(o=`${o} (${a.arenaTagLayers})`);this.fieldEffectInfo.push({name:o,effecType:r,maxDuration:a.duration,duration:a.duration,tagType:a.arenaTagType});break;case Ba:const l=s;R=this.fieldEffectInfo.findIndex(_=>_.tagType===l.arenaTagType),R!==-1&&this.fieldEffectInfo.splice(R,1);break;case FI:case zT:const C=s,M=Q0(C instanceof FI?Oe[C.oldWeatherType]:Tt[C.oldTerrainType]),D={name:Q0(C instanceof FI?Oe[C.newWeatherType]:Tt[C.newTerrainType]),effecType:C instanceof FI?1:2,maxDuration:C.duration,duration:C.duration};R=this.fieldEffectInfo.findIndex(_=>[D.name,M].includes(_.name)),R===-1?D.name!==void 0&&this.fieldEffectInfo.push(D):D.name?this.fieldEffectInfo[R]=D:this.fieldEffectInfo.splice(R,1);break}this.updateFieldText()}onTurnEnd(A){if(!A)return;const R=[];this.fieldEffectInfo.forEach(a=>R.push(a));for(let a=0;a<R.length;a++){const i=R[a];i.maxDuration!==0&&(--i.duration,i.duration<=0&&this.fieldEffectInfo.splice(this.fieldEffectInfo.indexOf(i),1))}this.updateFieldText()}toggleFlyout(A){n.tweens.add({targets:this.flyoutParent,x:A?this.anchorX:this.anchorX-this.translationX,duration:st(125),ease:"Sine.easeInOut",alpha:A?1:0,onComplete:N(()=>this.timeOfDayWidget.parentVisible=A,"onComplete")})}destroy(A){n.eventTarget.removeEventListener(kO.NEW_ARENA,this.onNewArenaEvent),n.eventTarget.removeEventListener(kO.TURN_END,this.onTurnEndEvent),n.arena.eventTarget.removeEventListener(Bn.WEATHER_CHANGED,this.onFieldEffectChangedEvent),n.arena.eventTarget.removeEventListener(Bn.TERRAIN_CHANGED,this.onFieldEffectChangedEvent),n.arena.eventTarget.removeEventListener(Bn.TAG_ADDED,this.onFieldEffectChangedEvent),n.arena.eventTarget.removeEventListener(Bn.TAG_REMOVED,this.onFieldEffectChangedEvent),super.destroy(A)}};N(CF,"ArenaFlyout");let yG=CF;const UF=class UF extends qO{constructor(){super()}start(){super.start(),n.ui.setMode(Ie.MESSAGE).then(()=>{n.playSound("level_up_fanfare"),n.ui.showText(u.t("battle:levelCapUp",{levelCap:n.getMaxExpLevel()}),null,()=>this.end(),null,!0),this.executeForAll(A=>A.updateInfo(!0))})}};N(UF,"LevelCapPhase");let wG=UF;const uF=class uF extends aE{constructor(){super()}start(){super.start(),n.ui.showText(u.t("menu:boyOrGirl"),null,()=>{n.ui.setMode(Ie.OPTION_SELECT,{options:[{label:u.t("settings:boy"),handler:N(()=>(n.gameData.gender=Vt.MALE,n.gameData.saveSetting(It.Player_Gender,0),n.gameData.saveSystem().then(()=>this.end()),!0),"handler")},{label:u.t("settings:girl"),handler:N(()=>(n.gameData.gender=Vt.FEMALE,n.gameData.saveSetting(It.Player_Gender,1),n.gameData.saveSystem().then(()=>this.end()),!0),"handler")}]})})}end(){n.ui.setMode(Ie.MESSAGE),super.end()}};N(uF,"SelectGenderPhase");let vG=uF;const DF=class DF extends aE{constructor(){super()}start(){n.ui.setMode(Ie.UNAVAILABLE,()=>{n.unshiftPhase(new jC(!0)),this.end()})}};N(DF,"UnavailablePhase");let VG=DF;const nM=class nM extends aE{constructor(A){super(),this.showText=A===void 0||!!A}start(){super.start(),_7(fL),n.ui.setMode(Ie.LOADING,{buttonActions:[]}),Pr(Us,ka).then(A=>{const s=A?A[0]:!1,R=A?A[1]:null;if(s)n.gameData.loadSystem().then(a=>{a||Us?this.end():(n.ui.setMode(Ie.MESSAGE),n.ui.showText(P7("menu:failedToLoadSaveData")))});else{if(!R||R===400){this.showText&&n.ui.showText(u.t("menu:logInOrCreateAccount")),n.playSound("menu_open");const a=N(()=>{ka().then(i=>{if(!i[0]){Pl(fL),n.reset(!0,!0);return}n.gameData.loadSystem().then(()=>this.end())})},"loadData");n.ui.setMode(Ie.LOGIN_FORM,{buttonActions:[()=>{n.ui.playSelect(),a()},()=>{n.playSound("menu_open"),n.ui.setMode(Ie.REGISTRATION_FORM,{buttonActions:[()=>{n.ui.playSelect(),ka().then(i=>{if(!i[0]){Pl(fL),n.reset(!0,!0);return}this.end()})},()=>{n.unshiftPhase(new nM(!1)),this.end()}]})},()=>{const L=`https://discord.com/api/oauth2/authorize?client_id=1234567890&redirect_uri=${encodeURIComponent("http://localhost:8001/auth/discord/callback")}&response_type=code&scope=identify&prompt=none`;window.open(L,"_self")},()=>{const L=`https://accounts.google.com/o/oauth2/auth?client_id=1234567890&redirect_uri=${encodeURIComponent("http://localhost:8001/auth/google/callback")}&response_type=code&scope=openid`;window.open(L,"_self")}]})}else R===401?(Pl(fL),n.reset(!0,!0)):(n.unshiftPhase(new VG),super.end());return null}})}end(){n.ui.setMode(Ie.MESSAGE),n.gameData.gender||n.unshiftPhase(new vG),VI(tO.Intro).then(()=>super.end())}};N(nM,"LoginPhase");let jC=nM;const IM=class IM extends aE{constructor(A,s,R,a,i){super(),this.text=A,this.callbackDelay=s,this.prompt=R,this.promptDelay=a,this.speaker=i}start(){if(super.start(),this.text.indexOf("$")>-1){const A=this.text.indexOf("$");n.unshiftPhase(new IM(this.text.slice(A+1),this.callbackDelay,this.prompt,this.promptDelay,this.speaker)),this.text=this.text.slice(0,A).trim()}this.speaker?n.ui.showDialogue(this.text,this.speaker,null,()=>this.end(),this.callbackDelay||(this.prompt?0:1500),this.promptDelay??0):n.ui.showText(this.text,null,()=>this.end(),this.callbackDelay||(this.prompt?0:1500),this.prompt,this.promptDelay)}end(){n.abilityBar.shown&&n.abilityBar.hide(),super.end()}};N(IM,"MessagePhase");let xG=IM;const MF=class MF extends gr{constructor(){super()}start(){super.start()}doEncounter(){var i,r;n.playBgm(void 0,!0);for(const L of n.getPlayerParty())L&&L.resetBattleData();n.arenaNextEnemy.setBiome(n.arena.biomeType),n.arenaNextEnemy.setVisible(!0);const A=n.getEnemyField(),s=[n.arenaEnemy,n.arenaNextEnemy,n.currentBattle.trainer,A,n.lastEnemyTrainer],R=(i=n.lastMysteryEncounter)==null?void 0:i.introVisuals;R&&s.push(R);const a=(r=n.currentBattle.mysteryEncounter)==null?void 0:r.introVisuals;a&&(a.enterFromRight?(a.x+=500,n.tweens.add({targets:a,x:"-=200",duration:2e3})):s.push(a)),n.tweens.add({targets:s.flat(),x:"+=300",duration:2e3,onComplete:N(()=>{n.arenaEnemy.setBiome(n.arena.biomeType),n.arenaEnemy.setX(n.arenaNextEnemy.x),n.arenaEnemy.setAlpha(1),n.arenaNextEnemy.setX(n.arenaNextEnemy.x-300),n.arenaNextEnemy.setVisible(!1),n.lastEnemyTrainer&&n.lastEnemyTrainer.destroy(),R&&(n.field.remove(R,!0),n.lastMysteryEncounter.introVisuals=void 0),this.tryOverrideForBattleSpec()||this.doEncounterCommon()},"onComplete")})}trySetWeatherIfNewBiome(){}};N(MF,"NextEncounterPhase");let eU=MF;const _F=class _F extends eU{constructor(){super()}doEncounter(){var a,i;n.playBgm(void 0,!0);for(const r of n.getPlayerParty())r&&(r.resetBattleData(),r.customPokemonData.resetHitReceivedCount());for(const r of n.getPlayerParty().filter(L=>L.isOnField()))ut(pS,r,null);const A=n.getEnemyField(),s=[n.arenaEnemy,A],R=(i=(a=n.currentBattle)==null?void 0:a.mysteryEncounter)==null?void 0:i.introVisuals;R&&s.push(R),n.tweens.add({targets:s.flat(),x:"+=300",duration:2e3,onComplete:N(()=>{this.tryOverrideForBattleSpec()||this.doEncounterCommon()},"onComplete")})}trySetWeatherIfNewBiome(){n.arena.trySetWeather($6(n.arena),!1)}};N(_F,"NewBiomeEncounterPhase");let bG=_F;var pR=(E=>(E[E.SUBSTITUTE_ADD=0]="SUBSTITUTE_ADD",E[E.SUBSTITUTE_PRE_MOVE=1]="SUBSTITUTE_PRE_MOVE",E[E.SUBSTITUTE_POST_MOVE=2]="SUBSTITUTE_POST_MOVE",E[E.SUBSTITUTE_REMOVE=3]="SUBSTITUTE_REMOVE",E[E.COMMANDER_APPLY=4]="COMMANDER_APPLY",E[E.COMMANDER_REMOVE=5]="COMMANDER_REMOVE",E))(pR||{});const PF=class PF extends dE{constructor(A,s,R){super(),this.key=A,this.pokemon=s,this.fieldAssets=R??[]}start(){switch(super.start(),this.key){case pR.SUBSTITUTE_ADD:this.doSubstituteAddAnim();break;case pR.SUBSTITUTE_PRE_MOVE:this.doSubstitutePreMoveAnim();break;case pR.SUBSTITUTE_POST_MOVE:this.doSubstitutePostMoveAnim();break;case pR.SUBSTITUTE_REMOVE:this.doSubstituteRemoveAnim();break;case pR.COMMANDER_APPLY:this.doCommanderApplyAnim();break;case pR.COMMANDER_REMOVE:this.doCommanderRemoveAnim();break;default:this.end()}}doSubstituteAddAnim(){const A=this.pokemon.getTag(mE);if(ve(A))return this.end();const s=N(()=>{const r=n.addFieldSprite(this.pokemon.x+this.pokemon.getSprite().x,this.pokemon.y+this.pokemon.getSprite().y,`pkmn${this.pokemon.isPlayer()?"__back":""}__sub`);return r.setOrigin(.5,1),n.field.add(r),r},"getSprite"),[R,a]=[s(),s()],i=this.pokemon.getSpriteScale()*(this.pokemon.isPlayer()?.5:1);R.setVisible(!1),R.setScale(i),a.setTintFill(16777215),a.setScale(.01),this.pokemon.isPlayer()&&n.field.bringToTop(this.pokemon),n.playSound("PRSFX- Transform"),n.tweens.add({targets:this.pokemon,duration:500,x:this.pokemon.x+this.pokemon.getSubstituteOffset()[0],y:this.pokemon.y+this.pokemon.getSubstituteOffset()[1],alpha:.5,ease:"Sine.easeIn"}),n.tweens.add({targets:a,delay:250,scale:i,ease:"Cubic.easeInOut",duration:500,onComplete:N(()=>{R.setVisible(!0),n.tweens.add({targets:a,delay:250,alpha:0,ease:"Cubic.easeOut",duration:1e3,onComplete:N(()=>{a.destroy(),A.sprite=R,this.end()},"onComplete")})},"onComplete")})}doSubstitutePreMoveAnim(){if(this.fieldAssets.length!==1)return this.end();const A=this.fieldAssets[0];if(A===void 0)return this.end();n.tweens.add({targets:A,alpha:0,ease:"Sine.easeInOut",duration:500}),n.tweens.add({targets:this.pokemon,x:A.x,y:A.y,alpha:1,ease:"Sine.easeInOut",delay:250,duration:500,onComplete:N(()=>this.end(),"onComplete")})}doSubstitutePostMoveAnim(){if(this.fieldAssets.length!==1)return this.end();const A=this.fieldAssets[0];if(A===void 0)return this.end();n.tweens.add({targets:this.pokemon,x:A.x+this.pokemon.getSubstituteOffset()[0],y:A.y+this.pokemon.getSubstituteOffset()[1],alpha:.5,ease:"Sine.easeInOut",duration:500}),n.tweens.add({targets:A,alpha:1,ease:"Sine.easeInOut",delay:250,duration:500,onComplete:N(()=>this.end(),"onComplete")})}doSubstituteRemoveAnim(){if(this.fieldAssets.length!==1)return this.end();const A=this.fieldAssets[0];if(A===void 0)return this.end();const R=N(()=>{const i=n.addFieldSprite(A.x,A.y,`pkmn${this.pokemon.isPlayer()?"__back":""}__sub`);return i.setOrigin(.5,1),n.field.add(i),i},"getSprite")(),a=this.pokemon.getSpriteScale()*(this.pokemon.isPlayer()?.5:1);R.setAlpha(0),R.setTintFill(16777215),R.setScale(a),n.tweens.add({targets:R,alpha:1,ease:"Sine.easeInOut",duration:500,onComplete:N(()=>{A.destroy();const i=n.time.addEvent({delay:100,repeat:7,startAt:200,callback:N(()=>{n.playSound("PRSFX- Substitute2.wav"),R.setVisible(i.repeatCount%2===0),i.repeatCount||(n.tweens.add({targets:R,scale:.01,ease:"Sine.cubicEaseIn",duration:500}),n.tweens.add({targets:this.pokemon,x:this.pokemon.x-this.pokemon.getSubstituteOffset()[0],y:this.pokemon.y-this.pokemon.getSubstituteOffset()[1],alpha:1,ease:"Sine.easeInOut",delay:250,duration:500,onComplete:N(()=>{R.destroy(),this.end()},"onComplete")}))},"callback")})},"onComplete")})}doCommanderApplyAnim(){var o,l;if(!((o=n.currentBattle)!=null&&o.double))return this.end();const A=this.pokemon.getAlly();if(((l=A==null?void 0:A.species)==null?void 0:l.speciesId)!==e.DONDOZO)return this.end();const s=this.pokemon.x+this.pokemon.getSprite().x,R=this.pokemon.y+this.pokemon.getSprite().y,i=N(()=>{const C=n.addPokemonSprite(this.pokemon,s,R,this.pokemon.getSprite().texture,this.pokemon.getSprite().frame.name,!0);return["spriteColors","fusionSpriteColors"].map(M=>C.pipelineData[M]=this.pokemon.getSprite().pipelineData[M]),C.setPipelineData("spriteKey",this.pokemon.getBattleSpriteKey()),C.setPipelineData("shiny",this.pokemon.shiny),C.setPipelineData("variant",this.pokemon.variant),C.setPipelineData("ignoreFieldPos",!0),C.setOrigin(.5,1),this.pokemon.getSprite().on("animationupdate",(M,D)=>C.setFrame(D.textureFrame)),n.field.add(C),C},"getSourceSprite")();this.pokemon.setVisible(!1);const r=this.pokemon.getFieldPositionOffset(),L=A.getFieldPositionOffset();n.playSound("se/pb_throw"),n.tweens.add({targets:i,duration:375,scale:.5,x:{value:s+(L[0]-r[0])/2,ease:"Linear"},y:{value:(this.pokemon.isPlayer()?100:65)+r[1],ease:"Sine.easeOut"},onComplete:N(()=>{n.field.bringToTop(A),n.tweens.add({targets:i,duration:375,scale:.01,x:{value:A.x,ease:"Linear"},y:{value:A.y+A.height/2,ease:"Sine.easeIn"},onComplete:N(()=>{i.destroy(),n.playSound("battle_anims/PRSFX- Liquidation1.wav"),n.tweens.add({targets:A,duration:250,ease:"Sine.easeInOut",scale:.85,yoyo:!0,onComplete:N(()=>this.end(),"onComplete")})},"onComplete")})},"onComplete")})}doCommanderRemoveAnim(){const A=this.pokemon.getAlly();if(ve(A))return console.warn("Aborting COMMANDER_REMOVE anim: Tatsugiri is undefined"),this.end();const s=n.addPokemonSprite(A,this.pokemon.x+this.pokemon.getSprite().x,this.pokemon.y+this.pokemon.getSprite().y+this.pokemon.height/2,A.getSprite().texture,A.getSprite().frame.name,!0);["spriteColors","fusionSpriteColors"].map(R=>s.pipelineData[R]=A.getSprite().pipelineData[R]),s.setPipelineData("spriteKey",A.getBattleSpriteKey()),s.setPipelineData("shiny",A.shiny),s.setPipelineData("variant",A.variant),s.setPipelineData("ignoreFieldPos",!0),this.pokemon.getSprite().on("animationupdate",(R,a)=>s.setFrame(a.textureFrame)),s.setOrigin(.5,1),s.setScale(.01),n.field.add(s),n.field.bringToTop(this.pokemon),s.setVisible(!0),n.tweens.add({targets:this.pokemon,duration:250,ease:"Sine.easeInOut",scale:1.15,yoyo:!0,onComplete:N(()=>{n.playSound("battle_anims/PRSFX- Liquidation4.wav"),n.tweens.add({targets:s,duration:500,scale:1,x:{value:A.x+A.getSprite().x,ease:"Linear"},y:{value:A.y+A.getSprite().y,ease:"Sine.easeIn"},onComplete:N(()=>{A.setVisible(!0),s.destroy(),this.end()},"onComplete")})},"onComplete")})}};N(PF,"PokemonAnimPhase");let kG=PF;const GF=class GF extends Ns{constructor(A,s,R,a,i=!1,r=!1,L=!1,o=!1,l=!1){super(A,void 0,lA.HEALTH_UP),this.hpHealed=s,this.message=R,this.showFullHpMessage=a,this.skipAnim=i,this.revive=r,this.healStatus=L,this.preventFullHeal=o,this.fullRestorePP=l}start(){!this.skipAnim&&(this.revive||this.getPokemon().hp)&&!this.getPokemon().isFullHp()?super.start():this.end()}end(){const A=this.getPokemon();if(!A.isOnField()||!this.revive&&!A.isActive())return super.end();const s=!!this.message,R=!A.isFullHp()||this.hpHealed<0,a=A.getTag(y.HEAL_BLOCK);let i=ne.NONE;if(a&&this.hpHealed>0)return n.queueMessage(a.onActivation(A)),this.message=null,super.end();if(R){const r=new _s(1);this.revive||n.applyModifiers(Gi,this.player,r);const L=new Et(Math.floor(this.hpHealed*r.value));if(L.value<0&&(A.damageAndUpdate(L.value*-1,vt.HEAL),L.value=0),this.preventFullHeal&&A.hp+L.value>=A.getMaxHp()&&(L.value=A.getMaxHp()-A.hp-1),L.value=A.heal(L.value),L.value&&n.damageNumberHandler.add(A,L.value,vt.HEAL),A.isPlayer()&&(n.validateAchvs(fa,L),L.value>n.gameData.gameStats.highestHeal&&(n.gameData.gameStats.highestHeal=L.value)),this.healStatus&&!this.revive&&A.status&&(i=A.status.effect,A.resetStatus()),this.fullRestorePP)for(const o of this.getPokemon().getMoveset())o&&(o.ppUsed=0);A.updateInfo().then(()=>super.end())}else this.healStatus&&!this.revive&&A.status?(i=A.status.effect,A.resetStatus(),A.updateInfo().then(()=>super.end())):this.showFullHpMessage&&(this.message=u.t("battle:hpIsFull",{pokemonName:te(A)}));this.message&&n.queueMessage(this.message),this.healStatus&&i&&!s&&n.queueMessage(La(i,te(A))),!R&&!i&&super.end()}};N(GF,"PokemonHealPhase");let FE=GF;const cF=class cF extends dE{constructor(A,s){super(),this.pokemon=A,this.formChange=s}start(){if(super.start(),this.pokemon.formIndex===this.pokemon.species.forms.findIndex(i=>i.formKey===this.formChange.formKey))return this.end();const A=te(this.pokemon);if(!this.pokemon.isOnField()||this.pokemon.getTag(_n)||this.pokemon.isFainted()){this.pokemon.isPlayer()||this.pokemon.isActive()?this.pokemon.changeForm(this.formChange).then(()=>{n.ui.showText(F_(this.pokemon,this.formChange,A),null,()=>this.end(),1500)}):this.end();return}const s=N(()=>{const i=n.addPokemonSprite(this.pokemon,this.pokemon.x+this.pokemon.getSprite().x,this.pokemon.y+this.pokemon.getSprite().y,"pkmn__sub");i.setOrigin(.5,1);const r=this.pokemon.getBattleSpriteKey();try{i.play(r).stop()}catch(L){console.error(`Failed to play animation for ${r}`,L)}return i.setPipeline(n.spritePipeline,{tone:[0,0,0,0],hasShadow:!1,teraColor:yR(this.pokemon.getTeraType())}),["spriteColors","fusionSpriteColors"].map(L=>{var o;(o=this.pokemon.summonData)!=null&&o.speciesForm&&(L+="Base"),i.pipelineData[L]=this.pokemon.getSprite().pipelineData[L]}),n.field.add(i),i},"getPokemonSprite"),[R,a]=[s(),s()];this.pokemon.getSprite().on("animationupdate",(i,r)=>{r.textureKey===R.texture.key?R.setFrame(r.textureFrame):a.setFrame(r.textureFrame)}),R.setAlpha(0),R.setTintFill(16777215),a.setVisible(!1),a.setTintFill(16777215),n.playSound("battle_anims/PRSFX- Transform"),n.tweens.add({targets:R,alpha:1,duration:1e3,ease:"Cubic.easeIn",onComplete:N(()=>{this.pokemon.setVisible(!1),this.pokemon.changeForm(this.formChange).then(()=>{a.setScale(.01);const i=this.pokemon.getBattleSpriteKey();try{a.play(i).stop()}catch(r){console.error(`Failed to play animation for ${i}`,r)}a.setVisible(!0),n.tweens.add({targets:R,delay:250,scale:.01,ease:"Cubic.easeInOut",duration:500,onComplete:N(()=>R.destroy(),"onComplete")}),n.tweens.add({targets:a,delay:250,scale:this.pokemon.getSpriteScale(),ease:"Cubic.easeInOut",duration:500,onComplete:N(()=>{this.pokemon.setVisible(!0),n.tweens.add({targets:a,delay:250,alpha:0,ease:"Cubic.easeOut",duration:1e3,onComplete:N(()=>{R.setVisible(!1),n.ui.showText(F_(this.pokemon,this.formChange,A),null,()=>this.end(),1500)},"onComplete")})},"onComplete")})})},"onComplete")})}end(){var A;if(this.pokemon.findAndRemoveTags(s=>s.tagType===y.AUTOTOMIZED),((A=n)==null?void 0:A.currentBattle.battleSpec)===SE.FINAL_BOSS&&this.pokemon instanceof xs){n.playBgm(),n.unshiftPhase(new FE(this.pokemon.getBattlerIndex(),this.pokemon.getMaxHp(),null,!1,!1,!1,!0)),this.pokemon.findAndRemoveTags(()=>!0),this.pokemon.bossSegments=5,this.pokemon.bossSegmentIndex=4,this.pokemon.initBattleInfo(),this.pokemon.cry();const s=n.findPhase(R=>R instanceof wA&&R.pokemon===this.pokemon);s&&s.cancel()}super.end()}};N(cF,"QuietFormChangePhase");let ZG=cF;const hF=class hF extends dE{constructor(A){super(),this.nextBiome=A}start(){if(super.start(),this.nextBiome===void 0)return this.end();n.tweens.add({targets:[n.arenaEnemy,n.lastEnemyTrainer],x:"+=300",duration:2e3,onComplete:N(()=>{n.arenaEnemy.setX(n.arenaEnemy.x-600),n.newArena(this.nextBiome);const s=`${Qo(this.nextBiome)}_bg`;n.arenaBgTransition.setTexture(s),n.arenaBgTransition.setAlpha(0),n.arenaBgTransition.setVisible(!0),n.arenaPlayerTransition.setBiome(this.nextBiome),n.arenaPlayerTransition.setAlpha(0),n.arenaPlayerTransition.setVisible(!0),n.tweens.add({targets:[n.arenaPlayer,n.arenaBgTransition,n.arenaPlayerTransition],duration:1e3,delay:1e3,ease:"Sine.easeInOut",alpha:N(R=>R===n.arenaPlayer?0:1,"alpha"),onComplete:N(()=>{n.arenaBg.setTexture(s),n.arenaPlayer.setBiome(this.nextBiome),n.arenaPlayer.setAlpha(1),n.arenaEnemy.setBiome(this.nextBiome),n.arenaEnemy.setAlpha(1),n.arenaNextEnemy.setBiome(this.nextBiome),n.arenaBgTransition.setVisible(!1),n.arenaPlayerTransition.setVisible(!1),n.lastEnemyTrainer&&n.lastEnemyTrainer.destroy(),this.end()},"onComplete")})},"onComplete")})}};N(hF,"SwitchBiomePhase");let XG=hF;const HF=class HF extends dE{constructor(){super()}start(){super.start();const A=n.arena.biomeType,s=N(R=>{n.currentBattle.waveIndex%10===1&&(n.applyModifiers(fo,!0),n.unshiftPhase(new Fr(!1))),n.unshiftPhase(new XG(R)),this.end()},"setNextBiome");if(n.gameMode.isClassic&&n.gameMode.isWaveFinal(n.currentBattle.waveIndex+9)||n.gameMode.isDaily&&n.gameMode.isWaveFinal(n.currentBattle.waveIndex)||n.gameMode.hasShortBiomes&&!(n.currentBattle.waveIndex%50))s(T.END);else if(n.gameMode.hasRandomBiomes)s(this.generateNextBiome());else if(Array.isArray(Ln[A])){let R=[];if(n.executeWithSeedOffset(()=>{R=Ln[A].filter(a=>!Array.isArray(a)||!ce(a[1])).map(a=>Array.isArray(a)?a[0]:a)},n.currentBattle.waveIndex),R.length>1&&n.findModifier(a=>a instanceof ao)){let a=[];n.executeWithSeedOffset(()=>{a=(Array.isArray(Ln[A])?Ln[A]:[Ln[A]]).filter((r,L)=>!Array.isArray(r)||!ce(r[1])).map(r=>Array.isArray(r)?r[0]:r)},n.currentBattle.waveIndex);const i=a.map(r=>({label:TL(r),handler:N(()=>(n.ui.setMode(Ie.MESSAGE),s(r),!0),"handler")}));n.ui.setMode(Ie.OPTION_SELECT,{options:i,delay:1e3})}else s(R[ce(R.length)])}else Ln.hasOwnProperty(A)?s(Ln[A]):s(this.generateNextBiome())}generateNextBiome(){return n.currentBattle.waveIndex%50?n.generateRandomBiome(n.currentBattle.waveIndex):T.END}};N(HF,"SelectBiomePhase");let QG=HF;const dF=class dF extends qO{constructor(A){var s;super(),this.skipTurn=!1,this.fieldIndex=A,(s=n.currentBattle.mysteryEncounter)!=null&&s.skipEnemyBattleTurns&&(this.skipTurn=!0)}start(){super.start();const A=n.getEnemyField()[this.fieldIndex],s=n.currentBattle,R=s.trainer;if(s.double&&A.hasAbility(O.COMMANDER)&&A.getAlly().getTag(y.COMMANDED)&&(this.skipTurn=!0),R&&!A.getMoveQueue().length){const i=A.getOpponents();if(!A.isTrapped()){const r=R.getPartyMemberMatchupScores(A.trainerSlot,!0);if(r.length){const L=i.map(M=>A.getMatchupScore(M)),o=L.reduce((M,D)=>M+=D,0)/L.length,l=R.getSortedPartyMemberMatchupScores(r),C=1-(s.enemySwitchCounter?Math.pow(.1,1/s.enemySwitchCounter):0);if(l[0][1]*C>=o*(R.config.isBoss?2:3)){const M=R.getNextSummonIndex(A.trainerSlot,r);return s.turnCommands[this.fieldIndex+gt.ENEMY]={command:LA.POKEMON,cursor:M,args:[!1],skip:this.skipTurn},s.enemySwitchCounter++,this.end()}}}}const a=A.getNextMove();n.currentBattle.turnCommands[this.fieldIndex+gt.ENEMY]={command:LA.FIGHT,move:a,skip:this.skipTurn},n.currentBattle.enemySwitchCounter=Math.max(n.currentBattle.enemySwitchCounter-1,0),this.end()}getFieldIndex(){return this.fieldIndex}};N(dF,"EnemyCommandPhase");let JG=dF;const fF=class fF extends Ts{constructor(A,s){super(gt.ENEMY+A),this.pokeballType=s}start(){super.start();const A=this.getPokemon();if(!(A!=null&&A.hp))return this.end();const s=A.getTag(mE);s&&s.sprite.setVisible(!1),n.pokeballCounts[this.pokeballType]--,this.originalY=A.y;const R=3*A.getMaxHp(),a=2*A.hp,i=A.species.catchRate,r=bl(this.pokeballType),L=A.status?p6(A.status.effect):1,o=Math.round((R-a)*i*r/R*L),l=Math.round(65536/Math.pow(255/o,.1875)),C=Sk(o),M=A.randSeedInt(256)<C,D=A.getFieldPositionOffset(),_=DO(this.pokeballType);this.pokeball=n.addFieldSprite(16,80,"pb",_),this.pokeball.setOrigin(.5,.625),n.field.add(this.pokeball),n.playSound(M?"se/crit_throw":"se/pb_throw"),n.time.delayedCall(300,()=>{n.field.moveBelow(this.pokeball,A)}),n.tweens.add({targets:this.pokeball,x:{value:236+D[0],ease:"Linear"},y:{value:16+D[1],ease:"Cubic.easeOut"},duration:500,onComplete:N(()=>{this.pokeball.setTexture("pb",`${_}_opening`),n.time.delayedCall(17,()=>this.pokeball.setTexture("pb",`${_}_open`)),n.playSound("se/pb_rel"),A.tint(zO(this.pokeballType)),BM(this.pokeball.x,this.pokeball.y,this.pokeballType),n.tweens.add({targets:A,duration:500,ease:"Sine.easeIn",scale:.25,y:20,onComplete:N(()=>{this.pokeball.setTexture("pb",`${_}_opening`),A.setVisible(!1),n.playSound("se/pb_catch"),n.time.delayedCall(17,()=>this.pokeball.setTexture("pb",`${_}`));const P=N(()=>{let h=0;const H=this.pokeball.x,d=n.tweens.addCounter({from:0,to:1,repeat:M?2:4,yoyo:!0,ease:"Cubic.easeOut",duration:250,repeatDelay:500,onUpdate:N(f=>{if(h&&h<(M?2:4)){const B=f.getValue(),F=h%2===1?1:-1;this.pokeball.setX(H+B*4*F),this.pokeball.setAngle(B*27.5*F)}},"onUpdate"),onRepeat:N(()=>{if(!A.species.isObtainable())d.stop(),this.failCatch(h);else if(h++<(M?1:3))r===-1||M||o>=255||A.randSeedInt(65536)<l?n.playSound("se/pb_move"):(d.stop(),this.failCatch(h));else if(M&&A.randSeedInt(65536)>=l)d.stop(),this.failCatch(h);else{n.playSound("se/pb_lock"),I8(this.pokeball);const f=n.add.sprite(this.pokeball.x,this.pokeball.y,"pb","pb");f.setOrigin(this.pokeball.originX,this.pokeball.originY),f.setTintFill(0),f.setAlpha(0),n.field.add(f),n.tweens.add({targets:f,alpha:.375,duration:200,easing:"Sine.easeOut",onComplete:N(()=>{n.tweens.add({targets:f,alpha:0,duration:200,easing:"Sine.easeIn",onComplete:N(()=>f.destroy(),"onComplete")})},"onComplete")})}},"onRepeat"),onComplete:N(()=>{this.catch()},"onComplete")})},"doShake");n.time.delayedCall(250,()=>V6(this.pokeball,16,72,350,P,M))},"onComplete")})},"onComplete")})}failCatch(A){var i;const s=this.getPokemon();n.playSound("se/pb_rel"),s.setY(this.originalY),((i=s.status)==null?void 0:i.effect)!==ne.SLEEP&&s.cry(s.getHpRatio()>.25?void 0:{rate:.85}),s.tint(zO(this.pokeballType)),s.setVisible(!0),s.untint(250,"Sine.easeOut");const R=s.getTag(mE);R&&R.sprite.setVisible(!0);const a=DO(this.pokeballType);this.pokeball.setTexture("pb",`${a}_opening`),n.time.delayedCall(17,()=>this.pokeball.setTexture("pb",`${a}_open`)),n.tweens.add({targets:s,duration:250,ease:"Sine.easeOut",scale:1}),n.currentBattle.lastUsedPokeball=this.pokeballType,this.removePb(),this.end()}catch(){const A=this.getPokemon(),s=A.fusionSpecies?A.getFusionSpeciesForm():A.getSpeciesForm();s.abilityHidden&&(A.fusionSpecies?A.fusionAbilityIndex:A.abilityIndex)===s.getAbilityCount()-1&&n.validateAchv(Ct.HIDDEN_ABILITY),A.species.subLegendary&&n.validateAchv(Ct.CATCH_SUB_LEGENDARY),A.species.legendary&&n.validateAchv(Ct.CATCH_LEGENDARY),A.species.mythical&&n.validateAchv(Ct.CATCH_MYTHICAL),n.pokemonInfoContainer.show(A,!0),n.gameData.updateSpeciesDexIvs(A.species.getRootSpeciesId(!0),A.ivs),n.ui.showText(u.t("battle:pokemonCaught",{pokemonName:te(A)}),null,()=>{const R=N(()=>{n.unshiftPhase(new nS(this.battlerIndex)),n.pokemonInfoContainer.hide(),this.removePb(),this.end()},"end"),a=N(()=>{n.addFaintedEnemyScore(A),n.getPlayerField().filter(r=>r.isActive(!0)).forEach(r=>r.removeTagsBySourceId(A.id)),A.hp=0,A.trySetStatus(ne.FAINT),n.clearEnemyHeldItemModifiers(),n.field.remove(A,!0)},"removePokemon"),i=N(r=>{const L=A.addToParty(this.pokeballType,r),o=n.findModifiers(l=>l instanceof dt,!1);n.getPlayerParty().filter(l=>l.isShiny()).length===_r&&n.validateAchv(Ct.SHINY_PARTY),Promise.all(o.map(l=>n.addModifier(l,!0))).then(()=>{n.updateModifiers(!0),a(),L?L.loadAssets().then(R):R()})},"addToParty");Promise.all([A.hideInfo(),n.gameData.setPokemonCaught(A)]).then(()=>{if(n.getPlayerParty().length===_r){const r=N(()=>{n.ui.showText(u.t("battle:partyFull",{pokemonName:A.getNameToRender()}),null,()=>{n.pokemonInfoContainer.makeRoomForConfirmUi(1,!0),n.ui.setMode(Ie.CONFIRM,()=>{const L=n.addPlayerPokemon(A.species,A.level,A.abilityIndex,A.formIndex,A.gender,A.shiny,A.variant,A.ivs,A.nature,A);n.ui.setMode(Ie.SUMMARY,L,0,mM.DEFAULT,()=>{n.ui.setMode(Ie.MESSAGE).then(()=>{r()})},!1)},()=>{n.ui.setMode(Ie.PARTY,Ps.RELEASE,this.fieldIndex,(L,o)=>{n.ui.setMode(Ie.MESSAGE).then(()=>{L<6?i(L):r()})})},()=>{n.ui.setMode(Ie.MESSAGE).then(()=>{a(),R()})},"fullParty")})},"promptRelease");r()}else i()})},0,!0)}removePb(){n.tweens.add({targets:this.pokeball,duration:250,delay:250,ease:"Sine.easeIn",alpha:0,onComplete:N(()=>this.pokeball.destroy(),"onComplete")})}};N(fF,"AttemptCapturePhase");let $G=fF;const BF=class BF extends Ts{constructor(A){super(A),this.forceFailEscape=!1}start(){super.start();const A=n.getPlayerField(),s=n.getEnemyField(),R=this.getPokemon(),a=new Et(0);this.attemptRunAway(A,s,a),ut(bU,R,null,!1,a),R.randSeedInt(100)<a.value&&!this.forceFailEscape?(n.playSound("se/flee"),n.queueMessage(u.t("battle:runAwaySuccess"),null,!0,500),n.tweens.add({targets:[n.arenaEnemy,s].flat(),alpha:0,duration:250,ease:"Sine.easeIn",onComplete:N(()=>s.forEach(i=>i.destroy()),"onComplete")}),n.clearEnemyHeldItemModifiers(),s.forEach(i=>{i.hideInfo().then(()=>i.destroy()),i.hp=0,i.trySetStatus(ne.FAINT)}),n.pushPhase(new bI(!1)),n.pushPhase(new si)):(R.turnData.failedRunAway=!0,n.queueMessage(u.t("battle:runAwayCannotEscape"),null,!0,500)),this.end()}attemptRunAway(A,s,R){const a=s.reduce((_,P)=>_+P.getStat(K.SPD),0),i=A.reduce((_,P)=>_+P.getStat(K.SPD),0);let r=!1;for(let _=0;_<s.length;_++)r=r||s[_].isBoss();const L=i/a,o=r?6:4,l=5,C=r?25:95,M=r?2:10,D=(C-l)/o;R.value=Phaser.Math.Clamp(Math.round(D*L+l+M*n.currentBattle.escapeAttempts++),l,C)}};N(BF,"AttemptRunPhase");let zG=BF;const gF=class gF extends qO{start(){super.start(),this.executeForAll(A=>{if(!!n.findModifier(R=>R instanceof CE&&R.shouldApply(A),A.isPlayer())){const R=new Lt(!1);if(A.getOpponents().map(a=>ut(Cr,a,R)),R.value)n.queueMessage(u.t("abilityTriggers:preventBerryUse",{pokemonNameWithAffix:te(A)}));else{n.unshiftPhase(new Ns(A.getBattlerIndex(),A.getBattlerIndex(),lA.USE_ITEM));for(const a of n.applyModifiers(CE,A.isPlayer(),A))a.consumed&&(a.consumed=!1,A.loseHeldItem(a)),n.eventTarget.dispatchEvent(new L_(a));n.updateModifiers(A.isPlayer()),ut(YS,A,new Lt(!1))}}}),this.end()}};N(gF,"BerryPhase");let qG=gF;const KF=class KF extends dE{constructor(A,s){super(),this.pokemon=A,this.move=s}canMove(){return this.pokemon.isActive(!0)&&this.move.isUsable(this.pokemon)}start(){super.start(),this.canMove()?MA(eL,this.pokemon,null,this.move.getMove()).then(()=>this.end()):this.end()}};N(KF,"MoveHeaderPhase");let jG=KF;const mF=class mF extends qO{constructor(){super()}start(){super.start(),n.currentBattle.incrementTurn(),n.eventTarget.dispatchEvent(new S_(n.currentBattle.turn));const A=N(s=>{var R;s.switchOutStatus||(s.lapseTags(JE.TURN_END),n.applyModifiers(_i,s.isPlayer(),s),((R=n.arena.terrain)==null?void 0:R.terrainType)===Tt.GRASSY&&s.isGrounded()&&n.unshiftPhase(new FE(s.getBattlerIndex(),Math.max(s.getMaxHp()>>4,1),u.t("battle:turnEndHpRestore",{pokemonName:te(s)}),!0)),s.isPlayer()||(n.applyModifiers(Wo,!1,s),n.applyModifier(Yo,!1,s)),KJ(An,s)),n.applyModifiers(sa,s.isPlayer(),s),n.applyModifiers(hi,s.isPlayer(),s),s.battleSummonData.turnCount++,s.battleSummonData.waveTurnCount++},"handlePokemon");this.executeForAll(A),n.arena.lapseTags(),n.arena.weather&&!n.arena.weather.lapse()&&(n.arena.trySetWeather(Oe.NONE,!1),n.arena.triggerWeatherBasedFormChangesToNormal()),n.arena.terrain&&!n.arena.terrain.lapse()&&n.arena.trySetTerrain(Tt.NONE,!1),this.end()}};N(mF,"TurnEndPhase");let ec=mF;const FF=class FF extends Ns{constructor(){var A,s,R,a,i;super(void 0,void 0,lA.SUNNY+((((R=(s=(A=n)==null?void 0:A.arena)==null?void 0:s.weather)==null?void 0:R.weatherType)||Oe.NONE)-1)),this.weather=(i=(a=n)==null?void 0:a.arena)==null?void 0:i.weather}start(){var A,s;if(this.weather=(s=(A=n)==null?void 0:A.arena)==null?void 0:s.weather,!this.weather){this.end();return}if(this.setAnimation(lA.SUNNY+(this.weather.weatherType-1)),this.weather.isDamaging()){const R=new Lt(!1);if(this.executeForAll(a=>u6(Li,a,this.weather,R)),!R.value){const a=N(i=>{var o;const r=new Lt(!1);if(u6(FU,i,this.weather,r),ut(ME,i,r),r.value||i.getTag(y.UNDERGROUND)||i.getTag(y.UNDERWATER))return;const L=yt(i.getMaxHp()/16);n.queueMessage(Yk((o=this.weather)==null?void 0:o.weatherType,i)),i.damageAndUpdate(L,vt.EFFECTIVE,!1,!1,!0)},"inflictDamage");this.executeForAll(i=>{!i||!!i.getTypes(!0,!0).filter(L=>{var o;return(o=this.weather)==null?void 0:o.isTypeDamageImmune(L)}).length||i.switchOutStatus||a(i)})}}n.ui.showText(Wk(this.weather.weatherType)??"",null,()=>{this.executeForAll(R=>{R.switchOutStatus||FJ(FS,R,this.weather)}),super.start()})}};N(FF,"WeatherEffectPhase");let tc=FF;const pF=class pF extends aE{constructor(A){super(),this.order=A}start(){const A=n.getField();for(const s of this.order)A[s].status&&A[s].status.isPostTurn()&&n.unshiftPhase(new tS(s));this.end()}};N(pF,"CheckStatusEffectPhase");let Ac=pF;const WF=class WF extends qO{constructor(){super()}getSpeedOrder(){const A=n.getPlayerField().filter(i=>i.isActive()),s=n.getEnemyField().filter(i=>i.isActive());let R=A.concat(s);n.executeWithSeedOffset(()=>{R=CO(R)},n.currentBattle.turn,n.waveSeed);const a=new Lt(!1);return n.arena.applyTags(EU,!1,a),R.sort((i,r)=>{const L=(i==null?void 0:i.getEffectiveStat(K.SPD))??0,o=(r==null?void 0:r.getEffectiveStat(K.SPD))??0;return a.value?L-o:o-L}),R.map(i=>i.getFieldIndex()+(i.isPlayer()?gt.PLAYER:gt.ENEMY))}getCommandOrder(){let A=this.getSpeedOrder();const s={};return n.getField(!0).filter(R=>R.summonData).map(R=>{const a=new Lt(!1),i=new Lt(!0);ut(Au,R,null,!1,a),ut(Eu,R,null,!1,a,i),i.value&&n.applyModifiers(Mi,R.isPlayer(),R,a),s[R.getBattlerIndex()]=a}),A=A.slice(0),A.sort((R,a)=>{const i=n.currentBattle.turnCommands[R],r=n.currentBattle.turnCommands[a];if((i==null?void 0:i.command)!==(r==null?void 0:r.command)){if((i==null?void 0:i.command)===LA.FIGHT)return 1;if((r==null?void 0:r.command)===LA.FIGHT)return-1}else if((i==null?void 0:i.command)===LA.FIGHT){const l=we[i.move.move],C=we[r.move.move],M=n.getField(!0).find(H=>H.getBattlerIndex()===R),D=n.getField(!0).find(H=>H.getBattlerIndex()===a),_=l.getPriority(M,!1),P=C.getPriority(D,!1),h=Math.ceil(_)-Math.ceil(P)===0;if(_!==P)return h&&s[R].value!==s[a].value?s[R].value?-1:1:_<P?1:-1}if(s[R].value!==s[a].value)return s[R].value?-1:1;const L=A.indexOf(R),o=A.indexOf(a);return L<o?-1:L>o?1:0}),A}start(){var a;super.start();const A=n.getField(),s=this.getCommandOrder();let R=0;for(const i of s){const r=A[i],L=n.currentBattle.turnCommands[i];if(!(L!=null&&L.skip))switch(L==null?void 0:L.command){case LA.FIGHT:const o=L.move;if(r.turnData.order=R++,!o)continue;const l=r.getMoveset().find(D=>(D==null?void 0:D.moveId)===o.move&&(D==null?void 0:D.ppUsed)<(D==null?void 0:D.getMovePp()))||new nt(o.move);if(l.getMove().hasAttr(eL)&&n.unshiftPhase(new jG(r,l)),r.isPlayer())if(L.cursor===-1)n.pushPhase(new wA(r,L.targets||L.move.targets,l));else{const D=new wA(r,L.targets||L.move.targets,l,!1,o.ignorePP);n.pushPhase(D)}else n.pushPhase(new wA(r,L.targets||L.move.targets,l,!1,o.ignorePP));break;case LA.BALL:n.unshiftPhase(new $G(L.targets[0]%2,L.cursor));break;case LA.POKEMON:const C=(a=L.args)!=null&&a[0]?iA.BATON_PASS:iA.SWITCH;n.unshiftPhase(new uR(C,r.getFieldIndex(),L.cursor,!0,r.isPlayer()));break;case LA.RUN:let M=r;if(n.currentBattle.double){const D=A.filter(_=>{if(_)return _.isPlayer()&&_.isActive()});if(D.length>1){const _=D[0].getStat(K.SPD)>D[1].getStat(K.SPD)?D[0]:D[1],P=D.find(h=>h.hasAbility(O.RUN_AWAY));M=P!==void 0?P:_}}n.unshiftPhase(new zG(M.getFieldIndex()));break}}n.pushPhase(new tc),n.pushPhase(new qG),n.pushPhase(new Ac(s)),n.pushPhase(new ec),this.end()}};N(WF,"TurnStartPhase");let Ec=WF;const YF=class YF extends qO{constructor(){super()}start(){if(super.start(),n.getPlayerField().forEach(A=>{if(A.isOnField()&&!A.isAllowedInBattle()){n.queueMessage(u.t("challenges:illegalEvolution",{pokemon:A.name}),null,!0);const s=n.getPokemonAllowedInBattle();s.length?s.length>=n.currentBattle.getBattlerCount()||n.currentBattle.double&&!s[0].isActive(!0)?A.switchOut():A.leaveField():(n.clearPhaseQueue(),n.unshiftPhase(new GO)),s.length===1&&n.currentBattle.double&&n.unshiftPhase(new PO(!0))}}),n.eventTarget.dispatchEvent(new T_),T9(),S9()){this.end();return}n.getField().forEach((A,s)=>{A!=null&&A.isActive()&&(A.isPlayer()&&n.currentBattle.addParticipant(A),A.resetTurnData(),n.pushPhase(A.isPlayer()?new TS(s):new JG(s-gt.ENEMY)))}),n.pushPhase(new Ec),this.end()}};N(YF,"TurnInitPhase");let sc=YF;var Tr=(E=>(E[E.DEFAULT=0]="DEFAULT",E[E.ONLY_LEVEL_UP=1]="ONLY_LEVEL_UP",E[E.SKIP=2]="SKIP",E))(Tr||{});const yF=class yF extends pr{constructor(A,s,R){super(A),this.pokemon=this.getPlayerPokemon(),this.lastLevel=s,this.level=R}start(){super.start(),this.level>n.gameData.gameStats.highestLevel&&(n.gameData.gameStats.highestLevel=this.level),n.validateAchvs(ar,new Et(this.level));const A=this.pokemon.stats.slice(0);this.pokemon.calculateStats(),this.pokemon.updateInfo(),n.expParty===Tr.DEFAULT?(n.playSound("level_up_fanfare"),n.ui.showText(u.t("battle:levelUp",{pokemonName:te(this.pokemon),level:this.level}),null,()=>n.ui.getMessageHandler().promptLevelUpStats(this.partyMemberIndex,A,!1).then(()=>this.end()),null,!0)):n.expParty===Tr.SKIP?this.end():n.ui.getMessageHandler().promptLevelUpStats(this.partyMemberIndex,A,!1).then(()=>this.end())}end(){if(this.lastLevel<100){const A=this.getPokemon().getLevelMoves(this.lastLevel+1);for(const s of A)n.unshiftPhase(new eI(this.partyMemberIndex,s[1]))}if(!this.pokemon.pauseEvolutions){const A=this.pokemon.getEvolution();A&&n.unshiftPhase(new uS(this.pokemon,A,this.lastLevel))}return super.end()}};N(yF,"LevelUpPhase");let DS=yF;const wF=class wF extends pr{constructor(A,s){super(A),this.expValue=s}start(){super.start();const A=this.getPokemon(),s=new Et(this.expValue);n.applyModifiers(LL,!0,s),s.value=Math.floor(s.value),n.ui.showText(u.t("battle:expGain",{pokemonName:te(A),exp:s.value}),null,()=>{const R=A.level;A.addExp(s.value);const a=A.level;a>R&&n.unshiftPhase(new DS(this.partyMemberIndex,R,a)),A.updateInfo().then(()=>this.end())},null,!0)}};N(wF,"ExpPhase");let Rc=wF;const vF=class vF extends dE{constructor(){super()}start(){super.start(),n.partyExpBar.hide().then(()=>this.end())}};N(vF,"HidePartyExpBarPhase");let Oc=vF;const VF=class VF extends pr{constructor(A,s){super(A),this.expValue=s}start(){super.start();const A=this.getPokemon(),s=new Et(this.expValue);n.applyModifiers(LL,!0,s),s.value=Math.floor(s.value);const R=A.level;A.addExp(s.value);const a=A.level;a>R&&n.unshiftPhase(new DS(this.partyMemberIndex,R,a)),n.unshiftPhase(new Oc),A.updateInfo(),n.expParty===Tr.SKIP?this.end():n.expParty===Tr.ONLY_LEVEL_UP?a>R?n.partyExpBar.showPokemonExp(A,s.value,n.expParty===Tr.ONLY_LEVEL_UP,a).then(()=>{setTimeout(()=>this.end(),800/Math.pow(2,n.expGainsSpeed))}):this.end():n.expGainsSpeed<Ir.SKIP?n.partyExpBar.showPokemonExp(A,s.value,!1,a).then(()=>{setTimeout(()=>this.end(),500/Math.pow(2,n.expGainsSpeed))}):this.end()}};N(VF,"ShowPartyExpBarPhase");let nc=VF;const Us=!0,o6=(Array.isArray(Ye.OPP_IVS_OVERRIDE)?Ye.OPP_IVS_OVERRIDE:new Array(6).fill(Ye.OPP_IVS_OVERRIDE)).map(E=>isNaN(E)||E===null||E>31?-1:E),ZL=Ye.STARTING_WAVE_OVERRIDE||1,J0=[];let TR;const xF=class xF extends Fl{constructor(){super("battle"),this.sessionPlayTime=null,this.lastSavePlayTime=null,this.masterVolume=.5,this.bgmVolume=1,this.fieldVolume=1,this.seVolume=1,this.uiVolume=1,this.gameSpeed=1,this.damageNumbersMode=0,this.reroll=!1,this.shopCursorTarget=bn.REWARDS,this.commandCursorMemory=!1,this.showMovesetFlyout=!0,this.showArenaFlyout=!0,this.showTimeOfDayWidget=!0,this.timeOfDayAnimation=$T.NONE,this.showLevelUpStats=!0,this.enableTutorials=!1,this.enableMoveInfo=!0,this.enableRetries=!1,this.hideIvs=!1,this.candyUpgradeNotification=0,this.candyUpgradeDisplay=0,this.moneyFormat=O_.NORMAL,this.uiTheme=uO.DEFAULT,this.windowType=0,this.experimentalSprites=!1,this.musicPreference=rr.ALLGENS,this.moveAnimations=!0,this.expGainsSpeed=Ir.DEFAULT,this.skipSeenDialogues=!1,this.eggSkipPreference=0,this.expParty=0,this.hpBarSpeed=0,this.fusionPaletteSwaps=!0,this.enableTouchControls=!1,this.enableVibration=!1,this.showBgmBar=!0,this.battleStyle=Y1.SWITCH,this.typeHints=!1,this.disableMenu=!1,this.mysteryEncounterSaveData=new Wr,this.shopOverlayShown=!1,this.shopOverlayOpacity=.8,this.bgmCache=new Set,this.rngCounter=0,this.rngSeedOverride="",this.rngOffset=0,this.infoToggles=[],this.eventTarget=new EventTarget,this.phaseQueue=[],this.phaseQueuePrepend=[],this.conditionalQueue=[],this.phaseQueuePrependSpliceIndex=-1,this.nextCommandPhaseQueue=[],this.eventManager=new iG,this.updateGameInfo(),c7(this)}loadPokemonAtlas(A,s,R){R===void 0&&(R=this.experimentalSprites);const a=s.includes("variant/")||/_[0-3]$/.test(s);R&&(R=this.hasExpSprite(A)),a&&(s=s.replace("variant/","")),this.load.atlas(A,`images/pokemon/${a?"variant/":""}${R?"exp/":""}${s}.png`,`images/pokemon/${a?"variant/":""}${R?"exp/":""}${s}.json`)}async loadPokemonVariantAssets(A,s,R){this.experimentalSprites&&this.hasExpSprite(A)&&(s=`exp/${s}`);let i=qs;s.split("/").map(L=>i?i=i[L]:null);const r=i;return new Promise(L=>{if(r&&R!==void 0&&r[R]===1){if(ca.hasOwnProperty(A))return L();this.cachedFetch(`./images/pokemon/variant/${s}.json`).then(o=>o.json()).then(o=>{ca[A]=o,L()})}else L()})}async preload(){$J(),await this.initVariantData()}create(){this.scene.remove(ZD.KEY),tJ.apply(this),this.inputController=new pG,this.uiInputs=new WG(this.inputController),this.gameData=new yC,V7(),this.load.setBaseURL(),this.spritePipeline=new HG(this.game),this.renderer.pipelines.add("Sprite",this.spritePipeline),this.fieldSpritePipeline=new zC(this.game),this.renderer.pipelines.add("FieldSprite",this.fieldSpritePipeline),this.launchBattle()}update(){var A;(A=this.ui)==null||A.update()}launchBattle(){this.arenaBg=this.add.sprite(0,0,"plains_bg"),this.arenaBg.setName("sprite-arena-bg"),this.arenaBgTransition=this.add.sprite(0,0,"plains_bg"),this.arenaBgTransition.setName("sprite-arena-bg-transition"),[this.arenaBgTransition,this.arenaBg].forEach(M=>{M.setPipeline(this.fieldSpritePipeline),M.setScale(6),M.setOrigin(0),M.setSize(320,240)});const A=this.add.container(0,0);A.setName("field"),A.setScale(6),this.field=A;const s=this.add.container(0,this.game.canvas.height);s.setName("field-ui"),s.setDepth(1),s.setScale(6),this.fieldUI=s;const R=this.make.rexTransitionImagePack({x:0,y:0,scale:6,key:"loading_bg",origin:{x:0,y:0}},!0);R.transit({mode:"blinds",ease:"Cubic.easeInOut",duration:1250}),R.once("complete",()=>{R.destroy()}),this.add.existing(R);const a=this.add.container(0,0);a.setName("ui"),a.setDepth(2),a.setScale(6),this.uiContainer=a;const i=this.game.canvas.width/6,r=this.game.canvas.height/6-48;this.fieldOverlay=this.add.rectangle(0,r*-1-48,i,r,4342338),this.fieldOverlay.setName("rect-field-overlay"),this.fieldOverlay.setOrigin(0,0),this.fieldOverlay.setAlpha(0),this.fieldUI.add(this.fieldOverlay),this.shopOverlay=this.add.rectangle(0,r*-1-48,i,r,460551),this.shopOverlay.setName("rect-shop-overlay"),this.shopOverlay.setOrigin(0,0),this.shopOverlay.setAlpha(0),this.fieldUI.add(this.shopOverlay),this.modifiers=[],this.enemyModifiers=[],this.modifierBar=new Oo,this.modifierBar.setName("modifier-bar"),this.add.existing(this.modifierBar),a.add(this.modifierBar),this.enemyModifierBar=new Oo(!0),this.enemyModifierBar.setName("enemy-modifier-bar"),this.add.existing(this.enemyModifierBar),a.add(this.enemyModifierBar),this.charSprite=new gG,this.charSprite.setName("sprite-char"),this.charSprite.setup(),this.fieldUI.add(this.charSprite),this.pbTray=new qC(!0),this.pbTray.setName("pb-tray"),this.pbTray.setup(),this.pbTrayEnemy=new qC(!1),this.pbTrayEnemy.setName("enemy-pb-tray"),this.pbTrayEnemy.setup(),this.fieldUI.add(this.pbTray),this.fieldUI.add(this.pbTrayEnemy),this.abilityBar=new hG,this.abilityBar.setName("ability-bar"),this.abilityBar.setup(),this.fieldUI.add(this.abilityBar),this.partyExpBar=new dG,this.partyExpBar.setName("party-exp-bar"),this.partyExpBar.setup(),this.fieldUI.add(this.partyExpBar),this.candyBar=new mG,this.candyBar.setName("candy-bar"),this.candyBar.setup(),this.fieldUI.add(this.candyBar),this.biomeWaveText=le(this.game.canvas.width/6-2,0,ZL.toString(),Q.BATTLE_INFO),this.biomeWaveText.setName("text-biome-wave"),this.biomeWaveText.setOrigin(1,.5),this.fieldUI.add(this.biomeWaveText),this.moneyText=le(this.game.canvas.width/6-2,0,"",Q.MONEY),this.moneyText.setName("text-money"),this.moneyText.setOrigin(1,.5),this.fieldUI.add(this.moneyText),this.scoreText=le(this.game.canvas.width/6-2,0,"",Q.PARTY,{fontSize:"54px"}),this.scoreText.setName("text-score"),this.scoreText.setOrigin(1,.5),this.fieldUI.add(this.scoreText),this.luckText=le(this.game.canvas.width/6-2,0,"",Q.PARTY,{fontSize:"54px"}),this.luckText.setName("text-luck"),this.luckText.setOrigin(1,.5),this.luckText.setVisible(!1),this.fieldUI.add(this.luckText),this.luckLabelText=le(this.game.canvas.width/6-2,0,u.t("common:luckIndicator"),Q.PARTY,{fontSize:"54px"}),this.luckLabelText.setName("text-luck-label"),this.luckLabelText.setOrigin(1,.5),this.luckLabelText.setVisible(!1),this.fieldUI.add(this.luckLabelText),this.arenaFlyout=new yG,this.fieldUI.add(this.arenaFlyout),this.fieldUI.moveBelow(this.arenaFlyout,this.fieldOverlay),this.updateUIPositions(),this.damageNumberHandler=new KG,this.spriteSparkleHandler=new BG,this.spriteSparkleHandler.setup(),this.pokemonInfoContainer=new RS(this.game.canvas.width/6+52,-(this.game.canvas.height/6)+66),this.pokemonInfoContainer.setup(),this.fieldUI.add(this.pokemonInfoContainer),this.party=[];const L=[];this.arenaPlayer=new Er(!0),this.arenaPlayer.setName("arena-player"),this.arenaPlayerTransition=new Er(!0),this.arenaPlayerTransition.setName("arena-player-transition"),this.arenaEnemy=new Er(!1),this.arenaEnemy.setName("arena-enemy"),this.arenaNextEnemy=new Er(!1),this.arenaNextEnemy.setName("arena-next-enemy"),this.arenaBgTransition.setVisible(!1),this.arenaPlayerTransition.setVisible(!1),this.arenaNextEnemy.setVisible(!1),[this.arenaPlayer,this.arenaPlayerTransition,this.arenaEnemy,this.arenaNextEnemy].forEach(M=>{M instanceof sE.GameObjects.Sprite&&M.setOrigin(0,0),A.add(M)});const o=this.addFieldSprite(0,0,`trainer_${this.gameData.gender===Vt.FEMALE?"f":"m"}_back`);o.setOrigin(.5,1),o.setName("sprite-trainer"),A.add(o),this.trainer=o,this.anims.create({key:"prompt",frames:this.anims.generateFrameNumbers("prompt",{start:1,end:4}),frameRate:6,repeat:-1,showOnStart:!0}),this.anims.create({key:"tera_sparkle",frames:this.anims.generateFrameNumbers("tera_sparkle",{start:0,end:12}),frameRate:18,repeat:0,showOnStart:!0,hideOnComplete:!0}),this.reset(!1,!1,!0);const l=new cG;this.uiContainer.add(l),this.ui=l,l.setup();const C=[t.TACKLE,t.TAIL_WHIP,t.FOCUS_ENERGY,t.STRUGGLE];Promise.all([Promise.all(L),vJ().then(()=>bJ(!0)),Promise.all([t.TACKLE,t.TAIL_WHIP,t.FOCUS_ENERGY,t.STRUGGLE].map(M=>lL(M))).then(()=>CL(C,!0)),this.initStarterColors()]).then(()=>{this.pushPhase(new jC),this.pushPhase(new Ri),this.shiftPhase()})}initSession(){this.sessionPlayTime===null&&(this.sessionPlayTime=0),this.lastSavePlayTime===null&&(this.lastSavePlayTime=0),this.playTimeTimer&&this.playTimeTimer.destroy(),this.playTimeTimer=this.time.addEvent({delay:st(1e3),repeat:-1,callback:N(()=>{this.gameData&&this.gameData.gameStats.playTime++,this.sessionPlayTime!==null&&this.sessionPlayTime++,this.lastSavePlayTime!==null&&this.lastSavePlayTime++},"callback")}),this.updateBiomeWaveText(),this.updateMoneyText(),this.updateScoreText()}async initExpSprites(){J0.length||this.cachedFetch("./exp-sprites.json").then(A=>A.json()).then(A=>{Array.isArray(A)&&J0.push(...A),Promise.resolve()})}async initVariantData(){Object.keys(qs).forEach(A=>delete qs[A]),await this.cachedFetch("./images/pokemon/variant/_masterlist.json").then(A=>A.json()).then(A=>{if(Object.keys(A).forEach(s=>qs[s]=A[s]),this.experimentalSprites){const s=qs.exp,R=N(a=>{let i=qs,r=s;a.map((L,o)=>{o<a.length-1?(i=i[L],r=r[L]):i.hasOwnProperty(L)&&r.hasOwnProperty(L)&&(["back","female"].includes(L)?R(a.concat(L)):i[L]=r[L])})},"traverseVariantData");Object.keys(s).forEach(a=>R([a]))}Promise.resolve()})}cachedFetch(A,s){const R=this.game.manifest;if(R){const a=R[`/${A.replace("./","")}`];a&&(A+=`?t=${a}`)}return fetch(A,s)}initStarterColors(){return new Promise(A=>{if(TR)return A();this.cachedFetch("./starter-colors.json").then(s=>s.json()).then(s=>{TR={},Object.keys(s).forEach(R=>{TR[R]=s[R]}),A()})})}hasExpSprite(A){const s=/^pkmn__?(back__)?(shiny__)?(female__)?(\d+)(\-.*?)?(?:_[1-3])?$/g.exec(A);if(!s)return!1;let R=s[4];return s[2]&&(R+="s"),s[1]&&(R+="b"),s[3]&&(R+="f"),s[5]&&(R+=s[5]),!!J0.includes(R)}getPlayerParty(){return this.party}getPokemonAllowedInBattle(){return this.getPlayerParty().filter(A=>A.isAllowedInBattle())}getPlayerPokemon(A=!0){return this.getPlayerField().find(s=>s.isActive()&&(A||s.switchOutStatus===!1))}getPlayerField(){var s;const A=this.getPlayerParty();return A.slice(0,Math.min(A.length,(s=this.currentBattle)!=null&&s.double?2:1))}getEnemyParty(){var A;return((A=this.currentBattle)==null?void 0:A.enemyParty)??[]}getEnemyPokemon(A=!0){return this.getEnemyField().find(s=>s.isActive()&&(A||s.switchOutStatus===!1))}getEnemyField(){var s;const A=this.getEnemyParty();return A.slice(0,Math.min(A.length,(s=this.currentBattle)!=null&&s.double?2:1))}getField(A=!1){const s=new Array(4).fill(null),R=this.getPlayerField(),a=this.getEnemyField();return s.splice(0,R.length,...R),s.splice(2,a.length,...a),A?s.filter(i=>i==null?void 0:i.isActive()):s}redirectPokemonMoves(A,s){if(this.currentBattle.double!==!1&&s!=null&&s.isActive(!0)){let R;do R=this.findPhase(a=>a instanceof wA&&a.targets.length===1&&a.targets[0]===A.getBattlerIndex()&&a.pokemon.isPlayer()!==s.isPlayer()),R&&R.targets[0]!==s.getBattlerIndex()&&(R.targets[0]=s.getBattlerIndex());while(R)}}getModifierBar(A){return A?this.enemyModifierBar:this.modifierBar}addInfoToggle(A){this.infoToggles.push(A)}getInfoToggles(A=!1){return A?this.infoToggles.filter(s=>s==null?void 0:s.isActive()):this.infoToggles}getPokemonById(A){const s=N(R=>R.find(a=>a.id===A),"findInParty");return(s(this.getPlayerParty())||s(this.getEnemyParty()))??null}addPlayerPokemon(A,s,R,a,i,r,L,o,l,C,M){const D=new vE(A,s,R,a,i,r,L,o,l,C);return M&&M(D),D.init(),D}addEnemyPokemon(A,s,R,a=!1,i=!1,r,L){Ye.OPP_LEVEL_OVERRIDE>0&&(s=Ye.OPP_LEVEL_OVERRIDE),Ye.OPP_SPECIES_OVERRIDE&&(A=ke(Ye.OPP_SPECIES_OVERRIDE),a=this.getEncounterBossSegments(this.currentBattle.waveIndex,s,A)>1);const o=new xs(A,s,R,a,i,r);if(Ye.OPP_FUSION_OVERRIDE&&o.generateFusionSpecies(),a&&!r){const l=M1(ce(4294967296));for(let C=0;C<o.ivs.length;C++)o.ivs[C]=Math.round(sE.Math.Linear(Math.min(o.ivs[C],l[C]),Math.max(o.ivs[C],l[C]),.75))}L&&L(o);for(let l=0;l<o.ivs.length;l++)o6[l]>-1&&(o.ivs[l]=o6[l]);return o.init(),o}removePokemonFromPlayerParty(A,s=!0){if(!A)return;const R=this.party.indexOf(A);this.party.splice(R,1),s&&(this.field.remove(A,!0),A.destroy()),this.updateModifiers(!0)}addPokemonIcon(A,s,R,a=.5,i=.5,r=!1){const L=this.add.container(s,R);L.setName(`${A.name}-icon`);const o=this.add.sprite(0,0,A.getIconAtlasKey(r));if(o.setName(`sprite-${A.name}-icon`),o.setFrame(A.getIconId(!0)),o.frame.name!==A.getIconId(!0)){console.log(`${A.name}'s variant icon does not exist. Replacing with default.`);const l=A.shiny;A.shiny=!1,o.setTexture(A.getIconAtlasKey(r)),o.setFrame(A.getIconId(!0)),A.shiny=l}if(o.setOrigin(.5,0),L.add(o),A.isFusion()){const l=this.add.sprite(0,0,A.getFusionIconAtlasKey(r));l.setName("sprite-fusion-icon"),l.setOrigin(.5,0),l.setFrame(A.getFusionIconId(!0));const C=o.width,M=o.height,D=o.frame,_=(o.frame.cutHeight<=l.frame.cutHeight?Math.ceil:Math.floor)((o.frame.cutHeight+l.frame.cutHeight)/4),P=`${o.frame.name}f${l.frame.name}`;o.frame.texture.has(P)||o.frame.texture.add(P,o.frame.sourceIndex,o.frame.cutX,o.frame.cutY,o.frame.cutWidth,_),o.setFrame(P),l.y=o.frame.cutHeight;const h=l.frame,H=l.frame.cutY+o.frame.cutHeight,d=l.frame.cutHeight-o.frame.cutHeight,f=`${l.frame.name}f${o.frame.name}`;l.frame.texture.has(f)||l.frame.texture.add(f,l.frame.sourceIndex,l.frame.cutX,H,l.frame.cutWidth,d),l.setFrame(f);const B=(D.y+h.y)/2;o.frame.y=l.frame.y=B,L.add(l),a!==.5&&(L.x-=C*(a-.5)),i!==0&&(L.y-=M*i)}else a!==.5&&(L.x-=o.width*(a-.5)),i!==0&&(L.y-=o.height*i);return L}setSeed(A){this.seed=A,this.rngCounter=0,this.waveCycleOffset=this.getGeneratedWaveCycleOffset(),this.offsetGym=this.gameMode.isClassic&&this.getGeneratedOffsetGym()}randBattleSeedInt(A,s=0){var R;return(R=this.currentBattle)==null?void 0:R.randSeedInt(A,s)}reset(A=!1,s=!1,R=!1){var a,i,r;s&&(this.gameData=new yC),this.gameMode=kl(SA.CLASSIC),this.disableMenu=!1,this.score=0,this.money=0,this.lockModifierTiers=!1,this.pokeballCounts=Object.fromEntries(DE(be).filter(L=>L<=be.MASTER_BALL).map(L=>[L,0])),this.pokeballCounts[be.POKEBALL]+=5,Ye.POKEBALL_OVERRIDE.active&&(this.pokeballCounts=Ye.POKEBALL_OVERRIDE.pokeballs),this.modifiers=[],this.enemyModifiers=[],this.modifierBar.removeAll(!0),this.enemyModifierBar.removeAll(!0);for(const L of this.getPlayerParty())L.destroy();this.party=[];for(const L of this.getEnemyParty())L.destroy();if((i=(a=this.currentBattle)==null?void 0:a.mysteryEncounter)!=null&&i.introVisuals&&this.field.remove((r=this.currentBattle.mysteryEncounter)==null?void 0:r.introVisuals,!0),this.currentBattle=null,this.setSeed(Ye.SEED_OVERRIDE||PM(24)),console.log("Seed:",this.seed),this.resetSeed(),this.biomeWaveText.setText(ZL.toString()),this.biomeWaveText.setVisible(!1),this.updateMoneyText(),this.moneyText.setVisible(!1),this.updateScoreText(),this.scoreText.setVisible(!1),[this.luckLabelText,this.luckText].map(L=>L.setVisible(!1)),this.newArena(Ye.STARTING_BIOME_OVERRIDE||T.TOWN),this.field.setVisible(!0),this.arenaBgTransition.setPosition(0,0),this.arenaPlayer.setPosition(300,0),this.arenaPlayerTransition.setPosition(0,0),[this.arenaEnemy,this.arenaNextEnemy].forEach(L=>L.setPosition(-280,0)),this.arenaNextEnemy.setVisible(!1),this.arena.init(),this.trainer.setTexture(`trainer_${this.gameData.gender===Vt.FEMALE?"f":"m"}_back`),this.trainer.setPosition(406,186),this.trainer.setVisible(!0),this.mysteryEncounterSaveData=new Wr,this.updateGameInfo(),R){const L=[...wR,...we,...NE,...DE(HE).map(o=>ZT(o)).map(o=>Object.values(o).flat().map(l=>l.modifierType).filter(l=>"localize"in l).map(l=>l)).flat()];for(const o of L)o.localize()}A&&(this.initVariantData(),this.fadeOutBgm(250,!1),this.tweens.add({targets:[this.uiContainer],alpha:0,duration:250,ease:"Sine.easeInOut",onComplete:N(()=>{this.clearPhaseQueue(),this.ui.freeUIData(),this.uiContainer.remove(this.ui,!0),this.uiContainer.destroy(),this.children.removeAll(!0),this.game.domContainer.innerHTML="",this.launchBattle()},"onComplete")}))}getDoubleBattleChance(A,s){const R=new _s(A%10===0?32:8);return this.applyModifiers(EL,!0,R),s.forEach(a=>ut(Ka,a,null,!1,R)),Math.max(R.value,1)}newBattle(A,s,R,a,i){var h;const r=Ye.STARTING_WAVE_OVERRIDE||ZL,L=A||(((h=this.currentBattle)==null?void 0:h.waveIndex)||r-1)+1;let o,l,C,M=null;this.resetSeed(L);const D=this.getPlayerField();if(this.gameMode.isFixedBattle(L)&&R===void 0)M=this.gameMode.getFixedBattle(L),o=M.double,l=M.battleType,this.executeWithSeedOffset(()=>C=M==null?void 0:M.getTrainer(),(M.seedOffsetWaveIndex||L)<<8),C&&this.field.add(C);else{if(this.gameMode.hasTrainers?s===void 0?l=this.gameMode.isWaveTrainer(L,this.arena)?Ut.TRAINER:Ut.WILD:l=s:l=Ut.WILD,l===Ut.TRAINER){const H=this.arena.randomTrainerType(L);let d=!1;QA[H].doubleOnly?d=!0:QA[H].hasDouble&&(d=!ce(this.getDoubleBattleChance(L,D)),QA[H].trainerTypeDouble&&![U.TATE,U.LIZA].includes(H)&&(d=!1));const f=d?OA.DOUBLE:ce(2)?OA.FEMALE:OA.DEFAULT;C=R!==void 0?R.toTrainer():new Gs(H,f),this.field.add(C)}(this.isWaveMysteryEncounter(l,L)||l===Ut.MYSTERY_ENCOUNTER)&&(l=Ut.MYSTERY_ENCOUNTER,this.mysteryEncounterSaveData.encounterSpawnChance=H8)}if(a===void 0&&L>1?l===Ut.WILD&&!this.gameMode.isWaveFinal(L)?o=!ce(this.getDoubleBattleChance(L,D)):l===Ut.TRAINER&&(o=(C==null?void 0:C.variant)===OA.DOUBLE):M||(o=!!a),this.gameMode.isEndlessBoss(L)&&(o=!1),!ve(Ye.BATTLE_TYPE_OVERRIDE)){let H=null;switch(Ye.BATTLE_TYPE_OVERRIDE){case"double":H="double";break;case"single":H="single";break;case"even-doubles":H=L%2?"single":"double";break;case"odd-doubles":H=L%2?"double":"single";break}H==="double"&&(o=!0),l!==Ut.TRAINER&&H==="single"&&(o=!1)}const _=this.currentBattle,P=this.getMaxExpLevel();if(this.lastEnemyTrainer=(_==null?void 0:_.trainer)??null,this.lastMysteryEncounter=_==null?void 0:_.mysteryEncounter,l===Ut.MYSTERY_ENCOUNTER&&(o=!1),_!=null&&_.double&&!o&&(this.tryRemovePhase(H=>H instanceof xI),this.getPlayerField().forEach(H=>H.lapseTag(y.COMMANDED))),this.executeWithSeedOffset(()=>{this.currentBattle=new ac(this.gameMode,L,l,C,o)},L<<3,this.waveSeed),this.currentBattle.incrementTurn(),l===Ut.MYSTERY_ENCOUNTER&&(this.currentBattle.mysteryEncounterType=i),!A&&_){const H=!(_.waveIndex%10),d=this.gameMode.hasShortBiomes||this.gameMode.isDaily,f=this.gameMode.hasShortBiomes&&_.waveIndex%5===0,B=_.waveIndex%50===49,F=H||f||d&&B,W=F||[Ut.TRAINER,Ut.MYSTERY_ENCOUNTER].includes(this.currentBattle.battleType)||this.currentBattle.battleSpec===SE.FINAL_BOSS;if(this.getEnemyParty().forEach(b=>b.destroy()),this.trySpreadPokerus(),!F&&L%10===5&&this.arena.updatePoolsForTimeOfDay(),W){this.arena.resetArenaEffects(),D.forEach(b=>b.lapseTag(y.COMMANDED)),D.forEach((b,x)=>{b.isOnField()&&this.pushPhase(new fr(x))});for(const b of this.getPlayerParty())b.resetBattleData(),y8(xr,b);this.trainer.visible||this.pushPhase(new pC)}for(const b of this.getPlayerParty())this.triggerPokemonFormChange(b,K_);!this.gameMode.hasRandomBiomes&&!F?this.pushPhase(new eU):(this.pushPhase(new QG),this.pushPhase(new bG),this.getMaxExpLevel()>P&&this.pushPhase(new wG))}return this.currentBattle}newArena(A){return this.arena=new kD(A,T[A].toLowerCase()),this.eventTarget.dispatchEvent(new o_),this.arenaBg.pipelineData={terrainColorRatio:this.arena.getBgTerrainColorRatioForBiome()},this.arena}updateFieldScale(){return new Promise(A=>{const s=Math.floor(Math.pow(1/this.getField(!0).map(R=>R.getSpriteScale()).reduce((R,a)=>R=Math.max(a,R),0),.7)*40)/40;this.setFieldScale(s).then(()=>A())})}setFieldScale(A,s=!1){return new Promise(R=>{if(A*=6,this.field.scale===A)return R();const a=this.arenaBg.width*6,i=132*6,r=this.arenaBg.width*A,L=132*A;this.tweens.add({targets:this.field,scale:A,x:(a-r)/2,y:i-L,duration:s?0:st(Math.abs(this.field.scale-A)*200),ease:"Sine.easeInOut",onComplete:N(()=>R(),"onComplete")})})}getSpeciesFormIndex(A,s,R,a){var r,L,o,l,C,M,D;if(!((r=A.forms)!=null&&r.length))return 0;const i=["EggLapsePhase","EggHatchPhase"].includes(((L=this.getCurrentPhase())==null?void 0:L.constructor.name)??"");switch(A.speciesId){case e.UNOWN:case e.SHELLOS:case e.GASTRODON:case e.BASCULIN:case e.DEERLING:case e.SAWSBUCK:case e.FROAKIE:case e.FROGADIER:case e.SCATTERBUG:case e.SPEWPA:case e.VIVILLON:case e.FLABEBE:case e.FLOETTE:case e.FLORGES:case e.FURFROU:case e.PUMPKABOO:case e.GOURGEIST:case e.ORICORIO:case e.MAGEARNA:case e.ZARUDE:case e.SQUAWKABILLY:case e.TATSUGIRI:case e.PALDEA_TAUROS:return ce(A.forms.length);case e.PIKACHU:return((o=this.currentBattle)==null?void 0:o.battleType)===Ut.TRAINER&&((l=this.currentBattle)==null?void 0:l.waveIndex)<30?0:ce(8);case e.EEVEE:return((C=this.currentBattle)==null?void 0:C.battleType)===Ut.TRAINER&&((M=this.currentBattle)==null?void 0:M.waveIndex)<30&&!i?0:ce(2);case e.GRENINJA:return((D=this.currentBattle)==null?void 0:D.battleType)===Ut.TRAINER?0:ce(2);case e.ZYGARDE:return ce(4);case e.MINIOR:return ce(7);case e.ALCREMIE:return ce(9);case e.MEOWSTIC:case e.INDEEDEE:case e.BASCULEGION:case e.OINKOLOGNE:return s===at.FEMALE?1:0;case e.TOXTRICITY:const _=[At.LONELY,At.BOLD,At.RELAXED,At.TIMID,At.SERIOUS,At.MODEST,At.MILD,At.QUIET,At.BASHFUL,At.CALM,At.GENTLE,At.CAREFUL];return R!==void 0&&_.indexOf(R)>-1?1:0;case e.GIMMIGHOUL:return this.gameMode.hasMysteryEncounters&&!i?1:ce(A.forms.length)}if(a){switch(A.speciesId){case e.BURMY:case e.WORMADAM:case e.ROTOM:case e.LYCANROC:return ce(A.forms.length)}return 0}return this.arena.getSpeciesFormIndex(A)}getGeneratedOffsetGym(){let A=!1;return this.executeWithSeedOffset(()=>{A=!ce(2)},0,this.seed.toString()),A}getGeneratedWaveCycleOffset(){let A=0;return this.executeWithSeedOffset(()=>{A=ce(8)*5},0,this.seed.toString()),A}getEncounterBossSegments(A,s,R,a=!1){if(Ye.OPP_HEALTH_SEGMENTS_OVERRIDE>1)return Ye.OPP_HEALTH_SEGMENTS_OVERRIDE;if(Ye.OPP_HEALTH_SEGMENTS_OVERRIDE===1)return 0;if(this.gameMode.isDaily&&this.gameMode.isWaveFinal(A))return 5;let i;if(a||R&&(R.subLegendary||R.legendary||R.mythical)?i=!0:this.executeWithSeedOffset(()=>{i=A%10===0||this.gameMode.hasRandomBosses&&ce(100)<Math.min(Math.max(Math.ceil((A-250)/50),0)*2,30)},A<<2),!i)return 0;let r=2;return s>=100&&r++,R&&R.baseTotal>=670&&r++,r+=Math.floor(A/250),r}trySpreadPokerus(){const A=this.getPlayerParty(),s=[],R=N((a,i)=>{const r=A[a+i];!r.pokerus&&!ce(10)&&(r.pokerus=!0,s.push(a+i))},"spread");A.forEach((a,i)=>{!a.pokerus||s.indexOf(i)>-1||this.executeWithSeedOffset(()=>{i&&R(i,-1),i<A.length-1&&R(i,1)},this.currentBattle.waveIndex+(i<<8))})}resetSeed(A){var R;const s=A||((R=this.currentBattle)==null?void 0:R.waveIndex)||0;this.waveSeed=a_(this.seed,s),sE.Math.RND.sow([this.waveSeed]),console.log("Wave Seed:",this.waveSeed,s),this.rngCounter=0}executeWithSeedOffset(A,s,R){if(!A)return;const a=this.rngCounter,i=this.rngOffset,r=this.rngSeedOverride,L=sE.Math.RND.state();sE.Math.RND.sow([a_(R||this.seed,s)]),this.rngCounter=0,this.rngOffset=s,this.rngSeedOverride=R||"",A(),sE.Math.RND.state(L),this.rngCounter=a,this.rngOffset=i,this.rngSeedOverride=r}addFieldSprite(A,s,R,a,i=0){const r=this.add.sprite(A,s,R,a);return r.setPipeline(this.fieldSpritePipeline),i&&(r.pipelineData.terrainColorRatio=i),r}addPokemonSprite(A,s,R,a,i,r=!1,L=!1){const o=this.addFieldSprite(s,R,a,i);return this.initPokemonSprite(o,A,r,L),o}initPokemonSprite(A,s,R=!1,a=!1){return A.setPipeline(this.spritePipeline,{tone:[0,0,0,0],hasShadow:R,ignoreOverride:a,teraColor:s?yR(s.getTeraType()):void 0}),this.spriteSparkleHandler.add(A),A}moveBelowOverlay(A){this.fieldUI.moveBelow(A,this.fieldOverlay)}processInfoButton(A){this.arenaFlyout.toggleFlyout(A)}showFieldOverlay(A){return new Promise(s=>{this.tweens.add({targets:this.fieldOverlay,alpha:.5,ease:"Sine.easeOut",duration:A,onComplete:N(()=>s(),"onComplete")})})}hideFieldOverlay(A){return new Promise(s=>{this.tweens.add({targets:this.fieldOverlay,alpha:0,duration:A,ease:"Cubic.easeIn",onComplete:N(()=>s(),"onComplete")})})}updateShopOverlayOpacity(A){this.shopOverlayOpacity=A,this.shopOverlayShown&&this.shopOverlay.setAlpha(this.shopOverlayOpacity)}showShopOverlay(A){return this.shopOverlayShown=!0,new Promise(s=>{this.tweens.add({targets:this.shopOverlay,alpha:this.shopOverlayOpacity,ease:"Sine.easeOut",duration:A,onComplete:N(()=>s(),"onComplete")})})}hideShopOverlay(A){return this.shopOverlayShown=!1,new Promise(s=>{this.tweens.add({targets:this.shopOverlay,alpha:0,duration:A,ease:"Cubic.easeIn",onComplete:N(()=>s(),"onComplete")})})}showEnemyModifierBar(){this.enemyModifierBar.setVisible(!0)}hideEnemyModifierBar(){this.enemyModifierBar.setVisible(!1)}updateBiomeWaveText(){const A=!(this.currentBattle.waveIndex%10),s=TL(this.arena.biomeType);this.fieldUI.moveAbove(this.biomeWaveText,this.luckText),this.biomeWaveText.setText(s+" - "+this.currentBattle.waveIndex.toString()),this.biomeWaveText.setColor(A?"#f89890":"#ffffff"),this.biomeWaveText.setShadowColor(A?"#984038":"#636363"),this.biomeWaveText.setVisible(!0)}updateMoneyText(A=!0){if(this.money===void 0)return;const s=vo(this.moneyFormat,this.money);this.moneyText.setText(u.t("battleScene:moneyOwned",{formattedMoney:s})),this.fieldUI.moveAbove(this.moneyText,this.luckText),A&&this.moneyText.setVisible(!0)}animateMoneyChanged(A){if(this.tweens.getTweensOf(this.moneyText).length>0)return;const s=this.moneyText.scale*.14*(A?1:-1);this.moneyText.setShadowColor(A?"#008000":"#FF0000"),this.tweens.add({targets:this.moneyText,duration:250,scale:this.moneyText.scale+s,loop:0,yoyo:!0,onComplete:N(R=>this.moneyText.setShadowColor(aA(Q.MONEY,!0)),"onComplete")})}updateScoreText(){this.scoreText.setText(`Score: ${this.score.toString()}`),this.scoreText.setVisible(this.gameMode.isDaily)}updateAndShowText(A){const s=[this.luckLabelText,this.luckText];s.forEach(a=>a.setAlpha(0));const R=Hr(this.getPlayerParty());this.luckText.setText(Q6(R)),R<14?this.luckText.setTint(J6(R)):this.luckText.setTint(16772956,4718441,7039999,16738665),this.luckLabelText.setX(this.game.canvas.width/6-2-(this.luckText.displayWidth+2)),this.tweens.add({targets:s,duration:A,alpha:1,onComplete:N(()=>{s.forEach(a=>a.setVisible(!0))},"onComplete")})}hideLuckText(A){if(this.reroll)return;const s=[this.luckLabelText,this.luckText];this.tweens.add({targets:s,duration:A,alpha:0,onComplete:N(()=>{s.forEach(R=>R.setVisible(!1))},"onComplete")})}updateUIPositions(){var a;const A=this.enemyModifiers.filter(i=>i.isIconVisible()).length,s=this.biomeWaveText.getBottomLeft().y-this.biomeWaveText.getTopLeft().y;this.biomeWaveText.setY(-(this.game.canvas.height/6)+(A?A<=12?15:24:0)+s/2),this.moneyText.setY(this.biomeWaveText.y+10),this.scoreText.setY(this.moneyText.y+10),[this.luckLabelText,this.luckText].map(i=>i.setY((this.scoreText.visible?this.scoreText:this.moneyText).y+10));const R=(this.scoreText.visible?this.scoreText:this.moneyText).y+15;this.partyExpBar.setY(R),this.candyBar.setY(R+15),(a=this.ui)==null||a.achvBar.setY(this.game.canvas.height/6+R)}sendTextToBack(){this.fieldUI.sendToBack(this.biomeWaveText),this.fieldUI.sendToBack(this.moneyText),this.fieldUI.sendToBack(this.scoreText)}addFaintedEnemyScore(A){let s=A.getSpeciesForm().getBaseExp()*(A.level/this.getMaxExpLevel())*(A.ivs.reduce((R,a)=>a+=R,0)/93*.2+.8);this.findModifiers(R=>R instanceof dt&&R.pokemonId===A.id,!1).map(R=>s*=R.getScoreMultiplier()),A.isBoss()&&(s*=Math.sqrt(A.bossSegments)),this.currentBattle.battleScore+=Math.ceil(s)}getMaxExpLevel(A=!1){var i;if(Ye.LEVEL_CAP_OVERRIDE>0)return Ye.LEVEL_CAP_OVERRIDE;if(A||Ye.LEVEL_CAP_OVERRIDE<0)return Number.MAX_SAFE_INTEGER;const s=Math.ceil((((i=this.currentBattle)==null?void 0:i.waveIndex)||1)/10)*10,R=this.gameMode.getWaveForDifficulty(s),a=(1+R/2+Math.pow(R/25,2))*1.2;return Math.ceil(a/2)*2+2}randomSpecies(A,s,R,a,i){if(R)return this.arena.randomSpecies(A,s,void 0,Hr(this.party));const r=a?[...new Set(wR.filter(L=>L.isCatchable()).filter(a).map(L=>{if(!i)for(;yA.hasOwnProperty(L.speciesId);)L=ke(yA[L.speciesId]);return L}))]:wR.filter(L=>L.isCatchable());return r[ce(r.length)]}generateRandomBiome(A){const s=A%250,R=DE(T).filter(l=>l!==T.TOWN&&l!==T.END),a=wO[T.END][0]-2,i=new Array(a+1).fill(null).map((l,C)=>(1-Math.min(Math.abs(C/(a-1)-s/250)+.25,1))/.75*250),r=[];let L=0;for(const l of R)L+=Math.ceil(i[wO[l][0]-1]/wO[l][1]),r.push(L);const o=ce(L);for(let l=0;l<R.length;l++)if(o<r[l])return R[l];return R[ce(R.length)]}isBgmPlaying(){return this.bgm&&this.bgm.isPlaying}playBgm(A,s){var r,L;if(A===void 0&&(A=((r=this.currentBattle)==null?void 0:r.getBgmOverride())||((L=this.arena)==null?void 0:L.bgm)),this.bgm&&A===this.bgm.key){this.bgm.isPlaying||this.bgm.play({volume:this.masterVolume*this.bgmVolume});return}s&&!this.bgm&&(s=!1),this.bgmCache.add(A),this.loadBgm(A);let R=0;R=A===this.arena.bgm?this.arena.getBgmLoopPoint():this.getBgmLoopPoint(A);let a=!1;const i=N(()=>{if(this.ui.bgmBar.setBgmToBgmBar(A),A===null&&this.bgm&&!this.bgm.pendingRemove){this.bgm.play({volume:this.masterVolume*this.bgmVolume});return}this.bgm&&!this.bgm.pendingRemove&&this.bgm.isPlaying&&this.bgm.stop(),this.bgm=this.sound.add(A,{loop:!0}),this.bgm.play({volume:this.masterVolume*this.bgmVolume}),R&&this.bgm.on("looped",()=>this.bgm.play({seek:R}))},"playNewBgm");if(this.load.once(sE.Loader.Events.COMPLETE,()=>{a=!0,(!s||!this.bgm.isPlaying)&&i()}),s){const o=N(()=>{a&&(!this.bgm.isPlaying||this.bgm.pendingRemove)&&i()},"onBgmFaded");this.time.delayedCall(this.fadeOutBgm(500,!0)?750:250,o)}this.load.isLoading()||this.load.start()}pauseBgm(){return this.bgm&&!this.bgm.pendingRemove&&this.bgm.isPlaying?(this.bgm.pause(),!0):!1}resumeBgm(){return this.bgm&&!this.bgm.pendingRemove&&this.bgm.isPaused?(this.bgm.resume(),!0):!1}updateSoundVolume(){if(this.sound)for(const A of this.sound.getAllPlaying())if(this.bgmCache.has(A.key))A.setVolume(this.masterVolume*this.bgmVolume);else{const s=A.key.split("/");switch(s[0]){case"battle_anims":case"cry":s[1].startsWith("PRSFX- ")?A.setVolume(this.masterVolume*this.fieldVolume*.5):A.setVolume(this.masterVolume*this.fieldVolume);break;case"se":case"ui":A.setVolume(this.masterVolume*this.seVolume)}}}fadeOutBgm(A=500,s=!0){return this.bgm&&this.sound.getAllPlaying().find(a=>a.key===this.bgm.key)?(AO.fadeOut(this,this.bgm,A,s),!0):!1}fadeAndSwitchBgm(A,s=!1,R=2e3){this.fadeOutBgm(R,s),this.time.delayedCall(R,()=>{this.playBgm(A)})}playSound(A,s){const R=typeof A=="string"?A:A.key;s=s??{};try{const a=R.split("/");switch(s.volume=s.volume??1,a[0]){case"level_up_fanfare":case"item_fanfare":case"minor_fanfare":case"heal":case"evolution":case"evolution_fanfare":s.volume*=this.masterVolume*this.bgmVolume;break;case"battle_anims":case"cry":s.volume*=this.masterVolume*this.fieldVolume,a[1].startsWith("PRSFX- ")&&(s.volume*=.5);break;case"ui":s.volume*=this.masterVolume*this.uiVolume;break;case"se":s.volume*=this.masterVolume*this.seVolume;break}return this.sound.play(R,s),this.sound.get(R)}catch{return console.log(`${R} not found`),A}}playSoundWithoutBgm(A,s){this.bgmCache.add(A);const R=this.pauseBgm();this.playSound(A);const a=this.sound.get(A);return this.bgmResumeTimer&&this.bgmResumeTimer.destroy(),R&&(this.bgmResumeTimer=this.time.delayedCall(s||st(a.totalDuration*1e3),()=>{this.resumeBgm(),this.bgmResumeTimer=null})),a}getBgmLoopPoint(A){switch(A){case"battle_kanto_champion":return 13.95;case"battle_johto_champion":return 23.498;case"battle_hoenn_champion_g5":return 11.328;case"battle_hoenn_champion_g6":return 11.762;case"battle_sinnoh_champion":return 12.235;case"battle_champion_alder":return 27.653;case"battle_champion_iris":return 10.145;case"battle_kalos_champion":return 10.38;case"battle_alola_champion":return 13.025;case"battle_galar_champion":return 61.635;case"battle_champion_geeta":return 37.447;case"battle_champion_nemona":return 14.914;case"battle_champion_kieran":return 7.206;case"battle_hoenn_elite":return 11.35;case"battle_unova_elite":return 17.73;case"battle_kalos_elite":return 12.34;case"battle_alola_elite":return 19.212;case"battle_galar_elite":return 164.069;case"battle_paldea_elite":return 12.77;case"battle_bb_elite":return 19.434;case"battle_final_encounter":return 19.159;case"battle_final":return 16.453;case"battle_kanto_gym":return 13.857;case"battle_johto_gym":return 12.911;case"battle_hoenn_gym":return 12.379;case"battle_sinnoh_gym":return 13.122;case"battle_unova_gym":return 19.145;case"battle_kalos_gym":return 44.81;case"battle_galar_gym":return 171.262;case"battle_paldea_gym":return 127.489;case"battle_legendary_kanto":return 32.966;case"battle_legendary_raikou":return 12.632;case"battle_legendary_entei":return 2.905;case"battle_legendary_suicune":return 12.636;case"battle_legendary_lugia":return 19.77;case"battle_legendary_ho_oh":return 17.668;case"battle_legendary_regis_g5":return 49.5;case"battle_legendary_regis_g6":return 21.13;case"battle_legendary_gro_kyo":return 10.547;case"battle_legendary_rayquaza":return 10.495;case"battle_legendary_deoxys":return 13.333;case"battle_legendary_lake_trio":return 16.887;case"battle_legendary_sinnoh":return 22.77;case"battle_legendary_dia_pal":return 16.009;case"battle_legendary_origin_forme":return 18.961;case"battle_legendary_giratina":return 10.451;case"battle_legendary_arceus":return 9.595;case"battle_legendary_unova":return 13.855;case"battle_legendary_kyurem":return 18.314;case"battle_legendary_res_zek":return 18.329;case"battle_legendary_xern_yvel":return 26.468;case"battle_legendary_tapu":return 0;case"battle_legendary_sol_lun":return 6.525;case"battle_legendary_ub":return 9.818;case"battle_legendary_dusk_dawn":return 5.211;case"battle_legendary_ultra_nec":return 10.344;case"battle_legendary_zac_zam":return 11.424;case"battle_legendary_glas_spec":return 12.503;case"battle_legendary_calyrex":return 50.641;case"battle_legendary_riders":return 18.155;case"battle_legendary_birds_galar":return .175;case"battle_legendary_ruinous":return 6.333;case"battle_legendary_kor_mir":return 6.442;case"battle_legendary_loyal_three":return 6.5;case"battle_legendary_ogerpon":return 14.335;case"battle_legendary_terapagos":return 24.377;case"battle_legendary_pecharunt":return 6.508;case"battle_rival":return 14.11;case"battle_rival_2":return 17.714;case"battle_rival_3":return 17.586;case"battle_trainer":return 13.686;case"battle_wild":return 12.703;case"battle_wild_strong":return 13.94;case"end_summit":return 30.025;case"battle_rocket_grunt":return 12.707;case"battle_aqua_magma_grunt":return 12.062;case"battle_galactic_grunt":return 13.043;case"battle_plasma_grunt":return 12.974;case"battle_flare_grunt":return 4.228;case"battle_aether_grunt":return 16;case"battle_skull_grunt":return 20.87;case"battle_macro_grunt":return 11.56;case"battle_star_grunt":return 133.362;case"battle_galactic_admin":return 11.997;case"battle_skull_admin":return 15.463;case"battle_oleana":return 14.11;case"battle_star_admin":return 9.493;case"battle_rocket_boss":return 9.115;case"battle_aqua_magma_boss":return 14.847;case"battle_galactic_boss":return 106.962;case"battle_plasma_boss":return 25.624;case"battle_flare_boss":return 8.085;case"battle_aether_boss":return 11.33;case"battle_skull_boss":return 13.13;case"battle_macro_boss":return 11.42;case"battle_star_boss":return 25.764;case"mystery_encounter_gen_5_gts":return 8.52;case"mystery_encounter_gen_6_gts":return 9.24;case"mystery_encounter_fun_and_games":return 4.78;case"mystery_encounter_weird_dream":return 41.42;case"mystery_encounter_delibirdy":return 82.28}return 0}toggleInvert(A){A?this.cameras.main.setPostPipeline(G7):this.cameras.main.removePostPipeline("InvertPostFX")}getCurrentPhase(){return this.currentPhase}getStandbyPhase(){return this.standbyPhase}pushConditionalPhase(A,s){this.conditionalQueue.push([s,A])}pushPhase(A,s=!1){(s?this.nextCommandPhaseQueue:this.phaseQueue).push(A)}unshiftPhase(A){this.phaseQueuePrependSpliceIndex===-1?this.phaseQueuePrepend.push(A):this.phaseQueuePrepend.splice(this.phaseQueuePrependSpliceIndex,0,A)}clearPhaseQueue(){this.phaseQueue.splice(0,this.phaseQueue.length)}setPhaseQueueSplice(){this.phaseQueuePrependSpliceIndex=this.phaseQueuePrepend.length}clearPhaseQueueSplice(){this.phaseQueuePrependSpliceIndex=-1}shiftPhase(){var A;if(this.standbyPhase){this.currentPhase=this.standbyPhase,this.standbyPhase=null;return}if(this.phaseQueuePrependSpliceIndex>-1&&this.clearPhaseQueueSplice(),this.phaseQueuePrepend.length)for(;this.phaseQueuePrepend.length;){const s=this.phaseQueuePrepend.pop();s&&this.phaseQueue.unshift(s)}if(this.phaseQueue.length||(this.populatePhaseQueue(),this.conditionalQueue=[]),this.currentPhase=this.phaseQueue.shift()??null,(A=this.conditionalQueue)!=null&&A.length){const s=this.conditionalQueue.shift();s!=null&&s[0]()?this.pushPhase(s[1]):s?this.conditionalQueue.unshift(s):console.warn("condition phase is undefined/null!",s)}this.currentPhase&&(console.log(`%cStart Phase ${this.currentPhase.constructor.name}`,"color:green;"),this.currentPhase.start())}overridePhase(A){return this.standbyPhase?!1:(this.standbyPhase=this.currentPhase,this.currentPhase=A,console.log(`%cStart Phase ${A.constructor.name}`,"color:green;"),A.start(),!0)}findPhase(A){return this.phaseQueue.find(A)}tryReplacePhase(A,s){const R=this.phaseQueue.findIndex(A);return R>-1?(this.phaseQueue[R]=s,!0):!1}tryRemovePhase(A){const s=this.phaseQueue.findIndex(A);return s>-1?(this.phaseQueue.splice(s,1),!0):!1}tryRemoveUnshiftedPhase(A){const s=this.phaseQueuePrepend.findIndex(A);return s>-1?(this.phaseQueuePrepend.splice(s,1),!0):!1}prependToPhase(A,s){const R=this.phaseQueue.findIndex(a=>a instanceof s);return R!==-1?(this.phaseQueue.splice(R,0,A),!0):(this.unshiftPhase(A),!1)}appendToPhase(A,s){const R=this.phaseQueue.findIndex(a=>a instanceof s);return R!==-1&&this.phaseQueue.length>R?(this.phaseQueue.splice(R+1,0,A),!0):(this.unshiftPhase(A),!1)}queueMessage(A,s,R,a,i){const r=new xG(A,s,R,a);i?this.pushPhase(r):this.unshiftPhase(r)}populatePhaseQueue(){this.nextCommandPhaseQueue.length&&(this.phaseQueue.push(...this.nextCommandPhaseQueue),this.nextCommandPhaseQueue.splice(0,this.nextCommandPhaseQueue.length)),this.phaseQueue.push(new sc)}addMoney(A){this.money=Math.min(this.money+A,Number.MAX_SAFE_INTEGER),this.updateMoneyText(),this.animateMoneyChanged(!0),this.validateAchvs(Ha)}getWaveMoneyAmount(A){const s=this.currentBattle.waveIndex,R=Math.ceil(s/10)-1,a=Math.pow((R+1+(.75+((s-1)%10+1)/10))*100,1+.005*R)*A;return Math.floor(a/10)*10}addModifier(A,s,R,a,i,r){return A?new Promise(L=>{let o=!1;const l=A.type.soundName;this.validateAchvs(Zl,A);const C=[],M=[];if(A instanceof kA){if(A instanceof SR&&C.push(...this.findModifiers(D=>D instanceof SR&&D.pokemonId===A.pokemonId)),A.add(this.modifiers,!!a)){if(A instanceof UR||A instanceof SR){const D=this.getPokemonById(A.pokemonId);D&&(o=A.apply(D,!0))}R&&!this.sound.get(l)&&this.playSound(l)}else if(!a){const D=mk(A.type.tier);return this.queueMessage(u.t("battle:itemStackFull",{fullItemName:A.type.name,itemName:D.name}),void 0,!0),this.addModifier(D.newModifier(),s,R,!1,i).then(_=>L(_))}for(const D of C)this.removeModifier(D);if(!s&&!a)return this.updateModifiers(!0,i).then(()=>L(o))}else if(A instanceof Aa)if(R&&!this.sound.get(l)&&this.playSound(l),A instanceof VR){for(const D in this.party){const _=this.party[D],P=[];if(A instanceof na)if(A.fainted)P.push(1);else{const h=new _s(1);this.applyModifiers(Gi,!0,h),P.push(h.value)}else A instanceof Do?P.push(this.getPokemonById(A.fusePokemonId)):A instanceof uo&&!ve(r)&&P.push(r);if(A.shouldApply(_,...P)){const h=A.apply(_,...P);h instanceof Promise?M.push(h.then(H=>o||(o=H))):o||(o=h)}}return Promise.allSettled([this.party.map(D=>D.updateInfo(i)),...M]).then(()=>L(o))}else{const D=[this];if(A.shouldApply(...D)){const _=A.apply(...D);if(_ instanceof Promise)return _.then(P=>L(P));o||(o=_)}}L(o)}):Promise.resolve(!1)}addEnemyModifier(A,s,R){return new Promise(a=>{const i=[];if(A instanceof SR&&i.push(...this.findModifiers(r=>r instanceof SR&&r.pokemonId===A.pokemonId,!1)),A.add(this.enemyModifiers,!1)){if(A instanceof UR||A instanceof SR){const r=this.getPokemonById(A.pokemonId);r&&A.apply(r,!0)}for(const r of i)this.removeModifier(r,!0)}s?a():this.updateModifiers(!1,R).then(()=>a())})}tryTransferHeldItemModifier(A,s,R,a=1,i,r,L=!0){return new Promise(o=>{const l=A.pokemonId?A.getPokemon():null,C=new Lt(!1);Pr(!!l&&l.isPlayer()!==s.isPlayer(),()=>ut(br,l,C)).then(()=>{if(C.value)return o(!1);const M=A.clone();M.pokemonId=s.id;const D=this.findModifier(P=>P instanceof dt&&P.matchType(A)&&P.pokemonId===s.id,s.isPlayer());let _=!0;if(D){const P=D.getMaxStackCount();if(D.stackCount>=P)return o(!1);const h=Math.min(a,A.stackCount,P-D.stackCount);A.stackCount-=h,M.stackCount=D.stackCount+h,_=!A.stackCount}else{const P=Math.min(a,A.stackCount);A.stackCount-=P,M.stackCount=P}if(_=!A.stackCount,!_||!l||this.removeModifier(A,!l.isPlayer())){const P=N(()=>{!D||this.removeModifier(D,!s.isPlayer())?s.isPlayer()?this.addModifier(M,r,R,!1,i).then(()=>{l&&L&&on(qR,l,!1),o(!0)}):this.addEnemyModifier(M,r,i).then(()=>{l&&L&&on(qR,l,!1),o(!0)}):o(!1)},"addModifier");l&&l.isPlayer()!==s.isPlayer()&&!r?this.updateModifiers(l.isPlayer(),i).then(()=>P()):P();return}o(!1)})})}removePartyMemberModifiers(A){return new Promise(s=>{const R=this.getPlayerParty()[A].id,a=this.modifiers.filter(i=>i instanceof dt&&i.pokemonId===R);for(const i of a)this.modifiers.splice(this.modifiers.indexOf(i),1);this.updateModifiers().then(()=>s())})}generateEnemyModifiers(A){return new Promise(s=>{if(this.currentBattle.battleSpec===SE.FINAL_BOSS)return s();const R=this.gameMode.getWaveForDifficulty(this.currentBattle.waveIndex),a=this.gameMode.isWaveFinal(this.currentBattle.waveIndex);let i=Math.ceil(R/10);a&&(i=Math.ceil(i*2.5));const r=this.getEnemyParty();if(this.currentBattle.trainer){const L=this.currentBattle.trainer.genModifiers(r);for(const o of L)this.addEnemyModifier(o,!0,!0)}r.forEach((L,o)=>{var l;if(A&&o<A.length&&A[o])A[o].forEach(C=>{let M;C.modifier instanceof DA?M=C.modifier.newModifier(L):(M=C.modifier,M.pokemonId=L.id),M.stackCount=C.stackCount??1,M.isTransferable=C.isTransferable??M.isTransferable,this.addEnemyModifier(M,!0)});else{const C=L.isBoss()||this.currentBattle.battleType===Ut.TRAINER&&!!((l=this.currentBattle.trainer)!=null&&l.config.isBoss);let M=32;C&&(M/=2),a&&(M/=8);const D=this.gameMode.getEnemyModifierChance(C);let _=D;this.currentBattle.battleType===Ut.TRAINER&&this.currentBattle.trainer&&(_=Math.ceil(_*this.currentBattle.trainer.getPartyMemberModifierChanceMultiplier(o)));let P=0;for(let h=0;h<i;h++)ce(D)||P++;C&&(P=Math.max(P,Math.floor(i/2))),gk(R,P,[L],this.currentBattle.battleType===Ut.TRAINER?HE.TRAINER:HE.WILD,M).map(h=>h.newModifier(L).add(this.enemyModifiers,!1))}return!0}),this.updateModifiers(!1).then(()=>s())})}clearEnemyModifiers(){const A=this.enemyModifiers.filter(s=>s instanceof kA);for(const s of A)this.enemyModifiers.splice(this.enemyModifiers.indexOf(s),1);this.updateModifiers(!1).then(()=>this.updateUIPositions())}clearEnemyHeldItemModifiers(A){const s=this.enemyModifiers.filter(R=>R instanceof dt&&(!A||R.getPokemon()===A));for(const R of s)this.enemyModifiers.splice(this.enemyModifiers.indexOf(R),1);this.updateModifiers(!1).then(()=>this.updateUIPositions())}setModifiersVisible(A){[this.modifierBar,this.enemyModifierBar].map(s=>s.setVisible(A))}updateModifiers(A,s){return A===void 0&&(A=!0),new Promise(R=>{const a=A?this.modifiers:this.enemyModifiers;for(let r=0;r<a.length;r++){const L=a[r];L instanceof dt&&!this.getPokemonById(L.pokemonId)&&a.splice(r--,1)}for(const r of a)r instanceof kA&&(r.virtualStackCount=0);const i=a.slice(0);for(const r of i)r.getStackCount()||a.splice(a.indexOf(r),1);this.updatePartyForModifiers(A?this.getPlayerParty():this.getEnemyParty(),s).then(()=>{(A?this.modifierBar:this.enemyModifierBar).updateModifiers(a),A||this.updateUIPositions(),R()})})}updatePartyForModifiers(A,s){return new Promise(R=>{Promise.allSettled(A.map(a=>(a.calculateStats(),a.updateInfo(s)))).then(()=>R())})}removeModifier(A,s=!1){const R=s?this.enemyModifiers:this.modifiers,a=R.indexOf(A);if(a>-1){if(R.splice(a,1),A instanceof UR||A instanceof SR){const i=this.getPokemonById(A.pokemonId);i&&A.apply(i,!1)}return!0}return!1}getModifiers(A,s=!0){return(s?this.modifiers:this.enemyModifiers).filter(R=>R instanceof A)}findModifiers(A,s=!0){return(s?this.modifiers:this.enemyModifiers).filter(A)}findModifier(A,s=!0){return(s?this.modifiers:this.enemyModifiers).find(A)}applyShuffledModifiers(A,s=!0,...R){let a=(s?this.modifiers:this.enemyModifiers).filter(i=>i instanceof A&&i.shouldApply(...R));return this.executeWithSeedOffset(()=>{const i=N(r=>{if(r.length<1)return r;const L=ce(r.length);return[r[L],...i(r.filter((o,l)=>l!==L))]},"shuffleModifiers");a=i(a)},this.currentBattle.turn<<4,this.waveSeed),this.applyModifiersInternal(a,s,R)}applyModifiers(A,s=!0,...R){const a=(s?this.modifiers:this.enemyModifiers).filter(i=>i instanceof A&&i.shouldApply(...R));return this.applyModifiersInternal(a,s,R)}applyModifiersInternal(A,s,R){const a=[];for(const i of A)i.apply(...R)&&(console.log("Applied",i.type.name,s?"":"(enemy)"),a.push(i));return a}applyModifier(A,s=!0,...R){const a=(s?this.modifiers:this.enemyModifiers).filter(i=>i instanceof A&&i.shouldApply(...R));for(const i of a)if(i.apply(...R))return console.log("Applied",i.type.name,s?"":"(enemy)"),i;return null}triggerPokemonFormChange(A,s,R=!1,a=!1){if(JO.hasOwnProperty(A.species.speciesId)){const i=JO[A.species.speciesId].filter(L=>L.findTrigger(s)&&L.canChange(A));let r;if(A.species.speciesId===e.NECROZMA&&i.length>1){const L=this.findModifiers(o=>o instanceof UR&&o.pokemonId===A.id).filter(o=>o.active).map(o=>o.formChangeItem);r=L.includes(lR.N_LUNARIZER)?i[0]:L.includes(lR.N_SOLARIZER)?i[1]:null}else r=i[0];if(r){let L;return A instanceof vE&&!r.quiet?L=new fG(A,r,a):L=new ZG(A,r),A instanceof vE&&!r.quiet&&a?this.overridePhase(L):R?this.pushPhase(L):this.unshiftPhase(L),!0}}return!1}triggerPokemonBattleAnim(A,s,R,a=!1){const i=new kG(s,A,R);return a?this.pushPhase(i):this.unshiftPhase(i),!0}validateAchvs(A,...s){const R=Object.values(Ct).filter(a=>a instanceof A);for(const a of R)this.validateAchv(a,s)}validateAchv(A,s){return(!this.gameData.achvUnlocks.hasOwnProperty(A.id)||Ye.ACHIEVEMENTS_REUNLOCK_OVERRIDE)&&A.validate(s)?(this.gameData.achvUnlocks[A.id]=new Date().getTime(),this.ui.achvBar.showAchv(A),is.hasOwnProperty(A.id)&&this.validateVoucher(is[A.id]),!0):!1}validateVoucher(A,s){return!this.gameData.voucherUnlocks.hasOwnProperty(A.id)&&A.validate(s)?(this.gameData.voucherUnlocks[A.id]=new Date().getTime(),this.ui.achvBar.showAchv(A),this.gameData.voucherCounts[A.voucherType]++,!0):!1}updateGameInfo(){var s,R;const A={playTime:this.sessionPlayTime??0,gameMode:this.currentBattle?this.gameMode.getName():"Title",biome:this.currentBattle?TL(this.arena.biomeType):"",wave:((s=this.currentBattle)==null?void 0:s.waveIndex)??0,party:this.party?this.party.map(a=>{var i;return{name:a.name,form:a.getFormKey(),types:a.getTypes().map(r=>I[r]),teraType:a.getTeraType()!==I.UNKNOWN?I[a.getTeraType()]:"",level:a.level,currentHP:a.hp,maxHP:a.getMaxHp(),status:(i=a.status)!=null&&i.effect?ne[a.status.effect]:""}}):[],modeChain:((R=this.ui)==null?void 0:R.getModeChain())??[]};window.gameInfo=A}getActiveKeys(){const A=[];let s=this.getPlayerParty();return s=s.concat(this.getEnemyParty()),s.forEach(R=>{A.push(R.getSpriteKey(!0)),R instanceof vE&&A.push(R.getBattleSpriteKey(!0,!0)),A.push(R.species.getCryKey(R.formIndex)),R.fusionSpecies&&A.push(R.fusionSpecies.getCryKey(R.fusionFormIndex))}),A}initFinalBossPhaseTwo(A){if(A instanceof xs&&A.isBoss()&&!A.formIndex&&A.bossSegmentIndex<1){this.fadeOutBgm(st(2e3),!1),this.ui.showDialogue(a8[SE.FINAL_BOSS].firstStageWin,A.species.name,void 0,()=>{const s=HM(J.MINI_BLACK_HOLE).newModifier(A);s.setTransferrableFalse(),this.addEnemyModifier(s,!1,!0),A.generateAndPopulateMoveset(1),this.setFieldScale(.75),this.triggerPokemonFormChange(A,yl,!1),this.currentBattle.double=!0;const R=this.getPlayerParty().filter(a=>a.isAllowedInBattle());R.length>1&&(this.pushPhase(new PO(!0)),R[1].isOnField()||this.pushPhase(new QE(1))),this.shiftPhase()});return}this.shiftPhase()}applyPartyExp(A,s,R,a){var _;const i=a??this.currentBattle.playerParticipantIds,r=this.getPlayerParty(),L=this.findModifier(P=>P instanceof Po),o=this.findModifier(P=>P instanceof Go),l=this.findModifier(P=>P instanceof Mo),C=r.filter(P=>P.hp),M=C.filter(P=>P.level<this.getMaxExpLevel()),D=[];if(R&&(A=Math.floor(A*this.currentBattle.waveIndex/5+1)),i.size>0){this.currentBattle.battleType===Ut.TRAINER||((_=this.currentBattle.mysteryEncounter)==null?void 0:_.encounterMode)===lE.TRAINER_BATTLE?A=Math.floor(A*1.5):this.currentBattle.isBattleMysteryEncounter()&&this.currentBattle.mysteryEncounter&&(A=Math.floor(A*this.currentBattle.mysteryEncounter.expMultiplier));for(const P of C){const h=P.id,H=i.has(h);if(H&&s){P.addFriendship(Rk);const B=P.getHeldItems().find(F=>F instanceof ui);B&&B.stackCount<B.getMaxStackCount()&&(B.stackCount++,this.updateModifiers(!0,!0),P.updateInfo())}if(!M.includes(P))continue;if(!H&&!L){D.push(0);continue}let d=0;H?(d+=1/i.size,i.size>1&&l&&(d+=l.getStackCount()*.2)):L&&(d+=L.getStackCount()*.2/i.size),P.pokerus&&(d*=1.5),Ye.XP_MULTIPLIER_OVERRIDE!==null&&(d=Ye.XP_MULTIPLIER_OVERRIDE);const f=new Et(A*d);this.applyModifiers(_o,!0,P,f),D.push(Math.floor(f.value))}if(o){let P=0,h=0;M.forEach((B,F)=>{h+=D[F],P+=B.level});const H=Math.floor(P/M.length),d=[];M.forEach((B,F)=>{B.level<=H&&d.push(F)});const f=Math.floor(h/d.length);M.forEach((B,F)=>{D[F]=sE.Math.Linear(D[F],d.indexOf(F)>-1?f:0,.2*o.getStackCount())})}for(let P=0;P<M.length;P++){const h=D[P];if(h){const H=r.indexOf(M[P]);this.unshiftPhase(M[P].isOnField()?new Rc(H,h):new nc(H,h))}}}}isMysteryEncounterValidForWave(A,s){const[R,a]=this.gameMode.getMysteryEncounterLegalWaves();return this.gameMode.hasMysteryEncounters&&A===Ut.WILD&&!this.gameMode.isBoss(s)&&s<a&&s>R}isWaveMysteryEncounter(A,s){const[R,a]=this.gameMode.getMysteryEncounterLegalWaves();if(this.isMysteryEncounterValidForWave(A,s)){const i=this.mysteryEncounterSaveData.encounterSpawnChance,r=this.mysteryEncounterSaveData.encounteredEvents,o=_Q/(a-R)*(s-R)-r.length,l=i+Math.min(o*PQ,V0/2),C=ve(Ye.MYSTERY_ENCOUNTER_RATE_OVERRIDE)?l:Ye.MYSTERY_ENCOUNTER_RATE_OVERRIDE;if(r.length===0||s-r[r.length-1].waveIndex>3||!ve(Ye.MYSTERY_ENCOUNTER_RATE_OVERRIDE)){let D=V0;return this.executeWithSeedOffset(()=>{D=ce(V0)},s*3*1e3),D<C}}return!1}getMysteryEncounter(A,s){var h,H;let R;if(!ve(Ye.MYSTERY_ENCOUNTER_OVERRIDE)&&nA.hasOwnProperty(Ye.MYSTERY_ENCOUNTER_OVERRIDE)){if(R=nA[Ye.MYSTERY_ENCOUNTER_OVERRIDE],s)return R}else{if(s)return R=nA[A??-1],R;R=ve(A)?null:nA[A]}if(!R&&((h=this.mysteryEncounterSaveData)!=null&&h.queuedEncounters)&&this.mysteryEncounterSaveData.queuedEncounters.length>0){let d=0;for(;d<this.mysteryEncounterSaveData.queuedEncounters.length&&R;){const f=this.mysteryEncounterSaveData.queuedEncounters[d],B=f.spawnPercent;ce(100)<B&&(R=nA[f.type]),d++}}if(R)return R=new aS(R),R.populateDialogueTokensFromRequirements(),R;const a=[wt.COMMON,wt.GREAT,wt.ULTRA,wt.ROGUE];this.mysteryEncounterSaveData.encounteredEvents.forEach(d=>{d.tier===wt.COMMON?a[0]=a[0]-6:d.tier===wt.GREAT&&(a[1]=a[1]-4)});const i=a.reduce((d,f)=>d+f),r=ce(i),L=i-a[0],o=i-a[0]-a[1],l=i-a[0]-a[1]-a[2];let C=r>L?wt.COMMON:r>o?wt.GREAT:r>l?wt.ULTRA:wt.ROGUE;ve(Ye.MYSTERY_ENCOUNTER_TIER_OVERRIDE)||(C=Ye.MYSTERY_ENCOUNTER_TIER_OVERRIDE);let M=[];const D=this.mysteryEncounterSaveData.encounteredEvents.length>0?this.mysteryEncounterSaveData.encounteredEvents[this.mysteryEncounterSaveData.encounteredEvents.length-1].type:null,_=this.eventManager.getEventMysteryEncountersDisabled(),P=((H=wi.get(this.arena.biomeType))==null?void 0:H.filter(d=>!_.includes(d)))??[];for(;M.length===0&&C!==null;)M=P.filter(d=>{const f=nA[d];if(!f||this.eventManager.getMysteryEncounterTierForEvent(d,f.encounterTier)!==C)return!1;const B=f.disallowedGameModes;if(B&&B.length>0&&B.includes(this.gameMode.modeId))return!1;if(this.gameMode.modeId===SA.CHALLENGE){const F=f.disallowedChallenges;if(F&&F.length>0&&this.gameMode.challenges.some(W=>F.includes(W.id)))return!1}return!(!f.meetsRequirements()||D!==null&&d===D||this.mysteryEncounterSaveData.encounteredEvents.length>0&&f.maxAllowedEncounters&&f.maxAllowedEncounters>0&&this.mysteryEncounterSaveData.encounteredEvents.filter(F=>F.type===d).length>=f.maxAllowedEncounters)}).map(d=>nA[d]),C===wt.ROGUE?C=wt.ULTRA:C===wt.ULTRA?C=wt.GREAT:C===wt.GREAT?C=wt.COMMON:C=null;return M.length===0?(console.log("No Mystery Encounters found, falling back to Mysterious Challengers."),nA[Je.MYSTERIOUS_CHALLENGERS]):(R=M[ce(M.length)],R=new aS(R),R.populateDialogueTokensFromRequirements(),R)}};N(xF,"BattleScene");let Ic=xF;const S$=Object.freeze(Object.defineProperty({__proto__:null,bypassLogin:Us,default:Ic,get starterColors(){return TR},startingWave:ZL},Symbol.toStringTag,{value:"Module"})),l6=460,LJ=508;var gn=(E=>(E[E.COMMON=0]="COMMON",E[E.UNCOMMON=1]="UNCOMMON",E[E.RARE=2]="RARE",E[E.SUPER_RARE=3]="SUPER_RARE",E[E.ULTRA_RARE=4]="ULTRA_RARE",E))(gn||{}),lt=(E=>(E[E.NONE=0]="NONE",E[E.TRAINER=1]="TRAINER",E[E.TRAINER_PARTNER=2]="TRAINER_PARTNER",E))(lt||{});const bF=class bF{constructor(A,s,R,a){this.size=A,this.strength=s,this.sameSpecies=!!R,this.balanced=!!a}getStrength(A){return this.strength}isSameSpecies(A){return this.sameSpecies}isBalanced(A){return this.balanced}};N(bF,"TrainerPartyTemplate");let ze=bF;const kF=class kF extends ze{constructor(...A){super(A.reduce((s,R)=>(s+=R.size,s),0),Ve.AVERAGE),this.templates=A}getStrength(A){let s=0;for(const R of this.templates){if(s+R.size>A)return R.getStrength(A-s);s+=R.size}return super.getStrength(A)}isSameSpecies(A){let s=0;for(const R of this.templates){if(s+R.size>A)return R.isSameSpecies(A-s);s+=R.size}return super.isSameSpecies(A)}isBalanced(A){let s=0;for(const R of this.templates){if(s+R.size>A)return R.isBalanced(A-s);s+=R.size}return super.isBalanced(A)}};N(kF,"TrainerPartyCompoundTemplate");let bA=kF;const et={ONE_WEAK_ONE_STRONG:new bA(new ze(1,Ve.WEAK),new ze(1,Ve.STRONG)),ONE_AVG:new ze(1,Ve.AVERAGE),ONE_AVG_ONE_STRONG:new bA(new ze(1,Ve.AVERAGE),new ze(1,Ve.STRONG)),ONE_STRONG:new ze(1,Ve.STRONG),ONE_STRONGER:new ze(1,Ve.STRONGER),TWO_WEAKER:new ze(2,Ve.WEAKER),TWO_WEAK:new ze(2,Ve.WEAK),TWO_WEAK_ONE_AVG:new bA(new ze(2,Ve.WEAK),new ze(1,Ve.AVERAGE)),TWO_WEAK_SAME_ONE_AVG:new bA(new ze(2,Ve.WEAK,!0),new ze(1,Ve.AVERAGE)),TWO_WEAK_SAME_TWO_WEAK_SAME:new bA(new ze(2,Ve.WEAK,!0),new ze(2,Ve.WEAK,!0)),TWO_WEAK_ONE_STRONG:new bA(new ze(2,Ve.WEAK),new ze(1,Ve.STRONG)),TWO_AVG:new ze(2,Ve.AVERAGE),TWO_AVG_ONE_STRONG:new bA(new ze(2,Ve.AVERAGE),new ze(1,Ve.STRONG)),TWO_AVG_SAME_ONE_AVG:new bA(new ze(2,Ve.AVERAGE,!0),new ze(1,Ve.AVERAGE)),TWO_AVG_SAME_ONE_STRONG:new bA(new ze(2,Ve.AVERAGE,!0),new ze(1,Ve.STRONG)),TWO_AVG_SAME_TWO_AVG_SAME:new bA(new ze(2,Ve.AVERAGE,!0),new ze(2,Ve.AVERAGE,!0)),TWO_STRONG:new ze(2,Ve.STRONG),THREE_WEAK:new ze(3,Ve.WEAK),THREE_WEAK_SAME:new ze(3,Ve.WEAK,!0),THREE_AVG:new ze(3,Ve.AVERAGE),THREE_AVG_SAME:new ze(3,Ve.AVERAGE,!0),THREE_WEAK_BALANCED:new ze(3,Ve.WEAK,!1,!0),FOUR_WEAKER:new ze(4,Ve.WEAKER),FOUR_WEAKER_SAME:new ze(4,Ve.WEAKER,!0),FOUR_WEAK:new ze(4,Ve.WEAK),FOUR_WEAK_SAME:new ze(4,Ve.WEAK,!0),FOUR_WEAK_BALANCED:new ze(4,Ve.WEAK,!1,!0),FIVE_WEAKER:new ze(5,Ve.WEAKER),FIVE_WEAK:new ze(5,Ve.WEAK),FIVE_WEAK_BALANCED:new ze(5,Ve.WEAK,!1,!0),SIX_WEAKER:new ze(6,Ve.WEAKER),SIX_WEAKER_SAME:new ze(6,Ve.WEAKER,!0),SIX_WEAK_SAME:new ze(6,Ve.WEAK,!0),SIX_WEAK_BALANCED:new ze(6,Ve.WEAK,!1,!0),GYM_LEADER_1:new bA(new ze(1,Ve.AVERAGE),new ze(1,Ve.STRONG)),GYM_LEADER_2:new bA(new ze(1,Ve.AVERAGE),new ze(1,Ve.STRONG),new ze(1,Ve.STRONGER)),GYM_LEADER_3:new bA(new ze(2,Ve.AVERAGE),new ze(1,Ve.STRONG),new ze(1,Ve.STRONGER)),GYM_LEADER_4:new bA(new ze(3,Ve.AVERAGE),new ze(1,Ve.STRONG),new ze(1,Ve.STRONGER)),GYM_LEADER_5:new bA(new ze(3,Ve.AVERAGE),new ze(2,Ve.STRONG),new ze(1,Ve.STRONGER)),ELITE_FOUR:new bA(new ze(2,Ve.AVERAGE),new ze(3,Ve.STRONG),new ze(1,Ve.STRONGER)),CHAMPION:new bA(new ze(1,Ve.STRONGER),new ze(5,Ve.STRONG,!1,!0)),RIVAL:new bA(new ze(1,Ve.STRONG),new ze(1,Ve.AVERAGE)),RIVAL_2:new bA(new ze(1,Ve.STRONG),new ze(1,Ve.AVERAGE),new ze(1,Ve.WEAK,!1,!0)),RIVAL_3:new bA(new ze(1,Ve.STRONG),new ze(1,Ve.AVERAGE),new ze(1,Ve.AVERAGE,!1,!0),new ze(1,Ve.WEAK,!1,!0)),RIVAL_4:new bA(new ze(1,Ve.STRONG),new ze(1,Ve.AVERAGE),new ze(2,Ve.AVERAGE,!1,!0),new ze(1,Ve.WEAK,!1,!0)),RIVAL_5:new bA(new ze(1,Ve.STRONG),new ze(1,Ve.AVERAGE),new ze(3,Ve.AVERAGE,!1,!0),new ze(1,Ve.STRONG)),RIVAL_6:new bA(new ze(1,Ve.STRONG),new ze(1,Ve.AVERAGE),new ze(3,Ve.AVERAGE,!1,!0),new ze(1,Ve.STRONGER))},aM=class aM{constructor(A,s){this.hasGenders=!1,this.hasDouble=!1,this.hasCharSprite=!1,this.doubleOnly=!1,this.moneyMultiplier=1,this.isBoss=!1,this.hasStaticParty=!1,this.useSameSeedForAllMembers=!1,this.modifierRewardFuncs=[],this.eventRewardFuncs=[],this.partyMemberFuncs={},this.specialtyTypes=[],this.hasVoucher=!1,this.encounterMessages=[],this.victoryMessages=[],this.defeatMessages=[],this.trainerType=A,this.name=Jn(U[this.getDerivedType()]),this.battleBgm="battle_trainer",this.mixedBattleBgm="battle_trainer",this.victoryBgm="victory_trainer",this.partyTemplates=[et.TWO_AVG],this.speciesFilter=R=>(s||!R.legendary&&!R.subLegendary&&!R.mythical)&&!R.isTrainerForbidden()}getKey(){return U[this.getDerivedType()].toString().toLowerCase()}getSpriteKey(A,s=!1){let R=this.getKey();return this.hasGenders&&(R+=`_${A?"f":"m"}`),this.trainerTypeDouble&&A&&s&&(R=U[this.getDerivedType(this.trainerTypeDouble)].toString().toLowerCase()),R}setName(A){return A==="Finn"&&(bR()||kR(),A==="Finn"&&(A=u.t("trainerNames:rival"))),this.name=A,this}setHasVoucher(A){this.hasVoucher=A}setTitle(A){return bR()||kR(),A=A.toLowerCase().replace(/\s/g,"_"),this.title=u.t(`titles:${A}`),this}getDerivedType(A=null){let s=A||this.trainerType;switch(s){case U.RIVAL_2:case U.RIVAL_3:case U.RIVAL_4:case U.RIVAL_5:case U.RIVAL_6:s=U.RIVAL;break;case U.LANCE_CHAMPION:s=U.LANCE;break;case U.LARRY_ELITE:s=U.LARRY;break;case U.ROCKET_BOSS_GIOVANNI_1:case U.ROCKET_BOSS_GIOVANNI_2:s=U.GIOVANNI;break;case U.MAXIE_2:s=U.MAXIE;break;case U.ARCHIE_2:s=U.ARCHIE;break;case U.CYRUS_2:s=U.CYRUS;break;case U.GHETSIS_2:s=U.GHETSIS;break;case U.LYSANDRE_2:s=U.LYSANDRE;break;case U.LUSAMINE_2:s=U.LUSAMINE;break;case U.GUZMA_2:s=U.GUZMA;break;case U.ROSE_2:s=U.ROSE;break;case U.PENNY_2:s=U.PENNY;break;case U.MARNIE_ELITE:s=U.MARNIE;break;case U.NESSA_ELITE:s=U.NESSA;break;case U.BEA_ELITE:s=U.BEA;break;case U.ALLISTER_ELITE:s=U.ALLISTER;break;case U.RAIHAN_ELITE:s=U.RAIHAN;break}return s}setHasGenders(A,s){return A==="Ivy"?(bR()||kR(),this.nameFemale=u.t("trainerNames:rival_female")):this.nameFemale=A,this.hasGenders=!0,s&&(this.femaleEncounterBgm=typeof s=="number"?U[s].toString().replace(/_/g," ").toLowerCase():s),this}setHasDouble(A,s){return this.hasDouble=!0,this.nameDouble=A,s&&(this.doubleEncounterBgm=typeof s=="number"?U[s].toString().replace(/\_/g," ").toLowerCase():s),this}setDoubleTrainerType(A){return this.trainerTypeDouble=A,this.setDoubleMessages(this.nameDouble),this}setDoubleMessages(A){El[A]&&(this.doubleEncounterMessages=El[A].encounter,this.doubleVictoryMessages=El[A].victory,this.doubleDefeatMessages=El[A].defeat)}setDoubleTitle(A){return bR()||kR(),A=A.toLowerCase().replace(/\s/g,"_"),this.titleDouble=u.t(`titles:${A}`),this}setHasCharSprite(){return this.hasCharSprite=!0,this}setDoubleOnly(){return this.doubleOnly=!0,this}setMoneyMultiplier(A){return this.moneyMultiplier=A,this}setBoss(){return this.isBoss=!0,this}setStaticParty(){return this.hasStaticParty=!0,this}setUseSameSeedForAllMembers(){return this.useSameSeedForAllMembers=!0,this}setMixedBattleBgm(A){return this.mixedBattleBgm=A,this}setBattleBgm(A){return this.battleBgm=A,this}setEncounterBgm(A){return this.encounterBgm=typeof A=="number"?U[A].toString().toLowerCase():A,this}setVictoryBgm(A){return this.victoryBgm=A,this}setPartyTemplates(...A){return this.partyTemplates=A,this}setPartyTemplateFunc(A){return this.partyTemplateFunc=A,this}setPartyMemberFunc(A,s){return this.partyMemberFuncs[A]=s,this}setSpeciesPools(A){return this.speciesPools=Array.isArray(A)?{0:A}:A,this}setSpeciesFilter(A,s){const R=this.speciesFilter;return this.speciesFilter=s?A:a=>A(a)&&R(a),this}setSpecialtyTypes(...A){return this.specialtyTypes=A,this}setGenModifiersFunc(A){return this.genModifiersFunc=A,this}setEventModifierRewardFuncs(...A){return this.eventRewardFuncs=A.map(s=>()=>{const R=s(),a=R();return a.withIdFromFunc(R),a}),this}setModifierRewardFuncs(...A){return this.modifierRewardFuncs=A.map(s=>()=>{const R=s(),a=R();return a.withIdFromFunc(R),a}),this}speciesPoolPerEvilTeamAdmin(A){switch(A=A.toLowerCase(),A){case"rocket":return{0:[e.RATTATA,e.KOFFING,e.EKANS,e.ZUBAT,e.MAGIKARP,e.HOUNDOUR,e.ONIX,e.CUBONE,e.GROWLITHE,e.MURKROW,e.GASTLY,e.EXEGGCUTE,e.VOLTORB,e.DROWZEE,e.VILEPLUME],1:[e.PORYGON,e.MANKEY,e.MAGNEMITE,e.ALOLA_SANDSHREW,e.ALOLA_MEOWTH,e.ALOLA_GRIMER,e.ALOLA_GEODUDE,e.PALDEA_TAUROS,e.OMANYTE,e.KABUTO,e.MAGBY,e.ELEKID],2:[e.DRATINI,e.LARVITAR]};case"magma":return{0:[e.GROWLITHE,e.SLUGMA,e.SOLROCK,e.HIPPOPOTAS,e.BALTOY,e.ROLYCOLY,e.GLIGAR,e.TORKOAL,e.HOUNDOUR,e.MAGBY],1:[e.TRAPINCH,e.SILICOBRA,e.RHYHORN,e.ANORITH,e.LILEEP,e.HISUI_GROWLITHE,e.TURTONATOR,e.ARON,e.TOEDSCOOL],2:[e.CAPSAKID,e.CHARCADET]};case"aqua":return{0:[e.CORPHISH,e.SPHEAL,e.CLAMPERL,e.CHINCHOU,e.WOOPER,e.WINGULL,e.TENTACOOL,e.AZURILL,e.LOTAD,e.WAILMER,e.REMORAID,e.BARBOACH],1:[e.MANTYKE,e.HISUI_QWILFISH,e.ARROKUDA,e.DHELMISE,e.CLOBBOPUS,e.FEEBAS,e.PALDEA_WOOPER,e.HORSEA,e.SKRELP],2:[e.DONDOZO,e.BASCULEGION]};case"galactic":return{0:[e.BRONZOR,e.SWINUB,e.YANMA,e.LICKITUNG,e.TANGELA,e.MAGBY,e.ELEKID,e.SKORUPI,e.ZUBAT,e.MURKROW,e.MAGIKARP,e.VOLTORB],1:[e.HISUI_GROWLITHE,e.HISUI_QWILFISH,e.SNEASEL,e.DUSKULL,e.ROTOM,e.HISUI_VOLTORB,e.GLIGAR,e.ABRA],2:[e.URSALUNA,e.HISUI_LILLIGANT,e.SPIRITOMB,e.HISUI_SNEASEL]};case"plasma":return{0:[e.YAMASK,e.ROGGENROLA,e.JOLTIK,e.TYMPOLE,e.FRILLISH,e.FERROSEED,e.SANDILE,e.TIMBURR,e.DARUMAKA,e.FOONGUS,e.CUBCHOO,e.VANILLITE],1:[e.PAWNIARD,e.VULLABY,e.ZORUA,e.DRILBUR,e.KLINK,e.TYNAMO,e.GALAR_DARUMAKA,e.GOLETT,e.MIENFOO,e.DURANT,e.SIGILYPH],2:[e.HISUI_ZORUA,e.AXEW,e.DEINO,e.HISUI_BRAVIARY]};case"flare":return{0:[e.FLETCHLING,e.LITLEO,e.INKAY,e.FOONGUS,e.HELIOPTILE,e.ELECTRIKE,e.SKORUPI,e.PURRLOIN,e.CLAWITZER,e.PANCHAM,e.ESPURR,e.BUNNELBY],1:[e.LITWICK,e.SNEASEL,e.PUMPKABOO,e.PHANTUMP,e.HONEDGE,e.BINACLE,e.HOUNDOUR,e.SKRELP,e.SLIGGOO],2:[e.NOIBAT,e.HISUI_AVALUGG,e.HISUI_SLIGGOO]};case"aether":return{0:[e.BRUXISH,e.SLOWPOKE,e.BALTOY,e.EXEGGCUTE,e.ABRA,e.ALOLA_RAICHU,e.ELGYEM,e.NATU,e.BLIPBUG,e.GIRAFARIG,e.ORANGURU],1:[e.GALAR_SLOWPOKE,e.MEDITITE,e.BELDUM,e.HATENNA,e.INKAY,e.RALTS,e.GALAR_MR_MIME],2:[e.ARMAROUGE,e.HISUI_BRAVIARY,e.PORYGON]};case"skull":return{0:[e.MAREANIE,e.ALOLA_GRIMER,e.GASTLY,e.ZUBAT,e.FOMANTIS,e.VENIPEDE,e.BUDEW,e.KOFFING,e.STUNKY,e.CROAGUNK,e.NIDORAN_F],1:[e.GALAR_SLOWPOKE,e.SKORUPI,e.PALDEA_WOOPER,e.VULLABY,e.HISUI_QWILFISH,e.GLIMMET],2:[e.SKRELP,e.HISUI_SNEASEL]};case"macro":return{0:[e.HATENNA,e.FEEBAS,e.BOUNSWEET,e.SALANDIT,e.GALAR_PONYTA,e.GOTHITA,e.FROSLASS,e.VULPIX,e.FRILLISH,e.ODDISH,e.SINISTEA],1:[e.VULLABY,e.MAREANIE,e.ALOLA_VULPIX,e.TOGEPI,e.GALAR_CORSOLA,e.APPLIN],2:[e.TINKATINK,e.HISUI_LILLIGANT]};case"star_1":return{0:[e.MURKROW,e.SEEDOT,e.CACNEA,e.STUNKY,e.SANDILE,e.NYMBLE,e.MASCHIFF,e.GALAR_ZIGZAGOON],1:[e.UMBREON,e.SNEASEL,e.CORPHISH,e.ZORUA,e.INKAY,e.BOMBIRDIER],2:[e.DEINO,e.SPRIGATITO]};case"star_2":return{0:[e.GROWLITHE,e.HOUNDOUR,e.NUMEL,e.LITWICK,e.FLETCHLING,e.LITLEO,e.ROLYCOLY,e.CAPSAKID],1:[e.PONYTA,e.FLAREON,e.MAGBY,e.TORKOAL,e.SALANDIT,e.TURTONATOR],2:[e.LARVESTA,e.FUECOCO]};case"star_3":return{0:[e.ZUBAT,e.GRIMER,e.STUNKY,e.FOONGUS,e.MAREANIE,e.TOXEL,e.SHROODLE,e.PALDEA_WOOPER],1:[e.GASTLY,e.SEVIPER,e.SKRELP,e.ALOLA_GRIMER,e.GALAR_SLOWPOKE,e.HISUI_QWILFISH],2:[e.GLIMMET,e.BULBASAUR]};case"star_4":return{0:[e.CLEFFA,e.IGGLYBUFF,e.AZURILL,e.COTTONEE,e.FLABEBE,e.HATENNA,e.IMPIDIMP,e.TINKATINK],1:[e.TOGEPI,e.GARDEVOIR,e.SYLVEON,e.KLEFKI,e.MIMIKYU,e.ALOLA_VULPIX],2:[e.GALAR_PONYTA,e.POPPLIO]};case"star_5":return{0:[e.SHROOMISH,e.MAKUHITA,e.MEDITITE,e.CROAGUNK,e.SCRAGGY,e.MIENFOO,e.PAWMI,e.PALDEA_TAUROS],1:[e.RIOLU,e.TIMBURR,e.HAWLUCHA,e.PASSIMIAN,e.FALINKS,e.FLAMIGO],2:[e.JANGMO_O,e.QUAXLY]}}return console.warn(`Evil team admin for ${A} not found. Returning empty species pools.`),[]}initForEvilTeamAdmin(A,s,R){bR()||kR(),this.setPartyTemplates(et.RIVAL_5),this.speciesPools=this.speciesPoolPerEvilTeamAdmin(s),R.forEach((i,r)=>{Array.isArray(i)||(i=[i]),this.setPartyMemberFunc(-(r+1),Ce(i))});const a=this.name.toLowerCase().replace(/\s/g,"_");return this.name=u.t(`trainerNames:${a}`),this.setHasVoucher(!1),this.setTitle(A),this.setMoneyMultiplier(1.5),this.setBoss(),this.setStaticParty(),this.setBattleBgm("battle_plasma_boss"),this.setVictoryBgm("victory_team_plasma"),this}initForStatTrainer(A,s,...R){bR()||kR(),this.setPartyTemplates(et.ELITE_FOUR),A.forEach((i,r)=>{Array.isArray(i)||(i=[i]),this.setPartyMemberFunc(-(r+1),Ce(i))}),R.length&&(this.setSpeciesFilter(i=>R.find(r=>i.isOfType(r))!==void 0),this.setSpecialtyTypes(...R));const a=this.name.toLowerCase().replace(/\s/g,"_");return this.name=u.t(`trainerNames:${a}`),this.setMoneyMultiplier(2),this.setBoss(),this.setStaticParty(),this.setBattleBgm("battle_trainer"),this.setVictoryBgm("victory_trainer"),this}initForEvilTeamLeader(A,s,R=!1,...a){bR()||kR(),R?this.setPartyTemplates(et.ELITE_FOUR):this.setPartyTemplates(et.RIVAL_5),s.forEach((r,L)=>{Array.isArray(r)||(r=[r]),this.setPartyMemberFunc(-(L+1),Ce(r))}),a.length&&(this.setSpeciesFilter(r=>a.find(L=>r.isOfType(L))!==void 0),this.setSpecialtyTypes(...a));const i=this.name.toLowerCase().replace(/\s/g,"_");return this.name=u.t(`trainerNames:${i}`),this.setTitle(A),this.setMoneyMultiplier(2.5),this.setBoss(),this.setStaticParty(),this.setHasVoucher(!0),this.setBattleBgm("battle_plasma_boss"),this.setVictoryBgm("victory_team_plasma"),this}initForGymLeader(A,s,...R){bR()||kR(),this.setPartyTemplateFunc(NJ),A.forEach((i,r)=>{Array.isArray(i)||(i=[i]),this.setPartyMemberFunc(-(r+1),Ce(i))}),R.length&&(this.setSpeciesFilter(i=>R.find(r=>i.isOfType(r))!==void 0),this.setSpecialtyTypes(...R));const a=this.name.toLowerCase().replace(/\s/g,"_");return this.name=u.t(`trainerNames:${a}`),this.setTitle("gym_leader"),s||this.setTitle("gym_leader_female"),this.setMoneyMultiplier(2.5),this.setBoss(),this.setStaticParty(),this.setHasVoucher(!0),this.setBattleBgm("battle_unova_gym"),this.setVictoryBgm("victory_gym"),this.setGenModifiersFunc(i=>{const r=n.currentBattle.waveIndex;return $0(i,r>=100?1:0,R.length?R:void 0)}),this}initForEliteFour(A,s,...R){bR()||kR(),this.setPartyTemplates(et.ELITE_FOUR),A.forEach((i,r)=>{Array.isArray(i)||(i=[i]),this.setPartyMemberFunc(-(r+1),Ce(i))}),R.length?(this.setSpeciesFilter(i=>R.some(r=>i.isOfType(r))&&i.baseTotal>=l6),this.setSpecialtyTypes(...R)):this.setSpeciesFilter(i=>i.baseTotal>=l6);const a=this.name.toLowerCase().replace(/\s/g,"_");return this.name=u.t(`trainerNames:${a}`),this.setTitle("elite_four"),s||this.setTitle("elite_four_female"),this.setMoneyMultiplier(3.25),this.setBoss(),this.setStaticParty(),this.setHasVoucher(!0),this.setBattleBgm("battle_unova_elite"),this.setVictoryBgm("victory_gym"),this.setGenModifiersFunc(i=>$0(i,2,R.length?R:void 0)),this}initForChampion(A,s){bR()||kR(),this.setPartyTemplates(et.CHAMPION),A.forEach((a,i)=>{Array.isArray(a)||(a=[a]),this.setPartyMemberFunc(-(i+1),Ce(a))}),this.setSpeciesFilter(a=>a.baseTotal>=LJ);const R=this.name.toLowerCase().replace(/\s/g,"_");return this.name=u.t(`trainerNames:${R}`),this.setTitle("champion"),s||this.setTitle("champion_female"),this.setMoneyMultiplier(10),this.setBoss(),this.setStaticParty(),this.setHasVoucher(!0),this.setBattleBgm("battle_champion_alder"),this.setVictoryBgm("victory_champion"),this.setGenModifiersFunc(a=>$0(a,3)),this}setLocalizedName(A){return bR()||kR(),this.name=u.t(`trainerNames:${A.toLowerCase().replace(/\s/g,"_")}`),this}getTitle(A=0,s){const R=this.name;if(!A&&s===OA.DOUBLE&&this.nameDouble)return this.nameDouble;if(this.hasGenders){if(this.nameFemale){if(s===OA.FEMALE||s===OA.DOUBLE&&A===2)return this.nameFemale}else if(s&&(bR()||kR(),u.exists(`trainerClasses:${this.name.toLowerCase()}`)))return R+"_female"}return R}loadAssets(A){return new Promise(s=>{const R=A===OA.DOUBLE,a=this.getSpriteKey(A===OA.FEMALE,!1),i=this.getSpriteKey(!0,!0);n.loadAtlas(a,"trainer"),R&&n.loadAtlas(i,"trainer"),n.load.once(Phaser.Loader.Events.COMPLETE,()=>{const r=console.warn;console.warn=()=>{};const L=n.anims.generateFrameNames(a,{zeroPad:4,suffix:".png",start:1,end:128}),o=R?n.anims.generateFrameNames(i,{zeroPad:4,suffix:".png",start:1,end:128}):"";console.warn=r,n.anims.exists(a)||n.anims.create({key:a,frames:L,frameRate:24,repeat:-1}),R&&!n.anims.exists(i)&&n.anims.create({key:i,frames:o,frameRate:24,repeat:-1}),s()}),n.load.isLoading()||n.load.start()})}clone(){var s,R,a,i,r,L,o,l,C;let A=new aM(this.trainerType);return A=this.trainerTypeDouble?A.setDoubleTrainerType(this.trainerTypeDouble):A,A=this.name?A.setName(this.name):A,A=this.hasGenders?A.setHasGenders(this.nameFemale,this.femaleEncounterBgm):A,A=this.hasDouble?A.setHasDouble(this.nameDouble,this.doubleEncounterBgm):A,A=this.title?A.setTitle(this.title):A,A=this.titleDouble?A.setDoubleTitle(this.titleDouble):A,A=this.hasCharSprite?A.setHasCharSprite():A,A=this.doubleOnly?A.setDoubleOnly():A,A=this.moneyMultiplier?A.setMoneyMultiplier(this.moneyMultiplier):A,A=this.isBoss?A.setBoss():A,A=this.hasStaticParty?A.setStaticParty():A,A=this.useSameSeedForAllMembers?A.setUseSameSeedForAllMembers():A,A=this.battleBgm?A.setBattleBgm(this.battleBgm):A,A=this.encounterBgm?A.setEncounterBgm(this.encounterBgm):A,A=this.victoryBgm?A.setVictoryBgm(this.victoryBgm):A,A=this.genModifiersFunc?A.setGenModifiersFunc(this.genModifiersFunc):A,this.modifierRewardFuncs&&(A.modifierRewardFuncs=this.modifierRewardFuncs.slice(0)),this.partyTemplates&&(A.partyTemplates=this.partyTemplates.slice(0)),A=this.partyTemplateFunc?A.setPartyTemplateFunc(this.partyTemplateFunc):A,this.partyMemberFuncs&&Object.keys(this.partyMemberFuncs).forEach(M=>{A=A.setPartyMemberFunc(parseInt(M,10),this.partyMemberFuncs[M])}),A=this.speciesPools?A.setSpeciesPools(this.speciesPools):A,A=this.speciesFilter?A.setSpeciesFilter(this.speciesFilter):A,this.specialtyTypes&&(A.specialtyTypes=this.specialtyTypes.slice(0)),A.encounterMessages=(s=this.encounterMessages)==null?void 0:s.slice(0),A.victoryMessages=(R=this.victoryMessages)==null?void 0:R.slice(0),A.defeatMessages=(a=this.defeatMessages)==null?void 0:a.slice(0),A.femaleEncounterMessages=(i=this.femaleEncounterMessages)==null?void 0:i.slice(0),A.femaleVictoryMessages=(r=this.femaleVictoryMessages)==null?void 0:r.slice(0),A.femaleDefeatMessages=(L=this.femaleDefeatMessages)==null?void 0:L.slice(0),A.doubleEncounterMessages=(o=this.doubleEncounterMessages)==null?void 0:o.slice(0),A.doubleVictoryMessages=(l=this.doubleVictoryMessages)==null?void 0:l.slice(0),A.doubleDefeatMessages=(C=this.doubleDefeatMessages)==null?void 0:C.slice(0),A}};N(aM,"TrainerConfig");let Ne=aM,Te=0;function dA(){var A;const E=(A=n.currentBattle)==null?void 0:A.waveIndex;return E<40?et.TWO_AVG:E<63?et.THREE_AVG:E<65?et.TWO_AVG_ONE_STRONG:E<112?et.GYM_LEADER_4:et.GYM_LEADER_5}N(dA,"getEvilGruntPartyTemplate");function dl(...E){var A;return E[Math.min(Math.max(Math.ceil((n.gameMode.getWaveForDifficulty(((A=n.currentBattle)==null?void 0:A.waveIndex)||ZL,!0)-20)/30),0),E.length-1)]}N(dl,"getWavePartyTemplate");function NJ(){return dl(et.GYM_LEADER_1,et.GYM_LEADER_2,et.GYM_LEADER_3,et.GYM_LEADER_4,et.GYM_LEADER_5)}N(NJ,"getGymLeaderPartyTemplate");function Ce(E,A=1,s=!1,R){return(a,i)=>{let r=IE(E);return n.gameMode.isClassic&&n.currentBattle.waveIndex===20&&(s=!0),s||(r=ke(r).getTrainerSpeciesForLevel(a,!0,i,n.currentBattle.waveIndex)),n.addEnemyPokemon(ke(r),a,A,void 0,!1,void 0,R)}}N(Ce,"getRandomPartyMemberFunc");function hL(E,A=1,s,R){const a=N(i=>!i.legendary&&!i.subLegendary&&!i.mythical&&!i.isTrainerForbidden()&&E(i),"speciesFilter");return(i,r)=>{const L=n.currentBattle.waveIndex,o=ke(n.randomSpecies(L,i,!1,a).getTrainerSpeciesForLevel(i,!0,r,L));return n.addEnemyPokemon(o,i,A,void 0,!1,void 0,R)}}N(hL,"getSpeciesFilterRandomPartyMemberFunc");function $0(E,A,s){const R=[],a=new Array(E.length).fill(null).map((i,r)=>r);for(let i=0;i<Math.min(A,E.length);i++){const r=IE(a);a.splice(a.indexOf(r),1),R.push(J.TERA_SHARD().generateType([],[IE(s||E[r].getTypes())]).withIdFromFunc(J.TERA_SHARD).newModifier(E[r]))}return R}N($0,"getRandomTeraModifiers");const ye={BROCK:[e.GEODUDE,e.ONIX],MISTY:[e.STARYU,e.PSYDUCK],LT_SURGE:[e.VOLTORB,e.PIKACHU,e.ELECTABUZZ],ERIKA:[e.ODDISH,e.BELLSPROUT,e.TANGELA,e.HOPPIP],JANINE:[e.VENONAT,e.SPINARAK,e.ZUBAT],SABRINA:[e.ABRA,e.MR_MIME,e.ESPEON],BLAINE:[e.GROWLITHE,e.PONYTA,e.MAGMAR],GIOVANNI:[e.SANDILE,e.MURKROW,e.NIDORAN_M,e.NIDORAN_F],FALKNER:[e.PIDGEY,e.HOOTHOOT,e.DODUO],BUGSY:[e.SCYTHER,e.HERACROSS,e.SHUCKLE,e.PINSIR],WHITNEY:[e.JIGGLYPUFF,e.MILTANK,e.AIPOM,e.GIRAFARIG],MORTY:[e.GASTLY,e.MISDREAVUS,e.SABLEYE],CHUCK:[e.POLIWRATH,e.MANKEY],JASMINE:[e.MAGNEMITE,e.STEELIX],PRYCE:[e.SEEL,e.SWINUB],CLAIR:[e.DRATINI,e.HORSEA,e.GYARADOS],ROXANNE:[e.GEODUDE,e.NOSEPASS],BRAWLY:[e.MACHOP,e.MAKUHITA],WATTSON:[e.MAGNEMITE,e.VOLTORB,e.ELECTRIKE],FLANNERY:[e.SLUGMA,e.TORKOAL,e.NUMEL],NORMAN:[e.SLAKOTH,e.SPINDA,e.ZIGZAGOON,e.KECLEON],WINONA:[e.SWABLU,e.WINGULL,e.TROPIUS,e.SKARMORY],TATE:[e.SOLROCK,e.NATU,e.CHIMECHO,e.GALLADE],LIZA:[e.LUNATONE,e.SPOINK,e.BALTOY,e.GARDEVOIR],JUAN:[e.HORSEA,e.BARBOACH,e.SPHEAL,e.RELICANTH],ROARK:[e.CRANIDOS,e.LARVITAR,e.GEODUDE],GARDENIA:[e.ROSELIA,e.TANGELA,e.TURTWIG],MAYLENE:[e.LUCARIO,e.MEDITITE,e.CHIMCHAR],CRASHER_WAKE:[e.BUIZEL,e.WOOPER,e.PIPLUP,e.MAGIKARP],FANTINA:[e.MISDREAVUS,e.DRIFLOON,e.SPIRITOMB],BYRON:[e.SHIELDON,e.BRONZOR,e.AGGRON],CANDICE:[e.SNEASEL,e.SNOVER,e.SNORUNT],VOLKNER:[e.SHINX,e.CHINCHOU,e.ROTOM],CILAN:[e.PANSAGE,e.FOONGUS,e.PETILIL],CHILI:[e.PANSEAR,e.DARUMAKA,e.NUMEL],CRESS:[e.PANPOUR,e.TYMPOLE,e.SLOWPOKE],CHEREN:[e.LILLIPUP,e.MINCCINO,e.PIDOVE],LENORA:[e.PATRAT,e.DEERLING,e.AUDINO],ROXIE:[e.VENIPEDE,e.TRUBBISH,e.SKORUPI],BURGH:[e.SEWADDLE,e.SHELMET,e.KARRABLAST],ELESA:[e.EMOLGA,e.BLITZLE,e.JOLTIK],CLAY:[e.DRILBUR,e.SANDILE,e.GOLETT],SKYLA:[e.DUCKLETT,e.WOOBAT,e.RUFFLET],BRYCEN:[e.CRYOGONAL,e.VANILLITE,e.CUBCHOO],DRAYDEN:[e.DRUDDIGON,e.AXEW,e.DEINO],MARLON:[e.WAILMER,e.FRILLISH,e.TIRTOUGA],VIOLA:[e.SURSKIT,e.SCATTERBUG],GRANT:[e.AMAURA,e.TYRUNT],KORRINA:[e.HAWLUCHA,e.LUCARIO,e.MIENFOO],RAMOS:[e.SKIDDO,e.HOPPIP,e.BELLSPROUT],CLEMONT:[e.HELIOPTILE,e.MAGNEMITE,e.EMOLGA],VALERIE:[e.SYLVEON,e.MAWILE,e.MR_MIME],OLYMPIA:[e.ESPURR,e.SIGILYPH,e.SLOWKING],WULFRIC:[e.BERGMITE,e.SNOVER,e.CRYOGONAL],MILO:[e.GOSSIFLEUR,e.APPLIN,e.BOUNSWEET],NESSA:[e.CHEWTLE,e.ARROKUDA,e.WIMPOD],KABU:[e.SIZZLIPEDE,e.VULPIX,e.TORKOAL],BEA:[e.GALAR_FARFETCHD,e.MACHOP,e.CLOBBOPUS],ALLISTER:[e.GALAR_YAMASK,e.GALAR_CORSOLA,e.GASTLY],OPAL:[e.MILCERY,e.TOGETIC,e.GALAR_WEEZING],BEDE:[e.HATENNA,e.GALAR_PONYTA,e.GARDEVOIR],GORDIE:[e.ROLYCOLY,e.STONJOURNER,e.BINACLE],MELONY:[e.SNOM,e.GALAR_DARUMAKA,e.GALAR_MR_MIME],PIERS:[e.GALAR_ZIGZAGOON,e.SCRAGGY,e.INKAY],MARNIE:[e.IMPIDIMP,e.PURRLOIN,e.MORPEKO],RAIHAN:[e.DURALUDON,e.TURTONATOR,e.GOOMY],KATY:[e.NYMBLE,e.TAROUNTULA,e.HERACROSS],BRASSIUS:[e.SMOLIV,e.SHROOMISH,e.ODDISH],IONO:[e.TADBULB,e.WATTREL,e.VOLTORB],KOFU:[e.VELUZA,e.WIGLETT,e.WINGULL],LARRY:[e.STARLY,e.DUNSPARCE,e.LECHONK,e.KOMALA],RYME:[e.GREAVARD,e.SHUPPET,e.MIMIKYU],TULIP:[e.GIRAFARIG,e.FLITTLE,e.RALTS],GRUSHA:[e.CETODDLE,e.ALOLA_VULPIX,e.CUBCHOO],LORELEI:[e.JYNX,[e.SLOWBRO,e.GALAR_SLOWBRO],e.LAPRAS,[e.ALOLA_SANDSLASH,e.CLOYSTER]],BRUNO:[e.MACHAMP,e.HITMONCHAN,e.HITMONLEE,[e.ALOLA_GOLEM,e.GOLEM]],AGATHA:[e.GENGAR,[e.ARBOK,e.WEEZING],e.CROBAT,e.ALOLA_MAROWAK],LANCE:[e.DRAGONITE,e.GYARADOS,e.AERODACTYL,e.ALOLA_EXEGGUTOR],WILL:[e.XATU,e.JYNX,[e.SLOWBRO,e.SLOWKING],e.EXEGGUTOR],KOGA:[[e.WEEZING,e.MUK],[e.VENOMOTH,e.ARIADOS],e.CROBAT,e.TENTACRUEL],KAREN:[e.UMBREON,e.HONCHKROW,e.HOUNDOOM,e.WEAVILE],SIDNEY:[[e.SHIFTRY,e.CACTURNE],[e.SHARPEDO,e.CRAWDAUNT],e.ABSOL,e.MIGHTYENA],PHOEBE:[e.SABLEYE,e.DUSKNOIR,e.BANETTE,[e.MISMAGIUS,e.DRIFBLIM]],GLACIA:[e.GLALIE,e.WALREIN,e.FROSLASS,e.ABOMASNOW],DRAKE:[e.ALTARIA,e.SALAMENCE,e.FLYGON,e.KINGDRA],AARON:[[e.SCIZOR,e.KLEAVOR],e.HERACROSS,[e.VESPIQUEN,e.YANMEGA],e.DRAPION],BERTHA:[e.WHISCASH,e.HIPPOWDON,e.GLISCOR,e.RHYPERIOR],FLINT:[[e.FLAREON,e.RAPIDASH],e.MAGMORTAR,[e.STEELIX,e.LOPUNNY],e.INFERNAPE],LUCIAN:[e.MR_MIME,e.GALLADE,e.BRONZONG,[e.ALAKAZAM,e.ESPEON]],SHAUNTAL:[e.COFAGRIGUS,e.CHANDELURE,e.GOLURK,e.JELLICENT],MARSHAL:[e.CONKELDURR,e.MIENSHAO,e.THROH,e.SAWK],GRIMSLEY:[e.LIEPARD,e.KINGAMBIT,e.SCRAFTY,e.KROOKODILE],CAITLIN:[e.MUSHARNA,e.GOTHITELLE,e.SIGILYPH,e.REUNICLUS],MALVA:[e.PYROAR,e.TORKOAL,e.CHANDELURE,e.TALONFLAME],SIEBOLD:[e.CLAWITZER,e.GYARADOS,e.BARBARACLE,e.STARMIE],WIKSTROM:[e.KLEFKI,e.PROBOPASS,e.SCIZOR,e.AEGISLASH],DRASNA:[e.DRAGALGE,e.DRUDDIGON,e.ALTARIA,e.NOIVERN],HALA:[e.HARIYAMA,e.BEWEAR,e.CRABOMINABLE,[e.POLIWRATH,e.ANNIHILAPE]],MOLAYNE:[e.KLEFKI,e.MAGNEZONE,e.METAGROSS,e.ALOLA_DUGTRIO],OLIVIA:[e.RELICANTH,e.CARBINK,e.ALOLA_GOLEM,e.LYCANROC],ACEROLA:[[e.BANETTE,e.DRIFBLIM],e.MIMIKYU,e.DHELMISE,e.PALOSSAND],KAHILI:[[e.BRAVIARY,e.MANDIBUZZ],e.HAWLUCHA,e.ORICORIO,e.TOUCANNON],MARNIE_ELITE:[e.MORPEKO,e.LIEPARD,[e.TOXICROAK,e.SCRAFTY],e.GRIMMSNARL],NESSA_ELITE:[e.GOLISOPOD,[e.PELIPPER,e.QUAGSIRE],e.TOXAPEX,e.DREDNAW],BEA_ELITE:[e.HAWLUCHA,[e.GRAPPLOCT,e.SIRFETCHD],e.FALINKS,e.MACHAMP],ALLISTER_ELITE:[e.DUSKNOIR,[e.POLTEAGEIST,e.RUNERIGUS],e.CURSOLA,e.GENGAR],RAIHAN_ELITE:[e.GOODRA,[e.TORKOAL,e.TURTONATOR],e.FLYGON,e.ARCHALUDON],RIKA:[e.WHISCASH,[e.DONPHAN,e.DUGTRIO],e.CAMERUPT,e.CLODSIRE],POPPY:[e.COPPERAJAH,e.BRONZONG,e.CORVIKNIGHT,e.TINKATON],LARRY_ELITE:[e.STARAPTOR,e.FLAMIGO,e.ALTARIA,e.TROPIUS],HASSEL:[e.NOIVERN,[e.FLAPPLE,e.APPLETUN],e.DRAGALGE,e.BAXCALIBUR],CRISPIN:[e.TALONFLAME,e.CAMERUPT,e.MAGMORTAR,e.BLAZIKEN],AMARYS:[e.SKARMORY,e.EMPOLEON,e.SCIZOR,e.METAGROSS],LACEY:[e.EXCADRILL,e.PRIMARINA,[e.ALCREMIE,e.GRANBULL],e.WHIMSICOTT],DRAYTON:[e.DRAGONITE,e.ARCHALUDON,e.HAXORUS,e.SCEPTILE],BLUE:[[e.GYARADOS,e.EXEGGUTOR,e.ARCANINE],e.HO_OH,[e.RHYPERIOR,e.MAGNEZONE]],RED:[e.LUGIA,e.SNORLAX,[e.ESPEON,e.UMBREON,e.SYLVEON]],LANCE_CHAMPION:[e.DRAGONITE,e.KINGDRA,e.ALOLA_EXEGGUTOR],STEVEN:[e.AGGRON,[e.ARMALDO,e.CRADILY],e.DIALGA],WALLACE:[e.MILOTIC,e.PALKIA,e.LUDICOLO],CYNTHIA:[e.GIRATINA,e.LUCARIO,e.TOGEKISS],ALDER:[e.VOLCARONA,e.ZEKROM,[e.ACCELGOR,e.ESCAVALIER],e.KELDEO],IRIS:[e.HAXORUS,e.RESHIRAM,e.ARCHEOPS],DIANTHA:[e.HAWLUCHA,e.XERNEAS,e.GOODRA],HAU:[[e.SOLGALEO,e.LUNALA],e.NOIVERN,[e.DECIDUEYE,e.INCINEROAR,e.PRIMARINA],[e.TAPU_BULU,e.TAPU_FINI,e.TAPU_KOKO,e.TAPU_LELE]],LEON:[e.DRAGAPULT,e.ZACIAN,e.AEGISLASH],GEETA:[e.MIRAIDON,[e.ESPATHRA,e.VELUZA],[e.AVALUGG,e.HISUI_AVALUGG],e.KINGAMBIT],NEMONA:[e.KORAIDON,e.PAWMOT,[e.DUDUNSPARCE,e.ORTHWORM],[e.MEOWSCARADA,e.SKELEDIRGE,e.QUAQUAVAL]],KIERAN:[[e.GRIMMSNARL,e.INCINEROAR,e.PORYGON_Z],e.OGERPON,e.TERAPAGOS,e.HYDRAPPLE]},QA={[U.UNKNOWN]:new Ne(0).setHasGenders(),[U.ACE_TRAINER]:new Ne(++Te).setHasGenders("Ace Trainer Female").setHasDouble("Ace Duo").setMoneyMultiplier(2.25).setEncounterBgm(U.ACE_TRAINER).setPartyTemplateFunc(()=>dl(et.THREE_WEAK_BALANCED,et.FOUR_WEAK_BALANCED,et.FIVE_WEAK_BALANCED,et.SIX_WEAK_BALANCED)),[U.ARTIST]:new Ne(++Te).setEncounterBgm(U.RICH).setPartyTemplates(et.ONE_STRONG,et.TWO_AVG,et.THREE_AVG).setSpeciesPools([e.SMEARGLE]),[U.BACKERS]:new Ne(++Te).setHasGenders("Backers").setDoubleOnly().setEncounterBgm(U.CYCLIST),[U.BACKPACKER]:new Ne(++Te).setHasGenders("Backpacker Female").setHasDouble("Backpackers").setSpeciesFilter(E=>E.isOfType(I.FLYING)||E.isOfType(I.ROCK)).setEncounterBgm(U.BACKPACKER).setPartyTemplates(et.ONE_STRONG,et.ONE_WEAK_ONE_STRONG,et.ONE_AVG_ONE_STRONG).setSpeciesPools({0:[e.RHYHORN,e.AIPOM,e.MAKUHITA,e.MAWILE,e.NUMEL,e.LILLIPUP,e.SANDILE,e.WOOLOO],1:[e.GIRAFARIG,e.ZANGOOSE,e.SEVIPER,e.CUBCHOO,e.PANCHAM,e.SKIDDO,e.MUDBRAY],2:[e.TAUROS,e.STANTLER,e.DARUMAKA,e.BOUFFALANT,e.DEERLING,e.IMPIDIMP],3:[e.GALAR_DARUMAKA,e.TEDDIURSA]}),[U.BAKER]:new Ne(++Te).setEncounterBgm(U.CLERK).setMoneyMultiplier(1.35).setSpeciesFilter(E=>E.isOfType(I.GRASS)||E.isOfType(I.FIRE)),[U.BEAUTY]:new Ne(++Te).setMoneyMultiplier(1.55).setEncounterBgm(U.PARASOL_LADY),[U.BIKER]:new Ne(++Te).setMoneyMultiplier(1.4).setEncounterBgm(U.ROUGHNECK).setSpeciesFilter(E=>E.isOfType(I.POISON)),[U.BLACK_BELT]:new Ne(++Te).setHasGenders("Battle Girl",U.PSYCHIC).setHasDouble("Crush Kin").setEncounterBgm(U.ROUGHNECK).setSpecialtyTypes(I.FIGHTING).setPartyTemplates(et.TWO_WEAK_ONE_AVG,et.TWO_WEAK_ONE_AVG,et.TWO_AVG,et.TWO_AVG,et.TWO_WEAK_ONE_STRONG,et.THREE_AVG,et.TWO_AVG_ONE_STRONG).setSpeciesPools({0:[e.NIDORAN_F,e.NIDORAN_M,e.MACHOP,e.MAKUHITA,e.MEDITITE,e.CROAGUNK,e.TIMBURR],1:[e.MANKEY,e.POLIWRATH,e.TYROGUE,e.BRELOOM,e.SCRAGGY,e.MIENFOO,e.PANCHAM,e.STUFFUL,e.CRABRAWLER],2:[e.HERACROSS,e.RIOLU,e.THROH,e.SAWK,e.PASSIMIAN,e.CLOBBOPUS],3:[e.HITMONTOP,e.INFERNAPE,e.GALLADE,e.HAWLUCHA,e.HAKAMO_O],4:[e.KUBFU]}),[U.BREEDER]:new Ne(++Te).setMoneyMultiplier(1.325).setEncounterBgm(U.POKEFAN).setHasGenders("Breeder Female").setHasDouble("Breeders").setPartyTemplateFunc(()=>dl(et.FOUR_WEAKER,et.FIVE_WEAKER,et.SIX_WEAKER)).setSpeciesFilter(E=>E.baseTotal<450),[U.CLERK]:new Ne(++Te).setHasGenders("Clerk Female").setHasDouble("Colleagues").setEncounterBgm(U.CLERK).setPartyTemplates(et.TWO_WEAK,et.THREE_WEAK,et.ONE_AVG,et.TWO_AVG,et.TWO_WEAK_ONE_AVG).setSpeciesPools({0:[e.MEOWTH,e.PSYDUCK,e.BUDEW,e.PIDOVE,e.CINCCINO,e.LITLEO],1:[e.JIGGLYPUFF,e.MAGNEMITE,e.MARILL,e.COTTONEE,e.SKIDDO],2:[e.BUIZEL,e.SNEASEL,e.KLEFKI,e.INDEEDEE]}),[U.CYCLIST]:new Ne(++Te).setMoneyMultiplier(1.3).setHasGenders("Cyclist Female").setHasDouble("Cyclists").setEncounterBgm(U.CYCLIST).setPartyTemplates(et.TWO_WEAK,et.ONE_AVG).setSpeciesPools({0:[e.PICHU,e.STARLY,e.TAILLOW,e.BOLTUND],1:[e.DODUO,e.ELECTRIKE,e.BLITZLE,e.WATTREL],2:[e.YANMA,e.NINJASK,e.WHIRLIPEDE,e.EMOLGA],3:[e.ACCELGOR,e.DREEPY]}),[U.DANCER]:new Ne(++Te).setMoneyMultiplier(1.55).setEncounterBgm(U.CYCLIST).setPartyTemplates(et.TWO_WEAK,et.ONE_AVG,et.TWO_AVG,et.TWO_WEAK_SAME_TWO_WEAK_SAME).setSpeciesPools({0:[e.RALTS,e.SPOINK,e.LOTAD,e.BUDEW],1:[e.SPINDA,e.SWABLU,e.MARACTUS],2:[e.BELLOSSOM,e.HITMONTOP,e.MIME_JR,e.ORICORIO],3:[e.POPPLIO]}),[U.DEPOT_AGENT]:new Ne(++Te).setMoneyMultiplier(1.45).setEncounterBgm(U.CLERK),[U.DOCTOR]:new Ne(++Te).setHasGenders("Nurse","lass").setHasDouble("Medical Team").setMoneyMultiplier(3).setEncounterBgm(U.CLERK).setSpeciesFilter(E=>!!E.getLevelMoves().find(A=>A[1]===t.HEAL_PULSE)),[U.FIREBREATHER]:new Ne(++Te).setMoneyMultiplier(1.4).setEncounterBgm(U.ROUGHNECK).setSpeciesFilter(E=>!!E.getLevelMoves().find(A=>A[1]===t.SMOG)||E.isOfType(I.FIRE)),[U.FISHERMAN]:new Ne(++Te).setMoneyMultiplier(1.25).setEncounterBgm(U.BACKPACKER).setSpecialtyTypes(I.WATER).setPartyTemplates(et.TWO_WEAK_SAME_ONE_AVG,et.ONE_AVG,et.THREE_WEAK_SAME,et.ONE_STRONG,et.SIX_WEAKER).setSpeciesPools({0:[e.TENTACOOL,e.MAGIKARP,e.GOLDEEN,e.STARYU,e.REMORAID,e.SKRELP,e.CLAUNCHER,e.ARROKUDA],1:[e.POLIWAG,e.SHELLDER,e.KRABBY,e.HORSEA,e.CARVANHA,e.BARBOACH,e.CORPHISH,e.FINNEON,e.TYMPOLE,e.BASCULIN,e.FRILLISH,e.INKAY],2:[e.CHINCHOU,e.CORSOLA,e.WAILMER,e.BARBOACH,e.CLAMPERL,e.LUVDISC,e.MANTYKE,e.ALOMOMOLA,e.TATSUGIRI,e.VELUZA],3:[e.LAPRAS,e.FEEBAS,e.RELICANTH,e.DONDOZO]}),[U.GUITARIST]:new Ne(++Te).setMoneyMultiplier(1.2).setEncounterBgm(U.ROUGHNECK).setSpecialtyTypes(I.ELECTRIC).setSpeciesFilter(E=>E.isOfType(I.ELECTRIC)),[U.HARLEQUIN]:new Ne(++Te).setEncounterBgm(U.PSYCHIC).setSpeciesFilter(E=>ja[t.TRICK_ROOM].indexOf(E.speciesId)>-1),[U.HIKER]:new Ne(++Te).setEncounterBgm(U.BACKPACKER).setPartyTemplates(et.TWO_AVG_SAME_ONE_AVG,et.TWO_AVG_SAME_ONE_STRONG,et.TWO_AVG,et.FOUR_WEAK,et.ONE_STRONG).setSpeciesPools({0:[e.SANDSHREW,e.DIGLETT,e.GEODUDE,e.MACHOP,e.ARON,e.ROGGENROLA,e.DRILBUR,e.NACLI],1:[e.ZUBAT,e.RHYHORN,e.ONIX,e.CUBONE,e.WOOBAT,e.SWINUB,e.NOSEPASS,e.HIPPOPOTAS,e.DWEBBLE,e.KLAWF,e.TOEDSCOOL],2:[e.TORKOAL,e.TRAPINCH,e.BARBOACH,e.GOLETT,e.ALOLA_DIGLETT,e.ALOLA_GEODUDE,e.GALAR_STUNFISK,e.PALDEA_WOOPER],3:[e.MAGBY,e.LARVITAR]}),[U.HOOLIGANS]:new Ne(++Te).setDoubleOnly().setEncounterBgm(U.ROUGHNECK).setSpeciesFilter(E=>E.isOfType(I.POISON)||E.isOfType(I.DARK)),[U.HOOPSTER]:new Ne(++Te).setMoneyMultiplier(1.2).setEncounterBgm(U.CYCLIST),[U.INFIELDER]:new Ne(++Te).setMoneyMultiplier(1.2).setEncounterBgm(U.CYCLIST),[U.JANITOR]:new Ne(++Te).setMoneyMultiplier(1.1).setEncounterBgm(U.CLERK),[U.LINEBACKER]:new Ne(++Te).setMoneyMultiplier(1.2).setEncounterBgm(U.CYCLIST),[U.MAID]:new Ne(++Te).setMoneyMultiplier(1.6).setEncounterBgm(U.RICH),[U.MUSICIAN]:new Ne(++Te).setEncounterBgm(U.ROUGHNECK).setSpeciesFilter(E=>!!E.getLevelMoves().find(A=>A[1]===t.SING)),[U.HEX_MANIAC]:new Ne(++Te).setMoneyMultiplier(1.5).setEncounterBgm(U.PSYCHIC).setPartyTemplates(et.TWO_AVG,et.ONE_AVG_ONE_STRONG,et.TWO_AVG_SAME_ONE_AVG,et.THREE_AVG,et.TWO_STRONG).setSpeciesFilter(E=>E.isOfType(I.GHOST)),[U.NURSERY_AIDE]:new Ne(++Te).setMoneyMultiplier(1.3).setEncounterBgm("lass"),[U.OFFICER]:new Ne(++Te).setMoneyMultiplier(1.55).setEncounterBgm(U.CLERK).setPartyTemplates(et.ONE_AVG,et.ONE_STRONG,et.TWO_AVG,et.TWO_WEAK_SAME_ONE_AVG).setSpeciesPools({0:[e.VULPIX,e.GROWLITHE,e.SNUBBULL,e.POOCHYENA,e.ELECTRIKE,e.LILLIPUP,e.YAMPER,e.FIDOUGH],1:[e.HOUNDOUR,e.ROCKRUFF,e.MASCHIFF],2:[e.JOLTEON,e.RIOLU],3:[],4:[e.ENTEI,e.SUICUNE,e.RAIKOU]}),[U.PARASOL_LADY]:new Ne(++Te).setMoneyMultiplier(1.55).setEncounterBgm(U.PARASOL_LADY).setSpeciesFilter(E=>E.isOfType(I.WATER)),[U.PILOT]:new Ne(++Te).setEncounterBgm(U.CLERK).setSpeciesFilter(E=>ja[t.FLY].indexOf(E.speciesId)>-1),[U.POKEFAN]:new Ne(++Te).setMoneyMultiplier(1.4).setName("PokéFan").setHasGenders("PokéFan Female").setHasDouble("PokéFan Family").setEncounterBgm(U.POKEFAN).setPartyTemplates(et.SIX_WEAKER,et.FOUR_WEAK,et.TWO_AVG,et.ONE_STRONG,et.FOUR_WEAK_SAME,et.FIVE_WEAK,et.SIX_WEAKER_SAME),[U.PRESCHOOLER]:new Ne(++Te).setMoneyMultiplier(.2).setEncounterBgm(U.YOUNGSTER).setHasGenders("Preschooler Female","lass").setHasDouble("Preschoolers").setPartyTemplates(et.THREE_WEAK,et.FOUR_WEAKER,et.TWO_WEAK_SAME_ONE_AVG,et.FIVE_WEAKER).setSpeciesPools({0:[e.CATERPIE,e.PICHU,e.SANDSHREW,e.LEDYBA,e.BUDEW,e.BURMY,e.WOOLOO,e.PAWMI,e.SMOLIV],1:[e.EEVEE,e.CLEFFA,e.IGGLYBUFF,e.SWINUB,e.WOOPER,e.DRIFLOON,e.DEDENNE,e.STUFFUL],2:[e.RALTS,e.RIOLU,e.JOLTIK,e.TANDEMAUS],3:[e.DARUMAKA,e.TINKATINK]}),[U.PSYCHIC]:new Ne(++Te).setHasGenders("Psychic Female").setHasDouble("Psychics").setMoneyMultiplier(1.4).setEncounterBgm(U.PSYCHIC).setPartyTemplates(et.TWO_WEAK,et.TWO_AVG,et.TWO_WEAK_SAME_ONE_AVG,et.TWO_WEAK_SAME_TWO_WEAK_SAME,et.ONE_STRONGER).setSpeciesPools({0:[e.ABRA,e.DROWZEE,e.RALTS,e.SPOINK,e.GOTHITA,e.SOLOSIS,e.BLIPBUG,e.ESPURR,e.HATENNA],1:[e.MIME_JR,e.EXEGGCUTE,e.MEDITITE,e.NATU,e.EXEGGCUTE,e.WOOBAT,e.INKAY,e.ORANGURU],2:[e.ELGYEM,e.SIGILYPH,e.BALTOY,e.GIRAFARIG,e.MEOWSTIC],3:[e.BELDUM,e.ESPEON,e.STANTLER]}),[U.RANGER]:new Ne(++Te).setMoneyMultiplier(1.4).setName("Pokémon Ranger").setEncounterBgm(U.BACKPACKER).setHasGenders("Pokémon Ranger Female").setHasDouble("Pokémon Rangers").setSpeciesPools({0:[e.PICHU,e.GROWLITHE,e.PONYTA,e.ZIGZAGOON,e.SEEDOT,e.BIDOOF,e.RIOLU,e.SEWADDLE,e.SKIDDO,e.SALANDIT,e.YAMPER],1:[e.AZURILL,e.TAUROS,e.MAREEP,e.FARFETCHD,e.TEDDIURSA,e.SHROOMISH,e.ELECTRIKE,e.BUDEW,e.BUIZEL,e.MUDBRAY,e.STUFFUL],2:[e.EEVEE,e.SCYTHER,e.KANGASKHAN,e.RALTS,e.MUNCHLAX,e.ZORUA,e.PALDEA_TAUROS,e.TINKATINK,e.CYCLIZAR,e.FLAMIGO],3:[e.LARVESTA]}),[U.RICH]:new Ne(++Te).setMoneyMultiplier(5).setName("Gentleman").setHasGenders("Madame").setHasDouble("Rich Couple"),[U.RICH_KID]:new Ne(++Te).setMoneyMultiplier(3.75).setName("Rich Boy").setHasGenders("Lady").setHasDouble("Rich Kids").setEncounterBgm(U.RICH),[U.ROUGHNECK]:new Ne(++Te).setMoneyMultiplier(1.4).setEncounterBgm(U.ROUGHNECK).setSpeciesFilter(E=>E.isOfType(I.DARK)),[U.SAILOR]:new Ne(++Te).setMoneyMultiplier(1.4).setEncounterBgm(U.BACKPACKER).setSpeciesFilter(E=>E.isOfType(I.WATER)||E.isOfType(I.FIGHTING)),[U.SCIENTIST]:new Ne(++Te).setHasGenders("Scientist Female").setHasDouble("Scientists").setMoneyMultiplier(1.7).setEncounterBgm(U.SCIENTIST).setSpeciesPools({0:[e.MAGNEMITE,e.GRIMER,e.DROWZEE,e.VOLTORB,e.KOFFING],1:[e.BALTOY,e.BRONZOR,e.FERROSEED,e.KLINK,e.CHARJABUG,e.BLIPBUG,e.HELIOPTILE],2:[e.ABRA,e.DITTO,e.PORYGON,e.ELEKID,e.SOLOSIS,e.GALAR_WEEZING],3:[e.OMANYTE,e.KABUTO,e.AERODACTYL,e.LILEEP,e.ANORITH,e.CRANIDOS,e.SHIELDON,e.TIRTOUGA,e.ARCHEN,e.ARCTOVISH,e.ARCTOZOLT,e.DRACOVISH,e.DRACOZOLT],4:[e.ROTOM,e.MELTAN]}),[U.SMASHER]:new Ne(++Te).setMoneyMultiplier(1.2).setEncounterBgm(U.CYCLIST),[U.SNOW_WORKER]:new Ne(++Te).setName("Worker").setHasDouble("Workers").setMoneyMultiplier(1.7).setEncounterBgm(U.CLERK).setSpeciesFilter(E=>E.isOfType(I.ICE)||E.isOfType(I.STEEL)),[U.STRIKER]:new Ne(++Te).setMoneyMultiplier(1.2).setEncounterBgm(U.CYCLIST),[U.SCHOOL_KID]:new Ne(++Te).setMoneyMultiplier(.75).setEncounterBgm(U.YOUNGSTER).setHasGenders("School Kid Female","lass").setHasDouble("School Kids").setSpeciesPools({0:[e.ODDISH,e.EXEGGCUTE,e.TEDDIURSA,e.WURMPLE,e.RALTS,e.SHROOMISH,e.FLETCHLING],1:[e.VOLTORB,e.WHISMUR,e.MEDITITE,e.MIME_JR,e.NYMBLE],2:[e.TANGELA,e.EEVEE,e.YANMA],3:[e.TADBULB]}),[U.SWIMMER]:new Ne(++Te).setMoneyMultiplier(1.3).setEncounterBgm(U.PARASOL_LADY).setHasGenders("Swimmer Female").setHasDouble("Swimmers").setSpecialtyTypes(I.WATER).setSpeciesFilter(E=>E.isOfType(I.WATER)),[U.TWINS]:new Ne(++Te).setDoubleOnly().setMoneyMultiplier(.65).setUseSameSeedForAllMembers().setPartyTemplateFunc(()=>dl(et.TWO_WEAK,et.TWO_AVG,et.TWO_STRONG)).setPartyMemberFunc(0,Ce([e.PLUSLE,e.VOLBEAT,e.PACHIRISU,e.SILCOON,e.METAPOD,e.IGGLYBUFF,e.PETILIL,e.EEVEE])).setPartyMemberFunc(1,Ce([e.MINUN,e.ILLUMISE,e.EMOLGA,e.CASCOON,e.KAKUNA,e.CLEFFA,e.COTTONEE,e.EEVEE],2)).setEncounterBgm(U.TWINS),[U.VETERAN]:new Ne(++Te).setHasGenders("Veteran Female").setHasDouble("Veteran Duo").setMoneyMultiplier(2.5).setEncounterBgm(U.ACE_TRAINER).setSpeciesFilter(E=>E.isOfType(I.DRAGON)),[U.WAITER]:new Ne(++Te).setHasGenders("Waitress").setHasDouble("Restaurant Staff").setMoneyMultiplier(1.5).setEncounterBgm(U.CLERK).setSpeciesPools({0:[e.CLEFFA,e.CHATOT,e.PANSAGE,e.PANSEAR,e.PANPOUR,e.MINCCINO],1:[e.TROPIUS,e.PETILIL,e.BOUNSWEET,e.INDEEDEE],2:[e.APPLIN,e.SINISTEA,e.POLTCHAGEIST]}),[U.WORKER]:new Ne(++Te).setHasGenders("Worker Female").setHasDouble("Workers").setEncounterBgm(U.CLERK).setMoneyMultiplier(1.7).setSpeciesFilter(E=>E.isOfType(I.ROCK)||E.isOfType(I.STEEL)),[U.YOUNGSTER]:new Ne(++Te).setMoneyMultiplier(.5).setEncounterBgm(U.YOUNGSTER).setHasGenders("Lass","lass").setHasDouble("Beginners").setPartyTemplates(et.TWO_WEAKER).setSpeciesPools([e.CATERPIE,e.WEEDLE,e.RATTATA,e.SENTRET,e.POOCHYENA,e.ZIGZAGOON,e.WURMPLE,e.BIDOOF,e.PATRAT,e.LILLIPUP]),[U.ROCKET_GRUNT]:new Ne(++Te).setHasGenders("Rocket Grunt Female").setHasDouble("Rocket Grunts").setMoneyMultiplier(1).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_rocket_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>dA()).setSpeciesPools({0:[e.WEEDLE,e.RATTATA,e.EKANS,e.SANDSHREW,e.ZUBAT,e.GEODUDE,e.KOFFING,e.GRIMER,e.ODDISH,e.SLOWPOKE],1:[e.GYARADOS,e.LICKITUNG,e.TAUROS,e.MANKEY,e.SCYTHER,e.ELEKID,e.MAGBY,e.CUBONE,e.GROWLITHE,e.MURKROW,e.GASTLY,e.EXEGGCUTE,e.VOLTORB,e.MAGNEMITE],2:[e.PORYGON,e.ALOLA_RATTATA,e.ALOLA_SANDSHREW,e.ALOLA_MEOWTH,e.ALOLA_GRIMER,e.ALOLA_GEODUDE,e.PALDEA_TAUROS,e.OMANYTE,e.KABUTO],3:[e.DRATINI,e.LARVITAR]}),[U.ARCHER]:new Ne(++Te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("rocket_admin","rocket",[e.HOUNDOOM]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_rocket_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>dA()),[U.ARIANA]:new Ne(++Te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("rocket_admin_female","rocket",[e.ARBOK]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_rocket_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>dA()),[U.PROTON]:new Ne(++Te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("rocket_admin","rocket",[e.CROBAT]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_rocket_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>dA()),[U.PETREL]:new Ne(++Te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("rocket_admin","rocket",[e.WEEZING]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_rocket_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>dA()),[U.MAGMA_GRUNT]:new Ne(++Te).setHasGenders("Magma Grunt Female").setHasDouble("Magma Grunts").setMoneyMultiplier(1).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>dA()).setSpeciesPools({0:[e.SLUGMA,e.POOCHYENA,e.NUMEL,e.ZIGZAGOON,e.DIGLETT,e.MAGBY,e.TORKOAL,e.GROWLITHE,e.BALTOY],1:[e.SOLROCK,e.HIPPOPOTAS,e.SANDACONDA,e.PHANPY,e.ROLYCOLY,e.GLIGAR,e.RHYHORN,e.HEATMOR],2:[e.TRAPINCH,e.LILEEP,e.ANORITH,e.HISUI_GROWLITHE,e.TURTONATOR,e.ARON,e.TOEDSCOOL],3:[e.CAPSAKID,e.CHARCADET]}),[U.TABITHA]:new Ne(++Te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("magma_admin","magma",[e.CAMERUPT]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>dA()),[U.COURTNEY]:new Ne(++Te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("magma_admin_female","magma",[e.CAMERUPT]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>dA()),[U.AQUA_GRUNT]:new Ne(++Te).setHasGenders("Aqua Grunt Female").setHasDouble("Aqua Grunts").setMoneyMultiplier(1).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>dA()).setSpeciesPools({0:[e.CARVANHA,e.WAILMER,e.ZIGZAGOON,e.LOTAD,e.CORPHISH,e.SPHEAL,e.REMORAID,e.QWILFISH,e.BARBOACH],1:[e.CLAMPERL,e.CHINCHOU,e.WOOPER,e.WINGULL,e.TENTACOOL,e.AZURILL,e.CLOBBOPUS,e.HORSEA],2:[e.MANTYKE,e.DHELMISE,e.HISUI_QWILFISH,e.ARROKUDA,e.PALDEA_WOOPER,e.SKRELP],3:[e.DONDOZO,e.BASCULEGION]}),[U.MATT]:new Ne(++Te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("aqua_admin","aqua",[e.SHARPEDO]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>dA()),[U.SHELLY]:new Ne(++Te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("aqua_admin_female","aqua",[e.SHARPEDO]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>dA()),[U.GALACTIC_GRUNT]:new Ne(++Te).setHasGenders("Galactic Grunt Female").setHasDouble("Galactic Grunts").setMoneyMultiplier(1).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_galactic_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>dA()).setSpeciesPools({0:[e.GLAMEOW,e.STUNKY,e.CROAGUNK,e.SHINX,e.WURMPLE,e.BRONZOR,e.DRIFLOON,e.BURMY,e.CARNIVINE],1:[e.LICKITUNG,e.RHYHORN,e.TANGELA,e.ZUBAT,e.YANMA,e.SKORUPI,e.GLIGAR,e.SWINUB],2:[e.HISUI_GROWLITHE,e.HISUI_QWILFISH,e.SNEASEL,e.ELEKID,e.MAGBY,e.DUSKULL],3:[e.ROTOM,e.SPIRITOMB,e.HISUI_SNEASEL]}),[U.JUPITER]:new Ne(++Te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("galactic_commander_female","galactic",[e.SKUNTANK]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_galactic_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>dA()),[U.MARS]:new Ne(++Te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("galactic_commander_female","galactic",[e.PURUGLY]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_galactic_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>dA()),[U.SATURN]:new Ne(++Te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("galactic_commander","galactic",[e.TOXICROAK]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_galactic_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>dA()),[U.PLASMA_GRUNT]:new Ne(++Te).setHasGenders("Plasma Grunt Female").setHasDouble("Plasma Grunts").setMoneyMultiplier(1).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_plasma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>dA()).setSpeciesPools({0:[e.PATRAT,e.LILLIPUP,e.PURRLOIN,e.SCRAFTY,e.WOOBAT,e.VANILLITE,e.SANDILE,e.TRUBBISH,e.TYMPOLE],1:[e.FRILLISH,e.VENIPEDE,e.GOLETT,e.TIMBURR,e.DARUMAKA,e.FOONGUS,e.JOLTIK,e.CUBCHOO,e.KLINK],2:[e.PAWNIARD,e.RUFFLET,e.VULLABY,e.ZORUA,e.DRILBUR,e.MIENFOO,e.DURANT,e.BOUFFALANT],3:[e.DRUDDIGON,e.HISUI_ZORUA,e.AXEW,e.DEINO]}),[U.ZINZOLIN]:new Ne(++Te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("plasma_sage","plasma",[e.CRYOGONAL]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_plasma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>dA()),[U.ROOD]:new Ne(++Te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("plasma_sage","plasma",[e.SWOOBAT]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_plasma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>dA()),[U.FLARE_GRUNT]:new Ne(++Te).setHasGenders("Flare Grunt Female").setHasDouble("Flare Grunts").setMoneyMultiplier(1).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_flare_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>dA()).setSpeciesPools({0:[e.FLETCHLING,e.LITLEO,e.PONYTA,e.INKAY,e.HOUNDOUR,e.SKORUPI,e.SCRAFTY,e.CROAGUNK,e.SCATTERBUG,e.ESPURR],1:[e.HELIOPTILE,e.ELECTRIKE,e.SKRELP,e.PANCHAM,e.PURRLOIN,e.POOCHYENA,e.BINACLE,e.CLAUNCHER,e.PUMPKABOO,e.PHANTUMP,e.FOONGUS],2:[e.LITWICK,e.SNEASEL,e.PAWNIARD,e.SLIGGOO],3:[e.NOIBAT,e.HISUI_SLIGGOO,e.HISUI_AVALUGG]}),[U.BRYONY]:new Ne(++Te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("flare_admin_female","flare",[e.LIEPARD]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_flare_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>dA()),[U.XEROSIC]:new Ne(++Te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("flare_admin","flare",[e.MALAMAR]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_flare_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>dA()),[U.AETHER_GRUNT]:new Ne(++Te).setHasGenders("Aether Grunt Female").setHasDouble("Aether Grunts").setMoneyMultiplier(1).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aether_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>dA()).setSpeciesPools({0:[e.PIKIPEK,e.ROCKRUFF,e.ALOLA_DIGLETT,e.ALOLA_EXEGGUTOR,e.YUNGOOS,e.CORSOLA,e.ALOLA_GEODUDE,e.ALOLA_RAICHU,e.BOUNSWEET,e.LILLIPUP,e.KOMALA,e.MORELULL,e.COMFEY,e.TOGEDEMARU],1:[e.POLIWAG,e.STUFFUL,e.ORANGURU,e.PASSIMIAN,e.BRUXISH,e.MINIOR,e.WISHIWASHI,e.ALOLA_SANDSHREW,e.ALOLA_VULPIX,e.CRABRAWLER,e.CUTIEFLY,e.ORICORIO,e.MUDBRAY,e.PYUKUMUKU,e.ALOLA_MAROWAK],2:[e.GALAR_CORSOLA,e.TURTONATOR,e.MIMIKYU,e.MAGNEMITE,e.DRAMPA],3:[e.JANGMO_O,e.PORYGON]}),[U.FABA]:new Ne(++Te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("aether_admin","aether",[e.HYPNO]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aether_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>dA()),[U.SKULL_GRUNT]:new Ne(++Te).setHasGenders("Skull Grunt Female").setHasDouble("Skull Grunts").setMoneyMultiplier(1).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_skull_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>dA()).setSpeciesPools({0:[e.SALANDIT,e.ALOLA_RATTATA,e.EKANS,e.ALOLA_MEOWTH,e.SCRAGGY,e.KOFFING,e.ALOLA_GRIMER,e.MAREANIE,e.SPINARAK,e.TRUBBISH,e.DROWZEE],1:[e.FOMANTIS,e.SABLEYE,e.SANDILE,e.HOUNDOUR,e.ALOLA_MAROWAK,e.GASTLY,e.PANCHAM,e.ZUBAT,e.VENIPEDE,e.VULLABY],2:[e.SANDYGAST,e.PAWNIARD,e.MIMIKYU,e.DHELMISE,e.WISHIWASHI,e.NYMBLE],3:[e.GRUBBIN,e.DEWPIDER]}),[U.PLUMERIA]:new Ne(++Te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("skull_admin","skull",[e.SALAZZLE]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_skull_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>dA()),[U.MACRO_GRUNT]:new Ne(++Te).setHasGenders("Macro Grunt Female").setHasDouble("Macro Grunts").setMoneyMultiplier(1).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_macro_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>dA()).setSpeciesPools({0:[e.CUFANT,e.GALAR_MEOWTH,e.KLINK,e.ROOKIDEE,e.CRAMORANT,e.GALAR_ZIGZAGOON,e.SKWOVET,e.STEELIX,e.MAWILE,e.FERROSEED],1:[e.DRILBUR,e.MAGNEMITE,e.HATENNA,e.ARROKUDA,e.APPLIN,e.GALAR_PONYTA,e.GALAR_YAMASK,e.SINISTEA,e.RIOLU],2:[e.FALINKS,e.BELDUM,e.GALAR_FARFETCHD,e.GALAR_MR_MIME,e.HONEDGE,e.SCIZOR,e.GALAR_DARUMAKA],3:[e.DURALUDON,e.DREEPY]}),[U.OLEANA]:new Ne(++Te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("macro_admin","macro",[e.GARBODOR]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_oleana").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>dA()),[U.STAR_GRUNT]:new Ne(++Te).setHasGenders("Star Grunt Female").setHasDouble("Star Grunts").setMoneyMultiplier(1).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>dA()).setSpeciesPools({0:[e.DUNSPARCE,e.HOUNDOUR,e.AZURILL,e.GULPIN,e.FOONGUS,e.FLETCHLING,e.LITLEO,e.FLABEBE,e.CRABRAWLER,e.NYMBLE,e.PAWMI,e.FIDOUGH,e.SQUAWKABILLY,e.MASCHIFF,e.SHROODLE,e.KLAWF,e.WIGLETT,e.PALDEA_WOOPER],1:[e.KOFFING,e.EEVEE,e.GIRAFARIG,e.RALTS,e.TORKOAL,e.SEVIPER,e.SCRAGGY,e.ZORUA,e.MIMIKYU,e.IMPIDIMP,e.FALINKS,e.CAPSAKID,e.TINKATINK,e.BOMBIRDIER,e.CYCLIZAR,e.FLAMIGO,e.PALDEA_TAUROS],2:[e.MANKEY,e.PAWNIARD,e.CHARCADET,e.FLITTLE,e.VAROOM,e.ORTHWORM],3:[e.DONDOZO,e.GIMMIGHOUL]}),[U.GIACOMO]:new Ne(++Te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("star_admin","star_1",[e.KINGAMBIT]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>dA()).setPartyMemberFunc(3,Ce([e.REVAVROOM],1,!0,E=>{E.formIndex=1,E.moveset=[new nt(t.WICKED_TORQUE),new nt(t.SPIN_OUT),new nt(t.SHIFT_GEAR),new nt(t.HIGH_HORSEPOWER)]})),[U.MELA]:new Ne(++Te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("star_admin","star_2",[e.ARMAROUGE]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>dA()).setPartyMemberFunc(3,Ce([e.REVAVROOM],1,!0,E=>{E.formIndex=2,E.moveset=[new nt(t.BLAZING_TORQUE),new nt(t.SPIN_OUT),new nt(t.SHIFT_GEAR),new nt(t.HIGH_HORSEPOWER)]})),[U.ATTICUS]:new Ne(++Te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("star_admin","star_3",[e.REVAVROOM]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>dA()).setPartyMemberFunc(3,Ce([e.REVAVROOM],1,!0,E=>{E.formIndex=3,E.moveset=[new nt(t.NOXIOUS_TORQUE),new nt(t.SPIN_OUT),new nt(t.SHIFT_GEAR),new nt(t.HIGH_HORSEPOWER)]})),[U.ORTEGA]:new Ne(++Te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("star_admin","star_4",[e.DACHSBUN]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>dA()).setPartyMemberFunc(3,Ce([e.REVAVROOM],1,!0,E=>{E.formIndex=4,E.moveset=[new nt(t.MAGICAL_TORQUE),new nt(t.SPIN_OUT),new nt(t.SHIFT_GEAR),new nt(t.HIGH_HORSEPOWER)]})),[U.ERI]:new Ne(++Te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("star_admin","star_5",[e.ANNIHILAPE]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>dA()).setPartyMemberFunc(3,Ce([e.REVAVROOM],1,!0,E=>{E.formIndex=5,E.moveset=[new nt(t.COMBAT_TORQUE),new nt(t.SPIN_OUT),new nt(t.SHIFT_GEAR),new nt(t.HIGH_HORSEPOWER)]})),[U.BROCK]:new Ne(Te=U.BROCK).initForGymLeader(ye.BROCK,!0,I.ROCK).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[U.MISTY]:new Ne(++Te).initForGymLeader(ye.MISTY,!1,I.WATER).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[U.LT_SURGE]:new Ne(++Te).initForGymLeader(ye.LT_SURGE,!0,I.ELECTRIC).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[U.ERIKA]:new Ne(++Te).initForGymLeader(ye.ERIKA,!1,I.GRASS).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[U.JANINE]:new Ne(++Te).initForGymLeader(ye.JANINE,!1,I.POISON).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[U.SABRINA]:new Ne(++Te).initForGymLeader(ye.SABRINA,!1,I.PSYCHIC).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[U.BLAINE]:new Ne(++Te).initForGymLeader(ye.BLAINE,!0,I.FIRE).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[U.GIOVANNI]:new Ne(++Te).initForGymLeader(ye.GIOVANNI,!0,I.DARK).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[U.FALKNER]:new Ne(++Te).initForGymLeader(ye.FALKNER,!0,I.FLYING).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[U.BUGSY]:new Ne(++Te).initForGymLeader(ye.BUGSY,!0,I.BUG).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[U.WHITNEY]:new Ne(++Te).initForGymLeader(ye.WHITNEY,!1,I.NORMAL).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[U.MORTY]:new Ne(++Te).initForGymLeader(ye.MORTY,!0,I.GHOST).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[U.CHUCK]:new Ne(++Te).initForGymLeader(ye.CHUCK,!0,I.FIGHTING).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[U.JASMINE]:new Ne(++Te).initForGymLeader(ye.JASMINE,!1,I.STEEL).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[U.PRYCE]:new Ne(++Te).initForGymLeader(ye.PRYCE,!0,I.ICE).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[U.CLAIR]:new Ne(++Te).initForGymLeader(ye.CLAIR,!1,I.DRAGON).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[U.ROXANNE]:new Ne(++Te).initForGymLeader(ye.ROXANNE,!1,I.ROCK).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[U.BRAWLY]:new Ne(++Te).initForGymLeader(ye.BRAWLY,!0,I.FIGHTING).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[U.WATTSON]:new Ne(++Te).initForGymLeader(ye.WATTSON,!0,I.ELECTRIC).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[U.FLANNERY]:new Ne(++Te).initForGymLeader(ye.FLANNERY,!1,I.FIRE).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[U.NORMAN]:new Ne(++Te).initForGymLeader(ye.NORMAN,!0,I.NORMAL).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[U.WINONA]:new Ne(++Te).initForGymLeader(ye.WINONA,!1,I.FLYING).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[U.TATE]:new Ne(++Te).initForGymLeader(ye.TATE,!0,I.PSYCHIC).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym").setHasDouble("tate_liza_double").setDoubleTrainerType(U.LIZA).setDoubleTitle("gym_leader_double"),[U.LIZA]:new Ne(++Te).initForGymLeader(ye.LIZA,!1,I.PSYCHIC).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym").setHasDouble("liza_tate_double").setDoubleTrainerType(U.TATE).setDoubleTitle("gym_leader_double"),[U.JUAN]:new Ne(++Te).initForGymLeader(ye.JUAN,!0,I.WATER).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[U.ROARK]:new Ne(++Te).initForGymLeader(ye.ROARK,!0,I.ROCK).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[U.GARDENIA]:new Ne(++Te).initForGymLeader(ye.GARDENIA,!1,I.GRASS).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[U.MAYLENE]:new Ne(++Te).initForGymLeader(ye.MAYLENE,!1,I.FIGHTING).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[U.CRASHER_WAKE]:new Ne(++Te).initForGymLeader(ye.CRASHER_WAKE,!0,I.WATER).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[U.FANTINA]:new Ne(++Te).initForGymLeader(ye.FANTINA,!1,I.GHOST).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[U.BYRON]:new Ne(++Te).initForGymLeader(ye.BYRON,!0,I.STEEL).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[U.CANDICE]:new Ne(++Te).initForGymLeader(ye.CANDICE,!1,I.ICE).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[U.VOLKNER]:new Ne(++Te).initForGymLeader(ye.VOLKNER,!0,I.ELECTRIC).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[U.CILAN]:new Ne(++Te).initForGymLeader(ye.CILAN,!0,I.GRASS).setMixedBattleBgm("battle_unova_gym"),[U.CHILI]:new Ne(++Te).initForGymLeader(ye.CHILI,!0,I.FIRE).setMixedBattleBgm("battle_unova_gym"),[U.CRESS]:new Ne(++Te).initForGymLeader(ye.CRESS,!0,I.WATER).setMixedBattleBgm("battle_unova_gym"),[U.CHEREN]:new Ne(++Te).initForGymLeader(ye.CHEREN,!0,I.NORMAL).setMixedBattleBgm("battle_unova_gym"),[U.LENORA]:new Ne(++Te).initForGymLeader(ye.LENORA,!1,I.NORMAL).setMixedBattleBgm("battle_unova_gym"),[U.ROXIE]:new Ne(++Te).initForGymLeader(ye.ROXIE,!1,I.POISON).setMixedBattleBgm("battle_unova_gym"),[U.BURGH]:new Ne(++Te).initForGymLeader(ye.BURGH,!0,I.BUG).setMixedBattleBgm("battle_unova_gym"),[U.ELESA]:new Ne(++Te).initForGymLeader(ye.ELESA,!1,I.ELECTRIC).setMixedBattleBgm("battle_unova_gym"),[U.CLAY]:new Ne(++Te).initForGymLeader(ye.CLAY,!0,I.GROUND).setMixedBattleBgm("battle_unova_gym"),[U.SKYLA]:new Ne(++Te).initForGymLeader(ye.SKYLA,!1,I.FLYING).setMixedBattleBgm("battle_unova_gym"),[U.BRYCEN]:new Ne(++Te).initForGymLeader(ye.BRYCEN,!0,I.ICE).setMixedBattleBgm("battle_unova_gym"),[U.DRAYDEN]:new Ne(++Te).initForGymLeader(ye.DRAYDEN,!0,I.DRAGON).setMixedBattleBgm("battle_unova_gym"),[U.MARLON]:new Ne(++Te).initForGymLeader(ye.MARLON,!0,I.WATER).setMixedBattleBgm("battle_unova_gym"),[U.VIOLA]:new Ne(++Te).initForGymLeader(ye.VIOLA,!1,I.BUG).setMixedBattleBgm("battle_kalos_gym"),[U.GRANT]:new Ne(++Te).initForGymLeader(ye.GRANT,!0,I.ROCK).setMixedBattleBgm("battle_kalos_gym"),[U.KORRINA]:new Ne(++Te).initForGymLeader(ye.KORRINA,!1,I.FIGHTING).setMixedBattleBgm("battle_kalos_gym"),[U.RAMOS]:new Ne(++Te).initForGymLeader(ye.RAMOS,!0,I.GRASS).setMixedBattleBgm("battle_kalos_gym"),[U.CLEMONT]:new Ne(++Te).initForGymLeader(ye.CLEMONT,!0,I.ELECTRIC).setMixedBattleBgm("battle_kalos_gym"),[U.VALERIE]:new Ne(++Te).initForGymLeader(ye.VALERIE,!1,I.FAIRY).setMixedBattleBgm("battle_kalos_gym"),[U.OLYMPIA]:new Ne(++Te).initForGymLeader(ye.OLYMPIA,!1,I.PSYCHIC).setMixedBattleBgm("battle_kalos_gym"),[U.WULFRIC]:new Ne(++Te).initForGymLeader(ye.WULFRIC,!0,I.ICE).setMixedBattleBgm("battle_kalos_gym"),[U.MILO]:new Ne(++Te).initForGymLeader(ye.MILO,!0,I.GRASS).setMixedBattleBgm("battle_galar_gym"),[U.NESSA]:new Ne(++Te).setName("Nessa").initForGymLeader(ye.NESSA,!1,I.WATER).setMixedBattleBgm("battle_galar_gym"),[U.KABU]:new Ne(++Te).initForGymLeader(ye.KABU,!0,I.FIRE).setMixedBattleBgm("battle_galar_gym"),[U.BEA]:new Ne(++Te).setName("Bea").initForGymLeader(ye.BEA,!1,I.FIGHTING).setMixedBattleBgm("battle_galar_gym"),[U.ALLISTER]:new Ne(++Te).setName("Allister").initForGymLeader(ye.ALLISTER,!0,I.GHOST).setMixedBattleBgm("battle_galar_gym"),[U.OPAL]:new Ne(++Te).initForGymLeader(ye.OPAL,!1,I.FAIRY).setMixedBattleBgm("battle_galar_gym"),[U.BEDE]:new Ne(++Te).initForGymLeader(ye.BEDE,!0,I.FAIRY).setMixedBattleBgm("battle_galar_gym"),[U.GORDIE]:new Ne(++Te).initForGymLeader(ye.GORDIE,!0,I.ROCK).setMixedBattleBgm("battle_galar_gym"),[U.MELONY]:new Ne(++Te).initForGymLeader(ye.MELONY,!1,I.ICE).setMixedBattleBgm("battle_galar_gym"),[U.PIERS]:new Ne(++Te).initForGymLeader(ye.PIERS,!0,I.DARK).setHasDouble("piers_marnie_double").setDoubleTrainerType(U.MARNIE).setDoubleTitle("gym_leader_double").setMixedBattleBgm("battle_galar_gym"),[U.MARNIE]:new Ne(++Te).setName("Marnie").initForGymLeader(ye.MARNIE,!1,I.DARK).setHasDouble("marnie_piers_double").setDoubleTrainerType(U.PIERS).setDoubleTitle("gym_leader_double").setMixedBattleBgm("battle_galar_gym"),[U.RAIHAN]:new Ne(++Te).setName("Raihan").initForGymLeader(ye.RAIHAN,!0,I.DRAGON).setMixedBattleBgm("battle_galar_gym"),[U.KATY]:new Ne(++Te).initForGymLeader(ye.KATY,!1,I.BUG).setMixedBattleBgm("battle_paldea_gym"),[U.BRASSIUS]:new Ne(++Te).initForGymLeader(ye.BRASSIUS,!0,I.GRASS).setMixedBattleBgm("battle_paldea_gym"),[U.IONO]:new Ne(++Te).initForGymLeader(ye.IONO,!1,I.ELECTRIC).setMixedBattleBgm("battle_paldea_gym"),[U.KOFU]:new Ne(++Te).initForGymLeader(ye.KOFU,!0,I.WATER).setMixedBattleBgm("battle_paldea_gym"),[U.LARRY]:new Ne(++Te).setName("Larry").initForGymLeader(ye.LARRY,!0,I.NORMAL).setMixedBattleBgm("battle_paldea_gym"),[U.RYME]:new Ne(++Te).initForGymLeader(ye.RYME,!1,I.GHOST).setMixedBattleBgm("battle_paldea_gym"),[U.TULIP]:new Ne(++Te).initForGymLeader(ye.TULIP,!1,I.PSYCHIC).setMixedBattleBgm("battle_paldea_gym"),[U.GRUSHA]:new Ne(++Te).initForGymLeader(ye.GRUSHA,!0,I.ICE).setMixedBattleBgm("battle_paldea_gym"),[U.LORELEI]:new Ne(Te=U.LORELEI).initForEliteFour(ye.LORELEI,!1,I.ICE).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[U.BRUNO]:new Ne(++Te).initForEliteFour(ye.BRUNO,!0,I.FIGHTING).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[U.AGATHA]:new Ne(++Te).initForEliteFour(ye.AGATHA,!1,I.GHOST).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[U.LANCE]:new Ne(++Te).setName("Lance").initForEliteFour(ye.LANCE,!0,I.DRAGON).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[U.WILL]:new Ne(++Te).initForEliteFour(ye.WILL,!0,I.PSYCHIC).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[U.KOGA]:new Ne(++Te).initForEliteFour(ye.KOGA,!0,I.POISON).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[U.KAREN]:new Ne(++Te).initForEliteFour(ye.KAREN,!1,I.DARK).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[U.SIDNEY]:new Ne(++Te).initForEliteFour(ye.SIDNEY,!0,I.DARK).setMixedBattleBgm("battle_hoenn_elite"),[U.PHOEBE]:new Ne(++Te).initForEliteFour(ye.PHOEBE,!1,I.GHOST).setMixedBattleBgm("battle_hoenn_elite"),[U.GLACIA]:new Ne(++Te).initForEliteFour(ye.GLACIA,!1,I.ICE).setMixedBattleBgm("battle_hoenn_elite"),[U.DRAKE]:new Ne(++Te).initForEliteFour(ye.DRAKE,!0,I.DRAGON).setMixedBattleBgm("battle_hoenn_elite"),[U.AARON]:new Ne(++Te).initForEliteFour(ye.AARON,!0,I.BUG).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[U.BERTHA]:new Ne(++Te).initForEliteFour(ye.BERTHA,!1,I.GROUND).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[U.FLINT]:new Ne(++Te).initForEliteFour(ye.FLINT,!0,I.FIRE).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[U.LUCIAN]:new Ne(++Te).initForEliteFour(ye.LUCIAN,!0,I.PSYCHIC).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[U.SHAUNTAL]:new Ne(++Te).initForEliteFour(ye.SHAUNTAL,!1,I.GHOST).setMixedBattleBgm("battle_unova_elite"),[U.MARSHAL]:new Ne(++Te).initForEliteFour(ye.MARSHAL,!0,I.FIGHTING).setMixedBattleBgm("battle_unova_elite"),[U.GRIMSLEY]:new Ne(++Te).initForEliteFour(ye.GRIMSLEY,!0,I.DARK).setMixedBattleBgm("battle_unova_elite"),[U.CAITLIN]:new Ne(++Te).initForEliteFour(ye.CAITLIN,!1,I.PSYCHIC).setMixedBattleBgm("battle_unova_elite"),[U.MALVA]:new Ne(++Te).initForEliteFour(ye.MALVA,!1,I.FIRE).setMixedBattleBgm("battle_kalos_elite"),[U.SIEBOLD]:new Ne(++Te).initForEliteFour(ye.SIEBOLD,!0,I.WATER).setMixedBattleBgm("battle_kalos_elite"),[U.WIKSTROM]:new Ne(++Te).initForEliteFour(ye.WIKSTROM,!0,I.STEEL).setMixedBattleBgm("battle_kalos_elite"),[U.DRASNA]:new Ne(++Te).initForEliteFour(ye.DRASNA,!1,I.DRAGON).setMixedBattleBgm("battle_kalos_elite"),[U.HALA]:new Ne(++Te).initForEliteFour(ye.HALA,!0,I.FIGHTING).setMixedBattleBgm("battle_alola_elite"),[U.MOLAYNE]:new Ne(++Te).initForEliteFour(ye.MOLAYNE,!0,I.STEEL).setMixedBattleBgm("battle_alola_elite"),[U.OLIVIA]:new Ne(++Te).initForEliteFour(ye.OLIVIA,!1,I.ROCK).setMixedBattleBgm("battle_alola_elite"),[U.ACEROLA]:new Ne(++Te).initForEliteFour(ye.ACEROLA,!1,I.GHOST).setMixedBattleBgm("battle_alola_elite"),[U.KAHILI]:new Ne(++Te).initForEliteFour(ye.KAHILI,!1,I.FLYING).setMixedBattleBgm("battle_alola_elite"),[U.MARNIE_ELITE]:new Ne(++Te).setName("Marnie").initForEliteFour(ye.MARNIE_ELITE,!1,I.DARK).setMixedBattleBgm("battle_galar_elite"),[U.NESSA_ELITE]:new Ne(++Te).setName("Nessa").initForEliteFour(ye.NESSA_ELITE,!1,I.WATER).setMixedBattleBgm("battle_galar_elite"),[U.BEA_ELITE]:new Ne(++Te).setName("Bea").initForEliteFour(ye.BEA_ELITE,!1,I.FIGHTING).setMixedBattleBgm("battle_galar_elite"),[U.ALLISTER_ELITE]:new Ne(++Te).setName("Allister").initForEliteFour(ye.ALLISTER_ELITE,!0,I.GHOST).setMixedBattleBgm("battle_galar_elite"),[U.RAIHAN_ELITE]:new Ne(++Te).setName("Raihan").initForEliteFour(ye.RAIHAN_ELITE,!0,I.DRAGON).setMixedBattleBgm("battle_galar_elite"),[U.RIKA]:new Ne(++Te).initForEliteFour(ye.RIKA,!1,I.GROUND).setMixedBattleBgm("battle_paldea_elite"),[U.POPPY]:new Ne(++Te).initForEliteFour(ye.POPPY,!1,I.STEEL).setMixedBattleBgm("battle_paldea_elite"),[U.LARRY_ELITE]:new Ne(++Te).setName("Larry").initForEliteFour(ye.LARRY_ELITE,!0,I.NORMAL,I.FLYING).setMixedBattleBgm("battle_paldea_elite"),[U.HASSEL]:new Ne(++Te).initForEliteFour(ye.HASSEL,!0,I.DRAGON).setMixedBattleBgm("battle_paldea_elite"),[U.CRISPIN]:new Ne(++Te).initForEliteFour(ye.CRISPIN,!0,I.FIRE).setMixedBattleBgm("battle_bb_elite"),[U.AMARYS]:new Ne(++Te).initForEliteFour(ye.AMARYS,!1,I.STEEL).setMixedBattleBgm("battle_bb_elite"),[U.LACEY]:new Ne(++Te).initForEliteFour(ye.LACEY,!1,I.FAIRY).setMixedBattleBgm("battle_bb_elite"),[U.DRAYTON]:new Ne(++Te).initForEliteFour(ye.DRAYTON,!0,I.DRAGON).setMixedBattleBgm("battle_bb_elite"),[U.BLUE]:new Ne(Te=U.BLUE).initForChampion(ye.BLUE,!0).setBattleBgm("battle_kanto_champion").setMixedBattleBgm("battle_kanto_champion").setHasDouble("blue_red_double").setDoubleTrainerType(U.RED).setDoubleTitle("champion_double").setPartyMemberFunc(0,Ce([e.ALAKAZAM],1,!0,E=>{E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,Ce([e.PIDGEOT],1,!0,E=>{E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName()})),[U.RED]:new Ne(++Te).initForChampion(ye.RED,!0).setBattleBgm("battle_johto_champion").setMixedBattleBgm("battle_johto_champion").setHasDouble("red_blue_double").setDoubleTrainerType(U.BLUE).setDoubleTitle("champion_double").setPartyMemberFunc(0,Ce([e.PIKACHU],1,!0,E=>{E.formIndex=8,E.generateAndPopulateMoveset(),E.generateName()})).setPartyMemberFunc(1,Ce([e.VENUSAUR,e.CHARIZARD,e.BLASTOISE],1,!0,E=>{E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName()})),[U.LANCE_CHAMPION]:new Ne(++Te).setName("Lance").initForChampion(ye.LANCE_CHAMPION,!0).setBattleBgm("battle_johto_champion").setMixedBattleBgm("battle_johto_champion").setPartyMemberFunc(0,Ce([e.AERODACTYL],1,!0,E=>{E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,Ce([e.LATIAS,e.LATIOS],1,!0,E=>{E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName()})),[U.STEVEN]:new Ne(++Te).initForChampion(ye.STEVEN,!0).setBattleBgm("battle_hoenn_champion_g5").setMixedBattleBgm("battle_hoenn_champion_g6").setHasDouble("steven_wallace_double").setDoubleTrainerType(U.WALLACE).setDoubleTitle("champion_double").setPartyMemberFunc(0,Ce([e.SKARMORY],1,!0,E=>{E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,Ce([e.METAGROSS],1,!0,E=>{E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName()})),[U.WALLACE]:new Ne(++Te).initForChampion(ye.WALLACE,!0).setBattleBgm("battle_hoenn_champion_g5").setMixedBattleBgm("battle_hoenn_champion_g6").setHasDouble("wallace_steven_double").setDoubleTrainerType(U.STEVEN).setDoubleTitle("champion_double").setPartyMemberFunc(0,Ce([e.PELIPPER],1,!0,E=>{E.abilityIndex=1,E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,Ce([e.SWAMPERT],1,!0,E=>{E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName()})),[U.CYNTHIA]:new Ne(++Te).initForChampion(ye.CYNTHIA,!1).setBattleBgm("battle_sinnoh_champion").setMixedBattleBgm("battle_sinnoh_champion").setPartyMemberFunc(0,Ce([e.SPIRITOMB],1,!0,E=>{E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,Ce([e.GARCHOMP],1,!0,E=>{E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName()})),[U.ALDER]:new Ne(++Te).initForChampion(ye.ALDER,!0).setHasDouble("alder_iris_double").setDoubleTrainerType(U.IRIS).setDoubleTitle("champion_double").setBattleBgm("battle_champion_alder").setMixedBattleBgm("battle_champion_alder").setPartyMemberFunc(0,Ce([e.BOUFFALANT,e.BRAVIARY],1,!0,E=>{E.generateAndPopulateMoveset()})),[U.IRIS]:new Ne(++Te).initForChampion(ye.IRIS,!1).setBattleBgm("battle_champion_iris").setMixedBattleBgm("battle_champion_iris").setHasDouble("iris_alder_double").setDoubleTrainerType(U.ALDER).setDoubleTitle("champion_double").setPartyMemberFunc(0,Ce([e.DRUDDIGON],1,!0,E=>{E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,Ce([e.LAPRAS],1,!0,E=>{E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName()})),[U.DIANTHA]:new Ne(++Te).initForChampion(ye.DIANTHA,!1).setMixedBattleBgm("battle_kalos_champion").setPartyMemberFunc(0,Ce([e.GOURGEIST],1,!0,E=>{E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,Ce([e.GARDEVOIR],1,!0,E=>{E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName()})),[U.HAU]:new Ne(++Te).initForChampion(ye.HAU,!0).setMixedBattleBgm("battle_alola_champion").setPartyMemberFunc(0,Ce([e.ALOLA_RAICHU],1,!0,E=>{E.generateAndPopulateMoveset()})),[U.LEON]:new Ne(++Te).initForChampion(ye.LEON,!0).setMixedBattleBgm("battle_galar_champion").setPartyMemberFunc(0,Ce([e.RILLABOOM,e.CINDERACE,e.INTELEON],1,!0,E=>{E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,Ce([e.CHARIZARD],1,!0,E=>{E.formIndex=3,E.generateAndPopulateMoveset(),E.generateName()})),[U.GEETA]:new Ne(++Te).initForChampion(ye.GEETA,!1).setMixedBattleBgm("battle_champion_geeta").setPartyMemberFunc(0,Ce([e.GLIMMORA],1,!0,E=>{E.generateAndPopulateMoveset()})),[U.NEMONA]:new Ne(++Te).initForChampion(ye.NEMONA,!1).setMixedBattleBgm("battle_champion_nemona").setPartyMemberFunc(0,Ce([e.LYCANROC],1,!0,E=>{E.formIndex=0,E.generateAndPopulateMoveset()})),[U.KIERAN]:new Ne(++Te).initForChampion(ye.KIERAN,!0).setMixedBattleBgm("battle_champion_kieran").setPartyMemberFunc(0,Ce([e.POLIWRATH,e.POLITOED],1,!0,E=>{E.generateAndPopulateMoveset()})),[U.RIVAL]:new Ne(Te=U.RIVAL).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setStaticParty().setEncounterBgm(U.RIVAL).setBattleBgm("battle_rival").setMixedBattleBgm("battle_rival").setPartyTemplates(et.RIVAL).setModifierRewardFuncs(()=>J.SUPER_EXP_CHARM,()=>J.EXP_SHARE).setEventModifierRewardFuncs(()=>J.SHINY_CHARM,()=>J.ABILITY_CHARM,()=>J.CATCHING_CHARM).setPartyMemberFunc(0,Ce([e.BULBASAUR,e.CHARMANDER,e.SQUIRTLE,e.CHIKORITA,e.CYNDAQUIL,e.TOTODILE,e.TREECKO,e.TORCHIC,e.MUDKIP,e.TURTWIG,e.CHIMCHAR,e.PIPLUP,e.SNIVY,e.TEPIG,e.OSHAWOTT,e.CHESPIN,e.FENNEKIN,e.FROAKIE,e.ROWLET,e.LITTEN,e.POPPLIO,e.GROOKEY,e.SCORBUNNY,e.SOBBLE,e.SPRIGATITO,e.FUECOCO,e.QUAXLY],1,!0,E=>E.abilityIndex=0)).setPartyMemberFunc(1,Ce([e.PIDGEY,e.HOOTHOOT,e.TAILLOW,e.STARLY,e.PIDOVE,e.FLETCHLING,e.PIKIPEK,e.ROOKIDEE,e.WATTREL],1,!0)),[U.RIVAL_2]:new Ne(++Te).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setStaticParty().setMoneyMultiplier(1.25).setEncounterBgm(U.RIVAL).setBattleBgm("battle_rival").setMixedBattleBgm("battle_rival").setPartyTemplates(et.RIVAL_2).setModifierRewardFuncs(()=>J.EXP_SHARE).setEventModifierRewardFuncs(()=>J.SHINY_CHARM).setPartyMemberFunc(0,Ce([e.IVYSAUR,e.CHARMELEON,e.WARTORTLE,e.BAYLEEF,e.QUILAVA,e.CROCONAW,e.GROVYLE,e.COMBUSKEN,e.MARSHTOMP,e.GROTLE,e.MONFERNO,e.PRINPLUP,e.SERVINE,e.PIGNITE,e.DEWOTT,e.QUILLADIN,e.BRAIXEN,e.FROGADIER,e.DARTRIX,e.TORRACAT,e.BRIONNE,e.THWACKEY,e.RABOOT,e.DRIZZILE,e.FLORAGATO,e.CROCALOR,e.QUAXWELL],1,!0,E=>E.abilityIndex=0)).setPartyMemberFunc(1,Ce([e.PIDGEOTTO,e.HOOTHOOT,e.TAILLOW,e.STARAVIA,e.TRANQUILL,e.FLETCHINDER,e.TRUMBEAK,e.CORVISQUIRE,e.WATTREL],1,!0)).setPartyMemberFunc(2,hL(E=>!bt.hasOwnProperty(E.speciesId)&&!yA.hasOwnProperty(E.speciesId)&&E.baseTotal>=450)),[U.RIVAL_3]:new Ne(++Te).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setStaticParty().setMoneyMultiplier(1.5).setEncounterBgm(U.RIVAL).setBattleBgm("battle_rival").setMixedBattleBgm("battle_rival").setPartyTemplates(et.RIVAL_3).setPartyMemberFunc(0,Ce([e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.SERPERIOR,e.EMBOAR,e.SAMUROTT,e.CHESNAUGHT,e.DELPHOX,e.GRENINJA,e.DECIDUEYE,e.INCINEROAR,e.PRIMARINA,e.RILLABOOM,e.CINDERACE,e.INTELEON,e.MEOWSCARADA,e.SKELEDIRGE,e.QUAQUAVAL],1,!0,E=>E.abilityIndex=0)).setPartyMemberFunc(1,Ce([e.PIDGEOT,e.NOCTOWL,e.SWELLOW,e.STARAPTOR,e.UNFEZANT,e.TALONFLAME,e.TOUCANNON,e.CORVIKNIGHT,e.KILOWATTREL],1,!0)).setPartyMemberFunc(2,hL(E=>!bt.hasOwnProperty(E.speciesId)&&!yA.hasOwnProperty(E.speciesId)&&E.baseTotal>=450)).setSpeciesFilter(E=>E.baseTotal>=540),[U.RIVAL_4]:new Ne(++Te).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setBoss().setStaticParty().setMoneyMultiplier(1.75).setEncounterBgm(U.RIVAL).setBattleBgm("battle_rival_2").setMixedBattleBgm("battle_rival_2").setPartyTemplates(et.RIVAL_4).setPartyMemberFunc(0,Ce([e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.SERPERIOR,e.EMBOAR,e.SAMUROTT,e.CHESNAUGHT,e.DELPHOX,e.GRENINJA,e.DECIDUEYE,e.INCINEROAR,e.PRIMARINA,e.RILLABOOM,e.CINDERACE,e.INTELEON,e.MEOWSCARADA,e.SKELEDIRGE,e.QUAQUAVAL],1,!0,E=>E.abilityIndex=0)).setPartyMemberFunc(1,Ce([e.PIDGEOT,e.NOCTOWL,e.SWELLOW,e.STARAPTOR,e.UNFEZANT,e.TALONFLAME,e.TOUCANNON,e.CORVIKNIGHT,e.KILOWATTREL],1,!0)).setPartyMemberFunc(2,hL(E=>!bt.hasOwnProperty(E.speciesId)&&!yA.hasOwnProperty(E.speciesId)&&E.baseTotal>=450)).setSpeciesFilter(E=>E.baseTotal>=540).setGenModifiersFunc(E=>{const A=E[0];return[J.TERA_SHARD().generateType([],[A.species.type1]).withIdFromFunc(J.TERA_SHARD).newModifier(A)]}),[U.RIVAL_5]:new Ne(++Te).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setBoss().setStaticParty().setMoneyMultiplier(2.25).setEncounterBgm(U.RIVAL).setBattleBgm("battle_rival_3").setMixedBattleBgm("battle_rival_3").setPartyTemplates(et.RIVAL_5).setPartyMemberFunc(0,Ce([e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.SERPERIOR,e.EMBOAR,e.SAMUROTT,e.CHESNAUGHT,e.DELPHOX,e.GRENINJA,e.DECIDUEYE,e.INCINEROAR,e.PRIMARINA,e.RILLABOOM,e.CINDERACE,e.INTELEON,e.MEOWSCARADA,e.SKELEDIRGE,e.QUAQUAVAL],1,!0,E=>{E.setBoss(!0,2),E.abilityIndex=0})).setPartyMemberFunc(1,Ce([e.PIDGEOT,e.NOCTOWL,e.SWELLOW,e.STARAPTOR,e.UNFEZANT,e.TALONFLAME,e.TOUCANNON,e.CORVIKNIGHT,e.KILOWATTREL],1,!0)).setPartyMemberFunc(2,hL(E=>!bt.hasOwnProperty(E.speciesId)&&!yA.hasOwnProperty(E.speciesId)&&E.baseTotal>=450)).setSpeciesFilter(E=>E.baseTotal>=540).setPartyMemberFunc(5,Ce([e.RAYQUAZA],1,!0,E=>{E.setBoss(!0,3),E.pokeball=be.MASTER_BALL,E.shiny=!0,E.variant=1})).setGenModifiersFunc(E=>{const A=E[0];return[J.TERA_SHARD().generateType([],[A.species.type1]).withIdFromFunc(J.TERA_SHARD).newModifier(A)]}),[U.RIVAL_6]:new Ne(++Te).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setBoss().setStaticParty().setMoneyMultiplier(3).setEncounterBgm("final").setBattleBgm("battle_rival_3").setMixedBattleBgm("battle_rival_3").setPartyTemplates(et.RIVAL_6).setPartyMemberFunc(0,Ce([e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.SERPERIOR,e.EMBOAR,e.SAMUROTT,e.CHESNAUGHT,e.DELPHOX,e.GRENINJA,e.DECIDUEYE,e.INCINEROAR,e.PRIMARINA,e.RILLABOOM,e.CINDERACE,e.INTELEON,e.MEOWSCARADA,e.SKELEDIRGE,e.QUAQUAVAL],1,!0,E=>{E.setBoss(!0,3),E.abilityIndex=0,E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,Ce([e.PIDGEOT,e.NOCTOWL,e.SWELLOW,e.STARAPTOR,e.UNFEZANT,e.TALONFLAME,e.TOUCANNON,e.CORVIKNIGHT,e.KILOWATTREL],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset()})).setPartyMemberFunc(2,hL(E=>!bt.hasOwnProperty(E.speciesId)&&!yA.hasOwnProperty(E.speciesId)&&E.baseTotal>=450)).setSpeciesFilter(E=>E.baseTotal>=540).setPartyMemberFunc(5,Ce([e.RAYQUAZA],1,!0,E=>{E.setBoss(),E.generateAndPopulateMoveset(),E.pokeball=be.MASTER_BALL,E.shiny=!0,E.variant=1,E.formIndex=1,E.generateName()})).setGenModifiersFunc(E=>{const A=E[0];return[J.TERA_SHARD().generateType([],[A.species.type1]).withIdFromFunc(J.TERA_SHARD).newModifier(A)]}),[U.ROCKET_BOSS_GIOVANNI_1]:new Ne(Te=U.ROCKET_BOSS_GIOVANNI_1).setName("Giovanni").initForEvilTeamLeader("Rocket Boss",[]).setMixedBattleBgm("battle_rocket_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.PERSIAN,e.ALOLA_PERSIAN],1,!0,E=>{E.generateAndPopulateMoveset(),E.gender=at.MALE})).setPartyMemberFunc(1,Ce([e.DUGTRIO,e.ALOLA_DUGTRIO])).setPartyMemberFunc(2,Ce([e.HONCHKROW])).setPartyMemberFunc(3,Ce([e.NIDOKING,e.NIDOQUEEN])).setPartyMemberFunc(4,Ce([e.RHYPERIOR])).setPartyMemberFunc(5,Ce([e.KANGASKHAN],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL,E.formIndex=1,E.generateName()})),[U.ROCKET_BOSS_GIOVANNI_2]:new Ne(++Te).setName("Giovanni").initForEvilTeamLeader("Rocket Boss",[],!0).setMixedBattleBgm("battle_rocket_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.TYRANITAR,e.IRON_THORNS],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL})).setPartyMemberFunc(1,Ce([e.HIPPOWDON])).setPartyMemberFunc(2,Ce([e.EXCADRILL,e.GARCHOMP])).setPartyMemberFunc(3,Ce([e.KANGASKHAN],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL,E.formIndex=1,E.generateName()})).setPartyMemberFunc(4,Ce([e.GASTRODON,e.SEISMITOAD],1,!0,E=>{E.species.speciesId===e.GASTRODON?E.abilityIndex=0:E.species.speciesId===e.SEISMITOAD&&(E.abilityIndex=2)})).setPartyMemberFunc(5,Ce([e.MEWTWO],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.MASTER_BALL})),[U.MAXIE]:new Ne(++Te).setName("Maxie").initForEvilTeamLeader("Magma Boss",[]).setMixedBattleBgm("battle_aqua_magma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.MIGHTYENA])).setPartyMemberFunc(1,Ce([e.CROBAT,e.GLISCOR])).setPartyMemberFunc(2,Ce([e.WEEZING,e.GALAR_WEEZING])).setPartyMemberFunc(3,Ce([e.MAGMORTAR,e.TORKOAL])).setPartyMemberFunc(4,Ce([e.FLYGON])).setPartyMemberFunc(5,Ce([e.CAMERUPT],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL,E.formIndex=1,E.generateName(),E.gender=at.MALE})),[U.MAXIE_2]:new Ne(++Te).setName("Maxie").initForEvilTeamLeader("Magma Boss",[],!0).setMixedBattleBgm("battle_aqua_magma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.SOLROCK,e.TYPHLOSION],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL})).setPartyMemberFunc(1,Ce([e.TORKOAL,e.NINETALES],1,!0,E=>{E.generateAndPopulateMoveset(),E.abilityIndex=2})).setPartyMemberFunc(2,Ce([e.SHIFTRY,e.SCOVILLAIN],1,!0,E=>{E.generateAndPopulateMoveset(),E.abilityIndex=0})).setPartyMemberFunc(3,Ce([e.GREAT_TUSK])).setPartyMemberFunc(4,Ce([e.CAMERUPT],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL,E.formIndex=1,E.generateName(),E.gender=at.MALE})).setPartyMemberFunc(5,Ce([e.GROUDON],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.MASTER_BALL})),[U.ARCHIE]:new Ne(++Te).setName("Archie").initForEvilTeamLeader("Aqua Boss",[]).setMixedBattleBgm("battle_aqua_magma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.LINOONE])).setPartyMemberFunc(1,Ce([e.CROBAT,e.PELIPPER])).setPartyMemberFunc(2,Ce([e.MUK,e.ALOLA_MUK])).setPartyMemberFunc(3,Ce([e.TENTACRUEL])).setPartyMemberFunc(4,Ce([e.RELICANTH,e.WAILORD])).setPartyMemberFunc(5,Ce([e.SHARPEDO],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL,E.formIndex=1,E.generateName(),E.gender=at.MALE})),[U.ARCHIE_2]:new Ne(++Te).setName("Archie").initForEvilTeamLeader("Aqua Boss",[],!0).setMixedBattleBgm("battle_aqua_magma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.EMPOLEON,e.LUDICOLO],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL})).setPartyMemberFunc(1,Ce([e.POLITOED,e.PELIPPER],1,!0,E=>{E.generateAndPopulateMoveset(),E.abilityIndex=2})).setPartyMemberFunc(2,Ce([e.BEARTIC,e.ARMALDO],1,!0,E=>{E.generateAndPopulateMoveset(),E.abilityIndex=2})).setPartyMemberFunc(3,Ce([e.OVERQWIL],1,!0,E=>{E.generateAndPopulateMoveset(),E.abilityIndex=1})).setPartyMemberFunc(4,Ce([e.SHARPEDO],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL,E.formIndex=1,E.generateName(),E.gender=at.MALE})).setPartyMemberFunc(5,Ce([e.KYOGRE],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.MASTER_BALL})),[U.CYRUS]:new Ne(++Te).setName("Cyrus").initForEvilTeamLeader("Galactic Boss",[]).setMixedBattleBgm("battle_galactic_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.GYARADOS])).setPartyMemberFunc(1,Ce([e.HONCHKROW,e.HISUI_BRAVIARY])).setPartyMemberFunc(2,Ce([e.CROBAT,e.GLISCOR])).setPartyMemberFunc(3,Ce([e.AZELF,e.UXIE,e.MESPRIT])).setPartyMemberFunc(4,Ce([e.HOUNDOOM],1,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL,E.formIndex=1,E.generateName()})).setPartyMemberFunc(5,Ce([e.WEAVILE],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL,E.gender=at.MALE})),[U.CYRUS_2]:new Ne(++Te).setName("Cyrus").initForEvilTeamLeader("Galactic Boss",[],!0).setMixedBattleBgm("battle_galactic_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.AZELF,e.UXIE,e.MESPRIT],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,Ce([e.ELECTRODE,e.HISUI_ELECTRODE])).setPartyMemberFunc(2,Ce([e.SALAMENCE,e.ROARING_MOON])).setPartyMemberFunc(3,Ce([e.HOUNDOOM],1,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL,E.formIndex=1,E.generateName()})).setPartyMemberFunc(4,Ce([e.WEAVILE,e.SNEASLER],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL,E.gender=at.MALE})).setPartyMemberFunc(5,Ce([e.DARKRAI],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.MASTER_BALL})),[U.GHETSIS]:new Ne(++Te).setName("Ghetsis").initForEvilTeamLeader("Plasma Boss",[]).setMixedBattleBgm("battle_plasma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.COFAGRIGUS,e.RUNERIGUS])).setPartyMemberFunc(1,Ce([e.BOUFFALANT])).setPartyMemberFunc(2,Ce([e.SEISMITOAD,e.CARRACOSTA])).setPartyMemberFunc(3,Ce([e.EELEKTROSS,e.GALVANTULA])).setPartyMemberFunc(4,Ce([e.VOLCARONA])).setPartyMemberFunc(5,Ce([e.HYDREIGON],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL,E.gender=at.MALE})),[U.GHETSIS_2]:new Ne(++Te).setName("Ghetsis").initForEvilTeamLeader("Plasma Boss",[],!0).setMixedBattleBgm("battle_plasma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.GENESECT],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL,E.formIndex=ce(4,1)})).setPartyMemberFunc(1,Ce([e.BASCULEGION,e.JELLICENT],1,!0,E=>{E.generateAndPopulateMoveset(),E.gender=at.MALE,E.formIndex=0})).setPartyMemberFunc(2,Ce([e.KINGAMBIT])).setPartyMemberFunc(3,Ce([e.VOLCARONA,e.SLITHER_WING])).setPartyMemberFunc(4,Ce([e.HYDREIGON,e.IRON_JUGULIS],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL,E.species.speciesId===e.HYDREIGON?E.gender=at.MALE:E.species.speciesId===e.IRON_JUGULIS&&(E.gender=at.GENDERLESS)})).setPartyMemberFunc(5,Ce([e.KYUREM],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.MASTER_BALL})),[U.LYSANDRE]:new Ne(++Te).setName("Lysandre").initForEvilTeamLeader("Flare Boss",[]).setMixedBattleBgm("battle_flare_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.MIENSHAO])).setPartyMemberFunc(1,Ce([e.HONCHKROW,e.TALONFLAME])).setPartyMemberFunc(2,Ce([e.PYROAR],1,!0,E=>{E.generateAndPopulateMoveset(),E.gender=at.MALE})).setPartyMemberFunc(3,Ce([e.CLAWITZER,e.DRAGALGE])).setPartyMemberFunc(4,Ce([e.HELIOLISK,e.MALAMAR])).setPartyMemberFunc(5,Ce([e.GYARADOS],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL,E.formIndex=1,E.generateName(),E.gender=at.MALE})),[U.LYSANDRE_2]:new Ne(++Te).setName("Lysandre").initForEvilTeamLeader("Flare Boss",[],!0).setMixedBattleBgm("battle_flare_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.SCREAM_TAIL,e.FLUTTER_MANE],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL})).setPartyMemberFunc(1,Ce([e.PYROAR],1,!0,E=>{E.generateAndPopulateMoveset(),E.gender=at.MALE})).setPartyMemberFunc(2,Ce([e.IRON_MOTH])).setPartyMemberFunc(3,Ce([e.GOODRA,e.HISUI_GOODRA])).setPartyMemberFunc(4,Ce([e.GYARADOS],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL,E.formIndex=1,E.generateName(),E.gender=at.MALE})).setPartyMemberFunc(5,Ce([e.YVELTAL],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.MASTER_BALL})),[U.LUSAMINE]:new Ne(++Te).setName("Lusamine").initForEvilTeamLeader("Aether Boss",[]).setMixedBattleBgm("battle_aether_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.CLEFABLE],1,!0,E=>{E.generateAndPopulateMoveset(),E.gender=at.FEMALE})).setPartyMemberFunc(1,Ce([e.LILLIGANT,e.HISUI_LILLIGANT])).setPartyMemberFunc(2,Ce([e.MILOTIC,e.PRIMARINA])).setPartyMemberFunc(3,Ce([e.GALAR_SLOWBRO,e.GALAR_SLOWKING])).setPartyMemberFunc(4,Ce([e.BEWEAR])).setPartyMemberFunc(5,Ce([e.NIHILEGO],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ROGUE_BALL})),[U.LUSAMINE_2]:new Ne(++Te).setName("Lusamine").initForEvilTeamLeader("Aether Boss",[],!0).setMixedBattleBgm("battle_aether_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.NIHILEGO],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ROGUE_BALL})).setPartyMemberFunc(1,Ce([e.MILOTIC,e.PRIMARINA])).setPartyMemberFunc(2,Ce([e.CLEFABLE],1,!0,E=>{E.generateAndPopulateMoveset(),E.gender=at.FEMALE})).setPartyMemberFunc(3,Ce([e.STAKATAKA,e.CELESTEELA,e.GUZZLORD],1,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=be.ROGUE_BALL})).setPartyMemberFunc(4,Ce([e.PHEROMOSA],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ROGUE_BALL})).setPartyMemberFunc(5,Ce([e.NECROZMA],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.MASTER_BALL})),[U.GUZMA]:new Ne(++Te).setName("Guzma").initForEvilTeamLeader("Skull Boss",[]).setMixedBattleBgm("battle_skull_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.LOKIX,e.YANMEGA],1,!0,E=>{E.species.speciesId===e.LOKIX?E.abilityIndex=2:E.species.speciesId===e.YANMEGA&&(E.abilityIndex=1)})).setPartyMemberFunc(1,Ce([e.HERACROSS])).setPartyMemberFunc(2,Ce([e.SCIZOR,e.KLEAVOR],1,!0,E=>{E.species.speciesId===e.SCIZOR?E.abilityIndex=1:E.species.speciesId===e.KLEAVOR&&(E.abilityIndex=2)})).setPartyMemberFunc(3,Ce([e.GALVANTULA,e.VIKAVOLT])).setPartyMemberFunc(4,Ce([e.PINSIR],1,!0,E=>{E.generateAndPopulateMoveset(),E.formIndex=1,E.pokeball=be.ULTRA_BALL,E.generateName()})).setPartyMemberFunc(5,Ce([e.GOLISOPOD],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.gender=at.MALE,E.pokeball=be.ULTRA_BALL})),[U.GUZMA_2]:new Ne(++Te).setName("Guzma").initForEvilTeamLeader("Skull Boss",[],!0).setMixedBattleBgm("battle_skull_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.GOLISOPOD],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.abilityIndex=2,E.gender=at.MALE,E.pokeball=be.ULTRA_BALL})).setPartyMemberFunc(1,Ce([e.SCIZOR,e.KLEAVOR],1,!0,E=>{E.species.speciesId===e.SCIZOR?E.abilityIndex=1:E.species.speciesId===e.KLEAVOR&&(E.abilityIndex=2)})).setPartyMemberFunc(2,Ce([e.HISUI_SAMUROTT,e.CRAWDAUNT],1,!0,E=>{E.abilityIndex=2})).setPartyMemberFunc(3,Ce([e.BUZZWOLE],1,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=be.ROGUE_BALL})).setPartyMemberFunc(4,Ce([e.XURKITREE],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ROGUE_BALL})).setPartyMemberFunc(5,Ce([e.PINSIR],1,!0,E=>{E.setBoss(!0,2),E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName(),E.pokeball=be.ULTRA_BALL})),[U.ROSE]:new Ne(++Te).setName("Rose").initForEvilTeamLeader("Macro Boss",[]).setMixedBattleBgm("battle_macro_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.ARCHALUDON])).setPartyMemberFunc(1,Ce([e.FERROTHORN,e.ESCAVALIER])).setPartyMemberFunc(2,Ce([e.SIRFETCHD,e.MR_RIME])).setPartyMemberFunc(3,Ce([e.CORVIKNIGHT])).setPartyMemberFunc(4,Ce([e.PERRSERKER,e.KLINKLANG])).setPartyMemberFunc(5,Ce([e.COPPERAJAH],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.formIndex=1,E.generateName(),E.pokeball=be.ULTRA_BALL,E.gender=at.FEMALE})),[U.ROSE_2]:new Ne(++Te).setName("Rose").initForEvilTeamLeader("Macro Boss",[],!0).setMixedBattleBgm("battle_macro_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.ARCHALUDON],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,Ce([e.AEGISLASH,e.GHOLDENGO])).setPartyMemberFunc(2,Ce([e.DRACOVISH,e.DRACOZOLT],1,!0,E=>{E.generateAndPopulateMoveset(),E.abilityIndex=1})).setPartyMemberFunc(3,Ce([e.MELMETAL])).setPartyMemberFunc(4,Ce([e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL})).setPartyMemberFunc(5,Ce([e.COPPERAJAH],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.formIndex=1,E.generateName(),E.pokeball=be.ULTRA_BALL,E.gender=at.FEMALE})),[U.PENNY]:new Ne(++Te).setName("Cassiopeia").initForEvilTeamLeader("Star Boss",[]).setMixedBattleBgm("battle_star_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.VAPOREON,e.JOLTEON,e.FLAREON])).setPartyMemberFunc(1,Ce([e.ESPEON,e.UMBREON],1,!0,E=>{E.abilityIndex=2,E.generateAndPopulateMoveset()})).setPartyMemberFunc(2,Ce([e.LEAFEON,e.GLACEON])).setPartyMemberFunc(3,Ce([e.ROTOM],1,!0,E=>{E.generateAndPopulateMoveset(),E.formIndex=ce(5,1)})).setPartyMemberFunc(4,Ce([e.SYLVEON],1,!0,E=>{E.abilityIndex=2,E.generateAndPopulateMoveset(),E.gender=at.FEMALE})).setPartyMemberFunc(5,Ce([e.EEVEE],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.formIndex=2,E.pokeball=be.ULTRA_BALL,E.generateName()})).setGenModifiersFunc(E=>{const A=E[4];return[J.TERA_SHARD().generateType([],[A.species.type1]).withIdFromFunc(J.TERA_SHARD).newModifier(A)]}),[U.PENNY_2]:new Ne(++Te).setName("Cassiopeia").initForEvilTeamLeader("Star Boss",[],!0).setMixedBattleBgm("battle_star_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.SYLVEON],1,!0,E=>{E.setBoss(!0,2),E.abilityIndex=2,E.generateAndPopulateMoveset(),E.gender=at.FEMALE})).setPartyMemberFunc(1,Ce([e.ENTEI,e.RAIKOU,e.SUICUNE],1,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL})).setPartyMemberFunc(2,Ce([e.WALKING_WAKE,e.GOUGING_FIRE,e.RAGING_BOLT])).setPartyMemberFunc(3,Ce([e.REVAVROOM],1,!0,E=>{E.formIndex=ce(5,1),E.generateAndPopulateMoveset(),E.pokeball=be.ROGUE_BALL})).setPartyMemberFunc(4,Ce([e.EEVEE],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.formIndex=2,E.generateName(),E.pokeball=be.ULTRA_BALL})).setPartyMemberFunc(5,Ce([e.ZAMAZENTA],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.MASTER_BALL})).setGenModifiersFunc(E=>{const A=E[0];return[J.TERA_SHARD().generateType([],[A.species.type1]).withIdFromFunc(J.TERA_SHARD).newModifier(A)]}),[U.BUCK]:new Ne(++Te).setName("Buck").initForStatTrainer([],!0).setPartyMemberFunc(0,Ce([e.CLAYDOL],1,!0,E=>{E.setBoss(!0,3),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL})).setPartyMemberFunc(1,Ce([e.VENUSAUR,e.COALOSSAL],1,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=be.GREAT_BALL,E.species.speciesId===e.VENUSAUR?(E.formIndex=2,E.abilityIndex=2):E.formIndex=1,E.generateName()})).setPartyMemberFunc(2,Ce([e.AGGRON],1,!0,E=>{E.generateAndPopulateMoveset(),E.formIndex=1,E.generateName()})).setPartyMemberFunc(3,Ce([e.TORKOAL],1,!0,E=>{E.generateAndPopulateMoveset(),E.abilityIndex=1})).setPartyMemberFunc(4,Ce([e.GREAT_TUSK],1,!0)).setPartyMemberFunc(5,Ce([e.HEATRAN],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.MASTER_BALL})),[U.CHERYL]:new Ne(++Te).setName("Cheryl").initForStatTrainer([],!1).setPartyMemberFunc(0,Ce([e.BLISSEY],1,!0,E=>{E.setBoss(!0,3),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL})).setPartyMemberFunc(1,Ce([e.SNORLAX,e.LAPRAS],1,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=be.GREAT_BALL,E.formIndex=1,E.generateName()})).setPartyMemberFunc(2,Ce([e.AUDINO],1,!0,E=>{E.generateAndPopulateMoveset(),E.formIndex=1,E.generateName()})).setPartyMemberFunc(3,Ce([e.GOODRA],1,!0)).setPartyMemberFunc(4,Ce([e.IRON_HANDS],1,!0)).setPartyMemberFunc(5,Ce([e.CRESSELIA,e.ENAMORUS],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.species.speciesId===e.ENAMORUS&&(E.formIndex=1,E.generateName()),E.pokeball=be.MASTER_BALL})),[U.MARLEY]:new Ne(++Te).setName("Marley").initForStatTrainer([],!1).setPartyMemberFunc(0,Ce([e.ARCANINE],1,!0,E=>{E.setBoss(!0,3),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL})).setPartyMemberFunc(1,Ce([e.CINDERACE,e.INTELEON],1,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=be.GREAT_BALL,E.formIndex=1,E.generateName()})).setPartyMemberFunc(2,Ce([e.AERODACTYL],1,!0,E=>{E.generateAndPopulateMoveset(),E.formIndex=1,E.generateName()})).setPartyMemberFunc(3,Ce([e.DRAGAPULT],1,!0)).setPartyMemberFunc(4,Ce([e.IRON_BUNDLE],1,!0)).setPartyMemberFunc(5,Ce([e.REGIELEKI],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.MASTER_BALL})),[U.MIRA]:new Ne(++Te).setName("Mira").initForStatTrainer([],!1).setPartyMemberFunc(0,Ce([e.ALAKAZAM],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.formIndex=1,E.pokeball=be.ULTRA_BALL,E.generateName()})).setPartyMemberFunc(1,Ce([e.GENGAR,e.HATTERENE],1,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=be.GREAT_BALL,E.formIndex=E.species.speciesId===e.GENGAR?2:1,E.generateName()})).setPartyMemberFunc(2,Ce([e.FLUTTER_MANE],1,!0)).setPartyMemberFunc(3,Ce([e.HYDREIGON],1,!0)).setPartyMemberFunc(4,Ce([e.MAGNEZONE],1,!0)).setPartyMemberFunc(5,Ce([e.LATIOS,e.LATIAS],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.MASTER_BALL})),[U.RILEY]:new Ne(++Te).setName("Riley").initForStatTrainer([],!0).setPartyMemberFunc(0,Ce([e.LUCARIO],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.formIndex=1,E.pokeball=be.ULTRA_BALL,E.generateName()})).setPartyMemberFunc(1,Ce([e.RILLABOOM,e.CENTISKORCH],1,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=be.GREAT_BALL,E.formIndex=1,E.generateName()})).setPartyMemberFunc(2,Ce([e.TYRANITAR],1,!0)).setPartyMemberFunc(3,Ce([e.ROARING_MOON],1,!0)).setPartyMemberFunc(4,Ce([e.URSALUNA],1,!0)).setPartyMemberFunc(5,Ce([e.REGIGIGAS,e.LANDORUS],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.species.speciesId===e.LANDORUS&&(E.formIndex=1,E.generateName()),E.pokeball=be.MASTER_BALL})),[U.VICTOR]:new Ne(++Te).setTitle("The Winstrates").setLocalizedName("Victor").setMoneyMultiplier(1).setPartyTemplates(et.ONE_AVG_ONE_STRONG),[U.VICTORIA]:new Ne(++Te).setTitle("The Winstrates").setLocalizedName("Victoria").setMoneyMultiplier(1).setPartyTemplates(et.ONE_AVG_ONE_STRONG),[U.VIVI]:new Ne(++Te).setTitle("The Winstrates").setLocalizedName("Vivi").setMoneyMultiplier(1).setPartyTemplates(et.TWO_AVG_ONE_STRONG),[U.VICKY]:new Ne(++Te).setTitle("The Winstrates").setLocalizedName("Vicky").setMoneyMultiplier(1).setPartyTemplates(et.ONE_AVG),[U.VITO]:new Ne(++Te).setTitle("The Winstrates").setLocalizedName("Vito").setMoneyMultiplier(2).setPartyTemplates(new bA(new ze(3,Ve.AVERAGE),new ze(2,Ve.STRONG))),[U.BUG_TYPE_SUPERFAN]:new Ne(++Te).setMoneyMultiplier(2.25).setEncounterBgm(U.ACE_TRAINER).setPartyTemplates(new ze(2,Ve.AVERAGE)),[U.EXPERT_POKEMON_BREEDER]:new Ne(++Te).setMoneyMultiplier(3).setEncounterBgm(U.ACE_TRAINER).setLocalizedName("Expert Pokemon Breeder").setPartyTemplates(new ze(3,Ve.AVERAGE)),[U.FUTURE_SELF_M]:new Ne(++Te).setMoneyMultiplier(0).setEncounterBgm("mystery_encounter_weird_dream").setBattleBgm("mystery_encounter_weird_dream").setMixedBattleBgm("mystery_encounter_weird_dream").setVictoryBgm("mystery_encounter_weird_dream").setLocalizedName("Future Self M").setPartyTemplates(new ze(6,Ve.STRONG)),[U.FUTURE_SELF_F]:new Ne(++Te).setMoneyMultiplier(0).setEncounterBgm("mystery_encounter_weird_dream").setBattleBgm("mystery_encounter_weird_dream").setMixedBattleBgm("mystery_encounter_weird_dream").setVictoryBgm("mystery_encounter_weird_dream").setLocalizedName("Future Self F").setPartyTemplates(new ze(6,Ve.STRONG))};var OA=(E=>(E[E.DEFAULT=0]="DEFAULT",E[E.FEMALE=1]="FEMALE",E[E.DOUBLE=2]="DOUBLE",E))(OA||{});const ZF=class ZF extends Phaser.GameObjects.Container{constructor(A,s,R,a,i,r){if(super(n,-72,80),this.config=QA.hasOwnProperty(A)?QA[A]:QA[U.ACE_TRAINER],r&&(this.config=r),this.variant=s,this.partyTemplateIndex=Math.min(R!==void 0?R:h7(this.config.partyTemplates.map((C,M)=>M)),this.config.partyTemplates.length-1),kL.hasOwnProperty(A)){const C=kL[A];this.name=a||IE(Array.isArray(C[0])?C[s===1?1:0]:C),s===2&&(this.config.doubleOnly?i?this.partnerName=i:[this.name,this.partnerName]=this.name.split(" & "):this.partnerName=i||IE(Array.isArray(C[0])?C[1]:C))}switch(this.variant){case 1:this.config.hasGenders||(s=0);break;case 2:this.config.hasDouble||(s=0);break}console.log(Object.keys(et)[Object.values(et).indexOf(this.getPartyTemplate())]);const L=N((C,M)=>{const D=n.addFieldSprite(0,0,this.config.getSpriteKey(s===1||M,this.isDouble()));return D.setOrigin(.5,1),D.setPipeline(n.spritePipeline,{tone:[0,0,0,0],hasShadow:!!C}),D},"getSprite"),o=L(!0),l=L();if(l.setVisible(!1),this.add(o),this.add(l),s===2&&!this.config.doubleOnly){const C=L(!0,!0),M=L(!1,!0);M.setVisible(!1),o.x=-4,l.x=-4,C.x=28,M.x=28,this.add(C),this.add(M)}}getKey(A){return this.config.getSpriteKey(this.variant===1||A,this.isDouble())}getName(A=lt.NONE,s=!1){let R=this.config.getTitle(A,this.variant),a=s&&this.config.title?this.config.title:null;const i=["grunt"];return this.name===""&&i.some(r=>R.toLocaleLowerCase().includes(r))?(a=u.t(`trainerClasses:${R.toLowerCase().replace(/\s/g,"_")}`),console.log("Localized grunt name: "+a),a):(this.name&&(s&&(bR()||kR(),a=u.t(`trainerClasses:${R.toLowerCase().replace(/\s/g,"_")}`)),A?R=A===lt.TRAINER?this.name:this.partnerName||this.name:(R=this.name,this.partnerName&&(R=`${R} & ${this.partnerName}`))),this.config.titleDouble&&this.variant===2&&!this.config.doubleOnly&&(a=this.config.titleDouble,R=u.t(`trainerNames:${this.config.nameDouble.toLowerCase().replace(/\s/g,"_")}`)),console.log(a?`${a} ${R}`:R),a?`${a} ${R}`:R)}isDouble(){return this.config.doubleOnly||this.variant===2}getMixedBattleBgm(){return this.config.mixedBattleBgm}getBattleBgm(){return this.config.battleBgm}getEncounterBgm(){return this.variant?(this.variant===2?this.config.doubleEncounterBgm:this.config.femaleEncounterBgm)||this.config.encounterBgm:this.config.encounterBgm}getEncounterMessages(){return this.variant?(this.variant===2?this.config.doubleEncounterMessages:this.config.femaleEncounterMessages)||this.config.encounterMessages:this.config.encounterMessages}getVictoryMessages(){return this.variant?(this.variant===2?this.config.doubleVictoryMessages:this.config.femaleVictoryMessages)||this.config.victoryMessages:this.config.victoryMessages}getDefeatMessages(){return this.variant?(this.variant===2?this.config.doubleDefeatMessages:this.config.femaleDefeatMessages)||this.config.defeatMessages:this.config.defeatMessages}getPartyTemplate(){return this.config.partyTemplateFunc?this.config.partyTemplateFunc():this.config.partyTemplates[this.partyTemplateIndex]}getPartyLevels(A){const s=[],R=this.getPartyTemplate(),a=n.gameMode.getWaveForDifficulty(A),i=1+a/2+Math.pow(a/25,2);this.isDouble()&&R.size<2&&(R.size=2);for(let r=0;r<R.size;r++){let L=1;const o=R.getStrength(r);switch(o){case Ve.WEAKER:L=.95;break;case Ve.WEAK:L=1;break;case Ve.AVERAGE:L=1.1;break;case Ve.STRONG:L=1.2;break;case Ve.STRONGER:L=1.25;break}let l=0;o<Ve.STRONG&&(L=Math.min(L+.025*Math.floor(a/25),1.2),l=-Math.floor(a/50*(Ve.STRONG-o)));const C=Math.ceil(i*L)+l;s.push(C)}return s}genPartyMember(A){var i;const s=n.currentBattle,R=(i=s.enemyLevels)==null?void 0:i[A];let a;return n.executeWithSeedOffset(()=>{const r=this.getPartyTemplate(),L=r.getStrength(A);if(!(this.config.trainerTypeDouble&&this.isDouble()&&!this.config.doubleOnly)){if(this.config.partyMemberFuncs.hasOwnProperty(A)){a=this.config.partyMemberFuncs[A](R,L);return}if(this.config.partyMemberFuncs.hasOwnProperty(A-r.size)){a=this.config.partyMemberFuncs[A-r.size](R,r.getStrength(A));return}}let o=0;if(r instanceof bA)for(const D of r.templates){if(o+D.size>A)break;o+=D.size}let l=[],C=!1;if(this.config.trainerTypeDouble&&this.isDouble()&&!this.config.doubleOnly){C=!0;const D=ye[U[this.config.trainerTypeDouble]],_=ye[U[this.config.trainerType]],P=s.enemyParty.map(d=>d.species.speciesId),h=_.filter(d=>Array.isArray(d)?!d.some(f=>P.includes(f)):!P.includes(d)).flat(),H=D.filter(d=>Array.isArray(d)?!d.some(f=>P.includes(f)):!P.includes(d)).flat();A%2?A===1&&U[this.config.trainerTypeDouble]===U[U.TATE]?l=[e.SOLROCK]:A===1&&U[this.config.trainerTypeDouble]===U[U.LIZA]?l=[e.LUNATONE]:l=H:A===0&&U[this.config.trainerType]===U[U.TATE]?l=[e.SOLROCK]:A===0&&U[this.config.trainerType]===U[U.LIZA]?l=[e.LUNATONE]:l=h,l.length===0&&(C=!1)}let M=C?ke(l[Math.floor(ce(l.length))]):r.isSameSpecies(A)&&A>o?ke(s.enemyParty[o].species.getTrainerSpeciesForLevel(R,!1,r.getStrength(o),n.currentBattle.waveIndex)):this.genNewPartyMemberSpecies(R,L);l&&(M=ke(M.getSpeciesForLevel(R,!0,!0,L,n.currentBattle.waveIndex))),a=n.addEnemyPokemon(M,R,!this.isDouble()||!(A%2)?lt.TRAINER:lt.TRAINER_PARTNER)},this.config.hasStaticParty?this.config.getDerivedType()+(A+1<<8):n.currentBattle.waveIndex+(this.config.getDerivedType()<<10)+((this.config.useSameSeedForAllMembers?0:A)+1<<8)),a}genNewPartyMemberSpecies(A,s,R){const a=n.currentBattle,i=this.getPartyTemplate();let r;if(this.config.speciesPools){const l=ce(512);let C=l>=156?gn.COMMON:l>=32?gn.UNCOMMON:l>=6?gn.RARE:l>=1?gn.SUPER_RARE:gn.ULTRA_RARE;for(console.log(gn[C]);!this.config.speciesPools.hasOwnProperty(C)||!this.config.speciesPools[C].length;)console.log(`Downgraded trainer Pokemon rarity tier from ${gn[C]} to ${gn[C-1]}`),C--;const M=this.config.speciesPools[C];r=ke(IE(M))}else r=n.randomSpecies(a.waveIndex,A,!1,this.config.speciesFilter);let L=ke(r.getTrainerSpeciesForLevel(A,!0,s,n.currentBattle.waveIndex)),o=!1;if(console.log(L.getName()),yA.hasOwnProperty(r.speciesId)&&L.speciesId!==r.speciesId)o=!0;else if(i.isBalanced(a.enemyParty.length)){const l=a.enemyParty.map(C=>C.getTypes(!0)).flat();(l.indexOf(L.type1)>-1||L.type2!==null&&l.indexOf(L.type2)>-1)&&(o=!0)}if(!o&&this.config.specialtyTypes.length&&!this.config.specialtyTypes.find(l=>L.isOfType(l))){o=!0,console.log("Attempting reroll of species evolution to fit specialty type...");let l=0;for(;o&&l++<10;)L=ke(r.getTrainerSpeciesForLevel(A,!0,s,n.currentBattle.waveIndex)),console.log(L.name),this.config.specialtyTypes.find(C=>L.isOfType(C))&&(o=!1)}return this.checkDuplicateSpecies(r.speciesId)&&(console.log("Duplicate species detected, prompting reroll..."),o=!0),o&&(R??0)<10&&(console.log("Rerolling party member..."),L=this.genNewPartyMemberSpecies(A,s,(R??0)+1)),L}checkDuplicateSpecies(A){const s=(ye[U[this.config.trainerType]]??[]).flat(1).map(a=>{let i=a;for(;yA.hasOwnProperty(i);)i=yA[i];return i});return n.getEnemyParty().map(a=>a.species.getRootSpeciesId()).includes(A)||s.includes(A)}getPartyMemberMatchupScores(A=lt.NONE,s=!1){A&&!this.isDouble()&&(A=lt.NONE);const R=n.getEnemyParty();return R.slice(n.currentBattle.getBattlerCount()).filter(r=>r.isAllowedInBattle()).filter(r=>!A||r.trainerSlot===A).map(r=>{const L=n.getPlayerField().filter(l=>l.isAllowedInBattle());let o=0;if(L.length>0){for(const l of L)o+=r.getMatchupScore(l),l.species.legendary&&(o/=2);o/=L.length,s&&!r.isOnField()&&n.arena.findTagsOnSide(l=>l instanceof nO,St.ENEMY).map(l=>o*=l.getMatchupScoreMultiplier(r))}return[R.indexOf(r),o]})}getSortedPartyMemberMatchupScores(A=this.getPartyMemberMatchupScores()){const s=A.slice(0);return s.sort((R,a)=>{const i=R[1],r=a[1];return i<r?1:i>r?-1:0}),s}getNextSummonIndex(A=lt.NONE,s=this.getPartyMemberMatchupScores(A)){A&&!this.isDouble()&&(A=lt.NONE);const R=this.getSortedPartyMemberMatchupScores(s),a=s.filter(i=>i[1]===R[0][1]).map(i=>i[0]);if(a.length>1){let i;return n.executeWithSeedOffset(()=>i=ce(a.length),n.currentBattle.turn<<2),a[i]}return a[0]}getPartyMemberModifierChanceMultiplier(A){switch(this.getPartyTemplate().getStrength(A)){case Ve.WEAKER:return .75;case Ve.WEAK:return .675;case Ve.AVERAGE:return .5625;case Ve.STRONG:return .45;case Ve.STRONGER:return .375;default:return console.warn("getPartyMemberModifierChanceMultiplier not defined. Using default 0"),0}}genModifiers(A){return this.config.genModifiersFunc?this.config.genModifiersFunc(A):[]}loadAssets(){return this.config.loadAssets(this.variant)}initSprite(){this.getSprites().map((A,s)=>A.setTexture(this.getKey(!!s)).setFrame(0)),this.getTintSprites().map((A,s)=>A.setTexture(this.getKey(!!s)).setFrame(0))}tryPlaySprite(A,s,R){return A.texture.key==="__MISSING"?(console.error(`No texture found for '${R.key}'!`),!1):A.texture.frameTotal<=1?(console.warn(`No animation found for '${R.key}'. Is this intentional?`),!1):(A.play(R),s.play(R),!0)}playAnim(){const A={key:this.getKey(),repeat:0,startFrame:0},s=this.getSprites(),R=this.getTintSprites();if(this.tryPlaySprite(s[0],R[0],A),this.variant===2&&!this.config.doubleOnly){const a={key:this.getKey(!0),repeat:0,startFrame:0};this.tryPlaySprite(s[1],R[1],a)}}getSprites(){const A=[this.getAt(0)];return this.variant===2&&!this.config.doubleOnly&&A.push(this.getAt(2)),A}getTintSprites(){const A=[this.getAt(1)];return this.variant===2&&!this.config.doubleOnly&&A.push(this.getAt(3)),A}tint(A,s,R,a){this.getTintSprites().map(r=>{r.setTintFill(A),r.setVisible(!0),R?(r.setAlpha(0),n.tweens.add({targets:r,alpha:s||1,duration:R,ease:a||"Linear"})):r.setAlpha(s)})}untint(A,s){this.getTintSprites().map(a=>{A?n.tweens.add({targets:a,alpha:0,duration:A,ease:s||"Linear",onComplete:N(()=>{a.setVisible(!1),a.setAlpha(1)},"onComplete")}):(a.setVisible(!1),a.setAlpha(1))})}};N(ZF,"Trainer");let Gs=ZF;var zA=(E=>(E[E.TOWN_YOUNGSTER=5]="TOWN_YOUNGSTER",E[E.RIVAL_1=8]="RIVAL_1",E[E.RIVAL_2=25]="RIVAL_2",E[E.EVIL_GRUNT_1=35]="EVIL_GRUNT_1",E[E.RIVAL_3=55]="RIVAL_3",E[E.EVIL_GRUNT_2=62]="EVIL_GRUNT_2",E[E.EVIL_GRUNT_3=64]="EVIL_GRUNT_3",E[E.EVIL_ADMIN_1=66]="EVIL_ADMIN_1",E[E.RIVAL_4=95]="RIVAL_4",E[E.EVIL_GRUNT_4=112]="EVIL_GRUNT_4",E[E.EVIL_ADMIN_2=114]="EVIL_ADMIN_2",E[E.EVIL_BOSS_1=115]="EVIL_BOSS_1",E[E.RIVAL_5=145]="RIVAL_5",E[E.EVIL_BOSS_2=165]="EVIL_BOSS_2",E[E.ELITE_FOUR_1=182]="ELITE_FOUR_1",E[E.ELITE_FOUR_2=184]="ELITE_FOUR_2",E[E.ELITE_FOUR_3=186]="ELITE_FOUR_3",E[E.ELITE_FOUR_4=188]="ELITE_FOUR_4",E[E.CHAMPION=190]="CHAMPION",E[E.RIVAL_6=195]="RIVAL_6",E))(zA||{}),Ut=(E=>(E[E.WILD=0]="WILD",E[E.TRAINER=1]="TRAINER",E[E.CLEAR=2]="CLEAR",E[E.MYSTERY_ENCOUNTER=3]="MYSTERY_ENCOUNTER",E))(Ut||{}),gt=(E=>(E[E.ATTACKER=-1]="ATTACKER",E[E.PLAYER=0]="PLAYER",E[E.PLAYER_2=1]="PLAYER_2",E[E.ENEMY=2]="ENEMY",E[E.ENEMY_2=3]="ENEMY_2",E))(gt||{});const XF=class XF{constructor(A,s,R,a,i){this.enemyParty=[],this.seenEnemyPartyMemberIds=new Set,this.started=!1,this.enemySwitchCounter=0,this.turn=0,this.playerParticipantIds=new Set,this.battleScore=0,this.postBattleLoot=[],this.escapeAttempts=0,this.battleSeed=PM(16,!0),this.battleSeedState=null,this.moneyScattered=0,this.lastUsedPokeball=null,this.playerFaints=0,this.enemyFaints=0,this.playerFaintsHistory=[],this.enemyFaintsHistory=[],this.rngCounter=0,this.gameMode=A,this.waveIndex=s,this.battleType=R,this.trainer=a??null,this.initBattleSpec(),this.enemyLevels=R!==1?new Array(i?2:1).fill(null).map(()=>this.getLevelForWave()):a==null?void 0:a.getPartyLevels(this.waveIndex),this.double=i??!1}initBattleSpec(){let A=SE.DEFAULT;this.gameMode.isWaveFinal(this.waveIndex)&&this.gameMode.isClassic&&(A=SE.FINAL_BOSS),this.battleSpec=A}getLevelForWave(){const A=this.gameMode.getWaveForDifficulty(this.waveIndex),s=1+A/2+Math.pow(A/25,2),R=1.2;if(this.gameMode.isBoss(this.waveIndex)){const r=Math.floor(s*R);if(this.battleSpec===SE.FINAL_BOSS||!(this.waveIndex%250))return Math.ceil(r/25)*25;let L=0;return this.gameMode.isWaveFinal(this.waveIndex)||(L=Math.round(Phaser.Math.RND.realInRange(-1,1)*Math.floor(A/10))),r+L}let a=0;const i=10/A;return a=Math.abs(this.randSeedGaussForLevel(i)),Math.max(Math.round(s+a),1)}randSeedGaussForLevel(A){let s=0;for(let R=A;R>0;R--)s+=Phaser.Math.RND.realInRange(0,1);return s/A}getBattlerCount(){return this.double?2:1}incrementTurn(){this.turn++,this.turnCommands=Object.fromEntries(DE(gt).map(A=>[A,null])),this.battleSeedState=null}addParticipant(A){this.playerParticipantIds.add(A.id)}removeFaintedParticipant(A){this.playerParticipantIds.delete(A.id)}addPostBattleLoot(A){this.postBattleLoot.push(...n.findModifiers(s=>s instanceof dt&&s.pokemonId===A.id&&s.isTransferable,!1).map(s=>{const R=s;return R.pokemonId=null,R}))}pickUpScatteredMoney(){const A=new _s(n.currentBattle.moneyScattered);n.applyModifiers(IO,!0,A),n.arena.getTag(ge.HAPPY_HOUR)&&(A.value*=2),n.addMoney(A.value);const s=navigator.language||"en-US",R=A.value.toLocaleString(s),a=u.t("battle:moneyPickedUp",{moneyAmount:R});n.queueMessage(a,void 0,!0),n.currentBattle.moneyScattered=0}addBattleScore(){let A=n.getEnemyParty().length/2+.5;this.double&&(A/=1.5);for(const a of n.getEnemyParty())a.isBoss()&&(A*=a.bossSegments/1.5/n.getEnemyParty().length);const s=Phaser.Tweens.Builders.GetEaseFunction("Sine.easeIn")(1-Math.min(this.turn-2,10*A)/(10*A)),R=Math.ceil(this.battleScore*s);n.score+=R,console.log(`Battle Score: ${R} (${this.turn-1} Turns x${Math.floor(s*100)/100})`),console.log(`Total Score: ${n.score}`),n.updateScoreText()}getBgmOverride(){var s,R,a,i,r,L,o,l;if(this.isBattleMysteryEncounter()&&((s=this.mysteryEncounter)==null?void 0:s.encounterMode)===lE.DEFAULT)return null;if(this.battleType===1||((R=this.mysteryEncounter)==null?void 0:R.encounterMode)===lE.TRAINER_BATTLE)return!this.started&&((a=this.trainer)!=null&&a.config.encounterBgm)&&((r=(i=this.trainer)==null?void 0:i.getEncounterMessages())!=null&&r.length)?`encounter_${(L=this.trainer)==null?void 0:L.getEncounterBgm()}`:n.musicPreference===rr.GENFIVE?((o=this.trainer)==null?void 0:o.getBattleBgm())??null:((l=this.trainer)==null?void 0:l.getMixedBattleBgm())??null;if(this.gameMode.isClassic&&this.waveIndex>195&&this.battleSpec!==SE.FINAL_BOSS)return"end_summit";const A=n.getEnemyParty();for(const C of A){if(this.battleSpec===SE.FINAL_BOSS)return C.species.getFormSpriteKey(C.formIndex)===Ue.ETERNAMAX?"battle_final":"battle_final_encounter";if(C.species.legendary||C.species.subLegendary||C.species.mythical){if(n.musicPreference===rr.GENFIVE)switch(C.species.speciesId){case e.REGIROCK:case e.REGICE:case e.REGISTEEL:case e.REGIGIGAS:case e.REGIDRAGO:case e.REGIELEKI:return"battle_legendary_regis_g5";case e.KYUREM:return"battle_legendary_kyurem";default:return C.species.legendary?"battle_legendary_res_zek":"battle_legendary_unova"}else if(n.musicPreference===rr.ALLGENS)switch(C.species.speciesId){case e.ARTICUNO:case e.ZAPDOS:case e.MOLTRES:case e.MEWTWO:case e.MEW:return"battle_legendary_kanto";case e.RAIKOU:return"battle_legendary_raikou";case e.ENTEI:return"battle_legendary_entei";case e.SUICUNE:return"battle_legendary_suicune";case e.LUGIA:return"battle_legendary_lugia";case e.HO_OH:return"battle_legendary_ho_oh";case e.REGIROCK:case e.REGICE:case e.REGISTEEL:case e.REGIGIGAS:case e.REGIDRAGO:case e.REGIELEKI:return"battle_legendary_regis_g6";case e.GROUDON:case e.KYOGRE:return"battle_legendary_gro_kyo";case e.RAYQUAZA:return"battle_legendary_rayquaza";case e.DEOXYS:return"battle_legendary_deoxys";case e.UXIE:case e.MESPRIT:case e.AZELF:return"battle_legendary_lake_trio";case e.HEATRAN:case e.CRESSELIA:case e.DARKRAI:case e.SHAYMIN:return"battle_legendary_sinnoh";case e.DIALGA:case e.PALKIA:return C.species.getFormSpriteKey(C.formIndex)===Ue.ORIGIN?"battle_legendary_origin_forme":"battle_legendary_dia_pal";case e.GIRATINA:return"battle_legendary_giratina";case e.ARCEUS:return"battle_legendary_arceus";case e.COBALION:case e.TERRAKION:case e.VIRIZION:case e.KELDEO:case e.TORNADUS:case e.LANDORUS:case e.THUNDURUS:case e.MELOETTA:case e.GENESECT:return"battle_legendary_unova";case e.KYUREM:return"battle_legendary_kyurem";case e.XERNEAS:case e.YVELTAL:case e.ZYGARDE:return"battle_legendary_xern_yvel";case e.TAPU_KOKO:case e.TAPU_LELE:case e.TAPU_BULU:case e.TAPU_FINI:return"battle_legendary_tapu";case e.SOLGALEO:case e.LUNALA:return"battle_legendary_sol_lun";case e.NECROZMA:switch(C.getFormKey()){case"dusk-mane":case"dawn-wings":return"battle_legendary_dusk_dawn";case"ultra":return"battle_legendary_ultra_nec";default:return"battle_legendary_sol_lun"}case e.NIHILEGO:case e.PHEROMOSA:case e.BUZZWOLE:case e.XURKITREE:case e.CELESTEELA:case e.KARTANA:case e.GUZZLORD:case e.POIPOLE:case e.NAGANADEL:case e.STAKATAKA:case e.BLACEPHALON:return"battle_legendary_ub";case e.ZACIAN:case e.ZAMAZENTA:return"battle_legendary_zac_zam";case e.GLASTRIER:case e.SPECTRIER:return"battle_legendary_glas_spec";case e.CALYREX:return C.getFormKey()==="ice"||C.getFormKey()==="shadow"?"battle_legendary_riders":"battle_legendary_calyrex";case e.GALAR_ARTICUNO:case e.GALAR_ZAPDOS:case e.GALAR_MOLTRES:return"battle_legendary_birds_galar";case e.WO_CHIEN:case e.CHIEN_PAO:case e.TING_LU:case e.CHI_YU:return"battle_legendary_ruinous";case e.KORAIDON:case e.MIRAIDON:return"battle_legendary_kor_mir";case e.OKIDOGI:case e.MUNKIDORI:case e.FEZANDIPITI:return"battle_legendary_loyal_three";case e.OGERPON:return"battle_legendary_ogerpon";case e.TERAPAGOS:return"battle_legendary_terapagos";case e.PECHARUNT:return"battle_legendary_pecharunt";default:return C.species.legendary?"battle_legendary_res_zek":"battle_legendary_unova"}}}return n.gameMode.isClassic&&this.waveIndex<=4?"battle_wild":null}randSeedInt(A,s=0){if(A<=1)return s;const R=n.rngCounter,a=n.rngSeedOverride,i=Phaser.Math.RND.state();this.battleSeedState?Phaser.Math.RND.state(this.battleSeedState):(Phaser.Math.RND.sow([a_(this.battleSeed,this.turn<<6)]),console.log("Battle Seed:",this.battleSeed)),n.rngCounter=this.rngCounter++,n.rngSeedOverride=this.battleSeed;const r=ce(A,s);return this.battleSeedState=Phaser.Math.RND.state(),Phaser.Math.RND.state(i),n.rngCounter=R,n.rngSeedOverride=a,r}isBattleMysteryEncounter(){return this.battleType===3}};N(XF,"Battle");let ac=XF;const QF=class QF{setBattleType(A){return this.battleType=A,this}setDouble(A){return this.double=A,this}setGetTrainerFunc(A){return this.getTrainer=A,this}setGetEnemyPartyFunc(A){return this.getEnemyParty=A,this}setSeedOffsetWave(A){return this.seedOffsetWaveIndex=A,this}setCustomModifierRewards(A){return this.customModifierRewardSettings=A,this}};N(QF,"FixedBattleConfig");let UE=QF;function ys(E,A=!1,s=0){return()=>{const R=ce(E.length),a=[];n.executeWithSeedOffset(()=>{for(const o of E){const l=Array.isArray(o)?IE(o):o;a.push(l)}},s);let i=OA.DEFAULT;A&&(i=_A(2)===0?OA.FEMALE:OA.DEFAULT);const L=[U.ROCKET_GRUNT,U.MAGMA_GRUNT,U.AQUA_GRUNT,U.GALACTIC_GRUNT,U.PLASMA_GRUNT,U.FLARE_GRUNT,U.AETHER_GRUNT,U.SKULL_GRUNT,U.MACRO_GRUNT,U.STAR_GRUNT].includes(a[R]);return QA[a[R]].hasDouble&&L?new Gs(a[R],_A(3)===0?OA.DOUBLE:i):new Gs(a[R],i)}}N(ys,"getRandomTrainerFunc");const C6={5:new UE().setBattleType(1).setGetTrainerFunc(()=>new Gs(U.YOUNGSTER,ce(2)?OA.FEMALE:OA.DEFAULT)),8:new UE().setBattleType(1).setGetTrainerFunc(()=>new Gs(U.RIVAL,n.gameData.gender===Vt.MALE?OA.FEMALE:OA.DEFAULT)),25:new UE().setBattleType(1).setGetTrainerFunc(()=>new Gs(U.RIVAL_2,n.gameData.gender===Vt.MALE?OA.FEMALE:OA.DEFAULT)).setCustomModifierRewards({guaranteedModifierTiers:[w.ULTRA,w.GREAT,w.GREAT],allowLuckUpgrades:!1}),35:new UE().setBattleType(1).setGetTrainerFunc(ys([U.ROCKET_GRUNT,U.MAGMA_GRUNT,U.AQUA_GRUNT,U.GALACTIC_GRUNT,U.PLASMA_GRUNT,U.FLARE_GRUNT,U.AETHER_GRUNT,U.SKULL_GRUNT,U.MACRO_GRUNT,U.STAR_GRUNT],!0)),55:new UE().setBattleType(1).setGetTrainerFunc(()=>new Gs(U.RIVAL_3,n.gameData.gender===Vt.MALE?OA.FEMALE:OA.DEFAULT)).setCustomModifierRewards({guaranteedModifierTiers:[w.ULTRA,w.ULTRA,w.GREAT,w.GREAT],allowLuckUpgrades:!1}),62:new UE().setBattleType(1).setSeedOffsetWave(35).setGetTrainerFunc(ys([U.ROCKET_GRUNT,U.MAGMA_GRUNT,U.AQUA_GRUNT,U.GALACTIC_GRUNT,U.PLASMA_GRUNT,U.FLARE_GRUNT,U.AETHER_GRUNT,U.SKULL_GRUNT,U.MACRO_GRUNT,U.STAR_GRUNT],!0)),64:new UE().setBattleType(1).setSeedOffsetWave(35).setGetTrainerFunc(ys([U.ROCKET_GRUNT,U.MAGMA_GRUNT,U.AQUA_GRUNT,U.GALACTIC_GRUNT,U.PLASMA_GRUNT,U.FLARE_GRUNT,U.AETHER_GRUNT,U.SKULL_GRUNT,U.MACRO_GRUNT,U.STAR_GRUNT],!0)),66:new UE().setBattleType(1).setSeedOffsetWave(35).setGetTrainerFunc(ys([[U.ARCHER,U.ARIANA,U.PROTON,U.PETREL],[U.TABITHA,U.COURTNEY],[U.MATT,U.SHELLY],[U.JUPITER,U.MARS,U.SATURN],[U.ZINZOLIN,U.ROOD],[U.XEROSIC,U.BRYONY],U.FABA,U.PLUMERIA,U.OLEANA,[U.GIACOMO,U.MELA,U.ATTICUS,U.ORTEGA,U.ERI]],!0)),95:new UE().setBattleType(1).setGetTrainerFunc(()=>new Gs(U.RIVAL_4,n.gameData.gender===Vt.MALE?OA.FEMALE:OA.DEFAULT)).setCustomModifierRewards({guaranteedModifierTiers:[w.ULTRA,w.ULTRA,w.ULTRA,w.ULTRA],allowLuckUpgrades:!1}),112:new UE().setBattleType(1).setSeedOffsetWave(35).setGetTrainerFunc(ys([U.ROCKET_GRUNT,U.MAGMA_GRUNT,U.AQUA_GRUNT,U.GALACTIC_GRUNT,U.PLASMA_GRUNT,U.FLARE_GRUNT,U.AETHER_GRUNT,U.SKULL_GRUNT,U.MACRO_GRUNT,U.STAR_GRUNT],!0)),114:new UE().setBattleType(1).setSeedOffsetWave(35).setGetTrainerFunc(ys([[U.ARCHER,U.ARIANA,U.PROTON,U.PETREL],[U.TABITHA,U.COURTNEY],[U.MATT,U.SHELLY],[U.JUPITER,U.MARS,U.SATURN],[U.ZINZOLIN,U.ROOD],[U.XEROSIC,U.BRYONY],U.FABA,U.PLUMERIA,U.OLEANA,[U.GIACOMO,U.MELA,U.ATTICUS,U.ORTEGA,U.ERI]],!0,1)),115:new UE().setBattleType(1).setSeedOffsetWave(35).setGetTrainerFunc(ys([U.ROCKET_BOSS_GIOVANNI_1,U.MAXIE,U.ARCHIE,U.CYRUS,U.GHETSIS,U.LYSANDRE,U.LUSAMINE,U.GUZMA,U.ROSE,U.PENNY])).setCustomModifierRewards({guaranteedModifierTiers:[w.ROGUE,w.ROGUE,w.ULTRA,w.ULTRA,w.ULTRA],allowLuckUpgrades:!1}),145:new UE().setBattleType(1).setGetTrainerFunc(()=>new Gs(U.RIVAL_5,n.gameData.gender===Vt.MALE?OA.FEMALE:OA.DEFAULT)).setCustomModifierRewards({guaranteedModifierTiers:[w.ROGUE,w.ROGUE,w.ROGUE,w.ULTRA,w.ULTRA],allowLuckUpgrades:!1}),165:new UE().setBattleType(1).setSeedOffsetWave(35).setGetTrainerFunc(ys([U.ROCKET_BOSS_GIOVANNI_2,U.MAXIE_2,U.ARCHIE_2,U.CYRUS_2,U.GHETSIS_2,U.LYSANDRE_2,U.LUSAMINE_2,U.GUZMA_2,U.ROSE_2,U.PENNY_2])).setCustomModifierRewards({guaranteedModifierTiers:[w.ROGUE,w.ROGUE,w.ULTRA,w.ULTRA,w.ULTRA,w.ULTRA],allowLuckUpgrades:!1}),182:new UE().setBattleType(1).setGetTrainerFunc(ys([U.LORELEI,U.WILL,U.SIDNEY,U.AARON,U.SHAUNTAL,U.MALVA,[U.HALA,U.MOLAYNE],U.MARNIE_ELITE,U.RIKA,U.CRISPIN])),184:new UE().setBattleType(1).setSeedOffsetWave(182).setGetTrainerFunc(ys([U.BRUNO,U.KOGA,U.PHOEBE,U.BERTHA,U.MARSHAL,U.SIEBOLD,U.OLIVIA,U.NESSA_ELITE,U.POPPY,U.AMARYS])),186:new UE().setBattleType(1).setSeedOffsetWave(182).setGetTrainerFunc(ys([U.AGATHA,U.BRUNO,U.GLACIA,U.FLINT,U.GRIMSLEY,U.WIKSTROM,U.ACEROLA,[U.BEA_ELITE,U.ALLISTER_ELITE],U.LARRY_ELITE,U.LACEY])),188:new UE().setBattleType(1).setSeedOffsetWave(182).setGetTrainerFunc(ys([U.LANCE,U.KAREN,U.DRAKE,U.LUCIAN,U.CAITLIN,U.DRASNA,U.KAHILI,U.RAIHAN_ELITE,U.HASSEL,U.DRAYTON])),190:new UE().setBattleType(1).setSeedOffsetWave(182).setGetTrainerFunc(ys([U.BLUE,[U.RED,U.LANCE_CHAMPION],[U.STEVEN,U.WALLACE],U.CYNTHIA,[U.ALDER,U.IRIS],U.DIANTHA,U.HAU,U.LEON,[U.GEETA,U.NEMONA],U.KIERAN])),195:new UE().setBattleType(1).setGetTrainerFunc(()=>new Gs(U.RIVAL_6,n.gameData.gender===Vt.MALE?OA.FEMALE:OA.DEFAULT)).setCustomModifierRewards({guaranteedModifierTiers:[w.ROGUE,w.ROGUE,w.ULTRA,w.ULTRA,w.GREAT,w.GREAT],allowLuckUpgrades:!1})},iM=class iM extends Ts{constructor(A,s,R){if(super(A),this.move=R,s.includes(A)&&this.move.getMove().moveTarget===$E.ALL_NEAR_OTHERS){const a=s.indexOf(A);s.splice(a,a+1)}this.targets=s}start(){super.start();const A=this.getUserPokemon(),s=this.getTargets();if(!A)return super.end();const R=this.move.getMove().hasAttr(EI);if(!A.isOnField())if(R){if(!A.scene)return super.end();ve(A.turnData)&&A.resetTurnData()}else return super.end();const a=new Lt(!1),i=this.move.getMove();MA(jI,A,this.getFirstTarget()??null,i,a,this.move.virtual).then(()=>{var D,_,P,h,H,d,f,B;if(a.value)return this.end();if(A.lapseTags(JE.MOVE_EFFECT),A.turnData.hitsLeft===0&&A.turnData.hitCount>0&&A.turnData.extraTurns>0&&(A.turnData.hitsLeft=-1,A.turnData.hitCount=0,A.turnData.extraTurns--),A.turnData.hitsLeft===-1){const F=new Et(1);MA(TA,A,this.getFirstTarget()??null,i,F),XO(hS,A,null,i,!1,F,null),n.applyModifiers(RI,A.isPlayer(),A,i.id,F),A.turnData.hitCount=F.value,A.turnData.hitsLeft=F.value}const r={move:this.move.moveId,targets:this.targets,result:oA.PENDING,virtual:this.move.virtual},L=Object.fromEntries(s.map(F=>[F.getBattlerIndex(),this.hitCheck(F)])),o=s.some(F=>F.isActive(!0)),l=((D=s[0])==null?void 0:D.hasAbilityWithAttr(oO))&&((H=(h=(P=(_=s[0])==null?void 0:_.getAbility())==null?void 0:P.getAttrs(oO))==null?void 0:h[0])==null?void 0:H.getImmuneType())===A.getMoveType(i)&&!((d=s[0])!=null&&d.getTag(_n));if(!o||!i.hasAttr(Ui)&&!i.isMultiTarget()&&!L[this.targets[0]]&&!s[0].getTag(zI)&&!l)return this.stopMultiHit(),o?(n.queueMessage(u.t("battle:attackMissed",{pokemonNameWithAffix:this.getFirstTarget()?te(this.getFirstTarget()):""})),r.result=oA.MISS,MA(LO,A,null,this.move.getMove())):(n.queueMessage(u.t("battle:attackFailed")),r.result=oA.FAIL),A.pushMoveHistory(r),this.end();const C=[],M=((B=(f=n.currentBattle)==null?void 0:f.mysteryEncounter)==null?void 0:B.hasBattleAnimationsWithoutTargets)??!1;new _u(i.id,A,this.getFirstTarget().getBattlerIndex(),M).play(i.hitsSubstitute(A,this.getFirstTarget()),()=>{var b,x,$,j,z,se,Z;let F=!1;for(const q of s){if(i.moveTarget===$E.ENEMY_SIDE&&q!==s[s.length-1])continue;const p=q.isPlayer()?St.PLAYER:St.ENEMY,oe=new Lt(!1),me=new Lt(!1);this.move.getMove().isAllyTarget()||n.arena.applyTagsForSide(ai,p,!1,oe,A,q,i.id,me);const Me=(me.value||!this.move.getMove().checkFlag(tA.IGNORE_PROTECT,A,q))&&(oe.value||!q.findTags(Rt=>Rt instanceof $r).length&&q.findTags(Rt=>Rt instanceof zI).find(Rt=>q.lapseTag(Rt.tagType))||this.move.getMove().category!==Pt.STATUS&&q.findTags(Rt=>Rt instanceof $r).find(Rt=>q.lapseTag(Rt.tagType))),We=q.hasAbilityWithAttr(oO)&&(($=(x=(b=q.getAbility())==null?void 0:b.getAttrs(oO))==null?void 0:x[0])==null?void 0:$.getImmuneType())===A.getMoveType(i)&&!q.getTag(_n),De=n.currentBattle.double&&((z=(j=q.getAlly())==null?void 0:j.getTag(y.COMMANDED))==null?void 0:z.getSourcePokemon())===q;if(q.switchOutStatus||De||!We&&!Me&&!L[q.getBattlerIndex()]){this.stopMultiHit(q),q.switchOutStatus||n.queueMessage(u.t("battle:attackMissed",{pokemonNameWithAffix:te(q)})),r.result===oA.PENDING&&(r.result=oA.MISS),A.pushMoveHistory(r),MA(LO,A,null,i);continue}const ie=A.turnData.hitsLeft===A.turnData.hitCount;ie&&A.pushMoveHistory(r),r.result=oA.SUCCESS;const Ae=Me?vt.NO_EFFECT:q.apply(A,i),ee=[vt.EFFECTIVE,vt.SUPER_EFFECTIVE,vt.NOT_VERY_EFFECTIVE,vt.ONE_HIT_KO].includes(Ae),Le=ee&&!F;Le&&(F=!0),Ae===vt.NO_EFFECT&&(r.result=oA.FAIL);const ue=A.turnData.hitsLeft===1||!((se=this.getFirstTarget())!=null&&se.isActive());ue&&(n.triggerPokemonFormChange(A,wT),A.turnData.hitCount>1&&k1(Jr,q,0,q.hasPassive(),!1,[],A));const de=new Promise(Rt=>{let Bt=HL(tt=>tt instanceof Dt&&tt.trigger===vi.PRE_APPLY&&(!tt.firstHitOnly||ie)&&(!tt.lastHitOnly||ue)&&Ae!==vt.NO_EFFECT,A,q,i);if(Ae===vt.FAIL)return Rt();Bt=Bt.then(this.applySelfTargetEffects(A,q,ie,ue)),Ae!==vt.NO_EFFECT?Bt.then(this.applyPostApplyEffects(A,q,ie,ue)).then(this.applyHeldItemFlinchCheck(A,q,ee)).then(this.applySuccessfulAttackEffects(A,q,ie,ue,!!Me,Ae,Le)).then(()=>Rt()):Bt.then(()=>MA(yO,A,null,i)).then(Rt)});C.push(de)}const W=A.turnData.hitsLeft===1||!((Z=this.getFirstTarget())!=null&&Z.isActive())?HL(q=>q instanceof Dt&&q.trigger===vi.POST_TARGET,A,null,i):null;W&&(C.length?C[C.length-1].then(()=>W):C.push(W)),Promise.allSettled(C).then(()=>{s.forEach(q=>{const p=q.getTag(mE);p&&p.hp<=0&&q.lapseTag(y.SUBSTITUTE)}),this.end()})})})}end(){var s;const A=this.getUserPokemon();if(A)if(A.turnData.hitsLeft&&--A.turnData.hitsLeft>=1&&((s=this.getFirstTarget())!=null&&s.isActive()))n.unshiftPhase(this.getNewHitPhase());else{const R=A.turnData.hitCount-Math.max(A.turnData.hitsLeft,0);(R>1||A.turnData.hitsLeft&&A.turnData.hitsLeft>0)&&n.queueMessage(u.t("battle:attackHitsCount",{count:R})),n.applyModifiers(Ra,this.player,A),this.getTargets().forEach(a=>a.turnData.moveEffectiveness=null)}super.end()}applySelfTargetEffects(A,s,R,a){return()=>HL(i=>i instanceof Dt&&i.trigger===vi.POST_APPLY&&i.selfTarget&&(!i.firstHitOnly||R)&&(!i.lastHitOnly||a),A,s,this.move.getMove())}applyPostApplyEffects(A,s,R,a){return()=>HL(i=>i instanceof Dt&&i.trigger===vi.POST_APPLY&&!i.selfTarget&&(!i.firstHitOnly||R)&&(!i.lastHitOnly||a),A,s,this.move.getMove())}applyOnHitEffects(A,s,R,a,i){return HL(r=>r instanceof Dt&&r.trigger===vi.HIT&&(!r.firstHitOnly||R)&&(!r.lastHitOnly||a)&&(!r.firstTargetOnly||i),A,s,this.move.getMove())}applyOnGetHitAbEffects(A,s,R){return Pr(!s.isFainted()||s.canApplyAbility(),()=>_J(qE,s,A,this.move.getMove(),R).then(()=>{this.move.getMove().hitsSubstitute(A,s)||(!A.isPlayer()&&this.move.getMove()instanceof g&&n.applyShuffledModifiers(NL,!1,s),s.lapseTags(JE.AFTER_HIT))}))}applySuccessfulAttackEffects(A,s,R,a,i,r,L){return()=>Pr(!i,()=>this.applyOnHitEffects(A,s,R,a,L).then(()=>this.applyOnGetHitAbEffects(A,s,r)).then(()=>w8(QI,A,s,this.move.getMove(),r)).then(()=>{this.move.getMove()instanceof g&&n.applyModifiers(Hi,this.player,A,s)}))}applyHeldItemFlinchCheck(A,s,R){return()=>{if(!this.move.getMove().hasAttr(rA)&&R&&!s.hasAbilityWithAttr(XI)&&!this.move.getMove().hitsSubstitute(A,s)){const a=new Lt(!1);n.applyModifiers(lo,A.isPlayer(),A,a),a.value&&s.addTag(y.FLINCHED,void 0,this.move.moveId,A.id)}}}hitCheck(A){var L;if([$E.USER,$E.ENEMY_SIDE].includes(this.move.getMove().moveTarget))return!0;const s=this.getUserPokemon();if(!s)return!1;if(s.turnData.hitsLeft<s.turnData.hitCount&&(!this.move.getMove().hasFlag(tA.CHECK_ALL_HITS)||s.hasAbilityWithAttr(yS))||s.hasAbilityWithAttr(VS)||A.hasAbilityWithAttr(VS)||s.getTag(y.IGNORE_ACCURACY)&&(((L=s.getLastXMoves().find(()=>!0))==null?void 0:L.targets)||[]).indexOf(A.getBattlerIndex())!==-1||A.getTag(y.ALWAYS_GET_HIT)||A.getTag(y.TELEKINESIS)&&!A.getTag(_n)&&!this.move.getMove().hasAttr(QO))return!0;const R=A.getTag(_n);if(R&&!this.move.getMove().getAttrs(FR).some(o=>o.tagType===R.tagType)&&!(this.move.getMove().hasAttr(ED)&&s.isOfType(I.POISON)))return!1;const a=this.move.getMove().calculateBattleAccuracy(s,A);if(a===-1)return!0;const i=s.getAccuracyMultiplier(A,this.move.getMove());return s.randSeedInt(100)<a*i}getUserPokemon(){return this.battlerIndex>gt.ENEMY_2?n.getPokemonById(this.battlerIndex):(this.player?n.getPlayerField():n.getEnemyField())[this.fieldIndex]}getTargets(){return n.getField(!0).filter(A=>this.targets.indexOf(A.getBattlerIndex())>-1)}getFirstTarget(){return this.getTargets()[0]}removeTarget(A){this.targets.findIndex(R=>R===A.getBattlerIndex())!==-1&&this.targets.splice(this.targets.findIndex(R=>R===A.getBattlerIndex()),1)}stopMultiHit(A){A&&this.removeTarget(A);const s=this.getUserPokemon();s&&(!A||this.targets.length===0)&&(s.turnData.hitCount=1,s.turnData.hitsLeft=1)}getNewHitPhase(){return new iM(this.battlerIndex,this.targets,this.move)}};N(iM,"MoveEffectPhase");let PR=iM;var St=(E=>(E[E.BOTH=0]="BOTH",E[E.PLAYER=1]="PLAYER",E[E.ENEMY=2]="ENEMY",E))(St||{});const JF=class JF{constructor(A,s,R,a,i=0){this.tagType=A,this.turnCount=s,this.sourceMove=R,this.sourceId=a,this.side=i}apply(A,s,...R){return!0}onAdd(A,s=!1){}onRemove(A,s=!1){s||n.queueMessage(u.t(`arenaTag:arenaOnRemove${this.side===1?"Player":this.side===2?"Enemy":""}`,{moveName:this.getMoveName()}))}onOverlap(A){}lapse(A){return this.turnCount<1||!!--this.turnCount}getMoveName(){return this.sourceMove?we[this.sourceMove].name:null}loadTag(A){this.turnCount=A.turnCount,this.sourceMove=A.sourceMove,this.sourceId=A.sourceId,this.side=A.side}getSourcePokemon(){return this.sourceId?n.getPokemonById(this.sourceId):null}getAffectedPokemon(){switch(this.side){case 1:return n.getPlayerField()??[];case 2:return n.getEnemyField()??[];case 0:default:return n.getField(!0)??[]}}};N(JF,"ArenaTag");let xE=JF;const $F=class $F extends xE{constructor(A,s,R){super(ge.MIST,A,t.MIST,s,R)}onAdd(A,s=!1){if(super.onAdd(A),this.sourceId){const R=n.getPokemonById(this.sourceId);!s&&R?n.queueMessage(u.t("arenaTag:mistOnAdd",{pokemonNameWithAffix:te(R)})):s||console.warn("Failed to get source for MistTag onAdd")}}apply(A,s,R,a){if(R){const i=new Lt(!1);if(ut(Ni,R,null,!1,i),i.value)return!1}return a.value=!0,s||n.queueMessage(u.t("arenaTag:mistApply")),!0}};N($F,"MistTag");let tU=$F;const zF=class zF extends xE{constructor(A,s,R,a,i,r){super(A,s,R,a,i),this.weakenedCategories=r}apply(A,s,R,a,i){if(this.weakenedCategories.includes(a)){const r=new Lt(!1);return ut(Ni,R,null,!1,r),r.value?!1:(i.value=n.currentBattle.double?2732/4096:.5,!0)}return!1}};N(zF,"WeakenMoveScreenTag");let Vr=zF;const qF=class qF extends Vr{constructor(A,s,R){super(ge.REFLECT,A,t.REFLECT,s,R,[Pt.PHYSICAL])}onAdd(A,s=!1){s||n.queueMessage(u.t(`arenaTag:reflectOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`))}};N(qF,"ReflectTag");let ic=qF;const jF=class jF extends Vr{constructor(A,s,R){super(ge.LIGHT_SCREEN,A,t.LIGHT_SCREEN,s,R,[Pt.SPECIAL])}onAdd(A,s=!1){s||n.queueMessage(u.t(`arenaTag:lightScreenOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`))}};N(jF,"LightScreenTag");let rc=jF;const ep=class ep extends Vr{constructor(A,s,R){super(ge.AURORA_VEIL,A,t.AURORA_VEIL,s,R,[Pt.SPECIAL,Pt.PHYSICAL])}onAdd(A,s=!1){s||n.queueMessage(u.t(`arenaTag:auroraVeilOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`))}};N(ep,"AuroraVeilTag");let Lc=ep;const tp=class tp extends xE{constructor(A,s,R,a,i,r=!1){super(A,1,s,R,a),this.protectConditionFunc=i,this.ignoresBypass=r}onAdd(A){n.queueMessage(u.t(`arenaTag:conditionalProtectOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`,{moveName:super.getMoveName()}))}onRemove(A){}apply(A,s,R,a,i,r,L){return this.side===1===i.isPlayer()&&this.protectConditionFunc(A,r)?(R.value||(R.value=!0,s||(a.stopMultiHit(i),new qI(lA.PROTECT,i).play(),n.queueMessage(u.t("arenaTag:conditionalProtectApply",{moveName:super.getMoveName(),pokemonNameWithAffix:te(i)})))),L.value=L.value||this.ignoresBypass,!0):!1}};N(tp,"ConditionalProtectTag");let ai=tp;const TJ=N((E,A)=>{const s=we[A],R=n.getCurrentPhase();if(R instanceof PR){const a=R.getUserPokemon();if(a)return s.getPriority(a)>0}return s.priority>0},"QuickGuardConditionFunc"),Ap=class Ap extends ai{constructor(A,s){super(ge.QUICK_GUARD,t.QUICK_GUARD,A,s,TJ)}};N(Ap,"QuickGuardTag");let Nc=Ap;const SJ=N((E,A)=>{switch(we[A].moveTarget){case $E.ALL_ENEMIES:case $E.ALL_NEAR_ENEMIES:case $E.ALL_OTHERS:case $E.ALL_NEAR_OTHERS:return!0}return!1},"WideGuardConditionFunc"),Ep=class Ep extends ai{constructor(A,s){super(ge.WIDE_GUARD,t.WIDE_GUARD,A,s,SJ)}};N(Ep,"WideGuardTag");let Tc=Ep;const oJ=N((E,A)=>we[A].category!==Pt.STATUS,"MatBlockConditionFunc"),sp=class sp extends ai{constructor(A,s){super(ge.MAT_BLOCK,t.MAT_BLOCK,A,s,oJ)}onAdd(A){if(this.sourceId){const s=n.getPokemonById(this.sourceId);s?n.queueMessage(u.t("arenaTag:matBlockOnAdd",{pokemonNameWithAffix:te(s)})):console.warn("Failed to get source for MatBlockTag onAdd")}}};N(sp,"MatBlockTag");let Sc=sp;const lJ=N((E,A)=>{const s=we[A];return s.category===Pt.STATUS&&s.moveTarget!==$E.ENEMY_SIDE&&s.moveTarget!==$E.BOTH_SIDES&&s.moveTarget!==$E.ALL},"CraftyShieldConditionFunc"),Rp=class Rp extends ai{constructor(A,s){super(ge.CRAFTY_SHIELD,t.CRAFTY_SHIELD,A,s,lJ,!0)}};N(Rp,"CraftyShieldTag");let oc=Rp;const Op=class Op extends xE{constructor(A,s,R,a){super(ge.NO_CRIT,A,s,R,a)}onAdd(A){n.queueMessage(u.t(`arenaTag:noCritOnAdd${this.side===1?"Player":"Enemy"}`,{moveName:this.getMoveName()}))}onRemove(A){const s=n.getPokemonById(this.sourceId);n.queueMessage(u.t("arenaTag:noCritOnRemove",{pokemonNameWithAffix:te(s??void 0),moveName:this.getMoveName()}))}};N(Op,"NoCritTag");let AU=Op;const np=class np extends xE{constructor(A,s,R){super(ge.WISH,A,t.WISH,s,R)}onAdd(A){if(this.sourceId){const s=n.getPokemonById(this.sourceId);s?(this.battlerIndex=s.getBattlerIndex(),this.triggerMessage=u.t("arenaTag:wishTagOnAdd",{pokemonNameWithAffix:te(s)}),this.healHp=yt(s.getMaxHp()/2)):console.warn("Failed to get source for WishTag onAdd")}}onRemove(A){const s=n.getField()[this.battlerIndex];s!=null&&s.isActive(!0)&&(n.queueMessage(this.triggerMessage),n.unshiftPhase(new FE(s.getBattlerIndex(),this.healHp,null,!0,!1)))}};N(np,"WishTag");let lc=np;const Ip=class Ip extends xE{constructor(A,s,R,a,i){super(A,s,a,i),this.weakenedType=R}apply(A,s,R,a){return R===this.weakenedType?(a.value*=.33,!0):!1}};N(Ip,"WeakenMoveTypeTag");let MS=Ip;const ap=class ap extends MS{constructor(A,s){super(ge.MUD_SPORT,A,I.ELECTRIC,t.MUD_SPORT,s)}onAdd(A){n.queueMessage(u.t("arenaTag:mudSportOnAdd"))}onRemove(A){n.queueMessage(u.t("arenaTag:mudSportOnRemove"))}};N(ap,"MudSportTag");let Cc=ap;const ip=class ip extends MS{constructor(A,s){super(ge.WATER_SPORT,A,I.FIRE,t.WATER_SPORT,s)}onAdd(A){n.queueMessage(u.t("arenaTag:waterSportOnAdd"))}onRemove(A){n.queueMessage(u.t("arenaTag:waterSportOnRemove"))}};N(ip,"WaterSportTag");let Uc=ip;const rp=class rp extends xE{constructor(A){super(ge.ION_DELUGE,1,A)}onAdd(A){n.queueMessage(u.t("arenaTag:plasmaFistsOnAdd"))}onRemove(A){}apply(A,s,R){return R.value===I.NORMAL?(R.value=I.ELECTRIC,!0):!1}};N(rp,"IonDelugeTag");let uc=rp;const Lp=class Lp extends xE{constructor(A,s,R,a,i){super(A,0,s,R,a),this.layers=1,this.maxLayers=i}onOverlap(A){this.layers<this.maxLayers&&(this.layers++,this.onAdd(A))}apply(A,s,R){return this.side===1!==R.isPlayer()?!1:this.activateTrap(R,s)}activateTrap(A,s){return!1}getMatchupScoreMultiplier(A){return A.isGrounded()?1:Phaser.Math.Linear(0,1/Math.pow(2,this.layers),Math.min(A.getHpRatio(),.5)*2)}loadTag(A){super.loadTag(A),this.layers=A.layers,this.maxLayers=A.maxLayers}};N(Lp,"ArenaTrapTag");let nO=Lp;const Np=class Np extends nO{constructor(A,s){super(ge.SPIKES,t.SPIKES,A,s,3)}onAdd(A,s=!1){super.onAdd(A);const R=this.sourceId?n.getPokemonById(this.sourceId):null;!s&&R&&n.queueMessage(u.t("arenaTag:spikesOnAdd",{moveName:this.getMoveName(),opponentDesc:R.getOpponentDescriptor()}))}activateTrap(A,s){if(A.isGrounded()){const R=new Lt(!1);if(ut(ME,A,R),s)return!R.value;if(!R.value){const a=1/(10-2*this.layers),i=yt(A.getMaxHp()*a);return n.queueMessage(u.t("arenaTag:spikesActivateTrap",{pokemonNameWithAffix:te(A)})),A.damageAndUpdate(i,vt.OTHER),A.turnData&&(A.turnData.damageTaken+=i),!0}}return!1}};N(Np,"SpikesTag");let Dc=Np;const Tp=class Tp extends nO{constructor(A,s){super(ge.TOXIC_SPIKES,t.TOXIC_SPIKES,A,s,2),this.neutralized=!1}onAdd(A,s=!1){super.onAdd(A);const R=this.sourceId?n.getPokemonById(this.sourceId):null;!s&&R&&n.queueMessage(u.t("arenaTag:toxicSpikesOnAdd",{moveName:this.getMoveName(),opponentDesc:R.getOpponentDescriptor()}))}onRemove(A){this.neutralized||super.onRemove(A)}activateTrap(A,s){if(A.isGrounded()){if(s)return!0;if(A.isOfType(I.POISON)){if(this.neutralized=!0,n.arena.removeTag(this.tagType))return n.queueMessage(u.t("arenaTag:toxicSpikesActivateTrapPoison",{pokemonNameWithAffix:te(A),moveName:this.getMoveName()})),!0}else if(!A.status){const R=this.layers>1;if(A.trySetStatus(R?ne.TOXIC:ne.POISON,!0,null,0,this.getMoveName()))return!0}}return!1}getMatchupScoreMultiplier(A){return A.isGrounded()||!A.canSetStatus(ne.POISON,!0)?1:A.isOfType(I.POISON)?1.25:super.getMatchupScoreMultiplier(A)}};N(Tp,"ToxicSpikesTag");let Mc=Tp;const Sp=class Sp extends xE{constructor(A,s,R,a,i=0){super(A,3,s,R,i),this.targetIndex=a,this.side=i}lapse(A){const s=super.lapse(A);return s||n.unshiftPhase(new PR(this.sourceId,[this.targetIndex],new nt(this.sourceMove,0,0,!0))),s}onRemove(A){}};N(Sp,"DelayedAttackTag");let _c=Sp;const op=class op extends nO{constructor(A,s){super(ge.STEALTH_ROCK,t.STEALTH_ROCK,A,s,1)}onAdd(A,s=!1){super.onAdd(A);const R=this.sourceId?n.getPokemonById(this.sourceId):null;!s&&R&&n.queueMessage(u.t("arenaTag:stealthRockOnAdd",{opponentDesc:R.getOpponentDescriptor()}))}getDamageHpRatio(A){const s=A.getAttackTypeEffectiveness(I.ROCK,void 0,!0);let R=0;switch(s){case 0:R=0;break;case .25:R=.03125;break;case .5:R=.0625;break;case 1:R=.125;break;case 2:R=.25;break;case 4:R=.5;break}return R}activateTrap(A,s){const R=new Lt(!1);if(ut(ME,A,R),R.value)return!1;const a=this.getDamageHpRatio(A);if(a){if(s)return!0;const i=yt(A.getMaxHp()*a);return n.queueMessage(u.t("arenaTag:stealthRockActivateTrap",{pokemonNameWithAffix:te(A)})),A.damageAndUpdate(i,vt.OTHER),A.turnData&&(A.turnData.damageTaken+=i),!0}return!1}getMatchupScoreMultiplier(A){const s=this.getDamageHpRatio(A);return Phaser.Math.Linear(super.getMatchupScoreMultiplier(A),1,1-Math.pow(s,s))}};N(op,"StealthRockTag");let Pc=op;const lp=class lp extends nO{constructor(A,s){super(ge.STICKY_WEB,t.STICKY_WEB,A,s,1)}onAdd(A,s=!1){super.onAdd(A);const R=this.sourceId?n.getPokemonById(this.sourceId):null;!s&&R&&n.queueMessage(u.t("arenaTag:stickyWebOnAdd",{moveName:this.getMoveName(),opponentDesc:R.getOpponentDescriptor()}))}activateTrap(A,s){if(A.isGrounded()){const R=new Lt(!1);if(ut(zR,A,R),s)return!R.value;if(!R.value){n.queueMessage(u.t("arenaTag:stickyWebActivateTrap",{pokemonName:A.getNameToRender()}));const a=new Et(-1);return n.unshiftPhase(new zt(A.getBattlerIndex(),!1,[K.SPD],a.value)),!0}}return!1}};N(lp,"StickyWebTag");let Gc=lp;const Cp=class Cp extends xE{constructor(A,s){super(ge.TRICK_ROOM,A,t.TRICK_ROOM,s)}apply(A,s,R){return R.value=!R.value,!0}onAdd(A){const s=this.sourceId?n.getPokemonById(this.sourceId):null;s&&n.queueMessage(u.t("arenaTag:trickRoomOnAdd",{pokemonNameWithAffix:te(s)}))}onRemove(A){n.queueMessage(u.t("arenaTag:trickRoomOnRemove"))}};N(Cp,"TrickRoomTag");let EU=Cp;const Up=class Up extends xE{constructor(A){super(ge.GRAVITY,A,t.GRAVITY)}onAdd(A){n.queueMessage(u.t("arenaTag:gravityOnAdd")),n.getField(!0).forEach(s=>{s!==null&&(s.removeTag(y.FLOATING),s.removeTag(y.TELEKINESIS),s.getTag(y.FLYING)&&s.addTag(y.INTERRUPTED))})}onRemove(A){n.queueMessage(u.t("arenaTag:gravityOnRemove"))}};N(Up,"GravityTag");let cc=Up;const up=class up extends xE{constructor(A,s,R){super(ge.TAILWIND,A,t.TAILWIND,s,R)}onAdd(A,s=!1){s||n.queueMessage(u.t(`arenaTag:tailwindOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`));const R=n.getPokemonById(this.sourceId),a=(R!=null&&R.isPlayer()?n.getPlayerField():n.getEnemyField())??[];for(const i of a)i.hasAbility(O.WIND_POWER)&&!i.getTag(y.CHARGED)&&(i.addTag(y.CHARGED),n.queueMessage(u.t("abilityTriggers:windPowerCharged",{pokemonName:te(i),moveName:this.getMoveName()}))),i.hasAbility(O.WIND_RIDER)&&(n.unshiftPhase(new jn(i.getBattlerIndex())),n.unshiftPhase(new zt(i.getBattlerIndex(),!0,[K.ATK],1,!0)))}onRemove(A,s=!1){s||n.queueMessage(u.t(`arenaTag:tailwindOnRemove${this.side===1?"Player":this.side===2?"Enemy":""}`))}};N(up,"TailwindTag");let hc=up;const Dp=class Dp extends xE{constructor(A,s,R){super(ge.HAPPY_HOUR,A,t.HAPPY_HOUR,s,R)}onAdd(A){n.queueMessage(u.t("arenaTag:happyHourOnAdd"))}onRemove(A){n.queueMessage(u.t("arenaTag:happyHourOnRemove"))}};N(Dp,"HappyHourTag");let Hc=Dp;const Mp=class Mp extends xE{constructor(A,s,R){super(ge.SAFEGUARD,A,t.SAFEGUARD,s,R)}onAdd(A){n.queueMessage(u.t(`arenaTag:safeguardOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`))}onRemove(A){n.queueMessage(u.t(`arenaTag:safeguardOnRemove${this.side===1?"Player":this.side===2?"Enemy":""}`))}};N(Mp,"SafeguardTag");let dc=Mp;const _p=class _p extends xE{constructor(){super(ge.NONE,0)}};N(_p,"NoneTag");let fc=_p;var Mr;let CJ=(Mr=class extends nO{constructor(A,s){super(ge.IMPRISON,t.IMPRISON,A,s,1)}onAdd(){const A=this.getSourcePokemon();if(A){const s=this.getAffectedPokemon();s==null||s.forEach(R=>{R.isAllowedInBattle()&&R.addTag(y.IMPRISON,1,t.IMPRISON,this.sourceId)}),n.queueMessage(u.t("battlerTags:imprisonOnAdd",{pokemonNameWithAffix:te(A)}))}}lapse(){const A=this.getSourcePokemon();return A?A.isActive(!0):!1}activateTrap(A){const s=this.getSourcePokemon();return s&&s.isActive(!0)&&A.isAllowedInBattle()&&A.addTag(y.IMPRISON,1,t.IMPRISON,this.sourceId),!0}onRemove(){const A=this.getAffectedPokemon();A==null||A.forEach(s=>{s.removeTag(y.IMPRISON)})}},N(Mr,"ImprisonTag"),Mr);const Pp=class Pp extends xE{constructor(A,s){super(ge.FIRE_GRASS_PLEDGE,4,t.FIRE_PLEDGE,A,s)}onAdd(A){n.queueMessage(u.t(`arenaTag:fireGrassPledgeOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`))}lapse(A){return(this.side===1?n.getPlayerField():n.getEnemyField()).filter(R=>!R.isOfType(I.FIRE)&&!R.switchOutStatus).forEach(R=>{n.queueMessage(u.t("arenaTag:fireGrassPledgeLapse",{pokemonNameWithAffix:te(R)})),n.unshiftPhase(new Ns(R.getBattlerIndex(),R.getBattlerIndex(),lA.MAGMA_STORM)),R.damageAndUpdate(yt(R.getMaxHp()/8))}),super.lapse(A)}};N(Pp,"FireGrassPledgeTag");let Bc=Pp;const Gp=class Gp extends xE{constructor(A,s){super(ge.WATER_FIRE_PLEDGE,4,t.WATER_PLEDGE,A,s)}onAdd(A){n.queueMessage(u.t(`arenaTag:waterFirePledgeOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`))}apply(A,s,R){return R.value*=2,!0}};N(Gp,"WaterFirePledgeTag");let gc=Gp;const cp=class cp extends xE{constructor(A,s){super(ge.GRASS_WATER_PLEDGE,4,t.GRASS_PLEDGE,A,s)}onAdd(A){n.queueMessage(u.t(`arenaTag:grassWaterPledgeOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`))}};N(cp,"GrassWaterPledgeTag");let Kc=cp;const hp=class hp extends xE{constructor(A,s){super(ge.FAIRY_LOCK,A,t.FAIRY_LOCK,s)}onAdd(A){n.queueMessage(u.t("arenaTag:fairyLockOnAdd"))}};N(hp,"FairyLockTag");let mc=hp;function Y8(E,A,s,R,a,i=0){switch(E){case ge.MIST:return new tU(A,R,i);case ge.QUICK_GUARD:return new Nc(R,i);case ge.WIDE_GUARD:return new Tc(R,i);case ge.MAT_BLOCK:return new Sc(R,i);case ge.CRAFTY_SHIELD:return new oc(R,i);case ge.NO_CRIT:return new AU(A,s,R,i);case ge.MUD_SPORT:return new Cc(A,R);case ge.WATER_SPORT:return new Uc(A,R);case ge.ION_DELUGE:return new uc(s);case ge.SPIKES:return new Dc(R,i);case ge.TOXIC_SPIKES:return new Mc(R,i);case ge.FUTURE_SIGHT:case ge.DOOM_DESIRE:return new _c(E,s,R,a,i);case ge.WISH:return new lc(A,R,i);case ge.STEALTH_ROCK:return new Pc(R,i);case ge.STICKY_WEB:return new Gc(R,i);case ge.TRICK_ROOM:return new EU(A,R);case ge.GRAVITY:return new cc(A);case ge.REFLECT:return new ic(A,R,i);case ge.LIGHT_SCREEN:return new rc(A,R,i);case ge.AURORA_VEIL:return new Lc(A,R,i);case ge.TAILWIND:return new hc(A,R,i);case ge.HAPPY_HOUR:return new Hc(A,R,i);case ge.SAFEGUARD:return new dc(A,R,i);case ge.IMPRISON:return new CJ(R,i);case ge.FIRE_GRASS_PLEDGE:return new Bc(R,i);case ge.WATER_FIRE_PLEDGE:return new gc(R,i);case ge.GRASS_WATER_PLEDGE:return new Kc(R,i);case ge.FAIRY_LOCK:return new mc(A,R);default:return null}}N(Y8,"getArenaTag");function UJ(E){const A=Y8(E.tagType,E.turnCount,E.sourceMove,E.sourceId,E.targetIndex,E.side)??new fc;return A.loadTag(E),A}N(UJ,"loadArenaTag");const Hp=class Hp{constructor(A,s){this.id=A,this.nameAppend="",this.generation=s,this.attrs=[],this.conditions=[],this.localize()}localize(){const A=O[this.id].split("_").filter(s=>s).map((s,R)=>R?`${s[0]}${s.slice(1).toLowerCase()}`:s.toLowerCase()).join("");this.name=this.id?`${u.t(`ability:${A}.name`)}${this.nameAppend}`:"",this.description=this.id?u.t(`ability:${A}.description`):""}getAttrs(A){return this.attrs.filter(s=>s instanceof A)}hasAttr(A){return this.attrs.some(s=>s instanceof A)}attr(A,...s){const R=new A(...s);return this.attrs.push(R),this}conditionalAttr(A,s,...R){const a=new s(...R);return a.addCondition(A),this.attrs.push(a),this}bypassFaint(){return this.isBypassFaint=!0,this}ignorable(){return this.isIgnorable=!0,this}condition(A){return this.conditions.push(A),this}partial(){return this.nameAppend+=" (P)",this}unimplemented(){return this.nameAppend+=" (N)",this}edgeCase(){return this}};N(Hp,"Ability");let Re=Hp;const dp=class dp{constructor(A=!0){this.showAbility=A}apply(A,s,R,a,i){return!1}getTriggerMessage(A,s,...R){return null}getCondition(){return this.extraCondition||null}addCondition(A){return this.extraCondition=A,this}};N(dp,"AbAttr");let ot=dp;const fp=class fp extends ot{apply(A,s,R,a,i){return a.value=!0,!0}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:blockRecoilDamage",{pokemonName:te(A),abilityName:s})}};N(fp,"BlockRecoilDamageAttr");let sU=fp;const Bp=class Bp extends ot{constructor(){super(!1)}apply(A,s,R,a,i){const r=i[0];return r.value=r.value/4,!0}};N(Bp,"DoubleBattleChanceAbAttr");let Ka=Bp;const gp=class gp extends ot{applyPostBattleInit(A,s,R,a){return!1}};N(gp,"PostBattleInitAbAttr");let xr=gp;const Kp=class Kp extends xr{constructor(A){super(!0),this.formFunc=A}applyPostBattleInit(A,s,R,a){return this.formFunc(A)!==A.formIndex&&!R?n.triggerPokemonFormChange(A,Zt,!1):!1}};N(Kp,"PostBattleInitFormChangeAbAttr");let KO=Kp;const mp=class mp extends xr{constructor(A,s,R){super(),this.stats=A,this.stages=s,this.selfTarget=!!R}applyPostBattleInit(A,s,R,a){var r;const i=[];if(!R){if(this.selfTarget)i.push(new zt(A.getBattlerIndex(),!0,this.stats,this.stages));else for(const L of A.getOpponents())i.push(new zt(L.getBattlerIndex(),!1,this.stats,this.stages));for(const L of i)!this.selfTarget&&!((r=L.getPokemon())!=null&&r.summonData)?n.pushPhase(L):n.unshiftPhase(L)}return!0}};N(mp,"PostBattleInitStatStageChangeAbAttr");let Qi=mp;const Fp=class Fp extends ot{applyPreDefend(A,s,R,a,i,r,L){return!1}};N(Fp,"PreDefendAbAttr");let tn=Fp;const pp=class pp extends tn{applyPreDefend(A,s,R,a,i,r,L){return A.isFullHp()&&A.getMaxHp()>1&&L[0].value>=A.hp?R||A.addTag(y.STURDY,1):!1}};N(pp,"PreDefendFullHpEndureAbAttr");let RU=pp;const Wp=class Wp extends ot{apply(A,s,R,a,i){return a.value=!0,!0}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:blockItemTheft",{pokemonNameWithAffix:te(A),abilityName:s})}};N(Wp,"BlockItemTheftAbAttr");let br=Wp;const Yp=class Yp extends ot{apply(A,s,R,a,i){return i[0].value>1?(i[0].value+=.5,!0):!1}};N(Yp,"StabBoostAbAttr");let OU=Yp;const yp=class yp extends tn{constructor(A,s){super(),this.condition=A,this.damageMultiplier=s}applyPreDefend(A,s,R,a,i,r,L){return this.condition(A,a,i)?(L[0].value=yt(L[0].value*this.damageMultiplier),!0):!1}};N(yp,"ReceivedMoveDamageMultiplierAbAttr");let NR=yp;const wp=class wp extends tn{constructor(A){super(),this.damageMultiplier=A}applyPreDefend(A,s,R,a,i,r,L){const o=L[0];return o.value=yt(o.value*this.damageMultiplier),!0}};N(wp,"AlliedFieldDamageReductionAbAttr");let nU=wp;const vp=class vp extends NR{constructor(A,s){super((R,a,i)=>a.getMoveType(i)===A,s)}};N(vp,"ReceivedTypeDamageMultiplierAbAttr");let DI=vp;const Vp=class Vp extends tn{constructor(A,s){super(),this.immuneType=A,this.condition=s??null}applyPreDefend(A,s,R,a,i,r,L){return[$E.BOTH_SIDES,$E.ENEMY_SIDE,$E.USER_SIDE].includes(i.moveTarget)?!1:a!==A&&a.getMoveType(i)===this.immuneType?(L[0].value=0,!0):!1}getImmuneType(){return this.immuneType}getCondition(){return this.condition}};N(Vp,"TypeImmunityAbAttr");let oO=Vp;const xp=class xp extends oO{constructor(A,s){super(A,s)}applyPreDefend(A,s,R,a,i,r,L){return i.category!==Pt.STATUS&&!i.hasAttr(ID)?super.applyPreDefend(A,s,R,a,i,r,L):!1}};N(xp,"AttackTypeImmunityAbAttr");let Fc=xp;const bp=class bp extends oO{constructor(A){super(A)}applyPreDefend(A,s,R,a,i,r,L){if(super.applyPreDefend(A,s,R,a,i,r,L)){if(!A.isFullHp()&&!R){const l=(s?A.getPassiveAbility():A.getAbility()).name;n.unshiftPhase(new FE(A.getBattlerIndex(),yt(A.getMaxHp()/4),u.t("abilityTriggers:typeImmunityHeal",{pokemonNameWithAffix:te(A),abilityName:l}),!0)),r.value=!0}return!0}return!1}};N(bp,"TypeImmunityHealAbAttr");let Ji=bp;const kp=class kp extends oO{constructor(A,s,R,a){super(A,a),this.stat=s,this.stages=R}applyPreDefend(A,s,R,a,i,r,L){const o=super.applyPreDefend(A,s,R,a,i,r,L);return o&&(r.value=!0,R||n.unshiftPhase(new zt(A.getBattlerIndex(),!0,[this.stat],this.stages))),o}};N(kp,"TypeImmunityStatStageChangeAbAttr");let Ua=kp;const Zp=class Zp extends oO{constructor(A,s,R,a){super(A,a),this.tagType=s,this.turnCount=R}applyPreDefend(A,s,R,a,i,r,L){const o=super.applyPreDefend(A,s,R,a,i,r,L);return o&&(r.value=!0,R||A.addTag(this.tagType,this.turnCount,void 0,A.id)),o}};N(Zp,"TypeImmunityAddBattlerTagAbAttr");let pc=Zp;const Xp=class Xp extends oO{constructor(A){super(null,A)}applyPreDefend(A,s,R,a,i,r,L){const o=L.length>0?L[0].value:A.getAttackTypeEffectiveness(a.getMoveType(i),a,void 0,void 0,i);return i instanceof g&&o<2?(r.value=!0,L[0].value=0,!0):!1}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:nonSuperEffectiveImmunity",{pokemonNameWithAffix:te(A),abilityName:s})}};N(Xp,"NonSuperEffectiveImmunityAbAttr");let Wc=Xp;const Qp=class Qp extends tn{applyPreDefend(A,s,R,a,i,r,L){const o=L[0];return!(o&&o instanceof Et)||i&&i.hasAttr(HO)?!1:A.isFullHp()&&o.value>.5?(o.value=.5,A.turnData.moveEffectiveness=.5,!0):!1}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:fullHpResistType",{pokemonNameWithAffix:te(A)})}};N(Qp,"FullHpResistTypeAbAttr");let IU=Qp;const Jp=class Jp extends ot{applyPostDefend(A,s,R,a,i,r,L){return!1}};N(Jp,"PostDefendAbAttr");let qE=Jp;const $p=class $p extends tn{applyPreDefend(A,s,R,a,i,r,L){return i.moveTarget===$E.USER||i.moveTarget===$E.NEAR_ALLY?!1:i.getPriority(a)>0&&!i.isMultiTarget()?(r.value=!0,!0):!1}};N($p,"FieldPriorityMoveImmunityAbAttr");let Sr=$p;const zp=class zp extends ot{applyPostStatStageChange(A,s,R,a,i,r){return!1}};N(zp,"PostStatStageChangeAbAttr");let aU=zp;const qp=class qp extends tn{constructor(A){super(!0),this.immuneCondition=A}applyPreDefend(A,s,R,a,i,r,L){return this.immuneCondition(A,a,i)?(r.value=!0,!0):!1}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:moveImmunity",{pokemonNameWithAffix:te(A)})}};N(qp,"MoveImmunityAbAttr");let vn=qp;const jp=class jp extends tn{applyPreDefend(A,s,R,a,i,r,L){const o=L[0];return i.category===Pt.STATUS&&o.value>=50?(o.value=50,!0):!1}};N(jp,"WonderSkinAbAttr");let iU=jp;const e5=class e5 extends vn{constructor(A,s,R){super(A),this.stat=s,this.stages=R}applyPreDefend(A,s,R,a,i,r,L){const o=super.applyPreDefend(A,s,R,a,i,r,L);return o&&!R&&n.unshiftPhase(new zt(A.getBattlerIndex(),!0,[this.stat],this.stages)),o}};N(e5,"MoveImmunityStatStageChangeAbAttr");let Yc=e5;const t5=class t5 extends qE{applyPostDefend(A,s,R,a,i,r,L){return i.hasAttr(Ys)&&!i.hitsSubstitute(a,A)?(R||n.queueMessage(u.t("abilityTriggers:reverseDrain",{pokemonNameWithAffix:te(a)})),!0):!1}};N(t5,"ReverseDrainAbAttr");let _S=t5;const A5=class A5 extends qE{constructor(A,s,R,a=!0,i=!1){super(!0),this.condition=A,this.stat=s,this.stages=R,this.selfTarget=a,this.allOthers=i}applyPostDefend(A,s,R,a,i,r,L){if(this.condition(A,a,i)&&!i.hitsSubstitute(a,A)){if(R)return!0;if(this.allOthers){const o=A.getAlly()?A.getOpponents().concat([A.getAlly()]):A.getOpponents();for(const l of o)n.unshiftPhase(new zt(l.getBattlerIndex(),!1,[this.stat],this.stages));return!0}return n.unshiftPhase(new zt((this.selfTarget?A:a).getBattlerIndex(),this.selfTarget,[this.stat],this.stages)),!0}return!1}};N(A5,"PostDefendStatStageChangeAbAttr");let XR=A5;const E5=class E5 extends qE{constructor(A,s,R,a,i=!0){super(!0),this.condition=A,this.hpGate=s,this.stats=R,this.stages=a,this.selfTarget=i}applyPostDefend(A,s,R,a,i,r,L){const o=Math.ceil(A.getMaxHp()*this.hpGate),l=A.turnData.attacksReceived[A.turnData.attacksReceived.length-1],C=(l==null?void 0:l.damage)||0;return this.condition(A,a,i)&&A.hp<=o&&A.hp+C>o&&!i.hitsSubstitute(a,A)?(R||n.unshiftPhase(new zt((this.selfTarget?A:a).getBattlerIndex(),!0,this.stats,this.stages)),!0):!1}};N(E5,"PostDefendHpGatedStatStageChangeAbAttr");let XL=E5;const s5=class s5 extends qE{constructor(A,s){super(!0),this.condition=A,this.tagType=s}applyPostDefend(A,s,R,a,i,r,L){if(this.condition(A,a,i)&&!i.hitsSubstitute(a,A)){const o=n.arena.getTag(this.tagType);if(!n.arena.getTag(this.tagType)||o.layers<o.maxLayers)return R||n.arena.addTag(this.tagType,0,void 0,A.id,A.isPlayer()?St.ENEMY:St.PLAYER),!0}return!1}};N(s5,"PostDefendApplyArenaTrapTagAbAttr");let yc=s5;const R5=class R5 extends qE{constructor(A,s){super(!0),this.condition=A,this.tagType=s}applyPostDefend(A,s,R,a,i,r,L){return this.condition(A,a,i)&&!i.hitsSubstitute(a,A)?(!A.getTag(this.tagType)&&!R&&(A.addTag(this.tagType,void 0,void 0,A.id),n.queueMessage(u.t("abilityTriggers:windPowerCharged",{pokemonName:te(A),moveName:i.name}))),!0):!1}};N(R5,"PostDefendApplyBattlerTagAbAttr");let rU=R5;const O5=class O5 extends qE{applyPostDefend(A,s,R,a,i,r,L){if(r<vt.NO_EFFECT&&!i.hitsSubstitute(a,A)){if(R)return!0;const o=a.getMoveType(i),l=A.getTypes(!0);if(l.length!==1||l[0]!==o)return A.summonData.types=[o],!0}return!1}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:postDefendTypeChange",{pokemonNameWithAffix:te(A),abilityName:s,typeName:u.t(`pokemonInfo:Type.${I[A.getTypes(!0)[0]]}`)})}};N(O5,"PostDefendTypeChangeAbAttr");let wc=O5;const n5=class n5 extends qE{constructor(A){super(),this.terrainType=A}applyPostDefend(A,s,R,a,i,r,L){var o;return r<vt.NO_EFFECT&&!i.hitsSubstitute(a,A)?R?((o=n.arena.terrain)==null?void 0:o.terrainType)!==(this.terrainType||void 0):n.arena.trySetTerrain(this.terrainType,!0):!1}};N(n5,"PostDefendTerrainChangeAbAttr");let vc=n5;const I5=class I5 extends qE{constructor(A,...s){super(),this.chance=A,this.effects=s}applyPostDefend(A,s,R,a,i,r,L){if(i.checkFlag(tA.MAKES_CONTACT,a,A)&&!a.status&&(this.chance===-1||A.randSeedInt(100)<this.chance)&&!i.hitsSubstitute(a,A)){const o=this.effects.length===1?this.effects[0]:this.effects[A.randSeedInt(this.effects.length)];return R?a.canSetStatus(o,!0,!1,A):a.trySetStatus(o,!0,A)}return!1}};N(I5,"PostDefendContactApplyStatusEffectAbAttr");let or=I5;const a5=class a5 extends or{constructor(){super(10,ne.POISON,ne.PARALYSIS,ne.SLEEP)}applyPostDefend(A,s,R,a,i,r,L){return a.hasAbility(O.OVERCOAT)||a.isOfType(I.GRASS)?!1:super.applyPostDefend(A,s,R,a,i,r,L)}};N(a5,"EffectSporeAbAttr");let Vc=a5;const i5=class i5 extends qE{constructor(A,s,R){super(),this.tagType=s,this.chance=A,this.turnCount=R}applyPostDefend(A,s,R,a,i,r,L){return i.checkFlag(tA.MAKES_CONTACT,a,A)&&A.randSeedInt(100)<this.chance&&!i.hitsSubstitute(a,A)?R?a.canAddTag(this.tagType):a.addTag(this.tagType,this.turnCount,i.id,a.id):!1}};N(i5,"PostDefendContactApplyTagChanceAbAttr");let xc=i5;const r5=class r5 extends qE{constructor(A,s){super(),this.stat=A,this.stages=s}applyPostDefend(A,s,R,a,i,r,L){return i.hitsSubstitute(a,A)?!1:(R||n.unshiftPhase(new zt(A.getBattlerIndex(),!0,[this.stat],this.stages)),!0)}getCondition(){return A=>A.turnData.attacksReceived.length!==0&&A.turnData.attacksReceived[A.turnData.attacksReceived.length-1].critical}};N(r5,"PostDefendCritStatStageChangeAbAttr");let bc=r5;const L5=class L5 extends qE{constructor(A){super(),this.damageRatio=A}applyPostDefend(A,s,R,a,i,r,L){return!R&&i.checkFlag(tA.MAKES_CONTACT,a,A)&&!a.hasAbilityWithAttr(ME)&&!i.hitsSubstitute(a,A)?(a.damageAndUpdate(yt(a.getMaxHp()*(1/this.damageRatio)),vt.OTHER),a.turnData.damageTaken+=yt(a.getMaxHp()*(1/this.damageRatio)),!0):!1}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:postDefendContactDamage",{pokemonNameWithAffix:te(A),abilityName:s})}};N(L5,"PostDefendContactDamageAbAttr");let LU=L5;const N5=class N5 extends qE{constructor(A){super(),this.turns=A}applyPostDefend(A,s,R,a,i,r,L){return i.checkFlag(tA.MAKES_CONTACT,a,A)&&!i.hitsSubstitute(a,A)?A.getTag(y.PERISH_SONG)||a.getTag(y.PERISH_SONG)?!1:(R||(a.addTag(y.PERISH_SONG,this.turns),A.addTag(y.PERISH_SONG,this.turns)),!0):!1}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:perishBody",{pokemonName:te(A),abilityName:s})}};N(N5,"PostDefendPerishSongAbAttr");let kc=N5;const T5=class T5 extends qE{constructor(A,s){super(),this.weatherType=A,this.condition=s}applyPostDefend(A,s,R,a,i,r,L){var o,l;return this.condition&&!this.condition(A,a,i)||i.hitsSubstitute(a,A)||(o=n.arena.weather)!=null&&o.isImmutable()?!1:R?((l=n.arena.weather)==null?void 0:l.weatherType)!==this.weatherType:n.arena.trySetWeather(this.weatherType,!0)}};N(T5,"PostDefendWeatherChangeAbAttr");let Zc=T5;const S5=class S5 extends qE{constructor(){super()}applyPostDefend(A,s,R,a,i,r,L){if(i.checkFlag(tA.MAKES_CONTACT,a,A)&&!a.getAbility().hasAttr(uA)&&!i.hitsSubstitute(a,A)){if(!R){const o=a.getAbility().id;a.summonData.ability=A.getAbility().id,A.summonData.ability=o}return!0}return!1}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:postDefendAbilitySwap",{pokemonNameWithAffix:te(A)})}};N(S5,"PostDefendAbilitySwapAbAttr");let Xc=S5;const rM=class rM extends qE{constructor(A){super(),this.ability=A}applyPostDefend(A,s,R,a,i,r,L){return i.checkFlag(tA.MAKES_CONTACT,a,A)&&!a.getAbility().hasAttr(LE)&&!a.getAbility().hasAttr(rM)&&!i.hitsSubstitute(a,A)?(R||(a.summonData.ability=this.ability),!0):!1}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:postDefendAbilityGive",{pokemonNameWithAffix:te(A),abilityName:s})}};N(rM,"PostDefendAbilityGiveAbAttr");let NU=rM;const o5=class o5 extends qE{constructor(A){super(),this.chance=A}applyPostDefend(A,s,R,a,i,r,L){return a.getTag(y.DISABLED)===null&&!i.hitsSubstitute(a,A)&&i.checkFlag(tA.MAKES_CONTACT,a,A)&&(this.chance===-1||A.randSeedInt(100)<this.chance)?(R||(this.attacker=a,this.move=i,this.attacker.addTag(y.DISABLED,4,0,A.id)),!0):!1}};N(o5,"PostDefendMoveDisableAbAttr");let Qc=o5;const l5=class l5 extends aU{constructor(A,s,R){super(!0),this.condition=A,this.statsToChange=s,this.stages=R}applyPostStatStageChange(A,s,R,a,i,r){return this.condition(A,R,a)&&!i?(s||n.unshiftPhase(new zt(A.getBattlerIndex(),!0,this.statsToChange,this.stages)),!0):!1}};N(l5,"PostStatStageChangeStatStageChangeAbAttr");let TU=l5;const C5=class C5 extends ot{applyPreAttack(A,s,R,a,i,r){return!1}};N(C5,"PreAttackAbAttr");let ii=C5;const U5=class U5 extends ot{constructor(A){super(!0),this.chanceMultiplier=A}apply(A,s,R,a,i){this.showAbility=i[4];const r=[t.ORDER_UP,t.ELECTRO_SHOT];return i[0].value<=0||r.includes(i[1].id)?!1:(i[0].value*=this.chanceMultiplier,i[0].value=Math.min(i[0].value,100),!0)}};N(U5,"MoveEffectChanceMultiplierAbAttr");let PS=U5;const u5=class u5 extends tn{applyPreDefend(A,s,R,a,i,r,L){return L[0].value<=0?!1:(L[0].value=0,!0)}};N(u5,"IgnoreMoveEffectsAbAttr");let XI=u5;const D5=class D5 extends ii{applyPreAttack(A,s,R,a,i,r){return!1}};N(D5,"VariableMovePowerAbAttr");let GS=D5;const M5=class M5 extends ot{apply(A,s,R,a,i){return a.value=!0,!0}};N(M5,"FieldPreventExplosiveMovesAbAttr");let cS=M5;const LM=class LM extends ot{constructor(A,s,R=!1){super(!1),this.stat=A,this.multiplier=s,this.canStack=R}applyFieldStat(A,s,R,a,i,r,L,o){return!this.canStack&&L.value?!1:this.stat===a&&r.getAbilityAttrs(LM).every(l=>l.stat!==a)?(i.value*=this.multiplier,L.value=!0,!0):!1}};N(LM,"FieldMultiplyStatAbAttr");let ma=LM;const _5=class _5 extends ii{constructor(A,s,R){super(!0),this.newType=A,this.powerMultiplier=s,this.condition=R}applyPreAttack(A,s,R,a,i,r){return this.condition&&this.condition(A,a,i)?(r[0]&&r[0]instanceof Et&&(r[0].value=this.newType),r[1]&&r[1]instanceof Et&&(r[1].value*=this.powerMultiplier),!0):!1}};N(_5,"MoveTypeChangeAbAttr");let Tn=_5;const P5=class P5 extends ii{constructor(){super(!0)}applyPreAttack(A,s,R,a,i,r){if(!A.isTerastallized()&&i.id!==t.STRUGGLE&&!i.findAttr(L=>L instanceof Eo||L instanceof CD||L instanceof UD||L instanceof AL)){const L=A.getMoveType(i);if(A.getTypes().some(o=>o!==L))return R||(this.moveType=L,A.summonData.types=[L],A.updateInfo()),!0}return!1}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:pokemonTypeChange",{pokemonNameWithAffix:te(A),moveType:u.t(`pokemonInfo:Type.${I[this.moveType]}`)})}};N(P5,"PokemonTypeChangeAbAttr");let Qa=P5;const G5=class G5 extends ii{constructor(A){super(!1),this.damageMultiplier=A}applyPreAttack(A,s,R,a,i,r){const L=r[0],o=r[1];return i.canBeMultiStrikeEnhanced(A,!0)?(this.showAbility=!!(L!=null&&L.value),L!=null&&L.value&&(L.value+=1),o!=null&&o.value&&A.turnData.hitsLeft===1&&(o.value=this.damageMultiplier),!0):!1}};N(G5,"AddSecondStrikeAbAttr");let hS=G5;const c5=class c5 extends ii{constructor(A,s){super(!0),this.damageMultiplier=A,this.condition=s}applyPreAttack(A,s,R,a,i,r){if(this.condition(A,a,i)){const L=r[0];return L.value=Math.floor(L.value*this.damageMultiplier),!0}return!1}};N(c5,"DamageBoostAbAttr");let SU=c5;const h5=class h5 extends GS{constructor(A,s,R=!0){super(R),this.condition=A,this.powerMultiplier=s}applyPreAttack(A,s,R,a,i,r){return this.condition(A,a,i)?(r[0].value*=this.powerMultiplier,!0):!1}};N(h5,"MovePowerBoostAbAttr");let Rs=h5;const H5=class H5 extends Rs{constructor(A,s){super((R,a,i)=>(R==null?void 0:R.getMoveType(i))===A,s||1.5)}};N(H5,"MoveTypePowerBoostAbAttr");let YO=H5;const d5=class d5 extends YO{constructor(A){super(A)}getCondition(){return A=>A.getHpRatio()<=.33}};N(d5,"LowHpMoveTypePowerBoostAbAttr");let $i=d5;const f5=class f5 extends GS{constructor(A,s=!0){super(s),this.mult=A}applyPreAttack(A,s,R,a,i,r){const L=this.mult(A,a,i);return L!==1?(r[0].value*=L,!0):!1}};N(f5,"VariableMovePowerBoostAbAttr");let Jc=f5;const B5=class B5 extends ot{constructor(A,s){super(!1),this.condition=A,this.powerMultiplier=s}applyPreAttack(A,s,R,a,i,r){return this.condition(A,a,i)?(r[0].value*=this.powerMultiplier,!0):!1}};N(B5,"FieldMovePowerBoostAbAttr");let oU=B5;const g5=class g5 extends oU{constructor(A,s){super((R,a,i)=>(R==null?void 0:R.getMoveType(i))===A,s||1.5)}};N(g5,"PreAttackFieldMoveTypePowerBoostAbAttr");let lU=g5;const K5=class K5 extends lU{};N(K5,"FieldMoveTypePowerBoostAbAttr");let Fa=K5;const m5=class m5 extends lU{};N(m5,"UserFieldMoveTypePowerBoostAbAttr");let CU=m5;const F5=class F5 extends oU{constructor(A,s){super((R,a,i)=>A.includes(i.category),s)}};N(F5,"AllyMoveCategoryPowerBoostAbAttr");let HS=F5;const p5=class p5 extends ot{constructor(A,s,R){super(!1),this.stat=A,this.multiplier=s,this.condition=R??null}applyStatStage(A,s,R,a,i,r){const L=r[0];return a===this.stat&&(!this.condition||this.condition(A,null,L))?(i.value*=this.multiplier,!0):!1}};N(p5,"StatMultiplierAbAttr");let fA=p5;const W5=class W5 extends ot{constructor(A=(R,a,i)=>i.category!==Pt.STATUS,s=!0){super(s),this.attackCondition=A}applyPostAttack(A,s,R,a,i,r,L){return this.attackCondition(A,a,i)?this.applyPostAttackAfterMoveTypeCheck(A,s,R,a,i,r,L):!1}applyPostAttackAfterMoveTypeCheck(A,s,R,a,i,r,L){return!1}};N(W5,"PostAttackAbAttr");let QI=W5;const Y5=class Y5 extends QI{constructor(){super((A,s,R)=>!0,!1)}applyPostAttackAfterMoveTypeCheck(A,s,R,a,i,r,L){return R||(A.getTag(y.GORILLA_TACTICS)?!1:(A.addTag(y.GORILLA_TACTICS),!0))}};N(Y5,"GorillaTacticsAbAttr");let $c=Y5;const y5=class y5 extends QI{constructor(A){super(),this.stealCondition=A??null}applyPostAttackAfterMoveTypeCheck(A,s,R,a,i,r,L){return new Promise(o=>{if(!R&&r<vt.NO_EFFECT&&(!this.stealCondition||this.stealCondition(A,a,i))){const l=this.getTargetHeldItems(a).filter(C=>C.isTransferable);if(l.length){const C=l[A.randSeedInt(l.length)];n.tryTransferHeldItemModifier(C,A,!1).then(M=>{M&&n.queueMessage(u.t("abilityTriggers:postAttackStealHeldItem",{pokemonNameWithAffix:te(A),defenderName:a.name,stolenItemType:C.type.name})),o(M)});return}}o(R)})}getTargetHeldItems(A){return n.findModifiers(s=>s instanceof dt&&s.pokemonId===A.id,A.isPlayer())}};N(y5,"PostAttackStealHeldItemAbAttr");let zc=y5;const w5=class w5 extends QI{constructor(A,s,...R){super(),this.contactRequired=A,this.chance=s,this.effects=R}applyPostAttackAfterMoveTypeCheck(A,s,R,a,i,r,L){if(A!==a&&i.hitsSubstitute(a,A))return!1;if(!a.hasAbilityWithAttr(XI)&&!R&&A!==a&&(!this.contactRequired||i.checkFlag(tA.MAKES_CONTACT,a,A))&&A.randSeedInt(100)<this.chance&&!A.status){const o=this.effects.length===1?this.effects[0]:this.effects[A.randSeedInt(this.effects.length)];return a.trySetStatus(o,!0,A)}return R}};N(w5,"PostAttackApplyStatusEffectAbAttr");let UU=w5;const v5=class v5 extends UU{constructor(A,...s){super(!0,A,...s)}};N(v5,"PostAttackContactApplyStatusEffectAbAttr");let qc=v5;const V5=class V5 extends QI{constructor(A,s,...R){super(),this.contactRequired=A,this.chance=s,this.effects=R}applyPostAttackAfterMoveTypeCheck(A,s,R,a,i,r,L){if(!a.hasAbilityWithAttr(XI)&&A!==a&&(!this.contactRequired||i.checkFlag(tA.MAKES_CONTACT,a,A))&&A.randSeedInt(100)<this.chance(a,A,i)&&!A.status){const o=this.effects.length===1?this.effects[0]:this.effects[A.randSeedInt(this.effects.length)];return R||a.addTag(o)}return!1}};N(V5,"PostAttackApplyBattlerTagAbAttr");let jc=V5;const x5=class x5 extends qE{constructor(A){super(),this.condition=A}applyPostDefend(A,s,R,a,i,r,L){return new Promise(o=>{if(!R&&r<vt.NO_EFFECT&&(!this.condition||this.condition(A,a,i))&&!i.hitsSubstitute(a,A)){const l=this.getTargetHeldItems(a).filter(C=>C.isTransferable);if(l.length){const C=l[A.randSeedInt(l.length)];n.tryTransferHeldItemModifier(C,A,!1).then(M=>{M&&n.queueMessage(u.t("abilityTriggers:postDefendStealHeldItem",{pokemonNameWithAffix:te(A),attackerName:a.name,stolenItemType:C.type.name})),o(M)});return}}o(R)})}getTargetHeldItems(A){return n.findModifiers(s=>s instanceof dt&&s.pokemonId===A.id,A.isPlayer())}};N(x5,"PostDefendStealHeldItemAbAttr");let eh=x5;const b5=class b5 extends ot{applyPostSetStatus(A,s=null,R,a,i,r){return!1}};N(b5,"PostSetStatusAbAttr");let uU=b5;const k5=class k5 extends uU{applyPostSetStatus(A,s=null,R,a,i,r){const L=new Set([ne.BURN,ne.PARALYSIS,ne.POISON,ne.TOXIC]);return s&&L.has(a)?(i||s.trySetStatus(a,!0,A),!0):!1}};N(k5,"SynchronizeStatusAbAttr");let th=k5;const Z5=class Z5 extends ot{applyPostVictory(A,s,R,a){return!1}};N(Z5,"PostVictoryAbAttr");let dS=Z5;const X5=class X5 extends dS{constructor(A,s){super(),this.stat=A,this.stages=s}applyPostVictory(A,s,R,a){const i=typeof this.stat=="function"?this.stat(A):this.stat;return R||n.unshiftPhase(new zt(A.getBattlerIndex(),!0,[i],this.stages)),!0}};N(X5,"PostVictoryStatStageChangeAbAttr");let MI=X5;const Q5=class Q5 extends dS{constructor(A){super(!0),this.formFunc=A}applyPostVictory(A,s,R,a){return this.formFunc(A)!==A.formIndex?(R||n.triggerPokemonFormChange(A,Zt,!1),!0):!1}};N(Q5,"PostVictoryFormChangeAbAttr");let Ah=Q5;const J5=class J5 extends ot{applyPostKnockOut(A,s,R,a,i){return!1}};N(J5,"PostKnockOutAbAttr");let fS=J5;const $5=class $5 extends fS{constructor(A,s){super(),this.stat=A,this.stages=s}applyPostKnockOut(A,s,R,a,i){const r=typeof this.stat=="function"?this.stat(A):this.stat;return R||n.unshiftPhase(new zt(A.getBattlerIndex(),!0,[r],this.stages)),!0}};N($5,"PostKnockOutStatStageChangeAbAttr");let Eh=$5;const z5=class z5 extends fS{constructor(){super()}applyPostKnockOut(A,s,R,a,i){return A.isPlayer()===a.isPlayer()&&!a.getAbility().hasAttr(sA)?(R||(A.summonData.ability=a.getAbility().id,n.queueMessage(u.t("abilityTriggers:copyFaintedAllyAbility",{pokemonNameWithAffix:te(a),abilityName:NE[a.getAbility().id].name}))),!0):!1}};N(z5,"CopyFaintedAllyAbilityAbAttr");let DU=z5;const q5=class q5 extends ot{constructor(A){super(!1),this.stats=A??dO}apply(A,s,R,a,i){return this.stats.includes(i[0])?(i[1].value=!0,!0):!1}};N(q5,"IgnoreOpponentStatStagesAbAttr");let yI=q5;const j5=class j5 extends ot{constructor(){super(!1)}apply(A,s,R,a,i){return a.value=!0,!0}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:intimidateImmunity",{pokemonNameWithAffix:te(A),abilityName:s})}};N(j5,"IntimidateImmunityAbAttr");let pa=j5;const eW=class eW extends ot{constructor(A,s,R){super(!0),this.stats=A,this.stages=s,this.overwrites=!!R}apply(A,s,R,a,i){return R||n.pushPhase(new zt(A.getBattlerIndex(),!1,this.stats,this.stages)),a.value=this.overwrites,!0}};N(eW,"PostIntimidateStatStageChangeAbAttr");let BS=eW;const tW=class tW extends ot{applyPostSummon(A,s,R,a){return!1}};N(tW,"PostSummonAbAttr");let fE=tW;const AW=class AW extends fE{constructor(A){super(!0),this.arenaTags=A}applyPostSummon(A,s,R,a){if(!R)for(const i of this.arenaTags)n.arena.removeTag(i);return!0}};N(AW,"PostSummonRemoveArenaTagAbAttr");let sh=AW;const EW=class EW extends fE{constructor(A){super(!0),this.messageFunc=A}applyPostSummon(A,s,R,a){return R||n.queueMessage(this.messageFunc(A)),!0}};N(EW,"PostSummonMessageAbAttr");let Fs=EW;const sW=class sW extends fE{constructor(A){super(!0),this.message=A}applyPostSummon(A,s,R,a){return R||n.queueMessage(this.message),!0}};N(sW,"PostSummonUnnamedMessageAbAttr");let MU=sW;const RW=class RW extends fE{constructor(A,s,R){super(R),this.tagType=A,this.turnCount=s}applyPostSummon(A,s,R,a){return R?A.canAddTag(this.tagType):A.addTag(this.tagType,this.turnCount)}};N(RW,"PostSummonAddBattlerTagAbAttr");let Fn=RW;const OW=class OW extends fE{constructor(A,s,R,a){super(!1),this.stats=A,this.stages=s,this.selfTarget=!!R,this.intimidate=!!a}applyPostSummon(A,s,R,a){if(R)return!0;if(Z1(A,s),this.selfTarget)return n.unshiftPhase(new zt(A.getBattlerIndex(),!0,this.stats,this.stages)),!0;for(const i of A.getOpponents()){const r=new Lt(!1);this.intimidate&&(ut(pa,i,r,R),ut(BS,i,r,R),i.getTag(y.SUBSTITUTE)&&(r.value=!0)),r.value||n.unshiftPhase(new zt(i.getBattlerIndex(),!1,this.stats,this.stages))}return!0}};N(OW,"PostSummonStatStageChangeAbAttr");let Wa=OW;const nW=class nW extends fE{constructor(A,s=!1){super(),this.healRatio=A||4,this.showAnim=s}applyPostSummon(A,s,R,a){const i=A.getAlly();return i!=null&&i.isActive(!0)?(R||n.unshiftPhase(new FE(i.getBattlerIndex(),yt(A.getMaxHp()/this.healRatio),u.t("abilityTriggers:postSummonAllyHeal",{pokemonNameWithAffix:te(i),pokemonName:A.name}),!0,!this.showAnim)),!0):!1}};N(nW,"PostSummonAllyHealAbAttr");let Rh=nW;const IW=class IW extends fE{constructor(){super()}applyPostSummon(A,s,R,a){const i=A.getAlly();if(i!=null&&i.isActive(!0)){if(!R){for(const r of dO)i.setStatStage(r,0);n.queueMessage(u.t("abilityTriggers:postSummonClearAllyStats",{pokemonNameWithAffix:te(i)}))}return!0}return!1}};N(IW,"PostSummonClearAllyStatStagesAbAttr");let Oh=IW;const aW=class aW extends fE{applyPostSummon(A,s,R,a){this.enemyDef=0,this.enemySpDef=0,this.enemyCountTally=0;for(const i of A.getOpponents())this.enemyCountTally++,this.enemyDef+=i.getEffectiveStat(K.DEF),this.enemySpDef+=i.getEffectiveStat(K.SPDEF);return this.enemyDef=Math.round(this.enemyDef/this.enemyCountTally),this.enemySpDef=Math.round(this.enemySpDef/this.enemyCountTally),this.enemyDef<this.enemySpDef?this.stats=[K.ATK]:this.stats=[K.SPATK],this.enemyDef>0&&this.enemySpDef>0?(R||n.unshiftPhase(new zt(A.getBattlerIndex(),!1,this.stats,1)),!0):!1}};N(aW,"DownloadAbAttr");let nh=aW;const iW=class iW extends fE{constructor(A){super(),this.weatherType=A}applyPostSummon(A,s,R,a){var i,r;return this.weatherType===Oe.HEAVY_RAIN||this.weatherType===Oe.HARSH_SUN||this.weatherType===Oe.STRONG_WINDS||!((i=n.arena.weather)!=null&&i.isImmutable())?R?((r=n.arena.weather)==null?void 0:r.weatherType)!==this.weatherType:n.arena.trySetWeather(this.weatherType,!0):!1}};N(iW,"PostSummonWeatherChangeAbAttr");let On=iW;const rW=class rW extends fE{constructor(A){super(),this.terrainType=A}applyPostSummon(A,s,R,a){var i;return R?((i=n.arena.terrain)==null?void 0:i.terrainType)!==this.terrainType:n.arena.trySetTerrain(this.terrainType,!0)}};N(rW,"PostSummonTerrainChangeAbAttr");let ua=rW;const LW=class LW extends fE{constructor(A){super(!0),this.formFunc=A}applyPostSummon(A,s,R,a){return this.formFunc(A)!==A.formIndex?R||n.triggerPokemonFormChange(A,Zt,!1):!1}};N(LW,"PostSummonFormChangeAbAttr");let _I=LW;const NW=class NW extends fE{applyPostSummon(A,s,R,a){const i=A.getOpponents();if(!i.length)return!1;let r;return i.length>1?n.executeWithSeedOffset(()=>r=IE(i),n.currentBattle.waveIndex):r=i[0],r.getAbility().hasAttr(sA)&&!(A.hasAbility(O.TRACE)&&r.getAbility().id===O.WONDER_GUARD)?!1:(R||(this.target=r,this.targetAbilityName=NE[r.getAbility().id].name,A.summonData.ability=r.getAbility().id,v8(r),A.updateInfo()),!0)}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:trace",{pokemonName:te(A),targetName:te(this.target),abilityName:this.targetAbilityName})}};N(NW,"PostSummonCopyAbilityAbAttr");let Ih=NW;const TW=class TW extends fE{constructor(...A){super(!1),this.statusEffect=A}applyPostSummon(A,s,R,a){const r=(A instanceof vE?n.getPlayerField():n.getEnemyField()).filter(L=>L.isAllowedInBattle());if(r.length<1)return!1;if(!R)for(const L of r)L.status&&this.statusEffect.includes(L.status.effect)&&(n.queueMessage(La(L.status.effect,te(L))),L.resetStatus(!1),L.updateInfo());return!0}};N(TW,"PostSummonUserFieldRemoveStatusEffectAbAttr");let ah=TW;const SW=class SW extends fE{applyPostSummon(A,s,R,a){if(!n.currentBattle.double)return!1;const i=A.getAlly();if(!i||i.getStatStages().every(r=>r===0))return!1;if(!R){for(const r of dO)A.setStatStage(r,i.getStatStage(r));A.updateInfo()}return!0}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:costar",{pokemonName:te(A),allyName:te(A.getAlly())})}};N(SW,"PostSummonCopyAllyStatsAbAttr");let ih=SW;const oW=class oW extends fE{constructor(){super(!0)}async applyPostSummon(A,s,R,a){const i=A.getOpponents();if(R||!i.length)return R;const r=[];let L;if(i.length>1?n.executeWithSeedOffset(()=>{if(i[0].fusionSpecies){L=i[1];return}else if(i[1].fusionSpecies){L=i[0];return}L=IE(i)},n.currentBattle.waveIndex):L=i[0],L=L,L.fusionSpecies||A.fusionSpecies)return!1;A.summonData.speciesForm=L.getSpeciesForm(),A.summonData.ability=L.getAbility().id,A.summonData.gender=L.getGender();for(const o of zn)A.setStat(o,L.getStat(o,!1),!1);for(const o of dO)A.setStatStage(o,L.getStatStage(o));return A.summonData.moveset=L.getMoveset().map(o=>o?new nt(o.moveId,0,0,!1,Math.min(o.getMove().pp,5)):(console.warn(`Imposter: somehow iterating over a ${o} value when copying moveset!`),new nt(t.NONE))),A.summonData.types=L.getTypes(),r.push(A.updateInfo()),n.queueMessage(u.t("abilityTriggers:postSummonTransform",{pokemonNameWithAffix:te(A),targetName:L.name})),n.playSound("battle_anims/PRSFX- Transform"),r.push(A.loadAssets(!1).then(()=>{A.playAnim(),A.updateInfo()})),await Promise.all(r),!0}};N(oW,"PostSummonTransformAbAttr");let rh=oW;const lW=class lW extends fE{applyPostSummon(A,s,R,a){return V8().length<1?!1:(R||n.arena.triggerWeatherBasedFormChangesToNormal(),!0)}};N(lW,"PostSummonWeatherSuppressedFormChangeAbAttr");let _U=lW;const CW=class CW extends fE{constructor(A){super(!1),this.ability=A}applyPostSummon(A,s,R,a){const i=A.species.speciesId===e.CASTFORM&&this.ability===O.FORECAST,r=A.species.speciesId===e.CHERRIM&&this.ability===O.FLOWER_GIFT;return i||r?R||(n.triggerPokemonFormChange(A,mR),n.triggerPokemonFormChange(A,xn),Z1(A,s),!0):!1}};N(CW,"PostSummonFormChangeByWeatherAbAttr");let PU=CW;const UW=class UW extends ot{constructor(){super(!0)}apply(A,s,R,a,i){var r,L;return(r=n.currentBattle)!=null&&r.double&&((L=A.getAlly())==null?void 0:L.species.speciesId)===e.DONDOZO?A.getAlly().isFainted()||A.getAlly().getTag(y.COMMANDED)?!1:(R||(A.lapseTags(JE.MOVE_EFFECT),n.triggerPokemonBattleAnim(A,pR.COMMANDER_APPLY),A.getAlly().addTag(y.COMMANDED,0,t.NONE,A.id),n.tryRemovePhase(o=>o instanceof wA&&o.pokemon===A)),!0):!1}};N(UW,"CommanderAbAttr");let kr=UW;const uW=class uW extends ot{constructor(){super(!0)}applyPreSwitchOut(A,s,R,a){return!1}};N(uW,"PreSwitchOutAbAttr");let ri=uW;const DW=class DW extends ri{applyPreSwitchOut(A,s,R,a){return A.status?(R||(A.resetStatus(),A.updateInfo()),!0):!1}};N(DW,"PreSwitchOutResetStatusAbAttr");let Lh=DW;const MW=class MW extends ri{applyPreSwitchOut(A,s,R,a){var L;const i=(L=n.arena.weather)==null?void 0:L.weatherType;let r=!1;switch(i){case Oe.HARSH_SUN:A.hasAbility(O.DESOLATE_LAND)&&n.getField(!0).filter(o=>o!==A).filter(o=>o.hasAbility(O.DESOLATE_LAND)).length===0&&(r=!0);break;case Oe.HEAVY_RAIN:A.hasAbility(O.PRIMORDIAL_SEA)&&n.getField(!0).filter(o=>o!==A).filter(o=>o.hasAbility(O.PRIMORDIAL_SEA)).length===0&&(r=!0);break;case Oe.STRONG_WINDS:A.hasAbility(O.DELTA_STREAM)&&n.getField(!0).filter(o=>o!==A).filter(o=>o.hasAbility(O.DELTA_STREAM)).length===0&&(r=!0);break}return R?r:r?(n.arena.trySetWeather(Oe.NONE,!1),!0):!1}};N(MW,"PreSwitchOutClearWeatherAbAttr");let QL=MW;const _W=class _W extends ri{applyPreSwitchOut(A,s,R,a){if(!A.isFullHp()){if(!R){const i=yt(A.getMaxHp()*.33);A.heal(i),A.updateInfo()}return!0}return!1}};N(_W,"PreSwitchOutHealAbAttr");let Nh=_W;const PW=class PW extends ri{constructor(A){super(),this.formFunc=A}applyPreSwitchOut(A,s,R,a){return this.formFunc(A)!==A.formIndex?(R||n.triggerPokemonFormChange(A,Zt,!1),!0):!1}};N(PW,"PreSwitchOutFormChangeAbAttr");let Th=PW;const GW=class GW extends ot{applyPreStatStageChange(A,s,R,a,i,r){return!1}};N(GW,"PreStatStageChangeAbAttr");let Sh=GW;const cW=class cW extends Sh{constructor(A){super(),this.protectedStat=A}applyPreStatStageChange(A,s,R,a,i,r){return ve(this.protectedStat)||a===this.protectedStat?(i.value=!0,!0):!1}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:protectStat",{pokemonNameWithAffix:te(A),abilityName:s,statName:this.protectedStat?u.t(hE(this.protectedStat)):u.t("battle:stats")})}};N(cW,"ProtectStatAbAttr");let zR=cW;const hW=class hW extends QI{constructor(...A){super((s,R,a)=>!0),this.effects=A}applyPostAttackAfterMoveTypeCheck(A,s,R,a,i,r,L){return this.effects.indexOf(L[0])>-1&&!a.isFainted()?R?a.canAddTag(y.CONFUSED):a.addTag(y.CONFUSED,A.randSeedIntRange(2,5),i.id,a.id):!1}};N(hW,"ConfusionOnStatusEffectAbAttr");let GU=hW;const HW=class HW extends ot{applyPreSetStatus(A,s,R,a,i,r){return!1}};N(HW,"PreSetStatusAbAttr");let oh=HW;const dW=class dW extends oh{constructor(...A){super(),this.immuneEffects=A}applyPreSetStatus(A,s,R,a,i,r){return this.immuneEffects.length<1||this.immuneEffects.includes(a)?(i.value=!0,!0):!1}getTriggerMessage(A,s,...R){return this.immuneEffects.length?u.t("abilityTriggers:statusEffectImmunityWithName",{pokemonNameWithAffix:te(A),abilityName:s,statusEffectName:F6(R[0])}):u.t("abilityTriggers:statusEffectImmunity",{pokemonNameWithAffix:te(A),abilityName:s})}};N(dW,"PreSetStatusEffectImmunityAbAttr");let cU=dW;const fW=class fW extends cU{};N(fW,"StatusEffectImmunityAbAttr");let gR=fW;const BW=class BW extends cU{};N(BW,"UserFieldStatusEffectImmunityAbAttr");let gS=BW;const gW=class gW extends ot{applyPreApplyBattlerTag(A,s,R,a,i,r){return!1}};N(gW,"PreApplyBattlerTagAbAttr");let lh=gW;const KW=class KW extends lh{constructor(A){super(),this.immuneTagTypes=Array.isArray(A)?A:[A]}applyPreApplyBattlerTag(A,s,R,a,i,r){return this.immuneTagTypes.includes(a.tagType)?(i.value=!0,R||(this.battlerTag=a),!0):!1}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:battlerTagImmunity",{pokemonNameWithAffix:te(A),abilityName:s,battlerTagName:this.battlerTag.getDescriptor()})}};N(KW,"PreApplyBattlerTagImmunityAbAttr");let hU=KW;const mW=class mW extends hU{};N(mW,"BattlerTagImmunityAbAttr");let Sn=mW;const FW=class FW extends hU{};N(FW,"UserFieldBattlerTagImmunityAbAttr");let Zr=FW;const pW=class pW extends ot{apply(A,s,R,a,i){return i[0].value=!0,!0}};N(pW,"BlockCritAbAttr");let KS=pW;const WW=class WW extends ot{apply(A,s,R,a,i){return i[0].value=!0,!0}};N(WW,"BonusCritAbAttr");let HU=WW;const YW=class YW extends ot{constructor(A){super(!0),this.multAmount=A}apply(A,s,R,a,i){const r=i[0];return r.value>1?(r.value*=this.multAmount,!0):!1}};N(YW,"MultCritAbAttr");let dU=YW;const yW=class yW extends ot{constructor(A,s){super(),this.condition=A}apply(A,s,R,a,i){const r=i[1],L=i[2];return this.condition(A,r,L)?(i[0].value=!0,!0):!1}};N(yW,"ConditionalCritAbAttr");let fU=yW;const wW=class wW extends ot{apply(A,s,R,a,i){return a.value=!0,!0}};N(wW,"BlockNonDirectDamageAbAttr");let ME=wW;const vW=class vW extends ot{constructor(...A){super(!1),this.effects=A}apply(A,s,R,a,i){return A.status&&this.effects.includes(A.status.effect)?(a.value=!0,!0):!1}};N(vW,"BlockStatusDamageAbAttr");let BU=vW;const VW=class VW extends ot{apply(A,s,R,a,i){return a.value=!0,!0}};N(VW,"BlockOneHitKOAbAttr");let gU=VW;const xW=class xW extends ot{constructor(A,s){super(!0),this.moveFunc=A,this.changeAmount=s}apply(A,s,R,a,i){return this.moveFunc(A,i[0])?(i[1].value+=this.changeAmount,!0):!1}};N(xW,"ChangeMovePriorityAbAttr");let gI=xW;const bW=class bW extends ot{};N(bW,"IgnoreContactAbAttr");let KU=bW;const kW=class kW extends ot{applyPreWeatherEffect(A,s,R,a,i,r){return!1}};N(kW,"PreWeatherEffectAbAttr");let mU=kW;const ZW=class ZW extends mU{};N(ZW,"PreWeatherDamageAbAttr");let FU=ZW;const XW=class XW extends FU{constructor(...A){super(),this.weatherTypes=A}applyPreWeatherEffect(A,s,R,a,i,r){return(!this.weatherTypes.length||this.weatherTypes.indexOf(a==null?void 0:a.weatherType)>-1)&&(i.value=!0),!0}};N(XW,"BlockWeatherDamageAttr");let PI=XW;const QW=class QW extends mU{constructor(A){super(),this.affectsImmutable=!!A}applyPreWeatherEffect(A,s,R,a,i,r){return this.affectsImmutable||a.isImmutable()?(i.value=!0,!0):!1}};N(QW,"SuppressWeatherEffectAbAttr");let Li=QW;function ol(){return E=>{if(!E.turnData)return!0;const A=E.turnData.attacksReceived[0];if(!A)return!0;const s=E.getOpponents().find(a=>a.id===A.sourceId);return s?!(we[A.move].chance>=0&&s.hasAbility(O.SHEER_FORCE)):!0}}N(ol,"getSheerForceHitDisableAbCondition");function ms(...E){return()=>{var s,R,a;if(!((s=n)!=null&&s.arena)||(R=n.arena.weather)!=null&&R.isEffectSuppressed())return!1;const A=(a=n.arena.weather)==null?void 0:a.weatherType;return!!A&&E.indexOf(A)>-1}}N(ms,"getWeatherCondition");function uJ(){return E=>{for(const A of E.getOpponents())for(const s of A.moveset)if(s){if(s.getMove()instanceof g&&E.getAttackTypeEffectiveness(s.getMove().type,A,!0,void 0,s.getMove())>=2||s.getMove().hasAttr(QO))return!0;if(s.getMove().id===t.HIDDEN_POWER){const R=Math.floor(((A.ivs[K.HP]&1)+(A.ivs[K.ATK]&1)*2+(A.ivs[K.DEF]&1)*4+(A.ivs[K.SPD]&1)*8+(A.ivs[K.SPATK]&1)*16+(A.ivs[K.SPDEF]&1)*32)*15/63),a=[I.FIGHTING,I.FLYING,I.POISON,I.GROUND,I.ROCK,I.BUG,I.GHOST,I.STEEL,I.FIRE,I.WATER,I.GRASS,I.ELECTRIC,I.PSYCHIC,I.ICE,I.DRAGON,I.DARK][R];if(E.getAttackTypeEffectiveness(a,A)>=2)return!0}}return!1}}N(uJ,"getAnticipationCondition");function DJ(E){return A=>{var s;return!((s=A.battleData)!=null&&s.abilitiesApplied.includes(E))}}N(DJ,"getOncePerBattleCondition");const JW=class JW extends fE{constructor(){super(!0)}applyPostSummon(A,s,R,a){let i=0,r="",L=0;for(const o of A.getOpponents())for(const l of o.moveset)(l==null?void 0:l.getMove())instanceof Ge?L=1:l!=null&&l.getMove().hasAttr(QO)?L=150:(l==null?void 0:l.getMove().id)===t.COUNTER||(l==null?void 0:l.getMove().id)===t.MIRROR_COAT||(l==null?void 0:l.getMove().id)===t.METAL_BURST?L=120:(l==null?void 0:l.getMove().power)===-1?L=80:L=(l==null?void 0:l.getMove().power)??0,L>i&&(i=L,r=(l==null?void 0:l.getName())??"");return R||n.queueMessage(u.t("abilityTriggers:forewarn",{pokemonNameWithAffix:te(A),moveName:r})),!0}};N(JW,"ForewarnAbAttr");let Ch=JW;const $W=class $W extends fE{constructor(){super(!0)}applyPostSummon(A,s,R,a){if(!R)for(const i of A.getOpponents())n.queueMessage(u.t("abilityTriggers:frisk",{pokemonNameWithAffix:te(A),opponentName:i.name,opponentAbilityName:i.getAbility().name})),v8(i);return!0}};N($W,"FriskAbAttr");let Uh=$W;const zW=class zW extends ot{applyPostWeatherChange(A,s,R,a,i){return!1}};N(zW,"PostWeatherChangeAbAttr");let mS=zW;const qW=class qW extends mS{constructor(A,s){super(!1),this.ability=A,this.formRevertingWeathers=s}applyPostWeatherChange(A,s,R,a,i){var o;const r=A.species.speciesId===e.CASTFORM&&this.ability===O.FORECAST,L=A.species.speciesId===e.CHERRIM&&this.ability===O.FLOWER_GIFT;if(r||L){if(R)return R;const l=(o=n.arena.weather)==null?void 0:o.weatherType;return l&&this.formRevertingWeathers.includes(l)?n.arena.triggerWeatherBasedFormChangesToNormal():n.arena.triggerWeatherBasedFormChanges(),!0}return!1}};N(qW,"PostWeatherChangeFormChangeAbAttr");let pU=qW;const jW=class jW extends mS{constructor(A,s,...R){super(),this.tagType=A,this.turnCount=s,this.weatherTypes=R}applyPostWeatherChange(A,s,R,a,i){return console.log(this.weatherTypes.find(r=>a===r),Oe[a]),this.weatherTypes.find(r=>a===r)?R?A.canAddTag(this.tagType):A.addTag(this.tagType,this.turnCount):!1}};N(jW,"PostWeatherChangeAddBattlerTagAttr");let WU=jW;const eY=class eY extends ot{constructor(...A){super(),this.weatherTypes=A}applyPostWeatherLapse(A,s,R,a,i){return!1}getCondition(){return ms(...this.weatherTypes)}};N(eY,"PostWeatherLapseAbAttr");let FS=eY;const tY=class tY extends FS{constructor(A,...s){super(...s),this.healFactor=A}applyPostWeatherLapse(A,s,R,a,i){if(!A.isFullHp()){const r=(s?A.getPassiveAbility():A.getAbility()).name;return R||n.unshiftPhase(new FE(A.getBattlerIndex(),yt(A.getMaxHp()/(16/this.healFactor)),u.t("abilityTriggers:postWeatherLapseHeal",{pokemonNameWithAffix:te(A),abilityName:r}),!0)),!0}return!1}};N(tY,"PostWeatherLapseHealAbAttr");let JL=tY;const AY=class AY extends FS{constructor(A,...s){super(...s),this.damageFactor=A}applyPostWeatherLapse(A,s,R,a,i){if(A.hasAbilityWithAttr(ME))return!1;if(!R){const r=(s?A.getPassiveAbility():A.getAbility()).name;n.queueMessage(u.t("abilityTriggers:postWeatherLapseDamage",{pokemonNameWithAffix:te(A),abilityName:r})),A.damageAndUpdate(yt(A.getMaxHp()/(16/this.damageFactor)),vt.OTHER)}return!0}};N(AY,"PostWeatherLapseDamageAbAttr");let YU=AY;const EY=class EY extends ot{applyPostTerrainChange(A,s,R,a,i){return!1}};N(EY,"PostTerrainChangeAbAttr");let yU=EY;const sY=class sY extends yU{constructor(A,s,...R){super(),this.tagType=A,this.turnCount=s,this.terrainTypes=R}applyPostTerrainChange(A,s,R,a,i){return this.terrainTypes.find(r=>r===a)?R?A.canAddTag(this.tagType):A.addTag(this.tagType,this.turnCount):!1}};N(sY,"PostTerrainChangeAddBattlerTagAttr");let uh=sY;function ll(...E){return A=>{var R;const s=(R=n.arena.terrain)==null?void 0:R.terrainType;return!!s&&E.indexOf(s)>-1}}N(ll,"getTerrainCondition");const RY=class RY extends ot{applyPostTurn(A,s,R,a){return!1}};N(RY,"PostTurnAbAttr");let An=RY;const OY=class OY extends An{constructor(...A){super(!1),this.effects=A}applyPostTurn(A,s,R,a){if(A.status&&this.effects.includes(A.status.effect)&&!A.isFullHp()){if(!R){const i=(s?A.getPassiveAbility():A.getAbility()).name;n.unshiftPhase(new FE(A.getBattlerIndex(),yt(A.getMaxHp()/8),u.t("abilityTriggers:poisonHeal",{pokemonName:te(A),abilityName:i}),!0))}return!0}return!1}};N(OY,"PostTurnStatusHealAbAttr");let Dh=OY;const nY=class nY extends An{constructor(A=!1){super(!0),this.allyTarget=A}applyPostTurn(A,s,R,a){var i,r;return this.allyTarget?this.target=A.getAlly():this.target=A,(i=this.target)!=null&&i.status?(R||(n.queueMessage(La((r=this.target.status)==null?void 0:r.effect,te(this.target))),this.target.resetStatus(!1),this.target.updateInfo()),!0):!1}};N(nY,"PostTurnResetStatusAbAttr");let $L=nY;const IY=class IY extends An{constructor(A,s){super(),this.itemType=A,this.procChance=s}applyPostTurn(A,s,R,a){const i=Phaser.Math.RND.realInRange(0,1);return Math.max(Math.min(this.procChance(A),1),0)<i?!1:this.itemType==="EATEN_BERRIES"?this.createEatenBerry(A,R):!1}createEatenBerry(A,s){const R=A.battleData.berriesEaten;if(!R.length)return!1;if(s)return!0;const a=ce(R.length),i=R[a],r=new bT(i);R.splice(a);const L=n.findModifier(o=>o instanceof CE&&o.berryType===i,A.isPlayer());if(L)L.stackCount<L.getMaxHeldItemCount(A)&&L.stackCount++;else{const o=new CE(r,A.id,i,1);A.isPlayer()?n.addModifier(o):n.addEnemyModifier(o)}return n.queueMessage(u.t("abilityTriggers:postTurnLootCreateEatenBerry",{pokemonNameWithAffix:te(A),berryName:r.name})),n.updateModifiers(A.isPlayer()),!0}};N(IY,"PostTurnLootAbAttr");let Mh=IY;const aY=class aY extends An{constructor(){super(!0)}applyPostTurn(A,s,R,a){const i=zn.filter(L=>A.getStatStage(L)<6);let r=zn.filter(L=>A.getStatStage(L)>-6);if(!R){if(i.length>0){const L=i[A.randSeedInt(i.length)];r=i.filter(o=>o!==L),n.unshiftPhase(new zt(A.getBattlerIndex(),!0,[L],2))}if(r.length>0){const L=r[A.randSeedInt(r.length)];n.unshiftPhase(new zt(A.getBattlerIndex(),!0,[L],-1))}}return!0}};N(aY,"MoodyAbAttr");let _h=aY;const iY=class iY extends An{constructor(){super(!0)}applyPostTurn(A,s,R,a){if(!R)if(!A.turnData.switchedInThisTurn&&!A.turnData.failedRunAway)n.unshiftPhase(new zt(A.getBattlerIndex(),!0,[K.SPD],1));else return!1;return!0}};N(iY,"SpeedBoostAbAttr");let Ph=iY;const rY=class rY extends An{constructor(A){super(!0),this.formFunc=A}applyPostTurn(A,s,R,a){return this.formFunc(A)!==A.formIndex?(R||n.triggerPokemonFormChange(A,Zt,!1),!0):!1}};N(rY,"PostTurnFormChangeAbAttr");let pn=rY;const LY=class LY extends An{applyPostTurn(A,s,R,a){var r;let i=!1;for(const L of A.getOpponents())(((r=L.status)==null?void 0:r.effect)===ne.SLEEP||L.hasAbility(O.COMATOSE))&&!L.hasAbilityWithAttr(ME)&&!L.switchOutStatus&&(R||(L.damageAndUpdate(yt(L.getMaxHp()/8),vt.OTHER),n.queueMessage(u.t("abilityTriggers:badDreams",{pokemonName:te(L)}))),i=!0);return i}};N(LY,"PostTurnHurtIfSleepingAbAttr");let Gh=LY;const NY=class NY extends An{constructor(){super()}applyPostTurn(A,s,R,a){if(R)return!1;const i=n.currentBattle.lastUsedPokeball;return i!==null&&A.isPlayer?(n.pokeballCounts[i]++,n.currentBattle.lastUsedPokeball=null,n.queueMessage(u.t("abilityTriggers:fetchBall",{pokemonNameWithAffix:te(A),pokeballName:xl(i)})),!0):!1}};N(NY,"FetchBallAbAttr");let ch=NY;const TY=class TY extends ot{};N(TY,"PostBiomeChangeAbAttr");let pS=TY;const SY=class SY extends pS{constructor(A){super(),this.weatherType=A}apply(A,s,R,a,i){var r,L;return(r=n.arena.weather)!=null&&r.isImmutable()?!1:R?((L=n.arena.weather)==null?void 0:L.weatherType)!==this.weatherType:n.arena.trySetWeather(this.weatherType,!0)}};N(SY,"PostBiomeChangeWeatherChangeAbAttr");let nn=SY;const oY=class oY extends pS{constructor(A){super(),this.terrainType=A}apply(A,s,R,a,i){var r;return R?((r=n.arena.terrain)==null?void 0:r.terrainType)!==this.terrainType:n.arena.trySetTerrain(this.terrainType,!0)}};N(oY,"PostBiomeChangeTerrainChangeAbAttr");let Da=oY;const lY=class lY extends ot{applyPostMoveUsed(A,s,R,a,i,r){return!1}};N(lY,"PostMoveUsedAbAttr");let wU=lY;const CY=class CY extends wU{applyPostMoveUsed(A,s,R,a,i,r){const L=[y.FLYING,y.UNDERWATER,y.UNDERGROUND,y.HIDDEN];if(R.getBattlerIndex()!==A.getBattlerIndex()&&!A.summonData.tags.some(o=>L.includes(o.tagType))){if(!i)if(s.getMove()instanceof g||s.getMove()instanceof Ge){const o=this.getTarget(A,R,a);n.unshiftPhase(new wA(A,o,s,!0,!0))}else s.getMove()instanceof je&&n.unshiftPhase(new wA(A,[A.getBattlerIndex()],s,!0,!0));return!0}return!1}getTarget(A,s,R){return A.isPlayer()?s.isPlayer()?R:[s.getBattlerIndex()]:s.isPlayer()?[s.getBattlerIndex()]:R}};N(CY,"PostDancingMoveAbAttr");let hh=CY;const UY=class UY extends ot{applyPostItemLost(A,s,R){return!1}};N(UY,"PostItemLostAbAttr");let qR=UY;const uY=class uY extends qR{constructor(A){super(!0),this.tagType=A}applyPostItemLost(A,s,R){return!A.getTag(this.tagType)&&!s?(A.addTag(this.tagType),!0):!1}};N(uY,"PostItemLostApplyBattlerTagAbAttr");let Hh=uY;const DY=class DY extends ot{constructor(A){super(!0),this.multiplier=A}apply(A,s,R,a,i){return i[0].value*=this.multiplier,!0}};N(DY,"StatStageChangeMultiplierAbAttr");let WS=DY;const MY=class MY extends ot{apply(A,s,R,a,i){return R||n.unshiftPhase(new zt(A.getBattlerIndex(),!0,i[0],i[1],!0,!1,!1)),!0}};N(MY,"StatStageChangeCopyAbAttr");let vU=MY;const _Y=class _Y extends ot{constructor(){super(!1)}apply(A,s,R,a,i){return a.value=!0,!0}};N(_Y,"BypassBurnDamageReductionAbAttr");let VU=_Y;const PY=class PY extends ot{constructor(A){super(!1),this.multiplier=A}apply(A,s,R,a,i){return i[0].value=yt(i[0].value*this.multiplier),!0}};N(PY,"ReduceBurnDamageAbAttr");let xU=PY;const GY=class GY extends ot{apply(A,s,R,a,i){return i[0].value*=2,!0}};N(GY,"DoubleBerryEffectAbAttr");let lr=GY;const cY=class cY extends ot{apply(A,s,R,a,i){return a.value=!0,!0}};N(cY,"PreventBerryUseAbAttr");let Cr=cY;const hY=class hY extends ot{constructor(A){super(),this.healPercent=Math.max(Math.min(A,1),0)}apply(A,s,R,...a){const{name:i}=s?A.getPassiveAbility():A.getAbility();return R||n.unshiftPhase(new FE(A.getBattlerIndex(),yt(A.getMaxHp()*this.healPercent),u.t("abilityTriggers:healFromBerryUse",{pokemonNameWithAffix:te(A),abilityName:i}),!0)),!0}};N(hY,"HealFromBerryUseAbAttr");let YS=hY;const HY=class HY extends ot{apply(A,s,R,a,i){return i[0].value=256,!0}};N(HY,"RunSuccessAbAttr");let bU=HY;const dY=class dY extends ot{constructor(A){super(!1),this.arenaTrapCondition=A}applyCheckTrapped(A,s,R,a,i,r){return!1}};N(dY,"CheckTrappedAbAttr");let kU=dY;const fY=class fY extends kU{applyCheckTrapped(A,s,R,a,i,r){return this.arenaTrapCondition(A,i)?i.getTypes(!0).includes(I.GHOST)||i.getTypes(!0).includes(I.STELLAR)&&i.getTypes().includes(I.GHOST)||i.hasAbility(O.RUN_AWAY)?(a.value=!1,!1):(a.value=!0,!0):(a.value=!1,!1)}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:arenaTrap",{pokemonNameWithAffix:te(A),abilityName:s})}};N(fY,"ArenaTrapAbAttr");let zL=fY;const BY=class BY extends ot{apply(A,s,R,a,i){return i[0].value=0,!0}};N(BY,"MaxMultiHitAbAttr");let yS=BY;const gY=class gY extends ot{constructor(){super(!0)}applyPostBattle(A,s,R,a){return!1}};N(gY,"PostBattleAbAttr");let wS=gY;const KY=class KY extends wS{applyPostBattle(A,s,R,a){const i=n.currentBattle.postBattleLoot;if(!R&&i.length&&a[0]){const r=IE(i);if(n.tryTransferHeldItemModifier(r,A,!0,1,!0,void 0,!1))return i.splice(i.indexOf(r),1),n.queueMessage(u.t("abilityTriggers:postBattleLoot",{pokemonNameWithAffix:te(A),itemName:r.type.name})),!0}return!1}};N(KY,"PostBattleLootAbAttr");let dh=KY;const mY=class mY extends ot{applyPostFaint(A,s,R,a,i,r,...L){return!1}};N(mY,"PostFaintAbAttr");let JI=mY;const FY=class FY extends JI{applyPostFaint(A,s,R,a,i,r,L){return V8().length<1?!1:(R||n.arena.triggerWeatherBasedFormChanges(),!0)}};N(FY,"PostFaintUnsuppressedWeatherFormChangeAbAttr");let ZU=FY;const pY=class pY extends JI{applyPostFaint(A,s,R,a,i,r,...L){var C;const o=(C=n.arena.weather)==null?void 0:C.weatherType;let l=!1;switch(o){case Oe.HARSH_SUN:A.hasAbility(O.DESOLATE_LAND)&&n.getField(!0).filter(M=>M.hasAbility(O.DESOLATE_LAND)).length===0&&(l=!0);break;case Oe.HEAVY_RAIN:A.hasAbility(O.PRIMORDIAL_SEA)&&n.getField(!0).filter(M=>M.hasAbility(O.PRIMORDIAL_SEA)).length===0&&(l=!0);break;case Oe.STRONG_WINDS:A.hasAbility(O.DELTA_STREAM)&&n.getField(!0).filter(M=>M.hasAbility(O.DELTA_STREAM)).length===0&&(l=!0);break}return R?l:l?(n.arena.trySetWeather(Oe.NONE,!1),!0):!1}};N(pY,"PostFaintClearWeatherAbAttr");let qL=pY;const WY=class WY extends JI{constructor(A){super(),this.damageRatio=A}applyPostFaint(A,s,R,a,i,r,...L){if(i!==void 0&&a!==void 0&&i.checkFlag(tA.MAKES_CONTACT,a,A)){const o=new Lt(!1);return n.getField(!0).map(l=>ut(cS,l,o,R)),o.value||a.hasAbilityWithAttr(ME)?!1:(R||(a.damageAndUpdate(yt(a.getMaxHp()*(1/this.damageRatio)),vt.OTHER),a.turnData.damageTaken+=yt(a.getMaxHp()*(1/this.damageRatio))),!0)}return!1}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:postFaintContactDamage",{pokemonNameWithAffix:te(A),abilityName:s})}};N(WY,"PostFaintContactDamageAbAttr");let fh=WY;const YY=class YY extends JI{constructor(){super()}applyPostFaint(A,s,R,a,i,r,...L){if(i!==void 0&&a!==void 0&&!R){const o=A.turnData.attacksReceived[0].damage;a.damageAndUpdate(o,vt.OTHER),a.turnData.damageTaken+=o}return!0}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:postFaintHpDamage",{pokemonNameWithAffix:te(A),abilityName:s})}};N(YY,"PostFaintHPDamageAbAttr");let Bh=YY;const yY=class yY extends ot{apply(A,s,R,a,i){if(this.canRedirect(i[0])){const r=i[1],L=A.getBattlerIndex();if(r.value!==L)return r.value=L,!0}return!1}canRedirect(A){const s=we[A];return!![$E.NEAR_OTHER,$E.OTHER].find(R=>s.moveTarget===R)}};N(yY,"RedirectMoveAbAttr");let XU=yY;const wY=class wY extends XU{constructor(A){super(),this.type=A}canRedirect(A){return super.canRedirect(A)&&we[A].type===this.type}};N(wY,"RedirectTypeMoveAbAttr");let QU=wY;const vY=class vY extends ot{};N(vY,"BlockRedirectAbAttr");let Xr=vY;const VY=class VY extends ot{constructor(A){super(!0),this.statusEffect=A}apply(A,s,R,a,i){return i[1]instanceof Et&&i[0]===this.statusEffect?(i[1].value-=1,!0):!1}};N(VY,"ReduceStatusEffectDurationAbAttr");let JU=VY;const xY=class xY extends ot{constructor(){super(!0)}};N(xY,"FlinchEffectAbAttr");let $U=xY;const bY=class bY extends $U{constructor(A,s){super(),this.stats=Array.isArray(A)?A:[A],this.stages=s}apply(A,s,R,a,i){return R||n.unshiftPhase(new zt(A.getBattlerIndex(),!0,this.stats,this.stages)),!0}};N(bY,"FlinchStatStageChangeAbAttr");let gh=bY;const kY=class kY extends ot{};N(kY,"IncreasePpAbAttr");let zU=kY;const ZY=class ZY extends ot{apply(A,s,R,a,i){return a.value=!0,!0}};N(ZY,"ForceSwitchOutImmunityAbAttr");let $I=ZY;const XY=class XY extends ot{constructor(){super()}apply(A,s,R,a,i){const r=A.getHpRatio();return i[0].value<r?(i[0].value*=2,i[0].value>=r):!1}};N(XY,"ReduceBerryUseThresholdAbAttr");let Ya=XY;const QY=class QY extends ot{constructor(A){super(),this.multiplier=A}apply(A,s,R,a,i){return i[0].value*=this.multiplier,!0}};N(QY,"WeightMultiplierAbAttr");let vS=QY;const JY=class JY extends ot{constructor(){super(!1)}apply(A,s,R,a,i){return i[0].setNature(A.getNature()),!0}};N(JY,"SyncEncounterNatureAbAttr");let qU=JY;const $Y=class $Y extends ot{constructor(A){super(!1),this.moveIgnoreFunc=A||((s,R)=>!0)}apply(A,s,R,a,i){return this.moveIgnoreFunc(A,i[0])?(a.value=!0,!0):!1}};N($Y,"MoveAbilityBypassAbAttr");let WI=$Y;const NM=class NM extends ot{constructor(){super(!1)}apply(A,s,R,a,i){const r=i[0];return!r.hasAttr(LE)&&!r.hasAttr(NM)?(a.value=!0,!0):!1}};N(NM,"SuppressFieldAbilitiesAbAttr");let KI=NM;const zY=class zY extends ot{};N(zY,"AlwaysHitAbAttr");let VS=zY;const qY=class qY extends ot{};N(qY,"IgnoreProtectOnContactAbAttr");let jU=qY;const jY=class jY extends ot{apply(A,s,R,a,i){const r=i[0];return i[0]instanceof Lt?(r.value=!0,!0):!1}};N(jY,"InfiltratorAbAttr");let Ni=jY;const ey=class ey extends ot{constructor(){super(!1)}};N(ey,"UncopiableAbilityAbAttr");let sA=ey;const ty=class ty extends ot{constructor(){super(!1)}};N(ty,"UnsuppressableAbilityAbAttr");let LE=ty;const Ay=class Ay extends ot{constructor(){super(!1)}};N(Ay,"UnswappableAbilityAbAttr");let uA=Ay;const Ey=class Ey extends ot{constructor(){super(!1)}};N(Ey,"NoTransformAbilityAbAttr");let aR=Ey;const sy=class sy extends ot{constructor(){super(!1)}};N(sy,"NoFusionAbilityAbAttr");let Os=sy;const Ry=class Ry extends ot{constructor(A,s){super(!0),this.defenderType=A,this.allowedMoveTypes=s}apply(A,s,R,a,i){return this.defenderType===i[1]&&this.allowedMoveTypes.includes(i[0])?(a.value=!0,!0):!1}};N(Ry,"IgnoreTypeImmunityAbAttr");let Qr=Ry;const Oy=class Oy extends ot{constructor(A,s){super(!0),this.statusEffect=A,this.defenderType=s}apply(A,s,R,a,i){return this.statusEffect.includes(i[0])&&this.defenderType.includes(i[1])?(a.value=!0,!0):!1}};N(Oy,"IgnoreTypeStatusEffectImmunityAbAttr");let eu=Oy;const ny=class ny extends wS{constructor(){super()}applyPostBattle(A,s,R,a){return!R&&a[0]?(n.currentBattle.moneyScattered+=n.getWaveMoneyAmount(.2),!0):!1}};N(ny,"MoneyAbAttr");let Kh=ny;const Iy=class Iy extends Wa{constructor(A){super([K.ATK],1,!0,!1),this.tagType=A}applyPostSummon(A,s,R,a){const i=A.isPlayer()?St.PLAYER:St.ENEMY;return n.arena.getTagOnSide(this.tagType,i)?super.applyPostSummon(A,s,R,a):!1}};N(Iy,"PostSummonStatStageChangeOnArenaAbAttr");let mh=Iy;const ay=class ay extends NR{constructor(A,s,R,a,i){super(A,s),this.multiplier=s,this.tagType=R,this.recoilDamageFunc=i,this.triggerMessageFunc=a}applyPreDefend(A,s,R,a,i,r,L){return this.condition(A,a,i)&&!i.hitsSubstitute(a,A)?(R||(L[0].value=this.multiplier,A.removeTag(this.tagType),this.recoilDamageFunc&&A.damageAndUpdate(this.recoilDamageFunc(A),vt.OTHER,!1,!1,!0,!0)),!0):!1}getTriggerMessage(A,s,...R){return this.triggerMessageFunc(A,s)}};N(ay,"FormBlockDamageAbAttr");let tu=ay;const iy=class iy extends ot{constructor(A){super(!0),this.chance=A}apply(A,s,R,a,i){var L;if(R)return!1;const r=i[0];if(!r.value&&A.randSeedInt(100)<this.chance){const o=n.currentBattle.turnCommands[A.getBattlerIndex()],l=(o==null?void 0:o.command)===LA.FIGHT,C=(L=o==null?void 0:o.move)!=null&&L.move?we[o.move.move]:null,M=(C==null?void 0:C.category)===Pt.PHYSICAL||(C==null?void 0:C.category)===Pt.SPECIAL;if(l&&M)return r.value=!0,!0}return!1}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:quickDraw",{pokemonName:te(A)})}};N(iy,"BypassSpeedChanceAbAttr");let Au=iy;const ry=class ry extends ot{constructor(A){super(!0),this.condition=A}apply(A,s,R,a,i){var M;const r=i[0],L=i[1],o=n.currentBattle.turnCommands[A.getBattlerIndex()],l=(o==null?void 0:o.command)===LA.FIGHT,C=(M=o==null?void 0:o.move)!=null&&M.move?we[o.move.move]:null;return this.condition(A,C)&&l?(r.value=!1,L.value=!1,!1):!0}};N(ry,"PreventBypassSpeedChanceAbAttr");let Eu=ry;const Ly=class Ly extends fE{constructor(){super(!0)}apply(A,s,R,a,i){if(A.isTerastallized())return!1;const r=n.arena.getTerrainType(),L=this.determineTypeChange(A,r);return L.length!==0&&(A.summonData.addedType&&L.includes(A.summonData.addedType)&&(A.summonData.addedType=null),A.summonData.types=L,A.updateInfo()),!0}determineTypeChange(A,s){const R=[];switch(s){case Tt.ELECTRIC:R.push(I.ELECTRIC);break;case Tt.MISTY:R.push(I.FAIRY);break;case Tt.GRASSY:R.push(I.GRASS);break;case Tt.PSYCHIC:R.push(I.PSYCHIC);break;default:A.getTypes(!1,!1,!0).forEach(a=>{R.push(a)});break}return R}applyPostSummon(A,s,R,a){return n.arena.getTerrainType()!==Tt.NONE?this.apply(A,s,R,new Lt(!1),[]):!1}getTriggerMessage(A,s,...R){const a=n.arena.getTerrainType(),i=te(A);if(a===Tt.NONE)return u.t("abilityTriggers:pokemonTypeChangeRevert",{pokemonNameWithAffix:i});{const r=u.t(`pokemonInfo:Type.${I[this.determineTypeChange(A,a)[0]]}`);return u.t("abilityTriggers:pokemonTypeChange",{pokemonNameWithAffix:i,moveType:r})}}};N(Ly,"TerrainEventTypeChangeAbAttr");let su=Ly;async function OE(E,A,s,R,a=!1,i=!1,r=[]){for(const L of[!1,!0]){if(!(A!=null&&A.canApplyAbility(L))||L&&A.getPassiveAbility().id===A.getAbility().id)continue;const o=L?A.getPassiveAbility():A.getAbility();for(const l of o.getAttrs(E)){const C=l.getCondition();if(C&&!C(A))continue;n.setPhaseQueueSplice();let M=s(l,L);if(M instanceof Promise&&(M=await M),M){A.summonData&&!A.summonData.abilitiesApplied.includes(o.id)&&A.summonData.abilitiesApplied.push(o.id),A.battleData&&!i&&!A.battleData.abilitiesApplied.includes(o.id)&&A.battleData.abilitiesApplied.push(o.id),l.showAbility&&!i&&(a?n.abilityBar.showAbility(A,L):Z1(A,L));const D=l.getTriggerMessage(A,o.name,R);D&&(i||n.queueMessage(D)),r.push(D)}}n.clearPhaseQueueSplice()}}N(OE,"applyAbAttrsInternal");const Ny=class Ny{constructor(A){this.switchType=A}switchOutLogic(A){var R;const s=A;if(s instanceof vE){if(n.getPlayerParty().filter(a=>a.isAllowedInBattle()&&!a.isOnField()).length<1)return!1;if(s.hp>0)return s.leaveField(this.switchType===iA.SWITCH),n.prependToPhase(new xI(this.switchType,s.getFieldIndex(),!0,!0),SO),!0}else if(n.currentBattle.battleType!==Ut.WILD){if(n.getEnemyParty().filter(a=>a.isAllowedInBattle()&&!a.isOnField()).length<1)return!1;if(s.hp>0){s.leaveField(this.switchType===iA.SWITCH);const a=n.currentBattle.trainer?n.currentBattle.trainer.getNextSummonIndex(s.trainerSlot):0;return n.prependToPhase(new uR(this.switchType,s.getFieldIndex(),a,!1,!1),SO),!0}}else{if(!n.currentBattle.waveIndex||n.currentBattle.waveIndex%10===0)return!1;if(s.hp>0&&(s.leaveField(!1),n.queueMessage(u.t("moveTriggers:fled",{pokemonName:te(s)}),null,!0,500),n.currentBattle.double)){const a=s.getAlly();n.redirectPokemonMoves(s,a)}(R=s.getAlly())!=null&&R.isActive(!0)||(n.clearEnemyHeldItemModifiers(),s.hp&&(n.pushPhase(new bI(!1)),n.pushPhase(new si)))}return!1}getSwitchOutCondition(A,s){var r;const R=A,a=R instanceof vE;if(a){const L=new Lt(!1);return ut($I,s,L),!L.value}if(!a&&n.currentBattle.battleType===Ut.WILD&&!n.currentBattle.waveIndex&&n.currentBattle.waveIndex%10===0||!a&&n.currentBattle.isBattleMysteryEncounter()&&!((r=n.currentBattle.mysteryEncounter)!=null&&r.fleeAllowed))return!1;const i=a?n.getPlayerParty():n.getEnemyParty();return!a&&n.currentBattle.battleType===Ut.WILD||i.filter(L=>L.isAllowedInBattle()&&(a||L.trainerSlot===R.trainerSlot)).length>n.currentBattle.getBattlerCount()}getFailedText(A){const s=new Lt(!1);return ut($I,A,s),s.value?u.t("moveTriggers:cannotBeSwitchedOut",{pokemonName:te(A)}):null}};N(Ny,"ForceSwitchOutHelper");let Fh=Ny;function MJ(E){const A=E.getHeldItems().find(s=>s instanceof Ra);return A?yt(E.turnData.totalDamageDealt/8)*A.stackCount:0}N(MJ,"calculateShellBellRecovery");const Ty=class Ty extends ot{applyPostDamage(A,s,R,a,i,r){return!1}};N(Ty,"PostDamageAbAttr");let Jr=Ty;const Sy=class Sy extends Jr{constructor(A=.5){super(),this.helper=new Fh(iA.SWITCH),this.hpRatio=A}applyPostDamage(A,s,R,a,i,r){const L=A.getMoveHistory(),o=[t.BELLY_DRUM,t.SUBSTITUTE,t.CURSE,t.PAIN_SPLIT];if(L.length>0){const C=L[L.length-1];if(o.includes(C.move))return!1}const l=[t.DRAGON_TAIL,t.CIRCLE_THROW];if(r){const C=r.getMoveHistory();if(C.length>0){const M=C[C.length-1];if(l.includes(M.move)||M.move===t.SKY_DROP&&M.result===oA.OTHER)return!1;if(we[M.move].chance>=0&&r.hasAbility(O.SHEER_FORCE))return!1;if(r.turnData.hitsLeft>1)return!1;r.turnData.hitCount>1&&(s=A.turnData.damageTaken)}}if(A.hp+s>=A.getMaxHp()*this.hpRatio){const C=MJ(A);if(A.hp-C<A.getMaxHp()*this.hpRatio){for(const M of A.getOpponents())if(!this.helper.getSwitchOutCondition(A,M))return!1;return this.helper.switchOutLogic(A)}else return!1}else return!1}getFailedText(A,s,R,a){return this.helper.getFailedText(s)}};N(Sy,"PostDamageForceSwitchAbAttr");let Ti=Sy;function ut(E,A,s,R=!1,...a){return OE(E,A,(i,r)=>i.apply(A,r,R,s,a),a,!1,R)}N(ut,"applyAbAttrs");function y8(E,A,s=!1,...R){return OE(E,A,(a,i)=>a.applyPostBattleInit(A,i,s,R),R,!1,s)}N(y8,"applyPostBattleInitAbAttrs");function Wn(E,A,s,R,a,i=!1,...r){return OE(E,A,(L,o)=>L.applyPreDefend(A,o,i,s,R,a,r),r,!1,i)}N(Wn,"applyPreDefendAbAttrs");function _J(E,A,s,R,a,i=!1,...r){return OE(E,A,(L,o)=>L.applyPostDefend(A,o,i,s,R,a,r),r,!1,i)}N(_J,"applyPostDefendAbAttrs");function PJ(E,A,s,R,a,i=!1,...r){return OE(E,A,(L,o)=>L.applyPostMoveUsed(A,s,R,a,i,r),r,!1,i)}N(PJ,"applyPostMoveUsedAbAttrs");function z0(E,A,s,R,a=!1,...i){return OE(E,A,(r,L)=>r.applyStatStage(A,L,a,s,R,i),i)}N(z0,"applyStatMultiplierAbAttrs");function GJ(E,A,s,R,a=!1,...i){return OE(E,A,(r,L)=>r.applyPostSetStatus(A,R,L,s,a,i),i,!1,a)}N(GJ,"applyPostSetStatusAbAttrs");function k1(E,A,s,R,a=!1,i,r){return OE(E,A,(L,o)=>L.applyPostDamage(A,s,o,a,i,r),i)}N(k1,"applyPostDamageAbAttrs");function cJ(E,A,s,R,a,i,r=!1,...L){return OE(E,A,(o,l)=>o.applyFieldStat(A,l,r,s,R,a,i,L),L)}N(cJ,"applyFieldStatMultiplierAbAttrs");function XO(E,A,s,R,a=!1,...i){return OE(E,A,(r,L)=>r.applyPreAttack(A,L,a,s,R,i),i,!1,a)}N(XO,"applyPreAttackAbAttrs");function w8(E,A,s,R,a,i=!1,...r){return OE(E,A,(L,o)=>L.applyPostAttack(A,o,i,s,R,a,r),r,!1,i)}N(w8,"applyPostAttackAbAttrs");function hJ(E,A,s,R=!1,...a){return OE(E,A,(i,r)=>i.applyPostKnockOut(A,r,R,s,a),a,!1,R)}N(hJ,"applyPostKnockOutAbAttrs");function HJ(E,A,s=!1,...R){return OE(E,A,(a,i)=>a.applyPostVictory(A,i,s,R),R,!1,s)}N(HJ,"applyPostVictoryAbAttrs");function dJ(E,A,s=!1,...R){return OE(E,A,(a,i)=>a.applyPostSummon(A,i,s,R),R,!1,s)}N(dJ,"applyPostSummonAbAttrs");function fJ(E,A,s=!1,...R){return OE(E,A,(a,i)=>a.applyPreSwitchOut(A,i,s,R),R,!0,s)}N(fJ,"applyPreSwitchOutAbAttrs");function BJ(E,A,s,R,a=!1,...i){return OE(E,A,(r,L)=>r.applyPreStatStageChange(A,L,a,s,R,i),i,!1,a)}N(BJ,"applyPreStatStageChangeAbAttrs");function gJ(E,A,s,R,a,i=!1,...r){return OE(E,A,(L,o)=>L.applyPostStatStageChange(A,i,s,R,a,r),r,!1,i)}N(gJ,"applyPostStatStageChangeAbAttrs");function U6(E,A,s,R,a=!1,...i){return OE(E,A,(r,L)=>r.applyPreSetStatus(A,L,a,s,R,i),i,!1,a)}N(U6,"applyPreSetStatusAbAttrs");function Cl(E,A,s,R,a=!1,...i){return OE(E,A,(r,L)=>r.applyPreApplyBattlerTag(A,L,a,s,R,i),i,!1,a)}N(Cl,"applyPreApplyBattlerTagAbAttrs");function u6(E,A,s,R,a=!1,...i){return OE(E,A,(r,L)=>r.applyPreWeatherEffect(A,L,a,s,R,i),i,!0,a)}N(u6,"applyPreWeatherEffectAbAttrs");function KJ(E,A,s=!1,...R){return OE(E,A,(a,i)=>a.applyPostTurn(A,i,s,R),R,!1,s)}N(KJ,"applyPostTurnAbAttrs");function mJ(E,A,s,R=!1,...a){return OE(E,A,(i,r)=>i.applyPostWeatherChange(A,r,R,s,a),a,!1,R)}N(mJ,"applyPostWeatherChangeAbAttrs");function FJ(E,A,s,R=!1,...a){return OE(E,A,(i,r)=>i.applyPostWeatherLapse(A,r,R,s,a),a,!1,R)}N(FJ,"applyPostWeatherLapseAbAttrs");function pJ(E,A,s,R=!1,...a){return OE(E,A,(i,r)=>i.applyPostTerrainChange(A,r,R,s,a),a,!1,R)}N(pJ,"applyPostTerrainChangeAbAttrs");function WJ(E,A,s,R,a,i=!1,...r){return OE(E,A,(L,o)=>L.applyCheckTrapped(A,o,i,s,R,r),r,!1,i,a)}N(WJ,"applyCheckTrappedAbAttrs");function YJ(E,A,s=!1,...R){return OE(E,A,(a,i)=>a.applyPostBattle(A,i,s,R),R,!1,s)}N(YJ,"applyPostBattleAbAttrs");function D6(E,A,s,R,a,i=!1,...r){return OE(E,A,(L,o)=>L.applyPostFaint(A,o,i,s,R,a,r),r,!1,i)}N(D6,"applyPostFaintAbAttrs");function on(E,A,s=!1,...R){return OE(E,A,(a,i)=>a.applyPostItemLost(A,s,R),R)}N(on,"applyPostItemLostAbAttrs");function Z1(E,A){n.unshiftPhase(new jn(E.id,A)),n.clearPhaseQueueSplice()}N(Z1,"queueShowAbility");function v8(E){E.battleData&&(E.battleData.abilityRevealed=!0)}N(v8,"setAbilityRevealed");function V8(){return n.getField(!0).filter(E=>E.hasAbility(O.FORECAST)&&E.species.speciesId===e.CASTFORM||E.hasAbility(O.FLOWER_GIFT)&&E.species.speciesId===e.CHERRIM)}N(V8,"getPokemonWithWeatherBasedForms");const NE=[new Re(O.NONE,3)];function yJ(){NE.push(new Re(O.STENCH,3).attr(jc,!1,(E,A,s)=>!s.hasAttr(rA)&&!s.hitsSubstitute(E,A)?10:0,y.FLINCHED),new Re(O.DRIZZLE,3).attr(On,Oe.RAIN).attr(nn,Oe.RAIN),new Re(O.SPEED_BOOST,3).attr(Ph),new Re(O.BATTLE_ARMOR,3).attr(KS).ignorable(),new Re(O.STURDY,3).attr(RU).attr(gU).ignorable(),new Re(O.DAMP,3).attr(cS).ignorable(),new Re(O.LIMBER,3).attr(gR,ne.PARALYSIS).ignorable(),new Re(O.SAND_VEIL,3).attr(fA,K.EVA,1.2).attr(PI,Oe.SANDSTORM).condition(ms(Oe.SANDSTORM)).ignorable(),new Re(O.STATIC,3).attr(or,30,ne.PARALYSIS).bypassFaint(),new Re(O.VOLT_ABSORB,3).attr(Ji,I.ELECTRIC).ignorable(),new Re(O.WATER_ABSORB,3).attr(Ji,I.WATER).ignorable(),new Re(O.OBLIVIOUS,3).attr(Sn,[y.INFATUATED,y.TAUNT]).attr(pa).ignorable(),new Re(O.CLOUD_NINE,3).attr(Li,!0).attr(MU,u.t("abilityTriggers:weatherEffectDisappeared")).attr(_U).attr(ZU).bypassFaint(),new Re(O.COMPOUND_EYES,3).attr(fA,K.ACC,1.3),new Re(O.INSOMNIA,3).attr(gR,ne.SLEEP).attr(Sn,y.DROWSY).ignorable(),new Re(O.COLOR_CHANGE,3).attr(wc).condition(ol()),new Re(O.IMMUNITY,3).attr(gR,ne.POISON,ne.TOXIC).ignorable(),new Re(O.FLASH_FIRE,3).attr(pc,I.FIRE,y.FIRE_BOOST,1).ignorable(),new Re(O.SHIELD_DUST,3).attr(XI).ignorable(),new Re(O.OWN_TEMPO,3).attr(Sn,y.CONFUSED).attr(pa).ignorable(),new Re(O.SUCTION_CUPS,3).attr($I).ignorable(),new Re(O.INTIMIDATE,3).attr(Wa,[K.ATK],-1,!1,!0),new Re(O.SHADOW_TAG,3).attr(zL,(E,A)=>!A.hasAbility(O.SHADOW_TAG)),new Re(O.ROUGH_SKIN,3).attr(LU,8).bypassFaint(),new Re(O.WONDER_GUARD,3).attr(Wc).attr(sA).attr(uA).ignorable(),new Re(O.LEVITATE,3).attr(Fc,I.GROUND,E=>!E.getTag(XS)&&!n.arena.getTag(ge.GRAVITY)).ignorable(),new Re(O.EFFECT_SPORE,3).attr(Vc),new Re(O.SYNCHRONIZE,3).attr(qU).attr(th),new Re(O.CLEAR_BODY,3).attr(zR).ignorable(),new Re(O.NATURAL_CURE,3).attr(Lh),new Re(O.LIGHTNING_ROD,3).attr(QU,I.ELECTRIC).attr(Ua,I.ELECTRIC,K.SPATK,1).ignorable(),new Re(O.SERENE_GRACE,3).attr(PS,2),new Re(O.SWIFT_SWIM,3).attr(fA,K.SPD,2).condition(ms(Oe.RAIN,Oe.HEAVY_RAIN)),new Re(O.CHLOROPHYLL,3).attr(fA,K.SPD,2).condition(ms(Oe.SUNNY,Oe.HARSH_SUN)),new Re(O.ILLUMINATE,3).attr(zR,K.ACC).attr(Ka).attr(yI,[K.EVA]).ignorable(),new Re(O.TRACE,3).attr(Ih).attr(sA),new Re(O.HUGE_POWER,3).attr(fA,K.ATK,2),new Re(O.POISON_POINT,3).attr(or,30,ne.POISON).bypassFaint(),new Re(O.INNER_FOCUS,3).attr(Sn,y.FLINCHED).attr(pa).ignorable(),new Re(O.MAGMA_ARMOR,3).attr(gR,ne.FREEZE).ignorable(),new Re(O.WATER_VEIL,3).attr(gR,ne.BURN).ignorable(),new Re(O.MAGNET_PULL,3).attr(zL,(E,A)=>!!(A.getTypes(!0).includes(I.STEEL)||A.getTypes(!0).includes(I.STELLAR)&&A.getTypes().includes(I.STEEL))),new Re(O.SOUNDPROOF,3).attr(vn,(E,A,s)=>E!==A&&s.hasFlag(tA.SOUND_BASED)).ignorable(),new Re(O.RAIN_DISH,3).attr(JL,1,Oe.RAIN,Oe.HEAVY_RAIN),new Re(O.SAND_STREAM,3).attr(On,Oe.SANDSTORM).attr(nn,Oe.SANDSTORM),new Re(O.PRESSURE,3).attr(zU).attr(Fs,E=>u.t("abilityTriggers:postSummonPressure",{pokemonNameWithAffix:te(E)})),new Re(O.THICK_FAT,3).attr(DI,I.FIRE,.5).attr(DI,I.ICE,.5).ignorable(),new Re(O.EARLY_BIRD,3).attr(JU,ne.SLEEP),new Re(O.FLAME_BODY,3).attr(or,30,ne.BURN).bypassFaint(),new Re(O.RUN_AWAY,3).attr(bU),new Re(O.KEEN_EYE,3).attr(zR,K.ACC).ignorable(),new Re(O.HYPER_CUTTER,3).attr(zR,K.ATK).ignorable(),new Re(O.PICKUP,3).attr(dh),new Re(O.TRUANT,3).attr(Fn,y.TRUANT,1,!1),new Re(O.HUSTLE,3).attr(fA,K.ATK,1.5).attr(fA,K.ACC,.8,(E,A,s)=>s.category===Pt.PHYSICAL),new Re(O.CUTE_CHARM,3).attr(xc,30,y.INFATUATED),new Re(O.PLUS,3).conditionalAttr(E=>n.currentBattle.double&&[O.PLUS,O.MINUS].some(A=>E.getAlly().hasAbility(A)),fA,K.SPATK,1.5),new Re(O.MINUS,3).conditionalAttr(E=>n.currentBattle.double&&[O.PLUS,O.MINUS].some(A=>E.getAlly().hasAbility(A)),fA,K.SPATK,1.5),new Re(O.FORECAST,3).attr(sA).attr(Os).attr(PU,O.FORECAST).attr(pU,O.FORECAST,[Oe.NONE,Oe.SANDSTORM,Oe.STRONG_WINDS,Oe.FOG]),new Re(O.STICKY_HOLD,3).attr(br).bypassFaint().ignorable(),new Re(O.SHED_SKIN,3).conditionalAttr(E=>!ce(3),$L),new Re(O.GUTS,3).attr(VU).conditionalAttr(E=>!!E.status||E.hasAbility(O.COMATOSE),fA,K.ATK,1.5),new Re(O.MARVEL_SCALE,3).conditionalAttr(E=>!!E.status||E.hasAbility(O.COMATOSE),fA,K.DEF,1.5).ignorable(),new Re(O.LIQUID_OOZE,3).attr(_S),new Re(O.OVERGROW,3).attr($i,I.GRASS),new Re(O.BLAZE,3).attr($i,I.FIRE),new Re(O.TORRENT,3).attr($i,I.WATER),new Re(O.SWARM,3).attr($i,I.BUG),new Re(O.ROCK_HEAD,3).attr(sU),new Re(O.DROUGHT,3).attr(On,Oe.SUNNY).attr(nn,Oe.SUNNY),new Re(O.ARENA_TRAP,3).attr(zL,(E,A)=>!!A.isGrounded()).attr(Ka),new Re(O.VITAL_SPIRIT,3).attr(gR,ne.SLEEP).attr(Sn,y.DROWSY).ignorable(),new Re(O.WHITE_SMOKE,3).attr(zR).ignorable(),new Re(O.PURE_POWER,3).attr(fA,K.ATK,2),new Re(O.SHELL_ARMOR,3).attr(KS).ignorable(),new Re(O.AIR_LOCK,3).attr(Li,!0).attr(MU,u.t("abilityTriggers:weatherEffectDisappeared")).attr(_U).attr(ZU).bypassFaint(),new Re(O.TANGLED_FEET,4).conditionalAttr(E=>!!E.getTag(y.CONFUSED),fA,K.EVA,2).ignorable(),new Re(O.MOTOR_DRIVE,4).attr(Ua,I.ELECTRIC,K.SPD,1).ignorable(),new Re(O.RIVALRY,4).attr(Rs,(E,A,s)=>(E==null?void 0:E.gender)!==at.GENDERLESS&&(A==null?void 0:A.gender)!==at.GENDERLESS&&(E==null?void 0:E.gender)===(A==null?void 0:A.gender),1.25,!0).attr(Rs,(E,A,s)=>(E==null?void 0:E.gender)!==at.GENDERLESS&&(A==null?void 0:A.gender)!==at.GENDERLESS&&(E==null?void 0:E.gender)!==(A==null?void 0:A.gender),.75),new Re(O.STEADFAST,4).attr(gh,[K.SPD],1),new Re(O.SNOW_CLOAK,4).attr(fA,K.EVA,1.2).attr(PI,Oe.HAIL).condition(ms(Oe.HAIL,Oe.SNOW)).ignorable(),new Re(O.GLUTTONY,4).attr(Ya),new Re(O.ANGER_POINT,4).attr(bc,K.ATK,6),new Re(O.UNBURDEN,4).attr(Hh,y.UNBURDEN).bypassFaint().edgeCase(),new Re(O.HEATPROOF,4).attr(DI,I.FIRE,.5).attr(xU,.5).ignorable(),new Re(O.SIMPLE,4).attr(WS,2).ignorable(),new Re(O.DRY_SKIN,4).attr(YU,2,Oe.SUNNY,Oe.HARSH_SUN).attr(JL,2,Oe.RAIN,Oe.HEAVY_RAIN).attr(DI,I.FIRE,1.25).attr(Ji,I.WATER).ignorable(),new Re(O.DOWNLOAD,4).attr(nh),new Re(O.IRON_FIST,4).attr(Rs,(E,A,s)=>s.hasFlag(tA.PUNCHING_MOVE),1.2),new Re(O.POISON_HEAL,4).attr(Dh,ne.TOXIC,ne.POISON).attr(BU,ne.TOXIC,ne.POISON),new Re(O.ADAPTABILITY,4).attr(OU),new Re(O.SKILL_LINK,4).attr(yS),new Re(O.HYDRATION,4).attr($L).condition(ms(Oe.RAIN,Oe.HEAVY_RAIN)),new Re(O.SOLAR_POWER,4).attr(YU,2,Oe.SUNNY,Oe.HARSH_SUN).attr(fA,K.SPATK,1.5).condition(ms(Oe.SUNNY,Oe.HARSH_SUN)),new Re(O.QUICK_FEET,4).conditionalAttr(E=>E.status?E.status.effect===ne.PARALYSIS:!1,fA,K.SPD,2).conditionalAttr(E=>!!E.status||E.hasAbility(O.COMATOSE),fA,K.SPD,1.5),new Re(O.NORMALIZE,4).attr(Tn,I.NORMAL,1.2,(E,A,s)=>![t.HIDDEN_POWER,t.WEATHER_BALL,t.NATURAL_GIFT,t.JUDGMENT,t.TECHNO_BLAST].includes(s.id)),new Re(O.SNIPER,4).attr(dU,1.5),new Re(O.MAGIC_GUARD,4).attr(ME),new Re(O.NO_GUARD,4).attr(VS).attr(Ka),new Re(O.STALL,4).attr(gI,(E,A)=>!0,-.2),new Re(O.TECHNICIAN,4).attr(Rs,(E,A,s)=>{const R=new Et(s.power);return MA(vA,E,A,s,R),R.value<=60},1.5),new Re(O.LEAF_GUARD,4).attr(gR).condition(ms(Oe.SUNNY,Oe.HARSH_SUN)).ignorable(),new Re(O.KLUTZ,4).unimplemented(),new Re(O.MOLD_BREAKER,4).attr(Fs,E=>u.t("abilityTriggers:postSummonMoldBreaker",{pokemonNameWithAffix:te(E)})).attr(WI),new Re(O.SUPER_LUCK,4).attr(HU),new Re(O.AFTERMATH,4).attr(fh,4).bypassFaint(),new Re(O.ANTICIPATION,4).conditionalAttr(uJ(),Fs,E=>u.t("abilityTriggers:postSummonAnticipation",{pokemonNameWithAffix:te(E)})),new Re(O.FOREWARN,4).attr(Ch),new Re(O.UNAWARE,4).attr(yI,[K.ATK,K.DEF,K.SPATK,K.SPDEF,K.ACC,K.EVA]).ignorable(),new Re(O.TINTED_LENS,4).attr(SU,2,(E,A,s)=>((A==null?void 0:A.getMoveEffectiveness(E,s))??1)<=.5),new Re(O.FILTER,4).attr(NR,(E,A,s)=>E.getMoveEffectiveness(A,s)>=2,.75).ignorable(),new Re(O.SLOW_START,4).attr(Fn,y.SLOW_START,5),new Re(O.SCRAPPY,4).attr(Qr,I.GHOST,[I.NORMAL,I.FIGHTING]).attr(pa),new Re(O.STORM_DRAIN,4).attr(QU,I.WATER).attr(Ua,I.WATER,K.SPATK,1).ignorable(),new Re(O.ICE_BODY,4).attr(PI,Oe.HAIL).attr(JL,1,Oe.HAIL,Oe.SNOW),new Re(O.SOLID_ROCK,4).attr(NR,(E,A,s)=>E.getMoveEffectiveness(A,s)>=2,.75).ignorable(),new Re(O.SNOW_WARNING,4).attr(On,Oe.SNOW).attr(nn,Oe.SNOW),new Re(O.HONEY_GATHER,4).attr(Kh),new Re(O.FRISK,4).attr(Uh),new Re(O.RECKLESS,4).attr(Rs,(E,A,s)=>s.hasFlag(tA.RECKLESS_MOVE),1.2),new Re(O.MULTITYPE,4).attr(sA).attr(uA).attr(LE).attr(Os),new Re(O.FLOWER_GIFT,4).conditionalAttr(ms(Oe.SUNNY||Oe.HARSH_SUN),fA,K.ATK,1.5).conditionalAttr(ms(Oe.SUNNY||Oe.HARSH_SUN),fA,K.SPDEF,1.5).attr(sA).attr(Os).attr(PU,O.FLOWER_GIFT).attr(pU,O.FLOWER_GIFT,[Oe.NONE,Oe.SANDSTORM,Oe.STRONG_WINDS,Oe.FOG,Oe.HAIL,Oe.HEAVY_RAIN,Oe.SNOW,Oe.RAIN]).partial().ignorable(),new Re(O.BAD_DREAMS,4).attr(Gh),new Re(O.PICKPOCKET,5).attr(eh,(E,A,s)=>s.hasFlag(tA.MAKES_CONTACT)).condition(ol()),new Re(O.SHEER_FORCE,5).attr(Rs,(E,A,s)=>s.chance>=1,5461/4096).attr(PS,0),new Re(O.CONTRARY,5).attr(WS,-1).ignorable(),new Re(O.UNNERVE,5).attr(Cr),new Re(O.DEFIANT,5).attr(TU,(E,A,s)=>s<0,[K.ATK],2),new Re(O.DEFEATIST,5).attr(fA,K.ATK,.5).attr(fA,K.SPATK,.5).condition(E=>E.getHpRatio()<=.5),new Re(O.CURSED_BODY,5).attr(Qc,30).bypassFaint(),new Re(O.HEALER,5).conditionalAttr(E=>E.getAlly()&&ce(10)<3,$L,!0),new Re(O.FRIEND_GUARD,5).attr(nU,.75).ignorable(),new Re(O.WEAK_ARMOR,5).attr(XR,(E,A,s)=>s.category===Pt.PHYSICAL,K.DEF,-1).attr(XR,(E,A,s)=>s.category===Pt.PHYSICAL,K.SPD,2),new Re(O.HEAVY_METAL,5).attr(vS,2).ignorable(),new Re(O.LIGHT_METAL,5).attr(vS,.5).ignorable(),new Re(O.MULTISCALE,5).attr(NR,(E,A,s)=>E.isFullHp(),.5).ignorable(),new Re(O.TOXIC_BOOST,5).attr(Rs,(E,A,s)=>{var R,a;return s.category===Pt.PHYSICAL&&(((R=E==null?void 0:E.status)==null?void 0:R.effect)===ne.POISON||((a=E==null?void 0:E.status)==null?void 0:a.effect)===ne.TOXIC)},1.5),new Re(O.FLARE_BOOST,5).attr(Rs,(E,A,s)=>{var R;return s.category===Pt.SPECIAL&&((R=E==null?void 0:E.status)==null?void 0:R.effect)===ne.BURN},1.5),new Re(O.HARVEST,5).attr(Mh,"EATEN_BERRIES",E=>.5*(ms(Oe.SUNNY,Oe.HARSH_SUN)(E)?2:1)).edgeCase(),new Re(O.TELEPATHY,5).attr(vn,(E,A,s)=>E.getAlly()===A&&s instanceof g).ignorable(),new Re(O.MOODY,5).attr(_h),new Re(O.OVERCOAT,5).attr(PI).attr(vn,(E,A,s)=>E!==A&&s.hasFlag(tA.POWDER_MOVE)).ignorable(),new Re(O.POISON_TOUCH,5).attr(qc,30,ne.POISON),new Re(O.REGENERATOR,5).attr(Nh),new Re(O.BIG_PECKS,5).attr(zR,K.DEF).ignorable(),new Re(O.SAND_RUSH,5).attr(fA,K.SPD,2).attr(PI,Oe.SANDSTORM).condition(ms(Oe.SANDSTORM)),new Re(O.WONDER_SKIN,5).attr(iU).ignorable(),new Re(O.ANALYTIC,5).attr(Rs,(E,A,s)=>{const R=n.findPhase(a=>a instanceof wA&&a.pokemon.id!==(E==null?void 0:E.id));return ve(R)},1.3),new Re(O.ILLUSION,5).attr(sA).attr(uA).unimplemented(),new Re(O.IMPOSTER,5).attr(rh).attr(sA),new Re(O.INFILTRATOR,5).attr(Ni).partial(),new Re(O.MUMMY,5).attr(NU,O.MUMMY).bypassFaint(),new Re(O.MOXIE,5).attr(MI,K.ATK,1),new Re(O.JUSTIFIED,5).attr(XR,(E,A,s)=>A.getMoveType(s)===I.DARK&&s.category!==Pt.STATUS,K.ATK,1),new Re(O.RATTLED,5).attr(XR,(E,A,s)=>{const R=A.getMoveType(s);return s.category!==Pt.STATUS&&(R===I.DARK||R===I.BUG||R===I.GHOST)},K.SPD,1).attr(BS,[K.SPD],1),new Re(O.MAGIC_BOUNCE,5).ignorable().unimplemented(),new Re(O.SAP_SIPPER,5).attr(Ua,I.GRASS,K.ATK,1).ignorable(),new Re(O.PRANKSTER,5).attr(gI,(E,A)=>A.category===Pt.STATUS,1),new Re(O.SAND_FORCE,5).attr(YO,I.ROCK,1.3).attr(YO,I.GROUND,1.3).attr(YO,I.STEEL,1.3).attr(PI,Oe.SANDSTORM).condition(ms(Oe.SANDSTORM)),new Re(O.IRON_BARBS,5).attr(LU,8).bypassFaint(),new Re(O.ZEN_MODE,5).attr(KO,()=>0).attr(_I,E=>E.getHpRatio()<=.5?1:0).attr(pn,E=>E.getHpRatio()<=.5?1:0).attr(sA).attr(uA).attr(LE).attr(Os).bypassFaint(),new Re(O.VICTORY_STAR,5).attr(fA,K.ACC,1.1).partial(),new Re(O.TURBOBLAZE,5).attr(Fs,E=>u.t("abilityTriggers:postSummonTurboblaze",{pokemonNameWithAffix:te(E)})).attr(WI),new Re(O.TERAVOLT,5).attr(Fs,E=>u.t("abilityTriggers:postSummonTeravolt",{pokemonNameWithAffix:te(E)})).attr(WI),new Re(O.AROMA_VEIL,6).attr(Zr,[y.INFATUATED,y.TAUNT,y.DISABLED,y.TORMENT,y.HEAL_BLOCK]).ignorable(),new Re(O.FLOWER_VEIL,6).ignorable().unimplemented(),new Re(O.CHEEK_POUCH,6).attr(YS,1/3),new Re(O.PROTEAN,6).attr(Qa),new Re(O.FUR_COAT,6).attr(NR,(E,A,s)=>s.category===Pt.PHYSICAL,.5).ignorable(),new Re(O.MAGICIAN,6).attr(zc),new Re(O.BULLETPROOF,6).attr(vn,(E,A,s)=>E!==A&&s.hasFlag(tA.BALLBOMB_MOVE)).ignorable(),new Re(O.COMPETITIVE,6).attr(TU,(E,A,s)=>s<0,[K.SPATK],2),new Re(O.STRONG_JAW,6).attr(Rs,(E,A,s)=>s.hasFlag(tA.BITING_MOVE),1.5),new Re(O.REFRIGERATE,6).attr(Tn,I.ICE,1.2,(E,A,s)=>s.type===I.NORMAL&&!s.hasAttr(Ls)),new Re(O.SWEET_VEIL,6).attr(gS,ne.SLEEP).attr(Zr,y.DROWSY).ignorable().partial(),new Re(O.STANCE_CHANGE,6).attr(sA).attr(uA).attr(LE).attr(Os),new Re(O.GALE_WINGS,6).attr(gI,(E,A)=>E.isFullHp()&&E.getMoveType(A)===I.FLYING,1),new Re(O.MEGA_LAUNCHER,6).attr(Rs,(E,A,s)=>s.hasFlag(tA.PULSE_MOVE),1.5),new Re(O.GRASS_PELT,6).conditionalAttr(ll(Tt.GRASSY),fA,K.DEF,1.5).ignorable(),new Re(O.SYMBIOSIS,6).unimplemented(),new Re(O.TOUGH_CLAWS,6).attr(Rs,(E,A,s)=>s.hasFlag(tA.MAKES_CONTACT),1.3),new Re(O.PIXILATE,6).attr(Tn,I.FAIRY,1.2,(E,A,s)=>s.type===I.NORMAL&&!s.hasAttr(Ls)),new Re(O.GOOEY,6).attr(XR,(E,A,s)=>s.hasFlag(tA.MAKES_CONTACT),K.SPD,-1,!1),new Re(O.AERILATE,6).attr(Tn,I.FLYING,1.2,(E,A,s)=>s.type===I.NORMAL&&!s.hasAttr(Ls)),new Re(O.PARENTAL_BOND,6).attr(hS,.25),new Re(O.DARK_AURA,6).attr(Fs,E=>u.t("abilityTriggers:postSummonDarkAura",{pokemonNameWithAffix:te(E)})).attr(Fa,I.DARK,4/3),new Re(O.FAIRY_AURA,6).attr(Fs,E=>u.t("abilityTriggers:postSummonFairyAura",{pokemonNameWithAffix:te(E)})).attr(Fa,I.FAIRY,4/3),new Re(O.AURA_BREAK,6).ignorable().conditionalAttr(E=>n.getField(!0).some(A=>A.hasAbility(O.DARK_AURA)),Fa,I.DARK,9/16).conditionalAttr(E=>n.getField(!0).some(A=>A.hasAbility(O.FAIRY_AURA)),Fa,I.FAIRY,9/16).conditionalAttr(E=>n.getField(!0).some(A=>A.hasAbility(O.DARK_AURA)||A.hasAbility(O.FAIRY_AURA)),Fs,E=>u.t("abilityTriggers:postSummonAuraBreak",{pokemonNameWithAffix:te(E)})),new Re(O.PRIMORDIAL_SEA,6).attr(On,Oe.HEAVY_RAIN).attr(nn,Oe.HEAVY_RAIN).attr(QL).attr(qL).bypassFaint(),new Re(O.DESOLATE_LAND,6).attr(On,Oe.HARSH_SUN).attr(nn,Oe.HARSH_SUN).attr(QL).attr(qL).bypassFaint(),new Re(O.DELTA_STREAM,6).attr(On,Oe.STRONG_WINDS).attr(nn,Oe.STRONG_WINDS).attr(QL).attr(qL).bypassFaint(),new Re(O.STAMINA,7).attr(XR,(E,A,s)=>s.category!==Pt.STATUS,K.DEF,1),new Re(O.WIMP_OUT,7).attr(Ti).edgeCase(),new Re(O.EMERGENCY_EXIT,7).attr(Ti).edgeCase(),new Re(O.WATER_COMPACTION,7).attr(XR,(E,A,s)=>A.getMoveType(s)===I.WATER&&s.category!==Pt.STATUS,K.DEF,2),new Re(O.MERCILESS,7).attr(fU,(E,A,s)=>{var R,a;return((R=A==null?void 0:A.status)==null?void 0:R.effect)===ne.TOXIC||((a=A==null?void 0:A.status)==null?void 0:a.effect)===ne.POISON}),new Re(O.SHIELDS_DOWN,7).attr(KO,()=>0).attr(_I,E=>E.formIndex%7+(E.getHpRatio()<=.5?7:0)).attr(pn,E=>E.formIndex%7+(E.getHpRatio()<=.5?7:0)).attr(sA).attr(uA).attr(LE).attr(Os).bypassFaint().partial(),new Re(O.STAKEOUT,7).attr(Rs,(E,A,s)=>!!(A!=null&&A.turnData.switchedInThisTurn),2),new Re(O.WATER_BUBBLE,7).attr(DI,I.FIRE,.5).attr(YO,I.WATER,2).attr(gR,ne.BURN).ignorable(),new Re(O.STEELWORKER,7).attr(YO,I.STEEL),new Re(O.BERSERK,7).attr(XL,(E,A,s)=>s.category!==Pt.STATUS,.5,[K.SPATK],1).condition(ol()),new Re(O.SLUSH_RUSH,7).attr(fA,K.SPD,2).condition(ms(Oe.HAIL,Oe.SNOW)),new Re(O.LONG_REACH,7).attr(KU),new Re(O.LIQUID_VOICE,7).attr(Tn,I.WATER,1,(E,A,s)=>s.hasFlag(tA.SOUND_BASED)),new Re(O.TRIAGE,7).attr(gI,(E,A)=>A.hasFlag(tA.TRIAGE_MOVE),3),new Re(O.GALVANIZE,7).attr(Tn,I.ELECTRIC,1.2,(E,A,s)=>s.type===I.NORMAL&&!s.hasAttr(Ls)),new Re(O.SURGE_SURFER,7).conditionalAttr(ll(Tt.ELECTRIC),fA,K.SPD,2),new Re(O.SCHOOLING,7).attr(KO,()=>0).attr(_I,E=>E.level<20||E.getHpRatio()<=.25?0:1).attr(pn,E=>E.level<20||E.getHpRatio()<=.25?0:1).attr(sA).attr(uA).attr(LE).attr(Os).bypassFaint(),new Re(O.DISGUISE,7).attr(sA).attr(uA).attr(LE).attr(aR).attr(Os).conditionalAttr(E=>E.formIndex===0,Fn,y.DISGUISE,0,!1).attr(tu,(E,A,s)=>!!E.getTag(y.DISGUISE)&&E.getMoveEffectiveness(A,s)>0,0,y.DISGUISE,(E,A)=>u.t("abilityTriggers:disguiseAvoidedDamage",{pokemonNameWithAffix:te(E),abilityName:A}),E=>yt(E.getMaxHp()/8)).attr(KO,()=>0).bypassFaint().ignorable(),new Re(O.BATTLE_BOND,7).attr(Ah,()=>2).attr(KO,()=>1).attr(sA).attr(uA).attr(LE).attr(Os).bypassFaint(),new Re(O.POWER_CONSTRUCT,7).conditionalAttr(E=>E.formIndex===2||E.formIndex===4,KO,()=>2).conditionalAttr(E=>E.formIndex===3||E.formIndex===5,KO,()=>3).conditionalAttr(E=>E.formIndex===2||E.formIndex===4,_I,E=>E.getHpRatio()<=.5||E.getFormKey()==="complete"?4:2).conditionalAttr(E=>E.formIndex===2||E.formIndex===4,pn,E=>E.getHpRatio()<=.5||E.getFormKey()==="complete"?4:2).conditionalAttr(E=>E.formIndex===3||E.formIndex===5,_I,E=>E.getHpRatio()<=.5||E.getFormKey()==="10-complete"?5:3).conditionalAttr(E=>E.formIndex===3||E.formIndex===5,pn,E=>E.getHpRatio()<=.5||E.getFormKey()==="10-complete"?5:3).attr(sA).attr(uA).attr(LE).attr(Os).bypassFaint(),new Re(O.CORROSION,7).attr(eu,[ne.POISON,ne.TOXIC],[I.STEEL,I.POISON]).edgeCase(),new Re(O.COMATOSE,7).attr(sA).attr(uA).attr(LE).attr(gR,...mL()).attr(Sn,y.DROWSY),new Re(O.QUEENLY_MAJESTY,7).attr(Sr).ignorable(),new Re(O.INNARDS_OUT,7).attr(Bh).bypassFaint(),new Re(O.DANCER,7).attr(hh),new Re(O.BATTERY,7).attr(HS,[Pt.SPECIAL],1.3),new Re(O.FLUFFY,7).attr(NR,(E,A,s)=>s.hasFlag(tA.MAKES_CONTACT),.5).attr(NR,(E,A,s)=>A.getMoveType(s)===I.FIRE,2).ignorable(),new Re(O.DAZZLING,7).attr(Sr).ignorable(),new Re(O.SOUL_HEART,7).attr(Eh,K.SPATK,1),new Re(O.TANGLING_HAIR,7).attr(XR,(E,A,s)=>s.hasFlag(tA.MAKES_CONTACT),K.SPD,-1,!1),new Re(O.RECEIVER,7).attr(DU).attr(sA),new Re(O.POWER_OF_ALCHEMY,7).attr(DU).attr(sA),new Re(O.BEAST_BOOST,7).attr(MI,E=>{let A,s=0;for(const R of zn){const a=E.getStat(R,!1);a>s&&(A=R,s=a)}return A},1),new Re(O.RKS_SYSTEM,7).attr(sA).attr(uA).attr(LE).attr(Os),new Re(O.ELECTRIC_SURGE,7).attr(ua,Tt.ELECTRIC).attr(Da,Tt.ELECTRIC),new Re(O.PSYCHIC_SURGE,7).attr(ua,Tt.PSYCHIC).attr(Da,Tt.PSYCHIC),new Re(O.MISTY_SURGE,7).attr(ua,Tt.MISTY).attr(Da,Tt.MISTY),new Re(O.GRASSY_SURGE,7).attr(ua,Tt.GRASSY).attr(Da,Tt.GRASSY),new Re(O.FULL_METAL_BODY,7).attr(zR),new Re(O.SHADOW_SHIELD,7).attr(NR,(E,A,s)=>E.isFullHp(),.5),new Re(O.PRISM_ARMOR,7).attr(NR,(E,A,s)=>E.getMoveEffectiveness(A,s)>=2,.75),new Re(O.NEUROFORCE,7).attr(Rs,(E,A,s)=>((A==null?void 0:A.getMoveEffectiveness(E,s))??1)>=2,1.25),new Re(O.INTREPID_SWORD,8).attr(Wa,[K.ATK],1,!0),new Re(O.DAUNTLESS_SHIELD,8).attr(Wa,[K.DEF],1,!0),new Re(O.LIBERO,8).attr(Qa),new Re(O.BALL_FETCH,8).attr(ch).condition(DJ(O.BALL_FETCH)),new Re(O.COTTON_DOWN,8).attr(XR,(E,A,s)=>s.category!==Pt.STATUS,K.SPD,-1,!1,!0).bypassFaint(),new Re(O.PROPELLER_TAIL,8).attr(Xr),new Re(O.MIRROR_ARMOR,8).ignorable().unimplemented(),new Re(O.GULP_MISSILE,8).attr(LE).attr(aR).attr(Os).attr(sA).attr(uA).bypassFaint(),new Re(O.STALWART,8).attr(Xr),new Re(O.STEAM_ENGINE,8).attr(XR,(E,A,s)=>{const R=A.getMoveType(s);return s.category!==Pt.STATUS&&(R===I.FIRE||R===I.WATER)},K.SPD,6),new Re(O.PUNK_ROCK,8).attr(Rs,(E,A,s)=>s.hasFlag(tA.SOUND_BASED),1.3).attr(NR,(E,A,s)=>s.hasFlag(tA.SOUND_BASED),.5).ignorable(),new Re(O.SAND_SPIT,8).attr(Zc,Oe.SANDSTORM,(E,A,s)=>s.category!==Pt.STATUS),new Re(O.ICE_SCALES,8).attr(NR,(E,A,s)=>s.category===Pt.SPECIAL,.5).ignorable(),new Re(O.RIPEN,8).attr(lr),new Re(O.ICE_FACE,8).attr(sA).attr(uA).attr(LE).attr(aR).attr(Os).conditionalAttr(E=>E.formIndex===0,Fn,y.ICE_FACE,0,!1).conditionalAttr(ms(Oe.HAIL,Oe.SNOW),Fn,y.ICE_FACE,0).attr(WU,y.ICE_FACE,0,Oe.HAIL,Oe.SNOW).attr(tu,(E,A,s)=>s.category===Pt.PHYSICAL&&!!E.getTag(y.ICE_FACE),0,y.ICE_FACE,(E,A)=>u.t("abilityTriggers:iceFaceAvoidedDamage",{pokemonNameWithAffix:te(E),abilityName:A})).attr(KO,()=>0).bypassFaint().ignorable(),new Re(O.POWER_SPOT,8).attr(HS,[Pt.SPECIAL,Pt.PHYSICAL],1.3),new Re(O.MIMICRY,8).attr(su),new Re(O.SCREEN_CLEANER,8).attr(sh,[ge.AURORA_VEIL,ge.LIGHT_SCREEN,ge.REFLECT]),new Re(O.STEELY_SPIRIT,8).attr(CU,I.STEEL),new Re(O.PERISH_BODY,8).attr(kc,4),new Re(O.WANDERING_SPIRIT,8).attr(Xc).bypassFaint().edgeCase(),new Re(O.GORILLA_TACTICS,8).attr($c),new Re(O.NEUTRALIZING_GAS,8).attr(KI).attr(sA).attr(uA).attr(aR).attr(Fs,E=>u.t("abilityTriggers:postSummonNeutralizingGas",{pokemonNameWithAffix:te(E)})).partial(),new Re(O.PASTEL_VEIL,8).attr(ah,ne.POISON,ne.TOXIC).attr(gS,ne.POISON,ne.TOXIC).ignorable(),new Re(O.HUNGER_SWITCH,8).attr(pn,E=>E.getFormKey()?0:1).attr(pn,E=>E.getFormKey()?1:0).attr(sA).attr(uA).attr(aR).attr(Os).condition(E=>!E.isTerastallized()),new Re(O.QUICK_DRAW,8).attr(Au,30),new Re(O.UNSEEN_FIST,8).attr(jU),new Re(O.CURIOUS_MEDICINE,8).attr(Oh),new Re(O.TRANSISTOR,8).attr(YO,I.ELECTRIC),new Re(O.DRAGONS_MAW,8).attr(YO,I.DRAGON),new Re(O.CHILLING_NEIGH,8).attr(MI,K.ATK,1),new Re(O.GRIM_NEIGH,8).attr(MI,K.SPATK,1),new Re(O.AS_ONE_GLASTRIER,8).attr(Fs,E=>u.t("abilityTriggers:postSummonAsOneGlastrier",{pokemonNameWithAffix:te(E)})).attr(Cr).attr(MI,K.ATK,1).attr(sA).attr(uA).attr(LE),new Re(O.AS_ONE_SPECTRIER,8).attr(Fs,E=>u.t("abilityTriggers:postSummonAsOneSpectrier",{pokemonNameWithAffix:te(E)})).attr(Cr).attr(MI,K.SPATK,1).attr(sA).attr(uA).attr(LE),new Re(O.LINGERING_AROMA,9).attr(NU,O.LINGERING_AROMA).bypassFaint(),new Re(O.SEED_SOWER,9).attr(vc,Tt.GRASSY),new Re(O.THERMAL_EXCHANGE,9).attr(XR,(E,A,s)=>A.getMoveType(s)===I.FIRE&&s.category!==Pt.STATUS,K.ATK,1).attr(gR,ne.BURN).ignorable(),new Re(O.ANGER_SHELL,9).attr(XL,(E,A,s)=>s.category!==Pt.STATUS,.5,[K.ATK,K.SPATK,K.SPD],1).attr(XL,(E,A,s)=>s.category!==Pt.STATUS,.5,[K.DEF,K.SPDEF],-1).condition(ol()),new Re(O.PURIFYING_SALT,9).attr(gR).attr(DI,I.GHOST,.5).ignorable(),new Re(O.WELL_BAKED_BODY,9).attr(Ua,I.FIRE,K.DEF,2).ignorable(),new Re(O.WIND_RIDER,9).attr(Yc,(E,A,s)=>E!==A&&s.hasFlag(tA.WIND_MOVE)&&s.category!==Pt.STATUS,K.ATK,1).attr(mh,ge.TAILWIND).ignorable(),new Re(O.GUARD_DOG,9).attr(BS,[K.ATK],1,!0).attr($I).ignorable(),new Re(O.ROCKY_PAYLOAD,9).attr(YO,I.ROCK),new Re(O.WIND_POWER,9).attr(rU,(E,A,s)=>s.hasFlag(tA.WIND_MOVE),y.CHARGED),new Re(O.ZERO_TO_HERO,9).attr(sA).attr(uA).attr(LE).attr(aR).attr(Os).attr(KO,()=>0).attr(Th,E=>E.isFainted()?E.formIndex:1).bypassFaint(),new Re(O.COMMANDER,9).attr(kr).attr(Ka).attr(sA).attr(uA).edgeCase(),new Re(O.ELECTROMORPHOSIS,9).attr(rU,(E,A,s)=>s.category!==Pt.STATUS,y.CHARGED),new Re(O.PROTOSYNTHESIS,9).conditionalAttr(ms(Oe.SUNNY,Oe.HARSH_SUN),Fn,y.PROTOSYNTHESIS,0,!0).attr(WU,y.PROTOSYNTHESIS,0,Oe.SUNNY,Oe.HARSH_SUN).attr(sA).attr(uA).attr(aR).partial(),new Re(O.QUARK_DRIVE,9).conditionalAttr(ll(Tt.ELECTRIC),Fn,y.QUARK_DRIVE,0,!0).attr(uh,y.QUARK_DRIVE,0,Tt.ELECTRIC).attr(sA).attr(uA).attr(aR).partial(),new Re(O.GOOD_AS_GOLD,9).attr(vn,(E,A,s)=>E!==A&&s.category===Pt.STATUS).ignorable().partial(),new Re(O.VESSEL_OF_RUIN,9).attr(ma,K.SPATK,.75).attr(Fs,E=>u.t("abilityTriggers:postSummonVesselOfRuin",{pokemonNameWithAffix:te(E),statName:u.t(hE(K.SPATK))})).ignorable(),new Re(O.SWORD_OF_RUIN,9).attr(ma,K.DEF,.75).attr(Fs,E=>u.t("abilityTriggers:postSummonSwordOfRuin",{pokemonNameWithAffix:te(E),statName:u.t(hE(K.DEF))})),new Re(O.TABLETS_OF_RUIN,9).attr(ma,K.ATK,.75).attr(Fs,E=>u.t("abilityTriggers:postSummonTabletsOfRuin",{pokemonNameWithAffix:te(E),statName:u.t(hE(K.ATK))})).ignorable(),new Re(O.BEADS_OF_RUIN,9).attr(ma,K.SPDEF,.75).attr(Fs,E=>u.t("abilityTriggers:postSummonBeadsOfRuin",{pokemonNameWithAffix:te(E),statName:u.t(hE(K.SPDEF))})),new Re(O.ORICHALCUM_PULSE,9).attr(On,Oe.SUNNY).attr(nn,Oe.SUNNY).conditionalAttr(ms(Oe.SUNNY,Oe.HARSH_SUN),fA,K.ATK,4/3),new Re(O.HADRON_ENGINE,9).attr(ua,Tt.ELECTRIC).attr(Da,Tt.ELECTRIC).conditionalAttr(ll(Tt.ELECTRIC),fA,K.SPATK,4/3),new Re(O.OPPORTUNIST,9).attr(vU),new Re(O.CUD_CHEW,9).unimplemented(),new Re(O.SHARPNESS,9).attr(Rs,(E,A,s)=>s.hasFlag(tA.SLICING_MOVE),1.5),new Re(O.SUPREME_OVERLORD,9).attr(Jc,(E,A,s)=>1+.1*Math.min(E.isPlayer()?n.currentBattle.playerFaints:n.currentBattle.enemyFaints,5)).partial(),new Re(O.COSTAR,9).attr(ih),new Re(O.TOXIC_DEBRIS,9).attr(yc,(E,A,s)=>s.category===Pt.PHYSICAL,ge.TOXIC_SPIKES).bypassFaint(),new Re(O.ARMOR_TAIL,9).attr(Sr).ignorable(),new Re(O.EARTH_EATER,9).attr(Ji,I.GROUND).ignorable(),new Re(O.MYCELIUM_MIGHT,9).attr(gI,(E,A)=>A.category===Pt.STATUS,-.2).attr(Eu,(E,A)=>A.category===Pt.STATUS).attr(WI,(E,A)=>A.category===Pt.STATUS),new Re(O.MINDS_EYE,9).attr(Qr,I.GHOST,[I.NORMAL,I.FIGHTING]).attr(zR,K.ACC).attr(yI,[K.EVA]).ignorable(),new Re(O.SUPERSWEET_SYRUP,9).attr(Wa,[K.EVA],-1),new Re(O.HOSPITALITY,9).attr(Rh,4,!0),new Re(O.TOXIC_CHAIN,9).attr(UU,!1,30,ne.TOXIC),new Re(O.EMBODY_ASPECT_TEAL,9).attr(Qi,[K.SPD],1,!0).attr(sA).attr(uA).attr(aR).partial(),new Re(O.EMBODY_ASPECT_WELLSPRING,9).attr(Qi,[K.SPDEF],1,!0).attr(sA).attr(uA).attr(aR).partial(),new Re(O.EMBODY_ASPECT_HEARTHFLAME,9).attr(Qi,[K.ATK],1,!0).attr(sA).attr(uA).attr(aR).partial(),new Re(O.EMBODY_ASPECT_CORNERSTONE,9).attr(Qi,[K.DEF],1,!0).attr(sA).attr(uA).attr(aR).partial(),new Re(O.TERA_SHIFT,9).attr(_I,E=>E.getFormKey()?0:1).attr(sA).attr(uA).attr(LE).attr(aR).attr(Os),new Re(O.TERA_SHELL,9).attr(IU).attr(sA).attr(uA).ignorable(),new Re(O.TERAFORM_ZERO,9).attr(sA).attr(uA).unimplemented(),new Re(O.POISON_PUPPETEER,9).attr(sA).attr(uA).attr(GU,ne.POISON,ne.TOXIC))}N(yJ,"initAbilities");var JE=(E=>(E[E.FAINT=0]="FAINT",E[E.MOVE=1]="MOVE",E[E.PRE_MOVE=2]="PRE_MOVE",E[E.AFTER_MOVE=3]="AFTER_MOVE",E[E.MOVE_EFFECT=4]="MOVE_EFFECT",E[E.TURN_END=5]="TURN_END",E[E.HIT=6]="HIT",E[E.AFTER_HIT=7]="AFTER_HIT",E[E.CUSTOM=8]="CUSTOM",E))(JE||{});const oy=class oy{constructor(A,s,R,a,i,r=!1){this.tagType=A,this.lapseTypes=Array.isArray(s)?s:[s],this.turnCount=R,this.sourceMove=a,this.sourceId=i,this.isBatonPassable=r}canAdd(A){return!0}onAdd(A){}onRemove(A){}onOverlap(A){}lapse(A,s){return--this.turnCount>0}getDescriptor(){return""}isSourceLinked(){return!1}getMoveName(){return this.sourceMove?we[this.sourceMove].name:null}loadTag(A){this.turnCount=A.turnCount,this.sourceMove=A.sourceMove,this.sourceId=A.sourceId}getSourcePokemon(){return this.sourceId?n.getPokemonById(this.sourceId):null}};N(oy,"BattlerTag");let Yt=oy;const ly=class ly extends Yt{constructor(A,s,R,a,i){super(A,s,R,a,i)}lapse(A,s){if(s===2){const R=n.getCurrentPhase(),a=R.move;return this.isMoveRestricted(a.moveId,A)&&(this.interruptedText(A,a.moveId)&&n.queueMessage(this.interruptedText(A,a.moveId)),R.cancel()),!0}return super.lapse(A,s)}isMoveTargetRestricted(A,s,R){return!1}interruptedText(A,s){return""}};N(ly,"MoveRestrictionBattlerTag");let cO=ly;const Cy=class Cy extends cO{constructor(){super(y.THROAT_CHOPPED,[5,2],2,t.THROAT_CHOP)}isMoveRestricted(A){return we[A].hasFlag(tA.SOUND_BASED)}selectionDeniedText(A,s){return u.t("battle:moveCannotBeSelected",{moveName:we[s].name})}interruptedText(A,s){return u.t("battle:throatChopInterruptedMove",{pokemonName:te(A)})}};N(Cy,"ThroatChoppedTag");let ph=Cy;const Uy=class Uy extends cO{constructor(A){super(y.DISABLED,[2,5],4,t.DISABLE,A),this.moveId=t.NONE}isMoveRestricted(A){return A===this.moveId}onAdd(A){super.onAdd(A);const s=A.getLastXMoves().find(R=>R.move!==t.NONE&&R.move!==t.STRUGGLE&&!R.virtual);s!==void 0&&(this.moveId=s.move,n.queueMessage(u.t("battlerTags:disabledOnAdd",{pokemonNameWithAffix:te(A),moveName:we[this.moveId].name})))}onRemove(A){super.onRemove(A),n.queueMessage(u.t("battlerTags:disabledLapse",{pokemonNameWithAffix:te(A),moveName:we[this.moveId].name}))}selectionDeniedText(A,s){return u.t("battle:moveDisabled",{moveName:we[s].name})}interruptedText(A,s){return u.t("battle:disableInterruptedMove",{pokemonNameWithAffix:te(A),moveName:we[s].name})}loadTag(A){super.loadTag(A),this.moveId=A.moveId}};N(Uy,"DisabledTag");let Wh=Uy;const TM=class TM extends cO{constructor(){super(y.GORILLA_TACTICS,8,0),this.moveId=t.NONE}isMoveRestricted(A){return A!==this.moveId}canAdd(A){return this.getLastValidMove(A)!==void 0&&!A.getTag(TM)}onAdd(A){const s=this.getLastValidMove(A);s&&(this.moveId=s,A.setStat(K.ATK,A.getStat(K.ATK,!1)*1.5,!1))}loadTag(A){super.loadTag(A),this.moveId=A.moveId}selectionDeniedText(A,s){return u.t("battle:canOnlyUseMove",{moveName:we[this.moveId].name,pokemonName:te(A)})}getLastValidMove(A){const s=A.getLastXMoves().find(R=>R.move!==t.NONE&&R.move!==t.STRUGGLE&&!R.virtual);return s==null?void 0:s.move}};N(TM,"GorillaTacticsTag");let Yh=TM;const uy=class uy extends Yt{constructor(A){super(y.RECHARGING,[2,5],2,A)}onAdd(A){super.onAdd(A),A.getMoveQueue().push({move:t.NONE,targets:[]})}lapse(A,s){return s===2&&(n.queueMessage(u.t("battlerTags:rechargingLapse",{pokemonNameWithAffix:te(A)})),n.getCurrentPhase().cancel(),A.getMoveQueue().shift()),super.lapse(A,s)}};N(uy,"RechargingTag");let yh=uy;const Dy=class Dy extends Yt{constructor(){super(y.BEAK_BLAST_CHARGING,[2,5,7],1,t.BEAK_BLAST)}onAdd(A){new zS(AI.BEAK_BLAST_CHARGING,this.sourceMove,A).play(),n.queueMessage(u.t("moveTriggers:startedHeatingUpBeak",{pokemonName:te(A)}))}lapse(A,s){if(s===7){const R=b8();return R!=null&&R.move.hasFlag(tA.MAKES_CONTACT)&&R.attacker.trySetStatus(ne.BURN,!0,A),!0}return super.lapse(A,s)}};N(Dy,"BeakBlastChargingTag");let wh=Dy;const My=class My extends Yt{constructor(){super(y.SHELL_TRAP,[5,7],1),this.activated=!1}onAdd(A){n.queueMessage(u.t("moveTriggers:setUpShellTrap",{pokemonName:te(A)}))}lapse(A,s){if(s===7){const R=b8();if((R==null?void 0:R.move.category)===Pt.PHYSICAL&&A.isOpponent(R.attacker)){const a=n.phaseQueue.findIndex(r=>r instanceof wA&&r.pokemon===A),i=n.phaseQueue.findIndex(r=>r instanceof wA);if(a!==-1&&a!==i){const r=n.phaseQueue.splice(a,1)[0];n.prependToPhase(r,wA)}this.activated=!0}return!0}return super.lapse(A,s)}};N(My,"ShellTrapTag");let Ru=My;const SM=class SM extends Yt{constructor(A,s,R,a,i){super(A,s,R,a,i,!0)}canAdd(A){const s=n.getPokemonById(this.sourceId),R=we[this.sourceMove],a=A.isOfType(I.GHOST),i=A.getTag(SM),r=R.hitsSubstitute(s,A);return!i&&!a&&!r}onAdd(A){super.onAdd(A),n.queueMessage(this.getTrapMessage(A))}onRemove(A){super.onRemove(A),n.queueMessage(u.t("battlerTags:trappedOnRemove",{pokemonNameWithAffix:te(A),moveName:this.getMoveName()}))}getDescriptor(){return u.t("battlerTags:trappedDesc")}isSourceLinked(){return!0}getTrapMessage(A){return u.t("battlerTags:trappedOnAdd",{pokemonNameWithAffix:te(A)})}};N(SM,"TrappedTag");let vR=SM;const _y=class _y extends vR{constructor(A){super(y.NO_RETREAT,8,0,t.NO_RETREAT,A)}canAdd(A){return!A.getTag(vR)}};N(_y,"NoRetreatTag");let vh=_y;const Py=class Py extends Yt{constructor(A){super(y.FLINCHED,[2,5],0,A)}onAdd(A){super.onAdd(A),ut($U,A,null)}lapse(A,s){return s===2&&(n.getCurrentPhase().cancel(),n.queueMessage(u.t("battlerTags:flinchedLapse",{pokemonNameWithAffix:te(A)}))),super.lapse(A,s)}getDescriptor(){return u.t("battlerTags:flinchedDesc")}};N(Py,"FlinchedTag");let Vh=Py;const Gy=class Gy extends Yt{constructor(A){super(y.INTERRUPTED,2,0,A)}canAdd(A){return!!A.getTag(y.FLYING)}onAdd(A){super.onAdd(A),A.getMoveQueue().shift(),A.pushMoveHistory({move:t.NONE,result:oA.OTHER,targets:[]})}lapse(A,s){return n.getCurrentPhase().cancel(),super.lapse(A,s)}};N(Gy,"InterruptedTag");let xh=Gy;const cy=class cy extends Yt{constructor(A,s){super(y.CONFUSED,1,A,s,void 0,!0)}canAdd(A){var s;return((s=n.arena.terrain)==null?void 0:s.terrainType)!==Tt.MISTY||!A.isGrounded()}onAdd(A){super.onAdd(A),n.unshiftPhase(new Ns(A.getBattlerIndex(),void 0,lA.CONFUSION)),n.queueMessage(u.t("battlerTags:confusedOnAdd",{pokemonNameWithAffix:te(A)}))}onRemove(A){super.onRemove(A),n.queueMessage(u.t("battlerTags:confusedOnRemove",{pokemonNameWithAffix:te(A)}))}onOverlap(A){super.onOverlap(A),n.queueMessage(u.t("battlerTags:confusedOnOverlap",{pokemonNameWithAffix:te(A)}))}lapse(A,s){const R=s!==8&&super.lapse(A,s);if(R&&(n.queueMessage(u.t("battlerTags:confusedLapse",{pokemonNameWithAffix:te(A)})),n.unshiftPhase(new Ns(A.getBattlerIndex(),void 0,lA.CONFUSION)),A.randSeedInt(3)===0)){const a=A.getEffectiveStat(K.ATK),i=A.getEffectiveStat(K.DEF),r=yt(((2*A.level/5+2)*40*a/i/50+2)*(A.randSeedIntRange(85,100)/100));n.queueMessage(u.t("battlerTags:confusedLapseHurtItself")),A.damageAndUpdate(r),A.battleData.hitCount++,n.getCurrentPhase().cancel()}return R}getDescriptor(){return u.t("battlerTags:confusedDesc")}};N(cy,"ConfusedTag");let bh=cy;const hy=class hy extends Yt{constructor(A,s){super(y.DESTINY_BOND,2,1,A,s,!0)}lapse(A,s){if(s!==8)return super.lapse(A,s);const R=this.sourceId?n.getPokemonById(this.sourceId):null;return R!=null&&R.isFainted()?(R==null?void 0:R.getAlly())===A?!1:A.isBossImmune()?(n.queueMessage(u.t("battlerTags:destinyBondLapseIsBoss",{pokemonNameWithAffix:te(A)})),!1):(n.queueMessage(u.t("battlerTags:destinyBondLapse",{pokemonNameWithAffix:te(R),pokemonNameWithAffix2:te(A)})),A.damageAndUpdate(A.hp,vt.ONE_HIT_KO,!1,!1,!0),!1):!0}};N(hy,"DestinyBondTag");let kh=hy;const Hy=class Hy extends Yt{constructor(A,s){super(y.INFATUATED,1,1,A,s)}canAdd(A){if(this.sourceId){const s=n.getPokemonById(this.sourceId);return s?A.isOppositeGender(s):(console.warn("canAdd: this.sourceId is not a valid pokemon id!",this.sourceId),!1)}else return console.warn("canAdd: this.sourceId is undefined"),!1}onAdd(A){super.onAdd(A),n.queueMessage(u.t("battlerTags:infatuatedOnAdd",{pokemonNameWithAffix:te(A),sourcePokemonName:te(n.getPokemonById(this.sourceId)??void 0)}))}onOverlap(A){super.onOverlap(A),n.queueMessage(u.t("battlerTags:infatuatedOnOverlap",{pokemonNameWithAffix:te(A)}))}lapse(A,s){const R=s!==8||super.lapse(A,s);return R&&(n.queueMessage(u.t("battlerTags:infatuatedLapse",{pokemonNameWithAffix:te(A),sourcePokemonName:te(n.getPokemonById(this.sourceId)??void 0)})),n.unshiftPhase(new Ns(A.getBattlerIndex(),void 0,lA.ATTRACT)),A.randSeedInt(2)&&(n.queueMessage(u.t("battlerTags:infatuatedLapseImmobilize",{pokemonNameWithAffix:te(A)})),n.getCurrentPhase().cancel())),R}onRemove(A){super.onRemove(A),n.queueMessage(u.t("battlerTags:infatuatedOnRemove",{pokemonNameWithAffix:te(A)}))}isSourceLinked(){return!0}getDescriptor(){return u.t("battlerTags:infatuatedDesc")}};N(Hy,"InfatuatedTag");let Zh=Hy;const dy=class dy extends Yt{constructor(A){super(y.SEEDED,5,1,t.LEECH_SEED,A,!0)}loadTag(A){super.loadTag(A),this.sourceIndex=A.sourceIndex}canAdd(A){return!A.isOfType(I.GRASS)}onAdd(A){super.onAdd(A),n.queueMessage(u.t("battlerTags:seededOnAdd",{pokemonNameWithAffix:te(A)})),this.sourceIndex=n.getPokemonById(this.sourceId).getBattlerIndex()}lapse(A,s){const R=s!==8||super.lapse(A,s);if(R){const a=A.getOpponents().find(i=>i.getBattlerIndex()===this.sourceIndex);if(a){const i=new Lt(!1);if(ut(ME,A,i),!i.value){n.unshiftPhase(new Ns(a.getBattlerIndex(),A.getBattlerIndex(),lA.LEECH_SEED));const r=A.damageAndUpdate(yt(A.getMaxHp()/8)),L=A.hasAbilityWithAttr(_S,!1);n.unshiftPhase(new FE(a.getBattlerIndex(),L?r*-1:r,L?u.t("battlerTags:seededLapseShed",{pokemonNameWithAffix:te(A)}):u.t("battlerTags:seededLapse",{pokemonNameWithAffix:te(A)}),!1,!0))}}}return R}getDescriptor(){return u.t("battlerTags:seedDesc")}};N(dy,"SeedTag");let Xh=dy;const fy=class fy extends Yt{constructor(){super(y.POWDER,[2,5],1)}onAdd(A){super.onAdd(A),n.queueMessage(u.t("battlerTags:powderOnAdd",{pokemonNameWithAffix:te(A)}))}lapse(A,s){if(s===2){const R=n.getCurrentPhase();if(R instanceof wA){const a=R.move.getMove(),i=n.arena.weather;if(A.getMoveType(a)===I.FIRE&&!(i&&i.weatherType===Oe.HEAVY_RAIN&&!i.isEffectSuppressed())){R.fail(),R.showMoveText(),n.unshiftPhase(new Ns(A.getBattlerIndex(),A.getBattlerIndex(),lA.POWDER));const r=new Lt(!1);ut(ME,A,r),r.value||A.damageAndUpdate(Math.floor(A.getMaxHp()/4),vt.OTHER),n.queueMessage(u.t("battlerTags:powderLapse",{moveName:a.name}))}}return!0}else return super.lapse(A,s)}};N(fy,"PowderTag");let Qh=fy;const By=class By extends Yt{constructor(){super(y.NIGHTMARE,5,1,t.NIGHTMARE)}onAdd(A){super.onAdd(A),n.queueMessage(u.t("battlerTags:nightmareOnAdd",{pokemonNameWithAffix:te(A)}))}onOverlap(A){super.onOverlap(A),n.queueMessage(u.t("battlerTags:nightmareOnOverlap",{pokemonNameWithAffix:te(A)}))}lapse(A,s){const R=s!==8||super.lapse(A,s);if(R){n.queueMessage(u.t("battlerTags:nightmareLapse",{pokemonNameWithAffix:te(A)})),n.unshiftPhase(new Ns(A.getBattlerIndex(),void 0,lA.CURSE));const a=new Lt(!1);ut(ME,A,a),a.value||A.damageAndUpdate(yt(A.getMaxHp()/4))}return R}getDescriptor(){return u.t("battlerTags:nightmareDesc")}};N(By,"NightmareTag");let Jh=By;const gy=class gy extends Yt{constructor(A,s,R){super(y.FRENZY,8,A,s,R)}onRemove(A){super.onRemove(A),this.turnCount<2&&A.addTag(y.CONFUSED,A.randSeedIntRange(2,4))}};N(gy,"FrenzyTag");let $h=gy;const Ky=class Ky extends cO{constructor(A){super(y.ENCORE,[8,3],3,t.ENCORE,A)}loadTag(A){super.loadTag(A),this.moveId=A.moveId}canAdd(A){const s=A.getLastXMoves(1);if(!s.length)return!1;const R=s[0];if(!R.move||R.virtual)return!1;switch(R.move){case t.MIMIC:case t.MIRROR_MOVE:case t.TRANSFORM:case t.STRUGGLE:case t.SKETCH:case t.SLEEP_TALK:case t.ENCORE:return!1}return this.moveId=R.move,!0}onAdd(A){if(super.onRemove(A),n.queueMessage(u.t("battlerTags:encoreOnAdd",{pokemonNameWithAffix:te(A)})),n.findPhase(R=>R instanceof wA&&R.pokemon===A)){const R=A.getMoveset().find(a=>a.moveId===this.moveId);if(R){const a=A.getLastXMoves(1)[0];n.tryReplacePhase(i=>i instanceof wA&&i.pokemon===A,new wA(A,a.targets,R))}}}lapse(A,s){if(s===8){const R=A.getMoveset().find(a=>(a==null?void 0:a.moveId)===this.moveId);return!!(R&&(R==null?void 0:R.getPpRatio())>0)}else return super.lapse(A,s)}isMoveRestricted(A,s){return A!==this.moveId}selectionDeniedText(A,s){return u.t("battle:moveDisabled",{moveName:we[s].name})}onRemove(A){super.onRemove(A),n.queueMessage(u.t("battlerTags:encoreOnRemove",{pokemonNameWithAffix:te(A)}))}};N(Ky,"EncoreTag");let xS=Ky;const my=class my extends Yt{constructor(A){super(y.HELPING_HAND,5,1,t.HELPING_HAND,A)}onAdd(A){n.queueMessage(u.t("battlerTags:helpingHandOnAdd",{pokemonNameWithAffix:te(n.getPokemonById(this.sourceId)??void 0),pokemonName:te(A)}))}};N(my,"HelpingHandTag");let Ou=my;const Fy=class Fy extends vR{constructor(A){super(y.INGRAIN,5,1,t.INGRAIN,A)}canAdd(A){return!A.getTag(y.TRAPPED)}lapse(A,s){const R=s!==8||super.lapse(A,s);return R&&n.unshiftPhase(new FE(A.getBattlerIndex(),yt(A.getMaxHp()/16),u.t("battlerTags:ingrainLapse",{pokemonNameWithAffix:te(A)}),!0)),R}getTrapMessage(A){return u.t("battlerTags:ingrainOnTrap",{pokemonNameWithAffix:te(A)})}getDescriptor(){return u.t("battlerTags:ingrainDesc")}};N(Fy,"IngrainTag");let zh=Fy;const py=class py extends vR{constructor(A){super(y.OCTOLOCK,5,1,t.OCTOLOCK,A)}lapse(A,s){return s!==8||super.lapse(A,s)?(n.unshiftPhase(new zt(A.getBattlerIndex(),!1,[K.DEF,K.SPDEF],-1)),!0):!1}};N(py,"OctolockTag");let qh=py;const Wy=class Wy extends Yt{constructor(){super(y.AQUA_RING,5,1,t.AQUA_RING,void 0,!0)}onAdd(A){super.onAdd(A),n.queueMessage(u.t("battlerTags:aquaRingOnAdd",{pokemonNameWithAffix:te(A)}))}lapse(A,s){const R=s!==8||super.lapse(A,s);return R&&n.unshiftPhase(new FE(A.getBattlerIndex(),yt(A.getMaxHp()/16),u.t("battlerTags:aquaRingLapse",{moveName:this.getMoveName(),pokemonName:te(A)}),!0)),R}};N(Wy,"AquaRingTag");let jh=Wy;const Yy=class Yy extends Yt{constructor(){super(y.MINIMIZED,5,1,t.MINIMIZE)}onAdd(A){super.onAdd(A)}lapse(A,s){return s!==8||super.lapse(A,s)}onRemove(A){super.onRemove(A)}};N(Yy,"MinimizeTag");let eH=Yy;const yy=class yy extends Yt{constructor(){super(y.DROWSY,5,2,t.YAWN)}canAdd(A){var s;return((s=n.arena.terrain)==null?void 0:s.terrainType)!==Tt.ELECTRIC||!A.isGrounded()}onAdd(A){super.onAdd(A),n.queueMessage(u.t("battlerTags:drowsyOnAdd",{pokemonNameWithAffix:te(A)}))}lapse(A,s){return super.lapse(A,s)?!0:(A.trySetStatus(ne.SLEEP,!0),!1)}getDescriptor(){return u.t("battlerTags:drowsyDesc")}};N(yy,"DrowsyTag");let tH=yy;const wy=class wy extends vR{constructor(A,s,R,a,i){super(A,5,R,a,i),this.commonAnim=s}loadTag(A){super.loadTag(A),this.commonAnim=A.commonAnim}canAdd(A){return!A.getTag(vR)&&!A.getTag(y.SUBSTITUTE)}lapse(A,s){const R=super.lapse(A,s);if(R){n.queueMessage(u.t("battlerTags:damagingTrapLapse",{pokemonNameWithAffix:te(A),moveName:this.getMoveName()})),n.unshiftPhase(new Ns(A.getBattlerIndex(),void 0,this.commonAnim));const a=new Lt(!1);ut(ME,A,a),a.value||A.damageAndUpdate(yt(A.getMaxHp()/8))}return R}};N(wy,"DamagingTrapTag");let hO=wy;const vy=class vy extends hO{constructor(A,s){super(y.BIND,lA.BIND,A,t.BIND,s)}getTrapMessage(A){return u.t("battlerTags:bindOnTrap",{pokemonNameWithAffix:te(A),sourcePokemonName:te(n.getPokemonById(this.sourceId)??void 0),moveName:this.getMoveName()})}};N(vy,"BindTag");let AH=vy;const Vy=class Vy extends hO{constructor(A,s){super(y.WRAP,lA.WRAP,A,t.WRAP,s)}getTrapMessage(A){return u.t("battlerTags:wrapOnTrap",{pokemonNameWithAffix:te(A),sourcePokemonName:te(n.getPokemonById(this.sourceId)??void 0)})}};N(Vy,"WrapTag");let EH=Vy;const xy=class xy extends hO{constructor(A,s,R,a,i){super(A,s,R,a,i)}getTrapMessage(A){return u.t("battlerTags:vortexOnTrap",{pokemonNameWithAffix:te(A)})}};N(xy,"VortexTrapTag");let nu=xy;const by=class by extends nu{constructor(A,s){super(y.FIRE_SPIN,lA.FIRE_SPIN,A,t.FIRE_SPIN,s)}};N(by,"FireSpinTag");let sH=by;const ky=class ky extends nu{constructor(A,s){super(y.WHIRLPOOL,lA.WHIRLPOOL,A,t.WHIRLPOOL,s)}};N(ky,"WhirlpoolTag");let RH=ky;const Zy=class Zy extends hO{constructor(A,s){super(y.CLAMP,lA.CLAMP,A,t.CLAMP,s)}getTrapMessage(A){return u.t("battlerTags:clampOnTrap",{sourcePokemonNameWithAffix:te(n.getPokemonById(this.sourceId)??void 0),pokemonName:te(A)})}};N(Zy,"ClampTag");let OH=Zy;const Xy=class Xy extends hO{constructor(A,s){super(y.SAND_TOMB,lA.SAND_TOMB,A,t.SAND_TOMB,s)}getTrapMessage(A){return u.t("battlerTags:sandTombOnTrap",{pokemonNameWithAffix:te(A),moveName:this.getMoveName()})}};N(Xy,"SandTombTag");let nH=Xy;const Qy=class Qy extends hO{constructor(A,s){super(y.MAGMA_STORM,lA.MAGMA_STORM,A,t.MAGMA_STORM,s)}getTrapMessage(A){return u.t("battlerTags:magmaStormOnTrap",{pokemonNameWithAffix:te(A)})}};N(Qy,"MagmaStormTag");let IH=Qy;const Jy=class Jy extends hO{constructor(A,s){super(y.SNAP_TRAP,lA.SNAP_TRAP,A,t.SNAP_TRAP,s)}getTrapMessage(A){return u.t("battlerTags:snapTrapOnTrap",{pokemonNameWithAffix:te(A)})}};N(Jy,"SnapTrapTag");let aH=Jy;const $y=class $y extends hO{constructor(A,s){super(y.THUNDER_CAGE,lA.THUNDER_CAGE,A,t.THUNDER_CAGE,s)}getTrapMessage(A){return u.t("battlerTags:thunderCageOnTrap",{pokemonNameWithAffix:te(A),sourcePokemonNameWithAffix:te(n.getPokemonById(this.sourceId)??void 0)})}};N($y,"ThunderCageTag");let iH=$y;const zy=class zy extends hO{constructor(A,s){super(y.INFESTATION,lA.INFESTATION,A,t.INFESTATION,s)}getTrapMessage(A){return u.t("battlerTags:infestationOnTrap",{pokemonNameWithAffix:te(A),sourcePokemonNameWithAffix:te(n.getPokemonById(this.sourceId)??void 0)})}};N(zy,"InfestationTag");let rH=zy;const qy=class qy extends Yt{constructor(A,s=y.PROTECTED){super(s,5,0,A)}onAdd(A){super.onAdd(A),n.queueMessage(u.t("battlerTags:protectedOnAdd",{pokemonNameWithAffix:te(A)}))}lapse(A,s){if(s===8){new qI(lA.PROTECT,A).play(),n.queueMessage(u.t("battlerTags:protectedLapse",{pokemonNameWithAffix:te(A)}));const R=n.getCurrentPhase();return R instanceof PR&&R.stopMultiHit(A),!0}return super.lapse(A,s)}};N(qy,"ProtectedTag");let zI=qy;const jy=class jy extends zI{};N(jy,"DamageProtectedTag");let $r=jy;const ew=class ew extends zI{constructor(A,s){super(A,y.SPIKY_SHIELD),this.damageRatio=s}loadTag(A){super.loadTag(A),this.damageRatio=A.damageRatio}lapse(A,s){const R=super.lapse(A,s);if(s===8){const a=n.getCurrentPhase();if(a instanceof PR&&a.move.getMove().hasFlag(tA.MAKES_CONTACT)){const i=a.getPokemon();i.hasAbilityWithAttr(ME)||i.damageAndUpdate(yt(i.getMaxHp()*(1/this.damageRatio)),vt.OTHER)}}return R}};N(ew,"ContactDamageProtectedTag");let LH=ew;const tw=class tw extends $r{constructor(A,s,R,a){super(A,s),this.stat=R,this.levels=a}loadTag(A){super.loadTag(A),this.stat=A.stat,this.levels=A.levels}lapse(A,s){const R=super.lapse(A,s);if(s===8){const a=n.getCurrentPhase();if(a instanceof PR&&a.move.getMove().hasFlag(tA.MAKES_CONTACT)){const i=a.getPokemon();n.unshiftPhase(new zt(i.getBattlerIndex(),!1,[this.stat],this.levels))}}return R}};N(tw,"ContactStatStageChangeProtectedTag");let jL=tw;const Aw=class Aw extends zI{constructor(A){super(A,y.BANEFUL_BUNKER)}lapse(A,s){const R=super.lapse(A,s);if(s===8){const a=n.getCurrentPhase();a instanceof PR&&a.move.getMove().hasFlag(tA.MAKES_CONTACT)&&a.getPokemon().trySetStatus(ne.POISON,!0,A)}return R}};N(Aw,"ContactPoisonProtectedTag");let NH=Aw;const Ew=class Ew extends $r{constructor(A){super(A,y.BURNING_BULWARK)}lapse(A,s){const R=super.lapse(A,s);if(s===8){const a=n.getCurrentPhase();a instanceof PR&&a.move.getMove().hasFlag(tA.MAKES_CONTACT)&&a.getPokemon().trySetStatus(ne.BURN,!0)}return R}};N(Ew,"ContactBurnProtectedTag");let TH=Ew;const sw=class sw extends Yt{constructor(A,s,R){super(A,s,0,R)}onAdd(A){super.onAdd(A),n.queueMessage(u.t("battlerTags:enduringOnAdd",{pokemonNameWithAffix:te(A)}))}lapse(A,s){return s===8?(n.queueMessage(u.t("battlerTags:enduringLapse",{pokemonNameWithAffix:te(A)})),!0):super.lapse(A,s)}};N(sw,"EnduringTag");let Iu=sw;const Rw=class Rw extends Yt{constructor(A){super(y.STURDY,5,0,A)}lapse(A,s){return s===8?(n.queueMessage(u.t("battlerTags:sturdyLapse",{pokemonNameWithAffix:te(A)})),!0):super.lapse(A,s)}};N(Rw,"SturdyTag");let SH=Rw;const Ow=class Ow extends Yt{constructor(A){super(y.PERISH_SONG,5,A,t.PERISH_SONG,void 0,!0)}canAdd(A){return!A.isBossImmune()}lapse(A,s){const R=super.lapse(A,s);return R?n.queueMessage(u.t("battlerTags:perishSongLapse",{pokemonNameWithAffix:te(A),turnCount:this.turnCount})):A.damageAndUpdate(A.hp,vt.ONE_HIT_KO,!1,!0,!0),R}};N(Ow,"PerishSongTag");let oH=Ow;const nw=class nw extends Yt{constructor(A){super(y.CENTER_OF_ATTENTION,5,1,A),this.powder=this.sourceMove===t.RAGE_POWDER}canAdd(A){return!(A.isPlayer()?n.getPlayerField():n.getEnemyField()).find(R=>R.getTag(y.CENTER_OF_ATTENTION))}onAdd(A){super.onAdd(A),n.queueMessage(u.t("battlerTags:centerOfAttentionOnAdd",{pokemonNameWithAffix:te(A)}))}};N(nw,"CenterOfAttentionTag");let au=nw;const Iw=class Iw extends Yt{constructor(A,s,R,a){super(A,R,a),this.ability=s}loadTag(A){super.loadTag(A),this.ability=A.ability}};N(Iw,"AbilityBattlerTag");let zr=Iw;const aw=class aw extends zr{constructor(){super(y.UNBURDEN,O.UNBURDEN,8,1)}onAdd(A){super.onAdd(A)}onRemove(A){super.onRemove(A)}};N(aw,"UnburdenTag");let lH=aw;const iw=class iw extends zr{constructor(){super(y.TRUANT,O.TRUANT,1,1)}lapse(A,s){if(!A.hasAbility(O.TRUANT))return super.lapse(A,s);const R=A.getAbility().id!==O.TRUANT,a=A.getLastXMoves().find(()=>!0);return a&&a.move!==t.NONE&&(n.getCurrentPhase().cancel(),n.unshiftPhase(new jn(A.id,R)),n.queueMessage(u.t("battlerTags:truantLapse",{pokemonNameWithAffix:te(A)}))),!0}};N(iw,"TruantTag");let CH=iw;const rw=class rw extends zr{constructor(){super(y.SLOW_START,O.SLOW_START,5,5)}onAdd(A){super.onAdd(A),n.queueMessage(u.t("battlerTags:slowStartOnAdd",{pokemonNameWithAffix:te(A)}),null,!1,null,!0)}lapse(A,s){return A.hasAbility(this.ability)||(this.turnCount=1),super.lapse(A,s)}onRemove(A){super.onRemove(A),n.queueMessage(u.t("battlerTags:slowStartOnRemove",{pokemonNameWithAffix:te(A)}),null,!1,null)}};N(rw,"SlowStartTag");let UH=rw;const Lw=class Lw extends zr{constructor(A,s){super(A,s,8,1)}loadTag(A){super.loadTag(A),this.stat=A.stat,this.multiplier=A.multiplier}onAdd(A){super.onAdd(A);let s;switch(zn.map(R=>A.getEffectiveStat(R)).reduce((R,a,i)=>a>R?(s=zn[i],a):R,0),s=s,this.stat=s,this.stat){case K.SPD:this.multiplier=1.5;break;default:this.multiplier=1.3;break}n.queueMessage(u.t("battlerTags:highestStatBoostOnAdd",{pokemonNameWithAffix:te(A),statName:u.t(hE(s))}),null,!1,null,!0)}onRemove(A){super.onRemove(A),n.queueMessage(u.t("battlerTags:highestStatBoostOnRemove",{pokemonNameWithAffix:te(A),abilityName:NE[this.ability].name}))}};N(Lw,"HighestStatBoostTag");let bS=Lw;const Nw=class Nw extends bS{constructor(A,s,...R){super(A,s),this.weatherTypes=R}loadTag(A){super.loadTag(A),this.weatherTypes=A.weatherTypes.map(s=>s)}};N(Nw,"WeatherHighestStatBoostTag");let uH=Nw;const Tw=class Tw extends bS{constructor(A,s,...R){super(A,s),this.terrainTypes=R}loadTag(A){super.loadTag(A),this.terrainTypes=A.terrainTypes.map(s=>s)}};N(Tw,"TerrainHighestStatBoostTag");let DH=Tw;const Sw=class Sw extends Yt{constructor(A,s,R){super(A,4,s,R)}onAdd(A){super.onAdd(A),A.setVisible(!1)}onRemove(A){n.tweens.addCounter({duration:TE(2),onComplete:N(()=>A.setVisible(!0),"onComplete")})}};N(Sw,"SemiInvulnerableTag");let _n=Sw;const ow=class ow extends Yt{constructor(A,s,R,a=1){super(A,5,a,s,void 0,!0),this.immuneType=R}loadTag(A){super.loadTag(A),this.immuneType=A.immuneType}};N(ow,"TypeImmuneTag");let iu=ow;const lw=class lw extends iu{constructor(A,s,R){super(A,s,I.GROUND,R)}onAdd(A){super.onAdd(A),this.sourceMove===t.MAGNET_RISE&&n.queueMessage(u.t("battlerTags:magnetRisenOnAdd",{pokemonNameWithAffix:te(A)}))}onRemove(A){super.onRemove(A),this.sourceMove===t.MAGNET_RISE&&n.queueMessage(u.t("battlerTags:magnetRisenOnRemove",{pokemonNameWithAffix:te(A)}))}};N(lw,"FloatingTag");let MH=lw;const Cw=class Cw extends Yt{constructor(A,s,R,a,i){super(A,5,1,s),this.boostedType=R,this.boostValue=a,this.oneUse=i}loadTag(A){super.loadTag(A),this.boostedType=A.boostedType,this.boostValue=A.boostValue,this.oneUse=A.oneUse}lapse(A,s){return s!==8||super.lapse(A,s)}};N(Cw,"TypeBoostTag");let qr=Cw;const Uw=class Uw extends Yt{constructor(A,s){super(A,5,1,s,void 0,!0)}onAdd(A){super.onAdd(A),n.queueMessage(u.t("battlerTags:critBoostOnAdd",{pokemonNameWithAffix:te(A)}))}lapse(A,s){return s!==8||super.lapse(A,s)}onRemove(A){super.onRemove(A),n.queueMessage(u.t("battlerTags:critBoostOnRemove",{pokemonNameWithAffix:te(A)}))}};N(Uw,"CritBoostTag");let kS=Uw;const uw=class uw extends kS{constructor(){super(y.CRIT_BOOST,t.DRAGON_CHEER)}onAdd(A){super.onAdd(A),this.typesOnAdd=A.getTypes(!0)}};N(uw,"DragonCheerTag");let ru=uw;const Dw=class Dw extends Yt{constructor(A){super(y.SALT_CURED,5,1,t.SALT_CURE,A)}loadTag(A){super.loadTag(A),this.sourceIndex=A.sourceIndex}onAdd(A){super.onAdd(A),n.queueMessage(u.t("battlerTags:saltCuredOnAdd",{pokemonNameWithAffix:te(A)})),this.sourceIndex=n.getPokemonById(this.sourceId).getBattlerIndex()}lapse(A,s){const R=s!==8||super.lapse(A,s);if(R){n.unshiftPhase(new Ns(A.getBattlerIndex(),A.getBattlerIndex(),lA.SALT_CURE));const a=new Lt(!1);if(ut(ME,A,a),!a.value){const i=A.isOfType(I.STEEL)||A.isOfType(I.WATER);A.damageAndUpdate(yt(i?A.getMaxHp()/4:A.getMaxHp()/8)),n.queueMessage(u.t("battlerTags:saltCuredLapse",{pokemonNameWithAffix:te(A),moveName:this.getMoveName()}))}}return R}};N(Dw,"SaltCuredTag");let _H=Dw;const Mw=class Mw extends Yt{constructor(A){super(y.CURSED,5,1,t.CURSE,A,!0)}loadTag(A){super.loadTag(A),this.sourceIndex=A.sourceIndex}onAdd(A){super.onAdd(A),this.sourceIndex=n.getPokemonById(this.sourceId).getBattlerIndex()}lapse(A,s){const R=s!==8||super.lapse(A,s);if(R){n.unshiftPhase(new Ns(A.getBattlerIndex(),A.getBattlerIndex(),lA.SALT_CURE));const a=new Lt(!1);ut(ME,A,a),a.value||(A.damageAndUpdate(yt(A.getMaxHp()/4)),n.queueMessage(u.t("battlerTags:cursedLapse",{pokemonNameWithAffix:te(A)})))}return R}};N(Mw,"CursedTag");let PH=Mw;const _w=class _w extends Yt{constructor(A,s,R){super(A,s,1,R)}};N(_w,"RemovedTypeTag");let ZS=_w;const Pw=class Pw extends Yt{constructor(A,s,R){super(A,s,1,R)}};N(Pw,"GroundedTag");let XS=Pw;const Gw=class Gw extends Yt{constructor(){super(y.ROOSTED,5,1,t.ROOST)}onRemove(A){const s=A.getTypes(),R=A.getTypes(!1,!1,!0),a=s.includes(I.GRASS)&&!R.includes(I.GRASS),i=s.includes(I.GHOST)&&!R.includes(I.GHOST);if(this.isBaseFlying){let r=[];this.isBasePureFlying?a||i?(r=s.filter(L=>L!==I.NORMAL),r.push(I.FLYING)):r=[I.FLYING]:(r=[...s],r.push(I.FLYING)),A.summonData.types=r,A.updateInfo()}}onAdd(A){const s=A.getTypes(),R=A.getTypes(!1,!1,!0),a=R.length===2,i=s.length===2;if(this.isBaseFlying=R.includes(I.FLYING),this.isBasePureFlying=R[0]===I.FLYING&&R.length===1,this.isBaseFlying){let r;this.isBasePureFlying&&!i?r=[I.NORMAL]:A.getTag(ZS)&&a&&!i?r=[I.UNKNOWN]:r=s.filter(L=>L!==I.FLYING),A.summonData.types=r,A.updateInfo()}}};N(Gw,"RoostedTag");let GH=Gw;const cw=class cw extends Yt{constructor(A){super(A,8,1)}canAdd(A){return A.formIndex===0}onAdd(A){super.onAdd(A),A.formIndex!==0&&n.triggerPokemonFormChange(A,Zt)}onRemove(A){super.onRemove(A),n.triggerPokemonFormChange(A,Zt)}};N(cw,"FormBlockDamageTag");let Lu=cw;const hw=class hw extends Lu{constructor(A){super(A)}canAdd(A){var a;const s=(a=n.arena.weather)==null?void 0:a.weatherType,R=s===Oe.HAIL||s===Oe.SNOW;return super.canAdd(A)||R}};N(hw,"IceFaceBlockDamageTag");let cH=hw;const Hw=class Hw extends Yt{constructor(A){super(y.COMMANDED,8,0,t.NONE,A)}get tatsugiriFormKey(){return this._tatsugiriFormKey}onAdd(A){var s;this._tatsugiriFormKey=((s=this.getSourcePokemon())==null?void 0:s.getFormKey())??"curly",n.unshiftPhase(new zt(A.getBattlerIndex(),!0,[K.ATK,K.DEF,K.SPATK,K.SPDEF,K.SPD],2))}onRemove(A){var s;(s=this.getSourcePokemon())!=null&&s.isActive(!0)&&n.triggerPokemonBattleAnim(A,pR.COMMANDER_REMOVE)}loadTag(A){super.loadTag(A),this._tatsugiriFormKey=A._tatsugiriFormKey}};N(Hw,"CommandedTag");let Nu=Hw;const dw=class dw extends Yt{constructor(A=t.NONE){super(y.STOCKPILING,8,1,A),this.stockpiledCount=0,this.statChangeCounts={[K.DEF]:0,[K.SPDEF]:0},this.onStatStagesChanged=(s,R,a)=>{const i=a[R.indexOf(K.DEF)]??0,r=a[R.indexOf(K.SPDEF)]??0;i&&this.statChangeCounts[K.DEF]++,r&&this.statChangeCounts[K.SPDEF]++}}loadTag(A){var s,R;super.loadTag(A),this.stockpiledCount=A.stockpiledCount||0,this.statChangeCounts={[K.DEF]:((s=A.statChangeCounts)==null?void 0:s[K.DEF])??0,[K.SPDEF]:((R=A.statChangeCounts)==null?void 0:R[K.SPDEF])??0}}onAdd(A){this.stockpiledCount<3&&(this.stockpiledCount++,n.queueMessage(u.t("battlerTags:stockpilingOnAdd",{pokemonNameWithAffix:te(A),stockpiledCount:this.stockpiledCount})),n.unshiftPhase(new zt(A.getBattlerIndex(),!0,[K.SPDEF,K.DEF],1,!0,!1,!0,this.onStatStagesChanged)))}onOverlap(A){this.onAdd(A)}onRemove(A){const s=this.statChangeCounts[K.DEF],R=this.statChangeCounts[K.SPDEF];s&&n.unshiftPhase(new zt(A.getBattlerIndex(),!0,[K.DEF],-s,!0,!1,!0)),R&&n.unshiftPhase(new zt(A.getBattlerIndex(),!0,[K.SPDEF],-R,!0,!1,!0))}};N(dw,"StockpilingTag");let Si=dw;const fw=class fw extends Yt{constructor(A,s){super(A,6,0,s)}lapse(A,s){if(A.getTag(y.UNDERWATER))return!0;const R=n.getCurrentPhase();if(R instanceof PR){const a=R.getUserPokemon();if(!a)return!1;if(R.move.getMove().hitsSubstitute(a,A))return!0;const i=new Lt(!1);ut(ME,a,i),i.value||a.damageAndUpdate(Math.max(1,Math.floor(a.getMaxHp()/4)),vt.OTHER),this.tagType===y.GULP_MISSILE_ARROKUDA?n.unshiftPhase(new zt(a.getBattlerIndex(),!1,[K.DEF],-1)):a.trySetStatus(ne.PARALYSIS,!0,A)}return!1}canAdd(A){const s=[t.SURF,t.DIVE].includes(this.sourceMove),R=A.formIndex===0&&!A.getTag(y.GULP_MISSILE_ARROKUDA)&&!A.getTag(y.GULP_MISSILE_PIKACHU),a=A.species.speciesId===e.CRAMORANT;return s&&R&&a}onAdd(A){super.onAdd(A),n.triggerPokemonFormChange(A,Zt)}onRemove(A){super.onRemove(A),n.triggerPokemonFormChange(A,Zt)}};N(fw,"GulpMissileTag");let Tu=fw;const Bw=class Bw extends Yt{constructor(A,s,R,a){super(A,8,1,s),this.defenderType=R,this.allowedTypes=a}loadTag(A){super.loadTag(A),this.defenderType=A.defenderType,this.allowedTypes=A.allowedTypes}ignoreImmunity(A,s){return A===this.defenderType&&this.allowedTypes.includes(s)}};N(Bw,"ExposedTag");let jr=Bw;const gw=class gw extends cO{constructor(A,s){super(y.HEAL_BLOCK,[2,5],A,s)}onActivation(A){return u.t("battle:battlerTagsHealBlock",{pokemonNameWithAffix:te(A)})}isMoveRestricted(A){return!!(we[A].hasFlag(tA.TRIAGE_MOVE)&&we[A].category===Pt.STATUS)}isMoveTargetRestricted(A,s,R){const a=new Et(we[A].category);return MA(OD,s,R,we[A],a),!!(we[A].hasAttr(mu)&&a.value===Pt.STATUS)}selectionDeniedText(A,s){return u.t("battle:moveDisabledHealBlock",{pokemonNameWithAffix:te(A),moveName:we[s].name,healBlockName:we[t.HEAL_BLOCK].name})}interruptedText(A,s){return u.t("battle:moveDisabledHealBlock",{pokemonNameWithAffix:te(A),moveName:we[s].name,healBlockName:we[t.HEAL_BLOCK].name})}onRemove(A){super.onRemove(A),n.queueMessage(u.t("battle:battlerTagsHealBlockOnRemove",{pokemonNameWithAffix:te(A)}),null,!1,null)}};N(gw,"HealBlockTag");let hH=gw;const Kw=class Kw extends Yt{constructor(){super(y.TAR_SHOT,8,0)}canAdd(A){return!A.isTerastallized()}onAdd(A){n.queueMessage(u.t("battlerTags:tarShotOnAdd",{pokemonNameWithAffix:te(A)}))}};N(Kw,"TarShotTag");let Su=Kw;const mw=class mw extends Yt{constructor(){super(y.ELECTRIFIED,5,1,t.ELECTRIFY)}onAdd(A){n.queueMessage(u.t("battlerTags:electrifiedOnAdd",{pokemonNameWithAffix:te(A)}))}};N(mw,"ElectrifiedTag");let HH=mw;const Fw=class Fw extends Yt{constructor(A=t.AUTOTOMIZE){super(y.AUTOTOMIZED,8,1,A),this.autotomizeCount=0}onAdd(A){A.getWeight()>.1&&n.queueMessage(u.t("battlerTags:autotomizeOnAdd",{pokemonNameWithAffix:te(A)})),this.autotomizeCount+=1}onOverlap(A){this.onAdd(A)}};N(Fw,"AutotomizedTag");let ou=Fw;const pw=class pw extends Yt{constructor(A,s){super(y.SUBSTITUTE,[2,3,6],0,A,s,!0)}onAdd(A){this.hp=Math.floor(n.getPokemonById(this.sourceId).getMaxHp()/4),this.sourceInFocus=!1,n.triggerPokemonBattleAnim(A,pR.SUBSTITUTE_ADD),this.sourceMove===t.SHED_TAIL?n.queueMessage(u.t("battlerTags:shedTailOnAdd",{pokemonNameWithAffix:te(A)}),1500):n.queueMessage(u.t("battlerTags:substituteOnAdd",{pokemonNameWithAffix:te(A)}),1500),A.findAndRemoveTags(s=>s instanceof hO)}onRemove(A){this.sourceInFocus?this.sprite.destroy():n.triggerPokemonBattleAnim(A,pR.SUBSTITUTE_REMOVE,[this.sprite]),n.queueMessage(u.t("battlerTags:substituteOnRemove",{pokemonNameWithAffix:te(A)}))}lapse(A,s){switch(s){case 2:this.onPreMove(A);break;case 3:this.onAfterMove(A);break;case 6:this.onHit(A);break}return s!==8}onPreMove(A){n.triggerPokemonBattleAnim(A,pR.SUBSTITUTE_PRE_MOVE,[this.sprite]),this.sourceInFocus=!0}onAfterMove(A){n.triggerPokemonBattleAnim(A,pR.SUBSTITUTE_POST_MOVE,[this.sprite]),this.sourceInFocus=!1}onHit(A){const s=n.getCurrentPhase();if(s instanceof PR){const R=s.getUserPokemon();if(!R)return;const a=s.move.getMove();R.turnData.hitCount===R.turnData.hitsLeft&&a.hitsSubstitute(R,A)&&n.queueMessage(u.t("battlerTags:substituteOnHit",{pokemonNameWithAffix:te(A)}))}}loadTag(A){super.loadTag(A),this.hp=A.hp}};N(pw,"SubstituteTag");let mE=pw;const Ww=class Ww extends Yt{constructor(){super(y.MYSTERY_ENCOUNTER_POST_SUMMON,8,1)}onAdd(A){super.onAdd(A)}lapse(A,s){const R=super.lapse(A,s);if(s===8){const a=new Lt(!1);ut(zR,A,a),a.value||A.mysteryEncounterBattleEffects&&A.mysteryEncounterBattleEffects(A)}return R}onRemove(A){super.onRemove(A)}};N(Ww,"MysteryEncounterPostSummonTag");let lu=Ww;const Yw=class Yw extends cO{constructor(A){super(y.TORMENT,3,1,t.TORMENT,A)}onAdd(A){super.onAdd(A),n.queueMessage(u.t("battlerTags:tormentOnAdd",{pokemonNameWithAffix:te(A)}),1500)}lapse(A,s){return A.isActive(!0)}isMoveRestricted(A,s){if(!s)return!1;const R=s.getLastXMoves(1)[0];if(!R)return!1;const i=we[R.move].hasAttr(Ur)||s.getTag(y.FRENZY),r=R.result===oA.SUCCESS||R.result===oA.MISS;return!!(R.move===A&&r&&R.move!==t.STRUGGLE&&!i)}selectionDeniedText(A,s){return u.t("battle:moveDisabledTorment",{pokemonNameWithAffix:te(A)})}};N(Yw,"TormentTag");let dH=Yw;const yw=class yw extends cO{constructor(){super(y.TAUNT,[2,3],4,t.TAUNT)}onAdd(A){super.onAdd(A),n.queueMessage(u.t("battlerTags:tauntOnAdd",{pokemonNameWithAffix:te(A)}),1500)}isMoveRestricted(A){return we[A].category===Pt.STATUS}selectionDeniedText(A,s){return u.t("battle:moveDisabledTaunt",{pokemonNameWithAffix:te(A),moveName:we[s].name})}interruptedText(A,s){return u.t("battle:moveDisabledTaunt",{pokemonNameWithAffix:te(A),moveName:we[s].name})}};N(yw,"TauntTag");let fH=yw;const ww=class ww extends cO{constructor(A){super(y.IMPRISON,[2,3],1,t.IMPRISON,A)}lapse(A,s){const R=this.getSourcePokemon();return R?s===2?super.lapse(A,s)&&R.isActive(!0):R.isActive(!0):!1}isMoveRestricted(A,s){const R=this.getSourcePokemon();if(R){const a=R.getMoveset().map(i=>i.moveId);return(a==null?void 0:a.includes(A))&&R.isActive(!0)}return!1}selectionDeniedText(A,s){return u.t("battle:moveDisabledImprison",{pokemonNameWithAffix:te(A),moveName:we[s].name})}interruptedText(A,s){return u.t("battle:moveDisabledImprison",{pokemonNameWithAffix:te(A),moveName:we[s].name})}};N(ww,"ImprisonTag");let BH=ww;const vw=class vw extends Yt{constructor(A){super(y.SYRUP_BOMB,5,3,t.SYRUP_BOMB,A)}onAdd(A){super.onAdd(A),n.queueMessage(u.t("battlerTags:syrupBombOnAdd",{pokemonNameWithAffix:te(A)}))}lapse(A,s){var R;return this.sourceId&&!((R=n.getPokemonById(this.sourceId))!=null&&R.isActive(!0))?!1:(n.queueMessage(u.t("battlerTags:syrupBombLapse",{pokemonNameWithAffix:te(A)})),n.unshiftPhase(new zt(A.getBattlerIndex(),!0,[K.SPD],-1,!0,!1,!0)),--this.turnCount>0)}};N(vw,"SyrupBombTag");let gH=vw;const Vw=class Vw extends Yt{constructor(A){super(y.TELEKINESIS,[2,3],3,A,void 0,!0)}onAdd(A){n.queueMessage(u.t("battlerTags:telekinesisOnAdd",{pokemonNameWithAffix:te(A)}))}};N(Vw,"TelekinesisTag");let KH=Vw;const xw=class xw extends Yt{constructor(A,s){super(y.POWER_TRICK,8,0,A,s,!0)}onAdd(A){this.swapStat(A),n.queueMessage(u.t("battlerTags:powerTrickActive",{pokemonNameWithAffix:te(A)}))}onRemove(A){this.swapStat(A),n.queueMessage(u.t("battlerTags:powerTrickActive",{pokemonNameWithAffix:te(A)}))}onOverlap(A){A.removeTag(this.tagType)}swapStat(A){const s=A.getStat(K.ATK,!1);A.setStat(K.ATK,A.getStat(K.DEF,!1),!1),A.setStat(K.DEF,s,!1)}};N(xw,"PowerTrickTag");let Cu=xw;const bw=class bw extends Yt{constructor(){super(y.GRUDGE,[8,2],1,t.GRUDGE)}onAdd(A){super.onAdd(A),n.queueMessage(u.t("battlerTags:grudgeOnAdd",{pokemonNameWithAffix:te(A)}))}lapse(A,s,R){if(s===8&&R){if(R.isActive()&&A.isOpponent(R)){const a=A.turnData.attacksReceived[0],i=R.getMoveset().find(r=>(r==null?void 0:r.moveId)===a.move);i&&a.move!==t.STRUGGLE&&(i.ppUsed=i.getMovePp(),n.queueMessage(u.t("battlerTags:grudgeLapse",{pokemonNameWithAffix:te(A),moveName:i.getName()})))}return!1}else return super.lapse(A,s)}};N(bw,"GrudgeTag");let mH=bw;const kw=class kw extends Yt{constructor(){super(y.PSYCHO_SHIFT,3,1,t.PSYCHO_SHIFT)}lapse(A,s){return A.status&&A.isActive(!0)&&(n.queueMessage(La(A.status.effect,te(A))),A.resetStatus(),A.updateInfo()),!1}};N(kw,"PsychoShiftTag");let FH=kw;function x8(E,A,s,R){switch(E){case y.RECHARGING:return new yh(s);case y.BEAK_BLAST_CHARGING:return new wh;case y.SHELL_TRAP:return new Ru;case y.FLINCHED:return new Vh(s);case y.INTERRUPTED:return new xh(s);case y.CONFUSED:return new bh(A,s);case y.INFATUATED:return new Zh(s,R);case y.SEEDED:return new Xh(R);case y.POWDER:return new Qh;case y.NIGHTMARE:return new Jh;case y.FRENZY:return new $h(A,s,R);case y.CHARGING:return new Yt(E,8,1,s,R);case y.ENCORE:return new xS(R);case y.HELPING_HAND:return new Ou(R);case y.INGRAIN:return new zh(R);case y.AQUA_RING:return new jh;case y.DROWSY:return new tH;case y.TRAPPED:return new vR(E,8,A,s,R);case y.NO_RETREAT:return new vh(R);case y.BIND:return new AH(A,R);case y.WRAP:return new EH(A,R);case y.FIRE_SPIN:return new sH(A,R);case y.WHIRLPOOL:return new RH(A,R);case y.CLAMP:return new OH(A,R);case y.SAND_TOMB:return new nH(A,R);case y.MAGMA_STORM:return new IH(A,R);case y.SNAP_TRAP:return new aH(A,R);case y.THUNDER_CAGE:return new iH(A,R);case y.INFESTATION:return new rH(A,R);case y.PROTECTED:return new zI(s);case y.SPIKY_SHIELD:return new LH(s,8);case y.KINGS_SHIELD:return new jL(s,E,K.ATK,-1);case y.OBSTRUCT:return new jL(s,E,K.DEF,-2);case y.SILK_TRAP:return new jL(s,E,K.SPD,-1);case y.BANEFUL_BUNKER:return new NH(s);case y.BURNING_BULWARK:return new TH(s);case y.ENDURING:return new Iu(E,5,s);case y.ENDURE_TOKEN:return new Iu(E,7,s);case y.STURDY:return new SH(s);case y.PERISH_SONG:return new oH(A);case y.CENTER_OF_ATTENTION:return new au(s);case y.TRUANT:return new CH;case y.SLOW_START:return new UH;case y.PROTOSYNTHESIS:return new uH(E,O.PROTOSYNTHESIS,Oe.SUNNY,Oe.HARSH_SUN);case y.QUARK_DRIVE:return new DH(E,O.QUARK_DRIVE,Tt.ELECTRIC);case y.FLYING:case y.UNDERGROUND:case y.UNDERWATER:case y.HIDDEN:return new _n(E,A,s);case y.FIRE_BOOST:return new qr(E,s,I.FIRE,1.5,!1);case y.CRIT_BOOST:return new kS(E,s);case y.DRAGON_CHEER:return new ru;case y.ALWAYS_CRIT:case y.IGNORE_ACCURACY:return new Yt(E,5,2,s);case y.ALWAYS_GET_HIT:case y.RECEIVE_DOUBLE_DAMAGE:return new Yt(E,2,1,s);case y.BYPASS_SLEEP:return new Yt(E,5,A,s);case y.IGNORE_FLYING:return new XS(E,8,s);case y.ROOSTED:return new GH;case y.BURNED_UP:return new ZS(E,8,s);case y.DOUBLE_SHOCKED:return new ZS(E,8,s);case y.SALT_CURED:return new _H(R);case y.CURSED:return new PH(R);case y.CHARGED:return new qr(E,s,I.ELECTRIC,2,!0);case y.FLOATING:return new MH(E,s,A);case y.MINIMIZED:return new eH;case y.DESTINY_BOND:return new kh(s,R);case y.ICE_FACE:return new cH(E);case y.DISGUISE:return new Lu(E);case y.COMMANDED:return new Nu(R);case y.STOCKPILING:return new Si(s);case y.OCTOLOCK:return new qh(R);case y.DISABLED:return new Wh(R);case y.IGNORE_GHOST:return new jr(E,s,I.GHOST,[I.NORMAL,I.FIGHTING]);case y.IGNORE_DARK:return new jr(E,s,I.DARK,[I.PSYCHIC]);case y.GULP_MISSILE_ARROKUDA:case y.GULP_MISSILE_PIKACHU:return new Tu(E,s);case y.TAR_SHOT:return new Su;case y.ELECTRIFIED:return new HH;case y.THROAT_CHOPPED:return new ph;case y.GORILLA_TACTICS:return new Yh;case y.UNBURDEN:return new lH;case y.SUBSTITUTE:return new mE(s,R);case y.AUTOTOMIZED:return new ou;case y.MYSTERY_ENCOUNTER_POST_SUMMON:return new lu;case y.HEAL_BLOCK:return new hH(A,s);case y.TORMENT:return new dH(R);case y.TAUNT:return new fH;case y.IMPRISON:return new BH(R);case y.SYRUP_BOMB:return new gH(R);case y.TELEKINESIS:return new KH(s);case y.POWER_TRICK:return new Cu(s,R);case y.GRUDGE:return new mH;case y.PSYCHO_SHIFT:return new FH;case y.NONE:default:return new Yt(E,8,A,s,R)}}N(x8,"getBattlerTag");function wJ(E){const A=x8(E.tagType,E.turnCount,E.sourceMove,E.sourceId);return A.loadTag(E),A}N(wJ,"loadBattlerTag");function b8(E){const A=n.getCurrentPhase();return A instanceof PR?{phase:A,attacker:A.getPokemon(),move:A.move.getMove()}:null}N(b8,"getMoveEffectPhaseData");var pH=(E=>(E[E.USER=0]="USER",E[E.TARGET=1]="TARGET",E[E.GRAPHIC=2]="GRAPHIC",E))(pH||{}),AI=(E=>(E[E.FLY_CHARGING=1e3]="FLY_CHARGING",E[E.BOUNCE_CHARGING=1001]="BOUNCE_CHARGING",E[E.DIG_CHARGING=1002]="DIG_CHARGING",E[E.FUTURE_SIGHT_CHARGING=1003]="FUTURE_SIGHT_CHARGING",E[E.DIVE_CHARGING=1004]="DIVE_CHARGING",E[E.SOLAR_BEAM_CHARGING=1005]="SOLAR_BEAM_CHARGING",E[E.SHADOW_FORCE_CHARGING=1006]="SHADOW_FORCE_CHARGING",E[E.SKULL_BASH_CHARGING=1007]="SKULL_BASH_CHARGING",E[E.FREEZE_SHOCK_CHARGING=1008]="FREEZE_SHOCK_CHARGING",E[E.SKY_DROP_CHARGING=1009]="SKY_DROP_CHARGING",E[E.SKY_ATTACK_CHARGING=1010]="SKY_ATTACK_CHARGING",E[E.ICE_BURN_CHARGING=1011]="ICE_BURN_CHARGING",E[E.DOOM_DESIRE_CHARGING=1012]="DOOM_DESIRE_CHARGING",E[E.RAZOR_WIND_CHARGING=1013]="RAZOR_WIND_CHARGING",E[E.PHANTOM_FORCE_CHARGING=1014]="PHANTOM_FORCE_CHARGING",E[E.GEOMANCY_CHARGING=1015]="GEOMANCY_CHARGING",E[E.SHADOW_BLADE_CHARGING=1016]="SHADOW_BLADE_CHARGING",E[E.SOLAR_BLADE_CHARGING=1017]="SOLAR_BLADE_CHARGING",E[E.BEAK_BLAST_CHARGING=1018]="BEAK_BLAST_CHARGING",E[E.METEOR_BEAM_CHARGING=1019]="METEOR_BEAM_CHARGING",E[E.ELECTRO_SHOT_CHARGING=1020]="ELECTRO_SHOT_CHARGING",E))(AI||{}),lA=(E=>(E[E.USE_ITEM=2e3]="USE_ITEM",E[E.HEALTH_UP=2001]="HEALTH_UP",E[E.POISON=2010]="POISON",E[E.TOXIC=2011]="TOXIC",E[E.PARALYSIS=2012]="PARALYSIS",E[E.SLEEP=2013]="SLEEP",E[E.FROZEN=2014]="FROZEN",E[E.BURN=2015]="BURN",E[E.CONFUSION=2016]="CONFUSION",E[E.ATTRACT=2017]="ATTRACT",E[E.BIND=2018]="BIND",E[E.WRAP=2019]="WRAP",E[E.CURSE_NO_GHOST=2020]="CURSE_NO_GHOST",E[E.LEECH_SEED=2021]="LEECH_SEED",E[E.FIRE_SPIN=2022]="FIRE_SPIN",E[E.PROTECT=2023]="PROTECT",E[E.COVET=2024]="COVET",E[E.WHIRLPOOL=2025]="WHIRLPOOL",E[E.BIDE=2026]="BIDE",E[E.SAND_TOMB=2027]="SAND_TOMB",E[E.QUICK_GUARD=2028]="QUICK_GUARD",E[E.WIDE_GUARD=2029]="WIDE_GUARD",E[E.CURSE=2030]="CURSE",E[E.MAGMA_STORM=2031]="MAGMA_STORM",E[E.CLAMP=2032]="CLAMP",E[E.SNAP_TRAP=2033]="SNAP_TRAP",E[E.THUNDER_CAGE=2034]="THUNDER_CAGE",E[E.INFESTATION=2035]="INFESTATION",E[E.ORDER_UP_CURLY=2036]="ORDER_UP_CURLY",E[E.ORDER_UP_DROOPY=2037]="ORDER_UP_DROOPY",E[E.ORDER_UP_STRETCHY=2038]="ORDER_UP_STRETCHY",E[E.RAGING_BULL_FIRE=2039]="RAGING_BULL_FIRE",E[E.RAGING_BULL_WATER=2040]="RAGING_BULL_WATER",E[E.SALT_CURE=2041]="SALT_CURE",E[E.POWDER=2042]="POWDER",E[E.SUNNY=2100]="SUNNY",E[E.RAIN=2101]="RAIN",E[E.SANDSTORM=2102]="SANDSTORM",E[E.HAIL=2103]="HAIL",E[E.SNOW=2104]="SNOW",E[E.WIND=2105]="WIND",E[E.HEAVY_RAIN=2106]="HEAVY_RAIN",E[E.HARSH_SUN=2107]="HARSH_SUN",E[E.STRONG_WINDS=2108]="STRONG_WINDS",E[E.MISTY_TERRAIN=2110]="MISTY_TERRAIN",E[E.ELECTRIC_TERRAIN=2111]="ELECTRIC_TERRAIN",E[E.GRASSY_TERRAIN=2112]="GRASSY_TERRAIN",E[E.PSYCHIC_TERRAIN=2113]="PSYCHIC_TERRAIN",E[E.LOCK_ON=2120]="LOCK_ON",E))(lA||{});const Zw=class Zw{constructor(A){if(this.frameTimedEvents=new Map,A){this.id=A.id,this.graphic=A.graphic;const s=A.frames;s.map(a=>{for(let i=0;i<a.length;i++)a[i]=new WH(a[i])}),this.frames=s;const R=A.frameTimedEvents;for(const a of Object.keys(R)){const i=[];for(const r of R[a]){let L;switch(r.eventType){case"AnimTimedSoundEvent":L=new QS(r.frameIndex,r.resourceName,r);break;case"AnimTimedAddBgEvent":L=new JS(r.frameIndex,r.resourceName,r);break;case"AnimTimedUpdateBgEvent":L=new Mu(r.frameIndex,r.resourceName,r);break}L&&i.push(L)}this.frameTimedEvents.set(parseInt(a),i)}this.position=A.position,this.hue=A.hue}else this.frames=[]}getSoundResourceNames(){const A=new Set;for(const s of this.frameTimedEvents.values())for(const R of s)R instanceof QS&&R.resourceName&&A.add(R.resourceName);return Array.from(A.values())}getBackgroundResourceNames(){const A=new Set;for(const s of this.frameTimedEvents.values())for(const R of s)R instanceof JS&&R.resourceName&&A.add(R.resourceName);return Array.from(A.values())}};N(Zw,"AnimConfig");let UO=Zw;const Xw=class Xw{constructor(A,s,R,a,i,r,L,o,l,C,M,D,_,P,h,H,d,f,B,F,W,b,x,$,j,z){if(this.x=z?A:((A||0)-128)*.5,this.y=z?s:((s||0)-224)*.5,R?this.zoomX=R:z&&(this.zoomX=0),a?this.zoomY=a:z&&(this.zoomY=0),i?this.angle=i:z&&(this.angle=0),r?this.mirror=r:z&&(this.mirror=!1),L?this.visible=L:z&&(this.visible=!1),o?this.blendType=o:z&&(this.blendType=0),!z){let se=2;switch(l){case-2:se=1;break;case-1:se=0;break}this.target=se,this.graphicFrame=l>=0?l:0}C?this.opacity=C:z&&(this.opacity=0),M||D||_||P?this.color=[M||0,D||0,_||0,P||0]:z&&(this.color=[0,0,0,0]),h||H||d||f?this.tone=[h||0,H||0,d||0,f||0]:z&&(this.tone=[0,0,0,0]),B||F||W||b?this.flash=[B||0,F||0,W||0,b||0]:z&&(this.flash=[0,0,0,0]),x?this.locked=x:z&&(this.locked=!1),$?this.priority=$:z&&(this.priority=0),this.focus=j||1}};N(Xw,"AnimFrame");let Uu=Xw;const Qw=class Qw extends Uu{constructor(A){const s=A.color||[0,0,0,0],R=A.tone||[0,0,0,0],a=A.flash||[0,0,0,0];super(A.x,A.y,A.zoomX,A.zoomY,A.angle,A.mirror,A.visible,A.blendType,A.graphicFrame,A.opacity,s[0],s[1],s[2],s[3],R[0],R[1],R[2],R[3],a[0],a[1],a[2],a[3],A.locked,A.priority,A.focus,!0),this.target=A.target,this.graphicFrame=A.graphicFrame}};N(Qw,"ImportedAnimFrame");let WH=Qw;const Jw=class Jw{constructor(A,s){this.frameIndex=A,this.resourceName=s}};N(Jw,"AnimTimedEvent");let uu=Jw;const $w=class $w extends uu{constructor(A,s,R){super(A,s),this.volume=100,this.pitch=100,R&&(this.volume=R.volume,this.pitch=R.pitch)}execute(A,s){const R={rate:this.pitch*.01,volume:this.volume*.01};if(this.resourceName){try{n.playSound(`battle_anims/${this.resourceName}`,R)}catch(a){console.error(a)}return Math.ceil(n.sound.get(`battle_anims/${this.resourceName}`).totalDuration*1e3/33.33)}else return Math.ceil(A.user.cry(R).totalDuration*1e3/33.33)}getEventType(){return"AnimTimedSoundEvent"}};N($w,"AnimTimedSoundEvent");let QS=$w;const zw=class zw extends uu{constructor(A,s,R){super(A,s),this.bgX=0,this.bgY=0,this.opacity=0,this.duration=0,R&&(this.bgX=R.bgX,this.bgY=R.bgY,this.opacity=R.opacity,this.duration=R.duration)}};N(zw,"AnimTimedBgEvent");let Du=zw;const qw=class qw extends Du{constructor(A,s,R){super(A,s,R)}execute(A,s){const R={};return this.bgX!==void 0&&(R.x=this.bgX*.5-320),this.bgY!==void 0&&(R.y=this.bgY*.5-284),this.opacity!==void 0&&(R.alpha=(this.opacity||0)/255),Object.keys(R).length&&n.tweens.add(Object.assign({targets:A.bgSprite,duration:TE(this.duration*3)},R)),this.duration*2}getEventType(){return"AnimTimedUpdateBgEvent"}};N(qw,"AnimTimedUpdateBgEvent");let Mu=qw;const jw=class jw extends Du{constructor(A,s,R){super(A,s,R)}execute(A,s){A.bgSprite&&A.bgSprite.destroy(),A.bgSprite=this.resourceName?n.add.tileSprite(this.bgX-320,this.bgY-284,896,576,this.resourceName):n.add.rectangle(this.bgX-320,this.bgY-284,896,576,0),A.bgSprite.setOrigin(0,0),A.bgSprite.setScale(1.25),A.bgSprite.setAlpha(this.opacity/255),n.field.add(A.bgSprite);const R=n.getEnemyPokemon(!1)??n.getPlayerPokemon(!1);return ve(s)?R!=null&&R.isOnField()&&n.field.moveBelow(A.bgSprite,R):n.field.moveTo(A.bgSprite,s),n.tweens.add({targets:A.bgSprite,duration:TE(this.duration*3)}),this.duration*2}getEventType(){return"AnimTimedAddBgEvent"}};N(jw,"AnimTimedAddBgEvent");let JS=jw;const tR=new Map,AR=new Map,pM=new Map,eN=new Map;function vJ(){return new Promise(E=>{const A=lO(lA),s=DE(lA),R=[];for(let a=0;a<s.length;a++){const i=s[a];R.push(n.cachedFetch(`./battle-anims/common-${A[a].toLowerCase().replace(/\_/g,"-")}.json`).then(r=>r.json()).then(r=>pM.set(i,new UO(r))))}Promise.allSettled(R).then(()=>E())})}N(vJ,"initCommonAnims");function lL(E){return new Promise(A=>{if(tR.has(E))if(tR.get(E)!==null)A();else{const s=setInterval(()=>{if(tR.get(E)!==null){const R=we[E].isChargingMove()?we[E]:we[E].getAttrs(EI)[0]??we[E].getAttrs(tL)[0];if(R&&AR.get(R.chargeAnim)===null)return;clearInterval(s),A()}},50)}else{tR.set(E,null);const s=we[E]instanceof g?t.TACKLE:we[E]instanceof je?t.FOCUS_ENERGY:t.TAIL_WHIP;N(a=>{n.cachedFetch(`./battle-anims/${B6(a)}.json`).then(i=>{const r=i.headers.get("content-type");return!i.ok||(r==null?void 0:r.indexOf("application/json"))===-1?(M6(a,s),_6(a,i.status,i.statusText),A()):i.json()}).then(i=>{Array.isArray(i)?(fl(a,i[0]),fl(a,i[1])):fl(a,i);const r=we[a].isChargingMove()?we[a]:we[a].getAttrs(EI)[0]??we[a].getAttrs(tL)[0];r?xJ(r.chargeAnim).then(()=>A()):A()}).catch(i=>(M6(a,s),_6(a,i),A()))},"fetchAnimAndResolve")(E)}})}N(lL,"initMoveAnim");function M6(E,A){fl(E,tR.get(A))}N(M6,"useDefaultAnim");function _6(E,...A){const s=B6(E);console.warn(`Could not load animation file for move '${s}'`,...A)}N(_6,"logMissingMoveAnim");async function VJ(E){const A=Array.isArray(E)?E:[E],s=lO(EO),R=[];for(const a of A)eN.has(a)&&!ve(eN.get(a))||R.push(n.cachedFetch(`./battle-anims/encounter-${s[a].toLowerCase().replace(/\_/g,"-")}.json`).then(i=>i.json()).then(i=>eN.set(a,new UO(i))));await Promise.allSettled(R)}N(VJ,"initEncounterAnims");function xJ(E){return new Promise(A=>{if(AR.has(E))if(AR.get(E)!==null)A();else{const s=setInterval(()=>{AR.get(E)!==null&&(clearInterval(s),A())},50)}else AR.set(E,null),n.cachedFetch(`./battle-anims/${AI[E].toLowerCase().replace(/\_/g,"-")}.json`).then(s=>s.json()).then(s=>{Array.isArray(s)?(q0(E,s[0]),q0(E,s[1])):q0(E,s),A()})})}N(xJ,"initMoveChargeAnim");function fl(E,A){const s=new UO(A);if(tR.get(E)===null){tR.set(E,s);return}tR.set(E,[tR.get(E),s])}N(fl,"populateMoveAnim");function q0(E,A){const s=new UO(A);if(AR.get(E)===null){AR.set(E,s);return}AR.set(E,[AR.get(E),s])}N(q0,"populateMoveChargeAnim");function bJ(E){return new Promise(A=>{X1(Array.from(pM.values()),E).then(()=>A())})}N(bJ,"loadCommonAnimAssets");async function kJ(E){await X1(Array.from(eN.values()),E)}N(kJ,"loadEncounterAnimAssets");function CL(E,A){return new Promise(s=>{const R=E.map(a=>tR.get(a)).flat();for(const a of E){const i=we[a].isChargingMove()?we[a]:we[a].getAttrs(EI)[0]??we[a].getAttrs(tL)[0];if(i){const r=AR.get(i.chargeAnim);R.push(r instanceof UO?r:r[0]),Array.isArray(r)&&R.push(r[1])}}X1(R,A).then(()=>s())})}N(CL,"loadMoveAnimAssets");function X1(E,A){return new Promise(s=>{var i;const R=new Set,a=new Set;for(const r of E){if(!((i=r.frames)!=null&&i.length))continue;const L=r.getSoundResourceNames();for(const l of L)a.add(l);const o=r.getBackgroundResourceNames();for(const l of o)R.add(l);r.graphic&&n.loadSpritesheet(r.graphic,"battle_anims",96)}for(const r of R)n.loadImage(r,"battle_anims");for(const r of a)n.loadSe(r,"battle_anims",r);A?(n.load.once(sE.Loader.Events.COMPLETE,()=>s()),n.load.isLoading()||n.load.start()):s()})}N(X1,"loadAnimAssets");const j0=106,e_=116,t_=234,A_=52;function ZJ(E,A,s,R,a,i,r,L,o,l){const C=XJ(E,A,s,R,o,l);return QJ(a,i,r,L,C[0],C[1])}N(ZJ,"transformPoint");function XJ(E,A,s,R,a,i){const r=s-E,L=R-A,o=r===0?0:(a-E)/r,l=L===0?0:(i-A)/L;return[o,l]}N(XJ,"yAxisIntersect");function QJ(E,A,s,R,a,i){const r=s-E,L=R-A,o=E+a*r,l=A+i*L;return[o,l]}N(QJ,"repositionY");function JJ(E,A,s,R){return E===A?!1:E<A?s>R:s<R}N(JJ,"isReversed");const e4=class e4{constructor(A,s,R=!1){this.user=A??null,this.target=s??null,this.sprites=[],this.playRegardlessOfIssues=R}isHideUser(){return!1}isHideTarget(){return!1}getGraphicFrameData(A,s){var d,f;const R=new Map([[2,new Map],[0,new Map],[1,new Map]]),a=this.isOppAnim(),i=a?this.target:this.user,r=a?this.user:this.target,L=s&&i!==r?r.getTag(mE):null,o=i.x,l=i.y,C=i.getSprite().displayHeight/2,M=((d=L==null?void 0:L.sprite)==null?void 0:d.x)??r.x,D=((f=L==null?void 0:L.sprite)==null?void 0:f.y)??r.y,_=((L==null?void 0:L.sprite)??r.getSprite()).displayHeight/2;let P=0,h=0,H=0;for(const B of A){let F=B.x+106,W=B.y+116,b=B.zoomX/100*(B.mirror?-1:1);const x=B.zoomY/100;switch(B.focus){case 1:F+=M-t_,W+=D-_-A_;break;case 2:F+=o-j0,W+=l-C-e_;break;case 3:const z=ZJ(this.srcLine[0],this.srcLine[1],this.srcLine[2],this.srcLine[3],this.dstLine[0],this.dstLine[1]-C,this.dstLine[2],this.dstLine[3]-_,F,W);F=z[0],W=z[1],B.target===2&&JJ(this.srcLine[0],this.srcLine[2],this.dstLine[0],this.dstLine[2])&&(b=b*-1);break}const $=-B.angle,j=B.target===2?P++:B.target===0?h++:H++;R.get(B.target).set(j,{x:F,y:W,scaleX:b,scaleY:x,angle:$})}return R}play(A,s){var B,F;const R=this.isOppAnim(),a=R?this.target:this.user,i=R?this.user:this.target;if(!(i!=null&&i.isOnField())&&!this.playRegardlessOfIssues){s&&s();return}const r=A&&a!==i?i.getTag(mE):null,L=a.getSprite(),o=(r==null?void 0:r.sprite)??i.getSprite(),l={2:[],0:[],1:[]},C=[],M=N(()=>{L.setPosition(0,0),L.setScale(1),L.setAlpha(1),L.pipelineData.tone=[0,0,0,0],L.setAngle(0),r?(o.setPosition(i.x-i.getSubstituteOffset()[0],i.y-i.getSubstituteOffset()[1]),o.setScale(i.getSpriteScale()*(i.isPlayer()?.5:1)),o.setAlpha(1)):(o.setPosition(0,0),o.setScale(1),o.setAlpha(1)),o.pipelineData.tone=[0,0,0,0],o.setAngle(0);const W=R?o:L,b=R?L:o;!this.isHideUser()&&W&&W.setVisible(!0),!this.isHideTarget()&&(b!==W||!this.isHideUser())&&b.setVisible(!0);for(const x of Object.values(l).flat())x&&x.destroy();this.bgSprite&&this.bgSprite.destroy(),s&&s()},"cleanUpAndComplete");if(!n.moveAnimations&&!this.playRegardlessOfIssues)return M();const D=this.getAnim(),_=a.x,P=a.y,h=((B=r==null?void 0:r.sprite)==null?void 0:B.x)??i.x,H=((F=r==null?void 0:r.sprite)==null?void 0:F.y)??i.y;this.srcLine=[j0,e_,t_,A_],this.dstLine=[_,P,h,H];let d=(D==null?void 0:D.frames.length)??0,f=0;n.tweens.addCounter({duration:TE(3),repeat:(D==null?void 0:D.frames.length)??0,onRepeat:N(()=>{f||(L.setVisible(!1),o.setVisible(!1));const W=D.frames[f],b=this.getGraphicFrameData(D.frames[f],A);let x=0,$=0,j=0;for(const se of W)if(se.target!==2){const Z=se.target===0;if(Z&&i===a)continue;if(this.playRegardlessOfIssues&&se.target===1&&!i.isOnField())continue;const q=l[Z?0:1],p=Z?L:o;if((Z?x:$)===q.length)if(Z||!r){const De=n.addPokemonSprite(Z?a:i,0,0,p.texture,p.frame.name,!0);["spriteColors","fusionSpriteColors"].map(ie=>De.pipelineData[ie]=(Z?a:i).getSprite().pipelineData[ie]),De.setPipelineData("spriteKey",(Z?a:i).getBattleSpriteKey()),De.setPipelineData("shiny",(Z?a:i).shiny),De.setPipelineData("variant",(Z?a:i).variant),De.setPipelineData("ignoreFieldPos",!0),p.on("animationupdate",(ie,Ae)=>De.setFrame(Ae.textureFrame)),n.field.add(De),q.push(De)}else{const De=n.addFieldSprite(p.x,p.y,p.texture);p.on("animationupdate",(ie,Ae)=>De.setFrame(Ae.textureFrame)),n.field.add(De),q.push(De)}const oe=Z?x++:$++,me=q[oe],Me=b.get(se.target).get(oe),We=Z||!r?p.parentContainer.scale:i.getSpriteScale()*(i.isPlayer()?.5:1);me.setPosition(Me.x,Me.y-p.height/2*(We-1)),me.setAngle(Me.angle),me.setScale(Me.scaleX*We,Me.scaleY*We),me.setData("locked",se.locked),me.setAlpha(se.opacity/255),me.pipelineData.tone=se.tone,me.setVisible(se.visible&&(Z?a.visible:i.visible)),me.setBlendMode(se.blendType===0?sE.BlendModes.NORMAL:se.blendType===1?sE.BlendModes.ADD:sE.BlendModes.DIFFERENCE)}else{const Z=l[2];if(j===Z.length){const me=n.addFieldSprite(0,0,D.graphic,1);Z.push(me),n.field.add(me),C.push(1)}const q=j++,p=Z[q];if(C[q]!==se.priority){C[q]=se.priority;const me=N(Me=>{switch(Me){case 0:n.field.moveBelow(p,n.getEnemyPokemon(!1)??n.getPlayerPokemon(!1));break;case 1:n.field.moveTo(p,n.field.getAll().length-1);break;case 2:switch(se.focus){case 2:this.bgSprite?n.field.moveAbove(p,this.bgSprite):n.field.moveBelow(p,this.user);break;case 1:n.field.moveBelow(p,this.target);break;default:me(1);break}break;case 3:switch(se.focus){case 2:n.field.moveAbove(p,this.user);break;case 1:n.field.moveAbove(p,this.target);break;default:me(1);break}break;default:me(1)}},"setSpritePriority");me(se.priority)}p.setFrame(se.graphicFrame);const oe=b.get(se.target).get(q);p.setPosition(oe.x,oe.y),p.setAngle(oe.angle),p.setScale(oe.scaleX,oe.scaleY),p.setAlpha(se.opacity/255),p.setVisible(se.visible),p.setBlendMode(se.blendType===0?sE.BlendModes.NORMAL:se.blendType===1?sE.BlendModes.ADD:sE.BlendModes.DIFFERENCE)}if(D!=null&&D.frameTimedEvents.has(f))for(const se of D.frameTimedEvents.get(f))d=Math.max(D.frames.length-f+se.execute(this),d);const z=DE(pH);for(const se of z){const Z=se===2?j:se===0?x:$;if(Z<l[se].length){const q=l[se].slice(Z,l[se].length);for(const p of q)if(!p.getData("locked")){const oe=l[se].indexOf(p);l[se].splice(oe,1),se===2&&C.splice(oe,1),p.destroy()}}}f++,d--},"onRepeat"),onComplete:N(()=>{for(const W of Object.values(l).flat())W&&!W.getData("locked")&&W.destroy();d?n.tweens.addCounter({duration:TE(d),onComplete:N(()=>M(),"onComplete")}):M()},"onComplete")})}getGraphicFrameDataWithoutTarget(A,s,R){var o;const a=new Map([[2,new Map],[0,new Map],[1,new Map]]);let i=0,r=0,L=0;for(const l of A){let{x:C,y:M}=l;const D=l.zoomX/100*(l.mirror?-1:1),_=l.zoomY/100;C+=s,M+=R;const P=-l.angle,h=l.target===2?i++:l.target===0?r++:L++;(o=a.get(l.target))==null||o.set(h,{x:C,y:M,scaleX:D,scaleY:_,angle:P})}return a}playWithoutTargets(A,s,R,a,i){const r={2:[],0:[],1:[]},L=N(()=>{for(const D of Object.values(r).flat())D&&D.destroy();this.bgSprite&&this.bgSprite.destroy(),i&&i()},"cleanUpAndComplete");if(!n.moveAnimations&&!this.playRegardlessOfIssues)return L();const o=this.getAnim();this.srcLine=[j0,e_,t_,A_],this.dstLine=[150,75,A,s];let l=o.frames.length,C=0,M=n.field.getAll().slice(0);n.tweens.addCounter({duration:TE(3)*R,repeat:o.frames.length,onRepeat:N(()=>{var H;M=n.field.getAll().slice(0);const D=o.frames[C],_=this.getGraphicFrameDataWithoutTarget(o.frames[C],A,s);let P=0;for(const d of D){if(d.target!==2){console.log("Encounter animations do not support targets");continue}const f=r[2];if(P===f.length){const b=n.addFieldSprite(0,0,o.graphic,1);f.push(b),n.field.add(b)}const B=P++,F=f[B];ve(d.priority)||N(x=>{if(M.length>x){const $=n.field.getIndex(M[x]);n.field.moveTo(F,$)}else n.field.moveTo(F,n.field.getAll().length-1)},"setSpritePriority")(d.priority),F.setFrame(d.graphicFrame);const W=(H=_.get(d.target))==null?void 0:H.get(B);W&&(F.setPosition(W.x,W.y),F.setAngle(W.angle),F.setScale(W.scaleX,W.scaleY),F.setAlpha(d.opacity/255),F.setVisible(d.visible),F.setBlendMode(d.blendType===0?sE.BlendModes.NORMAL:d.blendType===1?sE.BlendModes.ADD:sE.BlendModes.DIFFERENCE))}if(o!=null&&o.frameTimedEvents.get(C))for(const d of o.frameTimedEvents.get(C))l=Math.max(o.frames.length-C+d.execute(this,a),l);const h=DE(pH);for(const d of h){const f=P;if(f<r[d].length){const B=r[d].slice(f,r[d].length);for(const F of B)if(!F.getData("locked")){const W=r[d].indexOf(F);r[d].splice(W,1),F.destroy()}}}C++,l--},"onRepeat"),onComplete:N(()=>{for(const D of Object.values(r).flat())D&&!D.getData("locked")&&D.destroy();l?n.tweens.addCounter({duration:TE(l),onComplete:N(()=>L(),"onComplete")}):L()},"onComplete")})}};N(e4,"BattleAnim");let $S=e4;const t4=class t4 extends $S{constructor(A,s,R,a=!1){super(s,R||s,a),this.commonAnim=A}getAnim(){return this.commonAnim?pM.get(this.commonAnim)??null:null}isOppAnim(){return!1}};N(t4,"CommonBattleAnim");let qI=t4;const A4=class A4 extends $S{constructor(A,s,R,a=!1){super(s,n.getField()[R],a),this.move=A}getAnim(){var A,s;return tR.get(this.move)instanceof UO?tR.get(this.move):(s=tR.get(this.move))==null?void 0:s[(A=this.user)!=null&&A.isPlayer()?0:1]}isOppAnim(){var A;return!((A=this.user)!=null&&A.isPlayer())&&Array.isArray(tR.get(this.move))}isHideUser(){return we[this.move].hasFlag(tA.HIDE_USER)}isHideTarget(){return we[this.move].hasFlag(tA.HIDE_TARGET)}};N(A4,"MoveAnim");let _u=A4;const E4=class E4 extends _u{constructor(A,s,R){super(s,R,0),this.chargeAnim=A}isOppAnim(){var A;return!((A=this.user)!=null&&A.isPlayer())&&Array.isArray(AR.get(this.chargeAnim))}getAnim(){var A,s;return AR.get(this.chargeAnim)instanceof UO?AR.get(this.chargeAnim):(s=AR.get(this.chargeAnim))==null?void 0:s[(A=this.user)!=null&&A.isPlayer()?0:1]}};N(E4,"MoveChargeAnim");let zS=E4;const s4=class s4 extends $S{constructor(A,s,R,a){super(s,R??s,!0),this.encounterAnim=A,this.oppAnim=a??!1}getAnim(){return eN.get(this.encounterAnim)??null}isOppAnim(){return this.oppAnim}};N(s4,"EncounterBattleAnim");let Xn=s4;async function $J(){const A=lO(lA).map(C=>C.toLowerCase()).map(C=>C.replace(/\_/g,"")),s=DE(lA),a=lO(AI).map(C=>C.toLowerCase()).map(C=>C.replace(/\_/g," ")),i=DE(AI),r=/name: (?:Common:)?(Opp )?(.*)/,L={};for(const C of DE(t).slice(1)){const M=t[C].toUpperCase().replace(/\_/g,"");L[M]=C}const o=[],l=[];for(let C=0;C<l.length;C++){const M=l[C].split("@").slice(1),D=M.find(B=>B.startsWith("name: "));let _,P,h;if(!D.startsWith("name: Move:")&&!(_=D.startsWith("name: OppMove:"))){const F=r.exec(D)[2].toLowerCase();A.indexOf(F)>-1?P=s[A.indexOf(F)]:a.indexOf(F)>-1&&(_=D.startsWith("name: Opp "),h=i[a.indexOf(F)])}const H=D.indexOf(":",5)+1,d=D.slice(H,D.indexOf(`
`,H));if(!L.hasOwnProperty(d)&&!P&&!h)continue;const f=P||h?new UO:new UO;f instanceof UO&&(f.id=L[d]),P?pM.set(P,f):h?AR.set(h,_?[AR.get(h),f]:f):tR.set(L[d],_?[tR.get(L[d]),f]:f);for(let B=0;B<M.length;B++){const F=M[B],W=F.slice(0,F.indexOf(":")),b=F.slice(W.length+1,F.lastIndexOf(`
`)).trim();switch(W){case"array":const x=b.split("  - - - ").slice(1);for(let z=0;z<x.length;z++){f.frames.push([]);const Z=x[z].split("    - - ");for(let q=0;q<Z.length;q++){const p=Z[q].replace(/      \- /g,"").split(`
`),oe=new Uu(parseFloat(p[0]),parseFloat(p[1]),parseFloat(p[2]),parseFloat(p[11]),parseFloat(p[3]),parseInt(p[4])===1,parseInt(p[6])===1,parseInt(p[5]),parseInt(p[7]),parseInt(p[8]),parseInt(p[12]),parseInt(p[13]),parseInt(p[14]),parseInt(p[15]),parseInt(p[16]),parseInt(p[17]),parseInt(p[18]),parseInt(p[19]),parseInt(p[21]),parseInt(p[22]),parseInt(p[23]),parseInt(p[24]),parseInt(p[20])===1,parseInt(p[25]),parseInt(p[26]));f.frames[z].push(oe)}}break;case"graphic":const $=b!=="''"?b:"";f.graphic=$.indexOf(".")>-1?$.slice(0,b.indexOf(".")):$;break;case"timing":const j=b.split("- !ruby/object:PBAnimTiming ").slice(1);for(let z=0;z<j.length;z++){const se=j[z].replace(/\n/g," ").replace(/[ ]{2,}/g," ").replace(/[a-z]+: ! '', /ig,"").replace(/name: (.*?),/,'name: "$1",').replace(/flashColor: !ruby\/object:Color { alpha: ([\d\.]+), blue: ([\d\.]+), green: ([\d\.]+), red: ([\d\.]+)}/,"flashRed: $4, flashGreen: $3, flashBlue: $2, flashAlpha: $1"),Z=parseInt(/frame: (\d+)/.exec(se)[1]);let q=/name: "(.*?)"/.exec(se)[1].replace("''","");const p=parseInt(/timingType: (\d)/.exec(se)[1]);let oe;switch(p){case 0:if(q&&q.indexOf(".")===-1){let We;["wav","mp3","m4a"].every(De=>o.indexOf(`${q}.${De}`)>-1?(We=De,!1):!0),We||(We=".wav"),q+=`.${We}`}oe=new QS(Z,q);break;case 1:oe=new JS(Z,q.slice(0,q.indexOf(".")));break;case 2:oe=new Mu(Z,q.slice(0,q.indexOf(".")));break}if(!oe)continue;const me=/([a-z]+): (.*?)(?:,|\})/ig;let Me;for(;Me=me.exec(se);){const We=Me[1];let De=Me[2];switch(We){case"bgX":case"bgY":De=parseFloat(De);break;case"volume":case"pitch":case"opacity":case"colorRed":case"colorGreen":case"colorBlue":case"colorAlpha":case"duration":case"flashScope":case"flashRed":case"flashGreen":case"flashBlue":case"flashAlpha":case"flashDuration":De=parseInt(De);break}oe.hasOwnProperty(We)&&(oe[We]=De)}f.frameTimedEvents.has(Z)||f.frameTimedEvents.set(Z,[]),f.frameTimedEvents.get(Z).push(oe)}break;case"position":f.position=parseInt(b);break;case"hue":f.hue=parseInt(b);break}}}}N($J,"populateAnims");var Pt=(E=>(E[E.PHYSICAL=0]="PHYSICAL",E[E.SPECIAL=1]="SPECIAL",E[E.STATUS=2]="STATUS",E))(Pt||{}),$E=(E=>(E[E.USER=0]="USER",E[E.OTHER=1]="OTHER",E[E.ALL_OTHERS=2]="ALL_OTHERS",E[E.NEAR_OTHER=3]="NEAR_OTHER",E[E.ALL_NEAR_OTHERS=4]="ALL_NEAR_OTHERS",E[E.NEAR_ENEMY=5]="NEAR_ENEMY",E[E.ALL_NEAR_ENEMIES=6]="ALL_NEAR_ENEMIES",E[E.RANDOM_NEAR_ENEMY=7]="RANDOM_NEAR_ENEMY",E[E.ALL_ENEMIES=8]="ALL_ENEMIES",E[E.ATTACKER=9]="ATTACKER",E[E.NEAR_ALLY=10]="NEAR_ALLY",E[E.ALLY=11]="ALLY",E[E.USER_OR_NEAR_ALLY=12]="USER_OR_NEAR_ALLY",E[E.USER_AND_ALLIES=13]="USER_AND_ALLIES",E[E.ALL=14]="ALL",E[E.USER_SIDE=15]="USER_SIDE",E[E.ENEMY_SIDE=16]="ENEMY_SIDE",E[E.BOTH_SIDES=17]="BOTH_SIDES",E[E.PARTY=18]="PARTY",E[E.CURSE=19]="CURSE",E))($E||{}),tA=(E=>(E[E.NONE=0]="NONE",E[E.MAKES_CONTACT=1]="MAKES_CONTACT",E[E.IGNORE_PROTECT=2]="IGNORE_PROTECT",E[E.SOUND_BASED=4]="SOUND_BASED",E[E.HIDE_USER=8]="HIDE_USER",E[E.HIDE_TARGET=16]="HIDE_TARGET",E[E.BITING_MOVE=32]="BITING_MOVE",E[E.PULSE_MOVE=64]="PULSE_MOVE",E[E.PUNCHING_MOVE=128]="PUNCHING_MOVE",E[E.SLICING_MOVE=256]="SLICING_MOVE",E[E.RECKLESS_MOVE=512]="RECKLESS_MOVE",E[E.BALLBOMB_MOVE=1024]="BALLBOMB_MOVE",E[E.POWDER_MOVE=2048]="POWDER_MOVE",E[E.DANCE_MOVE=4096]="DANCE_MOVE",E[E.WIND_MOVE=8192]="WIND_MOVE",E[E.TRIAGE_MOVE=16384]="TRIAGE_MOVE",E[E.IGNORE_ABILITIES=32768]="IGNORE_ABILITIES",E[E.CHECK_ALL_HITS=65536]="CHECK_ALL_HITS",E[E.IGNORE_SUBSTITUTE=131072]="IGNORE_SUBSTITUTE",E[E.REDIRECT_COUNTER=262144]="REDIRECT_COUNTER",E))(tA||{});const R4=class R4{constructor(A,s,R,a,i,r,L,o,l,C){this.attrs=[],this.conditions=[],this.flags=0,this.nameAppend="",this.id=A,this._type=s,this._category=R,this.moveTarget=a,this.power=i,this.accuracy=r,this.pp=L,this.chance=o,this.priority=l,this.generation=C,a===0&&this.setFlag(2,!0),R===0&&this.setFlag(1,!0),this.localize()}get type(){return this._type}get category(){return this._category}localize(){const A=t[this.id].split("_").filter(s=>s).map((s,R)=>R?`${s[0]}${s.slice(1).toLowerCase()}`:s.toLowerCase()).join("");this.name=this.id?`${u.t(`move:${A}.name`)}${this.nameAppend}`:"",this.effect=this.id?`${u.t(`move:${A}.effect`)}${this.nameAppend}`:""}getAttrs(A){return this.attrs.filter(s=>s instanceof A)}hasAttr(A){return this.attrs.some(s=>s instanceof A)}findAttr(A){return this.attrs.find(A)}attr(A,...s){const R=new A(...s);this.attrs.push(R);let a=R.getCondition();return a&&(typeof a=="function"&&(a=new $a(a)),this.conditions.push(a)),this}addAttr(A){this.attrs.push(A);let s=A.getCondition();return s&&(typeof s=="function"&&(s=new $a(s)),this.conditions.push(s)),this}target(A){return this.moveTarget=A,this}hasFlag(A){return!!(this.flags&A)}isMultiTarget(){switch(this.moveTarget){case 2:case 4:case 6:case 8:case 13:case 14:case 15:case 16:case 17:return!0}return!1}isAllyTarget(){switch(this.moveTarget){case 0:case 10:case 11:case 12:case 13:case 15:return!0}return!1}isChargingMove(){return!1}isTypeImmune(A,s,R){if(this.moveTarget===0)return!1;switch(R){case I.GRASS:if(this.hasFlag(2048))return!0;break;case I.DARK:if(A.hasAbility(O.PRANKSTER)&&this.category===2&&A.isPlayer()!==s.isPlayer())return!0;break}return!1}hitsSubstitute(A,s){if([0,15,16,17].includes(this.moveTarget)||!(s!=null&&s.getTag(y.SUBSTITUTE)))return!1;const R=new Lt(!1);return ut(Ni,A,null,!1,R),!R.value&&!this.hasFlag(4)&&!this.hasFlag(131072)}condition(A){return typeof A=="function"&&(A=new $a(A)),this.conditions.push(A),this}edgeCase(){return this}partial(){return this.nameAppend+=" (P)",this}unimplemented(){return this.nameAppend+=" (N)",this}setFlag(A,s){s?this.flags|=A:this.flags^=A}makesContact(A=!0){return this.setFlag(1,A),this}ignoresProtect(){return this.setFlag(2,!0),this}soundBased(){return this.setFlag(4,!0),this}hidesUser(){return this.setFlag(8,!0),this}hidesTarget(){return this.setFlag(16,!0),this}bitingMove(){return this.setFlag(32,!0),this}pulseMove(){return this.setFlag(64,!0),this}punchingMove(){return this.setFlag(128,!0),this}slicingMove(){return this.setFlag(256,!0),this}recklessMove(){return this.setFlag(512,!0),this}ballBombMove(){return this.setFlag(1024,!0),this}powderMove(){return this.setFlag(2048,!0),this}danceMove(){return this.setFlag(4096,!0),this}windMove(){return this.setFlag(8192,!0),this}triageMove(){return this.setFlag(16384,!0),this}ignoresAbilities(){return this.setFlag(32768,!0),this}checkAllHits(){return this.setFlag(65536,!0),this}ignoresSubstitute(){return this.setFlag(131072,!0),this}redirectCounter(){return this.setFlag(262144,!0),this}checkFlag(A,s,R){switch(A){case 1:if(s.hasAbilityWithAttr(KU)||this.hitsSubstitute(s,R))return!1;break;case 32768:if(s.hasAbilityWithAttr(WI)){const a=new Lt(!1);if(ut(WI,s,a,!1,this),a.value)return!0}break;case 2:if(s.hasAbilityWithAttr(jU)&&this.checkFlag(1,s,null))return!0;break}return!!(this.flags&A)}applyConditions(A,s,R){for(const a of this.conditions)if(!a.apply(A,s,R))return!1;return!0}getFailedText(A,s,R,a){for(const i of this.attrs){const r=i.getFailedText(A,s,R,a);if(r!==null)return r}return null}getUserBenefitScore(A,s,R){let a=0;for(const i of this.attrs)a+=i.getUserBenefitScore(A,s,R);for(const i of this.conditions)a+=i.getUserBenefitScore(A,s,R);return a}getTargetBenefitScore(A,s,R){var i,r;let a=0;if(((r=(i=s.getAlly())==null?void 0:i.getTag(y.COMMANDED))==null?void 0:r.getSourcePokemon())===s)return 20*(s.isPlayer()===A.isPlayer()?-1:1);for(const L of this.attrs)a+=L.getTargetBenefitScore(A,L.selfTarget?A:s,R)*(s!==A&&L.selfTarget?-1:1);return a}calculateBattleAccuracy(A,s,R=!1){var r;const a=new Et(this.accuracy);if(MA(sI,A,s,this,a),Wn(iU,s,A,this,{value:!1},R,a),a.value===-1)return a.value;const i=this.hasAttr(wI);return i||n.applyModifiers(Ho,A.isPlayer(),A,a),((r=n.arena.weather)==null?void 0:r.weatherType)===Oe.FOG&&(a.value=Math.floor(a.value*.9)),!i&&n.arena.getTag(ge.GRAVITY)&&(a.value=Math.floor(a.value*1.67)),a.value}calculateBattlePower(A,s,R=!1){if(this.category===2)return-1;const a=new Et(this.power),i=new Et(1);XO(Tn,A,s,this,!0,null,i);const r=A.getTeraType();r!==I.UNKNOWN&&r===this.type&&a.value<60&&this.priority<=0&&!this.hasAttr(TA)&&!n.findModifier(C=>C instanceof RI&&C.pokemonId===A.id)&&(a.value=60),XO(GS,A,s,this,R,a),A.getAlly()&&XO(HS,A.getAlly(),s,this,R,a);const L=new Set(n.getField(!0).map(C=>C.getAbilityAttrs(Fa).filter(M=>{const D=M.getCondition();return!D||D(C)})).flat());for(const C of L)C.applyPreAttack(A,null,R,s,this,[a]);(A instanceof vE?n.getPlayerField():n.getEnemyField()).forEach(C=>XO(CU,C,s,this,R,a)),a.value*=i.value;const l=A.findTag(C=>C instanceof qr&&C.boostedType===this.type);return l&&(a.value*=l.boostValue),MA(vA,A,s,this,a),this.hasAttr(to)||(n.arena.applyTags(MS,R,this.type,a),n.applyModifiers(Pn,A.isPlayer(),A,this.type,a)),A.getTag(Ou)&&(a.value*=1.5),a.value}getPriority(A,s=!0){const R=new Et(this.priority);return MA(Fu,A,null,this,R),ut(gI,A,null,s,this,R),R.value}canBeMultiStrikeEnhanced(A,s=!1){const{targets:R,multiple:a}=ta(A,this.id),i=a&&R.length>1,r=[TA,Qn,oi],L=[t.FLING,t.UPROAR,t.ROLLOUT,t.ICE_BALL,t.ENDEAVOR];return(!s||!i)&&!this.isChargingMove()&&!r.some(o=>this.hasAttr(o))&&!L.some(o=>this.id===o)&&this.category!==2}};N(R4,"Move");let qS=R4;const O4=class O4 extends qS{constructor(A,s,R,a,i,r,L,o,l){super(A,s,R,3,a,i,r,L,o,l),this.type===I.FIRE&&this.addAttr(new eE(!1,ne.FREEZE))}getTargetBenefitScore(A,s,R){let a=super.getTargetBenefitScore(A,s,R),i=0;const r=s.getAttackTypeEffectiveness(this.type,A,void 0,void 0,this);if(i=Math.pow(r-1,2)*r<1?-2:2,i){if(this.category===0){const o=new _s(A.getEffectiveStat(K.ATK,s));if(MA(li,A,s,R,o),o.value>A.getEffectiveStat(K.SPATK,s)){const l=A.getEffectiveStat(K.SPATK,s)/o.value;l<=.75?i*=2:l<=.875&&(i*=1.5)}}else{const o=new _s(A.getEffectiveStat(K.SPATK,s));if(MA(li,A,s,R,o),o.value>A.getEffectiveStat(K.ATK,s)){const l=A.getEffectiveStat(K.ATK,s)/o.value;l<=.75?i*=2:l<=.875&&(i*=1.5)}}const L=new Et(this.power);MA(vA,A,s,R,L),i+=Math.floor(L.value/5)}return a-=i,a}};N(O4,"AttackMove");let g=O4;const n4=class n4 extends qS{constructor(A,s,R,a,i,r,L){super(A,s,2,3,-1,R,a,i,r,L)}};N(n4,"StatusMove");let Ge=n4;const I4=class I4 extends qS{constructor(A,s,R,a,i,r,L){super(A,s,2,0,-1,R,a,i,r,L)}};N(I4,"SelfStatusMove");let je=I4;function k8(E){return class extends E{constructor(){super(...arguments),this.chargeAnim=AI[`${t[this.id]}_CHARGING`],this.chargeAttrs=[]}isChargingMove(){return!0}chargeText(A){return this._chargeText=A,this}showChargeText(A,s){n.queueMessage(this._chargeText.replace("{USER}",te(A)).replace("{TARGET}",te(s)))}getChargeAttrs(A){return this.chargeAttrs.filter(s=>s instanceof A)}hasChargeAttr(A){return this.chargeAttrs.some(s=>s instanceof A)}chargeAttr(A,...s){const R=new A(...s);return this.chargeAttrs.push(R),this}}}N(k8,"ChargeMove");const a4=class a4 extends k8(g){};N(a4,"ChargingAttackMove");let os=a4;const i4=class i4 extends k8(je){};N(i4,"ChargingSelfStatusMove");let YH=i4;const r4=class r4{constructor(A=!1){this.selfTarget=A}apply(A,s,R,a){return!0}getCondition(){return null}getFailedText(A,s,R,a){return null}getUserBenefitScore(A,s,R){return 0}getTargetBenefitScore(A,s,R){return 0}};N(r4,"MoveAttr");let NA=r4;var vi=(E=>(E[E.PRE_APPLY=0]="PRE_APPLY",E[E.POST_APPLY=1]="POST_APPLY",E[E.HIT=2]="HIT",E[E.POST_TARGET=3]="POST_TARGET",E))(vi||{});const L4=class L4 extends NA{constructor(A,s){super(A),this.options=s}get trigger(){var A;return((A=this.options)==null?void 0:A.trigger)??1}get firstHitOnly(){var A;return((A=this.options)==null?void 0:A.firstHitOnly)??!1}get lastHitOnly(){var A;return((A=this.options)==null?void 0:A.lastHitOnly)??!1}get firstTargetOnly(){var A;return((A=this.options)==null?void 0:A.firstTargetOnly)??!1}get effectChanceOverride(){var A;return(A=this.options)==null?void 0:A.effectChanceOverride}canApply(A,s,R,a){return!!(this.selfTarget?A.hp&&!A.getTag(y.FRENZY):s.hp)&&(this.selfTarget||!s.getTag(y.PROTECTED)||R.checkFlag(2,A,s))}apply(A,s,R,a){return this.canApply(A,s,R,a)}getMoveChance(A,s,R,a,i){const r=new Et(this.effectChanceOverride??R.chance);if(ut(PS,A,null,!1,r,R,s,a,i),(!R.hasAttr(rA)||r.value<=R.chance)&&!R.hasAttr(xu)){const L=A.isPlayer()?St.PLAYER:St.ENEMY;n.arena.applyTagsForSide(ge.WATER_FIRE_PLEDGE,L,!1,r)}return a||Wn(XI,s,A,null,null,!1,r),r.value}};N(L4,"MoveEffectAttr");let Dt=L4;const N4=class N4 extends NA{constructor(){super(!0)}};N(N4,"MoveHeaderAttr");let eL=N4;const T4=class T4 extends eL{constructor(A){super(),this.message=A}apply(A,s,R,a){const i=typeof this.message=="string"?this.message:this.message(A,R);return i?(n.queueMessage(i),!0):!1}};N(T4,"MessageHeaderAttr");let yH=T4;const S4=class S4 extends eL{constructor(A){super(),this.tagType=A}apply(A,s,R,a){return A.addTag(this.tagType),!0}};N(S4,"AddBattlerTagHeaderAttr");let Pu=S4;const o4=class o4 extends Pu{constructor(){super(y.BEAK_BLAST_CHARGING),this.chargeAnim=AI.BEAK_BLAST_CHARGING}};N(o4,"BeakBlastHeaderAttr");let tL=o4;const l4=class l4 extends NA{constructor(A){super(),this.message=A}apply(A,s,R,a){const i=typeof this.message=="string"?this.message:this.message(A,s,R);return i?(n.queueMessage(i,500),!0):!1}};N(l4,"PreMoveMessageAttr");let ya=l4;const C4=class C4 extends NA{};N(C4,"RespectAttackTypeImmunityAttr");let Gu=C4;const U4=class U4 extends NA{apply(A,s,R,a){return a[0].value=!0,!0}};N(U4,"IgnoreOpponentStatStagesAttr");let Ja=U4;const u4=class u4 extends NA{apply(A,s,R,a){return a[0].value++,!0}getUserBenefitScore(A,s,R){return 3}};N(u4,"HighCritAttr");let jA=u4;const D4=class D4 extends NA{apply(A,s,R,a){return a[0].value=!0,!0}getUserBenefitScore(A,s,R){return 5}};N(D4,"CritOnlyAttr");let ln=D4;const M4=class M4 extends NA{constructor(A){super(),this.damage=A}apply(A,s,R,a){return a[0].value=this.getDamage(A,s,R),!0}getDamage(A,s,R){return this.damage}};N(M4,"FixedDamageAttr");let HO=M4;const _4=class _4 extends HO{constructor(){super(0)}apply(A,s,R,a){return a[0].value=A.hp,!0}};N(_4,"UserHpDamageAttr");let wH=_4;const P4=class P4 extends HO{constructor(){super(0)}apply(A,s,R,a){var r;const i=((r=A.getHeldItems().find(L=>L instanceof RI))==null?void 0:r.getStackCount())??0;if(i<=0)return a[0].value=yt(s.hp/2),!0;switch(A.turnData.hitCount-A.turnData.hitsLeft){case 0:this.initialHp=s.hp;default:return a[0].value=yt(this.initialHp/2),!0;case i+1:return a[0].value=yt(s.hp/2),!0}}getTargetBenefitScore(A,s,R){return s.getHpRatio()>.5?Math.floor((s.getHpRatio()-.5)*-24+4):-20}};N(P4,"TargetHalfHpDamageAttr");let tN=P4;const G4=class G4 extends HO{constructor(){super(0)}apply(A,s,R,a){return a[0].value=s.hp-A.hp,!0}getCondition(){return(A,s,R)=>A.hp<=s.hp}};N(G4,"MatchHpAttr");let vH=G4;const c4=class c4 extends HO{constructor(A,s){super(0),this.moveFilter=A,this.multiplier=s}apply(A,s,R,a){const i=A.turnData.attacksReceived.filter(r=>this.moveFilter(we[r.move])).reduce((r,L)=>r+L.damage,0);return a[0].value=yt(i*this.multiplier),!0}getCondition(){return(A,s,R)=>!!A.turnData.attacksReceived.filter(a=>this.moveFilter(we[a.move])).length}};N(c4,"CounterDamageAttr");let wa=c4;const h4=class h4 extends HO{constructor(){super(0)}getDamage(A,s,R){return A.level}};N(h4,"LevelDamageAttr");let cu=h4;const H4=class H4 extends HO{constructor(){super(0)}getDamage(A,s,R){return yt(A.level*(A.randSeedIntRange(50,150)*.01))}};N(H4,"RandomLevelDamageAttr");let VH=H4;const d4=class d4 extends NA{apply(A,s,R,a){const i=a[0];return i.value=this.getModifiedDamage(A,s,R,i.value),!0}getModifiedDamage(A,s,R,a){return a}};N(d4,"ModifiedDamageAttr");let hu=d4;const f4=class f4 extends hu{getModifiedDamage(A,s,R,a){return Math.min(a,s.hp-1)}getCondition(){return(A,s,R)=>s.hp>1}getUserBenefitScore(A,s,R){return s.hp>1?0:-20}};N(f4,"SurviveDamageAttr");let Hu=f4;const B4=class B4 extends Dt{constructor(A=!1,s=.25,R=!1){super(!0,{lastHitOnly:!0}),this.useHp=A,this.damageRatio=s,this.unblockable=R}apply(A,s,R,a){var l;if(!super.apply(A,s,R,a))return!1;const i=new Lt(!1);if(this.unblockable||(ut(sU,A,i),ut(ME,A,i)),i.value||this.useHp&&[oA.FAIL,oA.MISS].includes(((l=A.getLastXMoves(1)[0])==null?void 0:l.result)??oA.FAIL))return!1;const r=(this.useHp?A.getMaxHp():A.turnData.totalDamageDealt)*this.damageRatio,L=A.turnData.totalDamageDealt?1:0,o=yt(r,L);return!o||i.value?!1:(A.damageAndUpdate(o,vt.OTHER,!1,!0,!0),n.queueMessage(u.t("moveTriggers:hitWithRecoil",{pokemonName:te(A)})),A.turnData.damageTaken+=o,!0)}getUserBenefitScore(A,s,R){return Math.floor(R.power/5/-4)}};N(B4,"RecoilAttr");let $s=B4;const g4=class g4 extends Dt{constructor(){super(!0,{trigger:3})}apply(A,s,R,a){return A.damageAndUpdate(A.hp,vt.OTHER,!1,!0,!0),A.turnData.damageTaken+=A.hp,!0}getUserBenefitScore(A,s,R){return A.isBoss()?-20:Math.ceil(((1-A.getHpRatio())*10-10)*(s.getAttackTypeEffectiveness(R.type,A)-.5))}};N(g4,"SacrificialAttr");let Qn=g4;const K4=class K4 extends Dt{constructor(){super(!0,{trigger:2})}apply(A,s,R,a){return super.apply(A,s,R,a)?(A.damageAndUpdate(A.hp,vt.OTHER,!1,!0,!0),A.turnData.damageTaken+=A.hp,!0):!1}getUserBenefitScore(A,s,R){return A.isBoss()?-20:Math.ceil(((1-A.getHpRatio())*10-10)*(s.getAttackTypeEffectiveness(R.type,A)-.5))}};N(K4,"SacrificialAttrOnHit");let oi=K4;const m4=class m4 extends Dt{constructor(){super(!0,{trigger:3})}apply(A,s,R,a){if(!super.apply(A,s,R,a))return!1;const i=new Lt(!1);return ut(ME,A,i),i.value||(A.damageAndUpdate(yt(A.getMaxHp()/2),vt.OTHER,!1,!0,!0),n.queueMessage(u.t("moveTriggers:cutHpPowerUpMove",{pokemonName:te(A)}))),!0}getUserBenefitScore(A,s,R){return A.isBoss()?-10:Math.ceil(((1-A.getHpRatio()/2)*10-10)*(s.getAttackTypeEffectiveness(R.type,A)-.5))}};N(m4,"HalfSacrificialAttr");let du=m4;const F4=class F4 extends Dt{constructor(A=.25){super(!0),this.hpCost=A}apply(A,s,R,a){return super.apply(A,s,R,a)?(A.damageAndUpdate(Math.floor(A.getMaxHp()*this.hpCost),vt.OTHER,!1,!0,!0),A.addTag(y.SUBSTITUTE,0,R.id,A.id),!0):!1}getUserBenefitScore(A,s,R){return A.isBoss()?-10:5}getCondition(){return(A,s,R)=>!A.getTag(mE)&&A.hp>Math.floor(A.getMaxHp()*this.hpCost)&&A.getMaxHp()>1}getFailedText(A,s,R,a){return A.getTag(mE)?u.t("moveTriggers:substituteOnOverlap",{pokemonName:te(A)}):A.hp<=Math.floor(A.getMaxHp()/4)||A.getMaxHp()===1?u.t("moveTriggers:substituteNotEnoughHp"):u.t("battle:attackFailed")}};N(F4,"AddSubstituteAttr");let fu=F4;const p4=class p4 extends Dt{constructor(A,s,R){super(R===void 0||R),this.healRatio=A||1,this.showAnim=!!s}apply(A,s,R,a){return this.addHealPhase(this.selfTarget?A:s,this.healRatio),!0}addHealPhase(A,s){n.unshiftPhase(new FE(A.getBattlerIndex(),yt(A.getMaxHp()*s),u.t("moveTriggers:healHp",{pokemonName:te(A)}),!0,!this.showAnim))}getTargetBenefitScore(A,s,R){const a=(1-(this.selfTarget?A:s).getHpRatio())*20-this.healRatio*10;return Math.round(a/(1-this.healRatio/2))}};N(p4,"HealAttr");let us=p4;const W4=class W4 extends Dt{constructor(A,s){super(),this.message=A,this.abilityCondition=s}canApply(A,s,R,a){return!!(this.selfTarget&&A.hp&&!A.getTag(y.FRENZY)||!this.selfTarget&&(!s.getTag(y.PROTECTED)||R.hasFlag(2)))}apply(A,s,R,a){return this.canApply(A,s,R,a)?((A.isPlayer()?n.getPlayerParty():n.getEnemyParty()).forEach(r=>this.cureStatus(r,A.id)),this.message&&n.queueMessage(this.message),!0):!1}cureStatus(A,s){var R;!A.isOnField()||A.id===s?(A.resetStatus(!1),A.updateInfo()):A.hasAbility(this.abilityCondition)?n.unshiftPhase(new jn(A.id,((R=A.getPassiveAbility())==null?void 0:R.id)===this.abilityCondition)):(A.resetStatus(),A.updateInfo())}};N(W4,"PartyStatusCureAttr");let AN=W4;const Y4=class Y4 extends Dt{apply(A,s,R,a){const i=s.getAlly(),r=new Lt(!1);return i&&ut(ME,i,r),r.value||!i||i.switchOutStatus?!1:(i.damageAndUpdate(Math.max(1,Math.floor(1/16*i.getMaxHp())),vt.OTHER),!0)}getTargetBenefitScore(A,s,R){return s.getAlly()?-5:0}};N(Y4,"FlameBurstAttr");let xH=Y4;const y4=class y4 extends Qn{constructor(A,s){super(),this.restorePP=A,this.moveMessage=s}apply(A,s,R,a){if(!super.apply(A,s,R,a))return!1;const i=n.getPlayerParty().map(r=>r.getMaxHp()).reduce((r,L)=>Math.max(L,r),0);return n.pushPhase(new FE(A.getBattlerIndex(),i,u.t(this.moveMessage,{pokemonName:te(A)}),!0,!1,!1,!0,!1,this.restorePP),!0),!0}getUserBenefitScore(A,s,R){return-20}getCondition(){return(A,s,R)=>n.getPlayerParty().filter(a=>a.isActive()).length>n.currentBattle.getBattlerCount()}};N(y4,"SacrificialFullRestoreAttr");let Bu=y4;const w4=class w4 extends NA{constructor(A){super(),this.weather=A}apply(A,s,R,a){var r;const i=a[0];return((r=n.arena.weather)==null?void 0:r.weatherType)===this.weather&&(i.value=Math.max(i.value,1)),!0}};N(w4,"IgnoreWeatherTypeDebuffAttr");let gu=w4;const v4=class v4 extends us{constructor(){super(.5)}apply(A,s,R,a){var r,L;let i=.5;if(!((r=n.arena.weather)!=null&&r.isEffectSuppressed())){const o=((L=n.arena.weather)==null?void 0:L.weatherType)||Oe.NONE;i=this.getWeatherHealRatio(o)}return this.addHealPhase(A,i),!0}};N(v4,"WeatherHealAttr");let Ku=v4;const V4=class V4 extends Ku{getWeatherHealRatio(A){switch(A){case Oe.SUNNY:case Oe.HARSH_SUN:return 2/3;case Oe.RAIN:case Oe.SANDSTORM:case Oe.HAIL:case Oe.SNOW:case Oe.HEAVY_RAIN:return .25;default:return .5}}};N(V4,"PlantHealAttr");let EN=V4;const x4=class x4 extends Ku{getWeatherHealRatio(A){switch(A){case Oe.SANDSTORM:return 2/3;default:return .5}}};N(x4,"SandHealAttr");let bH=x4;const b4=class b4 extends us{constructor(A,s,R,a,i){super(A,R,a),this.normalHealRatio=A,this.boostedHealRatio=s,this.condition=i}apply(A,s,R,a){const i=this.condition&&this.condition(A,s,R)?this.boostedHealRatio:this.normalHealRatio;return this.addHealPhase(s,i),!0}};N(b4,"BoostHealAttr");let kH=b4;const k4=class k4 extends us{apply(A,s,R,a){return A.getAlly()===s?(super.apply(A,s,R,a),!0):!1}};N(k4,"HealOnAllyAttr");let mu=k4;const Z4=class Z4 extends Dt{constructor(A,s){super(!0,{trigger:2}),this.healRatio=A??.5,this.healStat=s??null}apply(A,s,R,a){let i=0,r="";const L=s.hasAbilityWithAttr(_S,!1);return this.healStat!==null?(i=s.getEffectiveStat(this.healStat),r=u.t("battle:drainMessage",{pokemonName:te(s)})):(i=yt(A.turnData.singleHitDamageDealt*this.healRatio),r=u.t("battle:regainHealth",{pokemonName:te(A)})),L&&(A.hasAbilityWithAttr(ME)?(i=0,r=""):(A.turnData.damageTaken+=i,i=i*-1,r="")),n.unshiftPhase(new FE(A.getBattlerIndex(),i,r,!1,!0)),!0}getUserBenefitScore(A,s,R){if(this.healStat){const a=s.getEffectiveStat(this.healStat);return Math.floor(Math.max(0,Math.min(1,(a+A.hp)/A.getMaxHp()-.33))/A.getHpRatio())}return Math.floor(Math.max(1-A.getHpRatio()-.33,0)*(R.power/4))}};N(Z4,"HitHealAttr");let Ys=Z4;const X4=class X4 extends NA{constructor(A,s=1){super(),this.moveIncrementFunc=A,this.increaseAmount=s}apply(A,s,R,a){return this.moveIncrementFunc(A,s,R)?(a[0].value+=this.increaseAmount,!0):!1}};N(X4,"IncrementMovePriorityAttr");let Fu=X4;const Q4=class Q4 extends NA{constructor(A){super(),this.intrinsicMultiHitType=A!==void 0?A:1,this.multiHitType=this.intrinsicMultiHitType}getMultiHitType(){return this.multiHitType}apply(A,s,R,a){const i=new Et(this.intrinsicMultiHitType);return MA(pu,A,s,R,i),this.multiHitType=i.value,a[0].value=this.getHitCount(A,s),!0}getTargetBenefitScore(A,s,R){return-5}getHitCount(A,s){switch(this.multiHitType){case 1:{const a=A.randSeedInt(20),i=new Et(a);return ut(yS,A,null,!1,i),i.value>=13?2:i.value>=6?3:i.value>=3?4:5}case 0:return 2;case 2:return 3;case 3:return 10;case 4:return(A.isPlayer()?n.getPlayerParty():n.getEnemyParty()).reduce((a,i)=>a+(i.id===A.id?1:i!=null&&i.status&&i.status.effect!==ne.NONE?0:1),0)}}};N(Q4,"MultiHitAttr");let TA=Q4;const J4=class J4 extends NA{apply(A,s,R,a){return!1}};N(J4,"ChangeMultiHitTypeAttr");let pu=J4;const $4=class $4 extends pu{apply(A,s,R,a){return A.species.speciesId===e.GRENINJA&&A.hasAbility(O.BATTLE_BOND)&&A.formIndex===2?(a[0].value=2,!0):!1}};N($4,"WaterShurikenMultiHitTypeAttr");let ZH=$4;const z4=class z4 extends Dt{constructor(A,s,R,a=!1){super(s,{trigger:2}),this.overrideStatus=!1,this.effect=A,this.turnsRemaining=R,this.overrideStatus=a}apply(A,s,R,a){if(!this.selfTarget&&R.hitsSubstitute(A,s))return!1;const i=this.getMoveChance(A,s,R,this.selfTarget,!0);if(i<0||i===100||A.randSeedInt(100)<i){const L=this.selfTarget?A:s;if(L.status)if(this.overrideStatus)L.resetStatus();else return!1;if(A!==s&&s.isSafeguarded(A))return R.category===2&&n.queueMessage(u.t("moveTriggers:safeguard",{targetName:te(s)})),!1;if((!L.status||L.status.effect===this.effect&&i<0)&&L.trySetStatus(this.effect,!0,A,this.turnsRemaining))return w8(GU,A,s,R,null,!1,this.effect),!0}return!1}getTargetBenefitScore(A,s,R){const a=this.getMoveChance(A,s,R,this.selfTarget,!1),i=a<0?-10:Math.floor(a*-.1),r=this.selfTarget?A:s;return!r.status&&r.canSetStatus(this.effect,!0,!1,A)?i:0}};N(z4,"StatusEffectAttr");let Ot=z4;const q4=class q4 extends Ot{constructor(A,s,R,a){super(A[0],s,R,a),this.effects=A}apply(A,s,R,a){return this.effect=IE(this.effects),super.apply(A,s,R,a)}getTargetBenefitScore(A,s,R){const a=this.getMoveChance(A,s,R,this.selfTarget,!1),i=a<0?-10:Math.floor(a*-.1),r=this.selfTarget?A:s;return!r.status&&r.canSetStatus(this.effect,!0,!1,A)?i:0}};N(q4,"MultiStatusEffectAttr");let Wu=q4;const j4=class j4 extends Dt{constructor(){super(!1,{trigger:2})}apply(A,s,R,a){var r;const i=((r=A.status)==null?void 0:r.effect)??(A.hasAbility(O.COMATOSE)?ne.SLEEP:void 0);if(s.status)return!1;{const o=s.canSetStatus(i,!0,!1,A)?s.trySetStatus(i,!0,A):!1;return o&&A.status&&A.addTag(y.PSYCHO_SHIFT),o}}getTargetBenefitScore(A,s,R){var a;return!s.status&&s.canSetStatus((a=A.status)==null?void 0:a.effect,!0,!1,A)?-10:0}};N(j4,"PsychoShiftEffectAttr");let XH=j4;const e3=class e3 extends Dt{constructor(A){super(!1,{trigger:2}),this.chance=A}apply(A,s,R,a){return new Promise(i=>{if(R.hitsSubstitute(A,s)||Phaser.Math.RND.realInRange(0,1)>=this.chance)return i(!1);const L=this.getTargetHeldItems(s).filter(o=>o.isTransferable);if(L.length){const o=s.isPlayer()?HE.PLAYER:s.hasTrainer()?HE.TRAINER:HE.WILD,l=L.map(D=>D.type.getOrInferTier(o)).reduce((D,_)=>Math.max(_,D),0),C=L.filter(D=>D.type.getOrInferTier(o)===l),M=C[A.randSeedInt(C.length)];n.tryTransferHeldItemModifier(M,A,!1).then(D=>{D&&n.queueMessage(u.t("moveTriggers:stoleItem",{pokemonName:te(A),targetName:te(s),itemName:M.type.name})),i(D)});return}i(!1)})}getTargetHeldItems(A){return n.findModifiers(s=>s instanceof dt&&s.pokemonId===A.id,A.isPlayer())}getUserBenefitScore(A,s,R){return this.getTargetHeldItems(s).length?5:0}getTargetBenefitScore(A,s,R){return this.getTargetHeldItems(s).length?-5:0}};N(e3,"StealHeldItemChanceAttr");let Yu=e3;const t3=class t3 extends Dt{constructor(A){super(!1,{trigger:2}),this.berriesOnly=A}apply(A,s,R,a){if(!this.berriesOnly&&s.isPlayer()||R.hitsSubstitute(A,s))return!1;const i=new Lt(!1);if(ut(br,s,i),i.value===!0)return!1;let r=this.getTargetHeldItems(s).filter(L=>L.isTransferable);if(this.berriesOnly&&(r=r.filter(L=>L instanceof CE&&L.pokemonId===s.id,s.isPlayer())),r.length){const L=r[A.randSeedInt(r.length)];s.loseHeldItem(L),n.updateModifiers(s.isPlayer()),this.berriesOnly?n.queueMessage(u.t("moveTriggers:incineratedItem",{pokemonName:te(A),targetName:te(s),itemName:L.type.name})):n.queueMessage(u.t("moveTriggers:knockedOffItem",{pokemonName:te(A),targetName:te(s),itemName:L.type.name}))}return!0}getTargetHeldItems(A){return n.findModifiers(s=>s instanceof dt&&s.pokemonId===A.id,A.isPlayer())}getUserBenefitScore(A,s,R){return this.getTargetHeldItems(s).length?5:0}getTargetBenefitScore(A,s,R){return this.getTargetHeldItems(s).length?-5:0}};N(t3,"RemoveHeldItemAttr");let yu=t3;const A3=class A3 extends Dt{constructor(){super(!0,{trigger:2})}apply(A,s,R,a){if(!super.apply(A,s,R,a))return!1;const i=this.getTargetHeldBerries(s);if(i.length<=0)return!1;this.chosenBerry=i[A.randSeedInt(i.length)];const r=new Lt(!1);return n.applyModifiers(Pi,s.isPlayer(),s,r),r.value||this.reduceBerryModifier(s),this.eatBerry(s),!0}getTargetHeldBerries(A){return n.findModifiers(s=>s instanceof CE&&s.pokemonId===A.id,A.isPlayer())}reduceBerryModifier(A){this.chosenBerry&&A.loseHeldItem(this.chosenBerry),n.updateModifiers(A.isPlayer())}eatBerry(A,s){z8(this.chosenBerry.berryType)(A,s),ut(YS,A,new Lt(!1))}};N(A3,"EatBerryAttr");let jS=A3;const E3=class E3 extends jS{constructor(){super()}apply(A,s,R,a){if(R.hitsSubstitute(A,s))return!1;const i=new Lt(!1);if(ut(br,s,i),i.value===!0)return!1;const r=this.getTargetHeldBerries(s);if(r.length<=0)return!1;this.chosenBerry=r[A.randSeedInt(r.length)],on(qR,s,!1);const L=u.t("battle:stealEatBerry",{pokemonName:A.name,targetName:s.name,berryName:this.chosenBerry.type.name});return n.queueMessage(L),this.reduceBerryModifier(s),this.eatBerry(A,s),!0}};N(E3,"StealEatBerryAttr");let wu=E3;const s3=class s3 extends Dt{constructor(A,s){super(A,{lastHitOnly:!0}),this.effects=[s].flat(1)}apply(A,s,R,a){if(!super.apply(A,s,R,a)||!this.selfTarget&&R.hitsSubstitute(A,s))return!1;const i=ta(A,R.id);if(s.hasAbilityWithAttr(XI)&&R.id===t.SPARKLING_ARIA&&i.targets.length===1)return!1;const r=this.selfTarget?A:s;return r.status&&this.effects.includes(r.status.effect)?(n.queueMessage(La(r.status.effect,te(r))),r.resetStatus(),r.updateInfo(),!0):!1}isOfEffect(A){return this.effects.includes(A)}getUserBenefitScore(A,s,R){return A.status?10:0}};N(s3,"HealStatusEffectAttr");let eE=s3;const R3=class R3 extends NA{apply(A,s,R,a){var i;return((i=A.status)==null?void 0:i.effect)===ne.SLEEP?(A.addTag(y.BYPASS_SLEEP,1,R.id,A.id),!0):!1}getUserBenefitScore(A,s,R){return A.status&&A.status.effect===ne.SLEEP?200:-10}};N(R3,"BypassSleepAttr");let eo=R3;const O3=class O3 extends NA{apply(A,s,R,a){return a[0].value=!0,!0}};N(O3,"BypassBurnDamageReductionAttr");let vu=O3;const n3=class n3 extends Dt{constructor(A){super(),this.weatherType=A}apply(A,s,R,a){return n.arena.trySetWeather(this.weatherType,!0)}getCondition(){return(A,s,R)=>!n.arena.weather||n.arena.weather.weatherType!==this.weatherType&&!n.arena.weather.isImmutable()}};N(n3,"WeatherChangeAttr");let Ma=n3;const I3=class I3 extends Dt{constructor(A){super(),this.weatherType=A}apply(A,s,R,a){var i;return((i=n.arena.weather)==null?void 0:i.weatherType)===this.weatherType?n.arena.trySetWeather(Oe.NONE,!0):!1}};N(I3,"ClearWeatherAttr");let QH=I3;const a3=class a3 extends Dt{constructor(A){super(),this.terrainType=A}apply(A,s,R,a){return n.arena.trySetTerrain(this.terrainType,!0,!0)}getCondition(){return(A,s,R)=>!n.arena.terrain||n.arena.terrain.terrainType!==this.terrainType}getUserBenefitScore(A,s,R){return n.arena.terrain?0:6}};N(a3,"TerrainChangeAttr");let _a=a3;const i3=class i3 extends Dt{constructor(){super()}apply(A,s,R,a){return n.arena.trySetTerrain(Tt.NONE,!0,!0)}};N(i3,"ClearTerrainAttr");let zi=i3;const r3=class r3 extends NA{apply(A,s,R,a){return s.isBossImmune()?!1:(a[0].value=!0,!0)}getCondition(){return(A,s,R)=>{const a=new Lt(!1);return ut(gU,s,a),!a.value&&A.level>=s.level}}};N(r3,"OneHitKOAttr");let QO=r3;const L3=class L3 extends NA{constructor(A){super(!0),this.condition=A}apply(A,s,R,a){const i=a[0];return i instanceof Lt&&this.condition(A,R)?(i.value=!0,!0):!1}};N(L3,"InstantChargeAttr");let Vu=L3;const N3=class N3 extends Vu{constructor(A){super((s,R)=>{const a=n.arena.weather;return ve(a==null?void 0:a.weatherType)?!1:!(a!=null&&a.isEffectSuppressed())&&A.includes(a==null?void 0:a.weatherType)})}};N(N3,"WeatherInstantChargeAttr");let sN=N3;const T3=class T3 extends NA{apply(A,s,R,a){return!0}};N(T3,"OverrideMoveEffectAttr");let jI=T3;const S3=class S3 extends jI{constructor(A,s,R){super(),this.tagType=A,this.chargeAnim=s,this.chargeText=R}apply(A,s,R,a){if(!s)return Promise.resolve(!0);const i=s.isPlayer()?St.PLAYER:St.ENEMY;return new Promise(r=>{a.length<2||!a[1]?new zS(this.chargeAnim,R.id,A).play(!1,()=>{a[0].value=!0,n.queueMessage(this.chargeText.replace("{TARGET}",te(s)).replace("{USER}",te(A))),A.pushMoveHistory({move:R.id,targets:[s.getBattlerIndex()],result:oA.OTHER}),n.arena.addTag(this.tagType,3,R.id,A.id,i,!1,s.getBattlerIndex()),r(!0)}):n.ui.showText(u.t("moveTriggers:tookMoveAttack",{pokemonName:te(n.getPokemonById(s.id)??void 0),moveName:R.name}),null,()=>r(!0))})}};N(S3,"DelayedAttackAttr");let EI=S3;const oM=class oM extends jI{constructor(){super(!0)}apply(A,s,R,a){if(A.turnData.combiningPledge)return n.queueMessage(u.t("moveTriggers:combiningPledge")),!1;const i=a[0],r=n.findPhase(L=>L instanceof wA&&L.pokemon.isPlayer()===A.isPlayer());if(r){const L=r.move.getMove();if(L!==R&&L.hasAttr(oM)){[A,r.pokemon].forEach(C=>C.turnData.combiningPledge=R.id),n.queueMessage(u.t("moveTriggers:awaitingPledge",{userPokemonName:te(A),allyPokemonName:te(r.pokemon)}));const o=n.phaseQueue.indexOf(r),l=n.phaseQueue.findIndex(C=>C instanceof wA);return o!==l&&n.prependToPhase(n.phaseQueue.splice(o,1)[0],wA),i.value=!0,!0}}return!1}};N(oM,"AwaitCombinedPledgeAttr");let RN=oM;const o3=class o3 extends Dt{constructor(A,s,R,a){super(R,a),this.stats=A,this.stages=s,this.options=a}get condition(){var A;return((A=this.options)==null?void 0:A.condition)??null}get showMessage(){var A;return((A=this.options)==null?void 0:A.showMessage)??!0}get trigger(){var A;return((A=this.options)==null?void 0:A.trigger)??2}apply(A,s,R,a){if(!super.apply(A,s,R,a)||this.condition&&!this.condition(A,s,R)||!this.selfTarget&&R.hitsSubstitute(A,s))return!1;const i=this.getMoveChance(A,s,R,this.selfTarget,!0);if(i<0||i===100||A.randSeedInt(100)<i){const r=this.getLevels(A);return n.unshiftPhase(new zt((this.selfTarget?A:s).getBattlerIndex(),this.selfTarget,this.stats,r,this.showMessage)),!0}return!1}getLevels(A){return this.stages}getTargetBenefitScore(A,s,R){let a=0;const i=this.getLevels(A);for(const r of this.stats){let L=i;const o=s.getStatStage(r);L>0?L=Math.min(o+L,6)-o:L=Math.max(o+L,-6)-o;let l=!1;switch(r){case K.ATK:this.selfTarget&&(l=!A.getMoveset().find(C=>C instanceof g&&C.category===0));break;case K.DEF:this.selfTarget||(l=!A.getMoveset().find(C=>C instanceof g&&C.category===0));break;case K.SPATK:this.selfTarget&&(l=!A.getMoveset().find(C=>C instanceof g&&C.category===1));break;case K.SPDEF:this.selfTarget||(l=!A.getMoveset().find(C=>C instanceof g&&C.category===1));break}l||(a+=L*4+(L>0?-2:2))}return a}};N(o3,"StatStageChangeAttr");let _e=o3;const l3=class l3 extends Dt{constructor(){super(!1)}apply(A,s,R,a){if(!super.apply(A,s,R,a))return!1;let i;const r=n.arena.getTerrainType();if(r!==Tt.NONE)i=this.determineTerrainEffect(r);else{const L=n.arena.biomeType;i=this.determineBiomeEffect(L)}return i.apply(A,s,R,[])}determineTerrainEffect(A){let s;switch(A){case Tt.ELECTRIC:default:s=new Ot(ne.PARALYSIS,!1);break;case Tt.MISTY:s=new _e([K.SPATK],-1,!1);break;case Tt.GRASSY:s=new Ot(ne.SLEEP,!1);break;case Tt.PSYCHIC:s=new _e([K.SPD],-1,!1);break}return s}determineBiomeEffect(A){let s;switch(A){case T.PLAINS:case T.GRASS:case T.TALL_GRASS:case T.FOREST:case T.JUNGLE:case T.MEADOW:s=new Ot(ne.SLEEP,!1);break;case T.SWAMP:case T.MOUNTAIN:case T.TEMPLE:case T.RUINS:s=new _e([K.SPD],-1,!1);break;case T.ICE_CAVE:case T.SNOWY_FOREST:s=new Ot(ne.FREEZE,!1);break;case T.VOLCANO:s=new Ot(ne.BURN,!1);break;case T.FAIRY_CAVE:s=new _e([K.SPATK],-1,!1);break;case T.DESERT:case T.CONSTRUCTION_SITE:case T.BEACH:case T.ISLAND:case T.BADLANDS:s=new _e([K.ACC],-1,!1);break;case T.SEA:case T.LAKE:case T.SEABED:s=new _e([K.ATK],-1,!1);break;case T.CAVE:case T.WASTELAND:case T.GRAVEYARD:case T.ABYSS:case T.SPACE:s=new Ht(y.FLINCHED,!1,!0);break;case T.END:s=new _e([K.DEF],-1,!1);break;case T.TOWN:case T.METROPOLIS:case T.SLUM:case T.DOJO:case T.FACTORY:case T.LABORATORY:case T.POWER_PLANT:default:s=new Ot(ne.PARALYSIS,!1);break}return s}};N(l3,"SecretPowerAttr");let xu=l3;const C3=class C3 extends NA{constructor(A,s,R,a,i=!0,r=!1){super(),this.stats=A,this.stages=s,this.condition=a,this.showMessage=i}applyPostVictory(A,s,R){if(this.condition&&!this.condition(A,s,R))return;new _e(this.stats,this.stages,this.showMessage).apply(A,s,R)}};N(C3,"PostVictoryStatStageChangeAttr");let bu=C3;const U3=class U3 extends Dt{constructor(){super()}apply(A,s,R,a){const i=dO.filter(r=>s.getStatStage(r)<6);if(i.length>0){const r=[i[A.randSeedInt(i.length)]];return n.unshiftPhase(new zt(s.getBattlerIndex(),this.selfTarget,r,2)),!0}return!1}};N(U3,"AcupressureStatStageChangeAttr");let JH=U3;const u3=class u3 extends _e{constructor(){super([K.ATK,K.SPATK],1,!0)}getLevels(A){var s,R;if(!((s=n.arena.weather)!=null&&s.isEffectSuppressed())){const a=(R=n.arena.weather)==null?void 0:R.weatherType;if(a===Oe.SUNNY||a===Oe.HARSH_SUN)return this.stages+1}return this.stages}};N(u3,"GrowthStatStageChangeAttr");let $H=u3;const D3=class D3 extends _e{constructor(A,s,R,a){super(A,s,!0),this.cutRatio=R,this.messageCallback=a}apply(A,s,R,a){return new Promise(i=>{A.damageAndUpdate(yt(A.getMaxHp()/this.cutRatio),vt.OTHER,!1,!0),A.updateInfo().then(()=>{const r=super.apply(A,s,R,a);this.messageCallback&&this.messageCallback(A),i(r)})})}getCondition(){return(A,s,R)=>A.getHpRatio()>1/this.cutRatio&&this.stats.some(a=>A.getStatStage(a)<6)}};N(D3,"CutHpStatStageBoostAttr");let ON=D3;const M3=class M3 extends Dt{constructor(){super(!0,{trigger:2})}apply(A,s,R,a){const i=A.getTag(Nu);if(!i)return!1;let r=K.ATK;switch(i.tatsugiriFormKey){case"curly":r=K.ATK;break;case"droopy":r=K.DEF;break;case"stretchy":r=K.SPD;break}return n.unshiftPhase(new zt(A.getBattlerIndex(),this.selfTarget,[r],1)),!0}};N(M3,"OrderUpStatBoostAttr");let zH=M3;const _3=class _3 extends Dt{apply(A,s,R,a){if(!super.apply(A,s,R,a))return!1;for(const i of dO)A.setStatStage(i,s.getStatStage(i));return s.getTag(y.CRIT_BOOST)?A.addTag(y.CRIT_BOOST,0,R.id):A.removeTag(y.CRIT_BOOST),s.updateInfo(),A.updateInfo(),n.queueMessage(u.t("moveTriggers:copiedStatChanges",{pokemonName:te(A),targetName:te(s)})),!0}};N(_3,"CopyStatsAttr");let qH=_3;const P3=class P3 extends Dt{apply(A,s,R,a){if(!super.apply(A,s,R,a))return!1;for(const i of dO)s.setStatStage(i,-s.getStatStage(i));return s.updateInfo(),A.updateInfo(),n.queueMessage(u.t("moveTriggers:invertStats",{pokemonName:te(s)})),!0}};N(P3,"InvertStatsAttr");let jH=P3;const G3=class G3 extends Dt{constructor(A){super(),this.targetAllPokemon=A}async apply(A,s,R,a){const i=[];return this.targetAllPokemon?(n.getField(!0).forEach(L=>i.push(this.resetStats(L))),n.queueMessage(u.t("moveTriggers:statEliminated"))):R.hitsSubstitute(A,s)||(i.push(this.resetStats(s)),n.queueMessage(u.t("moveTriggers:resetStats",{pokemonName:te(s)}))),await Promise.all(i),!0}async resetStats(A){for(const s of dO)A.setStatStage(s,0);return A.updateInfo()}};N(G3,"ResetStatsAttr");let nN=G3;const c3=class c3 extends Dt{constructor(A){super(),this.stats=A}apply(A,s,R,a){if(super.apply(A,s,R,a)){for(const i of this.stats){const r=A.getStatStage(i);A.setStatStage(i,s.getStatStage(i)),s.setStatStage(i,r)}return s.updateInfo(),A.updateInfo(),this.stats.length===7?n.queueMessage(u.t("moveTriggers:switchedStatChanges",{pokemonName:te(A)})):this.stats.length===2&&n.queueMessage(u.t("moveTriggers:switchedTwoStatChanges",{pokemonName:te(A),firstStat:u.t(hE(this.stats[0])),secondStat:u.t(hE(this.stats[1]))})),!0}return!1}};N(c3,"SwapStatStagesAttr");let IN=c3;const h3=class h3 extends Dt{apply(A,s,R,a){return new Promise(i=>{if(!super.apply(A,s,R,a))return i(!1);const r=[],L=Math.floor((s.hp+A.hp)/2);if(A.hp<L){const o=A.heal(L-A.hp);o&&n.damageNumberHandler.add(A,o,vt.HEAL)}else if(A.hp>L){const o=A.damage(A.hp-L,!0);o&&n.damageNumberHandler.add(A,o)}if(r.push(A.updateInfo()),s.hp<L){const o=s.heal(L-s.hp);o&&n.damageNumberHandler.add(A,o,vt.HEAL)}else if(s.hp>L){const o=s.damage(s.hp-L,!0);o&&n.damageNumberHandler.add(s,o)}return r.push(s.updateInfo()),Promise.all(r).then(()=>i(!0))})}};N(h3,"HpSplitAttr");let ed=h3;const H3=class H3 extends NA{apply(A,s,R,a){return!1}};N(H3,"VariablePowerAttr");let vA=H3;const d3=class d3 extends vA{apply(A,s,R,a){var l;const i=R.pp,r=(l=A.moveset.find(C=>(C==null?void 0:C.moveId)===R.id))==null?void 0:l.ppUsed;let L=i-r;L<0&&(L=0);const o=a[0];switch(L){case 0:o.value=200;break;case 1:o.value=80;break;case 2:o.value=60;break;case 3:o.value=50;break;default:o.value=40;break}return!0}};N(d3,"LessPPMorePowerAttr");let td=d3;const f3=class f3 extends vA{constructor(A){super(),this.powerMultiplierFunc=A}apply(A,s,R,a){const i=a[0];return i.value*=this.powerMultiplierFunc(A,s,R),!0}};N(f3,"MovePowerMultiplierAttr");let HA=f3;const zJ=N((E,A)=>{const s=E.isPlayer()?n.getPlayerParty():n.getEnemyParty();for(let R=A;R<s.length;R++){const a=s[R];if(!(a.id!==E.id&&(a!=null&&a.status)&&a.status.effect!==ne.NONE))return a.species.getBaseStat(K.ATK)/10+5}return 0},"beatUpFunc"),B3=class B3 extends vA{apply(A,s,R,a){const i=a[0],L=(A.isPlayer()?n.getPlayerParty():n.getEnemyParty()).filter(l=>{var C;return l.id===A.id||!((C=l.status)!=null&&C.effect)}).length,o=(A.turnData.hitCount-A.turnData.hitsLeft)%L;return i.value=zJ(A,o),!0}};N(B3,"BeatUpAttr");let Ad=B3;const qJ=N((E,A,s)=>{let R="";return n.executeWithSeedOffset(()=>{ce(100)<s.chance&&(R=u.t("moveTriggers:goingAllOutForAttack",{pokemonName:te(E)}))},n.currentBattle.turn<<6,n.waveSeed),R},"doublePowerChanceMessageFunc"),g3=class g3 extends vA{apply(A,s,R,a){let i;if(n.executeWithSeedOffset(()=>i=ce(100),n.currentBattle.turn<<6,n.waveSeed),i<R.chance){const r=a[0];return r.value*=2,!0}return!1}};N(g3,"DoublePowerChanceAttr");let Ed=g3;const K3=class K3 extends HA{constructor(A,s,R,...a){super((i,r,L)=>{var M;const o=i.getLastXMoves(A+1).slice(1);let l=0,C;for(;(((M=C=o.shift())==null?void 0:M.move)===L.id||a.length&&a.includes(C==null?void 0:C.move))&&(!s||(C==null?void 0:C.result)===oA.SUCCESS);)if(l<A-1)l++;else if(R)l=0;else break;return this.getMultiplier(l)})}};N(K3,"ConsecutiveUsePowerMultiplierAttr");let ku=K3;const m3=class m3 extends ku{getMultiplier(A){return Math.pow(2,A)}};N(m3,"ConsecutiveUseDoublePowerAttr");let Ur=m3;const F3=class F3 extends ku{getMultiplier(A){return A+1}};N(F3,"ConsecutiveUseMultiBasePowerAttr");let sd=F3;const p3=class p3 extends vA{apply(A,s,R,a){const i=a[0],r=s.getWeight(),L=[10,25,50,100,200];let o=0;for(;r>=L[o]&&++o!==L.length;);return i.value=(o+1)*20,!0}};N(p3,"WeightPowerAttr");let Zu=p3;const W3=class W3 extends vA{apply(A,s,R,a){const i=a[0],r=s.getEffectiveStat(K.SPD)/A.getEffectiveStat(K.SPD),L=[.25,1/3,.5,1,-1],o=[150,120,80,60,40];let l=0;for(;l<L.length-1&&r>L[l]&&++l!==L.length;);return i.value=o[l],!0}};N(W3,"ElectroBallPowerAttr");let Rd=W3;const Y3=class Y3 extends vA{apply(A,s,R,a){const i=a[0],r=A.getEffectiveStat(K.SPD);return r<1?(i.value=1,!0):(i.value=Math.floor(Math.min(150,25*s.getEffectiveStat(K.SPD)/r+1)),!0)}};N(Y3,"GyroBallPowerAttr");let Od=Y3;const y3=class y3 extends vA{apply(A,s,R,a){const i=a[0],r=A.getHpRatio();switch(!0){case r<.0417:i.value=200;break;case r<.1042:i.value=150;break;case r<.2083:i.value=100;break;case r<.3542:i.value=80;break;case r<.6875:i.value=40;break;default:i.value=20;break}return!0}};N(y3,"LowHpPowerAttr");let Xu=y3;const w3=class w3 extends vA{apply(A,s,R,a){const i=a[0],r=A.getWeight(),L=s.getWeight();if(!r||r===0)return!1;const o=L/r*100;switch(!0){case o<20.01:i.value=120;break;case o<25.01:i.value=100;break;case o<33.35:i.value=80;break;case o<50.01:i.value=60;break;default:i.value=40;break}return!0}};N(w3,"CompareWeightPowerAttr");let Qu=w3;const v3=class v3 extends vA{apply(A,s,R,a){return a[0].value=yt(150*A.getHpRatio()),!0}};N(v3,"HpPowerAttr");let aN=v3;const V3=class V3 extends vA{constructor(A){super(),this.maxBasePower=A}apply(A,s,R,a){return a[0].value=yt(this.maxBasePower*s.getHpRatio()),!0}};N(V3,"OpponentHighHpPowerAttr");let iN=V3;const x3=class x3 extends vA{apply(A,s,R,a){return console.log(s.getLastXMoves(1),n.currentBattle.turn),s.getLastXMoves(1).find(i=>i.turn===n.currentBattle.turn)?!1:(a[0].value*=2,!0)}};N(x3,"FirstAttackDoublePowerAttr");let Ju=x3;const b3=class b3 extends vA{apply(A,s,R,a){return A.turnData.attacksReceived.find(i=>i.damage&&i.sourceId===s.id)?(a[0].value*=2,!0):!1}};N(b3,"TurnDamagedDoublePowerAttr");let $u=b3;const jJ=N((E,A,s)=>{let R;return n.executeWithSeedOffset(()=>{const a=[5,15,35,65,75,95],i=ce(100);let r=0;for(;r<a.length&&!(i<a[r]);r++);R=u.t("moveTriggers:magnitudeMessage",{magnitude:r+4})},n.currentBattle.turn<<6,n.waveSeed),R},"magnitudeMessageFunc"),k3=class k3 extends vA{apply(A,s,R,a){const i=a[0],r=[5,15,35,65,75,95],L=[10,30,50,70,90,100,110,150];let o;n.executeWithSeedOffset(()=>o=ce(100),n.currentBattle.turn<<6,n.waveSeed);let l=0;for(;l<r.length&&!(o<r[l]);l++);return i.value=L[l],!0}};N(k3,"MagnitudePowerAttr");let nd=k3;const Z3=class Z3 extends vA{apply(A,s,R,a){var i,r;if(!((i=n.arena.weather)!=null&&i.isEffectSuppressed())){const L=a[0];switch(((r=n.arena.weather)==null?void 0:r.weatherType)||Oe.NONE){case Oe.RAIN:case Oe.SANDSTORM:case Oe.HAIL:case Oe.SNOW:case Oe.HEAVY_RAIN:return L.value*=.5,!0}}return!1}};N(Z3,"AntiSunlightPowerDecreaseAttr");let zu=Z3;const X3=class X3 extends vA{constructor(A){super(),this.invert=!!A}apply(A,s,R,a){const i=a[0],r=Math.floor(Math.min(A instanceof vE?A.friendship:A.species.baseFriendship,255)/2.5);return i.value=Math.max(this.invert?102-r:r,1),!0}};N(X3,"FriendshipPowerAttr");let qi=X3;const Q3=class Q3 extends vA{apply(A,s,R,a){const{hitCount:i,prevHitCount:r}=A.battleData,L=a[0];return this.updateHitReceivedCount(A,i,r),L.value=50+Math.min(A.customPokemonData.hitsRecCount,6)*50,!0}updateHitReceivedCount(A,s,R){A.customPokemonData.hitsRecCount+=s-R,A.battleData.prevHitCount=s}};N(Q3,"RageFistPowerAttr");let Id=Q3;const Z8=N(E=>E.getStatStages().reduce((A,s)=>s&&s>0?A+s:A,0),"countPositiveStatStages"),J3=class J3 extends vA{apply(A,s,R,a){const i=Z8(A);return a[0].value+=i*20,!0}};N(J3,"PositiveStatStagePowerAttr");let qu=J3;const $3=class $3 extends vA{constructor(){super(...arguments),this.PUNISHMENT_MIN_BASE_POWER=60,this.PUNISHMENT_MAX_BASE_POWER=200}apply(A,s,R,a){const i=Z8(s);return a[0].value=Math.min(this.PUNISHMENT_MAX_BASE_POWER,this.PUNISHMENT_MIN_BASE_POWER+i*20),!0}};N($3,"PunishmentPowerAttr");let ad=$3;const z3=class z3 extends vA{apply(A,s,R,a){const i=A.turnData.hitCount===A.turnData.hitsLeft,r=ce(i?100:80);return r<=40?a[0].value=40:40<r&&r<=70?a[0].value=80:70<r&&r<=80?a[0].value=120:80<r&&r<=100&&(A.stopMultiHit(),n.unshiftPhase(new FE(s.getBattlerIndex(),yt(s.getMaxHp()/4),u.t("moveTriggers:regainedHealth",{pokemonName:te(s)}),!0))),!0}};N(z3,"PresentPowerAttr");let id=z3;const q3=class q3 extends vA{apply(A,s,R,a){return A.species.speciesId===e.GRENINJA&&A.hasAbility(O.BATTLE_BOND)&&A.formIndex===2?(a[0].value=20,!0):!1}};N(q3,"WaterShurikenPowerAttr");let rd=q3;const j3=class j3 extends vA{constructor(A){super(),this.multiplier=0,this.multiplier=A}apply(A,s,R,a){const i=A.getTag(Si);if(i&&i.stockpiledCount>0){const r=a[0];return r.value=this.multiplier*i.stockpiledCount,!0}return!1}};N(j3,"SpitUpPowerAttr");let Ld=j3;const e2=class e2 extends us{apply(A,s,R,a){const i=A.getTag(Si);if(i&&i.stockpiledCount>0){const r=i.stockpiledCount;let L;if(r===1?L=.25:r===2?L=.5:L=1,L)return this.addHealPhase(A,L),!0}return!1}};N(e2,"SwallowHealAttr");let Nd=e2;const P6=N(E=>{const A=E.getTag(Si);return!!A&&A.stockpiledCount>0},"hasStockpileStacksCondition"),t2=class t2 extends vA{constructor(A){super(),this.maxHits=A}apply(A,s,R,a){const i=A.turnData.hitCount-Math.max(A.turnData.hitsLeft,0),r=a[0];return r.value=R.power*(1+i%this.maxHits),!0}};N(t2,"MultiHitPowerIncrementAttr");let ju=t2;const A2=class A2 extends vA{constructor(A){super(),this.move=A}apply(A,s,R,a){const i=a[0],r=A.getOpponent(0),L=[];if(r!=null&&r.turnData.acted&&L.push(r),n.currentBattle.double){const o=A.getAlly(),l=r==null?void 0:r.getAlly();o&&o.turnData.acted&&L.push(o),l&&l.turnData.acted&&L.push(l)}L.sort((o,l)=>l.turnData.order-o.turnData.order);for(const o of L){const[l]=o.getLastXMoves(1);if((l==null?void 0:l.result)!==oA.FAIL){if((l==null?void 0:l.result)===oA.SUCCESS&&(l==null?void 0:l.move)===this.move)return i.value*=2,!0;break}}return!1}};N(A2,"LastMoveDoublePowerAttr");let eD=A2;const E2=class E2 extends vA{apply(A,s,R,a){const i=a[0];if(!(i instanceof Et))return!1;const r=A.turnData.combiningPledge;return r&&r!==R.id?(i.value*=150/80,!0):!1}};N(E2,"CombinedPledgePowerAttr");let rN=E2;const s2=class s2 extends NA{apply(A,s,R,a){const i=a[0];if(!(i instanceof Et))return!1;const r=A.turnData.combiningPledge;return r&&r!==R.id?(i.value=1.5,!0):!1}};N(s2,"CombinedPledgeStabBoostAttr");let ur=s2;const R2=class R2 extends vA{apply(A,s,R,a){var r;const i=a[0];return i instanceof Et&&(r=A.turnData)!=null&&r.joinedRound?(i.value*=2,!0):!1}};N(R2,"RoundPowerAttr");let Td=R2;const O2=class O2 extends Dt{constructor(){super(!0,{lastHitOnly:!0})}apply(A,s,R,a){const i=n.findPhase(o=>o instanceof wA&&o.move.moveId===t.ROUND);if(!i)return!1;const r=n.phaseQueue.indexOf(i),L=n.phaseQueue.findIndex(o=>o instanceof wA);return r!==L&&n.prependToPhase(n.phaseQueue.splice(r,1)[0],wA),i.pokemon.turnData.joinedRound=!0,!0}};N(O2,"CueNextRoundAttr");let Sd=O2;const n2=class n2 extends NA{constructor(){super()}apply(A,s,R,a){return!1}};N(n2,"VariableAtkAttr");let li=n2;const I2=class I2 extends li{constructor(){super()}apply(A,s,R,a){return a[0].value=s.getEffectiveStat(K.ATK,s),!0}};N(I2,"TargetAtkUserAtkAttr");let od=I2;const a2=class a2 extends li{constructor(){super()}apply(A,s,R,a){return a[0].value=A.getEffectiveStat(K.DEF,s),!0}};N(a2,"DefAtkAttr");let ld=a2;const i2=class i2 extends NA{constructor(){super()}apply(A,s,R,a){return!1}};N(i2,"VariableDefAttr");let tD=i2;const r2=class r2 extends tD{constructor(){super()}apply(A,s,R,a){return a[0].value=s.getEffectiveStat(K.DEF,A),!0}};N(r2,"DefDefAttr");let LN=r2;const L2=class L2 extends NA{apply(A,s,R,a){return!1}};N(L2,"VariableAccuracyAttr");let sI=L2;const N2=class N2 extends sI{apply(A,s,R,a){var i,r;if(!((i=n.arena.weather)!=null&&i.isEffectSuppressed())){const L=a[0];switch(((r=n.arena.weather)==null?void 0:r.weatherType)||Oe.NONE){case Oe.SUNNY:case Oe.HARSH_SUN:return L.value=50,!0;case Oe.RAIN:case Oe.HEAVY_RAIN:return L.value=-1,!0}}return!1}};N(N2,"ThunderAccuracyAttr");let AD=N2;const T2=class T2 extends sI{apply(A,s,R,a){var i,r;if(!((i=n.arena.weather)!=null&&i.isEffectSuppressed())){const L=a[0];switch(((r=n.arena.weather)==null?void 0:r.weatherType)||Oe.NONE){case Oe.RAIN:case Oe.HEAVY_RAIN:return L.value=-1,!0}}return!1}};N(T2,"StormAccuracyAttr");let NN=T2;const S2=class S2 extends sI{apply(A,s,R,a){if(s.getTag(y.MINIMIZED)){const i=a[0];return i.value=-1,!0}return!1}};N(S2,"AlwaysHitMinimizeAttr");let In=S2;const o2=class o2 extends sI{apply(A,s,R,a){if(A.isOfType(I.POISON)){const i=a[0];return i.value=-1,!0}return!1}};N(o2,"ToxicAccuracyAttr");let ED=o2;const l2=class l2 extends sI{apply(A,s,R,a){var i,r;if(!((i=n.arena.weather)!=null&&i.isEffectSuppressed())){const L=a[0],o=((r=n.arena.weather)==null?void 0:r.weatherType)||Oe.NONE;if(o===Oe.HAIL||o===Oe.SNOW)return L.value=-1,!0}return!1}};N(l2,"BlizzardAccuracyAttr");let Cd=l2;const C2=class C2 extends NA{apply(A,s,R,a){return!1}};N(C2,"VariableMoveCategoryAttr");let ea=C2;const U2=class U2 extends ea{apply(A,s,R,a){const i=a[0];return A.getEffectiveStat(K.ATK,s,R)>A.getEffectiveStat(K.SPATK,s,R)?(i.value=0,!0):!1}};N(U2,"PhotonGeyserCategoryAttr");let sD=U2;const u2=class u2 extends ea{apply(A,s,R,a){const i=a[0];return A.isTerastallized()&&A.getEffectiveStat(K.ATK,s,R)>A.getEffectiveStat(K.SPATK,s,R)?(i.value=0,!0):!1}};N(u2,"TeraMoveCategoryAttr");let RD=u2;const D2=class D2 extends vA{apply(A,s,R,a){const i=a[0];return A.isTerastallized()&&A.getTeraType()===I.STELLAR?(i.value=100,!0):!1}};N(D2,"TeraBlastPowerAttr");let Ud=D2;const M2=class M2 extends ea{apply(A,s,R,a){const i=a[0];return A.getAlly()===s?(i.value=2,!0):!1}};N(M2,"StatusCategoryOnAllyAttr");let OD=M2;const _2=class _2 extends ea{apply(A,s,R,a){const i=a[0],r=s.getBaseDamage(A,R,0,!0,!0),L=s.getBaseDamage(A,R,1,!0,!0);return r>L||r===L&&A.randSeedInt(2)===0?(i.value=0,!0):!1}};N(_2,"ShellSideArmCategoryAttr");let ud=_2;const P2=class P2 extends NA{apply(A,s,R,a){return!1}};N(P2,"VariableMoveTypeAttr");let Ls=P2;const G2=class G2 extends Ls{apply(A,s,R,a){if(A.isTerastallized()&&(A.hasFusionSpecies(e.TERAPAGOS)||A.species.speciesId===e.TERAPAGOS)){const i=a[0];return i.value=I.STELLAR,!0}return!1}};N(G2,"TeraStarstormTypeAttr");let Dd=G2;const c2=class c2 extends Ls{apply(A,s,R,a){var r,L,o;const i=a[0];if(!(i instanceof Et))return!1;if([A.species.speciesId,(r=A.fusionSpecies)==null?void 0:r.speciesId].includes(e.ARCEUS)||[A.species.speciesId,(L=A.fusionSpecies)==null?void 0:L.speciesId].includes(e.SILVALLY)){const l=A.species.speciesId===e.ARCEUS||A.species.speciesId===e.SILVALLY?A.formIndex:(o=A.fusionSpecies)==null?void 0:o.formIndex;return i.value=I[I[l]],!0}return!1}};N(c2,"FormChangeItemTypeAttr");let nD=c2;const h2=class h2 extends Ls{apply(A,s,R,a){var r,L;const i=a[0];if(!(i instanceof Et))return!1;if([A.species.speciesId,(r=A.fusionSpecies)==null?void 0:r.speciesId].includes(e.GENESECT)){switch(A.species.speciesId===e.GENESECT?A.formIndex:(L=A.fusionSpecies)==null?void 0:L.formIndex){case 1:i.value=I.ELECTRIC;break;case 2:i.value=I.FIRE;break;case 3:i.value=I.ICE;break;case 4:i.value=I.WATER;break;default:i.value=I.NORMAL;break}return!0}return!1}};N(h2,"TechnoBlastTypeAttr");let Md=h2;const H2=class H2 extends Ls{apply(A,s,R,a){var r,L;const i=a[0];if(!(i instanceof Et))return!1;if([A.species.speciesId,(r=A.fusionSpecies)==null?void 0:r.speciesId].includes(e.MORPEKO)){switch(A.species.speciesId===e.MORPEKO?A.formIndex:(L=A.fusionSpecies)==null?void 0:L.formIndex){case 1:i.value=I.DARK;break;default:i.value=I.ELECTRIC;break}return!0}return!1}};N(H2,"AuraWheelTypeAttr");let _d=H2;const d2=class d2 extends Ls{apply(A,s,R,a){var r,L;const i=a[0];if(!(i instanceof Et))return!1;if([A.species.speciesId,(r=A.fusionSpecies)==null?void 0:r.speciesId].includes(e.PALDEA_TAUROS)){switch(A.species.speciesId===e.PALDEA_TAUROS?A.formIndex:(L=A.fusionSpecies)==null?void 0:L.formIndex){case 1:i.value=I.FIRE;break;case 2:i.value=I.WATER;break;default:i.value=I.FIGHTING;break}return!0}return!1}};N(d2,"RagingBullTypeAttr");let Pd=d2;const f2=class f2 extends Ls{apply(A,s,R,a){var r,L;const i=a[0];if(!(i instanceof Et))return!1;if([A.species.speciesId,(r=A.fusionSpecies)==null?void 0:r.speciesId].includes(e.OGERPON)){switch(A.species.speciesId===e.OGERPON?A.formIndex:(L=A.fusionSpecies)==null?void 0:L.formIndex){case 1:case 5:i.value=I.WATER;break;case 2:case 6:i.value=I.FIRE;break;case 3:case 7:i.value=I.ROCK;break;case 4:default:i.value=I.GRASS;break}return!0}return!1}};N(f2,"IvyCudgelTypeAttr");let Gd=f2;const B2=class B2 extends Ls{apply(A,s,R,a){var r,L;const i=a[0];if(!(i instanceof Et))return!1;if(!((r=n.arena.weather)!=null&&r.isEffectSuppressed())){switch((L=n.arena.weather)==null?void 0:L.weatherType){case Oe.SUNNY:case Oe.HARSH_SUN:i.value=I.FIRE;break;case Oe.RAIN:case Oe.HEAVY_RAIN:i.value=I.WATER;break;case Oe.SANDSTORM:i.value=I.ROCK;break;case Oe.HAIL:case Oe.SNOW:i.value=I.ICE;break;default:return!1}return!0}return!1}};N(B2,"WeatherBallTypeAttr");let cd=B2;const g2=class g2 extends Ls{apply(A,s,R,a){const i=a[0];if(!(i instanceof Et)||!A.isGrounded())return!1;switch(n.arena.getTerrainType()){case Tt.MISTY:i.value=I.FAIRY;break;case Tt.ELECTRIC:i.value=I.ELECTRIC;break;case Tt.GRASSY:i.value=I.GRASS;break;case Tt.PSYCHIC:i.value=I.PSYCHIC;break;default:return!1}return!0}};N(g2,"TerrainPulseTypeAttr");let hd=g2;const K2=class K2 extends Ls{apply(A,s,R,a){const i=a[0];if(!(i instanceof Et))return!1;const r=Math.floor(((A.ivs[K.HP]&1)+(A.ivs[K.ATK]&1)*2+(A.ivs[K.DEF]&1)*4+(A.ivs[K.SPD]&1)*8+(A.ivs[K.SPATK]&1)*16+(A.ivs[K.SPDEF]&1)*32)*15/63);return i.value=[I.FIGHTING,I.FLYING,I.POISON,I.GROUND,I.ROCK,I.BUG,I.GHOST,I.STEEL,I.FIRE,I.WATER,I.GRASS,I.ELECTRIC,I.PSYCHIC,I.ICE,I.DRAGON,I.DARK][r],!0}};N(K2,"HiddenPowerTypeAttr");let Hd=K2;const m2=class m2 extends Ls{apply(A,s,R,a){const i=a[0];return i instanceof Et&&A.isTerastallized()?(i.value=A.getTeraType(),!0):!1}};N(m2,"TeraBlastTypeAttr");let dd=m2;const F2=class F2 extends Ls{apply(A,s,R,a){const i=a[0];if(!(i instanceof Et))return!1;const r=A.getTypes(!0);if(r.includes(I.STELLAR)){const L=A.getTypes();return i.value=L[0],!0}else return r.length>0?(i.value=r[0],!0):!1}};N(F2,"MatchUserTypeAttr");let fd=F2;const p2=class p2 extends Ls{apply(A,s,R,a){const i=a[0];if(!(i instanceof Et))return!1;const r=A.turnData.combiningPledge;if(!r)return!1;switch(R.id){case t.FIRE_PLEDGE:return r===t.WATER_PLEDGE?(i.value=I.WATER,!0):!1;case t.WATER_PLEDGE:return r===t.GRASS_PLEDGE?(i.value=I.GRASS,!0):!1;case t.GRASS_PLEDGE:return r===t.FIRE_PLEDGE?(i.value=I.FIRE,!0):!1;default:return!1}}};N(p2,"CombinedPledgeTypeAttr");let TN=p2;const W2=class W2 extends NA{apply(A,s,R,a){return!1}};N(W2,"VariableMoveTypeMultiplierAttr");let Ci=W2;const Y2=class Y2 extends Ci{apply(A,s,R,a){if(!s.getTag(y.IGNORE_FLYING)){const i=a[0];return s.isOfType(I.FLYING)&&(i.value=1),!0}return!1}};N(Y2,"NeutralDamageAgainstFlyingTypeMultiplierAttr");let ID=Y2;const y2=class y2 extends Ci{apply(A,s,R,a){const i=a[0];return s.isOfType(I.ICE)?(i.value=0,!0):!1}};N(y2,"IceNoEffectTypeAttr");let Bd=y2;const w2=class w2 extends Ci{apply(A,s,R,a){const i=a[0];return i.value*=s.getAttackTypeEffectiveness(I.FLYING,A),!0}};N(w2,"FlyingTypeMultiplierAttr");let gd=w2;const v2=class v2 extends NA{apply(A,s,R,a){return!1}};N(v2,"VariableMoveTypeChartAttr");let aD=v2;const V2=class V2 extends aD{apply(A,s,R,a){const i=a[0];return a[1]===I.WATER?(i.value=2,!0):!1}};N(V2,"FreezeDryAttr");let Kd=V2;const x2=class x2 extends sI{apply(A,s,R,a){const i=a[0];return A.level<s.level?i.value=0:i.value=Math.min(Math.max(30+100*(1-s.level/A.level),0),100),!0}};N(x2,"OneHitKOAccuracyAttr");let wI=x2;const b2=class b2 extends wI{apply(A,s,R,a){const i=a[0];if(A.level<s.level)i.value=0;else{const r=A.isOfType(I.ICE)?30:20;i.value=Math.min(Math.max(r+100*(1-s.level/A.level),0),100)}return!0}};N(b2,"SheerColdAccuracyAttr");let md=b2;const k2=class k2 extends NA{constructor(A){super(),this.missEffectFunc=A}apply(A,s,R,a){return this.missEffectFunc(A,R),!0}};N(k2,"MissEffectAttr");let LO=k2;const Z2=class Z2 extends NA{constructor(A){super(),this.noEffectFunc=A}apply(A,s,R,a){return this.noEffectFunc(A,R),!0}};N(Z2,"NoEffectAttr");let yO=Z2;const TI=N((E,A)=>{const s=new Lt(!1);return ut(ME,E,s),s.value?!1:(E.damageAndUpdate(yt(E.getMaxHp()/2),vt.OTHER,!1,!0),n.queueMessage(u.t("moveTriggers:keptGoingAndCrashed",{pokemonName:te(E)})),E.turnData.damageTaken+=yt(E.getMaxHp()/2),!0)},"crashDamageFunc"),X2=class X2 extends NA{};N(X2,"TypelessAttr");let to=X2;const Q2=class Q2 extends NA{constructor(A=!1){super(),this.abilitiesOnly=A}};N(Q2,"BypassRedirectAttr");let va=Q2;const J2=class J2 extends Dt{constructor(){super(!0,{trigger:2,lastHitOnly:!0})}canApply(A,s,R,a){return!(this.selfTarget?A:s).isFainted()}apply(A,s,R,a){if(!super.apply(A,s,R,a))return!1;if(!A.getTag(y.FRENZY)&&!A.getMoveQueue().length){const i=A.randSeedIntRange(1,2);new Array(i).fill(null).map(()=>A.getMoveQueue().push({move:R.id,targets:[s.getBattlerIndex()],ignorePP:!0})),A.addTag(y.FRENZY,i,R.id,A.id)}else MA(Ht,A,s,R,a),A.lapseTag(y.FRENZY);return!0}};N(J2,"FrenzyAttr");let ji=J2;const Kn=N((E,A)=>{for(;E.getMoveQueue().length&&E.getMoveQueue()[0].move===A.id;)E.getMoveQueue().shift();return E.removeTag(y.FRENZY),!0},"frenzyMissFunc"),$2=class $2 extends Dt{constructor(A){super(!0),this.tagType=A}apply(A,s,R,a){return super.apply(A,s,R,a)?A.addTag(this.tagType,1,R.id,A.id):!1}};N($2,"SemiInvulnerableAttr");let Yn=$2;const z2=class z2 extends Dt{constructor(A,s=!1,R=!1,a=0,i,r=!1,L=!1){super(s,{lastHitOnly:r}),this.tagType=A,this.turnCountMin=a,this.turnCountMax=i!==void 0?i:a,this.failOnOverlap=!!R,this.cancelOnFail=L}canApply(A,s,R,a){var i;return!(!super.canApply(A,s,R,a)||this.cancelOnFail===!0&&((i=A.getLastXMoves(1)[0])==null?void 0:i.result)===oA.FAIL)}apply(A,s,R,a){if(!super.apply(A,s,R,a))return!1;const i=this.getMoveChance(A,s,R,this.selfTarget,!0);return i<0||i===100||A.randSeedInt(100)<i?(this.selfTarget?A:s).addTag(this.tagType,A.randSeedIntRange(this.turnCountMin,this.turnCountMax),R.id,A.id):!1}getCondition(){return this.failOnOverlap?(A,s,R)=>!(this.selfTarget?A:s).getTag(this.tagType):null}getTagTargetBenefitScore(A,s,R){switch(this.tagType){case y.RECHARGING:case y.PERISH_SONG:return-16;case y.FLINCHED:case y.CONFUSED:case y.INFATUATED:case y.NIGHTMARE:case y.DROWSY:case y.DISABLED:case y.HEAL_BLOCK:case y.RECEIVE_DOUBLE_DAMAGE:return-5;case y.SEEDED:case y.SALT_CURED:case y.CURSED:case y.FRENZY:case y.TRAPPED:case y.BIND:case y.WRAP:case y.FIRE_SPIN:case y.WHIRLPOOL:case y.CLAMP:case y.SAND_TOMB:case y.MAGMA_STORM:case y.SNAP_TRAP:case y.THUNDER_CAGE:case y.INFESTATION:return-3;case y.ENCORE:return-2;case y.MINIMIZED:case y.ALWAYS_GET_HIT:return 0;case y.INGRAIN:case y.IGNORE_ACCURACY:case y.AQUA_RING:return 3;case y.PROTECTED:case y.FLYING:case y.CRIT_BOOST:case y.ALWAYS_CRIT:return 5}}getTargetBenefitScore(A,s,R){let a=this.getMoveChance(A,s,R,this.selfTarget,!1);return a<0&&(a=100),Math.floor(this.getTagTargetBenefitScore(A,s,R)*(a/100))}};N(z2,"AddBattlerTagAttr");let Ht=z2;const q2=class q2 extends Ht{constructor(){super(y.SEEDED)}apply(A,s,R,a){return!R.hitsSubstitute(A,s)&&super.apply(A,s,R,a)}};N(q2,"LeechSeedAttr");let iD=q2;const j2=class j2 extends Dt{constructor(){super(!0)}apply(A,s,R,a){return super.apply(A,s,R,a)&&A.hasAbility(O.GULP_MISSILE)&&A.species.speciesId===e.CRAMORANT?(A.getHpRatio()>=.5?A.addTag(y.GULP_MISSILE_ARROKUDA,0,R.id):A.addTag(y.GULP_MISSILE_PIKACHU,0,R.id),!0):!1}getUserBenefitScore(A,s,R){return A.hasAbility(O.GULP_MISSILE)&&A.species.speciesId===e.CRAMORANT&&!A.getTag(Tu)?10:0}};N(j2,"GulpMissileTagAttr");let rD=j2;const ev=class ev extends Ht{constructor(){super(y.TRAPPED)}apply(A,s,R,a){if(!super.canApply(A,s,R,a)||A.getTag(vR)||s.getTag(vR))return!1;const i=this.getMoveChance(A,s,R,this.selfTarget);return i<0||i===100||A.randSeedInt(100)<i?s.addTag(y.TRAPPED,1,R.id,A.id)&&A.addTag(y.TRAPPED,1,R.id,s.id):!1}};N(ev,"JawLockAttr");let Fd=ev;const tv=class tv extends Dt{apply(A,s,R,a){if(A.getTypes(!0).includes(I.GHOST)){if(s.getTag(y.CURSED))return n.queueMessage(u.t("battle:attackFailed")),!1;const i=Math.max(1,Math.floor(A.getMaxHp()/2));return A.damageAndUpdate(i,vt.OTHER,!1,!0,!0),n.queueMessage(u.t("battlerTags:cursedOnAdd",{pokemonNameWithAffix:te(A),pokemonName:te(s)})),s.addTag(y.CURSED,0,R.id,A.id),!0}else return n.unshiftPhase(new zt(A.getBattlerIndex(),!0,[K.ATK,K.DEF],1)),n.unshiftPhase(new zt(A.getBattlerIndex(),!0,[K.SPD],-1)),!0}};N(tv,"CurseAttr");let pd=tv;const Av=class Av extends Dt{constructor(A,s=!1){super(s),this.tagTypes=A}apply(A,s,R,a){if(!super.apply(A,s,R,a))return!1;for(const i of this.tagTypes)(this.selfTarget?A:s).lapseTag(i);return!0}};N(Av,"LapseBattlerTagAttr");let Wd=Av;const Ev=class Ev extends Dt{constructor(A,s=!1){super(s),this.tagTypes=A}apply(A,s,R,a){if(!super.apply(A,s,R,a))return!1;for(const i of this.tagTypes)(this.selfTarget?A:s).removeTag(i);return!0}};N(Ev,"RemoveBattlerTagAttr");let yn=Ev;const sv=class sv extends Ht{constructor(){super(y.FLINCHED,!1)}apply(A,s,R,a){return R.hitsSubstitute(A,s)?!1:super.apply(A,s,R,a)}};N(sv,"FlinchAttr");let rA=sv;const Rv=class Rv extends Ht{constructor(A){super(y.CONFUSED,A,!1,2,5)}apply(A,s,R,a){return!this.selfTarget&&s.isSafeguarded(A)?(R.category===2&&n.queueMessage(u.t("moveTriggers:safeguard",{targetName:te(s)})),!1):R.hitsSubstitute(A,s)?!1:super.apply(A,s,R,a)}};N(Rv,"ConfuseAttr");let ZE=Rv;const Ov=class Ov extends Ht{constructor(){super(y.RECHARGING,!0,!1,1,1,!0,!0)}};N(Ov,"RechargeAttr");let QR=Ov;const nv=class nv extends Ht{constructor(A){super(A,!1,!1,4,5)}};N(nv,"TrapAttr");let iO=nv;const lM=class lM extends Ht{constructor(A=y.PROTECTED){super(A,!0)}getCondition(){return(A,s,R)=>{let a=0;const i=A.getLastXMoves();let r;for(;i.length&&(r=i.shift(),!(!we[r==null?void 0:r.move].hasAttr(lM)||(r==null?void 0:r.result)!==oA.SUCCESS));)a++;return a?!A.randSeedInt(Math.pow(3,a)):!0}}};N(lM,"ProtectAttr");let JR=lM;const Iv=class Iv extends Ht{constructor(){super(y.IGNORE_ACCURACY,!0,!1,2)}apply(A,s,R,a){return super.apply(A,s,R,a)?(n.queueMessage(u.t("moveTriggers:tookAimAtTarget",{pokemonName:te(A),targetName:te(s)})),!0):!1}};N(Iv,"IgnoreAccuracyAttr");let LD=Iv;const av=class av extends Ht{constructor(){super(y.PERISH_SONG,!1,!0,4)}apply(A,s,R,a){return super.apply(A,s,R,a)?(n.queueMessage(u.t("moveTriggers:faintCountdown",{pokemonName:te(s),turnCount:this.turnCountMin-1})),!0):!1}};N(av,"FaintCountdownAttr");let Yd=av;const iv=class iv extends Dt{constructor(){super(!0)}apply(A,s,R,a){return super.apply(A,s,R,a)?(n.getField(!0).forEach(i=>i.findAndRemoveTags(r=>r.tagType===y.SUBSTITUTE)),!0):!1}};N(iv,"RemoveAllSubstitutesAttr");let yd=iv;const rv=class rv extends NA{constructor(A,s=!1){super(),this.tagType=A,this.doubleDamage=!!s}getTargetBenefitScore(A,s,R){return s.getTag(this.tagType)?this.doubleDamage?10:5:0}};N(rv,"HitsTagAttr");let FR=rv;const Lv=class Lv extends FR{constructor(A){super(A,!0)}};N(Lv,"HitsTagForDoubleDamageAttr");let iR=Lv;const Nv=class Nv extends Dt{constructor(A,s,R=!1,a=!1){super(!0),this.tagType=A,this.turnCount=s,this.failOnOverlap=R,this.selfSideTarget=a}apply(A,s,R,a){var i;if(!super.apply(A,s,R,a))return!1;if((R.chance<0||R.chance===100||A.randSeedInt(100)<R.chance)&&((i=A.getLastXMoves(1)[0])==null?void 0:i.result)===oA.SUCCESS){const r=(this.selfSideTarget?A:s).isPlayer()?St.PLAYER:St.ENEMY;return n.arena.addTag(this.tagType,this.turnCount,R.id,A.id,r),!0}return!1}getCondition(){return this.failOnOverlap?(A,s,R)=>!n.arena.getTagOnSide(this.tagType,s.isPlayer()?St.PLAYER:St.ENEMY):null}};N(Nv,"AddArenaTagAttr");let tE=Nv;const Tv=class Tv extends Dt{constructor(A,s){super(!0),this.tagTypes=A,this.selfSideTarget=s}apply(A,s,R,a){if(!super.apply(A,s,R,a))return!1;const i=(this.selfSideTarget?A:s).isPlayer()?St.PLAYER:St.ENEMY;for(const r of this.tagTypes)n.arena.removeTagOnSide(r,i);return!0}};N(Tv,"RemoveArenaTagsAttr");let ND=Tv;const Sv=class Sv extends tE{getCondition(){return(A,s,R)=>{const a=(this.selfSideTarget?A:s).isPlayer()?St.PLAYER:St.ENEMY,i=n.arena.getTagOnSide(this.tagType,a);return i?i.layers<i.maxLayers:!0}}};N(Sv,"AddArenaTrapTagAttr");let er=Sv;const ov=class ov extends tE{apply(A,s,R,a){var o;const i=this.getMoveChance(A,s,R,this.selfTarget,!0),r=(this.selfSideTarget?A:s).isPlayer()?St.PLAYER:St.ENEMY,L=n.arena.getTagOnSide(this.tagType,r);return(i<0||i===100||A.randSeedInt(100)<i)&&((o=A.getLastXMoves(1)[0])==null?void 0:o.result)===oA.SUCCESS?(n.arena.addTag(this.tagType,0,R.id,A.id,r),L?L.layers<L.maxLayers:!0):!1}};N(ov,"AddArenaTrapTagHitAttr");let TD=ov;const lv=class lv extends Dt{constructor(A=!1){super(!0,{trigger:0}),this.targetBothSides=A}apply(A,s,R,a){return super.apply(A,s,R,a)?(this.targetBothSides?(n.arena.removeTagOnSide(ge.SPIKES,St.PLAYER),n.arena.removeTagOnSide(ge.TOXIC_SPIKES,St.PLAYER),n.arena.removeTagOnSide(ge.STEALTH_ROCK,St.PLAYER),n.arena.removeTagOnSide(ge.STICKY_WEB,St.PLAYER),n.arena.removeTagOnSide(ge.SPIKES,St.ENEMY),n.arena.removeTagOnSide(ge.TOXIC_SPIKES,St.ENEMY),n.arena.removeTagOnSide(ge.STEALTH_ROCK,St.ENEMY),n.arena.removeTagOnSide(ge.STICKY_WEB,St.ENEMY)):(n.arena.removeTagOnSide(ge.SPIKES,s.isPlayer()?St.ENEMY:St.PLAYER),n.arena.removeTagOnSide(ge.TOXIC_SPIKES,s.isPlayer()?St.ENEMY:St.PLAYER),n.arena.removeTagOnSide(ge.STEALTH_ROCK,s.isPlayer()?St.ENEMY:St.PLAYER),n.arena.removeTagOnSide(ge.STICKY_WEB,s.isPlayer()?St.ENEMY:St.PLAYER)),!0):!1}};N(lv,"RemoveArenaTrapAttr");let tr=lv;const Cv=class Cv extends Dt{constructor(A=!1){super(!0,{trigger:0}),this.targetBothSides=A}apply(A,s,R,a){return super.apply(A,s,R,a)?(this.targetBothSides?(n.arena.removeTagOnSide(ge.REFLECT,St.PLAYER),n.arena.removeTagOnSide(ge.LIGHT_SCREEN,St.PLAYER),n.arena.removeTagOnSide(ge.AURORA_VEIL,St.PLAYER),n.arena.removeTagOnSide(ge.REFLECT,St.ENEMY),n.arena.removeTagOnSide(ge.LIGHT_SCREEN,St.ENEMY),n.arena.removeTagOnSide(ge.AURORA_VEIL,St.ENEMY)):(n.arena.removeTagOnSide(ge.REFLECT,s.isPlayer()?St.PLAYER:St.ENEMY),n.arena.removeTagOnSide(ge.LIGHT_SCREEN,s.isPlayer()?St.PLAYER:St.ENEMY),n.arena.removeTagOnSide(ge.AURORA_VEIL,s.isPlayer()?St.PLAYER:St.ENEMY)),!0):!1}};N(Cv,"RemoveScreensAttr");let Ar=Cv;const Uv=class Uv extends Dt{constructor(A){super(!0),this.SwapTags=A}apply(A,s,R,a){if(!super.apply(A,s,R,a))return!1;const i=n.arena.findTagsOnSide(L=>this.SwapTags.includes(L.tagType),St.PLAYER),r=n.arena.findTagsOnSide(L=>this.SwapTags.includes(L.tagType),St.ENEMY);if(i)for(const L of i)n.arena.removeTagOnSide(L.tagType,St.PLAYER,!0),n.arena.addTag(L.tagType,L.turnCount,L.sourceMove,L.sourceId,St.ENEMY,!0);if(r)for(const L of r)n.arena.removeTagOnSide(L.tagType,St.ENEMY,!0),n.arena.addTag(L.tagType,L.turnCount,L.sourceMove,L.sourceId,St.PLAYER,!0);return n.queueMessage(u.t("moveTriggers:swapArenaTags",{pokemonName:te(A)})),!0}};N(Uv,"SwapArenaTagsAttr");let wd=Uv;const uv=class uv extends tE{constructor(A,s,R=!1){super(A,4,!1,R),this.requiredPledge=s}apply(A,s,R,a){var i;return((i=A.getLastXMoves(1)[0])==null?void 0:i.result)!==oA.SUCCESS?!1:A.turnData.combiningPledge===this.requiredPledge?super.apply(A,s,R,a):!1}};N(uv,"AddPledgeEffectAttr");let GI=uv;const Dv=class Dv extends Dt{constructor(A){super(!0)}apply(A,s,R,a){return new Promise(i=>{if(A instanceof vE&&n.getPlayerParty().findIndex(r=>r.isFainted())>-1)A.revivalBlessing().then(()=>{i(!0)});else if(A instanceof xs&&A.hasTrainer()&&n.getEnemyParty().findIndex(r=>r.isFainted()&&!r.isBoss())>-1){const r=n.getEnemyParty().filter(l=>l.isFainted()&&!l.isBoss()),L=r[A.randSeedInt(r.length)],o=n.getEnemyParty().findIndex(l=>L.id===l.id);if(L.resetStatus(),L.heal(Math.min(yt(.5*L.getMaxHp()),L.getMaxHp())),n.queueMessage(u.t("moveTriggers:revivalBlessing",{pokemonName:te(L)}),0,!0),n.currentBattle.double&&n.getEnemyParty().length>1){const l=A.getAlly();o<=1?n.unshiftPhase(new uR(iA.SWITCH,L.getFieldIndex(),o,!1,!1)):l.isFainted()&&n.unshiftPhase(new uR(iA.SWITCH,l.getFieldIndex(),o,!1,!1))}i(!0)}else n.queueMessage(u.t("battle:attackFailed")),i(!1)})}getUserBenefitScore(A,s,R){return A.hasTrainer()&&n.getEnemyParty().findIndex(a=>a.isFainted()&&!a.isBoss())>-1?20:-20}};N(Dv,"RevivalBlessingAttr");let vd=Dv;const Mv=class Mv extends Dt{constructor(A=!1,s=iA.SWITCH){super(!1,{lastHitOnly:!0}),this.selfSwitch=A,this.switchType=s}isBatonPass(){return this.switchType===iA.BATON_PASS}apply(A,s,R,a){var r;if(!this.getSwitchOutCondition()(A,s,R))return!1;const i=this.selfSwitch?A:s;if(i.lapseTag(y.COMMANDED),i instanceof vE){if(s.getAbility().hasAttr(Ti)&&[t.U_TURN,t.VOLT_SWITCH,t.FLIP_TURN].includes(R.id)&&this.hpDroppedBelowHalf(s))return!1;const L=[];if(n.getPlayerParty().forEach((o,l)=>{o.isAllowedInBattle()&&!o.isOnField()&&L.push(l)}),L.length<1)return!1;if(i.hp>0)if(this.switchType===iA.FORCE_SWITCH){i.leaveField(!0);const o=L[A.randSeedInt(L.length)];n.prependToPhase(new uR(this.switchType,i.getFieldIndex(),o,!1,!0),SO)}else return i.leaveField(this.switchType===iA.SWITCH),n.prependToPhase(new xI(this.switchType,i.getFieldIndex(),!0,!0),SO),!0;return!1}else if(n.currentBattle.battleType!==Ut.WILD){const L=[];if(n.getEnemyParty().forEach((o,l)=>{o.isAllowedInBattle()&&!o.isOnField()&&L.push(l)}),L.length<1)return!1;if(i.hp>0)if(this.switchType===iA.FORCE_SWITCH){i.leaveField(!0);const o=L[A.randSeedInt(L.length)];n.prependToPhase(new uR(this.switchType,i.getFieldIndex(),o,!1,!1),SO)}else i.leaveField(this.switchType===iA.SWITCH),n.prependToPhase(new uR(this.switchType,i.getFieldIndex(),n.currentBattle.trainer?n.currentBattle.trainer.getNextSummonIndex(i.trainerSlot):0,!1,!1),SO)}else{if(s.getAbility().hasAttr(Ti)&&[t.U_TURN,t.VOLT_SWITCH,t.FLIP_TURN].includes(R.id)&&this.hpDroppedBelowHalf(s)||n.currentBattle.waveIndex%10===0||this.selfSwitch&&!A.isPlayer()&&R.category!==2)return!1;if(i.hp>0&&(i.leaveField(!1),n.queueMessage(u.t("moveTriggers:fled",{pokemonName:te(i)}),null,!0,500),n.currentBattle.double)){const L=i.getAlly();n.redirectPokemonMoves(i,L)}(r=i.getAlly())!=null&&r.isActive(!0)||(n.clearEnemyHeldItemModifiers(),i.hp&&(n.pushPhase(new bI(!1)),n.pushPhase(new si)))}return!0}getCondition(){return(A,s,R)=>R.category!==2||this.getSwitchOutCondition()(A,s,R)}getFailedText(A,s,R,a){const i=new Lt(!1);return ut($I,s,i),i.value?u.t("moveTriggers:cannotBeSwitchedOut",{pokemonName:te(s)}):null}getSwitchOutCondition(){return(A,s,R)=>{var L,o;const a=this.selfSwitch?A:s,i=a instanceof vE;if(!this.selfSwitch){if(R.hitsSubstitute(A,s))return!1;const l=a.getTag(y.COMMANDED);if((L=l==null?void 0:l.getSourcePokemon())!=null&&L.isActive(!0)||!i&&n.currentBattle.isBattleMysteryEncounter()&&!((o=n.currentBattle.mysteryEncounter)!=null&&o.fleeAllowed))return!1;const C=new Lt(!1);return ut($I,s,C),!C.value}if(!i&&n.currentBattle.battleType===Ut.WILD&&(this.isBatonPass()||n.currentBattle.waveIndex%10===0))return!1;const r=i?n.getPlayerParty():n.getEnemyParty();return!i&&!n.currentBattle.battleType||r.filter(l=>l.isAllowedInBattle()&&(i||l.trainerSlot===a.trainerSlot)).length>n.currentBattle.getBattlerCount()}}getUserBenefitScore(A,s,R){if(!n.getEnemyParty().find(i=>i.isActive()&&!i.isOnField()))return-20;let a=this.selfSwitch?Math.floor((1-A.getHpRatio())*20):super.getUserBenefitScore(A,s,R);if(this.selfSwitch&&this.isBatonPass()){const i=A.getStatStages().reduce((r,L)=>L+=r,0);a=a/2+Phaser.Tweens.Builders.GetEaseFunction("Sine.easeOut")(Math.min(Math.abs(i),10)/10)*(i>=0?10:-10)}return a}hpDroppedBelowHalf(A){const s=A.hp,R=A.getMaxHp(),a=A.turnData.damageTaken;return s+a>=R/2&&s<R/2}};N(Mv,"ForceSwitchOutAttr");let zs=Mv;const _v=class _v extends zs{apply(A,s,R,a){return n.arena.trySetWeather(Oe.SNOW,!0),super.apply(A,s,R,a)}getCondition(){return(A,s,R)=>{var a;return((a=n.arena.weather)==null?void 0:a.weatherType)!==Oe.SNOW||super.getSwitchOutCondition()(A,s,R)}}};N(_v,"ChillyReceptionAttr");let Vd=_v;const Pv=class Pv extends Dt{constructor(A,s){super(!0,{trigger:3}),this.removedType=A,this.messageCallback=s}apply(A,s,R,a){if(!super.apply(A,s,R,a)||A.isTerastallized()&&A.getTeraType()===this.removedType)return!1;const r=A.getTypes(!0).filter(L=>L!==this.removedType);return r.length===0&&r.push(I.UNKNOWN),A.summonData.types=r,A.updateInfo(),this.messageCallback&&this.messageCallback(A),!0}};N(Pv,"RemoveTypeAttr");let SD=Pv;const Gv=class Gv extends Dt{constructor(){super(!1)}apply(A,s,R,a){if(!super.apply(A,s,R,a))return!1;const i=s.getTypes(!0);return i.includes(I.UNKNOWN)&&i.indexOf(I.UNKNOWN)>-1&&(i[i.indexOf(I.UNKNOWN)]=I.NORMAL),A.summonData.types=i,A.updateInfo(),n.queueMessage(u.t("moveTriggers:copyType",{pokemonName:te(A),targetPokemonName:te(s)})),!0}getCondition(){return(A,s,R)=>s.getTypes()[0]!==I.UNKNOWN||s.summonData.addedType!==null}};N(Gv,"CopyTypeAttr");let xd=Gv;const cv=class cv extends Dt{constructor(){super(!0)}apply(A,s,R,a){if(!super.apply(A,s,R,a))return!1;const i=n.arena.getTerrainType();let r;return i!==Tt.NONE?r=this.getTypeForTerrain(n.arena.getTerrainType()):r=this.getTypeForBiome(n.arena.biomeType),A.summonData.types=[r],A.updateInfo(),n.queueMessage(u.t("moveTriggers:transformedIntoType",{pokemonName:te(A),typeName:u.t(`pokemonInfo:Type.${I[r]}`)})),!0}getTypeForTerrain(A){switch(A){case Tt.ELECTRIC:return I.ELECTRIC;case Tt.MISTY:return I.FAIRY;case Tt.GRASSY:return I.GRASS;case Tt.PSYCHIC:return I.PSYCHIC;case Tt.NONE:default:return I.UNKNOWN}}getTypeForBiome(A){switch(A){case T.TOWN:case T.PLAINS:case T.METROPOLIS:return I.NORMAL;case T.GRASS:case T.TALL_GRASS:return I.GRASS;case T.FOREST:case T.JUNGLE:return I.BUG;case T.SLUM:case T.SWAMP:return I.POISON;case T.SEA:case T.BEACH:case T.LAKE:case T.SEABED:return I.WATER;case T.MOUNTAIN:return I.FLYING;case T.BADLANDS:return I.GROUND;case T.CAVE:case T.DESERT:return I.ROCK;case T.ICE_CAVE:case T.SNOWY_FOREST:return I.ICE;case T.MEADOW:case T.FAIRY_CAVE:case T.ISLAND:return I.FAIRY;case T.POWER_PLANT:return I.ELECTRIC;case T.VOLCANO:return I.FIRE;case T.GRAVEYARD:case T.TEMPLE:return I.GHOST;case T.DOJO:case T.CONSTRUCTION_SITE:return I.FIGHTING;case T.FACTORY:case T.LABORATORY:return I.STEEL;case T.RUINS:case T.SPACE:return I.PSYCHIC;case T.WASTELAND:case T.END:return I.DRAGON;case T.ABYSS:return I.DARK;default:return I.UNKNOWN}}};N(cv,"CopyBiomeTypeAttr");let bd=cv;const hv=class hv extends Dt{constructor(A){super(!1,{trigger:2}),this.type=A}apply(A,s,R,a){return s.summonData.types=[this.type],s.updateInfo(),n.queueMessage(u.t("moveTriggers:transformedIntoType",{pokemonName:te(s),typeName:u.t(`pokemonInfo:Type.${I[this.type]}`)})),!0}getCondition(){return(A,s,R)=>!s.isTerastallized()&&!s.hasAbility(O.MULTITYPE)&&!s.hasAbility(O.RKS_SYSTEM)&&!(s.getTypes().length===1&&s.getTypes()[0]===this.type)}};N(hv,"ChangeTypeAttr");let oD=hv;const Hv=class Hv extends Dt{constructor(A){super(!1,{trigger:2}),this.type=A}apply(A,s,R,a){return s.summonData.addedType=this.type,s.updateInfo(),n.queueMessage(u.t("moveTriggers:addType",{typeName:u.t(`pokemonInfo:Type.${I[this.type]}`),pokemonName:te(s)})),!0}getCondition(){return(A,s,R)=>!s.isTerastallized()&&!s.getTypes().includes(this.type)}};N(Hv,"AddTypeAttr");let lD=Hv;const dv=class dv extends Dt{constructor(){super(!0)}apply(A,s,R,a){var r;if(!super.apply(A,s,R,a))return!1;const i=(r=s.getMoveset()[0])==null?void 0:r.getMove().type;return A.summonData.types=[i],n.queueMessage(u.t("battle:transformedIntoType",{pokemonName:te(A),type:u.t(`pokemonInfo:Type.${I[i]}`)})),!0}};N(dv,"FirstMoveTypeAttr");let kd=dv;const fv=class fv extends jI{async apply(A,s,R,a){const i=R.moveTarget===3?5:void 0,r=ta(A,R.id,i);if(r.targets.length===0)return!1;const L=r.multiple||r.targets.length===1?r.targets:[this.hasTarget?s.getBattlerIndex():r.targets[A.randSeedInt(r.targets.length)]];return A.getMoveQueue().push({move:R.id,targets:L,virtual:!0,ignorePP:!0}),n.unshiftPhase(new wA(A,L,new nt(R.id,0,0,!0),!0,!0)),await Promise.resolve(lL(R.id).then(()=>{CL([R.id],!0)})),!0}};N(fv,"CallMoveAttr");let Ao=fv;const Bv=class Bv extends Ao{constructor(A){super(),this.invalidMoves=A}getMoveOverride(){return null}apply(A,s,R,a){const i=DE(t).map(L=>!this.invalidMoves.includes(L)&&!we[L].name.endsWith(" (N)")?L:t.NONE);let r=t.NONE;do r=this.getMoveOverride()??i[A.randSeedInt(i.length)];while(r===t.NONE);return super.apply(A,s,we[r],a)}};N(Bv,"RandomMoveAttr");let CD=Bv;const gv=class gv extends Ao{constructor(A,s=!1){super(),this.includeParty=s,this.invalidMoves=A}apply(A,s,R,a){return super.apply(A,s,we[this.moveId],a)}getCondition(){return(A,s,R)=>{let a;this.includeParty?a=A.isPlayer()?n.getPlayerParty().filter(L=>L!==A):n.getEnemyParty().filter(L=>L!==A):a=[A];const r=a.map(L=>L.moveset).flat().filter(L=>!this.invalidMoves.includes(L.moveId)&&!L.getMove().name.endsWith(" (N)"));return r.length===0?!1:(this.moveId=r[A.randSeedInt(r.length)].moveId,!0)}}};N(gv,"RandomMovesetMoveAttr");let Eo=gv;const e$=[t.AFTER_YOU,t.APPLE_ACID,t.ARMOR_CANNON,t.ASSIST,t.ASTRAL_BARRAGE,t.AURA_WHEEL,t.BANEFUL_BUNKER,t.BEAK_BLAST,t.BEHEMOTH_BASH,t.BEHEMOTH_BLADE,t.BELCH,t.BESTOW,t.BLAZING_TORQUE,t.BODY_PRESS,t.BRANCH_POKE,t.BREAKING_SWIPE,t.CELEBRATE,t.CHATTER,t.CHILLING_WATER,t.CHILLY_RECEPTION,t.CLANGOROUS_SOUL,t.COLLISION_COURSE,t.COMBAT_TORQUE,t.COMEUPPANCE,t.COPYCAT,t.COUNTER,t.COVET,t.CRAFTY_SHIELD,t.DECORATE,t.DESTINY_BOND,t.DETECT,t.DIAMOND_STORM,t.DOODLE,t.DOUBLE_IRON_BASH,t.DOUBLE_SHOCK,t.DRAGON_ASCENT,t.DRAGON_ENERGY,t.DRUM_BEATING,t.DYNAMAX_CANNON,t.ELECTRO_DRIFT,t.ENDURE,t.ETERNABEAM,t.FALSE_SURRENDER,t.FEINT,t.FIERY_WRATH,t.FILLET_AWAY,t.FLEUR_CANNON,t.FOCUS_PUNCH,t.FOLLOW_ME,t.FREEZE_SHOCK,t.FREEZING_GLARE,t.GLACIAL_LANCE,t.GRAV_APPLE,t.HELPING_HAND,t.HOLD_HANDS,t.HYPER_DRILL,t.HYPERSPACE_FURY,t.HYPERSPACE_HOLE,t.ICE_BURN,t.INSTRUCT,t.JET_PUNCH,t.JUNGLE_HEALING,t.KINGS_SHIELD,t.LIFE_DEW,t.LIGHT_OF_RUIN,t.MAKE_IT_RAIN,t.MAGICAL_TORQUE,t.MAT_BLOCK,t.ME_FIRST,t.METEOR_ASSAULT,t.METRONOME,t.MIMIC,t.MIND_BLOWN,t.MIRROR_COAT,t.MIRROR_MOVE,t.MOONGEIST_BEAM,t.NATURE_POWER,t.NATURES_MADNESS,t.NOXIOUS_TORQUE,t.OBSTRUCT,t.ORDER_UP,t.ORIGIN_PULSE,t.OVERDRIVE,t.PHOTON_GEYSER,t.PLASMA_FISTS,t.POPULATION_BOMB,t.POUNCE,t.POWER_SHIFT,t.PRECIPICE_BLADES,t.PROTECT,t.PYRO_BALL,t.QUASH,t.QUICK_GUARD,t.RAGE_FIST,t.RAGE_POWDER,t.RAGING_BULL,t.RAGING_FURY,t.RELIC_SONG,t.REVIVAL_BLESSING,t.RUINATION,t.SALT_CURE,t.SECRET_SWORD,t.SHED_TAIL,t.SHELL_TRAP,t.SILK_TRAP,t.SKETCH,t.SLEEP_TALK,t.SNAP_TRAP,t.SNARL,t.SNATCH,t.SNORE,t.SNOWSCAPE,t.SPECTRAL_THIEF,t.SPICY_EXTRACT,t.SPIKY_SHIELD,t.SPIRIT_BREAK,t.SPOTLIGHT,t.STEAM_ERUPTION,t.STEEL_BEAM,t.STRANGE_STEAM,t.STRUGGLE,t.SUNSTEEL_STRIKE,t.SURGING_STRIKES,t.SWITCHEROO,t.TECHNO_BLAST,t.TERA_STARSTORM,t.THIEF,t.THOUSAND_ARROWS,t.THOUSAND_WAVES,t.THUNDER_CAGE,t.THUNDEROUS_KICK,t.TIDY_UP,t.TRAILBLAZE,t.TRANSFORM,t.TRICK,t.TWIN_BEAM,t.V_CREATE,t.WICKED_BLOW,t.WICKED_TORQUE,t.WIDE_GUARD],t$=[t.ASSIST,t.BANEFUL_BUNKER,t.BEAK_BLAST,t.BELCH,t.BESTOW,t.BOUNCE,t.CELEBRATE,t.CHATTER,t.CIRCLE_THROW,t.COPYCAT,t.COUNTER,t.COVET,t.DESTINY_BOND,t.DETECT,t.DIG,t.DIVE,t.DRAGON_TAIL,t.ENDURE,t.FEINT,t.FLY,t.FOCUS_PUNCH,t.FOLLOW_ME,t.HELPING_HAND,t.HOLD_HANDS,t.KINGS_SHIELD,t.MAT_BLOCK,t.ME_FIRST,t.METRONOME,t.MIMIC,t.MIRROR_COAT,t.MIRROR_MOVE,t.NATURE_POWER,t.PHANTOM_FORCE,t.PROTECT,t.RAGE_POWDER,t.ROAR,t.SHADOW_FORCE,t.SHELL_TRAP,t.SKETCH,t.SKY_DROP,t.SLEEP_TALK,t.SNATCH,t.SPIKY_SHIELD,t.SPOTLIGHT,t.STRUGGLE,t.SWITCHEROO,t.THIEF,t.TRANSFORM,t.TRICK,t.WHIRLWIND],A$=[t.ASSIST,t.BELCH,t.BEAK_BLAST,t.BIDE,t.BOUNCE,t.COPYCAT,t.DIG,t.DIVE,t.DYNAMAX_CANNON,t.FREEZE_SHOCK,t.FLY,t.FOCUS_PUNCH,t.GEOMANCY,t.ICE_BURN,t.ME_FIRST,t.METRONOME,t.MIRROR_MOVE,t.MIMIC,t.PHANTOM_FORCE,t.RAZOR_WIND,t.SHADOW_FORCE,t.SHELL_TRAP,t.SKETCH,t.SKULL_BASH,t.SKY_ATTACK,t.SKY_DROP,t.SLEEP_TALK,t.SOLAR_BLADE,t.SOLAR_BEAM,t.STRUGGLE,t.UPROAR],E$=[t.ASSIST,t.BANEFUL_BUNKER,t.BEAK_BLAST,t.BEHEMOTH_BASH,t.BEHEMOTH_BLADE,t.BESTOW,t.CELEBRATE,t.CHATTER,t.CIRCLE_THROW,t.COPYCAT,t.COUNTER,t.COVET,t.DESTINY_BOND,t.DETECT,t.DRAGON_TAIL,t.ENDURE,t.FEINT,t.FOCUS_PUNCH,t.FOLLOW_ME,t.HELPING_HAND,t.HOLD_HANDS,t.KINGS_SHIELD,t.MAT_BLOCK,t.ME_FIRST,t.METRONOME,t.MIMIC,t.MIRROR_COAT,t.MIRROR_MOVE,t.PROTECT,t.RAGE_POWDER,t.ROAR,t.SHELL_TRAP,t.SKETCH,t.SLEEP_TALK,t.SNATCH,t.SPIKY_SHIELD,t.SPOTLIGHT,t.STRUGGLE,t.SWITCHEROO,t.THIEF,t.TRANSFORM,t.TRICK,t.WHIRLWIND],Kv=class Kv extends jI{apply(A,s,R,a){return new Promise(i=>{let r;switch(n.arena.getTerrainType()){case Tt.NONE:switch(n.arena.biomeType){case T.TOWN:r=t.ROUND;break;case T.METROPOLIS:r=t.TRI_ATTACK;break;case T.SLUM:r=t.SLUDGE_BOMB;break;case T.PLAINS:r=t.SILVER_WIND;break;case T.GRASS:r=t.GRASS_KNOT;break;case T.TALL_GRASS:r=t.POLLEN_PUFF;break;case T.MEADOW:r=t.GIGA_DRAIN;break;case T.FOREST:r=t.BUG_BUZZ;break;case T.JUNGLE:r=t.LEAF_STORM;break;case T.SEA:r=t.HYDRO_PUMP;break;case T.SWAMP:r=t.MUD_BOMB;break;case T.BEACH:r=t.SCALD;break;case T.LAKE:r=t.BUBBLE_BEAM;break;case T.SEABED:r=t.BRINE;break;case T.ISLAND:r=t.LEAF_TORNADO;break;case T.MOUNTAIN:r=t.AIR_SLASH;break;case T.BADLANDS:r=t.EARTH_POWER;break;case T.DESERT:r=t.SCORCHING_SANDS;break;case T.WASTELAND:r=t.DRAGON_PULSE;break;case T.CONSTRUCTION_SITE:r=t.STEEL_BEAM;break;case T.CAVE:r=t.POWER_GEM;break;case T.ICE_CAVE:r=t.ICE_BEAM;break;case T.SNOWY_FOREST:r=t.FROST_BREATH;break;case T.VOLCANO:r=t.LAVA_PLUME;break;case T.GRAVEYARD:r=t.SHADOW_BALL;break;case T.RUINS:r=t.ANCIENT_POWER;break;case T.TEMPLE:r=t.EXTRASENSORY;break;case T.DOJO:r=t.FOCUS_BLAST;break;case T.FAIRY_CAVE:r=t.ALLURING_VOICE;break;case T.ABYSS:r=t.OMINOUS_WIND;break;case T.SPACE:r=t.DRACO_METEOR;break;case T.FACTORY:r=t.FLASH_CANNON;break;case T.LABORATORY:r=t.ZAP_CANNON;break;case T.POWER_PLANT:r=t.CHARGE_BEAM;break;case T.END:r=t.ETERNABEAM;break}break;case Tt.MISTY:r=t.MOONBLAST;break;case Tt.ELECTRIC:r=t.THUNDERBOLT;break;case Tt.GRASSY:r=t.ENERGY_BALL;break;case Tt.PSYCHIC:r=t.PSYCHIC;break;default:r=t.TRI_ATTACK;break}A.getMoveQueue().push({move:r,targets:[s.getBattlerIndex()],ignorePP:!0}),n.unshiftPhase(new wA(A,[s.getBattlerIndex()],new nt(r,0,0,!0),!0)),lL(r).then(()=>{CL([r],!0).then(()=>i(!0))})})}};N(Kv,"NaturePowerAttr");let UD=Kv;const mv=class mv extends Ao{constructor(A,s=[]){super(),this.mirrorMove=A,this.invalidMoves=s}apply(A,s,R,a){this.hasTarget=this.mirrorMove;const i=this.mirrorMove?s.getLastXMoves()[0].move:n.currentBattle.lastMove;return super.apply(A,s,we[i],a)}getCondition(){return(A,s,R)=>{if(this.mirrorMove)return s.getMoveHistory().length!==0;{const a=n.currentBattle.lastMove;return a!==void 0&&!this.invalidMoves.includes(a)}}}};N(mv,"CopyMoveAttr");let AL=mv;const Fv=class Fv extends Dt{constructor(){super(!1,{trigger:1})}apply(A,s,R,a){const i=s.getLastXMoves(-1).find(o=>o.move!==t.NONE),r=s.getMoveset().find(o=>(o==null?void 0:o.moveId)===i.move),L=i.targets??[];return n.queueMessage(u.t("moveTriggers:instructingMove",{userPokemonName:te(A),targetPokemonName:te(s)})),s.getMoveQueue().unshift({move:i.move,targets:L,ignorePP:!1}),s.turnData.extraTurns++,n.appendToPhase(new wA(s,L,r),SO),!0}getCondition(){return(A,s,R)=>{const a=s.getLastXMoves(-1).find(o=>o.move!==t.NONE),i=s.getMoveset().find(o=>(o==null?void 0:o.moveId)===(a==null?void 0:a.move)),r=(a==null?void 0:a.targets)??[],L=[t.OUTRAGE,t.RAGING_FURY,t.ROLLOUT,t.PETAL_DANCE,t.THRASH,t.ICE_BALL,t.BIDE,t.SHELL_TRAP,t.BEAK_BLAST,t.FOCUS_PUNCH,t.FAKE_OUT,t.FIRST_IMPRESSION,t.MAT_BLOCK,t.HYPER_BEAM,t.ETERNABEAM,t.FRENZY_PLANT,t.BLAST_BURN,t.HYDRO_CANNON,t.GIGA_IMPACT,t.PRISMATIC_LASER,t.ROAR_OF_TIME,t.ROCK_WRECKER,t.METEOR_ASSAULT,t.DIG,t.FLY,t.BOUNCE,t.SHADOW_FORCE,t.PHANTOM_FORCE,t.DIVE,t.ELECTRO_SHOT,t.ICE_BURN,t.GEOMANCY,t.FREEZE_SHOCK,t.SKY_DROP,t.SKY_ATTACK,t.SKULL_BASH,t.SOLAR_BEAM,t.SOLAR_BLADE,t.METEOR_BEAM,t.INSTRUCT,t.KINGS_SHIELD,t.SKETCH,t.TRANSFORM,t.MIMIC,t.STRUGGLE];return!(!i||i.ppUsed===i.getMovePp()||we[(a==null?void 0:a.move)??t.NONE].isChargingMove()||!r.length||L.includes((a==null?void 0:a.move)??t.NONE))}}getTargetBenefitScore(A,s,R){return 2}};N(Fv,"RepeatMoveAttr");let Zd=Fv;const pv=class pv extends Dt{constructor(A){super(),this.reduction=A}apply(A,s,R,a){const i=s.getLastXMoves().find(()=>!0),r=s.getMoveset().find(l=>(l==null?void 0:l.moveId)===(i==null?void 0:i.move)),L=r==null?void 0:r.ppUsed;r.ppUsed=Math.min((r==null?void 0:r.ppUsed)+this.reduction,r==null?void 0:r.getMovePp());const o=u.t("battle:ppReduced",{targetName:te(s),moveName:r==null?void 0:r.getName(),reduction:(r==null?void 0:r.ppUsed)-L});return n.eventTarget.dispatchEvent(new KT(s==null?void 0:s.id,r==null?void 0:r.getMove(),r==null?void 0:r.ppUsed)),n.queueMessage(o),!0}getCondition(){return(A,s,R)=>{const a=s.getLastXMoves().find(()=>!0);if(a){const i=s.getMoveset().find(r=>(r==null?void 0:r.moveId)===a.move);return!!(i!=null&&i.getPpRatio())}return!1}}getTargetBenefitScore(A,s,R){const a=s.getLastXMoves().find(()=>!0);if(a){const i=s.getMoveset().find(r=>(r==null?void 0:r.moveId)===a.move);if(i){const r=i.getMovePp(),L=r-i.ppUsed,o=-(8-Math.ceil(Math.min(r,30)/5));return L<4?o/4*L:o}}return 0}};N(pv,"ReducePpMoveAttr");let uD=pv;const Wv=class Wv extends uD{constructor(A){super(A)}apply(A,s,R,a){const i=s.getLastXMoves().find(()=>!0);if(i){const r=s.getMoveset().find(L=>(L==null?void 0:L.moveId)===i.move);r!=null&&r.getPpRatio()&&super.apply(A,s,R,a)}return!0}getCondition(){return(A,s,R)=>!0}};N(Wv,"AttackReducePpMoveAttr");let Xd=Wv;const X8=N((E,A,s)=>{const R=A.getMoveHistory().filter(i=>!i.virtual);if(!R.length)return!1;const a=R[0];return!(!a.move||we[a.move].isChargingMove()&&a.result===oA.OTHER)},"targetMoveCopiableCondition"),Yv=class Yv extends jI{apply(A,s,R,a){const i=s.getMoveHistory().filter(o=>!o.virtual);if(!i.length)return!1;const r=we[i[0].move],L=A.getMoveset().findIndex(o=>(o==null?void 0:o.moveId)===R.id);return L===-1?!1:(A.summonData.moveset=A.getMoveset().slice(0),A.summonData.moveset[L]=new nt(r.id,0,0),n.queueMessage(u.t("moveTriggers:copiedMove",{pokemonName:te(A),moveName:r.name})),!0)}getCondition(){return X8}};N(Yv,"MovesetCopyMoveAttr");let Qd=Yv;const yv=class yv extends Dt{constructor(){super(!0)}apply(A,s,R,a){if(!super.apply(A,s,R,a))return!1;const i=s.getLastXMoves(-1).find(o=>o.move!==t.NONE&&o.move!==t.STRUGGLE&&!o.virtual);if(!i)return!1;const r=we[i.move],L=A.getMoveset().findIndex(o=>(o==null?void 0:o.moveId)===R.id);return L===-1?!1:(A.setMove(L,r.id),n.queueMessage(u.t("moveTriggers:sketchedMove",{pokemonName:te(A),moveName:r.name})),!0)}getCondition(){return(A,s,R)=>{if(!X8(A,s))return!1;const a=s.getMoveHistory().filter(r=>!r.virtual).at(-1);return!(!a||[t.CHATTER,t.MIRROR_MOVE,t.SLEEP_TALK,t.STRUGGLE,t.SKETCH,t.REVIVAL_BLESSING,t.TERA_STARSTORM,t.BREAKNECK_BLITZ__PHYSICAL,t.BREAKNECK_BLITZ__SPECIAL].includes(a.move)||A.getMoveset().find(r=>(r==null?void 0:r.moveId)===a.move))}}};N(yv,"SketchAttr");let Jd=yv;const wv=class wv extends Dt{constructor(A,s){super(s,{trigger:2}),this.ability=A}apply(A,s,R,a){if(!super.apply(A,s,R,a))return!1;const i=this.selfTarget?A:s;return i.summonData.ability=this.ability,n.triggerPokemonFormChange(i,xn),n.queueMessage(u.t("moveTriggers:acquiredAbility",{pokemonName:te(this.selfTarget?A:s),abilityName:NE[this.ability].name})),!0}getCondition(){return(A,s,R)=>!(this.selfTarget?A:s).getAbility().hasAttr(LE)&&(this.selfTarget?A:s).getAbility().id!==this.ability}};N(wv,"AbilityChangeAttr");let DD=wv;const vv=class vv extends Dt{constructor(A=!1){super(!1,{trigger:2}),this.copyToPartner=A}apply(A,s,R,a){var i;return super.apply(A,s,R,a)?(A.summonData.ability=s.getAbility().id,n.queueMessage(u.t("moveTriggers:copiedTargetAbility",{pokemonName:te(A),targetName:te(s),abilityName:NE[s.getAbility().id].name})),this.copyToPartner&&((i=n.currentBattle)!=null&&i.double)&&A.getAlly().hp&&(A.getAlly().summonData.ability=s.getAbility().id,n.queueMessage(u.t("moveTriggers:copiedTargetAbility",{pokemonName:te(A.getAlly()),targetName:te(s),abilityName:NE[s.getAbility().id].name}))),!0):!1}getCondition(){return(A,s,R)=>{var i;let a=!s.getAbility().hasAttr(sA)&&!A.getAbility().hasAttr(LE);return this.copyToPartner&&((i=n.currentBattle)!=null&&i.double)?a=a&&(!A.getAlly().hp||!A.getAlly().getAbility().hasAttr(LE)):a=a&&A.getAbility().id!==s.getAbility().id,a}}};N(vv,"AbilityCopyAttr");let MD=vv;const Vv=class Vv extends Dt{constructor(){super(!1,{trigger:2})}apply(A,s,R,a){return super.apply(A,s,R,a)?(s.summonData.ability=A.getAbility().id,n.queueMessage(u.t("moveTriggers:acquiredAbility",{pokemonName:te(s),abilityName:NE[A.getAbility().id].name})),!0):!1}getCondition(){return(A,s,R)=>!A.getAbility().hasAttr(sA)&&!s.getAbility().hasAttr(LE)&&A.getAbility().id!==s.getAbility().id}};N(Vv,"AbilityGiveAttr");let $d=Vv;const xv=class xv extends Dt{apply(A,s,R,a){if(!super.apply(A,s,R,a))return!1;const i=A.getAbility().id;return A.summonData.ability=s.getAbility().id,s.summonData.ability=i,n.queueMessage(u.t("moveTriggers:swappedAbilitiesWithTarget",{pokemonName:te(A)})),n.arena.triggerWeatherBasedFormChangesToNormal(),n.arena.triggerWeatherBasedFormChanges(),!0}getCondition(){return(A,s,R)=>!A.getAbility().hasAttr(uA)&&!s.getAbility().hasAttr(uA)}};N(xv,"SwitchAbilitiesAttr");let zd=xv;const bv=class bv extends Dt{apply(A,s,R,a){return super.apply(A,s,R,a)?(s.summonData.abilitySuppressed=!0,n.arena.triggerWeatherBasedFormChangesToNormal(),n.queueMessage(u.t("moveTriggers:suppressAbilities",{pokemonName:te(s)})),!0):!1}getCondition(){return(A,s,R)=>!s.getAbility().hasAttr(LE)&&!s.summonData.abilitySuppressed}};N(bv,"SuppressAbilitiesAttr");let _D=bv;const kv=class kv extends Dt{apply(A,s,R,a){if(!super.apply(A,s,R,a))return!1;if(s.turnData.acted){const i=new _D;i.getCondition()(A,s,R)&&i.apply(A,s,R,a)}return!0}};N(kv,"SuppressAbilitiesIfActedAttr");let qd=kv;const Zv=class Zv extends Dt{async apply(A,s,R,a){if(!super.apply(A,s,R,a))return!1;const i=[];A.summonData.speciesForm=s.getSpeciesForm(),A.summonData.ability=s.getAbility().id,A.summonData.gender=s.getGender(),A.removeTag(y.POWER_TRICK);for(const r of zn)A.setStat(r,s.getStat(r,!1),!1);for(const r of dO)A.setStatStage(r,s.getStatStage(r));return A.summonData.moveset=s.getMoveset().map(r=>r?new nt(r.moveId,0,0,!1,Math.min(r.getMove().pp,5)):(console.warn(`Transform: somehow iterating over a ${r} value when copying moveset!`),new nt(t.NONE))),A.summonData.types=s.getTypes(),i.push(A.updateInfo()),n.queueMessage(u.t("moveTriggers:transformedIntoTarget",{pokemonName:te(A),targetName:te(s)})),i.push(A.loadAssets(!1).then(()=>{A.playAnim(),A.updateInfo()})),await Promise.all(i),!0}};N(Zv,"TransformAttr");let jd=Zv;const Xv=class Xv extends Dt{constructor(A){super(),this.stat=A}apply(A,s,R,a){if(super.apply(A,s,R,a)){const i=A.getStat(this.stat,!1);return A.setStat(this.stat,s.getStat(this.stat,!1),!1),s.setStat(this.stat,i,!1),n.queueMessage(u.t("moveTriggers:switchedStat",{pokemonName:te(A),stat:u.t(hE(this.stat))})),!0}return!1}};N(Xv,"SwapStatAttr");let e1=Xv;const Qv=class Qv extends Dt{constructor(A,s){super(),this.statToSwitch=A,this.statToSwitchWith=s}apply(A,s,R,a){if(!super.apply(A,s,R,a))return!1;const i=A.getStat(this.statToSwitch,!1),r=A.getStat(this.statToSwitchWith,!1);return A.setStat(this.statToSwitch,r,!1),A.setStat(this.statToSwitchWith,i,!1),n.queueMessage(u.t("moveTriggers:shiftedStats",{pokemonName:te(A),statToSwitch:u.t(hE(this.statToSwitch)),statToSwitchWith:u.t(hE(this.statToSwitchWith))})),!0}getUserBenefitScore(A,s,R){return A.getStat(this.statToSwitchWith,!1)>A.getStat(this.statToSwitch,!1)?10:0}};N(Qv,"ShiftStatAttr");let t1=Qv;const Jv=class Jv extends Dt{constructor(A,s){super(),this.stats=A,this.msgKey=s}apply(A,s,R,a){if(super.apply(A,s,R,a)){for(const i of this.stats){const r=Math.floor((A.getStat(i,!1)+s.getStat(i,!1))/2);A.setStat(i,r,!1),s.setStat(i,r,!1)}return n.queueMessage(u.t(this.msgKey,{pokemonName:te(A)})),!0}return!1}};N(Jv,"AverageStatsAttr");let PD=Jv;const $v=class $v extends NA{getUserBenefitScore(A,s,R){const a=A.getLastXMoves(4);console.log(a);for(let i=0;i<a.length;i++)if(a[i].move===R.id)return(4-(i+1))*-10;return 0}};N($v,"DiscourageFrequentUseAttr");let A1=$v;const zv=class zv extends Dt{constructor(){super(!0,{trigger:2,firstHitOnly:!0})}apply(A,s,R){return n.currentBattle.moneyScattered+=n.getWaveMoneyAmount(.2),n.queueMessage(u.t("moveTriggers:coinsScatteredEverywhere")),!0}};N(zv,"MoneyAttr");let GD=zv;const qv=class qv extends Dt{constructor(){super(!0,{trigger:0})}apply(A,s,R,a){return n.queueMessage(`${u.t("moveTriggers:tryingToTakeFoeDown",{pokemonName:te(A)})}`),A.addTag(y.DESTINY_BOND,void 0,R.id,A.id),!0}};N(qv,"DestinyBondAttr");let E1=qv;const jv=class jv extends Ht{constructor(A){super(A,!1,!1,2,5)}apply(A,s,R,a){return s.turnData.statStagesIncreased&&super.apply(A,s,R,a),!0}};N(jv,"AddBattlerTagIfBoostedAttr");let s1=jv;const eV=class eV extends Dt{constructor(A){super(!0,{trigger:2}),this.effect=A}apply(A,s,R,a){return s.turnData.statStagesIncreased&&s.trySetStatus(this.effect,!0,A),!0}};N(eV,"StatusIfBoostedAttr");let R1=eV;const tV=class tV extends NA{getCondition(){return(A,s,R)=>{const a=new Set,i=A.getMoveset().map(r=>r==null?void 0:r.moveId);return A.getMoveHistory().map(r=>{r.move!==R.id&&i.find(L=>L===r.move)&&a.add(r.move)}),a.size>=i.length-1}}};N(tV,"LastResortAttr");let O1=tV;const AV=class AV extends NA{constructor(A){super(),this.targetChangeFunc=A}apply(A,s,R,a){const i=a[0];return i.value=this.targetChangeFunc(A,s,R),!0}};N(AV,"VariableTargetAttr");let Ui=AV;const EV=class EV extends Dt{apply(A,s,R,a){n.queueMessage(u.t("moveTriggers:afterYou",{targetName:te(s)}));const i=n.findPhase(r=>r.pokemon===s);return i&&n.tryRemovePhase(r=>r.pokemon===s)&&n.prependToPhase(new wA(s,[...i.targets],i.move),wA),!0}};N(EV,"AfterYouAttr");let n1=EV;const SI=N((E,A,s)=>!n.arena.getTag(ge.GRAVITY),"failOnGravityCondition"),E_=N((E,A,s)=>!A.isBossImmune(),"failOnBossCondition"),yi=N((E,A,s)=>n.currentBattle.double,"failIfSingleBattle"),Ul=N((E,A,s)=>{const R=new Lt(!1);return n.getField(!0).map(a=>ut(cS,a,R)),R.value&&n.queueMessage(u.t("moveTriggers:cannotUseMove",{pokemonName:te(E),moveName:s.name})),!R.value},"failIfDampCondition"),G6=N((E,A,s)=>{var R;return((R=E.status)==null?void 0:R.effect)===ne.SLEEP||E.hasAbility(O.COMATOSE)},"userSleptOrComatoseCondition"),s_=N((E,A,s)=>{var R;return((R=A.status)==null?void 0:R.effect)===ne.SLEEP||A.hasAbility(O.COMATOSE)},"targetSleptOrComatoseCondition"),dR=N((E,A,s)=>n.phaseQueue.find(R=>R instanceof wA)!==void 0,"failIfLastCondition"),c6=N((E,A,s)=>(E.isPlayer()?n.getPlayerParty():n.getEnemyParty()).some(a=>a.isActive()&&!a.isOnField()),"failIfLastInPartyCondition"),ul=N((E,A,s)=>!A.isOfType(I.GHOST),"failIfGhostTypeCondition"),s$=N((E,A,s)=>{var R;return((R=A.getHeldItems().filter(a=>a.isTransferable))==null?void 0:R.length)>0},"failIfNoTargetHeldItemsCondition"),R$=N((E,A,s)=>{var r,L;const R=A.getHeldItems().filter(o=>o.isTransferable);if(R.length===0)return"";const a=((L=(r=R[0])==null?void 0:r.type)==null?void 0:L.name)??"item";return u.t("moveTriggers:attackedByItem",{pokemonName:te(A),itemName:a})},"attackedByItemMessageFunc");function Q8(E,A,s,R,a){return new Promise(i=>{const r=[],L=R.attrs.filter(o=>E(o));for(const o of L){const l=o.apply(A,s,R,a);l instanceof Promise&&r.push(l)}Promise.allSettled(r).then(()=>i())})}N(Q8,"applyMoveAttrsInternal");function O$(E,A,s,R,a){return new Promise(i=>{const r=[],L=R.chargeAttrs.filter(o=>E(o));for(const o of L){const l=o.apply(A,s,R,a);l instanceof Promise&&r.push(l)}Promise.allSettled(r).then(()=>i())})}N(O$,"applyMoveChargeAttrsInternal");function MA(E,A,s,R,...a){return Q8(i=>i instanceof E,A,s,R,a)}N(MA,"applyMoveAttrs");function HL(E,A,s,R,...a){return Q8(E,A,s,R,a)}N(HL,"applyFilteredMoveAttrs");function h6(E,A,s,R,...a){return O$(i=>i instanceof E,A,s,R,a)}N(h6,"applyMoveChargeAttrs");const sV=class sV{constructor(A){this.func=A}apply(A,s,R){return this.func(A,s,R)}getUserBenefitScore(A,s,R){return 0}};N(sV,"MoveCondition");let $a=sV;const RV=class RV extends $a{constructor(){super((A,s,R)=>{var a;return((a=A.battleSummonData)==null?void 0:a.waveTurnCount)===1})}getUserBenefitScore(A,s,R){return this.apply(A,s,R)?10:-20}};N(RV,"FirstMoveCondition");let SN=RV;const OV=class OV extends $a{constructor(){super((A,s,R)=>{var i;const a=n.currentBattle.turnCommands[s.getBattlerIndex()];return!!a&&a.command===LA.FIGHT&&!s.turnData.acted&&!!((i=a.move)!=null&&i.move)&&we[a.move.move].category!==2&&we[a.move.move].getPriority(s)>0})}};N(OV,"UpperHandCondition");let I1=OV;const nV=class nV extends Ci{apply(A,s,R,a){const i=a[0];return A.getTypes().some(r=>s.getTypes().includes(r))?!1:(i.value=0,!0)}};N(nV,"hitsSameTypeAttr");let a1=nV;const IV=class IV extends Dt{constructor(){super(!0)}apply(A,s,R,a){if(!super.apply(A,s,R,a))return!1;const[i]=s.getLastXMoves(1);if(!i)return!1;const r=we[i.move];if(r.type===I.STELLAR||r.type===I.UNKNOWN)return!1;const L=A.getTypes(),o=this.getTypeResistances(n.gameMode,r.type).filter(C=>!L.includes(C));if(!o.length)return!1;const l=o[A.randSeedInt(o.length)];return A.summonData.types=[l],n.queueMessage(u.t("battle:transformedIntoType",{pokemonName:te(A),type:Jn(I[l])})),A.updateInfo(),!0}getTypeResistances(A,s){const R=[];for(let a=0;a<Object.keys(I).length;a++){const i=new Et(1);i.value=i_(s,a),as(A,XE.TYPE_EFFECTIVENESS,i),i.value<1&&R.push(a)}return R}getCondition(){return(A,s,R)=>s.getLastXMoves().length!==0}};N(IV,"ResistLastMoveTypeAttr");let i1=IV;const aV=class aV extends Ht{constructor(A){super(A,!1,!0)}apply(A,s,R,a){return super.apply(A,s,R,a)?(n.queueMessage(u.t("moveTriggers:exposedMove",{pokemonName:te(A),targetPokemonName:te(s)})),!0):!1}};N(aV,"ExposedMoveAttr");let oN=aV;const n$=N((E,A,s)=>!E.getTypes().includes(I.UNKNOWN),"unknownTypeCondition");function ta(E,A,s){const R=new Et(0);E.getOpponents().forEach(o=>MA(Ui,E,o,we[A],R));let a;we[A].hasAttr(Ui)?a=R.value:s!==void 0?a=s:A?a=we[A].moveTarget:A===void 0&&(a=5);const i=E.getOpponents();let r=[],L=!1;switch(a){case 0:case 18:r=[E];break;case 3:case 1:case 4:case 2:r=i.concat([E.getAlly()]),L=a===4||a===2;break;case 5:case 6:case 8:case 16:r=i,L=a!==5;break;case 7:r=[i[E.randSeedInt(i.length)]];break;case 9:return{targets:[-1],multiple:!1};case 10:case 11:r=[E.getAlly()];break;case 12:case 13:case 15:r=[E,E.getAlly()],L=a!==12;break;case 14:case 17:r=[E,E.getAlly()].concat(i),L=!0;break;case 19:r=E.getTypes(!0).includes(I.GHOST)?i.concat([E.getAlly()]):[E];break}return{targets:r.filter(o=>o==null?void 0:o.isActive(!0)).map(o=>o.getBattlerIndex()).filter(o=>o!==void 0),multiple:L}}N(ta,"getMoveTargets");const we=[new je(t.NONE,I.NORMAL,2,-1,-1,0,1)],J8=[];function I$(){we.push(new g(t.POUND,I.NORMAL,0,40,100,35,-1,0,1),new g(t.KARATE_CHOP,I.FIGHTING,0,50,100,25,-1,0,1).attr(jA),new g(t.DOUBLE_SLAP,I.NORMAL,0,15,85,10,-1,0,1).attr(TA),new g(t.COMET_PUNCH,I.NORMAL,0,18,85,15,-1,0,1).attr(TA).punchingMove(),new g(t.MEGA_PUNCH,I.NORMAL,0,80,85,20,-1,0,1).punchingMove(),new g(t.PAY_DAY,I.NORMAL,0,40,100,20,-1,0,1).attr(GD).makesContact(!1),new g(t.FIRE_PUNCH,I.FIRE,0,75,100,15,10,0,1).attr(Ot,ne.BURN).punchingMove(),new g(t.ICE_PUNCH,I.ICE,0,75,100,15,10,0,1).attr(Ot,ne.FREEZE).punchingMove(),new g(t.THUNDER_PUNCH,I.ELECTRIC,0,75,100,15,10,0,1).attr(Ot,ne.PARALYSIS).punchingMove(),new g(t.SCRATCH,I.NORMAL,0,40,100,35,-1,0,1),new g(t.VISE_GRIP,I.NORMAL,0,55,100,30,-1,0,1),new g(t.GUILLOTINE,I.NORMAL,0,200,30,5,-1,0,1).attr(QO).attr(wI),new os(t.RAZOR_WIND,I.NORMAL,1,80,100,10,-1,0,1).chargeText(u.t("moveTriggers:whippedUpAWhirlwind",{pokemonName:"{USER}"})).attr(jA).windMove().target(6),new je(t.SWORDS_DANCE,I.NORMAL,-1,20,-1,0,1).attr(_e,[K.ATK],2,!0).danceMove(),new g(t.CUT,I.NORMAL,0,50,95,30,-1,0,1).slicingMove(),new g(t.GUST,I.FLYING,1,40,100,35,-1,0,1).attr(iR,y.FLYING).windMove(),new g(t.WING_ATTACK,I.FLYING,0,60,100,35,-1,0,1),new Ge(t.WHIRLWIND,I.NORMAL,-1,20,-1,-6,1).attr(zs,!1,iA.FORCE_SWITCH).ignoresSubstitute().hidesTarget().windMove(),new os(t.FLY,I.FLYING,0,90,95,15,-1,0,1).chargeText(u.t("moveTriggers:flewUpHigh",{pokemonName:"{USER}"})).chargeAttr(Yn,y.FLYING).condition(SI),new g(t.BIND,I.NORMAL,0,15,85,20,-1,0,1).attr(iO,y.BIND),new g(t.SLAM,I.NORMAL,0,80,75,20,-1,0,1),new g(t.VINE_WHIP,I.GRASS,0,45,100,25,-1,0,1),new g(t.STOMP,I.NORMAL,0,65,100,20,30,0,1).attr(In).attr(iR,y.MINIMIZED).attr(rA),new g(t.DOUBLE_KICK,I.FIGHTING,0,30,100,30,-1,0,1).attr(TA,0),new g(t.MEGA_KICK,I.NORMAL,0,120,75,5,-1,0,1),new g(t.JUMP_KICK,I.FIGHTING,0,100,95,10,-1,0,1).attr(LO,TI).attr(yO,TI).condition(SI).recklessMove(),new g(t.ROLLING_KICK,I.FIGHTING,0,60,85,15,30,0,1).attr(rA),new Ge(t.SAND_ATTACK,I.GROUND,100,15,-1,0,1).attr(_e,[K.ACC],-1),new g(t.HEADBUTT,I.NORMAL,0,70,100,15,30,0,1).attr(rA),new g(t.HORN_ATTACK,I.NORMAL,0,65,100,25,-1,0,1),new g(t.FURY_ATTACK,I.NORMAL,0,15,85,20,-1,0,1).attr(TA),new g(t.HORN_DRILL,I.NORMAL,0,200,30,5,-1,0,1).attr(QO).attr(wI),new g(t.TACKLE,I.NORMAL,0,40,100,35,-1,0,1),new g(t.BODY_SLAM,I.NORMAL,0,85,100,15,30,0,1).attr(In).attr(iR,y.MINIMIZED).attr(Ot,ne.PARALYSIS),new g(t.WRAP,I.NORMAL,0,15,90,20,-1,0,1).attr(iO,y.WRAP),new g(t.TAKE_DOWN,I.NORMAL,0,90,85,20,-1,0,1).attr($s).recklessMove(),new g(t.THRASH,I.NORMAL,0,120,100,10,-1,0,1).attr(ji).attr(LO,Kn).attr(yO,Kn).target(7),new g(t.DOUBLE_EDGE,I.NORMAL,0,120,100,15,-1,0,1).attr($s,!1,.33).recklessMove(),new Ge(t.TAIL_WHIP,I.NORMAL,100,30,-1,0,1).attr(_e,[K.DEF],-1).target(6),new g(t.POISON_STING,I.POISON,0,15,100,35,30,0,1).attr(Ot,ne.POISON).makesContact(!1),new g(t.TWINEEDLE,I.BUG,0,25,100,20,20,0,1).attr(TA,0).attr(Ot,ne.POISON).makesContact(!1),new g(t.PIN_MISSILE,I.BUG,0,25,95,20,-1,0,1).attr(TA).makesContact(!1),new Ge(t.LEER,I.NORMAL,100,30,-1,0,1).attr(_e,[K.DEF],-1).target(6),new g(t.BITE,I.DARK,0,60,100,25,30,0,1).attr(rA).bitingMove(),new Ge(t.GROWL,I.NORMAL,100,40,-1,0,1).attr(_e,[K.ATK],-1).soundBased().target(6),new Ge(t.ROAR,I.NORMAL,-1,20,-1,-6,1).attr(zs,!1,iA.FORCE_SWITCH).soundBased().hidesTarget(),new Ge(t.SING,I.NORMAL,55,15,-1,0,1).attr(Ot,ne.SLEEP).soundBased(),new Ge(t.SUPERSONIC,I.NORMAL,55,20,-1,0,1).attr(ZE).soundBased(),new g(t.SONIC_BOOM,I.NORMAL,1,-1,90,20,-1,0,1).attr(HO,20),new Ge(t.DISABLE,I.NORMAL,100,20,-1,0,1).attr(Ht,y.DISABLED,!1,!0).condition((E,A,s)=>A.getMoveHistory().reverse().find(R=>R.move!==t.NONE&&R.move!==t.STRUGGLE&&!R.virtual)!==void 0).ignoresSubstitute(),new g(t.ACID,I.POISON,1,40,100,30,10,0,1).attr(_e,[K.SPDEF],-1).target(6),new g(t.EMBER,I.FIRE,1,40,100,25,10,0,1).attr(Ot,ne.BURN),new g(t.FLAMETHROWER,I.FIRE,1,90,100,15,10,0,1).attr(Ot,ne.BURN),new Ge(t.MIST,I.ICE,-1,30,-1,0,1).attr(tE,ge.MIST,5,!0).target(15),new g(t.WATER_GUN,I.WATER,1,40,100,25,-1,0,1),new g(t.HYDRO_PUMP,I.WATER,1,110,80,5,-1,0,1),new g(t.SURF,I.WATER,1,90,100,15,-1,0,1).target(4).attr(iR,y.UNDERWATER).attr(rD),new g(t.ICE_BEAM,I.ICE,1,90,100,10,10,0,1).attr(Ot,ne.FREEZE),new g(t.BLIZZARD,I.ICE,1,110,70,5,10,0,1).attr(Cd).attr(Ot,ne.FREEZE).windMove().target(6),new g(t.PSYBEAM,I.PSYCHIC,1,65,100,20,10,0,1).attr(ZE),new g(t.BUBBLE_BEAM,I.WATER,1,65,100,20,10,0,1).attr(_e,[K.SPD],-1),new g(t.AURORA_BEAM,I.ICE,1,65,100,20,10,0,1).attr(_e,[K.ATK],-1),new g(t.HYPER_BEAM,I.NORMAL,1,150,90,5,-1,0,1).attr(QR),new g(t.PECK,I.FLYING,0,35,100,35,-1,0,1),new g(t.DRILL_PECK,I.FLYING,0,80,100,20,-1,0,1),new g(t.SUBMISSION,I.FIGHTING,0,80,80,20,-1,0,1).attr($s).recklessMove(),new g(t.LOW_KICK,I.FIGHTING,0,-1,100,20,-1,0,1).attr(Zu),new g(t.COUNTER,I.FIGHTING,0,-1,100,20,-1,-5,1).attr(wa,E=>E.category===0,2).target(9),new g(t.SEISMIC_TOSS,I.FIGHTING,0,-1,100,20,-1,0,1).attr(cu),new g(t.STRENGTH,I.NORMAL,0,80,100,15,-1,0,1),new g(t.ABSORB,I.GRASS,1,20,100,25,-1,0,1).attr(Ys).triageMove(),new g(t.MEGA_DRAIN,I.GRASS,1,40,100,15,-1,0,1).attr(Ys).triageMove(),new Ge(t.LEECH_SEED,I.GRASS,90,10,-1,0,1).attr(iD).condition((E,A,s)=>!A.getTag(y.SEEDED)&&!A.isOfType(I.GRASS)),new je(t.GROWTH,I.NORMAL,-1,20,-1,0,1).attr($H),new g(t.RAZOR_LEAF,I.GRASS,0,55,95,25,-1,0,1).attr(jA).makesContact(!1).slicingMove().target(6),new os(t.SOLAR_BEAM,I.GRASS,1,120,100,10,-1,0,1).chargeText(u.t("moveTriggers:tookInSunlight",{pokemonName:"{USER}"})).chargeAttr(sN,[Oe.SUNNY,Oe.HARSH_SUN]).attr(zu),new Ge(t.POISON_POWDER,I.POISON,75,35,-1,0,1).attr(Ot,ne.POISON).powderMove(),new Ge(t.STUN_SPORE,I.GRASS,75,30,-1,0,1).attr(Ot,ne.PARALYSIS).powderMove(),new Ge(t.SLEEP_POWDER,I.GRASS,75,15,-1,0,1).attr(Ot,ne.SLEEP).powderMove(),new g(t.PETAL_DANCE,I.GRASS,1,120,100,10,-1,0,1).attr(ji).attr(LO,Kn).attr(yO,Kn).makesContact().danceMove().target(7),new Ge(t.STRING_SHOT,I.BUG,95,40,-1,0,1).attr(_e,[K.SPD],-2).target(6),new g(t.DRAGON_RAGE,I.DRAGON,1,-1,100,10,-1,0,1).attr(HO,40),new g(t.FIRE_SPIN,I.FIRE,1,35,85,15,-1,0,1).attr(iO,y.FIRE_SPIN),new g(t.THUNDER_SHOCK,I.ELECTRIC,1,40,100,30,10,0,1).attr(Ot,ne.PARALYSIS),new g(t.THUNDERBOLT,I.ELECTRIC,1,90,100,15,10,0,1).attr(Ot,ne.PARALYSIS),new Ge(t.THUNDER_WAVE,I.ELECTRIC,90,20,-1,0,1).attr(Ot,ne.PARALYSIS).attr(Gu),new g(t.THUNDER,I.ELECTRIC,1,110,70,10,30,0,1).attr(Ot,ne.PARALYSIS).attr(AD).attr(FR,y.FLYING),new g(t.ROCK_THROW,I.ROCK,0,50,90,15,-1,0,1).makesContact(!1),new g(t.EARTHQUAKE,I.GROUND,0,100,100,10,-1,0,1).attr(iR,y.UNDERGROUND).attr(HA,(E,A,s)=>n.arena.getTerrainType()===Tt.GRASSY&&A.isGrounded()?.5:1).makesContact(!1).target(4),new g(t.FISSURE,I.GROUND,0,200,30,5,-1,0,1).attr(QO).attr(wI).attr(FR,y.UNDERGROUND).makesContact(!1),new os(t.DIG,I.GROUND,0,80,100,10,-1,0,1).chargeText(u.t("moveTriggers:dugAHole",{pokemonName:"{USER}"})).chargeAttr(Yn,y.UNDERGROUND),new Ge(t.TOXIC,I.POISON,90,10,-1,0,1).attr(Ot,ne.TOXIC).attr(ED),new g(t.CONFUSION,I.PSYCHIC,1,50,100,25,10,0,1).attr(ZE),new g(t.PSYCHIC,I.PSYCHIC,1,90,100,10,10,0,1).attr(_e,[K.SPDEF],-1),new Ge(t.HYPNOSIS,I.PSYCHIC,60,20,-1,0,1).attr(Ot,ne.SLEEP),new je(t.MEDITATE,I.PSYCHIC,-1,40,-1,0,1).attr(_e,[K.ATK],1,!0),new je(t.AGILITY,I.PSYCHIC,-1,30,-1,0,1).attr(_e,[K.SPD],2,!0),new g(t.QUICK_ATTACK,I.NORMAL,0,40,100,30,-1,1,1),new g(t.RAGE,I.NORMAL,0,20,100,20,-1,0,1).partial(),new je(t.TELEPORT,I.PSYCHIC,-1,20,-1,-6,1).attr(zs,!0).hidesUser(),new g(t.NIGHT_SHADE,I.GHOST,1,-1,100,15,-1,0,1).attr(cu),new Ge(t.MIMIC,I.NORMAL,-1,10,-1,0,1).attr(Qd).ignoresSubstitute(),new Ge(t.SCREECH,I.NORMAL,85,40,-1,0,1).attr(_e,[K.DEF],-2).soundBased(),new je(t.DOUBLE_TEAM,I.NORMAL,-1,15,-1,0,1).attr(_e,[K.EVA],1,!0),new je(t.RECOVER,I.NORMAL,-1,5,-1,0,1).attr(us,.5).triageMove(),new je(t.HARDEN,I.NORMAL,-1,30,-1,0,1).attr(_e,[K.DEF],1,!0),new je(t.MINIMIZE,I.NORMAL,-1,10,-1,0,1).attr(Ht,y.MINIMIZED,!0,!1).attr(_e,[K.EVA],2,!0),new Ge(t.SMOKESCREEN,I.NORMAL,100,20,-1,0,1).attr(_e,[K.ACC],-1),new Ge(t.CONFUSE_RAY,I.GHOST,100,10,-1,0,1).attr(ZE),new je(t.WITHDRAW,I.WATER,-1,40,-1,0,1).attr(_e,[K.DEF],1,!0),new je(t.DEFENSE_CURL,I.NORMAL,-1,40,-1,0,1).attr(_e,[K.DEF],1,!0),new je(t.BARRIER,I.PSYCHIC,-1,20,-1,0,1).attr(_e,[K.DEF],2,!0),new Ge(t.LIGHT_SCREEN,I.PSYCHIC,-1,30,-1,0,1).attr(tE,ge.LIGHT_SCREEN,5,!0).target(15),new je(t.HAZE,I.ICE,-1,30,-1,0,1).ignoresSubstitute().attr(nN,!0),new Ge(t.REFLECT,I.PSYCHIC,-1,20,-1,0,1).attr(tE,ge.REFLECT,5,!0).target(15),new je(t.FOCUS_ENERGY,I.NORMAL,-1,30,-1,0,1).attr(Ht,y.CRIT_BOOST,!0,!0),new g(t.BIDE,I.NORMAL,0,-1,-1,10,-1,1,1).target(0).unimplemented(),new je(t.METRONOME,I.NORMAL,-1,10,-1,0,1).attr(CD,e$),new Ge(t.MIRROR_MOVE,I.FLYING,-1,20,-1,0,1).attr(AL,!0),new g(t.SELF_DESTRUCT,I.NORMAL,0,200,100,5,-1,0,1).attr(Qn).makesContact(!1).condition(Ul).target(4),new g(t.EGG_BOMB,I.NORMAL,0,100,75,10,-1,0,1).makesContact(!1).ballBombMove(),new g(t.LICK,I.GHOST,0,30,100,30,30,0,1).attr(Ot,ne.PARALYSIS),new g(t.SMOG,I.POISON,1,30,70,20,40,0,1).attr(Ot,ne.POISON),new g(t.SLUDGE,I.POISON,1,65,100,20,30,0,1).attr(Ot,ne.POISON),new g(t.BONE_CLUB,I.GROUND,0,65,85,20,10,0,1).attr(rA).makesContact(!1),new g(t.FIRE_BLAST,I.FIRE,1,110,85,5,10,0,1).attr(Ot,ne.BURN),new g(t.WATERFALL,I.WATER,0,80,100,15,20,0,1).attr(rA),new g(t.CLAMP,I.WATER,0,35,85,15,-1,0,1).attr(iO,y.CLAMP),new g(t.SWIFT,I.NORMAL,1,60,-1,20,-1,0,1).target(6),new os(t.SKULL_BASH,I.NORMAL,0,130,100,10,-1,0,1).chargeText(u.t("moveTriggers:loweredItsHead",{pokemonName:"{USER}"})).chargeAttr(_e,[K.DEF],1,!0),new g(t.SPIKE_CANNON,I.NORMAL,0,20,100,15,-1,0,1).attr(TA).makesContact(!1),new g(t.CONSTRICT,I.NORMAL,0,10,100,35,10,0,1).attr(_e,[K.SPD],-1),new je(t.AMNESIA,I.PSYCHIC,-1,20,-1,0,1).attr(_e,[K.SPDEF],2,!0),new Ge(t.KINESIS,I.PSYCHIC,80,15,-1,0,1).attr(_e,[K.ACC],-1),new je(t.SOFT_BOILED,I.NORMAL,-1,5,-1,0,1).attr(us,.5).triageMove(),new g(t.HIGH_JUMP_KICK,I.FIGHTING,0,130,90,10,-1,0,1).attr(LO,TI).attr(yO,TI).condition(SI).recklessMove(),new Ge(t.GLARE,I.NORMAL,100,30,-1,0,1).attr(Ot,ne.PARALYSIS),new g(t.DREAM_EATER,I.PSYCHIC,1,100,100,15,-1,0,1).attr(Ys).condition(s_).triageMove(),new Ge(t.POISON_GAS,I.POISON,90,40,-1,0,1).attr(Ot,ne.POISON).target(6),new g(t.BARRAGE,I.NORMAL,0,15,85,20,-1,0,1).attr(TA).makesContact(!1).ballBombMove(),new g(t.LEECH_LIFE,I.BUG,0,80,100,10,-1,0,1).attr(Ys).triageMove(),new Ge(t.LOVELY_KISS,I.NORMAL,75,10,-1,0,1).attr(Ot,ne.SLEEP),new os(t.SKY_ATTACK,I.FLYING,0,140,90,5,30,0,1).chargeText(u.t("moveTriggers:isGlowing",{pokemonName:"{USER}"})).attr(jA).attr(rA).makesContact(!1),new Ge(t.TRANSFORM,I.NORMAL,-1,10,-1,0,1).attr(jd).condition((E,A,s)=>!A.getTag(y.SUBSTITUTE)&&!E.fusionSpecies&&!A.fusionSpecies).ignoresProtect(),new g(t.BUBBLE,I.WATER,1,40,100,30,10,0,1).attr(_e,[K.SPD],-1).target(6),new g(t.DIZZY_PUNCH,I.NORMAL,0,70,100,10,20,0,1).attr(ZE).punchingMove(),new Ge(t.SPORE,I.GRASS,100,15,-1,0,1).attr(Ot,ne.SLEEP).powderMove(),new Ge(t.FLASH,I.NORMAL,100,20,-1,0,1).attr(_e,[K.ACC],-1),new g(t.PSYWAVE,I.PSYCHIC,1,-1,100,15,-1,0,1).attr(VH),new je(t.SPLASH,I.NORMAL,-1,40,-1,0,1).condition(SI),new je(t.ACID_ARMOR,I.POISON,-1,20,-1,0,1).attr(_e,[K.DEF],2,!0),new g(t.CRABHAMMER,I.WATER,0,100,90,10,-1,0,1).attr(jA),new g(t.EXPLOSION,I.NORMAL,0,250,100,5,-1,0,1).condition(Ul).attr(Qn).makesContact(!1).target(4),new g(t.FURY_SWIPES,I.NORMAL,0,18,80,15,-1,0,1).attr(TA),new g(t.BONEMERANG,I.GROUND,0,50,90,10,-1,0,1).attr(TA,0).makesContact(!1),new je(t.REST,I.PSYCHIC,-1,5,-1,0,1).attr(Ot,ne.SLEEP,!0,3,!0).attr(us,1,!0).condition((E,A,s)=>!E.isFullHp()&&E.canSetStatus(ne.SLEEP,!0,!0)).triageMove(),new g(t.ROCK_SLIDE,I.ROCK,0,75,90,10,30,0,1).attr(rA).makesContact(!1).target(6),new g(t.HYPER_FANG,I.NORMAL,0,80,90,15,10,0,1).attr(rA).bitingMove(),new je(t.SHARPEN,I.NORMAL,-1,30,-1,0,1).attr(_e,[K.ATK],1,!0),new je(t.CONVERSION,I.NORMAL,-1,30,-1,0,1).attr(kd),new g(t.TRI_ATTACK,I.NORMAL,1,80,100,10,20,0,1).attr(Wu,[ne.BURN,ne.FREEZE,ne.PARALYSIS]),new g(t.SUPER_FANG,I.NORMAL,0,-1,90,10,-1,0,1).attr(tN),new g(t.SLASH,I.NORMAL,0,70,100,20,-1,0,1).attr(jA).slicingMove(),new je(t.SUBSTITUTE,I.NORMAL,-1,10,-1,0,1).attr(fu),new g(t.STRUGGLE,I.NORMAL,0,50,-1,1,-1,0,1).attr($s,!0,.25,!0).attr(to).target(7),new Ge(t.SKETCH,I.NORMAL,-1,1,-1,0,2).ignoresSubstitute().attr(Jd),new g(t.TRIPLE_KICK,I.FIGHTING,0,10,90,10,-1,0,2).attr(TA,2).attr(ju,3).checkAllHits(),new g(t.THIEF,I.DARK,0,60,100,25,-1,0,2).attr(Yu,.3),new Ge(t.SPIDER_WEB,I.BUG,-1,10,-1,0,2).condition(ul).attr(Ht,y.TRAPPED,!1,!0,1),new Ge(t.MIND_READER,I.NORMAL,-1,5,-1,0,2).attr(LD),new Ge(t.NIGHTMARE,I.GHOST,100,15,-1,0,2).attr(Ht,y.NIGHTMARE).condition(s_),new g(t.FLAME_WHEEL,I.FIRE,0,60,100,25,10,0,2).attr(eE,!0,ne.FREEZE).attr(Ot,ne.BURN),new g(t.SNORE,I.NORMAL,1,50,100,15,30,0,2).attr(eo).attr(rA).condition(G6).soundBased(),new Ge(t.CURSE,I.GHOST,-1,10,-1,0,2).attr(pd).ignoresSubstitute().ignoresProtect().target(19),new g(t.FLAIL,I.NORMAL,0,-1,100,15,-1,0,2).attr(Xu),new Ge(t.CONVERSION_2,I.NORMAL,-1,30,-1,0,2).attr(i1).ignoresSubstitute().partial(),new g(t.AEROBLAST,I.FLYING,1,100,95,5,-1,0,2).windMove().attr(jA),new Ge(t.COTTON_SPORE,I.GRASS,100,40,-1,0,2).attr(_e,[K.SPD],-2).powderMove().target(6),new g(t.REVERSAL,I.FIGHTING,0,-1,100,15,-1,0,2).attr(Xu),new Ge(t.SPITE,I.GHOST,100,10,-1,0,2).ignoresSubstitute().attr(uD,4),new g(t.POWDER_SNOW,I.ICE,1,40,100,25,10,0,2).attr(Ot,ne.FREEZE).target(6),new je(t.PROTECT,I.NORMAL,-1,10,-1,4,2).attr(JR).condition(dR),new g(t.MACH_PUNCH,I.FIGHTING,0,40,100,30,-1,1,2).punchingMove(),new Ge(t.SCARY_FACE,I.NORMAL,100,10,-1,0,2).attr(_e,[K.SPD],-2),new g(t.FEINT_ATTACK,I.DARK,0,60,-1,20,-1,0,2),new Ge(t.SWEET_KISS,I.FAIRY,75,10,-1,0,2).attr(ZE),new je(t.BELLY_DRUM,I.NORMAL,-1,10,-1,0,2).attr(ON,[K.ATK],12,2,E=>{n.queueMessage(u.t("moveTriggers:cutOwnHpAndMaximizedStat",{pokemonName:te(E),statName:u.t(hE(K.ATK))}))}),new g(t.SLUDGE_BOMB,I.POISON,1,90,100,10,30,0,2).attr(Ot,ne.POISON).ballBombMove(),new g(t.MUD_SLAP,I.GROUND,1,20,100,10,100,0,2).attr(_e,[K.ACC],-1),new g(t.OCTAZOOKA,I.WATER,1,65,85,10,50,0,2).attr(_e,[K.ACC],-1).ballBombMove(),new Ge(t.SPIKES,I.GROUND,-1,20,-1,0,2).attr(er,ge.SPIKES).target(16),new g(t.ZAP_CANNON,I.ELECTRIC,1,120,50,5,100,0,2).attr(Ot,ne.PARALYSIS).ballBombMove(),new Ge(t.FORESIGHT,I.NORMAL,-1,40,-1,0,2).attr(oN,y.IGNORE_GHOST).ignoresSubstitute(),new je(t.DESTINY_BOND,I.GHOST,-1,5,-1,0,2).ignoresProtect().attr(E1).condition((E,A,s)=>{const R=E.getLastXMoves(1);return R.length===0||R[0].move!==s.id||R[0].result!==oA.SUCCESS}),new Ge(t.PERISH_SONG,I.NORMAL,-1,5,-1,0,2).attr(Yd).ignoresProtect().soundBased().condition(E_).target(14),new g(t.ICY_WIND,I.ICE,1,55,95,15,100,0,2).attr(_e,[K.SPD],-1).windMove().target(6),new je(t.DETECT,I.FIGHTING,-1,5,-1,4,2).attr(JR).condition(dR),new g(t.BONE_RUSH,I.GROUND,0,25,90,10,-1,0,2).attr(TA).makesContact(!1),new Ge(t.LOCK_ON,I.NORMAL,-1,5,-1,0,2).attr(LD),new g(t.OUTRAGE,I.DRAGON,0,120,100,10,-1,0,2).attr(ji).attr(LO,Kn).attr(yO,Kn).target(7),new Ge(t.SANDSTORM,I.ROCK,-1,10,-1,0,2).attr(Ma,Oe.SANDSTORM).target(17),new g(t.GIGA_DRAIN,I.GRASS,1,75,100,10,-1,0,2).attr(Ys).triageMove(),new je(t.ENDURE,I.NORMAL,-1,10,-1,4,2).attr(JR,y.ENDURING).condition(dR),new Ge(t.CHARM,I.FAIRY,100,20,-1,0,2).attr(_e,[K.ATK],-2),new g(t.ROLLOUT,I.ROCK,0,30,90,20,-1,0,2).partial().attr(Ur,5,!0,!0,t.DEFENSE_CURL),new g(t.FALSE_SWIPE,I.NORMAL,0,40,100,40,-1,0,2).attr(Hu),new Ge(t.SWAGGER,I.NORMAL,85,15,-1,0,2).attr(_e,[K.ATK],2).attr(ZE),new je(t.MILK_DRINK,I.NORMAL,-1,5,-1,0,2).attr(us,.5).triageMove(),new g(t.SPARK,I.ELECTRIC,0,65,100,20,30,0,2).attr(Ot,ne.PARALYSIS),new g(t.FURY_CUTTER,I.BUG,0,40,95,20,-1,0,2).attr(Ur,3,!0).slicingMove(),new g(t.STEEL_WING,I.STEEL,0,70,90,25,10,0,2).attr(_e,[K.DEF],1,!0),new Ge(t.MEAN_LOOK,I.NORMAL,-1,5,-1,0,2).condition(ul).attr(Ht,y.TRAPPED,!1,!0,1),new Ge(t.ATTRACT,I.NORMAL,100,15,-1,0,2).attr(Ht,y.INFATUATED).ignoresSubstitute().condition((E,A,s)=>E.isOppositeGender(A)),new je(t.SLEEP_TALK,I.NORMAL,-1,10,-1,0,2).attr(eo).attr(Eo,A$,!1).condition(G6).target(5),new Ge(t.HEAL_BELL,I.NORMAL,-1,5,-1,0,2).attr(AN,u.t("moveTriggers:bellChimed"),O.SOUNDPROOF).soundBased().target(18),new g(t.RETURN,I.NORMAL,0,-1,100,20,-1,0,2).attr(qi),new g(t.PRESENT,I.NORMAL,0,-1,90,15,-1,0,2).attr(id).makesContact(!1),new g(t.FRUSTRATION,I.NORMAL,0,-1,100,20,-1,0,2).attr(qi,!0),new Ge(t.SAFEGUARD,I.NORMAL,-1,25,-1,0,2).target(15).attr(tE,ge.SAFEGUARD,5,!0,!0),new Ge(t.PAIN_SPLIT,I.NORMAL,-1,20,-1,0,2).attr(ed).condition(E_),new g(t.SACRED_FIRE,I.FIRE,0,100,95,5,50,0,2).attr(eE,!0,ne.FREEZE).attr(Ot,ne.BURN).makesContact(!1),new g(t.MAGNITUDE,I.GROUND,0,-1,100,30,-1,0,2).attr(ya,jJ).attr(nd).attr(HA,(E,A,s)=>n.arena.getTerrainType()===Tt.GRASSY&&A.isGrounded()?.5:1).attr(iR,y.UNDERGROUND).makesContact(!1).target(4),new g(t.DYNAMIC_PUNCH,I.FIGHTING,0,100,50,5,100,0,2).attr(ZE).punchingMove(),new g(t.MEGAHORN,I.BUG,0,120,85,10,-1,0,2),new g(t.DRAGON_BREATH,I.DRAGON,1,60,100,20,30,0,2).attr(Ot,ne.PARALYSIS),new je(t.BATON_PASS,I.NORMAL,-1,40,-1,0,2).attr(zs,!0,iA.BATON_PASS).condition(c6).hidesUser(),new Ge(t.ENCORE,I.NORMAL,100,5,-1,0,2).attr(Ht,y.ENCORE,!1,!0).ignoresSubstitute().condition((E,A,s)=>new xS(E.id).canAdd(A)),new g(t.PURSUIT,I.DARK,0,40,100,20,-1,0,2).partial(),new g(t.RAPID_SPIN,I.NORMAL,0,50,100,40,100,0,2).attr(_e,[K.SPD],1,!0).attr(yn,[y.BIND,y.WRAP,y.FIRE_SPIN,y.WHIRLPOOL,y.CLAMP,y.SAND_TOMB,y.MAGMA_STORM,y.SNAP_TRAP,y.THUNDER_CAGE,y.SEEDED,y.INFESTATION],!0).attr(tr),new Ge(t.SWEET_SCENT,I.NORMAL,100,20,-1,0,2).attr(_e,[K.EVA],-2).target(6),new g(t.IRON_TAIL,I.STEEL,0,100,75,15,30,0,2).attr(_e,[K.DEF],-1),new g(t.METAL_CLAW,I.STEEL,0,50,95,35,10,0,2).attr(_e,[K.ATK],1,!0),new g(t.VITAL_THROW,I.FIGHTING,0,70,-1,10,-1,-1,2),new je(t.MORNING_SUN,I.NORMAL,-1,5,-1,0,2).attr(EN).triageMove(),new je(t.SYNTHESIS,I.GRASS,-1,5,-1,0,2).attr(EN).triageMove(),new je(t.MOONLIGHT,I.FAIRY,-1,5,-1,0,2).attr(EN).triageMove(),new g(t.HIDDEN_POWER,I.NORMAL,1,60,100,15,-1,0,2).attr(Hd),new g(t.CROSS_CHOP,I.FIGHTING,0,100,80,5,-1,0,2).attr(jA),new g(t.TWISTER,I.DRAGON,1,40,100,20,20,0,2).attr(iR,y.FLYING).attr(rA).windMove().target(6),new Ge(t.RAIN_DANCE,I.WATER,-1,5,-1,0,2).attr(Ma,Oe.RAIN).target(17),new Ge(t.SUNNY_DAY,I.FIRE,-1,5,-1,0,2).attr(Ma,Oe.SUNNY).target(17),new g(t.CRUNCH,I.DARK,0,80,100,15,20,0,2).attr(_e,[K.DEF],-1).bitingMove(),new g(t.MIRROR_COAT,I.PSYCHIC,1,-1,100,20,-1,-5,2).attr(wa,E=>E.category===1,2).target(9),new Ge(t.PSYCH_UP,I.NORMAL,-1,10,-1,0,2).ignoresSubstitute().attr(qH),new g(t.EXTREME_SPEED,I.NORMAL,0,80,100,5,-1,2,2),new g(t.ANCIENT_POWER,I.ROCK,1,60,100,5,10,0,2).attr(_e,[K.ATK,K.DEF,K.SPATK,K.SPDEF,K.SPD],1,!0),new g(t.SHADOW_BALL,I.GHOST,1,80,100,15,20,0,2).attr(_e,[K.SPDEF],-1).ballBombMove(),new g(t.FUTURE_SIGHT,I.PSYCHIC,1,120,100,10,-1,0,2).partial().ignoresProtect().attr(EI,ge.FUTURE_SIGHT,AI.FUTURE_SIGHT_CHARGING,u.t("moveTriggers:foresawAnAttack",{pokemonName:"{USER}"})),new g(t.ROCK_SMASH,I.FIGHTING,0,40,100,15,50,0,2).attr(_e,[K.DEF],-1),new g(t.WHIRLPOOL,I.WATER,1,35,85,15,-1,0,2).attr(iO,y.WHIRLPOOL).attr(iR,y.UNDERWATER),new g(t.BEAT_UP,I.DARK,0,-1,100,10,-1,0,2).attr(TA,4).attr(Ad).makesContact(!1),new g(t.FAKE_OUT,I.NORMAL,0,40,100,10,100,3,3).attr(rA).condition(new SN),new g(t.UPROAR,I.NORMAL,1,90,100,10,-1,0,3).soundBased().target(7).partial(),new je(t.STOCKPILE,I.NORMAL,-1,20,-1,0,3).condition(E=>{var A;return(((A=E.getTag(Si))==null?void 0:A.stockpiledCount)??0)<3}).attr(Ht,y.STOCKPILING,!0),new g(t.SPIT_UP,I.NORMAL,1,-1,-1,10,-1,0,3).condition(P6).attr(Ld,100).attr(yn,[y.STOCKPILING],!0),new je(t.SWALLOW,I.NORMAL,-1,10,-1,0,3).condition(P6).attr(Nd).attr(yn,[y.STOCKPILING],!0).triageMove(),new g(t.HEAT_WAVE,I.FIRE,1,95,90,10,10,0,3).attr(eE,!0,ne.FREEZE).attr(Ot,ne.BURN).windMove().target(6),new Ge(t.HAIL,I.ICE,-1,10,-1,0,3).attr(Ma,Oe.HAIL).target(17),new Ge(t.TORMENT,I.DARK,100,15,-1,0,3).ignoresSubstitute().edgeCase().attr(Ht,y.TORMENT,!1,!0,1),new Ge(t.FLATTER,I.DARK,100,15,-1,0,3).attr(_e,[K.SPATK],1).attr(ZE),new Ge(t.WILL_O_WISP,I.FIRE,85,15,-1,0,3).attr(Ot,ne.BURN),new Ge(t.MEMENTO,I.DARK,100,10,-1,0,3).attr(oi).attr(_e,[K.ATK,K.SPATK],-2),new g(t.FACADE,I.NORMAL,0,70,100,20,-1,0,3).attr(HA,(E,A,s)=>E.status&&(E.status.effect===ne.BURN||E.status.effect===ne.POISON||E.status.effect===ne.TOXIC||E.status.effect===ne.PARALYSIS)?2:1).attr(vu),new g(t.FOCUS_PUNCH,I.FIGHTING,0,150,100,20,-1,-3,3).attr(yH,(E,A)=>u.t("moveTriggers:isTighteningFocus",{pokemonName:te(E)})).punchingMove().condition((E,A,s)=>!E.turnData.attacksReceived.find(R=>R.damage)),new g(t.SMELLING_SALTS,I.NORMAL,0,70,100,10,-1,0,3).attr(HA,(E,A,s)=>{var R;return((R=A.status)==null?void 0:R.effect)===ne.PARALYSIS?2:1}).attr(eE,!0,ne.PARALYSIS),new je(t.FOLLOW_ME,I.NORMAL,-1,20,-1,2,3).attr(Ht,y.CENTER_OF_ATTENTION,!0),new Ge(t.NATURE_POWER,I.NORMAL,-1,20,-1,0,3).attr(UD),new je(t.CHARGE,I.ELECTRIC,-1,20,-1,0,3).attr(_e,[K.SPDEF],1,!0).attr(Ht,y.CHARGED,!0,!1),new Ge(t.TAUNT,I.DARK,100,20,-1,0,3).ignoresSubstitute().attr(Ht,y.TAUNT,!1,!0,4),new Ge(t.HELPING_HAND,I.NORMAL,-1,20,-1,5,3).attr(Ht,y.HELPING_HAND).ignoresSubstitute().target(10).condition(yi),new Ge(t.TRICK,I.PSYCHIC,100,10,-1,0,3).unimplemented(),new Ge(t.ROLE_PLAY,I.PSYCHIC,-1,10,-1,0,3).ignoresSubstitute().attr(MD),new je(t.WISH,I.NORMAL,-1,10,-1,0,3).triageMove().attr(tE,ge.WISH,2,!0),new je(t.ASSIST,I.NORMAL,-1,20,-1,0,3).attr(Eo,t$,!0),new je(t.INGRAIN,I.GRASS,-1,20,-1,0,3).attr(Ht,y.INGRAIN,!0,!0).attr(Ht,y.IGNORE_FLYING,!0,!0).attr(yn,[y.FLOATING],!0),new g(t.SUPERPOWER,I.FIGHTING,0,120,100,5,-1,0,3).attr(_e,[K.ATK,K.DEF],-1,!0),new je(t.MAGIC_COAT,I.PSYCHIC,-1,15,-1,4,3).unimplemented(),new je(t.RECYCLE,I.NORMAL,-1,10,-1,0,3).unimplemented(),new g(t.REVENGE,I.FIGHTING,0,60,100,10,-1,-4,3).attr($u),new g(t.BRICK_BREAK,I.FIGHTING,0,75,100,15,-1,0,3).attr(Ar),new Ge(t.YAWN,I.NORMAL,-1,10,-1,0,3).attr(Ht,y.DROWSY,!1,!0).condition((E,A,s)=>!A.status&&!A.isSafeguarded(E)),new g(t.KNOCK_OFF,I.DARK,0,65,100,20,-1,0,3).attr(HA,(E,A,s)=>A.getHeldItems().filter(R=>R.isTransferable).length>0?1.5:1).attr(yu,!1),new g(t.ENDEAVOR,I.NORMAL,0,-1,100,5,-1,0,3).attr(vH).condition(E_),new g(t.ERUPTION,I.FIRE,1,150,100,5,-1,0,3).attr(aN).target(6),new Ge(t.SKILL_SWAP,I.PSYCHIC,-1,10,-1,0,3).ignoresSubstitute().attr(zd),new Ge(t.IMPRISON,I.PSYCHIC,100,10,-1,0,3).ignoresSubstitute().attr(tE,ge.IMPRISON,1,!0,!1).target(16),new je(t.REFRESH,I.NORMAL,-1,20,-1,0,3).attr(eE,!0,[ne.PARALYSIS,ne.POISON,ne.TOXIC,ne.BURN]).condition((E,A,s)=>!!E.status&&(E.status.effect===ne.PARALYSIS||E.status.effect===ne.POISON||E.status.effect===ne.TOXIC||E.status.effect===ne.BURN)),new je(t.GRUDGE,I.GHOST,-1,5,-1,0,3).attr(Ht,y.GRUDGE,!0,void 0,1),new je(t.SNATCH,I.DARK,-1,10,-1,4,3).unimplemented(),new g(t.SECRET_POWER,I.NORMAL,0,70,100,20,30,0,3).makesContact(!1).attr(xu),new os(t.DIVE,I.WATER,0,80,100,10,-1,0,3).chargeText(u.t("moveTriggers:hidUnderwater",{pokemonName:"{USER}"})).chargeAttr(Yn,y.UNDERWATER).chargeAttr(rD),new g(t.ARM_THRUST,I.FIGHTING,0,15,100,20,-1,0,3).attr(TA),new je(t.CAMOUFLAGE,I.NORMAL,-1,20,-1,0,3).attr(bd),new je(t.TAIL_GLOW,I.BUG,-1,20,-1,0,3).attr(_e,[K.SPATK],3,!0),new g(t.LUSTER_PURGE,I.PSYCHIC,1,95,100,5,50,0,3).attr(_e,[K.SPDEF],-1),new g(t.MIST_BALL,I.PSYCHIC,1,95,100,5,50,0,3).attr(_e,[K.SPATK],-1).ballBombMove(),new Ge(t.FEATHER_DANCE,I.FLYING,100,15,-1,0,3).attr(_e,[K.ATK],-2).danceMove(),new Ge(t.TEETER_DANCE,I.NORMAL,100,20,-1,0,3).attr(ZE).danceMove().target(4),new g(t.BLAZE_KICK,I.FIRE,0,85,90,10,10,0,3).attr(jA).attr(Ot,ne.BURN),new Ge(t.MUD_SPORT,I.GROUND,-1,15,-1,0,3).ignoresProtect().attr(tE,ge.MUD_SPORT,5).target(17),new g(t.ICE_BALL,I.ICE,0,30,90,20,-1,0,3).partial().attr(Ur,5,!0,!0,t.DEFENSE_CURL).ballBombMove(),new g(t.NEEDLE_ARM,I.GRASS,0,60,100,15,30,0,3).attr(rA),new je(t.SLACK_OFF,I.NORMAL,-1,5,-1,0,3).attr(us,.5).triageMove(),new g(t.HYPER_VOICE,I.NORMAL,1,90,100,10,-1,0,3).soundBased().target(6),new g(t.POISON_FANG,I.POISON,0,50,100,15,50,0,3).attr(Ot,ne.TOXIC).bitingMove(),new g(t.CRUSH_CLAW,I.NORMAL,0,75,95,10,50,0,3).attr(_e,[K.DEF],-1),new g(t.BLAST_BURN,I.FIRE,1,150,90,5,-1,0,3).attr(QR),new g(t.HYDRO_CANNON,I.WATER,1,150,90,5,-1,0,3).attr(QR),new g(t.METEOR_MASH,I.STEEL,0,90,90,10,20,0,3).attr(_e,[K.ATK],1,!0).punchingMove(),new g(t.ASTONISH,I.GHOST,0,30,100,15,30,0,3).attr(rA),new g(t.WEATHER_BALL,I.NORMAL,1,50,100,10,-1,0,3).attr(cd).attr(HA,(E,A,s)=>{var R,a;return[Oe.SUNNY,Oe.RAIN,Oe.SANDSTORM,Oe.HAIL,Oe.SNOW,Oe.FOG,Oe.HEAVY_RAIN,Oe.HARSH_SUN].includes((R=n.arena.weather)==null?void 0:R.weatherType)&&!((a=n.arena.weather)!=null&&a.isEffectSuppressed())?2:1}).ballBombMove(),new Ge(t.AROMATHERAPY,I.GRASS,-1,5,-1,0,3).attr(AN,u.t("moveTriggers:soothingAromaWaftedThroughArea"),O.SAP_SIPPER).target(18),new Ge(t.FAKE_TEARS,I.DARK,100,20,-1,0,3).attr(_e,[K.SPDEF],-2),new g(t.AIR_CUTTER,I.FLYING,1,60,95,25,-1,0,3).attr(jA).slicingMove().windMove().target(6),new g(t.OVERHEAT,I.FIRE,1,130,90,5,-1,0,3).attr(_e,[K.SPATK],-2,!0).attr(eE,!0,ne.FREEZE),new Ge(t.ODOR_SLEUTH,I.NORMAL,-1,40,-1,0,3).attr(oN,y.IGNORE_GHOST).ignoresSubstitute(),new g(t.ROCK_TOMB,I.ROCK,0,60,95,15,100,0,3).attr(_e,[K.SPD],-1).makesContact(!1),new g(t.SILVER_WIND,I.BUG,1,60,100,5,10,0,3).attr(_e,[K.ATK,K.DEF,K.SPATK,K.SPDEF,K.SPD],1,!0).windMove(),new Ge(t.METAL_SOUND,I.STEEL,85,40,-1,0,3).attr(_e,[K.SPDEF],-2).soundBased(),new Ge(t.GRASS_WHISTLE,I.GRASS,55,15,-1,0,3).attr(Ot,ne.SLEEP).soundBased(),new Ge(t.TICKLE,I.NORMAL,100,20,-1,0,3).attr(_e,[K.ATK,K.DEF],-1),new je(t.COSMIC_POWER,I.PSYCHIC,-1,20,-1,0,3).attr(_e,[K.DEF,K.SPDEF],1,!0),new g(t.WATER_SPOUT,I.WATER,1,150,100,5,-1,0,3).attr(aN).target(6),new g(t.SIGNAL_BEAM,I.BUG,1,75,100,15,10,0,3).attr(ZE),new g(t.SHADOW_PUNCH,I.GHOST,0,60,-1,20,-1,0,3).punchingMove(),new g(t.EXTRASENSORY,I.PSYCHIC,1,80,100,20,10,0,3).attr(rA),new g(t.SKY_UPPERCUT,I.FIGHTING,0,85,90,15,-1,0,3).attr(FR,y.FLYING).punchingMove(),new g(t.SAND_TOMB,I.GROUND,0,35,85,15,-1,0,3).attr(iO,y.SAND_TOMB).makesContact(!1),new g(t.SHEER_COLD,I.ICE,1,200,20,5,-1,0,3).attr(Bd).attr(QO).attr(md),new g(t.MUDDY_WATER,I.WATER,1,90,85,10,30,0,3).attr(_e,[K.ACC],-1).target(6),new g(t.BULLET_SEED,I.GRASS,0,25,100,30,-1,0,3).attr(TA).makesContact(!1).ballBombMove(),new g(t.AERIAL_ACE,I.FLYING,0,60,-1,20,-1,0,3).slicingMove(),new g(t.ICICLE_SPEAR,I.ICE,0,25,100,30,-1,0,3).attr(TA).makesContact(!1),new je(t.IRON_DEFENSE,I.STEEL,-1,15,-1,0,3).attr(_e,[K.DEF],2,!0),new Ge(t.BLOCK,I.NORMAL,-1,5,-1,0,3).condition(ul).attr(Ht,y.TRAPPED,!1,!0,1),new Ge(t.HOWL,I.NORMAL,-1,40,-1,0,3).attr(_e,[K.ATK],1).soundBased().target(13),new g(t.DRAGON_CLAW,I.DRAGON,0,80,100,15,-1,0,3),new g(t.FRENZY_PLANT,I.GRASS,1,150,90,5,-1,0,3).attr(QR),new je(t.BULK_UP,I.FIGHTING,-1,20,-1,0,3).attr(_e,[K.ATK,K.DEF],1,!0),new os(t.BOUNCE,I.FLYING,0,85,85,5,30,0,3).chargeText(u.t("moveTriggers:sprangUp",{pokemonName:"{USER}"})).chargeAttr(Yn,y.FLYING).attr(Ot,ne.PARALYSIS).condition(SI),new g(t.MUD_SHOT,I.GROUND,1,55,95,15,100,0,3).attr(_e,[K.SPD],-1),new g(t.POISON_TAIL,I.POISON,0,50,100,25,10,0,3).attr(jA).attr(Ot,ne.POISON),new g(t.COVET,I.NORMAL,0,60,100,25,-1,0,3).attr(Yu,.3),new g(t.VOLT_TACKLE,I.ELECTRIC,0,120,100,15,10,0,3).attr($s,!1,.33).attr(Ot,ne.PARALYSIS).recklessMove(),new g(t.MAGICAL_LEAF,I.GRASS,1,60,-1,20,-1,0,3),new Ge(t.WATER_SPORT,I.WATER,-1,15,-1,0,3).ignoresProtect().attr(tE,ge.WATER_SPORT,5).target(17),new je(t.CALM_MIND,I.PSYCHIC,-1,20,-1,0,3).attr(_e,[K.SPATK,K.SPDEF],1,!0),new g(t.LEAF_BLADE,I.GRASS,0,90,100,15,-1,0,3).attr(jA).slicingMove(),new je(t.DRAGON_DANCE,I.DRAGON,-1,20,-1,0,3).attr(_e,[K.ATK,K.SPD],1,!0).danceMove(),new g(t.ROCK_BLAST,I.ROCK,0,25,90,10,-1,0,3).attr(TA).makesContact(!1).ballBombMove(),new g(t.SHOCK_WAVE,I.ELECTRIC,1,60,-1,20,-1,0,3),new g(t.WATER_PULSE,I.WATER,1,60,100,20,20,0,3).attr(ZE).pulseMove(),new g(t.DOOM_DESIRE,I.STEEL,1,140,100,5,-1,0,3).partial().ignoresProtect().attr(EI,ge.DOOM_DESIRE,AI.DOOM_DESIRE_CHARGING,u.t("moveTriggers:choseDoomDesireAsDestiny",{pokemonName:"{USER}"})),new g(t.PSYCHO_BOOST,I.PSYCHIC,1,140,90,5,-1,0,3).attr(_e,[K.SPATK],-2,!0),new je(t.ROOST,I.FLYING,-1,5,-1,0,4).attr(us,.5).attr(Ht,y.ROOSTED,!0,!1).triageMove(),new Ge(t.GRAVITY,I.PSYCHIC,-1,5,-1,0,4).ignoresProtect().attr(tE,ge.GRAVITY,5).target(17),new Ge(t.MIRACLE_EYE,I.PSYCHIC,-1,40,-1,0,4).attr(oN,y.IGNORE_DARK).ignoresSubstitute(),new g(t.WAKE_UP_SLAP,I.FIGHTING,0,70,100,10,-1,0,4).attr(HA,(E,A,s)=>s_(E,A)?2:1).attr(eE,!1,ne.SLEEP),new g(t.HAMMER_ARM,I.FIGHTING,0,100,90,10,-1,0,4).attr(_e,[K.SPD],-1,!0).punchingMove(),new g(t.GYRO_BALL,I.STEEL,0,-1,100,5,-1,0,4).attr(Od).ballBombMove(),new je(t.HEALING_WISH,I.PSYCHIC,-1,10,-1,0,4).attr(Bu,!1,"moveTriggers:sacrificialFullRestore").triageMove(),new g(t.BRINE,I.WATER,1,65,100,10,-1,0,4).attr(HA,(E,A,s)=>A.getHpRatio()<.5?2:1),new g(t.NATURAL_GIFT,I.NORMAL,0,-1,100,15,-1,0,4).makesContact(!1).unimplemented(),new g(t.FEINT,I.NORMAL,0,30,100,10,-1,2,4).attr(yn,[y.PROTECTED]).attr(ND,[ge.QUICK_GUARD,ge.WIDE_GUARD,ge.MAT_BLOCK,ge.CRAFTY_SHIELD],!1).makesContact(!1).ignoresProtect(),new g(t.PLUCK,I.FLYING,0,60,100,20,-1,0,4).attr(wu),new Ge(t.TAILWIND,I.FLYING,-1,15,-1,0,4).windMove().attr(tE,ge.TAILWIND,4,!0).target(15),new Ge(t.ACUPRESSURE,I.NORMAL,-1,30,-1,0,4).attr(JH).target(12),new g(t.METAL_BURST,I.STEEL,0,-1,100,10,-1,0,4).attr(wa,E=>E.category===0||E.category===1,1.5).redirectCounter().makesContact(!1).target(9),new g(t.U_TURN,I.BUG,0,70,100,20,-1,0,4).attr(zs,!0),new g(t.CLOSE_COMBAT,I.FIGHTING,0,120,100,5,-1,0,4).attr(_e,[K.DEF,K.SPDEF],-1,!0),new g(t.PAYBACK,I.DARK,0,50,100,10,-1,0,4).attr(HA,(E,A,s)=>{var R;return A.getLastXMoves(1).find(a=>a.turn===n.currentBattle.turn)||((R=n.currentBattle.turnCommands[A.getBattlerIndex()])==null?void 0:R.command)===LA.BALL?2:1}),new g(t.ASSURANCE,I.DARK,0,60,100,10,-1,0,4).attr(HA,(E,A,s)=>A.turnData.damageTaken>0?2:1),new Ge(t.EMBARGO,I.DARK,100,15,-1,0,4).unimplemented(),new g(t.FLING,I.DARK,0,-1,100,10,-1,0,4).makesContact(!1).unimplemented(),new Ge(t.PSYCHO_SHIFT,I.PSYCHIC,100,10,-1,0,4).attr(XH).condition((E,A,s)=>{var a;let R=E.hasAbility(O.COMATOSE)?ne.SLEEP:void 0;return(a=E.status)!=null&&a.effect&&Px(E.status.effect)&&(R=E.status.effect),!!R&&A.canSetStatus(R,!1,!1,E)}),new g(t.TRUMP_CARD,I.NORMAL,1,-1,-1,5,-1,0,4).makesContact().attr(td),new Ge(t.HEAL_BLOCK,I.PSYCHIC,100,15,-1,0,4).attr(Ht,y.HEAL_BLOCK,!1,!0,5).target(6),new g(t.WRING_OUT,I.NORMAL,1,-1,100,5,-1,0,4).attr(iN,120).makesContact(),new je(t.POWER_TRICK,I.PSYCHIC,-1,10,-1,0,4).attr(Ht,y.POWER_TRICK,!0),new Ge(t.GASTRO_ACID,I.POISON,100,10,-1,0,4).attr(_D),new Ge(t.LUCKY_CHANT,I.NORMAL,-1,30,-1,0,4).attr(tE,ge.NO_CRIT,5,!0,!0).target(15),new Ge(t.ME_FIRST,I.NORMAL,-1,20,-1,0,4).ignoresSubstitute().target(5).unimplemented(),new je(t.COPYCAT,I.NORMAL,-1,20,-1,0,4).attr(AL,!1,E$),new Ge(t.POWER_SWAP,I.PSYCHIC,-1,10,100,0,4).attr(IN,[K.ATK,K.SPATK]).ignoresSubstitute(),new Ge(t.GUARD_SWAP,I.PSYCHIC,-1,10,100,0,4).attr(IN,[K.DEF,K.SPDEF]).ignoresSubstitute(),new g(t.PUNISHMENT,I.DARK,0,-1,100,5,-1,0,4).makesContact(!0).attr(ad),new g(t.LAST_RESORT,I.NORMAL,0,140,100,5,-1,0,4).attr(O1),new Ge(t.WORRY_SEED,I.GRASS,100,10,-1,0,4).attr(DD,O.INSOMNIA),new g(t.SUCKER_PUNCH,I.DARK,0,70,100,5,-1,1,4).condition((E,A,s)=>{var R,a,i;return((R=n.currentBattle.turnCommands[A.getBattlerIndex()])==null?void 0:R.command)===LA.FIGHT&&!A.turnData.acted&&we[(i=(a=n.currentBattle.turnCommands[A.getBattlerIndex()])==null?void 0:a.move)==null?void 0:i.move].category!==2}),new Ge(t.TOXIC_SPIKES,I.POISON,-1,20,-1,0,4).attr(er,ge.TOXIC_SPIKES).target(16),new Ge(t.HEART_SWAP,I.PSYCHIC,-1,10,-1,0,4).attr(IN,dO).ignoresSubstitute(),new je(t.AQUA_RING,I.WATER,-1,20,-1,0,4).attr(Ht,y.AQUA_RING,!0,!0),new je(t.MAGNET_RISE,I.ELECTRIC,-1,10,-1,0,4).attr(Ht,y.FLOATING,!0,!0,5).condition((E,A,s)=>!n.arena.getTag(ge.GRAVITY)&&[y.FLOATING,y.IGNORE_FLYING,y.INGRAIN].every(R=>!E.getTag(R))),new g(t.FLARE_BLITZ,I.FIRE,0,120,100,15,10,0,4).attr($s,!1,.33).attr(eE,!0,ne.FREEZE).attr(Ot,ne.BURN).recklessMove(),new g(t.FORCE_PALM,I.FIGHTING,0,60,100,10,30,0,4).attr(Ot,ne.PARALYSIS),new g(t.AURA_SPHERE,I.FIGHTING,1,80,-1,20,-1,0,4).pulseMove().ballBombMove(),new je(t.ROCK_POLISH,I.ROCK,-1,20,-1,0,4).attr(_e,[K.SPD],2,!0),new g(t.POISON_JAB,I.POISON,0,80,100,20,30,0,4).attr(Ot,ne.POISON),new g(t.DARK_PULSE,I.DARK,1,80,100,15,20,0,4).attr(rA).pulseMove(),new g(t.NIGHT_SLASH,I.DARK,0,70,100,15,-1,0,4).attr(jA).slicingMove(),new g(t.AQUA_TAIL,I.WATER,0,90,90,10,-1,0,4),new g(t.SEED_BOMB,I.GRASS,0,80,100,15,-1,0,4).makesContact(!1).ballBombMove(),new g(t.AIR_SLASH,I.FLYING,1,75,95,15,30,0,4).attr(rA).slicingMove(),new g(t.X_SCISSOR,I.BUG,0,80,100,15,-1,0,4).slicingMove(),new g(t.BUG_BUZZ,I.BUG,1,90,100,10,10,0,4).attr(_e,[K.SPDEF],-1).soundBased(),new g(t.DRAGON_PULSE,I.DRAGON,1,85,100,10,-1,0,4).pulseMove(),new g(t.DRAGON_RUSH,I.DRAGON,0,100,75,10,20,0,4).attr(In).attr(iR,y.MINIMIZED).attr(rA),new g(t.POWER_GEM,I.ROCK,1,80,100,20,-1,0,4),new g(t.DRAIN_PUNCH,I.FIGHTING,0,75,100,10,-1,0,4).attr(Ys).punchingMove().triageMove(),new g(t.VACUUM_WAVE,I.FIGHTING,1,40,100,30,-1,1,4),new g(t.FOCUS_BLAST,I.FIGHTING,1,120,70,5,10,0,4).attr(_e,[K.SPDEF],-1).ballBombMove(),new g(t.ENERGY_BALL,I.GRASS,1,90,100,10,10,0,4).attr(_e,[K.SPDEF],-1).ballBombMove(),new g(t.BRAVE_BIRD,I.FLYING,0,120,100,15,-1,0,4).attr($s,!1,.33).recklessMove(),new g(t.EARTH_POWER,I.GROUND,1,90,100,10,10,0,4).attr(_e,[K.SPDEF],-1),new Ge(t.SWITCHEROO,I.DARK,100,10,-1,0,4).unimplemented(),new g(t.GIGA_IMPACT,I.NORMAL,0,150,90,5,-1,0,4).attr(QR),new je(t.NASTY_PLOT,I.DARK,-1,20,-1,0,4).attr(_e,[K.SPATK],2,!0),new g(t.BULLET_PUNCH,I.STEEL,0,40,100,30,-1,1,4).punchingMove(),new g(t.AVALANCHE,I.ICE,0,60,100,10,-1,-4,4).attr($u),new g(t.ICE_SHARD,I.ICE,0,40,100,30,-1,1,4).makesContact(!1),new g(t.SHADOW_CLAW,I.GHOST,0,70,100,15,-1,0,4).attr(jA),new g(t.THUNDER_FANG,I.ELECTRIC,0,65,95,15,10,0,4).attr(rA).attr(Ot,ne.PARALYSIS).bitingMove(),new g(t.ICE_FANG,I.ICE,0,65,95,15,10,0,4).attr(rA).attr(Ot,ne.FREEZE).bitingMove(),new g(t.FIRE_FANG,I.FIRE,0,65,95,15,10,0,4).attr(rA).attr(Ot,ne.BURN).bitingMove(),new g(t.SHADOW_SNEAK,I.GHOST,0,40,100,30,-1,1,4),new g(t.MUD_BOMB,I.GROUND,1,65,85,10,30,0,4).attr(_e,[K.ACC],-1).ballBombMove(),new g(t.PSYCHO_CUT,I.PSYCHIC,0,70,100,20,-1,0,4).attr(jA).slicingMove().makesContact(!1),new g(t.ZEN_HEADBUTT,I.PSYCHIC,0,80,90,15,20,0,4).attr(rA),new g(t.MIRROR_SHOT,I.STEEL,1,65,85,10,30,0,4).attr(_e,[K.ACC],-1),new g(t.FLASH_CANNON,I.STEEL,1,80,100,10,10,0,4).attr(_e,[K.SPDEF],-1),new g(t.ROCK_CLIMB,I.NORMAL,0,90,85,20,20,0,4).attr(ZE),new Ge(t.DEFOG,I.FLYING,-1,15,-1,0,4).attr(_e,[K.EVA],-1).attr(QH,Oe.FOG).attr(zi).attr(Ar,!1).attr(tr,!0).attr(ND,[ge.MIST,ge.SAFEGUARD],!1),new Ge(t.TRICK_ROOM,I.PSYCHIC,-1,5,-1,-7,4).attr(tE,ge.TRICK_ROOM,5).ignoresProtect().target(17),new g(t.DRACO_METEOR,I.DRAGON,1,130,90,5,-1,0,4).attr(_e,[K.SPATK],-2,!0),new g(t.DISCHARGE,I.ELECTRIC,1,80,100,15,30,0,4).attr(Ot,ne.PARALYSIS).target(4),new g(t.LAVA_PLUME,I.FIRE,1,80,100,15,30,0,4).attr(Ot,ne.BURN).target(4),new g(t.LEAF_STORM,I.GRASS,1,130,90,5,-1,0,4).attr(_e,[K.SPATK],-2,!0),new g(t.POWER_WHIP,I.GRASS,0,120,85,10,-1,0,4),new g(t.ROCK_WRECKER,I.ROCK,0,150,90,5,-1,0,4).attr(QR).makesContact(!1).ballBombMove(),new g(t.CROSS_POISON,I.POISON,0,70,100,20,10,0,4).attr(jA).attr(Ot,ne.POISON).slicingMove(),new g(t.GUNK_SHOT,I.POISON,0,120,80,5,30,0,4).attr(Ot,ne.POISON).makesContact(!1),new g(t.IRON_HEAD,I.STEEL,0,80,100,15,30,0,4).attr(rA),new g(t.MAGNET_BOMB,I.STEEL,0,60,-1,20,-1,0,4).makesContact(!1).ballBombMove(),new g(t.STONE_EDGE,I.ROCK,0,100,80,5,-1,0,4).attr(jA).makesContact(!1),new Ge(t.CAPTIVATE,I.NORMAL,100,20,-1,0,4).attr(_e,[K.SPATK],-2).condition((E,A,s)=>A.isOppositeGender(E)).target(6),new Ge(t.STEALTH_ROCK,I.ROCK,-1,20,-1,0,4).attr(er,ge.STEALTH_ROCK).target(16),new g(t.GRASS_KNOT,I.GRASS,1,-1,100,20,-1,0,4).attr(Zu).makesContact(),new g(t.CHATTER,I.FLYING,1,65,100,20,100,0,4).attr(ZE).soundBased(),new g(t.JUDGMENT,I.NORMAL,1,100,100,10,-1,0,4).attr(nD),new g(t.BUG_BITE,I.BUG,0,60,100,20,-1,0,4).attr(wu),new g(t.CHARGE_BEAM,I.ELECTRIC,1,50,90,10,70,0,4).attr(_e,[K.SPATK],1,!0),new g(t.WOOD_HAMMER,I.GRASS,0,120,100,15,-1,0,4).attr($s,!1,.33).recklessMove(),new g(t.AQUA_JET,I.WATER,0,40,100,20,-1,1,4),new g(t.ATTACK_ORDER,I.BUG,0,90,100,15,-1,0,4).attr(jA).makesContact(!1),new je(t.DEFEND_ORDER,I.BUG,-1,10,-1,0,4).attr(_e,[K.DEF,K.SPDEF],1,!0),new je(t.HEAL_ORDER,I.BUG,-1,5,-1,0,4).attr(us,.5).triageMove(),new g(t.HEAD_SMASH,I.ROCK,0,150,80,5,-1,0,4).attr($s,!1,.5).recklessMove(),new g(t.DOUBLE_HIT,I.NORMAL,0,35,90,10,-1,0,4).attr(TA,0),new g(t.ROAR_OF_TIME,I.DRAGON,1,150,90,5,-1,0,4).attr(QR),new g(t.SPACIAL_REND,I.DRAGON,1,100,95,5,-1,0,4).attr(jA),new je(t.LUNAR_DANCE,I.PSYCHIC,-1,10,-1,0,4).attr(Bu,!0,"moveTriggers:lunarDanceRestore").danceMove().triageMove(),new g(t.CRUSH_GRIP,I.NORMAL,0,-1,100,5,-1,0,4).attr(iN,120),new g(t.MAGMA_STORM,I.FIRE,1,100,75,5,-1,0,4).attr(iO,y.MAGMA_STORM),new Ge(t.DARK_VOID,I.DARK,80,10,-1,0,4).attr(Ot,ne.SLEEP).target(6),new g(t.SEED_FLARE,I.GRASS,1,120,85,5,40,0,4).attr(_e,[K.SPDEF],-2),new g(t.OMINOUS_WIND,I.GHOST,1,60,100,5,10,0,4).attr(_e,[K.ATK,K.DEF,K.SPATK,K.SPDEF,K.SPD],1,!0).windMove(),new os(t.SHADOW_FORCE,I.GHOST,0,120,100,5,-1,0,4).chargeText(u.t("moveTriggers:vanishedInstantly",{pokemonName:"{USER}"})).chargeAttr(Yn,y.HIDDEN).ignoresProtect(),new je(t.HONE_CLAWS,I.DARK,-1,15,-1,0,5).attr(_e,[K.ATK,K.ACC],1,!0),new Ge(t.WIDE_GUARD,I.ROCK,-1,10,-1,3,5).target(15).attr(tE,ge.WIDE_GUARD,1,!0,!0).condition(dR),new Ge(t.GUARD_SPLIT,I.PSYCHIC,-1,10,-1,0,5).attr(PD,[K.DEF,K.SPDEF],"moveTriggers:sharedGuard"),new Ge(t.POWER_SPLIT,I.PSYCHIC,-1,10,-1,0,5).attr(PD,[K.ATK,K.SPATK],"moveTriggers:sharedPower"),new Ge(t.WONDER_ROOM,I.PSYCHIC,-1,10,-1,0,5).ignoresProtect().target(17).unimplemented(),new g(t.PSYSHOCK,I.PSYCHIC,1,80,100,10,-1,0,5).attr(LN),new g(t.VENOSHOCK,I.POISON,1,65,100,10,-1,0,5).attr(HA,(E,A,s)=>A.status&&(A.status.effect===ne.POISON||A.status.effect===ne.TOXIC)?2:1),new je(t.AUTOTOMIZE,I.STEEL,-1,15,-1,0,5).attr(_e,[K.SPD],2,!0).attr(Ht,y.AUTOTOMIZED,!0),new je(t.RAGE_POWDER,I.BUG,-1,20,-1,2,5).powderMove().attr(Ht,y.CENTER_OF_ATTENTION,!0),new Ge(t.TELEKINESIS,I.PSYCHIC,-1,15,-1,0,5).condition(SI).condition((E,A,s)=>![e.DIGLETT,e.DUGTRIO,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.SANDYGAST,e.PALOSSAND,e.WIGLETT,e.WUGTRIO].includes(A.species.speciesId)).condition((E,A,s)=>!(A.species.speciesId===e.GENGAR&&A.getFormKey()==="mega")).condition((E,A,s)=>ve(A.getTag(y.INGRAIN))&&ve(A.getTag(y.IGNORE_FLYING))).attr(Ht,y.TELEKINESIS,!1,!0,3).attr(Ht,y.FLOATING,!1,!0,3),new Ge(t.MAGIC_ROOM,I.PSYCHIC,-1,10,-1,0,5).ignoresProtect().target(17).unimplemented(),new g(t.SMACK_DOWN,I.ROCK,0,50,100,15,100,0,5).attr(Ht,y.IGNORE_FLYING,!1,!1,1,1,!0).attr(Ht,y.INTERRUPTED).attr(yn,[y.FLYING,y.FLOATING,y.TELEKINESIS]).attr(FR,y.FLYING).makesContact(!1),new g(t.STORM_THROW,I.FIGHTING,0,60,100,10,-1,0,5).attr(ln),new g(t.FLAME_BURST,I.FIRE,1,70,100,15,-1,0,5).attr(xH),new g(t.SLUDGE_WAVE,I.POISON,1,95,100,10,10,0,5).attr(Ot,ne.POISON).target(4),new je(t.QUIVER_DANCE,I.BUG,-1,20,-1,0,5).attr(_e,[K.SPATK,K.SPDEF,K.SPD],1,!0).danceMove(),new g(t.HEAVY_SLAM,I.STEEL,0,-1,100,10,-1,0,5).attr(In).attr(Qu).attr(iR,y.MINIMIZED),new g(t.SYNCHRONOISE,I.PSYCHIC,1,120,100,10,-1,0,5).target(4).condition(n$).attr(a1),new g(t.ELECTRO_BALL,I.ELECTRIC,1,-1,100,10,-1,0,5).attr(Rd).ballBombMove(),new Ge(t.SOAK,I.WATER,100,20,-1,0,5).attr(oD,I.WATER),new g(t.FLAME_CHARGE,I.FIRE,0,50,100,20,100,0,5).attr(_e,[K.SPD],1,!0),new je(t.COIL,I.POISON,-1,20,-1,0,5).attr(_e,[K.ATK,K.DEF,K.ACC],1,!0),new g(t.LOW_SWEEP,I.FIGHTING,0,65,100,20,100,0,5).attr(_e,[K.SPD],-1),new g(t.ACID_SPRAY,I.POISON,1,40,100,20,100,0,5).attr(_e,[K.SPDEF],-2).ballBombMove(),new g(t.FOUL_PLAY,I.DARK,0,95,100,15,-1,0,5).attr(od),new Ge(t.SIMPLE_BEAM,I.NORMAL,100,15,-1,0,5).attr(DD,O.SIMPLE),new Ge(t.ENTRAINMENT,I.NORMAL,100,15,-1,0,5).attr($d),new Ge(t.AFTER_YOU,I.NORMAL,-1,15,-1,0,5).ignoresProtect().ignoresSubstitute().target(3).condition(yi).condition((E,A,s)=>!A.turnData.acted).attr(n1),new g(t.ROUND,I.NORMAL,1,60,100,15,-1,0,5).attr(Sd).attr(Td).soundBased(),new g(t.ECHOED_VOICE,I.NORMAL,1,40,100,15,-1,0,5).attr(sd,5,!1).soundBased(),new g(t.CHIP_AWAY,I.NORMAL,0,70,100,20,-1,0,5).attr(Ja),new g(t.CLEAR_SMOG,I.POISON,1,50,-1,15,-1,0,5).attr(nN,!1),new g(t.STORED_POWER,I.PSYCHIC,1,20,100,10,-1,0,5).attr(qu),new Ge(t.QUICK_GUARD,I.FIGHTING,-1,15,-1,3,5).target(15).attr(tE,ge.QUICK_GUARD,1,!0,!0).condition(dR),new je(t.ALLY_SWITCH,I.PSYCHIC,-1,15,-1,2,5).ignoresProtect().unimplemented(),new g(t.SCALD,I.WATER,1,80,100,15,30,0,5).attr(eE,!1,ne.FREEZE).attr(eE,!0,ne.FREEZE).attr(Ot,ne.BURN),new je(t.SHELL_SMASH,I.NORMAL,-1,15,-1,0,5).attr(_e,[K.ATK,K.SPATK,K.SPD],2,!0).attr(_e,[K.DEF,K.SPDEF],-1,!0),new Ge(t.HEAL_PULSE,I.PSYCHIC,-1,10,-1,0,5).attr(us,.5,!1,!1).pulseMove().triageMove(),new g(t.HEX,I.GHOST,1,65,100,10,-1,0,5).attr(HA,(E,A,s)=>A.status||A.hasAbility(O.COMATOSE)?2:1),new os(t.SKY_DROP,I.FLYING,0,60,100,10,-1,0,5).chargeText(u.t("moveTriggers:tookTargetIntoSky",{pokemonName:"{USER}",targetName:"{TARGET}"})).chargeAttr(Yn,y.FLYING).condition(SI).condition((E,A,s)=>!A.getTag(y.SUBSTITUTE)).partial(),new je(t.SHIFT_GEAR,I.STEEL,-1,10,-1,0,5).attr(_e,[K.ATK],1,!0).attr(_e,[K.SPD],2,!0),new g(t.CIRCLE_THROW,I.FIGHTING,0,60,90,10,-1,-6,5).attr(zs,!1,iA.FORCE_SWITCH).hidesTarget(),new g(t.INCINERATE,I.FIRE,1,60,100,15,-1,0,5).target(6).attr(yu,!0),new Ge(t.QUASH,I.DARK,100,15,-1,0,5).condition(yi).unimplemented(),new g(t.ACROBATICS,I.FLYING,0,55,100,15,-1,0,5).attr(HA,(E,A,s)=>Math.max(1,2-.2*E.getHeldItems().filter(R=>R.isTransferable).reduce((R,a)=>R+a.stackCount,0))),new Ge(t.REFLECT_TYPE,I.NORMAL,-1,15,-1,0,5).ignoresSubstitute().attr(xd),new g(t.RETALIATE,I.NORMAL,0,70,100,5,-1,0,5).attr(HA,(E,A,s)=>{const R=n.currentBattle.turn,a=n.currentBattle.playerFaintsHistory[n.currentBattle.playerFaintsHistory.length-1],i=n.currentBattle.enemyFaintsHistory[n.currentBattle.enemyFaintsHistory.length-1];return a!==void 0&&R-a.turn===1&&E.isPlayer()||i!==void 0&&R-i.turn===1&&!E.isPlayer()?2:1}),new g(t.FINAL_GAMBIT,I.FIGHTING,1,-1,100,5,-1,0,5).attr(wH).attr(oi),new Ge(t.BESTOW,I.NORMAL,-1,15,-1,0,5).ignoresProtect().ignoresSubstitute().unimplemented(),new g(t.INFERNO,I.FIRE,1,100,50,5,100,0,5).attr(Ot,ne.BURN),new g(t.WATER_PLEDGE,I.WATER,1,80,100,10,-1,0,5).attr(RN).attr(TN).attr(rN).attr(ur).attr(GI,ge.WATER_FIRE_PLEDGE,t.FIRE_PLEDGE,!0).attr(GI,ge.GRASS_WATER_PLEDGE,t.GRASS_PLEDGE).attr(va,!0),new g(t.FIRE_PLEDGE,I.FIRE,1,80,100,10,-1,0,5).attr(RN).attr(TN).attr(rN).attr(ur).attr(GI,ge.FIRE_GRASS_PLEDGE,t.GRASS_PLEDGE).attr(GI,ge.WATER_FIRE_PLEDGE,t.WATER_PLEDGE,!0).attr(va,!0),new g(t.GRASS_PLEDGE,I.GRASS,1,80,100,10,-1,0,5).attr(RN).attr(TN).attr(rN).attr(ur).attr(GI,ge.GRASS_WATER_PLEDGE,t.WATER_PLEDGE).attr(GI,ge.FIRE_GRASS_PLEDGE,t.FIRE_PLEDGE).attr(va,!0),new g(t.VOLT_SWITCH,I.ELECTRIC,1,70,100,20,-1,0,5).attr(zs,!0),new g(t.STRUGGLE_BUG,I.BUG,1,50,100,20,100,0,5).attr(_e,[K.SPATK],-1).target(6),new g(t.BULLDOZE,I.GROUND,0,60,100,20,100,0,5).attr(_e,[K.SPD],-1).attr(HA,(E,A,s)=>n.arena.getTerrainType()===Tt.GRASSY&&A.isGrounded()?.5:1).makesContact(!1).target(4),new g(t.FROST_BREATH,I.ICE,1,60,90,10,100,0,5).attr(ln),new g(t.DRAGON_TAIL,I.DRAGON,0,60,90,10,-1,-6,5).attr(zs,!1,iA.FORCE_SWITCH).hidesTarget(),new je(t.WORK_UP,I.NORMAL,-1,30,-1,0,5).attr(_e,[K.ATK,K.SPATK],1,!0),new g(t.ELECTROWEB,I.ELECTRIC,1,55,95,15,100,0,5).attr(_e,[K.SPD],-1).target(6),new g(t.WILD_CHARGE,I.ELECTRIC,0,90,100,15,-1,0,5).attr($s).recklessMove(),new g(t.DRILL_RUN,I.GROUND,0,80,95,10,-1,0,5).attr(jA),new g(t.DUAL_CHOP,I.DRAGON,0,40,90,15,-1,0,5).attr(TA,0),new g(t.HEART_STAMP,I.PSYCHIC,0,60,100,25,30,0,5).attr(rA),new g(t.HORN_LEECH,I.GRASS,0,75,100,10,-1,0,5).attr(Ys).triageMove(),new g(t.SACRED_SWORD,I.FIGHTING,0,90,100,15,-1,0,5).attr(Ja).slicingMove(),new g(t.RAZOR_SHELL,I.WATER,0,75,95,10,50,0,5).attr(_e,[K.DEF],-1).slicingMove(),new g(t.HEAT_CRASH,I.FIRE,0,-1,100,10,-1,0,5).attr(In).attr(Qu).attr(iR,y.MINIMIZED),new g(t.LEAF_TORNADO,I.GRASS,1,65,90,10,50,0,5).attr(_e,[K.ACC],-1),new g(t.STEAMROLLER,I.BUG,0,65,100,20,30,0,5).attr(In).attr(iR,y.MINIMIZED).attr(rA),new je(t.COTTON_GUARD,I.GRASS,-1,10,-1,0,5).attr(_e,[K.DEF],3,!0),new g(t.NIGHT_DAZE,I.DARK,1,85,95,10,40,0,5).attr(_e,[K.ACC],-1),new g(t.PSYSTRIKE,I.PSYCHIC,1,100,100,10,-1,0,5).attr(LN),new g(t.TAIL_SLAP,I.NORMAL,0,25,85,10,-1,0,5).attr(TA),new g(t.HURRICANE,I.FLYING,1,110,70,10,30,0,5).attr(AD).attr(ZE).attr(FR,y.FLYING).windMove(),new g(t.HEAD_CHARGE,I.NORMAL,0,120,100,15,-1,0,5).attr($s).recklessMove(),new g(t.GEAR_GRIND,I.STEEL,0,50,85,15,-1,0,5).attr(TA,0),new g(t.SEARING_SHOT,I.FIRE,1,100,100,5,30,0,5).attr(Ot,ne.BURN).ballBombMove().target(4),new g(t.TECHNO_BLAST,I.NORMAL,1,120,100,5,-1,0,5).attr(Md),new g(t.RELIC_SONG,I.NORMAL,1,75,100,10,10,0,5).attr(Ot,ne.SLEEP).soundBased().target(6),new g(t.SECRET_SWORD,I.FIGHTING,1,85,100,10,-1,0,5).attr(LN).slicingMove(),new g(t.GLACIATE,I.ICE,1,65,95,10,100,0,5).attr(_e,[K.SPD],-1).target(6),new g(t.BOLT_STRIKE,I.ELECTRIC,0,130,85,5,20,0,5).attr(Ot,ne.PARALYSIS),new g(t.BLUE_FLARE,I.FIRE,1,130,85,5,20,0,5).attr(Ot,ne.BURN),new g(t.FIERY_DANCE,I.FIRE,1,80,100,10,50,0,5).attr(_e,[K.SPATK],1,!0).danceMove(),new os(t.FREEZE_SHOCK,I.ICE,0,140,90,5,30,0,5).chargeText(u.t("moveTriggers:becameCloakedInFreezingLight",{pokemonName:"{USER}"})).attr(Ot,ne.PARALYSIS).makesContact(!1),new os(t.ICE_BURN,I.ICE,1,140,90,5,30,0,5).chargeText(u.t("moveTriggers:becameCloakedInFreezingAir",{pokemonName:"{USER}"})).attr(Ot,ne.BURN),new g(t.SNARL,I.DARK,1,55,95,15,100,0,5).attr(_e,[K.SPATK],-1).soundBased().target(6),new g(t.ICICLE_CRASH,I.ICE,0,85,90,10,30,0,5).attr(rA).makesContact(!1),new g(t.V_CREATE,I.FIRE,0,180,95,5,-1,0,5).attr(_e,[K.DEF,K.SPDEF,K.SPD],-1,!0),new g(t.FUSION_FLARE,I.FIRE,1,100,100,5,-1,0,5).attr(eE,!0,ne.FREEZE).attr(eD,t.FUSION_BOLT),new g(t.FUSION_BOLT,I.ELECTRIC,0,100,100,5,-1,0,5).attr(eD,t.FUSION_FLARE).makesContact(!1),new g(t.FLYING_PRESS,I.FIGHTING,0,100,95,10,-1,0,6).attr(In).attr(gd).attr(iR,y.MINIMIZED).condition(SI),new Ge(t.MAT_BLOCK,I.FIGHTING,-1,10,-1,0,6).target(15).attr(tE,ge.MAT_BLOCK,1,!0,!0).condition(new SN).condition(dR),new g(t.BELCH,I.POISON,1,120,90,10,-1,0,6).condition((E,A,s)=>E.battleData.berriesEaten.length>0),new Ge(t.ROTOTILLER,I.GROUND,-1,10,-1,0,6).target(14).condition((E,A,s)=>[...n.getEnemyParty(),...n.getPlayerParty()].some(R=>R.isOfType(I.GRASS)&&R.isGrounded())).attr(_e,[K.ATK,K.SPATK],1,!1,{condition:N((E,A,s)=>A.isOfType(I.GRASS)&&A.isGrounded(),"condition")}),new Ge(t.STICKY_WEB,I.BUG,-1,20,-1,0,6).attr(er,ge.STICKY_WEB).target(16),new g(t.FELL_STINGER,I.BUG,0,50,100,25,-1,0,6).attr(bu,[K.ATK],3,!0),new os(t.PHANTOM_FORCE,I.GHOST,0,90,100,10,-1,0,6).chargeText(u.t("moveTriggers:vanishedInstantly",{pokemonName:"{USER}"})).chargeAttr(Yn,y.HIDDEN).ignoresProtect(),new Ge(t.TRICK_OR_TREAT,I.GHOST,100,20,-1,0,6).attr(lD,I.GHOST),new Ge(t.NOBLE_ROAR,I.NORMAL,100,30,-1,0,6).attr(_e,[K.ATK,K.SPATK],-1).soundBased(),new Ge(t.ION_DELUGE,I.ELECTRIC,-1,25,-1,1,6).attr(tE,ge.ION_DELUGE).target(17),new g(t.PARABOLIC_CHARGE,I.ELECTRIC,1,65,100,20,-1,0,6).attr(Ys).target(4).triageMove(),new Ge(t.FORESTS_CURSE,I.GRASS,100,20,-1,0,6).attr(lD,I.GRASS),new g(t.PETAL_BLIZZARD,I.GRASS,0,90,100,15,-1,0,6).windMove().makesContact(!1).target(4),new g(t.FREEZE_DRY,I.ICE,1,70,100,20,10,0,6).attr(Ot,ne.FREEZE).attr(Kd),new g(t.DISARMING_VOICE,I.FAIRY,1,40,-1,15,-1,0,6).soundBased().target(6),new Ge(t.PARTING_SHOT,I.DARK,100,20,-1,0,6).attr(_e,[K.ATK,K.SPATK],-1,!1,{trigger:0}).attr(zs,!0).soundBased(),new Ge(t.TOPSY_TURVY,I.DARK,-1,20,-1,0,6).attr(jH),new g(t.DRAINING_KISS,I.FAIRY,1,50,100,10,-1,0,6).attr(Ys,.75).makesContact().triageMove(),new Ge(t.CRAFTY_SHIELD,I.FAIRY,-1,10,-1,3,6).target(15).attr(tE,ge.CRAFTY_SHIELD,1,!0,!0).condition(dR),new Ge(t.FLOWER_SHIELD,I.FAIRY,-1,10,-1,0,6).target(14).attr(_e,[K.DEF],1,!1,{condition:N((E,A,s)=>A.getTypes().includes(I.GRASS)&&!A.getTag(_n),"condition")}),new Ge(t.GRASSY_TERRAIN,I.GRASS,-1,10,-1,0,6).attr(_a,Tt.GRASSY).target(17),new Ge(t.MISTY_TERRAIN,I.FAIRY,-1,10,-1,0,6).attr(_a,Tt.MISTY).target(17),new Ge(t.ELECTRIFY,I.ELECTRIC,-1,20,-1,0,6).attr(Ht,y.ELECTRIFIED,!1,!0),new g(t.PLAY_ROUGH,I.FAIRY,0,90,90,10,10,0,6).attr(_e,[K.ATK],-1),new g(t.FAIRY_WIND,I.FAIRY,1,40,100,30,-1,0,6).windMove(),new g(t.MOONBLAST,I.FAIRY,1,95,100,15,30,0,6).attr(_e,[K.SPATK],-1),new g(t.BOOMBURST,I.NORMAL,1,140,100,10,-1,0,6).soundBased().target(4),new Ge(t.FAIRY_LOCK,I.FAIRY,-1,10,-1,0,6).ignoresSubstitute().ignoresProtect().target(17).attr(tE,ge.FAIRY_LOCK,2,!0),new je(t.KINGS_SHIELD,I.STEEL,-1,10,-1,4,6).attr(JR,y.KINGS_SHIELD).condition(dR),new Ge(t.PLAY_NICE,I.NORMAL,-1,20,-1,0,6).attr(_e,[K.ATK],-1).ignoresSubstitute(),new Ge(t.CONFIDE,I.NORMAL,-1,20,-1,0,6).attr(_e,[K.SPATK],-1).soundBased(),new g(t.DIAMOND_STORM,I.ROCK,0,100,95,5,50,0,6).attr(_e,[K.DEF],2,!0,{firstTargetOnly:!0}).makesContact(!1).target(6),new g(t.STEAM_ERUPTION,I.WATER,1,110,95,5,30,0,6).attr(eE,!0,ne.FREEZE).attr(eE,!1,ne.FREEZE).attr(Ot,ne.BURN),new g(t.HYPERSPACE_HOLE,I.PSYCHIC,1,80,-1,5,-1,0,6).ignoresProtect().ignoresSubstitute(),new g(t.WATER_SHURIKEN,I.WATER,1,15,100,20,-1,1,6).attr(TA).attr(rd).attr(ZH),new g(t.MYSTICAL_FIRE,I.FIRE,1,75,100,10,100,0,6).attr(_e,[K.SPATK],-1),new je(t.SPIKY_SHIELD,I.GRASS,-1,10,-1,4,6).attr(JR,y.SPIKY_SHIELD).condition(dR),new Ge(t.AROMATIC_MIST,I.FAIRY,-1,20,-1,0,6).attr(_e,[K.SPDEF],1).ignoresSubstitute().condition(yi).target(10),new Ge(t.EERIE_IMPULSE,I.ELECTRIC,100,15,-1,0,6).attr(_e,[K.SPATK],-2),new Ge(t.VENOM_DRENCH,I.POISON,100,20,-1,0,6).attr(_e,[K.ATK,K.SPATK,K.SPD],-1,!1,{condition:N((E,A,s)=>{var R,a;return((R=A.status)==null?void 0:R.effect)===ne.POISON||((a=A.status)==null?void 0:a.effect)===ne.TOXIC},"condition")}).target(6),new Ge(t.POWDER,I.BUG,100,20,-1,1,6).attr(Ht,y.POWDER,!1,!0).ignoresSubstitute().powderMove(),new YH(t.GEOMANCY,I.FAIRY,-1,10,-1,0,6).chargeText(u.t("moveTriggers:isChargingPower",{pokemonName:"{USER}"})).attr(_e,[K.SPATK,K.SPDEF,K.SPD],2,!0),new Ge(t.MAGNETIC_FLUX,I.ELECTRIC,-1,20,-1,0,6).attr(_e,[K.DEF,K.SPDEF],1,!1,{condition:N((E,A,s)=>!![O.PLUS,O.MINUS].find(R=>A.hasAbility(R,!1)),"condition")}).ignoresSubstitute().target(13).condition((E,A,s)=>!![E,E.getAlly()].filter(R=>R==null?void 0:R.isActive()).find(R=>!![O.PLUS,O.MINUS].find(a=>R.hasAbility(a,!1)))),new Ge(t.HAPPY_HOUR,I.NORMAL,-1,30,-1,0,6).attr(tE,ge.HAPPY_HOUR,null,!0).target(15),new Ge(t.ELECTRIC_TERRAIN,I.ELECTRIC,-1,10,-1,0,6).attr(_a,Tt.ELECTRIC).target(17),new g(t.DAZZLING_GLEAM,I.FAIRY,1,80,100,10,-1,0,6).target(6),new je(t.CELEBRATE,I.NORMAL,-1,40,-1,0,6),new Ge(t.HOLD_HANDS,I.NORMAL,-1,40,-1,0,6).ignoresSubstitute().target(10),new Ge(t.BABY_DOLL_EYES,I.FAIRY,100,30,-1,1,6).attr(_e,[K.ATK],-1),new g(t.NUZZLE,I.ELECTRIC,0,20,100,20,100,0,6).attr(Ot,ne.PARALYSIS),new g(t.HOLD_BACK,I.NORMAL,0,40,100,40,-1,0,6).attr(Hu),new g(t.INFESTATION,I.BUG,1,20,100,20,-1,0,6).makesContact().attr(iO,y.INFESTATION),new g(t.POWER_UP_PUNCH,I.FIGHTING,0,40,100,20,100,0,6).attr(_e,[K.ATK],1,!0).punchingMove(),new g(t.OBLIVION_WING,I.FLYING,1,80,100,10,-1,0,6).attr(Ys,.75).triageMove(),new g(t.THOUSAND_ARROWS,I.GROUND,0,90,100,10,-1,0,6).attr(ID).attr(Ht,y.IGNORE_FLYING,!1,!1,1,1,!0).attr(FR,y.FLYING).attr(FR,y.FLOATING).attr(Ht,y.INTERRUPTED).attr(yn,[y.FLYING,y.FLOATING,y.TELEKINESIS]).makesContact(!1).target(6),new g(t.THOUSAND_WAVES,I.GROUND,0,90,100,10,-1,0,6).attr(Ht,y.TRAPPED,!1,!1,1,1,!0).makesContact(!1).target(6),new g(t.LANDS_WRATH,I.GROUND,0,90,100,10,-1,0,6).makesContact(!1).target(6),new g(t.LIGHT_OF_RUIN,I.FAIRY,1,140,90,5,-1,0,6).attr($s,!1,.5).recklessMove(),new g(t.ORIGIN_PULSE,I.WATER,1,110,85,10,-1,0,6).pulseMove().target(6),new g(t.PRECIPICE_BLADES,I.GROUND,0,120,85,10,-1,0,6).makesContact(!1).target(6),new g(t.DRAGON_ASCENT,I.FLYING,0,120,100,5,-1,0,6).attr(_e,[K.DEF,K.SPDEF],-1,!0),new g(t.HYPERSPACE_FURY,I.DARK,0,100,-1,5,-1,0,6).attr(_e,[K.DEF],-1,!0).ignoresSubstitute().makesContact(!1).ignoresProtect(),new g(t.BREAKNECK_BLITZ__PHYSICAL,I.NORMAL,0,-1,-1,1,-1,0,7).unimplemented(),new g(t.BREAKNECK_BLITZ__SPECIAL,I.NORMAL,1,-1,-1,1,-1,0,7).unimplemented(),new g(t.ALL_OUT_PUMMELING__PHYSICAL,I.FIGHTING,0,-1,-1,1,-1,0,7).unimplemented(),new g(t.ALL_OUT_PUMMELING__SPECIAL,I.FIGHTING,1,-1,-1,1,-1,0,7).unimplemented(),new g(t.SUPERSONIC_SKYSTRIKE__PHYSICAL,I.FLYING,0,-1,-1,1,-1,0,7).unimplemented(),new g(t.SUPERSONIC_SKYSTRIKE__SPECIAL,I.FLYING,1,-1,-1,1,-1,0,7).unimplemented(),new g(t.ACID_DOWNPOUR__PHYSICAL,I.POISON,0,-1,-1,1,-1,0,7).unimplemented(),new g(t.ACID_DOWNPOUR__SPECIAL,I.POISON,1,-1,-1,1,-1,0,7).unimplemented(),new g(t.TECTONIC_RAGE__PHYSICAL,I.GROUND,0,-1,-1,1,-1,0,7).unimplemented(),new g(t.TECTONIC_RAGE__SPECIAL,I.GROUND,1,-1,-1,1,-1,0,7).unimplemented(),new g(t.CONTINENTAL_CRUSH__PHYSICAL,I.ROCK,0,-1,-1,1,-1,0,7).unimplemented(),new g(t.CONTINENTAL_CRUSH__SPECIAL,I.ROCK,1,-1,-1,1,-1,0,7).unimplemented(),new g(t.SAVAGE_SPIN_OUT__PHYSICAL,I.BUG,0,-1,-1,1,-1,0,7).unimplemented(),new g(t.SAVAGE_SPIN_OUT__SPECIAL,I.BUG,1,-1,-1,1,-1,0,7).unimplemented(),new g(t.NEVER_ENDING_NIGHTMARE__PHYSICAL,I.GHOST,0,-1,-1,1,-1,0,7).unimplemented(),new g(t.NEVER_ENDING_NIGHTMARE__SPECIAL,I.GHOST,1,-1,-1,1,-1,0,7).unimplemented(),new g(t.CORKSCREW_CRASH__PHYSICAL,I.STEEL,0,-1,-1,1,-1,0,7).unimplemented(),new g(t.CORKSCREW_CRASH__SPECIAL,I.STEEL,1,-1,-1,1,-1,0,7).unimplemented(),new g(t.INFERNO_OVERDRIVE__PHYSICAL,I.FIRE,0,-1,-1,1,-1,0,7).unimplemented(),new g(t.INFERNO_OVERDRIVE__SPECIAL,I.FIRE,1,-1,-1,1,-1,0,7).unimplemented(),new g(t.HYDRO_VORTEX__PHYSICAL,I.WATER,0,-1,-1,1,-1,0,7).unimplemented(),new g(t.HYDRO_VORTEX__SPECIAL,I.WATER,1,-1,-1,1,-1,0,7).unimplemented(),new g(t.BLOOM_DOOM__PHYSICAL,I.GRASS,0,-1,-1,1,-1,0,7).unimplemented(),new g(t.BLOOM_DOOM__SPECIAL,I.GRASS,1,-1,-1,1,-1,0,7).unimplemented(),new g(t.GIGAVOLT_HAVOC__PHYSICAL,I.ELECTRIC,0,-1,-1,1,-1,0,7).unimplemented(),new g(t.GIGAVOLT_HAVOC__SPECIAL,I.ELECTRIC,1,-1,-1,1,-1,0,7).unimplemented(),new g(t.SHATTERED_PSYCHE__PHYSICAL,I.PSYCHIC,0,-1,-1,1,-1,0,7).unimplemented(),new g(t.SHATTERED_PSYCHE__SPECIAL,I.PSYCHIC,1,-1,-1,1,-1,0,7).unimplemented(),new g(t.SUBZERO_SLAMMER__PHYSICAL,I.ICE,0,-1,-1,1,-1,0,7).unimplemented(),new g(t.SUBZERO_SLAMMER__SPECIAL,I.ICE,1,-1,-1,1,-1,0,7).unimplemented(),new g(t.DEVASTATING_DRAKE__PHYSICAL,I.DRAGON,0,-1,-1,1,-1,0,7).unimplemented(),new g(t.DEVASTATING_DRAKE__SPECIAL,I.DRAGON,1,-1,-1,1,-1,0,7).unimplemented(),new g(t.BLACK_HOLE_ECLIPSE__PHYSICAL,I.DARK,0,-1,-1,1,-1,0,7).unimplemented(),new g(t.BLACK_HOLE_ECLIPSE__SPECIAL,I.DARK,1,-1,-1,1,-1,0,7).unimplemented(),new g(t.TWINKLE_TACKLE__PHYSICAL,I.FAIRY,0,-1,-1,1,-1,0,7).unimplemented(),new g(t.TWINKLE_TACKLE__SPECIAL,I.FAIRY,1,-1,-1,1,-1,0,7).unimplemented(),new g(t.CATASTROPIKA,I.ELECTRIC,0,210,-1,1,-1,0,7).unimplemented(),new je(t.SHORE_UP,I.GROUND,-1,5,-1,0,7).attr(bH).triageMove(),new g(t.FIRST_IMPRESSION,I.BUG,0,90,100,10,-1,2,7).condition(new SN),new je(t.BANEFUL_BUNKER,I.POISON,-1,10,-1,4,7).attr(JR,y.BANEFUL_BUNKER).condition(dR),new g(t.SPIRIT_SHACKLE,I.GHOST,0,80,100,10,100,0,7).attr(Ht,y.TRAPPED,!1,!1,1,1,!0).makesContact(!1),new g(t.DARKEST_LARIAT,I.DARK,0,85,100,10,-1,0,7).attr(Ja),new g(t.SPARKLING_ARIA,I.WATER,1,90,100,10,100,0,7).attr(eE,!1,ne.BURN).soundBased().target(4),new g(t.ICE_HAMMER,I.ICE,0,100,90,10,-1,0,7).attr(_e,[K.SPD],-1,!0).punchingMove(),new Ge(t.FLORAL_HEALING,I.FAIRY,-1,10,-1,0,7).attr(kH,.5,2/3,!0,!1,(E,A,s)=>{var R;return((R=n.arena.terrain)==null?void 0:R.terrainType)===Tt.GRASSY}).triageMove(),new g(t.HIGH_HORSEPOWER,I.GROUND,0,95,95,10,-1,0,7),new Ge(t.STRENGTH_SAP,I.GRASS,100,10,-1,0,7).attr(Ys,null,K.ATK).attr(_e,[K.ATK],-1).condition((E,A,s)=>A.getStatStage(K.ATK)>-6).triageMove(),new os(t.SOLAR_BLADE,I.GRASS,0,125,100,10,-1,0,7).chargeText(u.t("moveTriggers:isGlowing",{pokemonName:"{USER}"})).chargeAttr(sN,[Oe.SUNNY,Oe.HARSH_SUN]).attr(zu).slicingMove(),new g(t.LEAFAGE,I.GRASS,0,40,100,40,-1,0,7).makesContact(!1),new Ge(t.SPOTLIGHT,I.NORMAL,-1,15,-1,3,7).attr(Ht,y.CENTER_OF_ATTENTION,!1).condition(yi),new Ge(t.TOXIC_THREAD,I.POISON,100,20,-1,0,7).attr(Ot,ne.POISON).attr(_e,[K.SPD],-1),new je(t.LASER_FOCUS,I.NORMAL,-1,30,-1,0,7).attr(Ht,y.ALWAYS_CRIT,!0,!1),new Ge(t.GEAR_UP,I.STEEL,-1,20,-1,0,7).attr(_e,[K.ATK,K.SPATK],1,!1,{condition:N((E,A,s)=>!![O.PLUS,O.MINUS].find(R=>A.hasAbility(R,!1)),"condition")}).ignoresSubstitute().target(13).condition((E,A,s)=>!![E,E.getAlly()].filter(R=>R==null?void 0:R.isActive()).find(R=>!![O.PLUS,O.MINUS].find(a=>R.hasAbility(a,!1)))),new g(t.THROAT_CHOP,I.DARK,0,80,100,15,100,0,7).attr(Ht,y.THROAT_CHOPPED),new g(t.POLLEN_PUFF,I.BUG,1,90,100,15,-1,0,7).attr(OD).attr(mu,.5,!0,!1).ballBombMove(),new g(t.ANCHOR_SHOT,I.STEEL,0,80,100,20,100,0,7).attr(Ht,y.TRAPPED,!1,!1,1,1,!0),new Ge(t.PSYCHIC_TERRAIN,I.PSYCHIC,-1,10,-1,0,7).attr(_a,Tt.PSYCHIC).target(17),new g(t.LUNGE,I.BUG,0,80,100,15,100,0,7).attr(_e,[K.ATK],-1),new g(t.FIRE_LASH,I.FIRE,0,80,100,15,100,0,7).attr(_e,[K.DEF],-1),new g(t.POWER_TRIP,I.DARK,0,20,100,10,-1,0,7).attr(qu),new g(t.BURN_UP,I.FIRE,1,130,100,5,-1,0,7).condition(E=>E.getTypes(!0).includes(I.FIRE)).attr(eE,!0,ne.FREEZE).attr(Ht,y.BURNED_UP,!0,!1).attr(SD,I.FIRE,E=>{n.queueMessage(u.t("moveTriggers:burnedItselfOut",{pokemonName:te(E)}))}),new Ge(t.SPEED_SWAP,I.PSYCHIC,-1,10,-1,0,7).attr(e1,K.SPD).ignoresSubstitute(),new g(t.SMART_STRIKE,I.STEEL,0,70,-1,10,-1,0,7),new Ge(t.PURIFY,I.POISON,-1,20,-1,0,7).condition((E,A,s)=>{var R;return Px((R=A.status)==null?void 0:R.effect)}).attr(us,.5).attr(eE,!1,mL()).triageMove(),new g(t.REVELATION_DANCE,I.NORMAL,1,90,100,15,-1,0,7).danceMove().attr(fd),new g(t.CORE_ENFORCER,I.DRAGON,1,100,100,10,-1,0,7).target(6).attr(qd),new g(t.TROP_KICK,I.GRASS,0,70,100,15,100,0,7).attr(_e,[K.ATK],-1),new Ge(t.INSTRUCT,I.PSYCHIC,-1,15,-1,0,7).ignoresSubstitute().attr(Zd).edgeCase(),new g(t.BEAK_BLAST,I.FLYING,0,100,100,15,-1,-3,7).attr(tL).ballBombMove().makesContact(!1),new g(t.CLANGING_SCALES,I.DRAGON,1,110,100,5,-1,0,7).attr(_e,[K.DEF],-1,!0,{firstTargetOnly:!0}).soundBased().target(6),new g(t.DRAGON_HAMMER,I.DRAGON,0,90,100,15,-1,0,7),new g(t.BRUTAL_SWING,I.DARK,0,60,100,20,-1,0,7).target(4),new Ge(t.AURORA_VEIL,I.ICE,-1,20,-1,0,7).condition((E,A,s)=>{var R,a,i;return(((R=n.arena.weather)==null?void 0:R.weatherType)===Oe.HAIL||((a=n.arena.weather)==null?void 0:a.weatherType)===Oe.SNOW)&&!((i=n.arena.weather)!=null&&i.isEffectSuppressed())}).attr(tE,ge.AURORA_VEIL,5,!0).target(15),new g(t.SINISTER_ARROW_RAID,I.GHOST,0,180,-1,1,-1,0,7).unimplemented().makesContact(!1).edgeCase(),new g(t.MALICIOUS_MOONSAULT,I.DARK,0,180,-1,1,-1,0,7).unimplemented().attr(In).attr(FR,y.MINIMIZED,!0).edgeCase(),new g(t.OCEANIC_OPERETTA,I.WATER,1,195,-1,1,-1,0,7).unimplemented().edgeCase(),new g(t.GUARDIAN_OF_ALOLA,I.FAIRY,1,-1,-1,1,-1,0,7).unimplemented(),new g(t.SOUL_STEALING_7_STAR_STRIKE,I.GHOST,0,195,-1,1,-1,0,7).unimplemented(),new g(t.STOKED_SPARKSURFER,I.ELECTRIC,1,175,-1,1,100,0,7).unimplemented().edgeCase(),new g(t.PULVERIZING_PANCAKE,I.NORMAL,0,210,-1,1,-1,0,7).unimplemented().edgeCase(),new je(t.EXTREME_EVOBOOST,I.NORMAL,-1,1,-1,0,7).unimplemented().attr(_e,[K.ATK,K.DEF,K.SPATK,K.SPDEF,K.SPD],2,!0),new g(t.GENESIS_SUPERNOVA,I.PSYCHIC,1,185,-1,1,100,0,7).unimplemented().attr(_a,Tt.PSYCHIC),new g(t.SHELL_TRAP,I.FIRE,1,150,100,5,-1,-3,7).attr(Pu,y.SHELL_TRAP).target(6).condition((E,A,s)=>{var R;return((R=E.getTag(Ru))==null?void 0:R.activated)===!0}),new g(t.FLEUR_CANNON,I.FAIRY,1,130,90,5,-1,0,7).attr(_e,[K.SPATK],-2,!0),new g(t.PSYCHIC_FANGS,I.PSYCHIC,0,85,100,10,-1,0,7).bitingMove().attr(Ar),new g(t.STOMPING_TANTRUM,I.GROUND,0,75,100,10,-1,0,7).attr(HA,(E,A,s)=>{var R,a;return((R=E.getLastXMoves(2)[1])==null?void 0:R.result)===oA.MISS||((a=E.getLastXMoves(2)[1])==null?void 0:a.result)===oA.FAIL?2:1}),new g(t.SHADOW_BONE,I.GHOST,0,85,100,10,20,0,7).attr(_e,[K.DEF],-1).makesContact(!1),new g(t.ACCELEROCK,I.ROCK,0,40,100,20,-1,1,7),new g(t.LIQUIDATION,I.WATER,0,85,100,10,20,0,7).attr(_e,[K.DEF],-1),new g(t.PRISMATIC_LASER,I.PSYCHIC,1,160,100,10,-1,0,7).attr(QR),new g(t.SPECTRAL_THIEF,I.GHOST,0,90,100,10,-1,0,7).ignoresSubstitute().partial(),new g(t.SUNSTEEL_STRIKE,I.STEEL,0,100,100,5,-1,0,7).ignoresAbilities(),new g(t.MOONGEIST_BEAM,I.GHOST,1,100,100,5,-1,0,7).ignoresAbilities(),new Ge(t.TEARFUL_LOOK,I.NORMAL,-1,20,-1,0,7).attr(_e,[K.ATK,K.SPATK],-1),new g(t.ZING_ZAP,I.ELECTRIC,0,80,100,10,30,0,7).attr(rA),new g(t.NATURES_MADNESS,I.FAIRY,1,-1,90,10,-1,0,7).attr(tN),new g(t.MULTI_ATTACK,I.NORMAL,0,120,100,10,-1,0,7).attr(nD),new g(t.TEN_MILLION_VOLT_THUNDERBOLT,I.ELECTRIC,1,195,-1,1,-1,0,7).unimplemented().edgeCase(),new g(t.MIND_BLOWN,I.FIRE,1,150,100,5,-1,0,7).condition(Ul).attr(du).target(4),new g(t.PLASMA_FISTS,I.ELECTRIC,0,100,100,15,-1,0,7).attr(tE,ge.ION_DELUGE,1).punchingMove(),new g(t.PHOTON_GEYSER,I.PSYCHIC,1,100,100,5,-1,0,7).attr(sD).ignoresAbilities(),new g(t.LIGHT_THAT_BURNS_THE_SKY,I.PSYCHIC,1,200,-1,1,-1,0,7).unimplemented().attr(sD).ignoresAbilities(),new g(t.SEARING_SUNRAZE_SMASH,I.STEEL,0,200,-1,1,-1,0,7).unimplemented().ignoresAbilities(),new g(t.MENACING_MOONRAZE_MAELSTROM,I.GHOST,1,200,-1,1,-1,0,7).unimplemented().ignoresAbilities(),new g(t.LETS_SNUGGLE_FOREVER,I.FAIRY,0,190,-1,1,-1,0,7).unimplemented().edgeCase(),new g(t.SPLINTERED_STORMSHARDS,I.ROCK,0,190,-1,1,-1,0,7).unimplemented().attr(zi).makesContact(!1),new g(t.CLANGOROUS_SOULBLAZE,I.DRAGON,1,185,-1,1,100,0,7).unimplemented().attr(_e,[K.ATK,K.DEF,K.SPATK,K.SPDEF,K.SPD],1,!0,{firstTargetOnly:!0}).soundBased().target(6).edgeCase(),new g(t.ZIPPY_ZAP,I.ELECTRIC,0,50,100,15,-1,2,7).attr(ln),new g(t.SPLISHY_SPLASH,I.WATER,1,90,100,15,30,0,7).attr(Ot,ne.PARALYSIS).target(6),new g(t.FLOATY_FALL,I.FLYING,0,90,95,15,30,0,7).attr(rA),new g(t.PIKA_PAPOW,I.ELECTRIC,1,-1,-1,20,-1,0,7).attr(qi),new g(t.BOUNCY_BUBBLE,I.WATER,1,60,100,20,-1,0,7).attr(Ys).triageMove().target(6),new g(t.BUZZY_BUZZ,I.ELECTRIC,1,60,100,20,100,0,7).attr(Ot,ne.PARALYSIS),new g(t.SIZZLY_SLIDE,I.FIRE,0,60,100,20,100,0,7).attr(Ot,ne.BURN),new g(t.GLITZY_GLOW,I.PSYCHIC,1,80,95,15,-1,0,7).attr(tE,ge.LIGHT_SCREEN,5,!1,!0),new g(t.BADDY_BAD,I.DARK,1,80,95,15,-1,0,7).attr(tE,ge.REFLECT,5,!1,!0),new g(t.SAPPY_SEED,I.GRASS,0,100,90,10,100,0,7).attr(iD).makesContact(!1),new g(t.FREEZY_FROST,I.ICE,1,100,90,10,-1,0,7).attr(nN,!0),new g(t.SPARKLY_SWIRL,I.FAIRY,1,120,85,5,-1,0,7).attr(AN,null,O.NONE),new g(t.VEEVEE_VOLLEY,I.NORMAL,0,-1,-1,20,-1,0,7).attr(qi),new g(t.DOUBLE_IRON_BASH,I.STEEL,0,60,100,5,30,0,7).attr(TA,0).attr(rA).punchingMove(),new je(t.MAX_GUARD,I.NORMAL,-1,10,-1,4,8).unimplemented().attr(JR).condition(dR),new g(t.DYNAMAX_CANNON,I.DRAGON,1,100,100,5,-1,0,8).attr(HA,(E,A,s)=>A.level>n.getMaxExpLevel()?1+Math.min(1,(A.level-n.getMaxExpLevel())/(n.getMaxExpLevel()*.05)):1).attr(A1),new g(t.SNIPE_SHOT,I.WATER,1,80,100,15,-1,0,8).attr(jA).attr(va),new g(t.JAW_LOCK,I.DARK,0,80,100,10,-1,0,8).attr(Fd).bitingMove(),new je(t.STUFF_CHEEKS,I.NORMAL,-1,10,-1,0,8).attr(jS).attr(_e,[K.DEF],2,!0).condition(E=>n.findModifiers(s=>s instanceof CE,E.isPlayer()).length>0).edgeCase(),new je(t.NO_RETREAT,I.FIGHTING,-1,5,-1,0,8).attr(_e,[K.ATK,K.DEF,K.SPATK,K.SPDEF,K.SPD],1,!0).attr(Ht,y.NO_RETREAT,!0,!1).condition((E,A,s)=>{var R;return((R=E.getTag(vR))==null?void 0:R.sourceMove)!==t.NO_RETREAT}),new Ge(t.TAR_SHOT,I.ROCK,100,15,-1,0,8).attr(_e,[K.SPD],-1).attr(Ht,y.TAR_SHOT,!1),new Ge(t.MAGIC_POWDER,I.PSYCHIC,100,20,-1,0,8).attr(oD,I.PSYCHIC).powderMove(),new g(t.DRAGON_DARTS,I.DRAGON,0,50,100,10,-1,0,8).attr(TA,0).makesContact(!1).partial(),new Ge(t.TEATIME,I.NORMAL,-1,10,-1,0,8).attr(jS).target(14),new Ge(t.OCTOLOCK,I.FIGHTING,100,15,-1,0,8).condition(ul).attr(Ht,y.OCTOLOCK,!1,!0,1),new g(t.BOLT_BEAK,I.ELECTRIC,0,85,100,10,-1,0,8).attr(Ju),new g(t.FISHIOUS_REND,I.WATER,0,85,100,10,-1,0,8).attr(Ju).bitingMove(),new Ge(t.COURT_CHANGE,I.NORMAL,100,10,-1,0,8).attr(wd,[ge.AURORA_VEIL,ge.LIGHT_SCREEN,ge.MIST,ge.REFLECT,ge.SPIKES,ge.STEALTH_ROCK,ge.STICKY_WEB,ge.TAILWIND,ge.TOXIC_SPIKES]),new g(t.MAX_FLARE,I.FIRE,0,10,-1,10,-1,0,8).target(5).unimplemented(),new g(t.MAX_FLUTTERBY,I.BUG,0,10,-1,10,-1,0,8).target(5).unimplemented(),new g(t.MAX_LIGHTNING,I.ELECTRIC,0,10,-1,10,-1,0,8).target(5).unimplemented(),new g(t.MAX_STRIKE,I.NORMAL,0,10,-1,10,-1,0,8).target(5).unimplemented(),new g(t.MAX_KNUCKLE,I.FIGHTING,0,10,-1,10,-1,0,8).target(5).unimplemented(),new g(t.MAX_PHANTASM,I.GHOST,0,10,-1,10,-1,0,8).target(5).unimplemented(),new g(t.MAX_HAILSTORM,I.ICE,0,10,-1,10,-1,0,8).target(5).unimplemented(),new g(t.MAX_OOZE,I.POISON,0,10,-1,10,-1,0,8).target(5).unimplemented(),new g(t.MAX_GEYSER,I.WATER,0,10,-1,10,-1,0,8).target(5).unimplemented(),new g(t.MAX_AIRSTREAM,I.FLYING,0,10,-1,10,-1,0,8).target(5).unimplemented(),new g(t.MAX_STARFALL,I.FAIRY,0,10,-1,10,-1,0,8).target(5).unimplemented(),new g(t.MAX_WYRMWIND,I.DRAGON,0,10,-1,10,-1,0,8).target(5).unimplemented(),new g(t.MAX_MINDSTORM,I.PSYCHIC,0,10,-1,10,-1,0,8).target(5).unimplemented(),new g(t.MAX_ROCKFALL,I.ROCK,0,10,-1,10,-1,0,8).target(5).unimplemented(),new g(t.MAX_QUAKE,I.GROUND,0,10,-1,10,-1,0,8).target(5).unimplemented(),new g(t.MAX_DARKNESS,I.DARK,0,10,-1,10,-1,0,8).target(5).unimplemented(),new g(t.MAX_OVERGROWTH,I.GRASS,0,10,-1,10,-1,0,8).target(5).unimplemented(),new g(t.MAX_STEELSPIKE,I.STEEL,0,10,-1,10,-1,0,8).target(5).unimplemented(),new je(t.CLANGOROUS_SOUL,I.DRAGON,100,5,-1,0,8).attr(ON,[K.ATK,K.DEF,K.SPATK,K.SPDEF,K.SPD],1,3).soundBased().danceMove(),new g(t.BODY_PRESS,I.FIGHTING,0,80,100,10,-1,0,8).attr(ld),new Ge(t.DECORATE,I.FAIRY,-1,15,-1,0,8).attr(_e,[K.ATK,K.SPATK],2).ignoresProtect(),new g(t.DRUM_BEATING,I.GRASS,0,80,100,10,100,0,8).attr(_e,[K.SPD],-1).makesContact(!1),new g(t.SNAP_TRAP,I.GRASS,0,35,100,15,-1,0,8).attr(iO,y.SNAP_TRAP),new g(t.PYRO_BALL,I.FIRE,0,120,90,5,10,0,8).attr(eE,!0,ne.FREEZE).attr(Ot,ne.BURN).ballBombMove().makesContact(!1),new g(t.BEHEMOTH_BLADE,I.STEEL,0,100,100,5,-1,0,8).slicingMove(),new g(t.BEHEMOTH_BASH,I.STEEL,0,100,100,5,-1,0,8),new g(t.AURA_WHEEL,I.ELECTRIC,0,110,100,10,100,0,8).attr(_e,[K.SPD],1,!0).makesContact(!1).attr(_d),new g(t.BREAKING_SWIPE,I.DRAGON,0,60,100,15,100,0,8).target(6).attr(_e,[K.ATK],-1),new g(t.BRANCH_POKE,I.GRASS,0,40,100,40,-1,0,8),new g(t.OVERDRIVE,I.ELECTRIC,1,80,100,10,-1,0,8).soundBased().target(6),new g(t.APPLE_ACID,I.GRASS,1,80,100,10,100,0,8).attr(_e,[K.SPDEF],-1),new g(t.GRAV_APPLE,I.GRASS,0,80,100,10,100,0,8).attr(_e,[K.DEF],-1).attr(HA,(E,A,s)=>n.arena.getTag(ge.GRAVITY)?1.5:1).makesContact(!1),new g(t.SPIRIT_BREAK,I.FAIRY,0,75,100,15,100,0,8).attr(_e,[K.SPATK],-1),new g(t.STRANGE_STEAM,I.FAIRY,1,90,95,10,20,0,8).attr(ZE),new Ge(t.LIFE_DEW,I.WATER,-1,10,-1,0,8).attr(us,.25,!0,!1).target(13).ignoresProtect(),new je(t.OBSTRUCT,I.DARK,100,10,-1,4,8).attr(JR,y.OBSTRUCT).condition(dR),new g(t.FALSE_SURRENDER,I.DARK,0,80,-1,10,-1,0,8),new g(t.METEOR_ASSAULT,I.FIGHTING,0,150,100,5,-1,0,8).attr(QR).makesContact(!1),new g(t.ETERNABEAM,I.DRAGON,1,160,90,5,-1,0,8).attr(QR),new g(t.STEEL_BEAM,I.STEEL,1,140,95,5,-1,0,8).attr(du),new g(t.EXPANDING_FORCE,I.PSYCHIC,1,80,100,10,-1,0,8).attr(HA,(E,A,s)=>n.arena.getTerrainType()===Tt.PSYCHIC&&E.isGrounded()?1.5:1).attr(Ui,(E,A,s)=>n.arena.getTerrainType()===Tt.PSYCHIC&&E.isGrounded()?6:3),new g(t.STEEL_ROLLER,I.STEEL,0,130,100,5,-1,0,8).attr(zi).condition((E,A,s)=>!!n.arena.terrain),new g(t.SCALE_SHOT,I.DRAGON,0,25,90,20,-1,0,8).attr(_e,[K.SPD],1,!0,{lastHitOnly:!0}).attr(_e,[K.DEF],-1,!0,{lastHitOnly:!0}).attr(TA).makesContact(!1),new os(t.METEOR_BEAM,I.ROCK,1,120,90,10,-1,0,8).chargeText(u.t("moveTriggers:isOverflowingWithSpacePower",{pokemonName:"{USER}"})).chargeAttr(_e,[K.SPATK],1,!0),new g(t.SHELL_SIDE_ARM,I.POISON,1,90,100,10,20,0,8).attr(ud).attr(Ot,ne.POISON).partial(),new g(t.MISTY_EXPLOSION,I.FAIRY,1,100,100,5,-1,0,8).attr(Qn).target(4).attr(HA,(E,A,s)=>n.arena.getTerrainType()===Tt.MISTY&&E.isGrounded()?1.5:1).condition(Ul).makesContact(!1),new g(t.GRASSY_GLIDE,I.GRASS,0,55,100,20,-1,0,8).attr(Fu,(E,A,s)=>n.arena.getTerrainType()===Tt.GRASSY&&E.isGrounded()),new g(t.RISING_VOLTAGE,I.ELECTRIC,1,70,100,20,-1,0,8).attr(HA,(E,A,s)=>n.arena.getTerrainType()===Tt.ELECTRIC&&A.isGrounded()?2:1),new g(t.TERRAIN_PULSE,I.NORMAL,1,50,100,10,-1,0,8).attr(hd).attr(HA,(E,A,s)=>n.arena.getTerrainType()!==Tt.NONE&&E.isGrounded()?2:1).pulseMove(),new g(t.SKITTER_SMACK,I.BUG,0,70,90,10,100,0,8).attr(_e,[K.SPATK],-1),new g(t.BURNING_JEALOUSY,I.FIRE,1,70,100,5,100,0,8).attr(R1,ne.BURN).target(6),new g(t.LASH_OUT,I.DARK,0,75,100,5,-1,0,8).attr(HA,(E,A,s)=>E.turnData.statStagesDecreased?2:1),new g(t.POLTERGEIST,I.GHOST,0,110,90,5,-1,0,8).condition(s$).attr(ya,R$).makesContact(!1),new Ge(t.CORROSIVE_GAS,I.POISON,100,40,-1,0,8).target(4).unimplemented(),new Ge(t.COACHING,I.FIGHTING,-1,10,-1,0,8).attr(_e,[K.ATK,K.DEF],1).target(10).condition(yi),new g(t.FLIP_TURN,I.WATER,0,60,100,20,-1,0,8).attr(zs,!0),new g(t.TRIPLE_AXEL,I.ICE,0,20,90,10,-1,0,8).attr(TA,2).attr(ju,3).checkAllHits(),new g(t.DUAL_WINGBEAT,I.FLYING,0,40,90,10,-1,0,8).attr(TA,0),new g(t.SCORCHING_SANDS,I.GROUND,1,70,100,10,30,0,8).attr(eE,!0,ne.FREEZE).attr(eE,!1,ne.FREEZE).attr(Ot,ne.BURN),new Ge(t.JUNGLE_HEALING,I.GRASS,-1,10,-1,0,8).attr(us,.25,!0,!1).attr(eE,!1,mL()).target(13),new g(t.WICKED_BLOW,I.DARK,0,75,100,5,-1,0,8).attr(ln).punchingMove(),new g(t.SURGING_STRIKES,I.WATER,0,25,100,5,-1,0,8).attr(TA,2).attr(ln).punchingMove(),new g(t.THUNDER_CAGE,I.ELECTRIC,1,80,90,15,-1,0,8).attr(iO,y.THUNDER_CAGE),new g(t.DRAGON_ENERGY,I.DRAGON,1,150,100,5,-1,0,8).attr(aN).target(6),new g(t.FREEZING_GLARE,I.PSYCHIC,1,90,100,10,10,0,8).attr(Ot,ne.FREEZE),new g(t.FIERY_WRATH,I.DARK,1,90,100,10,20,0,8).attr(rA).target(6),new g(t.THUNDEROUS_KICK,I.FIGHTING,0,90,100,10,100,0,8).attr(_e,[K.DEF],-1),new g(t.GLACIAL_LANCE,I.ICE,0,120,100,5,-1,0,8).target(6).makesContact(!1),new g(t.ASTRAL_BARRAGE,I.GHOST,1,120,100,5,-1,0,8).target(6),new g(t.EERIE_SPELL,I.PSYCHIC,1,80,100,5,100,0,8).attr(Xd,3).soundBased(),new g(t.DIRE_CLAW,I.POISON,0,80,100,15,50,0,8).attr(Wu,[ne.POISON,ne.PARALYSIS,ne.SLEEP]),new g(t.PSYSHIELD_BASH,I.PSYCHIC,0,70,90,10,100,0,8).attr(_e,[K.DEF],1,!0),new je(t.POWER_SHIFT,I.NORMAL,-1,10,-1,0,8).target(0).attr(t1,K.ATK,K.DEF),new g(t.STONE_AXE,I.ROCK,0,65,90,15,100,0,8).attr(TD,ge.STEALTH_ROCK).slicingMove(),new g(t.SPRINGTIDE_STORM,I.FAIRY,1,100,80,5,30,0,8).attr(_e,[K.ATK],-1).windMove().target(6),new g(t.MYSTICAL_POWER,I.PSYCHIC,1,70,90,10,100,0,8).attr(_e,[K.SPATK],1,!0),new g(t.RAGING_FURY,I.FIRE,0,120,100,10,-1,0,8).makesContact(!1).attr(ji).attr(LO,Kn).attr(yO,Kn).target(7),new g(t.WAVE_CRASH,I.WATER,0,120,100,10,-1,0,8).attr($s,!1,.33).recklessMove(),new g(t.CHLOROBLAST,I.GRASS,1,150,95,5,-1,0,8).attr($s,!0,.5),new g(t.MOUNTAIN_GALE,I.ICE,0,100,85,10,30,0,8).makesContact(!1).attr(rA),new je(t.VICTORY_DANCE,I.FIGHTING,-1,10,-1,0,8).attr(_e,[K.ATK,K.DEF,K.SPD],1,!0).danceMove(),new g(t.HEADLONG_RUSH,I.GROUND,0,120,100,5,-1,0,8).attr(_e,[K.DEF,K.SPDEF],-1,!0).punchingMove(),new g(t.BARB_BARRAGE,I.POISON,0,60,100,10,50,0,8).makesContact(!1).attr(HA,(E,A,s)=>A.status&&(A.status.effect===ne.POISON||A.status.effect===ne.TOXIC)?2:1).attr(Ot,ne.POISON),new g(t.ESPER_WING,I.PSYCHIC,1,80,100,10,100,0,8).attr(jA).attr(_e,[K.SPD],1,!0),new g(t.BITTER_MALICE,I.GHOST,1,75,100,10,100,0,8).attr(_e,[K.ATK],-1),new je(t.SHELTER,I.STEEL,-1,10,100,0,8).attr(_e,[K.DEF],2,!0),new g(t.TRIPLE_ARROWS,I.FIGHTING,0,90,100,10,30,0,8).makesContact(!1).attr(jA).attr(_e,[K.DEF],-1,!1,{effectChanceOverride:50}).attr(rA),new g(t.INFERNAL_PARADE,I.GHOST,1,60,100,15,30,0,8).attr(Ot,ne.BURN).attr(HA,(E,A,s)=>A.status?2:1),new g(t.CEASELESS_EDGE,I.DARK,0,65,90,15,100,0,8).attr(TD,ge.SPIKES).slicingMove(),new g(t.BLEAKWIND_STORM,I.FLYING,1,100,80,10,30,0,8).attr(NN).attr(_e,[K.SPD],-1).windMove().target(6),new g(t.WILDBOLT_STORM,I.ELECTRIC,1,100,80,10,20,0,8).attr(NN).attr(Ot,ne.PARALYSIS).windMove().target(6),new g(t.SANDSEAR_STORM,I.GROUND,1,100,80,10,20,0,8).attr(NN).attr(Ot,ne.BURN).windMove().target(6),new Ge(t.LUNAR_BLESSING,I.PSYCHIC,-1,5,-1,0,8).attr(us,.25,!0,!1).attr(eE,!1,mL()).target(13).triageMove(),new je(t.TAKE_HEART,I.PSYCHIC,-1,10,-1,0,8).attr(_e,[K.SPATK,K.SPDEF],1,!0).attr(eE,!0,[ne.PARALYSIS,ne.POISON,ne.TOXIC,ne.BURN,ne.SLEEP]),new g(t.TERA_BLAST,I.NORMAL,1,80,100,10,-1,0,9).attr(RD).attr(dd).attr(Ud).attr(_e,[K.ATK,K.SPATK],-1,!0,{condition:N((E,A,s)=>E.isTerastallized()&&E.isOfType(I.STELLAR),"condition")}).partial(),new je(t.SILK_TRAP,I.BUG,-1,10,-1,4,9).attr(JR,y.SILK_TRAP).condition(dR),new g(t.AXE_KICK,I.FIGHTING,0,120,90,10,30,0,9).attr(LO,TI).attr(yO,TI).attr(ZE).recklessMove(),new g(t.LAST_RESPECTS,I.GHOST,0,50,100,10,-1,0,9).partial().attr(HA,(E,A,s)=>1+Math.min(E.isPlayer()?n.currentBattle.playerFaints:n.currentBattle.enemyFaints,100)).makesContact(!1),new g(t.LUMINA_CRASH,I.PSYCHIC,1,80,100,10,100,0,9).attr(_e,[K.SPDEF],-2),new g(t.ORDER_UP,I.DRAGON,0,80,100,10,100,0,9).attr(zH).makesContact(!1),new g(t.JET_PUNCH,I.WATER,0,60,100,15,-1,1,9).punchingMove(),new Ge(t.SPICY_EXTRACT,I.GRASS,-1,15,-1,0,9).attr(_e,[K.ATK],2).attr(_e,[K.DEF],-2),new g(t.SPIN_OUT,I.STEEL,0,100,100,5,-1,0,9).attr(_e,[K.SPD],-2,!0),new g(t.POPULATION_BOMB,I.NORMAL,0,20,90,10,-1,0,9).attr(TA,3).slicingMove().checkAllHits(),new g(t.ICE_SPINNER,I.ICE,0,80,100,15,-1,0,9).attr(zi),new g(t.GLAIVE_RUSH,I.DRAGON,0,120,100,5,-1,0,9).attr(Ht,y.ALWAYS_GET_HIT,!0,!1,0,0,!0).attr(Ht,y.RECEIVE_DOUBLE_DAMAGE,!0,!1,0,0,!0).condition((E,A,s)=>{var R,a;return!(((R=A.getTag(y.PROTECTED))==null?void 0:R.tagType)==="PROTECTED"||((a=n.arena.getTag(ge.MAT_BLOCK))==null?void 0:a.tagType)==="MAT_BLOCK")}),new Ge(t.REVIVAL_BLESSING,I.NORMAL,-1,1,-1,0,9).triageMove().attr(vd).target(0),new g(t.SALT_CURE,I.ROCK,0,40,100,15,100,0,9).attr(Ht,y.SALT_CURED).makesContact(!1),new g(t.TRIPLE_DIVE,I.WATER,0,30,95,10,-1,0,9).attr(TA,2),new g(t.MORTAL_SPIN,I.POISON,0,30,100,15,100,0,9).attr(Wd,[y.BIND,y.WRAP,y.FIRE_SPIN,y.WHIRLPOOL,y.CLAMP,y.SAND_TOMB,y.MAGMA_STORM,y.SNAP_TRAP,y.THUNDER_CAGE,y.SEEDED,y.INFESTATION],!0).attr(Ot,ne.POISON).attr(tr).target(6),new Ge(t.DOODLE,I.NORMAL,100,10,-1,0,9).attr(MD,!0),new je(t.FILLET_AWAY,I.NORMAL,-1,10,-1,0,9).attr(ON,[K.ATK,K.SPATK,K.SPD],2,2),new g(t.KOWTOW_CLEAVE,I.DARK,0,85,-1,10,-1,0,9).slicingMove(),new g(t.FLOWER_TRICK,I.GRASS,0,70,-1,10,100,0,9).attr(ln).makesContact(!1),new g(t.TORCH_SONG,I.FIRE,1,80,100,10,100,0,9).attr(_e,[K.SPATK],1,!0).soundBased(),new g(t.AQUA_STEP,I.WATER,0,80,100,10,100,0,9).attr(_e,[K.SPD],1,!0).danceMove(),new g(t.RAGING_BULL,I.NORMAL,0,90,100,10,-1,0,9).attr(Pd).attr(Ar),new g(t.MAKE_IT_RAIN,I.STEEL,1,120,100,5,-1,0,9).attr(GD).attr(_e,[K.SPATK],-1,!0,{firstTargetOnly:!0}).target(6),new g(t.PSYBLADE,I.PSYCHIC,0,80,100,15,-1,0,9).attr(HA,(E,A,s)=>n.arena.getTerrainType()===Tt.ELECTRIC&&E.isGrounded()?1.5:1).slicingMove(),new g(t.HYDRO_STEAM,I.WATER,1,80,100,15,-1,0,9).attr(gu,Oe.SUNNY).attr(HA,(E,A,s)=>{var R,a;return[Oe.SUNNY,Oe.HARSH_SUN].includes((R=n.arena.weather)==null?void 0:R.weatherType)&&!((a=n.arena.weather)!=null&&a.isEffectSuppressed())?1.5:1}),new g(t.RUINATION,I.DARK,1,-1,90,10,-1,0,9).attr(tN),new g(t.COLLISION_COURSE,I.FIGHTING,0,100,100,5,-1,0,9).attr(HA,(E,A,s)=>A.getAttackTypeEffectiveness(s.type,E)>=2?5461/4096:1),new g(t.ELECTRO_DRIFT,I.ELECTRIC,1,100,100,5,-1,0,9).attr(HA,(E,A,s)=>A.getAttackTypeEffectiveness(s.type,E)>=2?5461/4096:1).makesContact(),new je(t.SHED_TAIL,I.NORMAL,-1,10,-1,0,9).attr(fu,.5).attr(zs,!0,iA.SHED_TAIL).condition(c6),new je(t.CHILLY_RECEPTION,I.ICE,-1,10,-1,0,9).attr(ya,(E,A)=>u.t("moveTriggers:chillyReception",{pokemonName:te(E)})).attr(Vd,!0),new je(t.TIDY_UP,I.NORMAL,-1,10,-1,0,9).attr(_e,[K.ATK,K.SPD],1,!0).attr(tr,!0).attr(yd),new Ge(t.SNOWSCAPE,I.ICE,-1,10,-1,0,9).attr(Ma,Oe.SNOW).target(17),new g(t.POUNCE,I.BUG,0,50,100,20,100,0,9).attr(_e,[K.SPD],-1),new g(t.TRAILBLAZE,I.GRASS,0,50,100,20,100,0,9).attr(_e,[K.SPD],1,!0),new g(t.CHILLING_WATER,I.WATER,1,50,100,20,100,0,9).attr(_e,[K.ATK],-1),new g(t.HYPER_DRILL,I.NORMAL,0,100,100,5,-1,0,9).ignoresProtect(),new g(t.TWIN_BEAM,I.PSYCHIC,1,40,100,10,-1,0,9).attr(TA,0),new g(t.RAGE_FIST,I.GHOST,0,50,100,10,-1,0,9).edgeCase().attr(Id).punchingMove(),new g(t.ARMOR_CANNON,I.FIRE,1,120,100,5,-1,0,9).attr(_e,[K.DEF,K.SPDEF],-1,!0),new g(t.BITTER_BLADE,I.FIRE,0,90,100,10,-1,0,9).attr(Ys).slicingMove().triageMove(),new g(t.DOUBLE_SHOCK,I.ELECTRIC,0,120,100,5,-1,0,9).condition(E=>E.getTypes(!0).includes(I.ELECTRIC)).attr(Ht,y.DOUBLE_SHOCKED,!0,!1).attr(SD,I.ELECTRIC,E=>{n.queueMessage(u.t("moveTriggers:usedUpAllElectricity",{pokemonName:te(E)}))}),new g(t.GIGATON_HAMMER,I.STEEL,0,160,100,5,-1,0,9).makesContact(!1).condition((E,A,s)=>{const R=E.getLastXMoves(1);return!R.length||R[0].move!==s.id||R[0].result!==oA.SUCCESS}),new g(t.COMEUPPANCE,I.DARK,0,-1,100,10,-1,0,9).attr(wa,E=>E.category===0||E.category===1,1.5).redirectCounter().target(9),new g(t.AQUA_CUTTER,I.WATER,0,70,100,20,-1,0,9).attr(jA).slicingMove().makesContact(!1),new g(t.BLAZING_TORQUE,I.FIRE,0,80,100,10,30,0,9).attr(Ot,ne.BURN).makesContact(!1),new g(t.WICKED_TORQUE,I.DARK,0,80,100,10,10,0,9).attr(Ot,ne.SLEEP).makesContact(!1),new g(t.NOXIOUS_TORQUE,I.POISON,0,100,100,10,30,0,9).attr(Ot,ne.POISON).makesContact(!1),new g(t.COMBAT_TORQUE,I.FIGHTING,0,100,100,10,30,0,9).attr(Ot,ne.PARALYSIS).makesContact(!1),new g(t.MAGICAL_TORQUE,I.FAIRY,0,100,100,10,30,0,9).attr(ZE).makesContact(!1),new g(t.BLOOD_MOON,I.NORMAL,1,140,100,5,-1,0,9).condition((E,A,s)=>{const R=E.getLastXMoves(1);return!R.length||R[0].move!==s.id||R[0].result!==oA.SUCCESS}),new g(t.MATCHA_GOTCHA,I.GRASS,1,80,90,15,20,0,9).attr(Ys).attr(eE,!0,ne.FREEZE).attr(eE,!1,ne.FREEZE).attr(Ot,ne.BURN).target(6).triageMove(),new g(t.SYRUP_BOMB,I.GRASS,1,60,85,10,-1,0,9).attr(Ht,y.SYRUP_BOMB,!1,!1,3).ballBombMove(),new g(t.IVY_CUDGEL,I.GRASS,0,100,100,10,-1,0,9).attr(Gd).attr(jA).makesContact(!1),new os(t.ELECTRO_SHOT,I.ELECTRIC,1,130,100,10,100,0,9).chargeText(u.t("moveTriggers:absorbedElectricity",{pokemonName:"{USER}"})).chargeAttr(_e,[K.SPATK],1,!0).chargeAttr(sN,[Oe.RAIN,Oe.HEAVY_RAIN]),new g(t.TERA_STARSTORM,I.NORMAL,1,120,100,5,-1,0,9).attr(RD).attr(Dd).attr(Ui,(E,A,s)=>(E.hasFusionSpecies(e.TERAPAGOS)||E.species.speciesId===e.TERAPAGOS)&&E.isTerastallized()?6:3).partial(),new g(t.FICKLE_BEAM,I.DRAGON,1,80,100,5,30,0,9).attr(ya,qJ).attr(Ed),new je(t.BURNING_BULWARK,I.FIRE,-1,10,-1,4,9).attr(JR,y.BURNING_BULWARK).condition(dR),new g(t.THUNDERCLAP,I.ELECTRIC,1,70,100,5,-1,1,9).condition((E,A,s)=>{var R,a,i;return((R=n.currentBattle.turnCommands[A.getBattlerIndex()])==null?void 0:R.command)===LA.FIGHT&&!A.turnData.acted&&we[(i=(a=n.currentBattle.turnCommands[A.getBattlerIndex()])==null?void 0:a.move)==null?void 0:i.move].category!==2}),new g(t.MIGHTY_CLEAVE,I.ROCK,0,95,100,5,-1,0,9).slicingMove().ignoresProtect(),new g(t.TACHYON_CUTTER,I.STEEL,1,50,-1,10,-1,0,9).attr(TA,0).slicingMove(),new g(t.HARD_PRESS,I.STEEL,0,-1,100,10,-1,0,9).attr(iN,100),new Ge(t.DRAGON_CHEER,I.DRAGON,-1,15,-1,0,9).attr(Ht,y.DRAGON_CHEER,!1,!0).target(10),new g(t.ALLURING_VOICE,I.FAIRY,1,80,100,10,-1,0,9).attr(s1,y.CONFUSED).soundBased(),new g(t.TEMPER_FLARE,I.FIRE,0,75,100,10,-1,0,9).attr(HA,(E,A,s)=>{var R,a;return((R=E.getLastXMoves(2)[1])==null?void 0:R.result)===oA.MISS||((a=E.getLastXMoves(2)[1])==null?void 0:a.result)===oA.FAIL?2:1}),new g(t.SUPERCELL_SLAM,I.ELECTRIC,0,100,95,15,-1,0,9).attr(LO,TI).attr(yO,TI).recklessMove(),new g(t.PSYCHIC_NOISE,I.PSYCHIC,1,75,100,10,-1,0,9).soundBased().attr(Ht,y.HEAL_BLOCK,!1,!1,2),new g(t.UPPER_HAND,I.FIGHTING,0,65,100,15,100,3,9).attr(rA).condition(new I1),new g(t.MALIGNANT_CHAIN,I.POISON,1,100,100,5,50,0,9).attr(Ot,ne.TOXIC)),we.map(E=>{E.getAttrs(_e).some(A=>A.selfTarget&&A.stages<0)&&J8.push(E.id)})}N(I$,"initMoves");const iV=class iV extends Ts{constructor(A,s,R,a=!1){super(A),this.amount=s,this.damageResult=R||vt.EFFECTIVE,this.critical=a}start(){if(super.start(),this.damageResult===vt.ONE_HIT_KO){n.moveAnimations&&n.toggleInvert(!0),n.time.delayedCall(st(1e3),()=>{n.toggleInvert(!1),this.applyDamage()});return}this.applyDamage()}updateAmount(A){this.amount=A}applyDamage(){switch(this.damageResult){case vt.EFFECTIVE:n.playSound("se/hit");break;case vt.SUPER_EFFECTIVE:case vt.ONE_HIT_KO:n.playSound("se/hit_strong");break;case vt.NOT_VERY_EFFECTIVE:n.playSound("se/hit_weak");break}if(this.amount&&n.damageNumberHandler.add(this.getPokemon(),this.amount,this.damageResult,this.critical),this.damageResult!==vt.OTHER&&this.amount>0){const A=n.time.addEvent({delay:100,repeat:5,startAt:200,callback:N(()=>{this.getPokemon().getSprite().setVisible(A.repeatCount%2===0),A.repeatCount||this.getPokemon().updateInfo().then(()=>this.end())},"callback")})}else this.getPokemon().updateInfo().then(()=>this.end())}end(){n.currentBattle.battleSpec===SE.FINAL_BOSS?n.initFinalBossPhaseTwo(this.getPokemon()):super.end()}};N(iV,"DamageAnimPhase");let cD=iV;const rV=class rV extends Ts{constructor(A,s=!1,R,a,i){super(A),this.preventEndure=s,this.destinyTag=R,this.grudgeTag=a,this.source=i}start(){super.start();const A=this.getPokemon();if(!ve(this.destinyTag)&&!ve(this.source)&&this.destinyTag.lapse(this.source,JE.CUSTOM),!ve(this.grudgeTag)&&!ve(this.source)&&this.grudgeTag.lapse(A,JE.CUSTOM,this.source),!this.preventEndure){const s=n.applyModifier(iL,this.player,A);if(s)return A.loseHeldItem(s),n.updateModifiers(this.player),this.end()}n.getPlayerField().forEach((s,R)=>{s!=null&&s.isActive(!0)&&s.isPlayer()&&n.currentBattle.addParticipant(s)}),this.tryOverrideForBattleSpec()||this.doFaint()}doFaint(){var R,a,i,r;const A=this.getPokemon();if(A.isPlayer()?(n.currentBattle.playerFaints+=1,n.currentBattle.playerFaintsHistory.push({pokemon:A,turn:n.currentBattle.turn})):(n.currentBattle.enemyFaints+=1,n.currentBattle.enemyFaintsHistory.push({pokemon:A,turn:n.currentBattle.turn})),n.queueMessage(u.t("battle:fainted",{pokemonNameWithAffix:te(A)}),null,!0),n.triggerPokemonFormChange(A,Ds,!0),(a=(R=A.turnData)==null?void 0:R.attacksReceived)!=null&&a.length){const L=A.turnData.attacksReceived[0];D6(JI,A,n.getPokemonById(L.sourceId),new nt(L.move).getMove(),L.result)}else D6(JI,A);if(n.getField(!0).forEach(L=>hJ(fS,L,A)),(r=(i=A.turnData)==null?void 0:i.attacksReceived)!=null&&r.length){const L=n.getPokemonById(A.turnData.attacksReceived[0].sourceId);if(L!=null&&L.isOnField()){HJ(dS,L);const o=we[A.turnData.attacksReceived[0].move],l=o.getAttrs(bu);if(l.length)for(const C of l)C.applyPostVictory(L,L,o)}}if(this.player){const L=n.getPokemonAllowedInBattle(),o=L.filter(l=>!l.isActive(!0));L.length?n.currentBattle.double&&L.length===1&&o.length===0?n.unshiftPhase(new PO(!0)):o.length>0&&n.pushPhase(new xI(iA.SWITCH,this.fieldIndex,!0,!1)):n.unshiftPhase(new GO)}else n.unshiftPhase(new nS(this.battlerIndex)),[Ut.TRAINER,Ut.MYSTERY_ENCOUNTER].includes(n.currentBattle.battleType)&&n.getEnemyParty().filter(o=>o.isActive()&&!o.isOnField()&&o.trainerSlot===A.trainerSlot).length&&n.pushPhase(new uR(iA.SWITCH,this.fieldIndex,-1,!1,!1));if(n.currentBattle.double){const L=A.getAlly();n.redirectPokemonMoves(A,L)}A.faintCry(()=>{A instanceof vE&&A.addFriendship(-nk),A.hideInfo(),n.playSound("se/faint"),n.tweens.add({targets:A,duration:500,y:A.y+150,ease:"Sine.easeIn",onComplete:N(()=>{A.resetSprite(),A.lapseTags(JE.FAINT),n.getField(!0).filter(L=>L!==A).forEach(L=>L.removeTagsBySourceId(A.id)),A.y-=150,A.trySetStatus(ne.FAINT),A.isPlayer()?n.currentBattle.removeFaintedParticipant(A):(n.addFaintedEnemyScore(A),n.currentBattle.addPostBattleLoot(A)),n.field.remove(A),this.end()},"onComplete")})})}tryOverrideForBattleSpec(){switch(n.currentBattle.battleSpec){case SE.FINAL_BOSS:if(!this.player){const A=this.getPokemon();return A.formIndex?n.ui.showDialogue(a8[SE.FINAL_BOSS].secondStageWin,A.species.name,null,()=>this.doFaint()):(A.hp++,n.unshiftPhase(new cD(A.getBattlerIndex(),0,vt.OTHER)),this.end()),!0}}return!1}};N(rV,"FaintPhase");let hD=rV;const LV=class LV extends Ts{constructor(A,s,R,a,i){super(A),this.statusEffect=s,this.turnsRemaining=R,this.sourceText=a,this.sourcePokemon=i}start(){var s;const A=this.getPokemon();if(A&&!A.status){if(A.trySetStatus(this.statusEffect,!1,this.sourcePokemon)){this.turnsRemaining&&(A.status.sleepTurnsRemaining=this.turnsRemaining),A.updateInfo(!0),new qI(lA.POISON+(this.statusEffect-1),A).play(!1,()=>{n.queueMessage(x7(this.statusEffect,te(A),this.sourceText??void 0)),this.end()});return}}else((s=A.status)==null?void 0:s.effect)===this.statusEffect&&n.queueMessage(b7(this.statusEffect??ne.NONE,te(A)));this.end()}};N(LV,"ObtainStatusEffectPhase");let r1=LV;var Bl=(E=>(E[E.MISC=0]="MISC",E[E.LEVEL_UP=1]="LEVEL_UP",E[E.RELEARN=2]="RELEARN",E[E.EVOLUTION=3]="EVOLUTION",E[E.EVOLUTION_FUSED=4]="EVOLUTION_FUSED",E[E.EVOLUTION_FUSED_BASE=5]="EVOLUTION_FUSED_BASE",E))(Bl||{}),oR=(E=>(E[E.CENTER=0]="CENTER",E[E.LEFT=1]="LEFT",E[E.RIGHT=2]="RIGHT",E))(oR||{});const NV=class NV extends sE.GameObjects.Container{constructor(A,s,R,a,i,r,L,o,l,C,M,D){if(super(n,A,s),!R.isObtainable()&&this.isPlayer())throw`Cannot create a player Pokemon for species '${R.getName(r)}'`;const _=new _s(vM);if(this.hasTrainer()||n.applyModifiers(Gn,!0,_),this.species=R,this.pokeball=(D==null?void 0:D.pokeball)||be.POKEBALL,this.level=a,this.switchOutStatus=!1,i!==void 0)this.abilityIndex=i;else{const P=!ce(_.value),h=ce(2);R.abilityHidden&&P?this.abilityIndex=2:this.abilityIndex=R.ability2!==R.ability1?h:0}if(r!==void 0&&(this.formIndex=r),L!==void 0&&(this.gender=L),o!==void 0&&(this.shiny=o),l!==void 0&&(this.variant=l),this.exp=(D==null?void 0:D.exp)||jR(this.level,R.growthRate),this.levelExp=(D==null?void 0:D.levelExp)||0,D)this.id=D.id,this.hp=D.hp,this.stats=D.stats,this.ivs=D.ivs,this.passive=!!D.passive,this.variant===void 0&&(this.variant=0),this.nature=D.nature||0,this.nickname=D.nickname,this.moveset=D.moveset,this.status=D.status,this.friendship=D.friendship!==void 0?D.friendship:this.species.baseFriendship,this.metLevel=D.metLevel||5,this.luck=D.luck,this.metBiome=D.metBiome,this.metSpecies=D.metSpecies??(this.metBiome!==-1?this.species.speciesId:this.species.getRootSpeciesId(!0)),this.metWave=D.metWave??(this.metBiome===-1?-1:0),this.pauseEvolutions=D.pauseEvolutions,this.pokerus=!!D.pokerus,this.evoCounter=D.evoCounter??0,this.fusionSpecies=D.fusionSpecies instanceof G?D.fusionSpecies:D.fusionSpecies?ke(D.fusionSpecies):null,this.fusionFormIndex=D.fusionFormIndex,this.fusionAbilityIndex=D.fusionAbilityIndex,this.fusionShiny=D.fusionShiny,this.fusionVariant=D.fusionVariant||0,this.fusionGender=D.fusionGender,this.fusionLuck=D.fusionLuck,this.fusionCustomPokemonData=D.fusionCustomPokemonData,this.usedTMs=D.usedTMs??[],this.customPokemonData=new rs(D.customPokemonData);else{if(this.id=ce(4294967296),this.ivs=C||M1(this.id),this.gender===void 0&&this.generateGender(),this.formIndex===void 0&&(this.formIndex=n.getSpeciesFormIndex(R,this.gender,this.nature,this.isPlayer())),this.shiny===void 0&&this.trySetShiny(),this.variant===void 0&&(this.variant=this.shiny?this.generateShinyVariant():0),this.customPokemonData=new rs,M!==void 0?this.setNature(M):this.generateNature(),this.friendship=R.baseFriendship,this.metLevel=a,this.metBiome=n.currentBattle?n.arena.biomeType:-1,this.metSpecies=R.speciesId,this.metWave=n.currentBattle?n.currentBattle.waveIndex:-1,this.pokerus=!1,a>1){const P=new Lt(n.gameMode.isSplicedOnly);!P.value&&!this.isPlayer()&&!this.hasTrainer()&&n.applyModifier(wo,!1,P),P.value&&(this.calculateStats(),this.generateFusionSpecies())}this.luck=(this.shiny?this.variant+1:0)+(this.fusionShiny?this.fusionVariant+1:0),this.fusionLuck=this.luck}this.generateName(),R.isObtainable()||(this.shiny=!1),D||this.calculateStats()}getNameToRender(){try{return this.nickname?decodeURIComponent(escape(atob(this.nickname))):this.name}catch(A){return console.error(`Failed to decode nickname for ${this.name}`,A),this.name}}init(){this.fieldPosition=0,this.initBattleInfo(),n.fieldUI.addAt(this.battleInfo,0);const A=N(a=>{const i=n.addPokemonSprite(this,0,0,`pkmn__${this.isPlayer()?"back__":""}sub`,void 0,!0);return i.setOrigin(.5,1),i.setPipeline(n.spritePipeline,{tone:[0,0,0,0],hasShadow:!!a,teraColor:yR(this.getTeraType())}),i},"getSprite");this.setScale(this.getSpriteScale());const s=A(!0),R=A();R.setVisible(!1),this.addAt(s,0),this.addAt(R,1),this.isShiny()&&!this.shinySparkle&&this.initShinySparkle()}isOnField(){return!n||this.switchOutStatus?!1:n.field.getIndex(this)>-1}isFainted(A=!1){var s;return this.hp<=0&&(!A||((s=this.status)==null?void 0:s.effect)===ne.FAINT)}isAllowedInBattle(){return!this.isFainted()&&this.isAllowedInChallenge()}isAllowedInChallenge(){const A=new Lt(!0);return as(n.gameMode,XE.POKEMON_IN_BATTLE,this,A),A.value}isActive(A=!1){return n?this.isAllowedInBattle()&&(!A||this.isOnField()):!1}getDexAttr(){let A=0n;return A|=this.gender!==at.FEMALE?Xe.MALE:Xe.FEMALE,A|=this.shiny?Xe.SHINY:Xe.NON_SHINY,A|=this.variant>=2?Xe.VARIANT_3:this.variant===1?Xe.VARIANT_2:Xe.DEFAULT_VARIANT,A|=n.gameData.getFormAttr(this.formIndex),A}generateName(){if(!this.fusionSpecies){this.name=this.species.getName(this.formIndex);return}this.name=Ik(this.species.getName(this.formIndex),this.fusionSpecies.getName(this.fusionFormIndex)),this.battleInfo&&this.updateInfo(!0)}loadAssets(A=!0){return new Promise(s=>{const R=this.getMoveset().map(a=>a.getMove().id);Promise.allSettled(R.map(a=>lL(a))).then(()=>{CL(R),this.getSpeciesForm().loadAssets(this.getGender()===at.FEMALE,this.formIndex,this.shiny,this.variant),(this.isPlayer()||this.getFusionSpeciesForm())&&n.loadPokemonAtlas(this.getBattleSpriteKey(!0,A),this.getBattleSpriteAtlasPath(!0,A)),this.getFusionSpeciesForm()&&(this.getFusionSpeciesForm().loadAssets(this.getFusionGender()===at.FEMALE,this.fusionFormIndex,this.fusionShiny,this.fusionVariant),n.loadPokemonAtlas(this.getFusionBattleSpriteKey(!0,A),this.getFusionBattleSpriteAtlasPath(!0,A))),n.load.once(sE.Loader.Events.COMPLETE,()=>{if(this.isPlayer()){const i=console.warn;console.warn=()=>{};const r=n.anims.generateFrameNames(this.getBattleSpriteKey(),{zeroPad:4,suffix:".png",start:1,end:400});console.warn=i,n.anims.exists(this.getBattleSpriteKey())||n.anims.create({key:this.getBattleSpriteKey(),frames:r,frameRate:10,repeat:-1})}this.playAnim();const a=N(()=>{var i;this.updateFusionPalette(),(i=this.summonData)!=null&&i.speciesForm&&this.updateFusionPalette(!0),s()},"updateFusionPaletteAndResolve");if(this.shiny){const i=N((r=!1)=>new Promise(async L=>{const o=this.getBattleSpriteAtlasPath(r,A).replace("variant/","").replace(/_[1-3]$/,"");let l=qs;const C=n.experimentalSprites&&n.hasExpSprite(this.getBattleSpriteKey(r,A));o.split("/").map(D=>l?l=l[D]:null);const M=l;if(M&&M[this.variant]===1){const D=this.getBattleSpriteKey(r);ca.hasOwnProperty(D)||await this.populateVariantColorCache(D,C,o)}L()}),"populateVariantColors");this.isPlayer()?Promise.all([i(!1),i(!0)]).then(()=>a()):i(!1).then(()=>a())}else a()}),n.load.isLoading()||n.load.start()})})}async fallbackVariantColor(A,s,R,a,...i){console.warn(`Could not load ${s}!`,...i),R&&await this.populateVariantColorCache(A,!1,a)}async populateVariantColorCache(A,s,R){const a=`./images/pokemon/variant/${s?"exp/":""}${R}.json`;return n.cachedFetch(a).then(i=>i.ok?i.json():this.fallbackVariantColor(A,i.url,s,R,i.status,i.statusText)).catch(i=>this.fallbackVariantColor(A,a,s,R,i)).then(i=>{ve(i)||(ca[A]=i)})}getFormKey(){return!this.species.forms.length||this.species.forms.length<=this.formIndex?"":this.species.forms[this.formIndex].formKey}getFusionFormKey(){return this.fusionSpecies?!this.fusionSpecies.forms.length||this.fusionSpecies.forms.length<=this.fusionFormIndex?"":this.fusionSpecies.forms[this.fusionFormIndex].formKey:null}getSpriteAtlasPath(A){const s=this.getSpriteId(A).replace(/\_{2}/g,"/");return`${/_[1-3]$/.test(s)?"variant/":""}${s}`}getBattleSpriteAtlasPath(A,s){const R=this.getBattleSpriteId(A,s).replace(/\_{2}/g,"/");return`${/_[1-3]$/.test(R)?"variant/":""}${R}`}getSpriteId(A){return this.getSpeciesForm(A).getSpriteId(this.getGender(A)===at.FEMALE,this.formIndex,this.shiny,this.variant)}getBattleSpriteId(A,s){return A===void 0&&(A=this.isPlayer()),this.getSpeciesForm(s).getSpriteId(this.getGender(s)===at.FEMALE,this.formIndex,this.shiny,this.variant,A)}getSpriteKey(A){return this.getSpeciesForm(A).getSpriteKey(this.getGender(A)===at.FEMALE,this.formIndex,this.shiny,this.variant)}getBattleSpriteKey(A,s){return`pkmn__${this.getBattleSpriteId(A,s)}`}getFusionSpriteId(A){return this.getFusionSpeciesForm(A).getSpriteId(this.getFusionGender(A)===at.FEMALE,this.fusionFormIndex,this.fusionShiny,this.fusionVariant)}getFusionBattleSpriteId(A,s){return A===void 0&&(A=this.isPlayer()),this.getFusionSpeciesForm(s).getSpriteId(this.getFusionGender(s)===at.FEMALE,this.fusionFormIndex,this.fusionShiny,this.fusionVariant,A)}getFusionBattleSpriteKey(A,s){return`pkmn__${this.getFusionBattleSpriteId(A,s)}`}getFusionBattleSpriteAtlasPath(A,s){return this.getFusionBattleSpriteId(A,s).replace(/\_{2}/g,"/")}getIconAtlasKey(A){return this.getSpeciesForm(A).getIconAtlasKey(this.formIndex,this.shiny,this.variant)}getFusionIconAtlasKey(A){return this.getFusionSpeciesForm(A).getIconAtlasKey(this.fusionFormIndex,this.fusionShiny,this.fusionVariant)}getIconId(A){return this.getSpeciesForm(A).getIconId(this.getGender(A)===at.FEMALE,this.formIndex,this.shiny,this.variant)}getFusionIconId(A){return this.getFusionSpeciesForm(A).getIconId(this.getFusionGender(A)===at.FEMALE,this.fusionFormIndex,this.fusionShiny,this.fusionVariant)}getSpeciesForm(A){var s;return!A&&((s=this.summonData)!=null&&s.speciesForm)?this.summonData.speciesForm:this.species.forms&&this.species.forms.length>0?this.species.forms[this.formIndex]:this.species}getFusionSpeciesForm(A){var s,R,a,i,r;return!A&&((s=this.summonData)!=null&&s.speciesForm)?this.summonData.fusionSpeciesForm:!((a=(R=this.fusionSpecies)==null?void 0:R.forms)!=null&&a.length)||this.fusionFormIndex>=((i=this.fusionSpecies)==null?void 0:i.forms.length)?this.fusionSpecies:(r=this.fusionSpecies)==null?void 0:r.forms[this.fusionFormIndex]}getSprite(){return this.getAt(0)}getTintSprite(){return this.maskEnabled?this.maskSprite:this.getAt(1)}getSpriteScale(){const A=this.getFormKey();return this.isMax()===!0||A==="segin-starmobile"||A==="schedar-starmobile"||A==="navi-starmobile"||A==="ruchbah-starmobile"||A==="caph-starmobile"?1.5:this.customPokemonData.spriteScale>0?this.customPokemonData.spriteScale:1}resetSprite(){this.setVisible(!1),this.isOffsetBySubstitute()&&(this.x-=this.getSubstituteOffset()[0],this.y-=this.getSubstituteOffset()[1]),this.setAlpha(1),this.setScale(this.getSpriteScale())}getHeldItems(){return n?n.findModifiers(A=>A instanceof dt&&A.pokemonId===this.id,this.isPlayer()):[]}updateScale(){this.setScale(this.getSpriteScale())}updateSpritePipelineData(){[this.getSprite(),this.getTintSprite()].filter(A=>!!A).map(A=>A.pipelineData.teraColor=yR(this.getTeraType())),this.updateInfo(!0)}initShinySparkle(){const A=n.addFieldSprite(0,0,"shiny");A.setVisible(!1),A.setOrigin(.5,1),this.add(A),this.shinySparkle=A}tryPlaySprite(A,s,R){try{A.play(R),s.play(R)}catch(a){return console.error(`Couldn't play animation for '${R}'!
Is the image for this Pokemon missing?
`,a),!1}return!0}playAnim(){this.tryPlaySprite(this.getSprite(),this.getTintSprite(),this.getBattleSpriteKey())}getFieldPositionOffset(){switch(this.fieldPosition){case 0:return[0,0];case 1:return[-32,-8];case 2:return[32,0]}}getSubstituteOffset(){return this.isPlayer()?[-30,10]:[30,-10]}isOffsetBySubstitute(){const A=this.getTag(mE);if(A){if(A.sprite===void 0)return!1;const s=n.getCurrentPhase();return!(s instanceof PR&&s.getPokemon()===this)}else return!1}destroySubstitute(){const A=this.getTag(mE);A&&A.sprite&&A.sprite.destroy()}setFieldPosition(A,s){return new Promise(R=>{if(A===this.fieldPosition){R();return}const a=this.getFieldPositionOffset();this.fieldPosition=A,this.battleInfo.setMini(A!==0),this.battleInfo.setOffset(A===2);const i=this.getFieldPositionOffset(),r=i[0]-a[0],L=i[1]-a[1],o=this.getTag(mE);if(s){const l=[this];o!=null&&o.sprite&&l.push(o.sprite),n.tweens.add({targets:l,x:N((C,M,D)=>D+r,"x"),y:N((C,M,D)=>D+L,"y"),duration:s,ease:"Sine.easeOut",onComplete:N(()=>R(),"onComplete")})}else this.x+=r,this.y+=L,o!=null&&o.sprite&&(o.sprite.x+=r,o.sprite.y+=L)})}getStats(A=!0){var s;return!A&&((s=this.summonData)!=null&&s.stats)?this.summonData.stats:this.stats}getStat(A,s=!0){return!s&&this.summonData&&this.summonData.stats[A]!==0?this.summonData.stats[A]:this.stats[A]}setStat(A,s,R=!0){s>=0&&(!R&&this.summonData?this.summonData.stats[A]=s:this.stats[A]=s)}getStatStages(){return this.summonData?this.summonData.statStages:[0,0,0,0,0,0,0]}getStatStage(A){return this.summonData?this.summonData.statStages[A-1]:0}setStatStage(A,s){this.summonData&&(s>=-6?this.summonData.statStages[A-1]=Math.min(s,6):this.summonData.statStages[A-1]=Math.max(s,-6))}getCritStage(A,s){const R=new _s(0);MA(jA,A,this,s,R),n.applyModifiers(aL,A.isPlayer(),A,R),n.applyModifiers(Io,A.isPlayer(),R);const a=new Lt(!1);ut(HU,A,null,!1,a)&&a.value&&(R.value+=1);const i=A.getTag(kS);return i&&(i instanceof ru?R.value+=i.typesOnAdd.includes(I.DRAGON)?2:1:R.value+=2),console.log(`crit stage: +${R.value}`),R.value}getEffectiveStat(A,s,R,a=!1,i=!1,r=!1,L=!0){var D,_;const o=new Et(this.getStat(A,!1));n.applyModifiers(IL,this.isPlayer(),this,A,o);const l=new Lt(!1);for(const P of n.getField(!0))if(cJ(ma,P,A,o,this,l,L),l.value)break;a||z0(fA,this,A,o,L);let C=o.value*this.getStatStageMultiplier(A,s,R,i,r,L);switch(A){case K.ATK:this.getTag(y.SLOW_START)&&(C>>=1);break;case K.DEF:this.isOfType(I.ICE)&&((D=n.arena.weather)==null?void 0:D.weatherType)===Oe.SNOW&&(C*=1.5);break;case K.SPATK:break;case K.SPDEF:this.isOfType(I.ROCK)&&((_=n.arena.weather)==null?void 0:_.weatherType)===Oe.SANDSTORM&&(C*=1.5);break;case K.SPD:const P=this.isPlayer()?St.PLAYER:St.ENEMY;n.arena.getTagOnSide(ge.TAILWIND,P)&&(C*=2),n.arena.getTagOnSide(ge.GRASS_WATER_PLEDGE,P)&&(C>>=2),this.getTag(y.SLOW_START)&&(C>>=1),this.status&&this.status.effect===ne.PARALYSIS&&(C>>=1),this.getTag(y.UNBURDEN)&&this.hasAbility(O.UNBURDEN)&&(C*=2);break}const M=this.findTag(P=>P instanceof bS&&P.stat===A);return M&&(C*=M.multiplier),Math.floor(C)}calculateStats(){this.stats||(this.stats=[0,0,0,0,0,0]);const A=this.calculateBaseStats();for(const s of VO){const R=new _s(Math.floor((2*A[s]+this.ivs[s])*this.level*.01));if(s===K.HP){if(R.value=R.value+this.level+10,n.applyModifier(ui,this.isPlayer(),this,s,R),this.hasAbility(O.WONDER_GUARD,!1,!0)&&(R.value=1),this.hp>R.value||this.hp===void 0)this.hp=R.value;else if(this.hp){const a=this.getMaxHp();a&&R.value>a&&(this.hp+=R.value-a)}}else{R.value+=5;const a=new Et(xo(this.getNature(),s));n.applyModifier(ho,this.isPlayer(),this,a),a.value!==1&&(R.value=Math.max(Math[a.value>1?"ceil":"floor"](R.value*a.value),1)),n.applyModifier(ui,this.isPlayer(),this,s,R)}R.value=sE.Math.Clamp(R.value,1,Number.MAX_SAFE_INTEGER),this.setStat(s,R.value)}}calculateBaseStats(){const A=this.getSpeciesForm(!0).baseStats.slice(0);if(as(n.gameMode,XE.FLIP_STAT,this,A),n.applyModifiers(No,this.isPlayer(),this,A),n.applyModifiers(To,this.isPlayer(),this,A),this.isFusion()){const s=this.getFusionSpeciesForm(!0).baseStats;for(const R of VO)A[R]=Math.ceil((A[R]+s[R])/2)}else if(n.gameMode.isSplicedOnly)for(const s of VO)A[s]=Math.ceil(A[s]/2);return n.applyModifiers(ro,this.isPlayer(),this,A),A}getNature(){return this.customPokemonData.nature!==-1?this.customPokemonData.nature:this.nature}setNature(A){this.nature=A,this.calculateStats()}setCustomNature(A){this.customPokemonData.nature=A,this.calculateStats()}generateNature(A){A===void 0&&(A=DE(At));const s=A[ce(A.length)];this.setNature(s)}isFullHp(){return this.hp>=this.getMaxHp()}getMaxHp(){return this.getStat(K.HP)}getInverseHp(){return this.getMaxHp()-this.hp}getHpRatio(A=!1){return A?this.hp/this.getMaxHp():Math.round(this.hp/this.getMaxHp()*100)/100}generateGender(){this.species.malePercent===null?this.gender=at.GENDERLESS:this.id%256*.390625<this.species.malePercent?this.gender=at.MALE:this.gender=at.FEMALE}getGender(A){var s;return!A&&((s=this.summonData)==null?void 0:s.gender)!==void 0?this.summonData.gender:this.gender}getFusionGender(A){var s;return!A&&((s=this.summonData)==null?void 0:s.fusionGender)!==void 0?this.summonData.fusionGender:this.fusionGender}isShiny(){return this.shiny||this.isFusion()&&this.fusionShiny}getVariant(){return this.isFusion()?Math.max(this.variant,this.fusionVariant):this.variant}getLuck(){return this.luck+(this.isFusion()?this.fusionLuck:0)}isFusion(){return!!this.fusionSpecies}hasFusionSpecies(A){var s;return((s=this.fusionSpecies)==null?void 0:s.speciesId)===A}getMoveset(A){var a;const s=!A&&((a=this.summonData)!=null&&a.moveset)?this.summonData.moveset:this.moveset;let R=this.isPlayer()?Ye.MOVESET_OVERRIDE:Ye.OPP_MOVESET_OVERRIDE;return Array.isArray(R)||(R=[R]),R.length>0&&(this.isPlayer()||(this.moveset=[]),R.forEach((i,r)=>{var o;const L=((o=this.moveset[r])==null?void 0:o.ppUsed)??0;this.moveset[r]=new nt(i,Math.min(L,we[i].pp))})),s}getUnlockedEggMoves(){const A=[],s=this.metSpecies in KE?this.metSpecies:this.getSpeciesForm(!0).getRootSpeciesId(!0);if(s in KE)for(let R=0;R<4;R++)n.gameData.starterData[s].eggMoves&1<<R&&A.push(KE[s][R]);return A}getLearnableLevelMoves(){let A=this.getLevelMoves(1,!0,!1,!0).map(s=>s[1]);return this.metBiome===-1&&!n.gameMode.isFreshStartChallenge()&&!n.gameMode.isDaily&&(A=this.getUnlockedEggMoves().concat(A)),Array.isArray(this.usedTMs)&&this.usedTMs.length>0&&(A=this.usedTMs.filter(s=>!A.includes(s)).concat(A)),A=A.filter(s=>!this.moveset.some(R=>(R==null?void 0:R.moveId)===s)),A}getTypes(A=!1,s=!1,R=!1){var i,r,L;const a=[];if(A){const o=this.getTeraType();if(o!==I.UNKNOWN&&(a.push(o),s))return a}if(!a.length||!A)if(!R&&((i=this.summonData)!=null&&i.types)&&this.summonData.types.length>0)this.summonData.types.forEach(o=>a.push(o));else if(this.customPokemonData.types&&this.customPokemonData.types.length>0){a.push(this.customPokemonData.types[0]);const o=this.getFusionSpeciesForm(R);if(o){const l=(r=this.fusionCustomPokemonData)==null?void 0:r.types;l&&l.length>=2&&l[1]!==a[0]?a.push(l[1]):l&&l.length===1&&l[0]!==a[0]?a.push(l[0]):o.type2!==null&&o.type2!==a[0]?a.push(o.type2):o.type1!==a[0]&&a.push(o.type1)}a.length===1&&this.customPokemonData.types.length>=2&&a.push(this.customPokemonData.types[1])}else{const o=this.getSpeciesForm(R);a.push(o.type1);const l=this.getFusionSpeciesForm(R);if(l){const C=(L=this.fusionCustomPokemonData)==null?void 0:L.types;C&&C.length>=2&&C[1]!==a[0]?a.push(C[1]):C&&C.length===1&&C[0]!==a[0]?a.push(C[0]):l.type2!==null&&l.type2!==o.type1?a.push(l.type2):l.type1!==o.type1&&a.push(l.type1)}a.length===1&&o.type2!==null&&a.push(o.type2)}if(a.length||a.push(I.UNKNOWN),a.length>1&&a.includes(I.UNKNOWN)){const o=a.indexOf(I.UNKNOWN);o!==-1&&a.splice(o,1)}return!R&&this.summonData&&this.summonData.addedType&&!a.includes(this.summonData.addedType)&&a.push(this.summonData.addedType),a.length>1&&a[0]===a[1]&&a.splice(0,1),a}isOfType(A,s=!0,R=!1,a=!1){return this.getTypes(s,R,a).some(i=>i===A)}getAbility(A=!1){var R,a;if(!A&&((R=this.summonData)!=null&&R.ability))return NE[this.summonData.ability];if(Ye.ABILITY_OVERRIDE&&this.isPlayer())return NE[Ye.ABILITY_OVERRIDE];if(Ye.OPP_ABILITY_OVERRIDE&&!this.isPlayer())return NE[Ye.OPP_ABILITY_OVERRIDE];if(this.isFusion())return!ve((a=this.fusionCustomPokemonData)==null?void 0:a.ability)&&this.fusionCustomPokemonData.ability!==-1?NE[this.fusionCustomPokemonData.ability]:NE[this.getFusionSpeciesForm(A).getAbility(this.fusionAbilityIndex)];if(!ve(this.customPokemonData.ability)&&this.customPokemonData.ability!==-1)return NE[this.customPokemonData.ability];let s=this.getSpeciesForm(A).getAbility(this.abilityIndex);return s===O.NONE&&(s=this.species.ability1),NE[s]}getPassiveAbility(){if(Ye.PASSIVE_ABILITY_OVERRIDE&&this.isPlayer())return NE[Ye.PASSIVE_ABILITY_OVERRIDE];if(Ye.OPP_PASSIVE_ABILITY_OVERRIDE&&!this.isPlayer())return NE[Ye.OPP_PASSIVE_ABILITY_OVERRIDE];if(!ve(this.customPokemonData.passive)&&this.customPokemonData.passive!==-1)return NE[this.customPokemonData.passive];let A=this.species.speciesId;for(;yA.hasOwnProperty(A);)A=yA[A];return NE[bP[A]]}getAbilityAttrs(A,s=!0,R=!1){const a=[];return(!s||this.canApplyAbility())&&a.push(...this.getAbility(R).getAttrs(A)),(!s||this.canApplyAbility(!0))&&a.push(...this.getPassiveAbility().getAttrs(A)),a}hasPassive(){if(Ye.PASSIVE_ABILITY_OVERRIDE!==O.NONE&&this.isPlayer()||Ye.OPP_PASSIVE_ABILITY_OVERRIDE!==O.NONE&&!this.isPlayer())return!0;const{currentBattle:A,gameMode:s}=n,R=A==null?void 0:A.waveIndex;return this instanceof xs&&((A==null?void 0:A.battleSpec)===SE.FINAL_BOSS||s.isEndlessMinorBoss(R)||s.isEndlessMajorBoss(R))?!1:this.passive||this.isBoss()}canApplyAbility(A=!1){var a,i;if(A&&!this.hasPassive())return!1;const s=A?this.getPassiveAbility():this.getAbility();if(this.isFusion()&&s.hasAttr(Os))return!1;const R=(a=n)==null?void 0:a.arena;if(R.ignoreAbilities&&R.ignoringEffectSource!==this.getBattlerIndex()&&s.isIgnorable||(i=this.summonData)!=null&&i.abilitySuppressed&&!s.hasAttr(LE))return!1;if(this.isOnField()&&!s.hasAttr(KI)){const r=new Lt(!1);if(n.getField(!0).filter(L=>L!==this).map(L=>{L.getAbility().hasAttr(KI)&&L.canApplyAbility()&&L.getAbility().getAttrs(KI).map(o=>o.apply(this,!1,!1,r,[s])),L.getPassiveAbility().hasAttr(KI)&&L.canApplyAbility(!0)&&L.getPassiveAbility().getAttrs(KI).map(o=>o.apply(this,!0,!1,r,[s]))}),r.value)return!1}return(this.hp>0||s.isBypassFaint)&&!s.conditions.find(r=>!r(this))}hasAbility(A,s=!0,R){return!!(this.getAbility(R).id===A&&(!s||this.canApplyAbility())||this.getPassiveAbility().id===A&&this.hasPassive()&&(!s||this.canApplyAbility(!0)))}hasAbilityWithAttr(A,s=!0,R){return!!((!s||this.canApplyAbility())&&this.getAbility(R).hasAttr(A)||this.hasPassive()&&(!s||this.canApplyAbility(!0))&&this.getPassiveAbility().hasAttr(A))}getWeight(){const A=this.getTag(ou);let s=0;ve(A)||(s=100*A.autotomizeCount);const R=.1,a=new Et(this.species.weight-s);return ut(vS,this,null,!1,a),Math.max(R,a.value)}getTeraType(){if(n===void 0)return console.warn("Pokemon.getTeraType(): Global scene is not defined!"),I.UNKNOWN;const A=n.findModifier(s=>s instanceof SR&&s.pokemonId===this.id&&s.getBattlesLeft()>0,this.isPlayer());return(A==null?void 0:A.teraType)??I.UNKNOWN}isTerastallized(){return this.getTeraType()!==I.UNKNOWN}isGrounded(){return!!this.getTag(XS)||!this.isOfType(I.FLYING,!0,!0)&&!this.hasAbility(O.LEVITATE)&&!this.getTag(y.FLOATING)&&!this.getTag(_n)}isTrapped(A=[],s=!0){var o;const R=this.getTag(y.COMMANDED);if((o=R==null?void 0:R.getSourcePokemon())!=null&&o.isActive(!0))return!0;if(this.isOfType(I.GHOST))return!1;const a=new Lt(!1);(this.isPlayer()?n.getEnemyField():n.getPlayerField()).filter(l=>l.switchOutStatus===!1).forEach(l=>WJ(kU,l,a,this,A,s));const L=this.isPlayer()?St.PLAYER:St.ENEMY;return a.value||!!this.getTag(vR)||!!n.arena.getTagOnSide(ge.FAIRY_LOCK,L)}getMoveType(A,s=!0){const R=new Et(A.type);return MA(Ls,this,null,A,R),XO(Tn,this,null,A,s,R),n.arena.applyTags(ge.ION_DELUGE,s,R),this.getTag(y.ELECTRIFIED)&&(R.value=I.ELECTRIC),R.value}getMoveEffectiveness(A,s,R=!1,a=!0,i){var C,M;if(!ve((C=this.turnData)==null?void 0:C.moveEffectiveness))return(M=this.turnData)==null?void 0:M.moveEffectiveness;if(s.hasAttr(to))return 1;const r=A.getMoveType(s),L=new Et(s.category!==Pt.STATUS||s.hasAttr(Gu)?this.getAttackTypeEffectiveness(r,A,!1,a,s):1);MA(Ci,A,this,s,L),this.getTypes(!0,!0).find(D=>s.isTypeImmune(A,this,D))&&(L.value=0),this.getTag(Su)&&this.getMoveType(s)===I.FIRE&&(L.value*=2);const o=i??new Lt(!1);R||(Wn(oO,this,A,s,o,a,L),o.value||Wn(vn,this,A,s,o,a,L),o.value||(this.isPlayer()?n.getPlayerField():n.getEnemyField()).forEach(_=>Wn(Sr,_,A,s,o)));const l=this.findTags(D=>D instanceof iu&&D.immuneType===r);for(const D of l)if(s&&!s.getAttrs(FR).some(_=>_.tagType===D.tagType)){L.value=0;break}return!R&&s.category!==Pt.STATUS&&Wn(IU,this,A,s,o,a,L),s.category===Pt.STATUS&&s.hitsSubstitute(A,this)&&(L.value=0),o.value?0:L.value}getAttackTypeEffectiveness(A,s,R=!1,a=!0,i){var C;if(A===I.STELLAR)return this.isTerastallized()?2:1;const r=this.getTypes(!0,!0),L=n.arena;if(A===I.GROUND&&(this.isGrounded()||L.hasTag(ge.GRAVITY))){const M=r.indexOf(I.FLYING);M>-1&&r.splice(M,1)}let o=r.map(M=>{const D=new Et(i_(A,M));if(as(n.gameMode,XE.TYPE_EFFECTIVENESS,D),i&&MA(aD,null,this,i,D,M),s){const _=new Lt(!1);if(s.isActive(!0)&&s.hasAbilityWithAttr(Qr)&&ut(Qr,s,_,a,A,M),_.value&&D.value===0||this.findTags(h=>h instanceof jr).some(h=>h.ignoreImmunity(M,A))&&D.value===0)return 1}return D.value}).reduce((M,D)=>M*D,1);const l=new Et(i_(A,I.FLYING));return as(n.gameMode,XE.TYPE_EFFECTIVENESS,l),!R&&((C=L.weather)==null?void 0:C.weatherType)===Oe.STRONG_WINDS&&!L.weather.isEffectSuppressed()&&this.isOfType(I.FLYING)&&l.value===2&&(o/=2,a||n.queueMessage(u.t("weather:strongWindsEffectMessage"))),o}getMatchupScore(A){const s=this.getTypes(!0),R=A.getTypes(!0,!0),a=(this.isActive(!0)?this.getEffectiveStat(K.SPD,A):this.getStat(K.SPD,!1))>=A.getEffectiveStat(K.SPD,this);let i=A.getAttackTypeEffectiveness(s[0],this)*(a?1.25:1),r=1/Math.max(this.getAttackTypeEffectiveness(R[0],A),.25);s.length>1&&(i*=A.getAttackTypeEffectiveness(s[1],this)),R.length>1&&(r*=1/Math.max(this.getAttackTypeEffectiveness(R[1],A),.25));let L=this.getHpRatio()+(1-A.getHpRatio());return a&&(L=Math.min(L*1.5,1)),(i+r)*L}getEvolution(){if(bt.hasOwnProperty(this.species.speciesId)){const A=bt[this.species.speciesId];for(const s of A)if(!s.item&&this.level>=s.level&&(ve(s.preFormKey)||this.getFormKey()===s.preFormKey)&&(s.condition===null||s.condition.predicate(this)))return s}if(this.isFusion()&&this.fusionSpecies&&bt.hasOwnProperty(this.fusionSpecies.speciesId)){const A=bt[this.fusionSpecies.speciesId].map(s=>new kn(this.species.speciesId,s));for(const s of A)if(!s.item&&this.level>=s.level&&(ve(s.preFormKey)||this.getFusionFormKey()===s.preFormKey)&&(s.condition===null||s.condition.predicate(this)))return s}return null}getLevelMoves(A,s=!1,R=!1,a=!1,i=0){const r=[];let L=[];if(A||(A=this.level),i===4&&this.fusionSpecies)L=this.getFusionSpeciesForm(!0).getLevelMoves().filter(o=>s&&o[0]===Ee||a&&o[0]===X||o[0]>0);else{if(R){const o=this.species.getSimulatedEvolutionChain(this.level,this.hasTrainer(),this.isBoss(),this.isPlayer());for(let l=0;l<o.length;l++){const C=Vn(o[l][0],this.formIndex).getLevelMoves();a?L.push(...C):L.push(...C.filter(M=>s&&M[0]===Ee||(!l||M[0]>1)&&(l===o.length-1||M[0]<=o[l+1][1])))}}else L=this.getSpeciesForm(!0).getLevelMoves().filter(o=>s&&o[0]===Ee||a&&o[0]===X||o[0]>0);if(this.fusionSpecies&&i!==5)if(R){const o=this.fusionSpecies.getSimulatedEvolutionChain(this.level,this.hasTrainer(),this.isBoss(),this.isPlayer());for(let l=0;l<o.length;l++){const C=Vn(o[l][0],this.fusionFormIndex).getLevelMoves();a?L.push(...C.filter(M=>s&&M[0]===Ee||M[0]!==Ee)):L.push(...C.filter(M=>s&&M[0]===Ee||(!l||M[0]>1)&&(l===o.length-1||M[0]<=o[l+1][1])))}}else L.push(...this.getFusionSpeciesForm(!0).getLevelMoves().filter(o=>s&&o[0]===Ee||a&&o[0]===X||o[0]>0))}return L.sort((o,l)=>o[0]>l[0]?1:o[0]<l[0]?-1:0),L=L.filter(o=>{const l=o[0],C=l<A,M=l===0&&s;return!(l>this.level)&&(a||!C||M)}),L&&this.getUniqueMoves(L,r),r}getUniqueMoves(A,s){const R=[];for(const a of A)R.find(i=>i===a[1])||(R.push(a[1]),s.push(a))}getEggMoves(){return KE[this.getSpeciesForm().getRootSpeciesId()]}setMove(A,s){var a;const R=s?new nt(s):null;this.moveset[A]=R,(a=this.summonData)!=null&&a.moveset&&(this.summonData.moveset[A]=R)}trySetShiny(A){if(n.gameMode.isEndless&&n.arena.biomeType===T.END)return!1;const s=(this.id&4294901760)>>>16,R=this.id&65535,a=n.gameData.trainerId^n.gameData.secretId,i=s^R,r=new Et(gx);return A===void 0?(n.eventManager.isEventActive()&&(r.value*=n.eventManager.getShinyMultiplier()),this.hasTrainer()||n.applyModifiers(ci,!0,r)):r.value=A,this.shiny=(a^i)<r.value,this.shiny&&this.initShinySparkle(),this.shiny}trySetShinySeed(A,s){const R=new Et(gx);return A===void 0||s?(A!==void 0&&s&&(R.value=A),n.eventManager.isEventActive()&&(R.value*=n.eventManager.getShinyMultiplier()),this.hasTrainer()||n.applyModifiers(ci,!0,R)):R.value=A,this.shiny=ce(65536)<R.value,this.shiny&&(this.variant=this.generateShinyVariant(),this.luck=this.variant+1+(this.fusionShiny?this.fusionVariant+1:0),this.initShinySparkle()),this.shiny}generateShinyVariant(){var a;const A=this.formIndex;let s=this.species.speciesId;if(this.species.forms.length>0){const i=(a=this.species.forms[A])==null?void 0:a.formKey;i&&(s=`${s}-${i}`)}if(!this.shiny||!qs.hasOwnProperty(s)&&!qs.hasOwnProperty(this.species.speciesId))return 0;const R=new Et(0);return n.executeWithSeedOffset(()=>{R.value=ce(10)},this.id,n.waveSeed),R.value>=j6?0:R.value>=e8?1:2}tryRerollHiddenAbilitySeed(A,s){if(!this.species.abilityHidden)return!1;const R=new Et(vM);return A===void 0||s?(A!==void 0&&s&&(R.value=A),this.hasTrainer()||n.applyModifiers(Gn,!0,R)):R.value=A,ce(65536)<R.value&&(this.abilityIndex=2),this.abilityIndex===2}generateFusionSpecies(A){var L;const s=new Et(vM);this.hasTrainer()||n.applyModifiers(Gn,!0,s);const R=!ce(s.value),a=ce(2),i=A?o=>bt.hasOwnProperty(o.speciesId)&&!yA.hasOwnProperty(o.speciesId)&&!o.subLegendary&&!o.legendary&&!o.mythical&&!o.isTrainerForbidden()&&o.speciesId!==this.species.speciesId&&o.speciesId!==e.DITTO:this.species.getCompatibleFusionSpeciesFilter();let r;A&&this instanceof vE&&Ye.STARTER_FUSION_SPECIES_OVERRIDE?r=ke(Ye.STARTER_FUSION_SPECIES_OVERRIDE):this instanceof xs&&Ye.OPP_FUSION_SPECIES_OVERRIDE&&(r=ke(Ye.OPP_FUSION_SPECIES_OVERRIDE)),this.fusionSpecies=r??n.randomSpecies(((L=n.currentBattle)==null?void 0:L.waveIndex)||0,this.level,!1,i,!0),this.fusionAbilityIndex=this.fusionSpecies.abilityHidden&&R?2:this.fusionSpecies.ability2!==this.fusionSpecies.ability1?a:0,this.fusionShiny=this.shiny,this.fusionVariant=this.variant,this.fusionSpecies.malePercent===null?this.fusionGender=at.GENDERLESS:this.id%256*.390625<this.fusionSpecies.malePercent?this.fusionGender=at.MALE:this.fusionGender=at.FEMALE,this.fusionFormIndex=n.getSpeciesFormIndex(this.fusionSpecies,this.fusionGender,this.getNature(),!0),this.fusionLuck=this.luck,this.generateName()}clearFusionSpecies(){this.fusionSpecies=null,this.fusionFormIndex=0,this.fusionAbilityIndex=0,this.fusionShiny=!1,this.fusionVariant=0,this.fusionGender=0,this.fusionLuck=0,this.fusionCustomPokemonData=null,this.generateName(),this.calculateStats()}generateAndPopulateMoveset(){var C,M;this.moveset=[];let A=[];const s=this.getLevelMoves(1,!0,!0);if(!s){console.warn("Error encountered trying to generate moveset for:",this.species.name);return}for(let D=0;D<s.length;D++){const _=s[D];if(this.level<_[0])break;let P=_[0];P===0&&(P=50),P===1&&we[_[1]].power>=80&&(P=40),!A.some(h=>h[0]===_[1])&&!we[_[1]].name.endsWith(" (N)")&&A.push([_[1],P])}if(this.hasTrainer()){const D=Object.keys(ja);for(const _ of D){const P=parseInt(_);let h=!1;for(const H of ja[_])if(Array.isArray(H)){if(H[0]===this.species.speciesId||this.fusionSpecies&&H[0]===this.fusionSpecies.speciesId&&H.slice(1).indexOf(this.species.forms[this.formIndex])>-1){h=!0;break}}else if(H===this.species.speciesId||this.fusionSpecies&&H===this.fusionSpecies.speciesId){h=!0;break}h&&!A.some(H=>H[0]===P)&&!we[P].name.endsWith(" (N)")&&(cl[P]===w.COMMON&&this.level>=15?A.push([P,4]):cl[P]===w.GREAT&&this.level>=30?A.push([P,8]):cl[P]===w.ULTRA&&this.level>=50&&A.push([P,14]))}if(this.level>=60){for(let P=0;P<3;P++){const h=KE[this.species.getRootSpeciesId()][P];!A.some(H=>H[0]===h)&&!we[h].name.endsWith(" (N)")&&A.push([h,40])}const _=KE[this.species.getRootSpeciesId()][3];if(this.level>=170&&!A.some(P=>P[0]===_)&&!we[_].name.endsWith(" (N)")&&!this.isBoss()&&A.push([_,30]),this.fusionSpecies){for(let h=0;h<3;h++){const H=KE[this.fusionSpecies.getRootSpeciesId()][h];!A.some(d=>d[0]===H)&&!we[H].name.endsWith(" (N)")&&A.push([H,40])}const P=KE[this.fusionSpecies.getRootSpeciesId()][3];this.level>=170&&!A.some(h=>h[0]===P)&&!we[P].name.endsWith(" (N)")&&!this.isBoss()&&A.push([P,30])}}}this.isBoss()&&(A=A.filter(D=>!we[D[0]].hasAttr(Qn))),A=A.filter(D=>!we[D[0]].hasAttr(oi)),this.hasTrainer()&&(A=A.filter(D=>!we[D[0]].hasAttr(QO)),A=A.map(D=>[D[0],D[1]*(we[D[0]].hasAttr(Qn)?.5:1)]),A=A.map(D=>[D[0],D[1]*(we[D[0]].hasAttr(oi)?.5:1)]),A=A.map(D=>[D[0],D[1]*(we[D[0]].getAttrs(_e).some(_=>_.stages>1&&_.selfTarget)?1.25:1)]),A=A.map(D=>[D[0],D[1]*(we[D[0]].isChargingMove()||we[D[0]].hasAttr(QR)?.7:1)]));const R=Math.min(A.reduce((D,_)=>Math.max(we[_[0]].power,D),40),90);A=A.map(D=>[D[0],D[1]*(we[D[0]].category===Pt.STATUS?1:Math.max(Math.min(we[D[0]].power/R,1),.5))]);const a=this.getStat(K.ATK),i=this.getStat(K.SPATK),r=a>i?Pt.SPECIAL:Pt.PHYSICAL,L=r===Pt.PHYSICAL?a/i:i/a;A=A.map(D=>[D[0],D[1]*(we[D[0]].category===r?L:1)]);let o=.9;this.hasTrainer()&&(o+=.7),this.isBoss()&&(o+=.4);const l=A.map(D=>[D[0],Math.ceil(Math.pow(D[1],o)*100)]);if(this.hasTrainer()||this.isBoss()){const D=l.filter(_=>we[_[0]].category!==Pt.STATUS&&this.isOfType(we[_[0]].type));if(D.length){const _=D.reduce((H,d)=>H+d[1],0);let P=ce(_),h=0;for(;P>D[h][1];)P-=D[h++][1];this.moveset.push(new nt(D[h][0],0,0))}}else{const D=l.filter(_=>we[_[0]].category!==Pt.STATUS);if(D.length){const _=D.reduce((H,d)=>H+d[1],0);let P=ce(_),h=0;for(;P>D[h][1];)P-=D[h++][1];this.moveset.push(new nt(D[h][0],0,0))}}for(;l.length>this.moveset.length&&this.moveset.length<4;){this.hasTrainer()?A=l.filter(h=>!this.moveset.some(H=>h[0]===(H==null?void 0:H.moveId))).map(h=>{let H;return this.moveset.some(d=>(d==null?void 0:d.getMove().category)!==Pt.STATUS&&(d==null?void 0:d.getMove().type)===we[h[0]].type)?H=Math.ceil(Math.sqrt(h[1])):we[h[0]].category!==Pt.STATUS?H=Math.ceil(h[1]/Math.max(Math.pow(4,this.moveset.filter(d=>((d==null?void 0:d.getMove().power)??0)>1).length)/8,.5)*(this.isOfType(we[h[0]].type)?2:1)):H=h[1],[h[0],H]}):A=l.filter(h=>!this.moveset.some(H=>h[0]===(H==null?void 0:H.moveId)));const D=A.reduce((h,H)=>h+H[1],0);let _=ce(D),P=0;for(;_>A[P][1];)_-=A[P++][1];this.moveset.push(new nt(A[P][0],0,0))}(this.isPlayer()||!((C=n.currentBattle)!=null&&C.isBattleMysteryEncounter())||!((M=n.currentBattle)!=null&&M.mysteryEncounter))&&n.triggerPokemonFormChange(this,qa)}trySelectMove(A,s){const R=this.getMoveset().length>A?this.getMoveset()[A]:null;return(R==null?void 0:R.isUsable(this,s))??!1}showInfo(){if(!this.battleInfo.visible){const A=n.fieldUI.getAll().slice(0,4).filter(s=>s instanceof mT&&s instanceof pl===this.isPlayer()).find(()=>!0);!A||!this.getFieldIndex()?(n.fieldUI.sendToBack(this.battleInfo),n.sendTextToBack()):n.fieldUI.moveAbove(this.battleInfo,A),this.battleInfo.setX(this.battleInfo.x+(this.isPlayer()?150:this.isBoss()?-198:-150)),this.battleInfo.setVisible(!0),this.isPlayer()&&(this.battleInfo.expMaskRect.x+=150),n.tweens.add({targets:[this.battleInfo,this.battleInfo.expMaskRect],x:this.isPlayer()?"-=150":`+=${this.isBoss()?246:150}`,duration:1e3,ease:"Cubic.easeOut"})}}hideInfo(){return new Promise(A=>{this.battleInfo&&this.battleInfo.visible?n.tweens.add({targets:[this.battleInfo,this.battleInfo.expMaskRect],x:this.isPlayer()?"+=150":`-=${this.isBoss()?246:150}`,duration:500,ease:"Cubic.easeIn",onComplete:N(()=>{this.isPlayer()&&(this.battleInfo.expMaskRect.x-=150),this.battleInfo.setVisible(!1),this.battleInfo.setX(this.battleInfo.x-(this.isPlayer()?150:this.isBoss()?-198:-150)),A()},"onComplete")}):A()})}setSwitchOutStatus(A){this.switchOutStatus=A}updateInfo(A){return this.battleInfo.updateInfo(this,A)}updateEffectiveness(A){this.battleInfo.updateEffectiveness(A)}toggleStats(A){this.battleInfo.toggleStats(A)}toggleFlyout(A){this.battleInfo.toggleFlyout(A)}addExp(A,s=!1){const R=n.getMaxExpLevel(s),a=this.exp;for(this.exp+=A;this.level<R&&this.exp>=jR(this.level+1,this.species.growthRate);)this.level++;this.level>=R&&(console.log(a,this.exp,jR(this.level,this.species.growthRate)),this.exp=Math.max(jR(this.level,this.species.growthRate),a)),this.levelExp=this.exp-jR(this.level,this.species.growthRate)}isOpponent(A){return this.isPlayer()!==A.isPlayer()}getOpponent(A){const s=this.getOpponents()[A];return s.summonData?s:null}getOpponents(){return(this.isPlayer()?n.getEnemyField():n.getPlayerField()).filter(A=>A.isActive())}getOpponentDescriptor(){const A=this.getOpponents();return A.length===1?A[0].name:this.isPlayer()?u.t("arenaTag:opposingTeam"):u.t("arenaTag:yourTeam")}getAlly(){return(this.isPlayer()?n.getPlayerField():n.getEnemyField())[this.getFieldIndex()?0:1]}getAlliedField(){return this instanceof vE?n.getPlayerField():n.getEnemyField()}getStatStageMultiplier(A,s,R,a=!1,i=!1,r=!0){const L=new _s(this.getStatStage(A)),o=new Lt(!1);if(s){if(i)switch(A){case K.ATK:case K.SPATK:L.value=Math.max(L.value,0);break;case K.DEF:case K.SPDEF:L.value=Math.min(L.value,0);break}a||ut(yI,s,null,r,A,o),R&&MA(Ja,this,s,R,o)}if(!o.value){const l=new Et(Math.max(2,2+L.value)/Math.max(2,2-L.value));return n.applyModifiers(sL,this.isPlayer(),A,l),Math.min(l.value,4)}return 1}getAccuracyMultiplier(A,s){if(s.hasAttr(wI))return 1;const a=new _s(this.getStatStage(K.ACC)),i=new _s(A.getStatStage(K.EVA)),r=new Lt(!1),L=new Lt(!1);ut(yI,A,null,!1,K.ACC,r),ut(yI,this,null,!1,K.EVA,L),MA(Ja,this,A,s,L),n.applyModifiers(sL,this.isPlayer(),K.ACC,a),a.value=r.value?0:Math.min(a.value,6),i.value=L.value?0:i.value,A.findTag(C=>C instanceof jr)&&(i.value=Math.min(0,i.value));const o=new Et(1);a.value!==i.value&&(o.value=a.value>i.value?(3+Math.min(a.value-i.value,6))/3:3/(3+Math.min(i.value-a.value,6))),z0(fA,this,K.ACC,o,!1,s);const l=new Et(1);return z0(fA,A,K.EVA,l),o.value/l.value}getBaseDamage(A,s,R,a=!1,i=!1,r=!1,L=!0){const o=R===Pt.PHYSICAL,l=2*A.level/5+2,C=s.calculateBattlePower(A,this,L),M=new Et(A.getEffectiveStat(o?K.ATK:K.SPATK,this,void 0,i,a,r,L));MA(li,A,this,s,M);const D=new Et(this.getEffectiveStat(o?K.DEF:K.SPDEF,A,s,a,i,r,L));MA(tD,A,this,s,D);const _=l*C*M.value/D.value/50+2;return L||console.log("base damage",_,s.name,C,M.value,D.value),_}getAttackDamage(A,s,R=!1,a=!1,i=!1,r=!0){var Ae,ee;const L=new Et(0),o=this.isPlayer()?St.PLAYER:St.ENEMY,l=new Et(s.category);MA(ea,A,this,s,l);const C=l.value,M=A.getMoveType(s),D=new Lt(!1),_=this.getMoveEffectiveness(A,s,R,r,D),P=C===Pt.PHYSICAL,h=new Et(n.arena.getAttackTypeMultiplier(M,A.isGrounded()));MA(gu,A,this,s,h);const H=_*h.value===0;if(D.value||H)return{cancelled:D.value,result:s.id===t.SHEER_COLD?11:5,damage:0};const d=new Et(0);if(MA(HO,A,this,s,d),d.value){const Le=new Et(1);return n.applyModifiers(RI,A.isPlayer(),A,s.id,null,Le),d.value=yt(d.value*Le.value),{cancelled:!1,result:1,damage:d.value}}const f=new Lt(!1);if(MA(QO,A,this,s,f),f.value)return{cancelled:!1,result:4,damage:this.hp};const B=this.getBaseDamage(A,s,C,R,a,i,r),{targets:F,multiple:W}=ta(A,s.id),x=(W?F.length:1)>1?.75:1,$=new Et(1);n.applyModifiers(RI,A.isPlayer(),A,s.id,null,$),a||XO(hS,A,this,s,r,null,$);const j=new _s(1);this.getTag(y.RECEIVE_DOUBLE_DAMAGE)&&(j.value=2);const z=new Et(i?1.5:1);ut(dU,A,null,r,z);const se=r?1:this.randSeedIntRange(85,100)/100,Z=A.getTypes(),q=A.getTeraType(),p=Z.includes(M),oe=new Et(1);p&&(oe.value+=.5),MA(ur,A,this,s,oe),q!==I.UNKNOWN&&q===M&&(oe.value+=.5),a||ut(OU,A,null,r,oe),oe.value=Math.min(oe.value,2.25);const me=new Et(1);if(P&&A.status&&A.status.effect===ne.BURN&&!s.hasAttr(vu)){const Le=new Lt(!1);a||ut(VU,A,Le,r),Le.value||(me.value=.5)}const Me=new Et(1);n.arena.applyTagsForSide(Vr,o,r,A,C,Me);const We=new Et(1);s.getAttrs(FR).filter(Le=>Le.doubleDamage).forEach(Le=>{this.getTag(Le.tagType)&&(We.value*=2)});const De=((Ae=n.arena.terrain)==null?void 0:Ae.terrainType)===Tt.MISTY&&this.isGrounded()&&M===I.DRAGON?.5:1;L.value=yt(B*x*$.value*h.value*j.value*z.value*se*oe.value*_*me.value*Me.value*We.value*De),a||XO(SU,A,this,s,r,L),A.isPlayer()||n.applyModifiers(Fo,!1,L),this.isPlayer()||n.applyModifiers(po,!1,L),R||(Wn(NR,this,A,s,D,r,L),n.currentBattle.double&&((ee=this.getAlly())!=null&&ee.isActive(!0))&&Wn(nU,this.getAlly(),A,s,D,r,L)),MA(hu,A,this,s,L),this.isFullHp()&&!R&&Wn(RU,this,A,s,D,!1,L),r||console.log("damage",L.value,s.name);let ie;return _<1?ie=3:_>1?ie=2:ie=1,{cancelled:D.value,result:ie,damage:L.value}}apply(A,s){const R=this.isPlayer()?St.PLAYER:St.ENEMY,a=new Et(s.category);if(MA(ea,A,this,s,a),a.value===Pt.STATUS){const i=new Lt(!1),r=this.getMoveEffectiveness(A,s,!1,!1,i);return!i.value&&r===0&&n.queueMessage(u.t("battle:hitResultNoEffect",{pokemonName:te(this)})),r===0?5:6}else{let i;const r=new Lt(!1),L=A.getTag(y.ALWAYS_CRIT);if(MA(ln,A,this,s,r),ut(fU,A,null,!1,r,this,s),r.value||L)i=!0;else{const d=[24,8,2,1][Math.max(0,Math.min(this.getCritStage(A,s),3))];i=d===1||!n.randBattleSeedInt(d)}const o=n.arena.getTagOnSide(AU,R),l=new Lt(!1);ut(KS,this,null,!1,l),(o||l.value||Ye.NEVER_CRIT_OVERRIDE)&&(i=!1);const{cancelled:C,result:M,damage:D}=this.getAttackDamage(A,s,!1,!1,i,!1),_=A.findTag(d=>d instanceof qr&&d.boostedType===A.getMoveType(s));if(_!=null&&_.oneUse&&A.removeTag(_.tagType),C||M===11||M===5)return A.stopMultiHit(this),C||(M===11?n.queueMessage(u.t("battle:hitResultImmune",{pokemonName:te(this)})):n.queueMessage(u.t("battle:hitResultNoEffect",{pokemonName:te(this)}))),M;const P=this.getTag(y.DESTINY_BOND),h=this.getTag(y.GRUDGE),H=M===4;if(D){this.lapseTags(JE.HIT);const d=this.getTag(mE),f=!!d&&s.hitsSubstitute(A,this);f&&(d.hp-=D),!this.isPlayer()&&D>=this.hp&&n.applyModifiers(yo,!1,this);const B=this.damageAndUpdate(f?0:D,M,i,H,H,!0,A);if(B>0){A.isPlayer()&&(n.validateAchvs(da,new Et(B)),B>n.gameData.gameStats.highestDamage&&(n.gameData.gameStats.highestDamage=B)),A.turnData.totalDamageDealt+=B,A.turnData.singleHitDamageDealt=B,this.turnData.damageTaken+=B,this.battleData.hitCount++;const F={move:s.id,result:M,damage:B,critical:i,sourceId:A.id,sourceBattlerIndex:A.getBattlerIndex()};this.turnData.attacksReceived.unshift(F),A.isPlayer()&&!this.isPlayer()&&n.applyModifiers(Ia,!0,A,new Et(B))}}if(i&&n.queueMessage(u.t("battle:hitResultCriticalHit")),A.turnData.hitsLeft===1||this.isFainted())switch(M){case 2:n.queueMessage(u.t("battle:hitResultSuperEffective"));break;case 3:n.queueMessage(u.t("battle:hitResultNotVeryEffective"));break;case 4:n.queueMessage(u.t("battle:hitResultOneHitKO"));break}return this.isFainted()&&(n.setPhaseQueueSplice(),n.unshiftPhase(new hD(this.getBattlerIndex(),H,P,h,A)),this.destroySubstitute(),this.lapseTag(y.COMMANDED),this.resetSummonData()),M}}damage(A,s=!1,R=!1,a=!1){if(this.isFainted())return 0;const i=new Lt(!1);return!R&&this.hp-A<=0&&(this.hp>=1&&this.getTag(y.ENDURING)?i.value=this.lapseTag(y.ENDURING):this.hp>1&&this.getTag(y.STURDY)?i.value=this.lapseTag(y.STURDY):this.hp>=1&&this.getTag(y.ENDURE_TOKEN)&&(i.value=this.lapseTag(y.ENDURE_TOKEN)),i.value||n.applyModifiers(oo,this.isPlayer(),this,i),i.value&&(A=this.hp-1)),A=Math.min(A,this.hp),this.hp=this.hp-A,this.isFainted()&&!a&&(n.setPhaseQueueSplice(),n.unshiftPhase(new hD(this.getBattlerIndex(),R)),this.destroySubstitute(),this.lapseTag(y.COMMANDED),this.resetSummonData()),A}damageAndUpdate(A,s,R=!1,a=!1,i=!1,r=!1,L){const o=new cD(this.getBattlerIndex(),A,s,R);return n.unshiftPhase(o),this.switchOutStatus&&L&&(A=0),A=this.damage(A,a,i,r),o.updateAmount(A),(!L||L.turnData.hitCount<=1)&&k1(Jr,this,A,this.hasPassive(),!1,[],L),A}heal(A){const s=Math.min(A,this.getMaxHp()-this.hp);return this.hp+=s,s}isBossImmune(){return this.isBoss()}isMax(){const A=[Ue.GIGANTAMAX,Ue.GIGANTAMAX_RAPID,Ue.GIGANTAMAX_SINGLE,Ue.ETERNAMAX];return A.includes(this.getFormKey())||!!this.getFusionFormKey()&&A.includes(this.getFusionFormKey())}canAddTag(A){if(this.getTag(A))return!1;const s=new Yt(A,0,0),R=new Lt(!1);return Cl(Sn,this,s,R,!0),this.getAlliedField().forEach(i=>Cl(Zr,i,s,R,!0)),!R.value}addTag(A,s=0,R,a){const i=this.getTag(A);if(i)return i.onOverlap(this),!1;const r=x8(A,s,R,a),L=new Lt(!1);return Cl(Sn,this,r,L),this.getAlliedField().forEach(l=>Cl(Zr,l,r,L)),!L.value&&r.canAdd(this)?(this.summonData.tags.push(r),r.onAdd(this),!0):!1}getTag(A){return this.summonData?A instanceof Function?this.summonData.tags.find(s=>s instanceof A):this.summonData.tags.find(s=>s.tagType===A):null}findTag(A){return this.summonData?this.summonData.tags.find(s=>A(s)):null}findTags(A){return this.summonData?this.summonData.tags.filter(s=>A(s)):[]}lapseTag(A){if(!this.summonData)return!1;const s=this.summonData.tags,R=s.find(a=>a.tagType===A);return R&&!R.lapse(this,JE.CUSTOM)&&(R.onRemove(this),s.splice(s.indexOf(R),1)),!!R}lapseTags(A){if(!this.summonData)return;const s=this.summonData.tags;s.filter(R=>A===JE.FAINT||R.lapseTypes.some(a=>a===A)&&!R.lapse(this,A)).forEach(R=>{R.onRemove(this),s.splice(s.indexOf(R),1)})}removeTag(A){if(!this.summonData)return!1;const s=this.summonData.tags,R=s.find(a=>a.tagType===A);return R&&(R.onRemove(this),s.splice(s.indexOf(R),1)),!!R}findAndRemoveTags(A){if(!this.summonData)return!1;const s=this.summonData.tags,R=s.filter(a=>A(a));for(const a of R)a.turnCount=0,a.onRemove(this),s.splice(s.indexOf(a),1);return!0}removeTagsBySourceId(A){this.findAndRemoveTags(s=>s.isSourceLinked()&&s.sourceId===A)}transferTagsBySourceId(A,s){if(!this.summonData)return;this.summonData.tags.filter(a=>a.sourceId===A).forEach(a=>a.sourceId=s)}transferSummon(A){for(const s of dO){const R=A.getStatStage(s);this instanceof vE&&R===6&&n.validateAchv(Ct.TRANSFER_MAX_STAT_STAGE),this.setStatStage(s,R)}for(const s of A.summonData.tags)s.isBatonPassable&&(s instanceof Cu&&s.swapStat(this),this.summonData.tags.push(s));this.updateInfo()}isMoveRestricted(A,s){return this.getRestrictingTag(A,s)!==null}isMoveTargetRestricted(A,s,R){for(const a of this.findTags(i=>i instanceof cO))if(a.isMoveTargetRestricted(A,s,R))return a!==null;return!1}getRestrictingTag(A,s,R){for(const a of this.findTags(i=>i instanceof cO)){if(a.isMoveRestricted(A,s))return a;if(s&&R&&a.isMoveTargetRestricted(A,s,R))return a}return null}getMoveHistory(){return this.battleSummonData.moveHistory}pushMoveHistory(A){var s;this.isOnField()&&(A.turn=(s=n.currentBattle)==null?void 0:s.turn,this.getMoveHistory().push(A))}getLastXMoves(A=1){const s=this.getMoveHistory();return A>=0?s.slice(Math.max(s.length-A,0)).reverse():s.slice(0).reverse()}getMoveQueue(){return this.summonData.moveQueue}stopMultiHit(A){const s=n.getCurrentPhase();s instanceof PR&&s.getUserPokemon()===this&&s.stopMultiHit(A)}changeForm(A){return new Promise(s=>{this.formIndex=Math.max(this.species.forms.findIndex(a=>a.formKey===A.formKey),0),this.generateName();const R=this.getSpeciesForm().getAbilityCount();this.abilityIndex>=R&&(this.abilityIndex=R-1),n.gameData.setPokemonSeen(this,!1),this.setScale(this.getSpriteScale()),this.loadAssets().then(()=>{this.calculateStats(),n.updateModifiers(this.isPlayer(),!0),Promise.all([this.updateInfo(),n.updateFieldScale()]).then(()=>s())})})}cry(A,s){const R=s??n,a=this.getSpeciesForm().cry(A);let i=a.totalDuration*1e3;if(this.fusionSpecies&&this.getSpeciesForm()!==this.getFusionSpeciesForm()){let r=this.getFusionSpeciesForm().cry(A,!0);i=Math.min(i,r.totalDuration*1e3),r.destroy(),R.time.delayedCall(st(Math.ceil(i*.4)),()=>{try{AO.fadeOut(R,a,st(Math.ceil(i*.2))),r=this.getFusionSpeciesForm().cry(Object.assign({seek:Math.max(r.totalDuration*.4,0)},A)),AO.fadeIn(R,r,st(Math.ceil(i*.2)),R.masterVolume*R.fieldVolume,0)}catch(L){console.error(L)}})}return a}faintCry(A){if(this.fusionSpecies&&this.getSpeciesForm()!==this.getFusionSpeciesForm())return this.fusionFaintCry(A);const s=this.species.getCryKey(this.formIndex);let R=.85;const a=n.playSound(s,{rate:R});if(!a||n.fieldVolume===0)return A();const i=this.getSprite(),r=this.getTintSprite(),L=Math.max(n.sound.get(s).totalDuration*50,25);let o=0,l;i.anims.pause(),r==null||r.anims.pause();let C=n.time.addEvent({delay:st(L),repeat:-1,callback:N(()=>{for(l=i.anims.msPerFrame/R,o+=L;o>l;)i.anims.duration&&(i.anims.nextFrame(),r==null||r.anims.nextFrame()),o-=l;a&&!a.pendingRemove?(R*=.99,a.setRate(R)):(C==null||C.destroy(),C=null,A&&A())},"callback")});n.time.delayedCall(st(3e3),()=>{!C||!n||(a!=null&&a.isPlaying&&a.stop(),C.destroy(),A&&A())})}fusionFaintCry(A){const s=this.species.getCryKey(this.formIndex);let R=0,a=.85;const i=n.playSound(s,{rate:a}),r=this.getSprite(),L=this.getTintSprite();let o=i.totalDuration*1e3;const l=this.fusionSpecies.getCryKey(this.fusionFormIndex);let C=n.playSound(l,{rate:a});if(!i||!C||n.fieldVolume===0)return A();C.stop(),o=Math.min(o,C.totalDuration*1e3),C.destroy();const M=Math.max(o*.05,25);let D=0,_=0;const P=Math.ceil(o*.4);for(;_<P;)++R,_+=M*a,a*=.99;D=R,R=0,a=.85;let h=0,H;r.anims.pause(),L==null||L.anims.pause();let d=n.time.addEvent({delay:st(M),repeat:-1,callback:N(()=>{for(++R,H=r.anims.msPerFrame/a,h+=M;h>H;)r.anims.duration&&(r.anims.nextFrame(),L==null||L.anims.nextFrame()),h-=H;R===D&&l&&(AO.fadeOut(n,i,st(Math.ceil(o/a*.2))),C=n.playSound(l,Object.assign({seek:Math.max(C.totalDuration*.4,0),rate:a})),AO.fadeIn(n,C,st(Math.ceil(o/a*.2)),n.masterVolume*n.fieldVolume,0)),a*=.99,i&&!i.pendingRemove&&i.setRate(a),C&&!C.pendingRemove&&C.setRate(a),(!i||i.pendingRemove)&&(!C||C.pendingRemove)&&(d==null||d.destroy(),d=null,A&&A())},"callback")});n.time.delayedCall(st(3e3),()=>{!d||!n||(i!=null&&i.isPlaying&&i.stop(),C!=null&&C.isPlaying&&C.stop(),d.destroy(),A&&A())})}isOppositeGender(A){return this.gender!==at.GENDERLESS&&A.gender===(this.gender===at.MALE?at.FEMALE:at.MALE)}canSetStatus(A,s=!1,R=!1,a=null,i=!1){var l,C,M,D,_,P;if(A!==ne.FAINT&&((R?((l=this.status)==null?void 0:l.effect)===A:this.status)||this.isGrounded()&&!i&&((C=n.arena.terrain)==null?void 0:C.terrainType)===Tt.MISTY)||a&&a!==this&&this.isSafeguarded(a))return!1;const r=this.getTypes(!0,!0);switch(A){case ne.POISON:case ne.TOXIC:const h=r.map(H=>{if(H!==I.POISON&&H!==I.STEEL)return!1;const d=new Lt(!1);return!(a&&(ut(eu,a,d,!1,A,H),d.value))});if((this.isOfType(I.POISON)||this.isOfType(I.STEEL))&&h.includes(!0))return!1;break;case ne.PARALYSIS:if(this.isOfType(I.ELECTRIC))return!1;break;case ne.SLEEP:if(this.isGrounded()&&((M=n.arena.terrain)==null?void 0:M.terrainType)===Tt.ELECTRIC)return!1;break;case ne.FREEZE:if(this.isOfType(I.ICE)||!i&&((P=(_=(D=n)==null?void 0:D.arena)==null?void 0:_.weather)!=null&&P.weatherType)&&[Oe.SUNNY,Oe.HARSH_SUN].includes(n.arena.weather.weatherType))return!1;break;case ne.BURN:if(this.isOfType(I.FIRE))return!1;break}const L=new Lt(!1);return U6(gR,this,A,L,s),this.getAlliedField().forEach(h=>U6(gS,h,A,L,s)),!L.value}trySetStatus(A,s=!1,R=null,a=0,i=null){if(!this.canSetStatus(A,s,!1,R)||this.isFainted()&&A!==ne.FAINT)return!1;if((A===ne.SLEEP||A===ne.FREEZE)&&this.stopMultiHit(),s)return n.unshiftPhase(new r1(this.getBattlerIndex(),A,a,i,R)),!0;let r;if(A===ne.SLEEP){r=new Et(this.randSeedIntRange(2,4)),this.setFrameRate(4);const o=[y.UNDERGROUND,y.UNDERWATER,y.HIDDEN,y.FLYING].find(l=>this.getTag(l));o&&(this.removeTag(o),this.getMoveQueue().pop())}return r=r,A=A,this.status=new za(A,0,r==null?void 0:r.value),A!==ne.FAINT&&(n.triggerPokemonFormChange(this,m_,!0),GJ(uU,this,A,R)),!0}resetStatus(A=!0,s=!1,R=!1){var i;const a=(i=this.status)==null?void 0:i.effect;!A&&a===ne.FAINT||(this.status=null,a===ne.SLEEP&&(this.setFrameRate(10),this.getTag(y.NIGHTMARE)&&this.lapseTag(y.NIGHTMARE)),s&&this.getTag(y.CONFUSED)&&this.lapseTag(y.CONFUSED),R&&this.loadAssets(!1).then(()=>this.playAnim()))}isSafeguarded(A){const s=this.isPlayer()?St.PLAYER:St.ENEMY;if(n.arena.getTagOnSide(ge.SAFEGUARD,s)){const R=new Lt(!1);return A&&ut(Ni,A,null,!1,R),!R.value}return!1}primeSummonData(A){this.summonDataPrimer=A}resetSummonData(){var A,s;if((A=this.summonData)!=null&&A.speciesForm&&(this.summonData.speciesForm=null,this.updateFusionPalette()),this.summonData=new so,this.setSwitchOutStatus(!1),this.battleData||this.resetBattleData(),this.resetBattleSummonData(),this.summonDataPrimer){for(const R of Object.keys(this.summonData))this.summonDataPrimer[R]&&(this.summonData[R]=this.summonDataPrimer[R]);this.getTag(mE)&&(n.triggerPokemonBattleAnim(this,pR.SUBSTITUTE_ADD),this.getTag(mE).sourceInFocus=!1),this.hasAbilityWithAttr(kr)&&n.currentBattle.double&&((s=this.getAlly())==null?void 0:s.species.speciesId)===e.DONDOZO&&this.setVisible(!1),this.summonDataPrimer=null}this.updateInfo()}resetBattleData(){this.battleData=new L1}resetBattleSummonData(){this.battleSummonData=new N1,this.getTag(y.SEEDED)&&this.lapseTag(y.SEEDED),n&&n.triggerPokemonFormChange(this,wT,!0)}resetTurnData(){this.turnData=new T1}getExpValue(){return this.getSpeciesForm().getBaseExp()*this.level/5+1}setFrameRate(A){var s;n.anims.get(this.getBattleSpriteKey()).frameRate=A;try{this.getSprite().play(this.getBattleSpriteKey())}catch(R){console.error(`Failed to play animation for ${this.getBattleSpriteKey()}`,R)}try{(s=this.getTintSprite())==null||s.play(this.getBattleSpriteKey())}catch(R){console.error(`Failed to play animation for ${this.getBattleSpriteKey()}`,R)}}tint(A,s,R,a){const i=this.getTintSprite();i==null||i.setTintFill(A),i==null||i.setVisible(!0),R?(i==null||i.setAlpha(0),n.tweens.add({targets:i,alpha:s||1,duration:R,ease:a||"Linear"})):i==null||i.setAlpha(s)}untint(A,s){const R=this.getTintSprite();A?n.tweens.add({targets:R,alpha:0,duration:A,ease:s||"Linear",onComplete:N(()=>{R==null||R.setVisible(!1),R==null||R.setAlpha(1)},"onComplete")}):(R==null||R.setVisible(!1),R==null||R.setAlpha(1))}enableMask(){var A,s,R;this.maskEnabled||(this.maskSprite=this.getTintSprite(),(A=this.maskSprite)==null||A.setVisible(!0),(s=this.maskSprite)==null||s.setPosition(this.x*this.parentContainer.scale+this.parentContainer.x,this.y*this.parentContainer.scale+this.parentContainer.y),(R=this.maskSprite)==null||R.setScale(this.getSpriteScale()*this.parentContainer.scale),this.maskEnabled=!0)}disableMask(){var A,s,R;this.maskEnabled&&((A=this.maskSprite)==null||A.setVisible(!1),(s=this.maskSprite)==null||s.setPosition(0,0),(R=this.maskSprite)==null||R.setScale(this.getSpriteScale()),this.maskSprite=null,this.maskEnabled=!1)}sparkle(){this.shinySparkle&&gM(this.shinySparkle,this.variant)}updateFusionPalette(A){if(!this.getFusionSpeciesForm(A)){[this.getSprite(),this.getTintSprite()].filter(ie=>!!ie).map(ie=>{var Ae,ee;ie.pipelineData[`spriteColors${A&&((Ae=this.summonData)!=null&&Ae.speciesForm)?"Base":""}`]=[],ie.pipelineData[`fusionSpriteColors${A&&((ee=this.summonData)!=null&&ee.speciesForm)?"Base":""}`]=[]});return}const s=this.getSpeciesForm(A),R=this.getFusionSpeciesForm(A),a=s.getSpriteKey(this.getGender(A)===at.FEMALE,s.formIndex,this.shiny,this.variant),i=s.getSpriteKey(this.getGender(A)===at.FEMALE,s.formIndex,this.shiny,this.variant).replace("pkmn__","pkmn__back__"),r=R.getSpriteKey(this.getFusionGender(A)===at.FEMALE,R.formIndex,this.fusionShiny,this.fusionVariant),L=R.getSpriteKey(this.getFusionGender(A)===at.FEMALE,R.formIndex,this.fusionShiny,this.fusionVariant).replace("pkmn__","pkmn__back__"),o=n.textures.get(a),l=n.textures.get(i),C=n.textures.get(r),M=n.textures.get(L),[D,_,P,h]=[o,l,C,M].map(ie=>ie.frames[ie.firstFrame]),[H,d,f,B]=[o,l,C,M].map(ie=>ie.getSourceImage()),F=document.createElement("canvas"),W=document.createElement("canvas"),b=document.createElement("canvas"),x=document.createElement("canvas"),$=[],j=[];[F,W,b,x].forEach((ie,Ae)=>{const ee=ie.getContext("2d"),Le=[D,_,P,h][Ae];if(ie.width=Le.width,ie.height=Le.height,ee){ee.drawImage([H,d,f,B][Ae],Le.cutX,Le.cutY,Le.width,Le.height,0,0,Le.width,Le.height);const ue=ee.getImageData(Le.cutX,Le.cutY,Le.width,Le.height);j.push(ue.data)}});for(let ie=0;ie<2;ie++){const Ae=ca[ie?i:a],ee=new Map;this.shiny&&Ae&&Ae[this.variant]&&Object.keys(Ae[this.variant]).forEach(Le=>{ee.set(jo(Array.from(Object.values(cs(Le)))),Array.from(Object.values(cs(Ae[this.variant][Le]))))});for(let Le=0;Le<j[ie].length;Le+=4)if(j[ie][Le+3]){const ue=j[ie].slice(Le,Le+4);let[de,Rt,Bt,tt]=ue;if(Ae){const ht=jo([de,Rt,Bt,tt]);if(ee.has(ht)){const eA=ee.get(ht);eA&&([de,Rt,Bt,tt]=eA)}}$.find(ht=>ht[0]===de&&ht[1]===Rt&&ht[2]===Bt)||$.push([de,Rt,Bt,tt])}}const z=JSON.parse(JSON.stringify($)),se=[];for(let ie=0;ie<2;ie++)for(let Ae=0;Ae<j[ie].length;Ae+=4)j[ie].slice(Ae,Ae+3).reduce((Le,ue)=>Le+ue,0)&&se.push(js({r:j[ie][Ae],g:j[ie][Ae+1],b:j[ie][Ae+2],a:j[ie][Ae+3]}));const Z=[];for(let ie=0;ie<2;ie++){const Ae=ca[ie?L:r],ee=new Map;this.fusionShiny&&Ae&&Ae[this.fusionVariant]&&Object.keys(Ae[this.fusionVariant]).forEach(Le=>{ee.set(jo(Array.from(Object.values(cs(Le)))),Array.from(Object.values(cs(Ae[this.fusionVariant][Le]))))});for(let Le=0;Le<j[2+ie].length;Le+=4){if(!j[2+ie].slice(Le,Le+3).reduce((ht,eA)=>ht+eA,0))continue;let[de,Rt,Bt,tt]=[j[2+ie][Le],j[2+ie][Le+1],j[2+ie][Le+2],j[2+ie][Le+3]];if(Ae){const ht=jo([de,Rt,Bt,tt]);if(ee.has(ht)){const eA=ee.get(ht);eA&&([de,Rt,Bt,tt]=eA)}}Z.push(js({r:de,g:Rt,b:Bt,a:tt}))}}let q,p;const oe=Math.random;Math.random=()=>sE.Math.RND.realInRange(0,1),n.executeWithSeedOffset(()=>{q=WT.quantize(se,4),p=WT.quantize(Z,4)},0,"This result should not vary"),Math.random=oe,q=q,p=p;const[me,Me]=[q,p].map(ie=>{let Ae=Array.from(ie.keys()).sort((de,Rt)=>ie.get(de)<ie.get(Rt)?1:-1),ee,Le;const ue=new Map;do{ue.clear(),ee=Ae.reduce((de,Rt)=>(de.set(Rt,Object.values(D_(Rt))),de),new Map),Le=Array.from(ee.keys()).reduce((de,Rt)=>{const Bt=ee.get(Rt).slice(0,3);return de.set(Rt,H7(Bt[0],Bt[1],Bt[2])),de},new Map);for(let de=Ae.length-1;de>=0;de--){const Rt=Le.get(Ae[de]);for(let Bt=0;Bt<de;Bt++){const tt=Le.get(Ae[Bt]),ht=Math.abs(Rt[0]-tt[0]);if(ht<30||ht>=330){ue.has(Ae[de])?ue.get(Ae[de]).push(Ae[Bt]):ue.set(Ae[de],[Ae[Bt]]);break}}}ue.forEach((de,Rt)=>{const Bt=ee.get(Rt),tt=de.map(Xt=>ee.get(Xt)),ht=Bt.slice(0);let eA=ie.get(Rt);for(const Xt of de){const XA=ie.get(Xt);XA&&(eA+=XA)}for(let Xt=0;Xt<3;Xt++)ht[Xt]*=ie.get(Rt)/eA,de.forEach((XA,VA)=>{if(ie.has(XA)){const v=ie.get(XA);ht[Xt]+=tt[VA][Xt]*(v/eA)}}),ht[Xt]=Math.round(ht[Xt]);ie.delete(Rt);for(const Xt of de)ie.delete(Xt),ue.has(Xt)&&ue.delete(Xt);ie.set(js({r:ht[0],g:ht[1],b:ht[2],a:ht[3]}),eA)}),Ae=Array.from(ie.keys()).sort((de,Rt)=>ie.get(de)<ie.get(Rt)?1:-1)}while(ue.size);return Ae.map(de=>Object.values(D_(de)))}),We=[];$.forEach((ie,Ae)=>{We.push([]);for(let ee=0;ee<me.length;ee++)We[Ae].push(d7(ie,me[ee]))});const De=sE.Tweens.Builders.GetEaseFunction("Cubic.easeIn");for(let ie=0;ie<$.length;ie++){const Ae=Math.min(...We[ie]),ee=Math.min(We[ie].findIndex(Le=>Le===Ae),Me.length-1);if(Ae<255){const Le=De(Ae/255),ue=[0,0,0,z[ie][3]];for(let de=0;de<3;de++)ue[de]=Math.round(z[ie][de]*Le+Me[ee][de]*(1-Le));z[ie]=ue}}[this.getSprite(),this.getTintSprite()].filter(ie=>!!ie).map(ie=>{var Ae,ee;ie.pipelineData[`spriteColors${A&&((Ae=this.summonData)!=null&&Ae.speciesForm)?"Base":""}`]=$,ie.pipelineData[`fusionSpriteColors${A&&((ee=this.summonData)!=null&&ee.speciesForm)?"Base":""}`]=z}),F.remove(),b.remove()}randSeedInt(A,s=0){return n.currentBattle?n.randBattleSeedInt(A,s):ce(A,s)}randSeedIntRange(A,s){return this.randSeedInt(s-A+1,A)}leaveField(A=!0,s=!0){this.resetSprite(),this.resetTurnData(),A&&(this.destroySubstitute(),this.resetSummonData()),s&&this.hideInfo(),n.field.remove(this),this.setSwitchOutStatus(!0),n.triggerPokemonFormChange(this,Ds,!0)}destroy(){var A;(A=this.battleInfo)==null||A.destroy(),this.destroySubstitute(),super.destroy()}getBattleInfo(){return this.battleInfo}hasSameAbilityInRootForm(A){const s=this.abilityIndex,R=ke(this.species.getRootSpeciesId());return R.getAbility(A)===R.getAbility(s)}checkIfPlayerHasAbilityOfStarter(A){return!!((A&1)>0&&this.hasSameAbilityInRootForm(0)||(A&2)>0&&this.hasSameAbilityInRootForm(1)||(A&4)>0&&this.hasSameAbilityInRootForm(2))}loseHeldItem(A,s=!0){return A.pokemonId===-1||A.pokemonId===this.id?(A.stackCount--,A.stackCount<=0&&n.removeModifier(A,!this.isPlayer()),s&&on(qR,this,!1),!0):!1}};N(NV,"Pokemon");let eO=NV;const TV=class TV extends eO{constructor(A,s,R,a,i,r,L,o,l,C){super(106,148,A,s,R,a,i,r,L,o,l,C),Ye.STATUS_OVERRIDE&&(this.status=new za(Ye.STATUS_OVERRIDE,0,4)),Ye.SHINY_OVERRIDE?(this.shiny=!0,this.initShinySparkle()):Ye.SHINY_OVERRIDE===!1&&(this.shiny=!1),Ye.VARIANT_OVERRIDE!==null&&this.shiny&&(this.variant=Ye.VARIANT_OVERRIDE),C||(n.gameMode.isDaily?this.generateAndPopulateMoveset():this.moveset=[]),this.generateCompatibleTms()}initBattleInfo(){this.battleInfo=new pl,this.battleInfo.initInfo(this)}isPlayer(){return!0}hasTrainer(){return!0}isBoss(){return!1}getFieldIndex(){return n.getPlayerField().indexOf(this)}getBattlerIndex(){return this.getFieldIndex()}generateCompatibleTms(){this.compatibleTms=[];const A=Object.keys(ja);for(const s of A){const R=parseInt(s);let a=!1;for(const i of ja[s])if(Array.isArray(i)){const[r,L]=i;if((r===this.species.speciesId||this.fusionSpecies&&r===this.fusionSpecies.speciesId)&&L===this.getFormKey()){a=!0;break}}else if(i===this.species.speciesId||this.fusionSpecies&&i===this.fusionSpecies.speciesId){a=!0;break}Tk.indexOf(R)>-1&&(a=!a),a&&this.compatibleTms.push(R)}}tryPopulateMoveset(A){return this.getSpeciesForm().validateStarterMoveset(A,n.gameData.starterData[this.species.getRootSpeciesId()].eggMoves)?(this.moveset=A.map(s=>new nt(s)),!0):!1}switchOut(A=iA.SWITCH){return new Promise(s=>{this.leaveField(A===iA.SWITCH),n.ui.setMode(Ie.PARTY,Ps.FAINT_SWITCH,this.getFieldIndex(),(R,a)=>{R>=n.currentBattle.getBattlerCount()&&R<6&&n.prependToPhase(new uR(A,this.getFieldIndex(),R,!1),SO),n.ui.setMode(Ie.MESSAGE).then(s)},VE.FilterNonFainted)})}addFriendship(A){if(A>0){const s=this.species.getRootSpeciesId(),R=this.isFusion()&&this.fusionSpecies?this.fusionSpecies.getRootSpeciesId():0,a=[n.gameData.starterData[s],R?n.gameData.starterData[R]:null].filter(o=>!!o),i=new Et(A);n.applyModifier(co,!0,this,i);const r=n.eventManager.getClassicFriendshipMultiplier(),L=new Et(Math.floor(i.value*(n.gameMode.isClassic?r:1)/(R?2:1)));this.friendship=Math.min(this.friendship+i.value,255),this.friendship===255&&n.validateAchv(Ct.MAX_FRIENDSHIP),a.forEach((o,l)=>{const C=l?R:s;o.friendship=(o.friendship||0)+L.value,o.friendship>=H1(KA[C])&&(n.gameData.addStarterCandy(ke(C),1),o.friendship=0)})}else this.friendship=Math.max(this.friendship+A,0)}revivalBlessing(){return new Promise(A=>{n.ui.setMode(Ie.PARTY,Ps.REVIVAL_BLESSING,this.getFieldIndex(),(s,R)=>{if(s>=0&&s<6){const a=n.getPlayerParty()[s];if((!a||!a.isFainted())&&A(),a.resetTurnData(),a.resetStatus(),a.heal(Math.min(yt(.5*a.getMaxHp()),a.getMaxHp())),n.queueMessage(u.t("moveTriggers:revivalBlessing",{pokemonName:a.name}),0,!0),n.currentBattle.double&&n.getPlayerParty().length>1){const i=this.getAlly();s<=1?(n.unshiftPhase(new uR(iA.SWITCH,a.getFieldIndex(),s,!1,!0)),n.unshiftPhase(new PO(!0))):i.isFainted()&&(n.unshiftPhase(new uR(iA.SWITCH,i.getFieldIndex(),s,!1,!0)),n.unshiftPhase(new PO(!0)))}}n.ui.setMode(Ie.MESSAGE).then(()=>A())},VE.FilterFainted)})}getPossibleEvolution(A){return A?new Promise(s=>{const R=ke(A.speciesId),a=A instanceof kn;let i;if(a){const r=this.fusionSpecies,L=this.fusionFormIndex;this.fusionSpecies=R,this.fusionFormIndex=A.evoFormKey!==null?Math.max(R.forms.findIndex(o=>o.formKey===A.evoFormKey),0):this.fusionFormIndex,i=n.addPlayerPokemon(this.species,this.level,this.abilityIndex,this.formIndex,this.gender,this.shiny,this.variant,this.ivs,this.nature,this),this.fusionSpecies=r,this.fusionFormIndex=L}else{const r=A.evoFormKey!==null&&!a?Math.max(R.forms.findIndex(L=>L.formKey===A.evoFormKey),0):this.formIndex;i=n.addPlayerPokemon(a?this.species:R,this.level,this.abilityIndex,r,this.gender,this.shiny,this.variant,this.ivs,this.nature,this)}i.loadAssets().then(()=>s(i))}):new Promise(s=>s(this))}evolve(A,s){return A?new Promise(R=>{this.pauseEvolutions=!1,this.handleSpecialEvolutions(A);const a=A instanceof kn;if(a?this.fusionSpecies=ke(A.speciesId):this.species=ke(A.speciesId),A.preFormKey!==null){const r=Math.max((!a||!this.fusionSpecies?this.species:this.fusionSpecies).forms.findIndex(L=>L.formKey===A.evoFormKey),0);a?this.fusionFormIndex=r:this.formIndex=r}if(this.generateName(),a){const r=this.getFusionSpeciesForm().getAbilityCount(),L=s.getAbilityCount();[0,1,2].includes(this.fusionAbilityIndex)?this.fusionAbilityIndex===2&&L===3&&r===2&&(this.fusionAbilityIndex=1):(console.warn("this.fusionAbilityIndex is somehow an illegal value, please report this"),console.warn(this.fusionAbilityIndex),this.fusionAbilityIndex=0)}else{const r=this.getSpeciesForm().getAbilityCount(),L=s.getAbilityCount();[0,1,2].includes(this.abilityIndex)?this.abilityIndex===2&&L===3&&r===2&&(this.abilityIndex=1):(console.warn("this.abilityIndex is somehow an illegal value, please report this"),console.warn(this.abilityIndex),this.abilityIndex=0)}this.compatibleTms.splice(0,this.compatibleTms.length),this.generateCompatibleTms();const i=N(()=>{this.loadAssets().then(()=>{this.calculateStats(),this.updateInfo(!0).then(()=>R())})},"updateAndResolve");if(s.speciesId===e.GIMMIGHOUL){const r=this.getHeldItems().filter(L=>L instanceof Lo)[0]??null;r&&n.removeModifier(r)}!n.gameMode.isDaily||this.metBiome>-1?(n.gameData.updateSpeciesDexIvs(this.species.speciesId,this.ivs),n.gameData.setPokemonSeen(this,!1),n.gameData.setPokemonCaught(this,!1).then(()=>i())):i()}):new Promise(R=>R())}handleSpecialEvolutions(A){var a;const s=A instanceof kn,R=s?this.fusionSpecies:this.species;if((R==null?void 0:R.speciesId)===e.NINCADA&&A.speciesId===e.NINJASK){const i=bt[R.speciesId][1];if((a=i.condition)!=null&&a.predicate(this)){const r=n.addPlayerPokemon(this.species,this.level,this.abilityIndex,this.formIndex,void 0,this.shiny,this.variant,this.ivs,this.nature);r.passive=this.passive,r.moveset=this.moveset.slice(),r.moveset=this.copyMoveset(),r.luck=this.luck,r.gender=at.GENDERLESS,r.metLevel=this.metLevel,r.metBiome=this.metBiome,r.metSpecies=this.metSpecies,r.metWave=this.metWave,r.fusionSpecies=this.fusionSpecies,r.fusionFormIndex=this.fusionFormIndex,r.fusionAbilityIndex=this.fusionAbilityIndex,r.fusionShiny=this.fusionShiny,r.fusionVariant=this.fusionVariant,r.fusionGender=this.fusionGender,r.fusionLuck=this.fusionLuck,r.usedTMs=this.usedTMs,n.getPlayerParty().push(r),r.evolve(s?new kn(this.id,i):i,R),n.findModifiers(o=>o instanceof dt&&o.pokemonId===this.id,!0).forEach(o=>{const l=o.clone();l.pokemonId=r.id,n.addModifier(l,!0)}),n.updateModifiers(!0)}}}getPossibleForm(A){return new Promise(s=>{const R=Math.max(this.species.forms.findIndex(i=>i.formKey===A.formKey),0),a=n.addPlayerPokemon(this.species,this.level,this.abilityIndex,R,this.gender,this.shiny,this.variant,this.ivs,this.nature,this);a.loadAssets().then(()=>s(a))})}changeForm(A){return new Promise(s=>{const R=this.formIndex;this.formIndex=Math.max(this.species.forms.findIndex(o=>o.formKey===A.formKey),0),this.generateName();const a=this.getSpeciesForm().getAbilityCount();this.abilityIndex>=a&&(this.abilityIndex=a-1);const i=this.species.forms[R],r=[i.type1,i.type2];if(this.customPokemonData.types.length>0){this.getSpeciesForm().type1!==r[0]&&(this.customPokemonData.types[0]=this.getSpeciesForm().type1);const o=this.getSpeciesForm().type2;!ve(o)&&o!==r[1]&&(this.customPokemonData.types.length>1?this.customPokemonData.types[1]=o:this.customPokemonData.types.push(o))}this.compatibleTms.splice(0,this.compatibleTms.length),this.generateCompatibleTms();const L=N(()=>{this.loadAssets().then(()=>{this.calculateStats(),n.updateModifiers(!0,!0),this.updateInfo(!0).then(()=>s())})},"updateAndResolve");!n.gameMode.isDaily||this.metBiome>-1?(n.gameData.setPokemonSeen(this,!1),n.gameData.setPokemonCaught(this,!1).then(()=>L())):L()})}clearFusionSpecies(){super.clearFusionSpecies(),this.generateCompatibleTms()}fuse(A){return new Promise(s=>{this.fusionSpecies=A.species,this.fusionFormIndex=A.formIndex,this.fusionAbilityIndex=A.abilityIndex,this.fusionShiny=A.shiny,this.fusionVariant=A.variant,this.fusionGender=A.gender,this.fusionLuck=A.luck,this.fusionCustomPokemonData=A.customPokemonData,(A.pauseEvolutions||this.pauseEvolutions)&&(this.pauseEvolutions=!0),n.validateAchv(Ct.SPLICE),n.gameData.gameStats.pokemonFused++;const R=this.getMaxHp(),a=(A.hp/A.getMaxHp()+this.hp/R)/2;this.generateName(),this.calculateStats(),this.hp=Math.round(R*a),this.isFainted()?A.isFainted()||(this.hp=Math.max(this.hp,1),this.status=A.status):(this.hp=Math.min(this.hp,R),this.status=k7(this.status,A.status)),this.generateCompatibleTms(),this.updateInfo(!0);const i=n.getPlayerParty().indexOf(A);n.getPlayerParty().indexOf(this);const r=n.findModifiers(o=>o instanceof dt&&o.pokemonId===A.id,!0),L=[];for(const o of r)L.push(n.tryTransferHeldItemModifier(o,this,!1,o.getStackCount(),!0,!0,!1));Promise.allSettled(L).then(()=>{n.updateModifiers(!0,!0).then(()=>{n.removePartyMemberModifiers(i),n.getPlayerParty().splice(i,1)[0];const o=n.getPlayerParty().indexOf(this);A.getMoveset(!0).map(l=>n.unshiftPhase(new eI(o,l.getMove().id))),A.destroy(),this.updateFusionPalette(),s()})})})}unfuse(){return new Promise(A=>{this.clearFusionSpecies(),this.updateInfo(!0).then(()=>A()),this.updateFusionPalette()})}copyMoveset(){const A=[];return this.moveset.forEach(s=>{s&&A.push(new nt(s.moveId,0,s.ppUp,s.virtual,s.maxPpOverride))}),A}};N(TV,"PlayerPokemon");let vE=TV;const SV=class SV extends eO{constructor(A,s,R,a,i=!1,r){var o;super(236,84,A,s,r==null?void 0:r.abilityIndex,r==null?void 0:r.formIndex,r==null?void 0:r.gender,!i&&r?r.shiny:!1,!i&&r?r.variant:void 0,void 0,r?r.nature:void 0,r),this.trainerSlot=R,this.isPopulatedFromDataSource=!!r,a&&this.setBoss(a,r==null?void 0:r.bossSegments),Ye.OPP_STATUS_OVERRIDE&&(this.status=new za(Ye.OPP_STATUS_OVERRIDE,0,4)),Ye.OPP_GENDER_OVERRIDE&&(this.gender=Ye.OPP_GENDER_OVERRIDE);const L=this.species.speciesId;if(L in Ye.OPP_FORM_OVERRIDES&&Ye.OPP_FORM_OVERRIDES[L]&&this.species.forms[Ye.OPP_FORM_OVERRIDES[L]]&&(this.formIndex=Ye.OPP_FORM_OVERRIDES[L]??0),!r){this.generateAndPopulateMoveset(),i||Ye.OPP_SHINY_OVERRIDE===!1?this.shiny=!1:this.trySetShiny(),!this.shiny&&Ye.OPP_SHINY_OVERRIDE&&(this.shiny=!0,this.initShinySparkle()),this.shiny&&(this.variant=this.generateShinyVariant(),Ye.OPP_VARIANT_OVERRIDE!==null&&(this.variant=Ye.OPP_VARIANT_OVERRIDE)),this.luck=(this.shiny?this.variant+1:0)+(this.fusionShiny?this.fusionVariant+1:0);let l,C=A.speciesId;for(;l=yA[C];){const M=bt[l].find(D=>D.speciesId===C&&(!D.evoFormKey||D.evoFormKey===this.getFormKey()));(o=M==null?void 0:M.condition)!=null&&o.enforceFunc&&M.condition.enforceFunc(this),C=l}}this.aiType=a||this.hasTrainer()?2:1}initBattleInfo(){this.battleInfo?this.battleInfo.updateBossSegments(this):(this.battleInfo=new C_,this.battleInfo.updateBossSegments(this),this.battleInfo.initInfo(this))}setBoss(A=!0,s=0){A?(this.bossSegments=s||n.getEncounterBossSegments(n.currentBattle.waveIndex,this.level,this.species,!0),this.bossSegmentIndex=this.bossSegments-1):(this.bossSegments=0,this.bossSegmentIndex=0)}generateAndPopulateMoveset(A){switch(!0){case this.species.speciesId===e.SMEARGLE:this.moveset=[new nt(t.SKETCH),new nt(t.SKETCH),new nt(t.SKETCH),new nt(t.SKETCH)];break;case this.species.speciesId===e.ETERNATUS:this.moveset=(A!==void 0?A:this.formIndex)?[new nt(t.DYNAMAX_CANNON),new nt(t.CROSS_POISON),new nt(t.FLAMETHROWER),new nt(t.RECOVER,0,-4)]:[new nt(t.ETERNABEAM),new nt(t.SLUDGE_BOMB),new nt(t.FLAMETHROWER),new nt(t.COSMIC_POWER)],n.gameMode.hasChallenge(it.INVERSE_BATTLE)&&(this.moveset[2]=new nt(t.THUNDERBOLT));break;default:super.generateAndPopulateMoveset();break}}getNextMove(){var R;const A=this.getMoveQueue();if(A.length!==0){const a=A[0];if(a){const i=this.getMoveset().findIndex(r=>(r==null?void 0:r.moveId)===a.move);return i>-1&&this.getMoveset()[i].isUsable(this,a.ignorePP)||a.virtual?a:(this.getMoveQueue().shift(),this.getNextMove())}}let s=this.getMoveset().filter(a=>a==null?void 0:a.isUsable(this));if(s.length){if(s.length===1)return{move:s[0].moveId,targets:this.getNextTargets(s[0].moveId)};const a=this.getTag(xS);if(a){const i=s.find(r=>(r==null?void 0:r.moveId)===a.moveId);if(i)return{move:i.moveId,targets:this.getNextTargets(i.moveId)}}switch(this.aiType){case 0:const i=s[n.randBattleSeedInt(s.length)].moveId;return{move:i,targets:this.getNextTargets(i)};case 1:case 2:const r=s.filter(M=>{if(!M)return!1;const D=M.getMove();if(D.moveTarget===$E.ATTACKER)return!1;const _=n.getField(),P=ta(this,D.id).targets.map(H=>_[H]).filter(H=>this.isPlayer()!==H.isPlayer()),h=D.hasAttr(ln)||!!this.getTag(y.ALWAYS_CRIT);return D.category!==Pt.STATUS&&P.some(H=>(D.applyConditions(this,H,D)||[t.SUCKER_PUNCH,t.UPPER_HAND,t.THUNDERCLAP].includes(D.id))&&H.getAttackDamage(this,D,!H.battleData.abilityRevealed,!1,h).damage>=H.hp)},this);r.length>0&&(s=r);const L=s.map(()=>0),o=Object.fromEntries(s.map(M=>[M.moveId,this.getNextTargets(M.moveId)]));for(const M in s){const _=s[M].getMove();let P=L[M];const h=[];for(const H of o[_.id]){if(H===gt.ATTACKER)break;const d=n.getField()[H];let f=_.getUserBenefitScore(this,d,_)+_.getTargetBenefitScore(this,d,_)*(H<gt.ENEMY===this.isPlayer()?1:-1);if(Number.isNaN(f)&&(console.error(`Move ${_.name} returned score of NaN`),f=0),(_.name.endsWith(" (N)")||!_.applyConditions(this,d,_))&&![t.SUCKER_PUNCH,t.UPPER_HAND,t.THUNDERCLAP].includes(_.id))f=-20;else if(_ instanceof g){const B=d.getMoveEffectiveness(this,_,!((R=d.battleData)!=null&&R.abilityRevealed));d.isPlayer()!==this.isPlayer()?(f*=B,this.isOfType(_.type)&&(f*=1.5)):B&&(f/=B,this.isOfType(_.type)&&(f/=1.5)),f||(f=-20)}h.push(f)}P+=Math.max(...h),L[M]=P}console.log(L);const l=s.slice(0);l.sort((M,D)=>{const _=L[s.indexOf(M)],P=L[s.indexOf(D)];return _<P?1:_>P?-1:0});let C=0;if(this.aiType===1)for(;C<l.length-1&&n.randBattleSeedInt(8)>=5;)C++;else if(this.aiType===2)for(;C<l.length-1&&L[s.indexOf(l[C+1])]/L[s.indexOf(l[C])]>=0&&n.randBattleSeedInt(100)<Math.round(L[s.indexOf(l[C+1])]/L[s.indexOf(l[C])]*50);)C++;return console.log(s.map(M=>M.getName()),L,C,l.map(M=>M.getName())),{move:l[C].moveId,targets:o[l[C].moveId]}}}return{move:t.STRUGGLE,targets:this.getNextTargets(t.STRUGGLE)}}getNextTargets(A){const s=ta(this,A),R=n.getField(!0).filter(P=>s.targets.indexOf(P.getBattlerIndex())>-1);if(s.multiple)return R.map(P=>P.getBattlerIndex());const a=we[A],r=R.map(P=>[P.getBattlerIndex(),a.getTargetBenefitScore(this,P,a)*(P.isPlayer()===this.isPlayer()?1:-1)]).slice(0);if(r.sort((P,h)=>{const H=P[1],d=h[1];return H<d?1:H>d?-1:0}),!r.length)return a.hasAttr(wa)?[gt.ATTACKER]:[];let L=r.map(P=>P[1]);const o=L[L.length-1];if(o<1)for(let P=0;P<L.length;P++)L[P]+=Math.abs(o-1);const l=L.findIndex(P=>P<L[0]/2);l>-1&&(L=L.slice(0,l));const C=[];let M=0;L.reduce((P,h)=>(P+=h,C.push(P),M=P,P),0);const D=n.randBattleSeedInt(M);let _=0;return C.every((P,h)=>D>=P?!0:(_=h,!1)),[r[_][0]]}isPlayer(){return!1}hasTrainer(){return!!this.trainerSlot}isBoss(){return!!this.bossSegments}getBossSegmentIndex(){const A=this.bossSegments,s=this.getMaxHp()/A;for(let R=A-1;R>0;R--){const a=Math.round(s*R);if(this.hp>a)return R}return 0}damage(A,s=!1,R=!1,a=!1){if(this.isFainted())return 0;let i=this.isBoss()?this.bossSegmentIndex+1:0;if(this.isBoss()&&!s){const L=this.getMaxHp()/this.bossSegments;for(let o=this.bossSegmentIndex;o>0;o--){const l=L*o,C=Math.round(l);if(this.hp>=C){if(this.hp-A<=C){const M=this.hp-C;let D=0;for(;D<this.bossSegmentIndex&&this.canBypassBossSegments(D+1)&&A-M>=Math.round(L*Math.pow(2,D+1));)D++;A=yt(this.hp-l+L*D),i=o-D}break}}}switch(n.currentBattle.battleSpec){case SE.FINAL_BOSS:!this.formIndex&&this.bossSegmentIndex<1&&(A=Math.min(A,this.hp-1))}const r=super.damage(A,s,R,a);if(this.isBoss()){if(s){const L=this.getMaxHp()/this.bossSegments;i=Math.ceil(this.hp/L)}i<=this.bossSegmentIndex&&this.handleBossSegmentCleared(i),this.battleInfo.updateBossSegments(this)}return r}canBypassBossSegments(A=1){return!(n.currentBattle.battleSpec===SE.FINAL_BOSS&&!this.formIndex&&this.bossSegmentIndex-A<1)}handleBossSegmentCleared(A){for(;this.bossSegmentIndex>0&&A-1<this.bossSegmentIndex;){const s=zn.filter(l=>this.getStatStage(l)<6),R=s.map(l=>this.getStat(l,!1));let a;const i=[];let r=0;for(const l in R)r+=R[l],i.push(r);const L=ce(r);for(const l in i)if(L<i[l]){a=s[l];break}let o=1;this.bossSegments>=3&&this.bossSegmentIndex===1&&o++,this.bossSegments>=5&&this.bossSegmentIndex===2&&o++,n.unshiftPhase(new zt(this.getBattlerIndex(),!0,[a],o,!0,!0)),this.bossSegmentIndex--}}getFieldIndex(){return n.getEnemyField().indexOf(this)}getBattlerIndex(){return gt.ENEMY+this.getFieldIndex()}addToParty(A,s=-1){const R=n.getPlayerParty();let a=null;if(R.length<_r){this.pokeball=A,this.metLevel=this.level,this.metBiome=n.arena.biomeType,this.metWave=n.currentBattle.waveIndex,this.metSpecies=this.species.speciesId;const i=n.addPlayerPokemon(this.species,this.level,this.abilityIndex,this.formIndex,this.gender,this.shiny,this.variant,this.ivs,this.nature,this);f7(s,0,_r-1)?R.splice(s,0,i):R.push(i),i.setVisible(!1),a=i,n.triggerPokemonFormChange(i,Ds,!0)}return a}};N(SV,"EnemyPokemon");let xs=SV;const oV=class oV{constructor(){this.statStages=[0,0,0,0,0,0,0],this.moveQueue=[],this.tags=[],this.abilitySuppressed=!1,this.abilitiesApplied=[],this.ability=O.NONE,this.passiveAbility=O.NONE,this.stats=[0,0,0,0,0,0],this.types=[],this.addedType=null}};N(oV,"PokemonSummonData");let so=oV;const lV=class lV{constructor(){this.hitCount=0,this.prevHitCount=0,this.endured=!1,this.berriesEaten=[],this.abilitiesApplied=[],this.abilityRevealed=!1}};N(lV,"PokemonBattleData");let L1=lV;const CV=class CV{constructor(){this.turnCount=1,this.waveTurnCount=1,this.moveHistory=[]}};N(CV,"PokemonBattleSummonData");let N1=CV;const UV=class UV{constructor(){this.flinched=!1,this.acted=!1,this.hitCount=0,this.hitsLeft=-1,this.totalDamageDealt=0,this.singleHitDamageDealt=0,this.damageTaken=0,this.attacksReceived=[],this.statStagesIncreased=!1,this.statStagesDecreased=!1,this.moveEffectiveness=null,this.switchedInThisTurn=!1,this.failedRunAway=!1,this.joinedRound=!1,this.extraTurns=0}};N(UV,"PokemonTurnData");let T1=UV;var $8=(E=>(E[E.RANDOM=0]="RANDOM",E[E.SMART_RANDOM=1]="SMART_RANDOM",E[E.SMART=2]="SMART",E))($8||{}),oA=(E=>(E[E.PENDING=0]="PENDING",E[E.SUCCESS=1]="SUCCESS",E[E.FAIL=2]="FAIL",E[E.MISS=3]="MISS",E[E.OTHER=4]="OTHER",E))(oA||{}),vt=(E=>(E[E.EFFECTIVE=1]="EFFECTIVE",E[E.SUPER_EFFECTIVE=2]="SUPER_EFFECTIVE",E[E.NOT_VERY_EFFECTIVE=3]="NOT_VERY_EFFECTIVE",E[E.ONE_HIT_KO=4]="ONE_HIT_KO",E[E.NO_EFFECT=5]="NO_EFFECT",E[E.STATUS=6]="STATUS",E[E.HEAL=7]="HEAL",E[E.FAIL=8]="FAIL",E[E.MISS=9]="MISS",E[E.OTHER=10]="OTHER",E[E.IMMUNE=11]="IMMUNE",E))(vt||{});const CM=class CM{constructor(A,s=0,R=0,a=!1,i){this.moveId=A,this.ppUsed=s,this.ppUp=R,this.virtual=a,this.maxPpOverride=i}isUsable(A,s=!1,R=!1){return this.moveId&&!R&&A.isMoveRestricted(this.moveId,A)||this.getMove().name.endsWith(" (N)")?!1:s||this.ppUsed<this.getMovePp()||this.getMove().pp===-1}getMove(){return we[this.moveId]}usePp(A=1){this.ppUsed=Math.min(this.ppUsed+A,this.getMovePp())}getMovePp(){return this.maxPpOverride||this.getMove().pp+this.ppUp*yt(this.getMove().pp/5)}getPpRatio(){return 1-this.ppUsed/this.getMovePp()}getName(){return this.getMove().name}static loadMove(A){return new CM(A.moveId,A.ppUsed,A.ppUp,A.virtual,A.maxPpOverride)}};N(CM,"PokemonMove");let nt=CM;function S1(E){return u.t(`berry:${_t[E]}.name`)}N(S1,"getBerryName");function a$(E){return u.t(`berry:${_t[E]}.effect`)}N(a$,"getBerryEffectDescription");function i$(E){switch(E){case _t.SITRUS:return A=>A.getHpRatio()<.5;case _t.LUM:return A=>!!A.status||!!A.getTag(y.CONFUSED);case _t.ENIGMA:return A=>!!A.turnData.attacksReceived.filter(s=>s.result===vt.SUPER_EFFECTIVE).length;case _t.LIECHI:case _t.GANLON:case _t.PETAYA:case _t.APICOT:case _t.SALAC:return A=>{const s=new Et(.25),R=E-_t.ENIGMA;return ut(Ya,A,null,!1,s),A.getHpRatio()<s.value&&A.getStatStage(R)<6};case _t.LANSAT:return A=>{const s=new Et(.25);return ut(Ya,A,null,!1,s),A.getHpRatio()<.25&&!A.getTag(y.CRIT_BOOST)};case _t.STARF:return A=>{const s=new Et(.25);return ut(Ya,A,null,!1,s),A.getHpRatio()<.25};case _t.LEPPA:return A=>{const s=new Et(.25);return ut(Ya,A,null,!1,s),!!A.getMoveset().find(R=>!(R!=null&&R.getPpRatio()))}}}N(i$,"getBerryPredicate");function z8(E){switch(E){case _t.SITRUS:case _t.ENIGMA:return(A,s)=>{A.battleData&&A.battleData.berriesEaten.push(E);const R=new Et(yt(A.getMaxHp()/4));ut(lr,A,null,!1,R),n.unshiftPhase(new FE(A.getBattlerIndex(),R.value,u.t("battle:hpHealBerry",{pokemonNameWithAffix:te(A),berryName:S1(E)}),!0)),on(qR,s??A,!1)};case _t.LUM:return(A,s)=>{A.battleData&&A.battleData.berriesEaten.push(E),A.status&&n.queueMessage(La(A.status.effect,te(A))),A.resetStatus(!0,!0),A.updateInfo(),on(qR,s??A,!1)};case _t.LIECHI:case _t.GANLON:case _t.PETAYA:case _t.APICOT:case _t.SALAC:return(A,s)=>{A.battleData&&A.battleData.berriesEaten.push(E);const R=E-_t.ENIGMA,a=new Et(1);ut(lr,A,null,!1,a),n.unshiftPhase(new zt(A.getBattlerIndex(),!0,[R],a.value)),on(qR,s??A,!1)};case _t.LANSAT:return(A,s)=>{A.battleData&&A.battleData.berriesEaten.push(E),A.addTag(y.CRIT_BOOST),on(qR,s??A,!1)};case _t.STARF:return(A,s)=>{A.battleData&&A.battleData.berriesEaten.push(E);const R=ce(K.SPD,K.ATK),a=new Et(2);ut(lr,A,null,!1,a),n.unshiftPhase(new zt(A.getBattlerIndex(),!0,[R],a.value)),on(qR,s??A,!1)};case _t.LEPPA:return(A,s)=>{A.battleData&&A.battleData.berriesEaten.push(E);const R=A.getMoveset().find(a=>!(a!=null&&a.getPpRatio()))?A.getMoveset().find(a=>!(a!=null&&a.getPpRatio())):A.getMoveset().find(a=>a.getPpRatio()<1);R!==void 0&&(R.ppUsed=Math.max(R.ppUsed-10,0),n.queueMessage(u.t("battle:ppHealBerry",{pokemonNameWithAffix:te(A),moveName:R.getName(),berryName:S1(E)})),on(qR,s??A,!1))}}}N(z8,"getBerryEffectFunc");const Dl=24,Ro=N((E,A)=>{const s=E.type.name.localeCompare(A.type.name),R=E.constructor.name.localeCompare(A.constructor.name),a=E instanceof dt&&E.pokemonId?E.pokemonId:4294967295,i=A instanceof dt&&A.pokemonId?A.pokemonId:4294967295;return a<i?1:a>i?-1:a===i?R===0?s:R:0},"modifierSortFunc"),uV=class uV extends Phaser.GameObjects.Container{constructor(A){super(n,1+(A?302:0),2),this.player=!A,this.setScale(.5)}updateModifiers(A,s=!1){this.removeAll(!0);const R=A.filter(o=>o.isIconVisible()),a=R.filter(o=>!o.pokemonId).sort(Ro),i=R.filter(o=>o.pokemonId).sort(Ro),r=s?a:a.concat(i),L=this;r.forEach((o,l)=>{const C=o.getIcon();l>=Dl&&C.setVisible(!1),this.add(C),this.setModifierIconPosition(C,r.length),C.setInteractive(new Phaser.Geom.Rectangle(0,0,32,24),Phaser.Geom.Rectangle.Contains),C.on("pointerover",()=>{n.ui.showTooltip(o.type.name,o.type.getDescription()),this.modifierCache&&this.modifierCache.length>Dl&&L.updateModifierOverflowVisibility(!0)}),C.on("pointerout",()=>{n.ui.hideTooltip(),this.modifierCache&&this.modifierCache.length>Dl&&L.updateModifierOverflowVisibility(!1)})});for(const o of this.getAll())this.sendToBack(o);this.modifierCache=A}updateModifierOverflowVisibility(A){const s=this.getAll().reverse();for(const R of s.map(a=>a).slice(Dl))R.setVisible(A)}setModifierIconPosition(A,s){const R=12+6*Math.max(Math.ceil(Math.min(s,24)/12)-2,0),a=this.getIndex(A)%R*26/(R/12),i=Math.floor(this.getIndex(A)/R)*20;A.setPosition(this.player?a:-a,i)}};N(uV,"ModifierBar");let Oo=uV;const DV=class DV{constructor(A){this.type=A}match(A){return!1}shouldApply(...A){return!0}};N(DV,"Modifier");let no=DV;const MV=class MV extends no{constructor(A,s){super(A),this.stackCount=s===void 0?1:s,this.virtualStackCount=0}add(A,s){for(const R of A)if(this.match(R))return R.incrementStack(this.stackCount,s);return s&&(this.virtualStackCount+=this.stackCount,this.stackCount=0),A.push(this),!0}getArgs(){return[]}incrementStack(A,s){return this.getStackCount()+A<=this.getMaxStackCount()?(s?this.virtualStackCount+=A:this.stackCount+=A,!0):!1}getStackCount(){return this.stackCount+this.virtualStackCount}isIconVisible(){return!0}getIcon(A){const s=n.add.container(0,0),R=n.add.sprite(0,12,"items");R.setFrame(this.type.iconImage),R.setOrigin(0,.5),s.add(R);const a=this.getIconStackText();a&&s.add(a);const i=this.getIconStackText(!0);return i&&s.add(i),s}getIconStackText(A){if(this.getMaxStackCount()===1||A&&!this.virtualStackCount)return null;const s=n.add.bitmapText(10,15,"item-count",this.stackCount.toString(),11);return s.letterSpacing=-.5,this.getStackCount()>=this.getMaxStackCount()&&s.setTint(16291984),s.setOrigin(0,0),s}};N(MV,"PersistentModifier");let kA=MV;const _V=class _V extends no{constructor(A){super(A)}add(A){return!0}};N(_V,"ConsumableModifier");let Aa=_V;const PV=class PV extends Aa{constructor(A,s,R){super(A),this.pokeballType=s,this.count=R}apply(){const A=n.pokeballCounts;return A[this.pokeballType]=Math.min(A[this.pokeballType]+this.count,v6),!0}};N(PV,"AddPokeballModifier");let HD=PV;const GV=class GV extends Aa{constructor(A,s,R){super(A),this.voucherType=s,this.count=R}apply(){const A=n.gameData.voucherCounts;return A[this.voucherType]+=this.count,!0}};N(GV,"AddVoucherModifier");let dD=GV;const cV=class cV extends kA{constructor(A,s,R,a){super(A,a),this.maxBattles=s,this.battleCount=R??this.maxBattles}add(A,s){for(const R of A)if(this.match(R)){const a=R;return a.getBattleCount()<a.getMaxBattles()?(a.resetBattleCount(),n.playSound("se/restore"),!0):!1}return A.push(this),!0}lapse(...A){return this.battleCount--,this.battleCount>0}getIcon(){const A=super.getIcon(),s=Math.floor(120*(this.battleCount/this.maxBattles)+5),R=Dx(s,.5,.9),a=Dx(s,.7,.3),i=le(27,0,this.battleCount.toString(),Q.PARTY,{fontSize:"66px",color:R});return i.setShadow(0,0),i.setStroke(a,16),i.setOrigin(1,0),A.add(i),A}getIconStackText(A){return null}getBattleCount(){return this.battleCount}resetBattleCount(){this.battleCount=this.maxBattles}setNewBattleCount(A){this.maxBattles=A,this.battleCount=A}getMaxBattles(){return this.maxBattles}getArgs(){return[this.maxBattles,this.battleCount]}getMaxStackCount(A){return 2}};N(cV,"LapsingPersistentModifier");let Ea=cV;const dN=class dN extends Ea{constructor(A,s,R,a){super(A,s,R,a)}match(A){return A instanceof dN&&A.getMaxBattles()===this.getMaxBattles()}clone(){return new dN(this.type,this.getMaxBattles(),this.getBattleCount(),this.stackCount)}apply(A){return A.value=A.value/4,!0}};N(dN,"DoubleBattleChanceBoosterModifier");let EL=dN;const fN=class fN extends Ea{constructor(A,s,R,a,i){super(A,R,a,i),this.stat=s,this.boost=s!==K.ACC?.3:1}match(A){return A instanceof fN?A.stat===this.stat:!1}clone(){return new fN(this.type,this.stat,this.getMaxBattles(),this.getBattleCount(),this.stackCount)}getArgs(){return[this.stat,...super.getArgs()]}shouldApply(A,s){return!!A&&!!s&&K6.includes(A)&&A===this.stat}apply(A,s){return s.value+=this.boost,!0}};N(fN,"TempStatStageBoosterModifier");let sL=fN;const BN=class BN extends Ea{constructor(A,s,R,a){super(A,s,R,a)}clone(){return new BN(this.type,this.getMaxBattles(),this.getBattleCount(),this.stackCount)}match(A){return A instanceof BN}shouldApply(A){return!!A}apply(A){return A.value++,!0}};N(BN,"TempCritBoosterModifier");let Io=BN;const UM=class UM extends kA{constructor(A,s){super(A,s)}clone(){return new UM(this.type,this.stackCount)}apply(...A){return!0}getMaxStackCount(){return 1}};N(UM,"MapModifier");let ao=UM;const uM=class uM extends kA{constructor(A,s){super(A,s)}clone(){return new uM(this.type,this.stackCount)}apply(...A){return!0}getMaxStackCount(){return 1}};N(uM,"MegaEvolutionAccessModifier");let RL=uM;const DM=class DM extends kA{constructor(A,s){super(A,s)}clone(){return new DM(this.type,this.stackCount)}apply(...A){return!0}getMaxStackCount(){return 1}};N(DM,"GigantamaxAccessModifier");let OL=DM;const MM=class MM extends kA{constructor(A,s){super(A,s)}clone(){return new MM(this.type,this.stackCount)}apply(...A){return!0}getMaxStackCount(){return 1}};N(MM,"TerastallizeAccessModifier");let io=MM;const hV=class hV extends kA{constructor(A,s,R){super(A,R),this.isTransferable=!0,this.pokemonId=s}match(A){return this.matchType(A)&&A.pokemonId===this.pokemonId}getArgs(){return[this.pokemonId]}shouldApply(A,...s){return!!A&&(this.pokemonId===-1||A.id===this.pokemonId)}isIconVisible(){var A;return!!((A=this.getPokemon())!=null&&A.isOnField())}getIcon(A){const s=A?super.getIcon():n.add.container(0,0);if(A)s.setScale(.5);else{const R=this.getPokemon();if(R){const L=n.addPokemonIcon(R,-2,10,0,.5);s.add(L),s.setName(R.id.toString())}const a=n.add.sprite(16,this.virtualStackCount?8:16,"items");a.setScale(.5),a.setOrigin(0,.5),a.setTexture("items",this.type.iconImage),s.add(a);const i=this.getIconStackText();i&&s.add(i);const r=this.getIconStackText(!0);r&&s.add(r)}return s}getPokemon(){return this.pokemonId?n.getPokemonById(this.pokemonId)??void 0:void 0}getScoreMultiplier(){return 1}getMaxStackCount(A){const s=this.getPokemon();return s?s.isPlayer()&&A?n.getPlayerParty().map(R=>this.getMaxHeldItemCount(R)).reduce((R,a)=>Math.max(R,a),0):this.getMaxHeldItemCount(s):0}};N(hV,"PokemonHeldItemModifier");let dt=hV;const HV=class HV extends dt{constructor(A,s,R,a){super(A,s,a),this.isTransferable=!1,this.battlesLeft=R}lapse(...A){return!!--this.battlesLeft}getIcon(A){var R;const s=super.getIcon(A);if((R=this.getPokemon())!=null&&R.isPlayer()){const a=le(27,0,this.battlesLeft.toString(),Q.PARTY,{fontSize:"66px",color:SC.PINK});a.setShadow(0,0),a.setStroke(oC.RED,16),a.setOrigin(1,0),s.add(a)}return s}getBattlesLeft(){return this.battlesLeft}getMaxStackCount(A){return 1}};N(HV,"LapsingPokemonHeldItemModifier");let nL=HV;const gN=class gN extends nL{constructor(A,s,R,a,i){super(A,s,a||10,i),this.isTransferable=!1,this.teraType=R}matchType(A){return A instanceof gN&&A.teraType===this.teraType}clone(){return new gN(this.type,this.pokemonId,this.teraType,this.battlesLeft,this.stackCount)}getArgs(){return[this.pokemonId,this.teraType,this.battlesLeft]}apply(A){return A.isPlayer()&&(n.triggerPokemonFormChange(A,dI),n.validateAchv(Ct.TERASTALLIZE),this.teraType===I.STELLAR&&n.validateAchv(Ct.STELLAR_TERASTALLIZE)),A.updateSpritePipelineData(),!0}lapse(A){const s=super.lapse(A);return s||(n.triggerPokemonFormChange(A,fI),A.updateSpritePipelineData()),s}getScoreMultiplier(){return 1.25}getMaxHeldItemCount(A){return 1}};N(gN,"TerastallizeModifier");let SR=gN;const KN=class KN extends dt{constructor(A,s,R,a){super(A,s,a),this.isTransferable=!1,this.stat=R}matchType(A){return A instanceof KN?A.stat===this.stat:!1}clone(){return new KN(this.type,this.pokemonId,this.stat,this.stackCount)}getArgs(){return super.getArgs().concat(this.stat)}shouldApply(A,s){return super.shouldApply(A,s)&&Array.isArray(s)}apply(A,s){return s[this.stat]=Math.floor(s[this.stat]*(1+this.getStackCount()*.1)),!0}getScoreMultiplier(){return 1.1}getMaxHeldItemCount(A){return A.ivs[this.stat]}};N(KN,"BaseStatModifier");let ro=KN;const mN=class mN extends dt{constructor(A,s,R,a,i){super(A,s,i),this.isTransferable=!1,this.species=R,this.required=a}matchType(A){return A instanceof mN&&A.species===this.species&&A.required===this.required}clone(){return new mN(this.type,this.pokemonId,this.species,this.required,this.stackCount)}getArgs(){return super.getArgs().concat([this.species,this.required])}apply(){return!0}getIconStackText(A){if(this.getMaxStackCount()===1||A&&!this.virtualStackCount)return null;const s=n.getPokemonById(this.pokemonId);this.stackCount=s?s.evoCounter+s.getHeldItems().filter(a=>a instanceof Ia).length+n.findModifiers(a=>a instanceof IO||a instanceof ia||a instanceof ra).length:this.stackCount;const R=n.add.bitmapText(10,15,"item-count",this.stackCount.toString(),11);return R.letterSpacing=-.5,this.getStackCount()>=this.required&&R.setTint(16291984),R.setOrigin(0,0),R}getMaxHeldItemCount(A){return this.stackCount=A.evoCounter+A.getHeldItems().filter(s=>s instanceof Ia).length+n.findModifiers(s=>s instanceof IO||s instanceof ia||s instanceof ra).length,999}};N(mN,"EvoTrackerModifier");let Lo=mN;const FN=class FN extends dt{constructor(A,s,R,a){super(A,s,a),this.isTransferable=!1,this.statModifier=R}matchType(A){return A instanceof FN&&this.statModifier===A.statModifier}clone(){return new FN(this.type,this.pokemonId,this.statModifier,this.stackCount)}getArgs(){return super.getArgs().concat(this.statModifier)}shouldApply(A,s){return super.shouldApply(A,s)&&Array.isArray(s)}apply(A,s){return s.forEach((R,a)=>{const i=Math.floor(a===0?R+this.statModifier/2:R+this.statModifier);s[a]=Math.min(Math.max(i,1),999999)}),!0}getScoreMultiplier(){return 1.2}getMaxHeldItemCount(A){return 2}};N(FN,"PokemonBaseStatTotalModifier");let No=FN;const pN=class pN extends dt{constructor(A,s,R,a,i){super(A,s,i),this.isTransferable=!1,this.statModifier=R,this.stats=a}matchType(A){return A instanceof pN&&A.statModifier===this.statModifier&&this.stats.every(s=>A.stats.some(R=>s===R))}clone(){return new pN(this.type,this.pokemonId,this.statModifier,this.stats,this.stackCount)}getArgs(){return[...super.getArgs(),this.statModifier,this.stats]}shouldApply(A,s){return super.shouldApply(A,s)&&Array.isArray(s)}apply(A,s){return s.forEach((R,a)=>{if(this.stats.includes(a)){const i=Math.floor(R+this.statModifier);s[a]=Math.min(Math.max(i,1),999999)}}),!0}getScoreMultiplier(){return 1.1}getMaxHeldItemCount(A){return 1}};N(pN,"PokemonBaseStatFlatModifier");let To=pN;const WN=class WN extends dt{constructor(A,s,R){super(A,s,R),this.isTransferable=!1}matchType(A){return A instanceof WN}clone(){return new WN(this.type,this.pokemonId,this.stackCount)}getArgs(){return super.getArgs()}shouldApply(A,s,R){return super.shouldApply(A,s,R)&&!!R}apply(A,s,R){return s===K.HP?(R.value+=this.stackCount,this.stackCount===this.getMaxHeldItemCount()&&(R.value=Math.floor(R.value*1.05))):(R.value+=2*this.stackCount,this.stackCount===this.getMaxHeldItemCount()&&(R.value=Math.floor(R.value*1.1))),!0}getScoreMultiplier(){return 1.2}getMaxHeldItemCount(A){return 50}};N(WN,"PokemonIncrementingStatModifier");let ui=WN;const YN=class YN extends dt{constructor(A,s,R,a,i){super(A,s,i),this.stats=R,this.multiplier=a}clone(){return new YN(this.type,this.pokemonId,this.stats,this.multiplier,this.stackCount)}getArgs(){return[...super.getArgs(),this.stats,this.multiplier]}matchType(A){if(A instanceof YN){const s=A;if(s.multiplier===this.multiplier&&s.stats.length===this.stats.length)return s.stats.every((R,a)=>R===this.stats[a])}return!1}shouldApply(A,s,R){return super.shouldApply(A,s,R)&&this.stats.includes(s)}apply(A,s,R){return R.value*=this.multiplier,!0}getMaxHeldItemCount(A){return 1}};N(YN,"StatBoosterModifier");let IL=YN;const _M=class _M extends IL{clone(){return super.clone()}matchType(A){return A instanceof _M}shouldApply(A,s,R){return super.shouldApply(A,s,R)&&!A.isMax()}apply(A,s,R){const a=A.getSpeciesForm(!0).speciesId in bt;return A.isFusion()&&A.getFusionSpeciesForm(!0).speciesId in bt!==a?(R.value*=1+(this.multiplier-1)/2,!0):a?super.apply(A,s,R):!1}};N(_M,"EvolutionStatBoosterModifier");let fD=_M;const yN=class yN extends IL{constructor(A,s,R,a,i,r){super(A,s,R,a,r),this.species=i}clone(){return new yN(this.type,this.pokemonId,this.stats,this.multiplier,this.species,this.stackCount)}getArgs(){return[...super.getArgs(),this.species]}matchType(A){if(A instanceof yN){const s=A;if(s.species.length===this.species.length)return super.matchType(A)&&s.species.every((R,a)=>R===this.species[a])}return!1}shouldApply(A,s,R){return super.shouldApply(A,s,R)&&(this.species.includes(A.getSpeciesForm(!0).speciesId)||A.isFusion()&&this.species.includes(A.getFusionSpeciesForm(!0).speciesId))}contains(A,s){return this.species.includes(A)&&this.stats.includes(s)}};N(yN,"SpeciesStatBoosterModifier");let Di=yN;const wN=class wN extends dt{constructor(A,s,R,a){super(A,s,a),this.stageIncrement=R}clone(){return new wN(this.type,this.pokemonId,this.stageIncrement,this.stackCount)}getArgs(){return super.getArgs().concat(this.stageIncrement)}matchType(A){return A instanceof wN?A.stageIncrement===this.stageIncrement:!1}apply(A,s){return s.value+=this.stageIncrement,!0}getMaxHeldItemCount(A){return 1}};N(wN,"CritBoosterModifier");let aL=wN;const vN=class vN extends aL{constructor(A,s,R,a,i){super(A,s,R,i),this.species=a}clone(){return new vN(this.type,this.pokemonId,this.stageIncrement,this.species,this.stackCount)}getArgs(){return[...super.getArgs(),this.species]}matchType(A){return A instanceof vN}shouldApply(A,s){return super.shouldApply(A,s)&&(this.species.includes(A.getSpeciesForm(!0).speciesId)||A.isFusion()&&this.species.includes(A.getFusionSpeciesForm(!0).speciesId))}};N(vN,"SpeciesCritBoosterModifier");let So=vN;const VN=class VN extends dt{constructor(A,s,R,a,i){super(A,s,i),this.moveType=R,this.boostMultiplier=a*.01}matchType(A){if(A instanceof VN){const s=A;return s.moveType===this.moveType&&s.boostMultiplier===this.boostMultiplier}return!1}clone(){return new VN(this.type,this.pokemonId,this.moveType,this.boostMultiplier*100,this.stackCount)}getArgs(){return super.getArgs().concat([this.moveType,this.boostMultiplier*100])}shouldApply(A,s,R){return super.shouldApply(A,s,R)&&typeof s=="number"&&R instanceof Et}apply(A,s,R){return s===this.moveType&&R.value>=1?(R.value=Math.floor(R.value*(1+this.getStackCount()*this.boostMultiplier)),!0):!1}getScoreMultiplier(){return 1.2}getMaxHeldItemCount(A){return 99}};N(VN,"AttackTypeBoosterModifier");let Pn=VN;const xN=class xN extends dt{constructor(A,s,R){super(A,s,R)}matchType(A){return A instanceof xN}clone(){return new xN(this.type,this.pokemonId,this.stackCount)}shouldApply(A,s){return super.shouldApply(A,s)&&!!s}apply(A,s){return!s.value&&A.randSeedInt(10)<this.getStackCount()?(s.value=!0,n.queueMessage(u.t("modifier:surviveDamageApply",{pokemonNameWithAffix:te(A),typeName:this.type.name})),!0):!1}getMaxHeldItemCount(A){return 5}};N(xN,"SurviveDamageModifier");let oo=xN;const bN=class bN extends dt{constructor(A,s,R){super(A,s,R)}matchType(A){return A instanceof bN}clone(){return new bN(this.type,this.pokemonId,this.stackCount)}shouldApply(A,s){return super.shouldApply(A,s)&&!!s}apply(A,s){var R;if(!s.value&&A.randSeedInt(10)<this.getStackCount()){s.value=!0;const a=((R=n.currentBattle.turnCommands[A.getBattlerIndex()])==null?void 0:R.command)===LA.FIGHT,i=this.type instanceof DA&&this.type.id==="QUICK_CLAW";return a&&i&&n.queueMessage(u.t("modifier:bypassSpeedChanceApply",{pokemonName:te(A),itemName:u.t("modifierType:ModifierType.QUICK_CLAW.name")})),!0}return!1}getMaxHeldItemCount(A){return 3}};N(bN,"BypassSpeedChanceModifier");let Mi=bN;const kN=class kN extends dt{constructor(A,s,R){super(A,s,R),this.chance=10}matchType(A){return A instanceof kN}clone(){return new kN(this.type,this.pokemonId,this.stackCount)}shouldApply(A,s){return super.shouldApply(A,s)&&!!s}apply(A,s){return A.battleSummonData&&!s.value&&A.randSeedInt(100)<this.getStackCount()*this.chance?(s.value=!0,!0):!1}getMaxHeldItemCount(A){return 3}};N(kN,"FlinchChanceModifier");let lo=kN;const ZN=class ZN extends dt{constructor(A,s,R){super(A,s,R)}matchType(A){return A instanceof ZN}clone(){return new ZN(this.type,this.pokemonId,this.stackCount)}apply(A){return A.isFullHp()?!1:(n.unshiftPhase(new FE(A.getBattlerIndex(),yt(A.getMaxHp()/16)*this.stackCount,u.t("modifier:turnHealApply",{pokemonNameWithAffix:te(A),typeName:this.type.name}),!0)),!0)}getMaxHeldItemCount(A){return 4}};N(ZN,"TurnHealModifier");let _i=ZN;const XN=class XN extends dt{constructor(A,s,R){switch(super(A,s,R),A.id){case"TOXIC_ORB":this.effect=ne.TOXIC;break;case"FLAME_ORB":this.effect=ne.BURN;break}}matchType(A){return A instanceof XN}clone(){return new XN(this.type,this.pokemonId,this.stackCount)}apply(A){return A.trySetStatus(this.effect,!0,void 0,void 0,this.type.name)}getMaxHeldItemCount(A){return 1}getStatusEffect(){return this.effect}};N(XN,"TurnStatusEffectModifier");let sa=XN;const QN=class QN extends dt{constructor(A,s,R){super(A,s,R)}matchType(A){return A instanceof QN}clone(){return new QN(this.type,this.pokemonId,this.stackCount)}apply(A){return A.turnData.totalDamageDealt&&!A.isFullHp()&&n.unshiftPhase(new FE(A.getBattlerIndex(),yt(A.turnData.totalDamageDealt/8)*this.stackCount,u.t("modifier:hitHealApply",{pokemonNameWithAffix:te(A),typeName:this.type.name}),!0)),!0}getMaxHeldItemCount(A){return 4}};N(QN,"HitHealModifier");let Ra=QN;const JN=class JN extends kA{constructor(A,s){super(A,s)}match(A){return A instanceof JN}clone(){return new JN(this.type,this.stackCount)}shouldApply(A){return!!A}apply(A){return A.value+=this.getStackCount(),!0}getMaxStackCount(A){return 99}};N(JN,"LevelIncrementBoosterModifier");let Oa=JN;const $N=class $N extends dt{constructor(A,s,R,a){super(A,s,a),this.berryType=R,this.consumed=!1}matchType(A){return A instanceof $N&&A.berryType===this.berryType}clone(){return new $N(this.type,this.pokemonId,this.berryType,this.stackCount)}getArgs(){return super.getArgs().concat(this.berryType)}shouldApply(A){return!this.consumed&&super.shouldApply(A)&&i$(this.berryType)(A)}apply(A){const s=new Lt(!1);return n.applyModifiers(Pi,A.isPlayer(),A,s),z8(this.berryType)(A),s.value||(this.consumed=!0),!0}getMaxHeldItemCount(A){return[_t.LUM,_t.LEPPA,_t.SITRUS,_t.ENIGMA].includes(this.berryType)?2:3}};N($N,"BerryModifier");let CE=$N;const zN=class zN extends kA{constructor(A,s){super(A,s)}match(A){return A instanceof zN}clone(){return new zN(this.type,this.stackCount)}shouldApply(A,s){return!!A&&!!s}apply(A,s){return s.value||(s.value=A.randSeedInt(10)<this.getStackCount()*3),!0}getMaxStackCount(){return 3}};N(zN,"PreserveBerryModifier");let Pi=zN;const qN=class qN extends dt{constructor(A,s,R){super(A,s,R)}matchType(A){return A instanceof qN}clone(){return new qN(this.type,this.pokemonId,this.stackCount)}apply(A){return n.unshiftPhase(new FE(A.getBattlerIndex(),yt(A.getMaxHp()/2),u.t("modifier:pokemonInstantReviveApply",{pokemonNameWithAffix:te(A),typeName:this.type.name}),!1,!1,!0)),A.resetStatus(!0,!1,!0),(A.isPlayer()?n.getPlayerField():n.getEnemyField()).forEach(R=>ut(kr,R,null,!1)),!0}getMaxHeldItemCount(A){return 1}};N(qN,"PokemonInstantReviveModifier");let iL=qN;const jN=class jN extends dt{constructor(A,s,R){super(A,s,R)}matchType(A){return A instanceof jN}clone(){return new jN(this.type,this.pokemonId,this.stackCount)}apply(A){let s=!1;for(const R of dO)A.getStatStage(R)<0&&(A.setStatStage(R,0),s=!0);return s&&n.queueMessage(u.t("modifier:resetNegativeStatStageApply",{pokemonNameWithAffix:te(A),typeName:this.type.name})),s}getMaxHeldItemCount(A){return 2}};N(jN,"ResetNegativeStatStageModifier");let rL=jN;const dV=class dV extends Aa{constructor(A,s){super(A),this.pokemonId=s}shouldApply(A,...s){return!!A&&(this.pokemonId===-1||A.id===this.pokemonId)}getPokemon(){return n.getPlayerParty().find(A=>A.id===this.pokemonId)}};N(dV,"ConsumablePokemonModifier");let VR=dV;const fV=class fV extends VR{constructor(A,s,R,a,i,r){super(A,s),this.restorePoints=R,this.restorePercent=a,this.healStatus=i,this.fainted=!!r}shouldApply(A,s){return super.shouldApply(A)&&(this.fainted||!ve(s)&&typeof s=="number")}apply(A,s){if(!A.hp===this.fainted){let R=this.restorePoints;return this.fainted||(R=Math.floor(R*s)),(this.fainted||this.healStatus)&&A.resetStatus(!0,!0),A.hp=Math.min(A.hp+Math.max(Math.ceil(Math.max(Math.floor(this.restorePercent*.01*A.getMaxHp()),R)),1),A.getMaxHp()),!0}return!1}};N(fV,"PokemonHpRestoreModifier");let na=fV;const BV=class BV extends VR{constructor(A,s){super(A,s)}apply(A){return A.resetStatus(!0,!0),!0}};N(BV,"PokemonStatusHealModifier");let BD=BV;const gV=class gV extends VR{constructor(A,s,R){super(A,s),this.moveIndex=R}};N(gV,"ConsumablePokemonMoveModifier");let Co=gV;const KV=class KV extends Co{constructor(A,s,R,a){super(A,s,R),this.restorePoints=a}apply(A){const s=A.getMoveset()[this.moveIndex];return s&&(s.ppUsed=this.restorePoints>-1?Math.max(s.ppUsed-this.restorePoints,0):0),!0}};N(KV,"PokemonPpRestoreModifier");let gD=KV;const mV=class mV extends VR{constructor(A,s,R){super(A,s),this.restorePoints=R}apply(A){for(const s of A.getMoveset())s&&(s.ppUsed=this.restorePoints>-1?Math.max(s.ppUsed-this.restorePoints,0):0);return!0}};N(mV,"PokemonAllMovePpRestoreModifier");let KD=mV;const FV=class FV extends Co{constructor(A,s,R,a){super(A,s,R),this.upPoints=a}apply(A){const s=A.getMoveset()[this.moveIndex];return s&&!s.maxPpOverride&&(s.ppUp=Math.min(s.ppUp+this.upPoints,3)),!0}};N(FV,"PokemonPpUpModifier");let mD=FV;const pV=class pV extends VR{constructor(A,s,R){super(A,s),this.nature=R}apply(A){return A.setCustomNature(this.nature),n.gameData.unlockSpeciesNature(A.species,this.nature),!0}};N(pV,"PokemonNatureChangeModifier");let FD=pV;const WV=class WV extends VR{constructor(A,s){super(A,s)}apply(A,s=new Et(1)){return n.applyModifiers(Oa,!0,s),A.level+=s.value,A.level<=n.getMaxExpLevel(!0)&&(A.exp=jR(A.level,A.species.growthRate),A.levelExp=0),A.addFriendship(Ok),n.unshiftPhase(new DS(n.getPlayerParty().indexOf(A),A.level-s.value,A.level)),!0}};N(WV,"PokemonLevelIncrementModifier");let Uo=WV;const YV=class YV extends VR{constructor(A,s){super(A,s)}apply(A){return n.unshiftPhase(new eI(n.getPlayerParty().indexOf(A),this.type.moveId,x1.TM)),!0}};N(YV,"TmModifier");let pD=YV;const yV=class yV extends VR{constructor(A,s,R){super(A,s),this.levelMoveIndex=R}apply(A,s){return n.unshiftPhase(new eI(n.getPlayerParty().indexOf(A),A.getLearnableLevelMoves()[this.levelMoveIndex],x1.MEMORY,s)),!0}};N(yV,"RememberMoveModifier");let uo=yV;const wV=class wV extends VR{constructor(A,s){super(A,s)}apply(A){let s=bt.hasOwnProperty(A.species.speciesId)?bt[A.species.speciesId].find(R=>R.item===this.type.evolutionItem&&(R.evoFormKey===null||(R.preFormKey||"")===A.getFormKey())&&(!R.condition||R.condition.predicate(A))):null;return!s&&A.isFusion()&&(s=bt[A.fusionSpecies.speciesId].find(R=>R.item===this.type.evolutionItem&&(R.evoFormKey===null||(R.preFormKey||"")===A.getFusionFormKey())&&(!R.condition||R.condition.predicate(A))),s&&(s=new kn(A.species.speciesId,s))),s?(n.unshiftPhase(new uS(A,s,A.level-1)),!0):!1}};N(wV,"EvolutionItemModifier");let WD=wV;const vV=class vV extends VR{constructor(A,s,R){super(A,s),this.fusePokemonId=R}shouldApply(A,s){return super.shouldApply(A,s)&&!!s&&this.fusePokemonId===s.id}async apply(A,s){return await A.fuse(s),!0}};N(vV,"FusePokemonModifier");let Do=vV;const eT=class eT extends kA{constructor(A,s){super(A,s)}match(A){return A instanceof eT}apply(){return!0}clone(){return new eT(this.type,this.stackCount)}getMaxStackCount(){return 5}};N(eT,"MultipleParticipantExpBonusModifier");let Mo=eT;const tT=class tT extends kA{constructor(A,s,R){super(A,R),this.multiplier=s}match(A){return A instanceof tT}clone(){return new tT(this.type,this.multiplier,this.stackCount)}getArgs(){return[this.multiplier]}apply(A){return A.value*=1+(this.multiplier-1)*this.getStackCount(),!0}getMaxStackCount(){return 5}};N(tT,"HealingBoosterModifier");let Gi=tT;const AT=class AT extends kA{constructor(A,s,R){super(A,R),this.boostMultiplier=s*.01}match(A){return A instanceof AT?A.boostMultiplier===this.boostMultiplier:!1}clone(){return new AT(this.type,this.boostMultiplier*100,this.stackCount)}getArgs(){return[this.boostMultiplier*100]}apply(A){return A.value=Math.floor(A.value*(1+this.getStackCount()*this.boostMultiplier)),!0}getMaxStackCount(A){return this.boostMultiplier<1?this.boostMultiplier<.6?99:30:10}};N(AT,"ExpBoosterModifier");let LL=AT;const ET=class ET extends dt{constructor(A,s,R,a){super(A,s,a),this.boostMultiplier=R*.01}matchType(A){return A instanceof ET?A.boostMultiplier===this.boostMultiplier:!1}clone(){return new ET(this.type,this.pokemonId,this.boostMultiplier*100,this.stackCount)}getArgs(){return super.getArgs().concat(this.boostMultiplier*100)}shouldApply(A,s){return super.shouldApply(A,s)&&!!s}apply(A,s){return s.value=Math.floor(s.value*(1+this.getStackCount()*this.boostMultiplier)),!0}getMaxHeldItemCount(A){return 99}};N(ET,"PokemonExpBoosterModifier");let _o=ET;const sT=class sT extends kA{constructor(A,s){super(A,s)}match(A){return A instanceof sT}clone(){return new sT(this.type,this.stackCount)}apply(){return!0}getMaxStackCount(){return 5}};N(sT,"ExpShareModifier");let Po=sT;const RT=class RT extends kA{constructor(A,s){super(A,s)}match(A){return A instanceof RT}clone(){return new RT(this.type,this.stackCount)}apply(){return!0}getMaxStackCount(){return 4}};N(RT,"ExpBalanceModifier");let Go=RT;const OT=class OT extends dt{constructor(A,s,R){super(A,s,R)}matchType(A){return A instanceof OT}clone(){return new OT(this.type,this.pokemonId,this.stackCount)}apply(A,s){return s.value=Math.floor(s.value*(1+.5*this.getStackCount())),!0}getMaxHeldItemCount(A){return 3}};N(OT,"PokemonFriendshipBoosterModifier");let co=OT;const nT=class nT extends dt{constructor(A,s,R){super(A,s,R)}matchType(A){return A instanceof nT}clone(){return new nT(this.type,this.pokemonId,this.stackCount)}apply(A,s){return s.value!==1?(s.value+=.1*this.getStackCount()*(s.value>1?1:-1),!0):!1}getMaxHeldItemCount(A){return 10}};N(nT,"PokemonNatureWeightModifier");let ho=nT;const IT=class IT extends dt{constructor(A,s,R,a){super(A,s,a),this.accuracyAmount=R}matchType(A){return A instanceof IT?A.accuracyAmount===this.accuracyAmount:!1}clone(){return new IT(this.type,this.pokemonId,this.accuracyAmount,this.stackCount)}getArgs(){return super.getArgs().concat(this.accuracyAmount)}shouldApply(A,s){return super.shouldApply(A,s)&&!!s}apply(A,s){return s.value=Math.min(s.value+this.accuracyAmount*this.getStackCount(),100),!0}getMaxHeldItemCount(A){return 3}};N(IT,"PokemonMoveAccuracyBoosterModifier");let Ho=IT;const aT=class aT extends dt{constructor(A,s,R){super(A,s,R)}matchType(A){return A instanceof aT}clone(){return new aT(this.type,this.pokemonId,this.stackCount)}apply(A,s,R=null,a=null){if(!we[s].canBeMultiStrikeEnhanced(A))return!1;if(ve(R)){if(!ve(a))return this.applyDamageModifier(A,a)}else return this.applyHitCountBoost(R);return!1}applyHitCountBoost(A){return A.value+=this.getStackCount(),!0}applyDamageModifier(A,s){return A.turnData.hitsLeft===A.turnData.hitCount?(s.value*=1-.25*this.getStackCount(),!0):A.turnData.hitCount-A.turnData.hitsLeft!==this.getStackCount()+1?(s.value*=.25,!0):!1}getMaxHeldItemCount(A){return 2}};N(aT,"PokemonMultiHitModifier");let RI=aT;const iT=class iT extends dt{constructor(A,s,R,a,i){super(A,s,i),this.isTransferable=!1,this.formChangeItem=R,this.active=a}matchType(A){return A instanceof iT&&A.formChangeItem===this.formChangeItem}clone(){return new iT(this.type,this.pokemonId,this.formChangeItem,this.active,this.stackCount)}getArgs(){return super.getArgs().concat(this.formChangeItem,this.active)}apply(A,s){const R=this.active&&!s;R&&(this.active=!1);const a=n.triggerPokemonFormChange(A,he);return R&&(this.active=!0),a}getMaxHeldItemCount(A){return 1}};N(iT,"PokemonFormChangeItemModifier");let UR=iT;const VV=class VV extends Aa{constructor(A,s){super(A),this.moneyMultiplier=s}apply(){const A=new Et(n.getWaveMoneyAmount(this.moneyMultiplier));return n.applyModifiers(IO,!0,A),n.addMoney(A.value),n.getPlayerParty().map(s=>{var R,a;if(((R=s.species)==null?void 0:R.speciesId)===e.GIMMIGHOUL||((a=s.fusionSpecies)==null?void 0:a.speciesId)===e.GIMMIGHOUL){s.evoCounter?s.evoCounter+=Math.min(Math.floor(this.moneyMultiplier),3):s.evoCounter=Math.min(Math.floor(this.moneyMultiplier),3);const i=HM(J.EVOLUTION_TRACKER_GIMMIGHOUL).newModifier(s);n.addModifier(i)}}),!0}};N(VV,"MoneyRewardModifier");let YD=VV;const rT=class rT extends kA{constructor(A,s){super(A,s)}match(A){return A instanceof rT}clone(){return new rT(this.type,this.stackCount)}apply(A){return A.value+=Math.floor(A.value*.2*this.getStackCount()),!0}getMaxStackCount(){return 5}};N(rT,"MoneyMultiplierModifier");let IO=rT;const LT=class LT extends dt{constructor(A,s,R){super(A,s,R)}matchType(A){return A instanceof LT}clone(){return new LT(this.type,this.pokemonId,this.stackCount)}apply(A,s){const R=new Et(Math.floor(s.value*(.5*this.getStackCount())));return n.applyModifiers(IO,!0,R),n.addMoney(R.value),!0}getMaxHeldItemCount(A){return 5}};N(LT,"DamageMoneyRewardModifier");let Ia=LT;const NT=class NT extends kA{constructor(A,s){super(A,s)}match(A){return A instanceof NT}apply(){const A=Math.floor(n.money*.1*this.getStackCount());n.addMoney(A);const s=navigator.language||"en-US",R=A.toLocaleString(s),a=u.t("modifier:moneyInterestApply",{moneyAmount:R,typeName:this.type.name});return n.queueMessage(a,void 0,!0),!0}clone(){return new NT(this.type,this.stackCount)}getMaxStackCount(){return 5}};N(NT,"MoneyInterestModifier");let fo=NT;const TT=class TT extends kA{constructor(A,s){super(A,s)}match(A){return A instanceof TT}clone(){return new TT(this.type,this.stackCount)}apply(A){return A.value*=Math.pow(2,-1-this.getStackCount()),!0}getMaxStackCount(){return 4}};N(TT,"HiddenAbilityRateBoosterModifier");let Gn=TT;const ST=class ST extends kA{constructor(A,s){super(A,s)}match(A){return A instanceof ST}clone(){return new ST(this.type,this.stackCount)}apply(A){return A.value*=Math.pow(2,1+this.getStackCount()),!0}getMaxStackCount(){return 4}};N(ST,"ShinyRateBoosterModifier");let ci=ST;const oT=class oT extends kA{constructor(A,s){super(A,s)}match(A){return A instanceof oT}clone(){return new oT(this.type,this.stackCount)}apply(A){return A.value*=1.5+this.getStackCount()/2,!0}getMaxStackCount(){return 3}};N(oT,"CriticalCatchChanceBoosterModifier");let Bo=oT;const lT=class lT extends kA{constructor(A,s){super(A,s)}match(A){return A instanceof lT}apply(){return!0}clone(){return new lT(this.type,this.stackCount)}getMaxStackCount(){return 1}};N(lT,"LockModifierTiersModifier");let go=lT;const CT=class CT extends kA{constructor(A,s,R){super(A,R),this.shopMultiplier=s??2.5}match(A){return A instanceof CT}clone(){return new CT(this.type,this.shopMultiplier,this.stackCount)}apply(A){return A.value=Math.floor(A.value*this.shopMultiplier),!0}getArgs(){return super.getArgs().concat(this.shopMultiplier)}getMaxStackCount(){return 1}};N(CT,"HealShopCostModifier");let aa=CT;const UT=class UT extends kA{constructor(A,s){super(A,s)}match(A){return A instanceof UT}clone(){return new UT(this.type,this.stackCount)}apply(){return!0}getMaxStackCount(){return 1}};N(UT,"BoostBugSpawnModifier");let Ko=UT;const uT=class uT extends dt{constructor(A,s,R){super(A,s,R)}matchType(A){return A instanceof uT}clone(){return new uT(this.type,this.pokemonId,this.stackCount)}apply(){return!0}getMaxHeldItemCount(A){return 1}};N(uT,"SwitchEffectTransferModifier");let vI=uT;const xV=class xV extends dt{constructor(A,s,R){super(A,s,R)}getTargets(A,...s){return A instanceof eO?A.getOpponents():[]}apply(A,s,...R){const a=this.getTargets(A,s);if(!a.length)return!1;const i=a[A.randSeedInt(a.length)],r=this.getTransferredItemCount();if(!r)return!1;const L=A.isPlayer()?HE.PLAYER:A.hasTrainer()?HE.TRAINER:HE.WILD,o=[],l=n.findModifiers(_=>_ instanceof dt&&_.pokemonId===i.id&&_.isTransferable,i.isPlayer());let C=l.map(_=>_.type.getOrInferTier(L)).reduce((_,P)=>Math.max(P,_),0),M=l.filter(_=>_.type.getOrInferTier(L)===C);const D=[];for(let _=0;_<r;_++){if(!M.length){for(;C--&&!M.length;)M=l.filter(H=>H.type.tier===C);if(!M.length)break}const P=A.randSeedInt(l.length),h=l[P];D.push(n.tryTransferHeldItemModifier(h,A,!1).then(H=>{H&&(o.push(h.type),l.splice(P,1))}))}return Promise.all(D).then(()=>{for(const _ of o)n.queueMessage(this.getTransferMessage(A,i,_))}),!!o.length}};N(xV,"HeldItemTransferModifier");let mo=xV;const DT=class DT extends mo{constructor(A,s,R){super(A,s,R),this.isTransferable=!0}matchType(A){return A instanceof DT}clone(){return new DT(this.type,this.pokemonId,this.stackCount)}getTransferredItemCount(){return this.getStackCount()}getTransferMessage(A,s,R){return u.t("modifier:turnHeldItemTransferApply",{pokemonNameWithAffix:te(s),itemName:R.name,pokemonName:A.getNameToRender(),typeName:this.type.name})}getMaxHeldItemCount(A){return 1}setTransferrableFalse(){this.isTransferable=!1}};N(DT,"TurnHeldItemTransferModifier");let hi=DT;const MT=class MT extends mo{constructor(A,s,R,a){super(A,s,a),this.chance=R/100}getTargets(A,s){return s?[s]:[]}matchType(A){return A instanceof MT}clone(){return new MT(this.type,this.pokemonId,this.chance*100,this.stackCount)}getArgs(){return super.getArgs().concat(this.chance*100)}getTransferredItemCount(){return Phaser.Math.RND.realInRange(0,1)<this.chance*this.getStackCount()?1:0}getTransferMessage(A,s,R){return u.t("modifier:contactHeldItemTransferApply",{pokemonNameWithAffix:te(s),itemName:R.name,pokemonName:te(A),typeName:this.type.name})}getMaxHeldItemCount(A){return 5}};N(MT,"ContactHeldItemTransferChanceModifier");let Hi=MT;const _T=class _T extends kA{constructor(A,s){super(A,s)}match(A){return A instanceof _T}clone(){return new _T(this.type,this.stackCount)}apply(){return!0}getMaxStackCount(){return 3}};N(_T,"IvScannerModifier");let di=_T;const PT=class PT extends kA{constructor(A,s){super(A,s)}match(A){return A instanceof PT}clone(){return new PT(this.type,this.stackCount)}apply(A){return A.value+=this.getStackCount(),!0}getMaxStackCount(){return 3}};N(PT,"ExtraModifierModifier");let ia=PT;const GT=class GT extends Ea{constructor(A,s,R,a){super(A,s,R,a)}add(A,s){for(const R of A)if(this.match(R)){const a=R,i=this.getMaxBattles()+a.getBattleCount();return a.setNewBattleCount(i),n.playSound("se/restore"),!0}return A.push(this),!0}clone(){return new GT(this.type,this.getMaxBattles(),this.getBattleCount(),this.stackCount)}match(A){return A instanceof GT}apply(A){return A.value+=this.getStackCount(),!0}};N(GT,"TempExtraModifierModifier");let ra=GT;const bV=class bV extends kA{constructor(A,s){super(A,s)}getMaxStackCount(){return 5}};N(bV,"EnemyPersistentModifier");let hn=bV;const kV=class kV extends hn{constructor(A,s,R){super(A,R),this.damageMultiplier=s}apply(A){return A.value=Math.floor(A.value*Math.pow(this.damageMultiplier,this.getStackCount())),!0}getMaxStackCount(){return 99}};N(kV,"EnemyDamageMultiplierModifier");let yD=kV;const cT=class cT extends yD{constructor(A,s,R){super(A,1.05,R)}match(A){return A instanceof cT}clone(){return new cT(this.type,(this.damageMultiplier-1)*100,this.stackCount)}getArgs(){return[(this.damageMultiplier-1)*100]}getMaxStackCount(){return 999}};N(cT,"EnemyDamageBoosterModifier");let Fo=cT;const hT=class hT extends yD{constructor(A,s,R){super(A,.975,R)}match(A){return A instanceof hT}clone(){return new hT(this.type,(1-this.damageMultiplier)*100,this.stackCount)}getArgs(){return[(1-this.damageMultiplier)*100]}getMaxStackCount(){return n.currentBattle.waveIndex<2e3?super.getMaxStackCount():999}};N(hT,"EnemyDamageReducerModifier");let po=hT;const HT=class HT extends hn{constructor(A,s,R){super(A,R),this.healPercent=2}match(A){return A instanceof HT}clone(){return new HT(this.type,this.healPercent,this.stackCount)}getArgs(){return[this.healPercent]}apply(A){return A.isFullHp()?!1:(n.unshiftPhase(new FE(A.getBattlerIndex(),Math.max(Math.floor(A.getMaxHp()/(100/this.healPercent))*this.stackCount,1),u.t("modifier:enemyTurnHealApply",{pokemonNameWithAffix:te(A)}),!0,!1,!1,!1,!0)),!0)}getMaxStackCount(){return 10}};N(HT,"EnemyTurnHealModifier");let Wo=HT;const dT=class dT extends hn{constructor(A,s,R,a){super(A,a),this.effect=s,this.chance=.025*(this.effect===ne.BURN||this.effect===ne.POISON?2:1)}match(A){return A instanceof dT&&A.effect===this.effect}clone(){return new dT(this.type,this.effect,this.chance*100,this.stackCount)}getArgs(){return[this.effect,this.chance*100]}apply(A){return Phaser.Math.RND.realInRange(0,1)<this.chance*this.getStackCount()?A.trySetStatus(this.effect,!0):!1}getMaxStackCount(){return 10}};N(dT,"EnemyAttackStatusEffectChanceModifier");let NL=dT;const fT=class fT extends hn{constructor(A,s,R){super(A,R),this.chance=.025}match(A){return A instanceof fT}clone(){return new fT(this.type,this.chance*100,this.stackCount)}getArgs(){return[this.chance*100]}apply(A){return A.status&&Phaser.Math.RND.realInRange(0,1)<this.chance*this.getStackCount()?(n.queueMessage(La(A.status.effect,te(A))),A.resetStatus(),A.updateInfo(),!0):!1}getMaxStackCount(){return 10}};N(fT,"EnemyStatusEffectHealChanceModifier");let Yo=fT;const BT=class BT extends hn{constructor(A,s,R){super(A,R||10),this.chance=2}match(A){return A instanceof BT}clone(){return new BT(this.type,this.chance,this.stackCount)}getArgs(){return[this.chance]}apply(A){return A.battleData.endured||A.randSeedInt(100)>=this.chance*this.getStackCount()?!1:(A.addTag(y.ENDURE_TOKEN,1),A.battleData.endured=!0,!0)}getMaxStackCount(){return 10}};N(BT,"EnemyEndureChanceModifier");let yo=BT;const gT=class gT extends hn{constructor(A,s,R){super(A,R),this.chance=s/100}match(A){return A instanceof gT&&A.chance===this.chance}clone(){return new gT(this.type,this.chance*100,this.stackCount)}getArgs(){return[this.chance*100]}apply(A){return Phaser.Math.RND.realInRange(0,1)>=this.chance*this.getStackCount()?!1:(A.value=!0,!0)}getMaxStackCount(){return 10}};N(gT,"EnemyFusionChanceModifier");let wo=gT;function Q1(E=!0){const A=E?Ye.STARTING_MODIFIER_OVERRIDE:Ye.OPP_MODIFIER_OVERRIDE;!A||A.length===0||!n||(E||n.clearEnemyModifiers(),A.forEach(s=>{const R=J[s.name];let a=R();if(a instanceof cE){const r="type"in s&&s.type!==null?[s.type]:void 0;a=a.generateType([],r)}const i=a&&a.withIdFromFunc(R).newModifier();i&&(i.stackCount=s.count||1,E?n.addModifier(i,!0,!1,!1,!0):n.addEnemyModifier(i,!0,!0))}))}N(Q1,"overrideModifiers");function J1(E,A=!0){const s=A?Ye.STARTING_HELD_ITEMS_OVERRIDE:Ye.OPP_HELD_ITEMS_OVERRIDE;!s||s.length===0||!n||(A||n.clearEnemyHeldItemModifiers(E),s.forEach(R=>{const a=J[R.name];let i=a();const r=R.count||1;if(i instanceof cE){const o="type"in R&&R.type!==null?[R.type]:void 0;i=i.generateType([],o)}const L=i&&i.withIdFromFunc(a).newModifier(E);L&&(L.pokemonId=E.id,L.stackCount=r,A?n.addModifier(L,!0,!1,!1,!0):n.addEnemyModifier(L,!0,!0))}))}N(J1,"overrideHeldItems");var q8=(E=>(E[E.NONE=0]="NONE",E[E.SHORT=1]="SHORT",E[E.MEDIUM=2]="MEDIUM",E[E.LONG=3]="LONG",E[E.VERY_LONG=4]="VERY_LONG",E[E.NEVER=5]="NEVER",E))(q8||{}),Dr=(E=>(E[E.NONE=0]="NONE",E[E.LINKING_CORD=1]="LINKING_CORD",E[E.SUN_STONE=2]="SUN_STONE",E[E.MOON_STONE=3]="MOON_STONE",E[E.LEAF_STONE=4]="LEAF_STONE",E[E.FIRE_STONE=5]="FIRE_STONE",E[E.WATER_STONE=6]="WATER_STONE",E[E.THUNDER_STONE=7]="THUNDER_STONE",E[E.ICE_STONE=8]="ICE_STONE",E[E.DUSK_STONE=9]="DUSK_STONE",E[E.DAWN_STONE=10]="DAWN_STONE",E[E.SHINY_STONE=11]="SHINY_STONE",E[E.CRACKED_POT=12]="CRACKED_POT",E[E.SWEET_APPLE=13]="SWEET_APPLE",E[E.TART_APPLE=14]="TART_APPLE",E[E.STRAWBERRY_SWEET=15]="STRAWBERRY_SWEET",E[E.UNREMARKABLE_TEACUP=16]="UNREMARKABLE_TEACUP",E[E.UPGRADE=17]="UPGRADE",E[E.DUBIOUS_DISC=18]="DUBIOUS_DISC",E[E.DRAGON_SCALE=19]="DRAGON_SCALE",E[E.PRISM_SCALE=20]="PRISM_SCALE",E[E.RAZOR_CLAW=21]="RAZOR_CLAW",E[E.RAZOR_FANG=22]="RAZOR_FANG",E[E.REAPER_CLOTH=23]="REAPER_CLOTH",E[E.ELECTIRIZER=24]="ELECTIRIZER",E[E.MAGMARIZER=25]="MAGMARIZER",E[E.PROTECTOR=26]="PROTECTOR",E[E.SACHET=27]="SACHET",E[E.WHIPPED_DREAM=28]="WHIPPED_DREAM",E[E.SYRUPY_APPLE=29]="SYRUPY_APPLE",E[E.CHIPPED_POT=30]="CHIPPED_POT",E[E.GALARICA_CUFF=31]="GALARICA_CUFF",E[E.GALARICA_WREATH=32]="GALARICA_WREATH",E[E.AUSPICIOUS_ARMOR=33]="AUSPICIOUS_ARMOR",E[E.MALICIOUS_ARMOR=34]="MALICIOUS_ARMOR",E[E.MASTERPIECE_TEACUP=35]="MASTERPIECE_TEACUP",E[E.SUN_FLUTE=36]="SUN_FLUTE",E[E.MOON_FLUTE=37]="MOON_FLUTE",E[E.BLACK_AUGURITE=51]="BLACK_AUGURITE",E[E.PEAT_BLOCK=52]="PEAT_BLOCK",E[E.METAL_ALLOY=53]="METAL_ALLOY",E[E.SCROLL_OF_DARKNESS=54]="SCROLL_OF_DARKNESS",E[E.SCROLL_OF_WATERS=55]="SCROLL_OF_WATERS",E[E.LEADERS_CREST=56]="LEADERS_CREST",E))(Dr||{});const ZV=class ZV{constructor(A,s,R,a,i,r,L){this.speciesId=A,this.preFormKey=s,this.evoFormKey=R,this.level=a,this.item=i||0,this.condition=r,this.wildDelay=L??0}};N(ZV,"SpeciesFormEvolution");let Wt=ZV;const XV=class XV extends Wt{constructor(A,s,R,a,i){super(A,null,null,s,R,a,i)}};N(XV,"SpeciesEvolution");let V=XV;const QV=class QV extends Wt{constructor(A,s){super(s.speciesId,s.preFormKey,s.evoFormKey,s.level,s.item,s.condition,s.wildDelay),this.primarySpeciesId=A}};N(QV,"FusionSpeciesFormEvolution");let kn=QV;const JV=class JV{constructor(A,s){this.predicate=A,this.enforceFunc=s,this.description=""}};N(JV,"SpeciesEvolutionCondition");let jE=JV;const $V=class $V extends jE{constructor(A){super(s=>s.gender===A,s=>s.gender=A),this.gender=A,this.description=u.t("pokemonEvolutions:gender",{gender:u.t(`pokemonEvolutions:${at[A]}`)})}};N($V,"GenderEvolutionCondition");let ls=$V;const zV=class zV extends jE{constructor(A){A==="day"?(super(()=>n.arena.getTimeOfDay()===S.DAWN||n.arena.getTimeOfDay()===S.DAY),this.timesOfDay=[S.DAWN,S.DAY]):A==="night"?(super(()=>n.arena.getTimeOfDay()===S.DUSK||n.arena.getTimeOfDay()===S.NIGHT),this.timesOfDay=[S.DUSK,S.NIGHT]):(super(()=>!1),this.timesOfDay=[]),this.description=u.t("pokemonEvolutions:timeOfDay",{tod:u.t(`pokemonEvolutions:${A}`)})}};N(zV,"TimeOfDayEvolutionCondition");let pA=zV;const qV=class qV extends jE{constructor(A){super(R=>R.moveset.filter(a=>(a==null?void 0:a.moveId)===A).length>0),this.move=A;const s=t[this.move].split("_").filter(R=>R).map((R,a)=>a?`${R[0]}${R.slice(1).toLowerCase()}`:R.toLowerCase()).join("");this.description=u.t("pokemonEvolutions:move",{move:u.t(`move:${s}.name`)})}};N(qV,"MoveEvolutionCondition");let ps=qV;const jV=class jV extends jE{constructor(A){super(s=>s.friendship>=A),this.amount=A,this.description=u.t("pokemonEvolutions:friendship")}};N(jV,"FriendshipEvolutionCondition");let Ws=jV;const ex=class ex extends jE{constructor(A,s){s==="day"?(super(R=>R.friendship>=A&&(n.arena.getTimeOfDay()===S.DAWN||n.arena.getTimeOfDay()===S.DAY)),this.timesOfDay=[S.DAWN,S.DAY]):s==="night"?(super(R=>R.friendship>=A&&(n.arena.getTimeOfDay()===S.DUSK||n.arena.getTimeOfDay()===S.NIGHT)),this.timesOfDay=[S.DUSK,S.NIGHT]):(super(R=>!1),this.timesOfDay=[]),this.amount=A,this.description=u.t("pokemonEvolutions:friendshipTimeOfDay",{tod:u.t(`pokemonEvolutions:${s}`)})}};N(ex,"FriendshipTimeOfDayEvolutionCondition");let an=ex;const tx=class tx extends jE{constructor(A,s){super(R=>R.friendship>=A&&!!R.getMoveset().find(a=>(a==null?void 0:a.getMove().type)===s)),this.amount=A,this.type=s,this.description=u.t("pokemonEvolutions:friendshipMoveType",{type:u.t(`pokemonInfo:Type.${I[this.type]}`)})}};N(tx,"FriendshipMoveTypeEvolutionCondition");let wD=tx;const Ax=class Ax extends jE{constructor(){super(()=>n.getPlayerParty().length<6&&n.pokeballCounts[be.POKEBALL]>0),this.description=u.t("pokemonEvolutions:shedinja")}};N(Ax,"ShedinjaEvolutionCondition");let o1=Ax;const Ex=class Ex extends jE{constructor(A){super(()=>!!n.getPlayerParty().find(s=>s.getTypes(!1,!1,!0).indexOf(A)>-1)),this.type=A,this.description=u.t("pokemonEvolutions:partyType",{type:u.t(`pokemonInfo:Type.${I[this.type]}`)})}};N(Ex,"PartyTypeEvolutionCondition");let l1=Ex;const sx=class sx extends jE{constructor(A){super(()=>!!n.gameData.dexData[A].caughtAttr),this.species=A,this.description=u.t("pokemonEvolutions:caught",{species:u.t(`pokemon:${e[this.species].toLowerCase()}`)})}};N(sx,"CaughtEvolutionCondition");let lN=sx;const Rx=class Rx extends jE{constructor(A){super(()=>{var s;return A.indexOf(((s=n.arena.weather)==null?void 0:s.weatherType)||Oe.NONE)>-1}),this.weatherTypes=A}};N(Rx,"WeatherEvolutionCondition");let vD=Rx;const Ox=class Ox extends jE{constructor(A){super(s=>s.moveset.filter(R=>(R==null?void 0:R.getMove().type)===A).length>0),this.type=A,this.description=u.t("pokemonEvolutions:moveType",{type:u.t(`pokemonInfo:Type.${I[this.type]}`)})}};N(Ox,"MoveTypeEvolutionCondition");let VD=Ox;const nx=class nx extends jE{constructor(){super(A=>A.evoCounter+A.getHeldItems().filter(s=>s instanceof Ia).length+n.findModifiers(s=>s instanceof IO||s instanceof ia||s instanceof ra).length>9),this.description=u.t("pokemonEvolutions:treasure")}};N(nx,"TreasureEvolutionCondition");let xD=nx;const Ix=class Ix extends jE{constructor(A){super(R=>{var a;return((a=R.getMoveset(!0).find(i=>i&&[t.LOW_SWEEP,t.MACH_PUNCH,t.RAPID_SPIN].includes(i==null?void 0:i.moveId)))==null?void 0:a.moveId)===A}),this.move=A;const s=t[this.move].split("_").filter(R=>R).map((R,a)=>a?`${R[0]}${R.slice(1).toLowerCase()}`:R.toLowerCase()).join("");this.description=u.t("pokemonEvolutions:move",{move:u.t(`move:${s}.name`)})}};N(Ix,"TyrogueEvolutionCondition");let CN=Ix;const ax=class ax extends jE{constructor(A){super(s=>A.indexOf(s.getNature())>-1),this.natures=A,this.description=u.t("pokemonEvolutions:nature")}};N(ax,"NatureEvolutionCondition");let C1=ax;const ix=class ix extends jE{constructor(A,s){s==="day"?(super(a=>a.moveset.filter(i=>(i==null?void 0:i.moveId)===A).length>0&&(n.arena.getTimeOfDay()===S.DAWN||n.arena.getTimeOfDay()===S.DAY)),this.move=A,this.timesOfDay=[S.DAWN,S.DAY]):s==="night"?(super(a=>a.moveset.filter(i=>(i==null?void 0:i.moveId)===A).length>0&&(n.arena.getTimeOfDay()===S.DUSK||n.arena.getTimeOfDay()===S.NIGHT)),this.move=A,this.timesOfDay=[S.DUSK,S.NIGHT]):(super(()=>!1),this.timesOfDay=[]);const R=t[this.move].split("_").filter(a=>a).map((a,i)=>i?`${a[0]}${a.slice(1).toLowerCase()}`:a.toLowerCase()).join("");this.description=u.t("pokemonEvolutions:moveTimeOfDay",{move:u.t(`move:${R}.name`),tod:u.t(`pokemonEvolutions:${s}`)})}};N(ix,"MoveTimeOfDayEvolutionCondition");let bD=ix;const rx=class rx extends jE{constructor(A){super(()=>A.filter(s=>s===n.arena.biomeType).length>0),this.biomes=A,this.description=u.t("pokemonEvolutions:biome")}};N(rx,"BiomeEvolutionCondition");let mO=rx;const Lx=class Lx extends jE{constructor(){super(s=>{let R=!1;return s.moveset.filter(a=>(a==null?void 0:a.moveId)===t.HYPER_DRILL).length>0&&n.executeWithSeedOffset(()=>R=!ce(4),s.id),R});const A=t[t.HYPER_DRILL].split("_").filter(s=>s).map((s,R)=>R?`${s[0]}${s.slice(1).toLowerCase()}`:s.toLowerCase()).join("");this.description=u.t("pokemonEvolutions:move",{move:u.t(`move:${A}.name`)})}};N(Lx,"DunsparceEvolutionCondition");let U1=Lx;const Nx=class Nx extends jE{constructor(){super(A=>{let s=!1;return n.executeWithSeedOffset(()=>s=!ce(4),A.id),s})}};N(Nx,"TandemausEvolutionCondition");let u1=Nx;const bt={[e.BULBASAUR]:[new V(e.IVYSAUR,16,null,null)],[e.IVYSAUR]:[new V(e.VENUSAUR,32,null,null)],[e.CHARMANDER]:[new V(e.CHARMELEON,16,null,null)],[e.CHARMELEON]:[new V(e.CHARIZARD,36,null,null)],[e.SQUIRTLE]:[new V(e.WARTORTLE,16,null,null)],[e.WARTORTLE]:[new V(e.BLASTOISE,36,null,null)],[e.CATERPIE]:[new V(e.METAPOD,7,null,null)],[e.METAPOD]:[new V(e.BUTTERFREE,10,null,null)],[e.WEEDLE]:[new V(e.KAKUNA,7,null,null)],[e.KAKUNA]:[new V(e.BEEDRILL,10,null,null)],[e.PIDGEY]:[new V(e.PIDGEOTTO,18,null,null)],[e.PIDGEOTTO]:[new V(e.PIDGEOT,36,null,null)],[e.RATTATA]:[new V(e.RATICATE,20,null,null)],[e.SPEAROW]:[new V(e.FEAROW,20,null,null)],[e.EKANS]:[new V(e.ARBOK,22,null,null)],[e.SANDSHREW]:[new V(e.SANDSLASH,22,null,null)],[e.NIDORAN_F]:[new V(e.NIDORINA,16,null,null)],[e.NIDORAN_M]:[new V(e.NIDORINO,16,null,null)],[e.ZUBAT]:[new V(e.GOLBAT,22,null,null)],[e.ODDISH]:[new V(e.GLOOM,21,null,null)],[e.PARAS]:[new V(e.PARASECT,24,null,null)],[e.VENONAT]:[new V(e.VENOMOTH,31,null,null)],[e.DIGLETT]:[new V(e.DUGTRIO,26,null,null)],[e.MEOWTH]:[new Wt(e.PERSIAN,"","",28,null,null)],[e.PSYDUCK]:[new V(e.GOLDUCK,33,null,null)],[e.MANKEY]:[new V(e.PRIMEAPE,28,null,null)],[e.POLIWAG]:[new V(e.POLIWHIRL,25,null,null)],[e.ABRA]:[new V(e.KADABRA,16,null,null)],[e.MACHOP]:[new V(e.MACHOKE,28,null,null)],[e.BELLSPROUT]:[new V(e.WEEPINBELL,21,null,null)],[e.TENTACOOL]:[new V(e.TENTACRUEL,30,null,null)],[e.GEODUDE]:[new V(e.GRAVELER,25,null,null)],[e.PONYTA]:[new V(e.RAPIDASH,40,null,null)],[e.SLOWPOKE]:[new V(e.SLOWBRO,37,null,null),new V(e.SLOWKING,1,1,null,4)],[e.MAGNEMITE]:[new V(e.MAGNETON,30,null,null)],[e.DODUO]:[new V(e.DODRIO,31,null,null)],[e.SEEL]:[new V(e.DEWGONG,34,null,null)],[e.GRIMER]:[new V(e.MUK,38,null,null)],[e.GASTLY]:[new V(e.HAUNTER,25,null,null)],[e.DROWZEE]:[new V(e.HYPNO,26,null,null)],[e.KRABBY]:[new V(e.KINGLER,28,null,null)],[e.VOLTORB]:[new V(e.ELECTRODE,30,null,null)],[e.CUBONE]:[new V(e.ALOLA_MAROWAK,28,null,new pA("night")),new V(e.MAROWAK,28,null,new pA("day"))],[e.TYROGUE]:[new V(e.HITMONLEE,20,null,new CN(t.LOW_SWEEP)),new V(e.HITMONCHAN,20,null,new CN(t.MACH_PUNCH)),new V(e.HITMONTOP,20,null,new CN(t.RAPID_SPIN))],[e.KOFFING]:[new V(e.GALAR_WEEZING,35,null,new pA("night")),new V(e.WEEZING,35,null,new pA("day"))],[e.RHYHORN]:[new V(e.RHYDON,42,null,null)],[e.HORSEA]:[new V(e.SEADRA,32,null,null)],[e.GOLDEEN]:[new V(e.SEAKING,33,null,null)],[e.SMOOCHUM]:[new V(e.JYNX,30,null,null)],[e.ELEKID]:[new V(e.ELECTABUZZ,30,null,null)],[e.MAGBY]:[new V(e.MAGMAR,30,null,null)],[e.MAGIKARP]:[new V(e.GYARADOS,20,null,null)],[e.OMANYTE]:[new V(e.OMASTAR,40,null,null)],[e.KABUTO]:[new V(e.KABUTOPS,40,null,null)],[e.DRATINI]:[new V(e.DRAGONAIR,30,null,null)],[e.DRAGONAIR]:[new V(e.DRAGONITE,55,null,null)],[e.CHIKORITA]:[new V(e.BAYLEEF,16,null,null)],[e.BAYLEEF]:[new V(e.MEGANIUM,32,null,null)],[e.CYNDAQUIL]:[new V(e.QUILAVA,14,null,null)],[e.QUILAVA]:[new V(e.HISUI_TYPHLOSION,36,null,new pA("night")),new V(e.TYPHLOSION,36,null,new pA("day"))],[e.TOTODILE]:[new V(e.CROCONAW,18,null,null)],[e.CROCONAW]:[new V(e.FERALIGATR,30,null,null)],[e.SENTRET]:[new V(e.FURRET,15,null,null)],[e.HOOTHOOT]:[new V(e.NOCTOWL,20,null,null)],[e.LEDYBA]:[new V(e.LEDIAN,18,null,null)],[e.SPINARAK]:[new V(e.ARIADOS,22,null,null)],[e.CHINCHOU]:[new V(e.LANTURN,27,null,null)],[e.NATU]:[new V(e.XATU,25,null,null)],[e.MAREEP]:[new V(e.FLAAFFY,15,null,null)],[e.FLAAFFY]:[new V(e.AMPHAROS,30,null,null)],[e.MARILL]:[new V(e.AZUMARILL,18,null,null)],[e.HOPPIP]:[new V(e.SKIPLOOM,18,null,null)],[e.SKIPLOOM]:[new V(e.JUMPLUFF,27,null,null)],[e.WOOPER]:[new V(e.QUAGSIRE,20,null,null)],[e.WYNAUT]:[new V(e.WOBBUFFET,15,null,null)],[e.PINECO]:[new V(e.FORRETRESS,31,null,null)],[e.SNUBBULL]:[new V(e.GRANBULL,23,null,null)],[e.TEDDIURSA]:[new V(e.URSARING,30,null,null)],[e.SLUGMA]:[new V(e.MAGCARGO,38,null,null)],[e.SWINUB]:[new V(e.PILOSWINE,33,null,null)],[e.REMORAID]:[new V(e.OCTILLERY,25,null,null)],[e.HOUNDOUR]:[new V(e.HOUNDOOM,24,null,null)],[e.PHANPY]:[new V(e.DONPHAN,25,null,null)],[e.LARVITAR]:[new V(e.PUPITAR,30,null,null)],[e.PUPITAR]:[new V(e.TYRANITAR,55,null,null)],[e.TREECKO]:[new V(e.GROVYLE,16,null,null)],[e.GROVYLE]:[new V(e.SCEPTILE,36,null,null)],[e.TORCHIC]:[new V(e.COMBUSKEN,16,null,null)],[e.COMBUSKEN]:[new V(e.BLAZIKEN,36,null,null)],[e.MUDKIP]:[new V(e.MARSHTOMP,16,null,null)],[e.MARSHTOMP]:[new V(e.SWAMPERT,36,null,null)],[e.POOCHYENA]:[new V(e.MIGHTYENA,18,null,null)],[e.ZIGZAGOON]:[new V(e.LINOONE,20,null,null)],[e.WURMPLE]:[new V(e.SILCOON,7,null,new pA("day")),new V(e.CASCOON,7,null,new pA("night"))],[e.SILCOON]:[new V(e.BEAUTIFLY,10,null,null)],[e.CASCOON]:[new V(e.DUSTOX,10,null,null)],[e.LOTAD]:[new V(e.LOMBRE,14,null,null)],[e.SEEDOT]:[new V(e.NUZLEAF,14,null,null)],[e.TAILLOW]:[new V(e.SWELLOW,22,null,null)],[e.WINGULL]:[new V(e.PELIPPER,25,null,null)],[e.RALTS]:[new V(e.KIRLIA,20,null,null)],[e.KIRLIA]:[new V(e.GARDEVOIR,30,null,new ls(at.FEMALE)),new V(e.GALLADE,30,null,new ls(at.MALE))],[e.SURSKIT]:[new V(e.MASQUERAIN,22,null,null)],[e.SHROOMISH]:[new V(e.BRELOOM,23,null,null)],[e.SLAKOTH]:[new V(e.VIGOROTH,18,null,null)],[e.VIGOROTH]:[new V(e.SLAKING,36,null,null)],[e.NINCADA]:[new V(e.NINJASK,20,null,null),new V(e.SHEDINJA,20,null,new o1)],[e.WHISMUR]:[new V(e.LOUDRED,20,null,null)],[e.LOUDRED]:[new V(e.EXPLOUD,40,null,null)],[e.MAKUHITA]:[new V(e.HARIYAMA,24,null,null)],[e.ARON]:[new V(e.LAIRON,32,null,null)],[e.LAIRON]:[new V(e.AGGRON,42,null,null)],[e.MEDITITE]:[new V(e.MEDICHAM,37,null,null)],[e.ELECTRIKE]:[new V(e.MANECTRIC,26,null,null)],[e.GULPIN]:[new V(e.SWALOT,26,null,null)],[e.CARVANHA]:[new V(e.SHARPEDO,30,null,null)],[e.WAILMER]:[new V(e.WAILORD,40,null,null)],[e.NUMEL]:[new V(e.CAMERUPT,33,null,null)],[e.SPOINK]:[new V(e.GRUMPIG,32,null,null)],[e.TRAPINCH]:[new V(e.VIBRAVA,35,null,null)],[e.VIBRAVA]:[new V(e.FLYGON,45,null,null)],[e.CACNEA]:[new V(e.CACTURNE,32,null,null)],[e.SWABLU]:[new V(e.ALTARIA,35,null,null)],[e.BARBOACH]:[new V(e.WHISCASH,30,null,null)],[e.CORPHISH]:[new V(e.CRAWDAUNT,30,null,null)],[e.BALTOY]:[new V(e.CLAYDOL,36,null,null)],[e.LILEEP]:[new V(e.CRADILY,40,null,null)],[e.ANORITH]:[new V(e.ARMALDO,40,null,null)],[e.SHUPPET]:[new V(e.BANETTE,37,null,null)],[e.DUSKULL]:[new V(e.DUSCLOPS,37,null,null)],[e.SNORUNT]:[new V(e.GLALIE,42,null,new ls(at.MALE)),new V(e.FROSLASS,42,null,new ls(at.FEMALE))],[e.SPHEAL]:[new V(e.SEALEO,32,null,null)],[e.SEALEO]:[new V(e.WALREIN,44,null,null)],[e.BAGON]:[new V(e.SHELGON,30,null,null)],[e.SHELGON]:[new V(e.SALAMENCE,50,null,null)],[e.BELDUM]:[new V(e.METANG,20,null,null)],[e.METANG]:[new V(e.METAGROSS,45,null,null)],[e.TURTWIG]:[new V(e.GROTLE,18,null,null)],[e.GROTLE]:[new V(e.TORTERRA,32,null,null)],[e.CHIMCHAR]:[new V(e.MONFERNO,14,null,null)],[e.MONFERNO]:[new V(e.INFERNAPE,36,null,null)],[e.PIPLUP]:[new V(e.PRINPLUP,16,null,null)],[e.PRINPLUP]:[new V(e.EMPOLEON,36,null,null)],[e.STARLY]:[new V(e.STARAVIA,14,null,null)],[e.STARAVIA]:[new V(e.STARAPTOR,34,null,null)],[e.BIDOOF]:[new V(e.BIBAREL,15,null,null)],[e.KRICKETOT]:[new V(e.KRICKETUNE,10,null,null)],[e.SHINX]:[new V(e.LUXIO,15,null,null)],[e.LUXIO]:[new V(e.LUXRAY,30,null,null)],[e.CRANIDOS]:[new V(e.RAMPARDOS,30,null,null)],[e.SHIELDON]:[new V(e.BASTIODON,30,null,null)],[e.BURMY]:[new V(e.MOTHIM,20,null,new ls(at.MALE)),new V(e.WORMADAM,20,null,new ls(at.FEMALE))],[e.COMBEE]:[new V(e.VESPIQUEN,21,null,new ls(at.FEMALE))],[e.BUIZEL]:[new V(e.FLOATZEL,26,null,null)],[e.CHERUBI]:[new V(e.CHERRIM,25,null,null)],[e.SHELLOS]:[new V(e.GASTRODON,30,null,null)],[e.DRIFLOON]:[new V(e.DRIFBLIM,28,null,null)],[e.GLAMEOW]:[new V(e.PURUGLY,38,null,null)],[e.STUNKY]:[new V(e.SKUNTANK,34,null,null)],[e.BRONZOR]:[new V(e.BRONZONG,33,null,null)],[e.GIBLE]:[new V(e.GABITE,24,null,null)],[e.GABITE]:[new V(e.GARCHOMP,48,null,null)],[e.HIPPOPOTAS]:[new V(e.HIPPOWDON,34,null,null)],[e.SKORUPI]:[new V(e.DRAPION,40,null,null)],[e.CROAGUNK]:[new V(e.TOXICROAK,37,null,null)],[e.FINNEON]:[new V(e.LUMINEON,31,null,null)],[e.MANTYKE]:[new V(e.MANTINE,32,null,new lN(e.REMORAID),2)],[e.SNOVER]:[new V(e.ABOMASNOW,40,null,null)],[e.SNIVY]:[new V(e.SERVINE,17,null,null)],[e.SERVINE]:[new V(e.SERPERIOR,36,null,null)],[e.TEPIG]:[new V(e.PIGNITE,17,null,null)],[e.PIGNITE]:[new V(e.EMBOAR,36,null,null)],[e.OSHAWOTT]:[new V(e.DEWOTT,17,null,null)],[e.DEWOTT]:[new V(e.HISUI_SAMUROTT,36,null,new pA("night")),new V(e.SAMUROTT,36,null,new pA("day"))],[e.PATRAT]:[new V(e.WATCHOG,20,null,null)],[e.LILLIPUP]:[new V(e.HERDIER,16,null,null)],[e.HERDIER]:[new V(e.STOUTLAND,32,null,null)],[e.PURRLOIN]:[new V(e.LIEPARD,20,null,null)],[e.PIDOVE]:[new V(e.TRANQUILL,21,null,null)],[e.TRANQUILL]:[new V(e.UNFEZANT,32,null,null)],[e.BLITZLE]:[new V(e.ZEBSTRIKA,27,null,null)],[e.ROGGENROLA]:[new V(e.BOLDORE,25,null,null)],[e.DRILBUR]:[new V(e.EXCADRILL,31,null,null)],[e.TIMBURR]:[new V(e.GURDURR,25,null,null)],[e.TYMPOLE]:[new V(e.PALPITOAD,25,null,null)],[e.PALPITOAD]:[new V(e.SEISMITOAD,36,null,null)],[e.SEWADDLE]:[new V(e.SWADLOON,20,null,null)],[e.VENIPEDE]:[new V(e.WHIRLIPEDE,22,null,null)],[e.WHIRLIPEDE]:[new V(e.SCOLIPEDE,30,null,null)],[e.SANDILE]:[new V(e.KROKOROK,29,null,null)],[e.KROKOROK]:[new V(e.KROOKODILE,40,null,null)],[e.DARUMAKA]:[new V(e.DARMANITAN,35,null,null)],[e.DWEBBLE]:[new V(e.CRUSTLE,34,null,null)],[e.SCRAGGY]:[new V(e.SCRAFTY,39,null,null)],[e.YAMASK]:[new V(e.COFAGRIGUS,34,null,null)],[e.TIRTOUGA]:[new V(e.CARRACOSTA,37,null,null)],[e.ARCHEN]:[new V(e.ARCHEOPS,37,null,null)],[e.TRUBBISH]:[new V(e.GARBODOR,36,null,null)],[e.ZORUA]:[new V(e.ZOROARK,30,null,null)],[e.GOTHITA]:[new V(e.GOTHORITA,32,null,null)],[e.GOTHORITA]:[new V(e.GOTHITELLE,41,null,null)],[e.SOLOSIS]:[new V(e.DUOSION,32,null,null)],[e.DUOSION]:[new V(e.REUNICLUS,41,null,null)],[e.DUCKLETT]:[new V(e.SWANNA,35,null,null)],[e.VANILLITE]:[new V(e.VANILLISH,35,null,null)],[e.VANILLISH]:[new V(e.VANILLUXE,47,null,null)],[e.DEERLING]:[new V(e.SAWSBUCK,34,null,null)],[e.FOONGUS]:[new V(e.AMOONGUSS,39,null,null)],[e.FRILLISH]:[new V(e.JELLICENT,40,null,null)],[e.JOLTIK]:[new V(e.GALVANTULA,36,null,null)],[e.FERROSEED]:[new V(e.FERROTHORN,40,null,null)],[e.KLINK]:[new V(e.KLANG,38,null,null)],[e.KLANG]:[new V(e.KLINKLANG,49,null,null)],[e.TYNAMO]:[new V(e.EELEKTRIK,39,null,null)],[e.ELGYEM]:[new V(e.BEHEEYEM,42,null,null)],[e.LITWICK]:[new V(e.LAMPENT,41,null,null)],[e.AXEW]:[new V(e.FRAXURE,38,null,null)],[e.FRAXURE]:[new V(e.HAXORUS,48,null,null)],[e.CUBCHOO]:[new V(e.BEARTIC,37,null,null)],[e.MIENFOO]:[new V(e.MIENSHAO,50,null,null)],[e.GOLETT]:[new V(e.GOLURK,43,null,null)],[e.PAWNIARD]:[new V(e.BISHARP,52,null,null)],[e.BISHARP]:[new V(e.KINGAMBIT,1,56,null,4)],[e.RUFFLET]:[new V(e.HISUI_BRAVIARY,54,null,new pA("night")),new V(e.BRAVIARY,54,null,new pA("day"))],[e.VULLABY]:[new V(e.MANDIBUZZ,54,null,null)],[e.DEINO]:[new V(e.ZWEILOUS,50,null,null)],[e.ZWEILOUS]:[new V(e.HYDREIGON,64,null,null)],[e.LARVESTA]:[new V(e.VOLCARONA,59,null,null)],[e.CHESPIN]:[new V(e.QUILLADIN,16,null,null)],[e.QUILLADIN]:[new V(e.CHESNAUGHT,36,null,null)],[e.FENNEKIN]:[new V(e.BRAIXEN,16,null,null)],[e.BRAIXEN]:[new V(e.DELPHOX,36,null,null)],[e.FROAKIE]:[new V(e.FROGADIER,16,null,null)],[e.FROGADIER]:[new V(e.GRENINJA,36,null,null)],[e.BUNNELBY]:[new V(e.DIGGERSBY,20,null,null)],[e.FLETCHLING]:[new V(e.FLETCHINDER,17,null,null)],[e.FLETCHINDER]:[new V(e.TALONFLAME,35,null,null)],[e.SCATTERBUG]:[new V(e.SPEWPA,9,null,null)],[e.SPEWPA]:[new V(e.VIVILLON,12,null,null)],[e.LITLEO]:[new V(e.PYROAR,35,null,null)],[e.FLABEBE]:[new V(e.FLOETTE,19,null,null)],[e.SKIDDO]:[new V(e.GOGOAT,32,null,null)],[e.PANCHAM]:[new V(e.PANGORO,32,null,new l1(I.DARK),2)],[e.ESPURR]:[new Wt(e.MEOWSTIC,"","female",25,null,new ls(at.FEMALE)),new Wt(e.MEOWSTIC,"","",25,null,new ls(at.MALE))],[e.HONEDGE]:[new V(e.DOUBLADE,35,null,null)],[e.INKAY]:[new V(e.MALAMAR,30,null,null)],[e.BINACLE]:[new V(e.BARBARACLE,39,null,null)],[e.SKRELP]:[new V(e.DRAGALGE,48,null,null)],[e.CLAUNCHER]:[new V(e.CLAWITZER,37,null,null)],[e.TYRUNT]:[new V(e.TYRANTRUM,39,null,new pA("day"))],[e.AMAURA]:[new V(e.AURORUS,39,null,new pA("night"))],[e.GOOMY]:[new V(e.HISUI_SLIGGOO,40,null,new pA("night")),new V(e.SLIGGOO,40,null,new pA("day"))],[e.SLIGGOO]:[new V(e.GOODRA,50,null,new vD([Oe.RAIN,Oe.FOG,Oe.HEAVY_RAIN]),3)],[e.BERGMITE]:[new V(e.HISUI_AVALUGG,37,null,new pA("night")),new V(e.AVALUGG,37,null,new pA("day"))],[e.NOIBAT]:[new V(e.NOIVERN,48,null,null)],[e.ROWLET]:[new V(e.DARTRIX,17,null,null)],[e.DARTRIX]:[new V(e.HISUI_DECIDUEYE,36,null,new pA("night")),new V(e.DECIDUEYE,34,null,new pA("day"))],[e.LITTEN]:[new V(e.TORRACAT,17,null,null)],[e.TORRACAT]:[new V(e.INCINEROAR,34,null,null)],[e.POPPLIO]:[new V(e.BRIONNE,17,null,null)],[e.BRIONNE]:[new V(e.PRIMARINA,34,null,null)],[e.PIKIPEK]:[new V(e.TRUMBEAK,14,null,null)],[e.TRUMBEAK]:[new V(e.TOUCANNON,28,null,null)],[e.YUNGOOS]:[new V(e.GUMSHOOS,20,null,new pA("day"))],[e.GRUBBIN]:[new V(e.CHARJABUG,20,null,null)],[e.CUTIEFLY]:[new V(e.RIBOMBEE,25,null,null)],[e.MAREANIE]:[new V(e.TOXAPEX,38,null,null)],[e.MUDBRAY]:[new V(e.MUDSDALE,30,null,null)],[e.DEWPIDER]:[new V(e.ARAQUANID,22,null,null)],[e.FOMANTIS]:[new V(e.LURANTIS,34,null,new pA("day"))],[e.MORELULL]:[new V(e.SHIINOTIC,24,null,null)],[e.SALANDIT]:[new V(e.SALAZZLE,33,null,new ls(at.FEMALE))],[e.STUFFUL]:[new V(e.BEWEAR,27,null,null)],[e.BOUNSWEET]:[new V(e.STEENEE,18,null,null)],[e.WIMPOD]:[new V(e.GOLISOPOD,30,null,null)],[e.SANDYGAST]:[new V(e.PALOSSAND,42,null,null)],[e.JANGMO_O]:[new V(e.HAKAMO_O,35,null,null)],[e.HAKAMO_O]:[new V(e.KOMMO_O,45,null,null)],[e.COSMOG]:[new V(e.COSMOEM,23,null,null)],[e.COSMOEM]:[new V(e.SOLGALEO,1,36,null,4),new V(e.LUNALA,1,37,null,4)],[e.MELTAN]:[new V(e.MELMETAL,48,null,null)],[e.ALOLA_RATTATA]:[new V(e.ALOLA_RATICATE,20,null,new pA("night"))],[e.ALOLA_DIGLETT]:[new V(e.ALOLA_DUGTRIO,26,null,null)],[e.ALOLA_GEODUDE]:[new V(e.ALOLA_GRAVELER,25,null,null)],[e.ALOLA_GRIMER]:[new V(e.ALOLA_MUK,38,null,null)],[e.GROOKEY]:[new V(e.THWACKEY,16,null,null)],[e.THWACKEY]:[new V(e.RILLABOOM,35,null,null)],[e.SCORBUNNY]:[new V(e.RABOOT,16,null,null)],[e.RABOOT]:[new V(e.CINDERACE,35,null,null)],[e.SOBBLE]:[new V(e.DRIZZILE,16,null,null)],[e.DRIZZILE]:[new V(e.INTELEON,35,null,null)],[e.SKWOVET]:[new V(e.GREEDENT,24,null,null)],[e.ROOKIDEE]:[new V(e.CORVISQUIRE,18,null,null)],[e.CORVISQUIRE]:[new V(e.CORVIKNIGHT,38,null,null)],[e.BLIPBUG]:[new V(e.DOTTLER,10,null,null)],[e.DOTTLER]:[new V(e.ORBEETLE,30,null,null)],[e.NICKIT]:[new V(e.THIEVUL,18,null,null)],[e.GOSSIFLEUR]:[new V(e.ELDEGOSS,20,null,null)],[e.WOOLOO]:[new V(e.DUBWOOL,24,null,null)],[e.CHEWTLE]:[new V(e.DREDNAW,22,null,null)],[e.YAMPER]:[new V(e.BOLTUND,25,null,null)],[e.ROLYCOLY]:[new V(e.CARKOL,18,null,null)],[e.CARKOL]:[new V(e.COALOSSAL,34,null,null)],[e.SILICOBRA]:[new V(e.SANDACONDA,36,null,null)],[e.ARROKUDA]:[new V(e.BARRASKEWDA,26,null,null)],[e.TOXEL]:[new Wt(e.TOXTRICITY,"","lowkey",30,null,new C1([At.LONELY,At.BOLD,At.RELAXED,At.TIMID,At.SERIOUS,At.MODEST,At.MILD,At.QUIET,At.BASHFUL,At.CALM,At.GENTLE,At.CAREFUL])),new Wt(e.TOXTRICITY,"","amped",30,null,null)],[e.SIZZLIPEDE]:[new V(e.CENTISKORCH,28,null,null)],[e.HATENNA]:[new V(e.HATTREM,32,null,null)],[e.HATTREM]:[new V(e.HATTERENE,42,null,null)],[e.IMPIDIMP]:[new V(e.MORGREM,32,null,null)],[e.MORGREM]:[new V(e.GRIMMSNARL,42,null,null)],[e.CUFANT]:[new V(e.COPPERAJAH,34,null,null)],[e.DREEPY]:[new V(e.DRAKLOAK,50,null,null)],[e.DRAKLOAK]:[new V(e.DRAGAPULT,60,null,null)],[e.GALAR_MEOWTH]:[new V(e.PERRSERKER,28,null,null)],[e.GALAR_PONYTA]:[new V(e.GALAR_RAPIDASH,40,null,null)],[e.GALAR_FARFETCHD]:[new V(e.SIRFETCHD,30,null,null,3)],[e.GALAR_SLOWPOKE]:[new V(e.GALAR_SLOWBRO,1,31,null,4),new V(e.GALAR_SLOWKING,1,32,null,4)],[e.GALAR_MR_MIME]:[new V(e.MR_RIME,42,null,null)],[e.GALAR_CORSOLA]:[new V(e.CURSOLA,38,null,null)],[e.GALAR_ZIGZAGOON]:[new V(e.GALAR_LINOONE,20,null,null)],[e.GALAR_LINOONE]:[new V(e.OBSTAGOON,35,null,new pA("night"))],[e.GALAR_YAMASK]:[new V(e.RUNERIGUS,34,null,null)],[e.HISUI_ZORUA]:[new V(e.HISUI_ZOROARK,30,null,null)],[e.HISUI_SLIGGOO]:[new V(e.HISUI_GOODRA,50,null,new vD([Oe.RAIN,Oe.FOG,Oe.HEAVY_RAIN]),3)],[e.SPRIGATITO]:[new V(e.FLORAGATO,16,null,null)],[e.FLORAGATO]:[new V(e.MEOWSCARADA,36,null,null)],[e.FUECOCO]:[new V(e.CROCALOR,16,null,null)],[e.CROCALOR]:[new V(e.SKELEDIRGE,36,null,null)],[e.QUAXLY]:[new V(e.QUAXWELL,16,null,null)],[e.QUAXWELL]:[new V(e.QUAQUAVAL,36,null,null)],[e.LECHONK]:[new Wt(e.OINKOLOGNE,"","female",18,null,new ls(at.FEMALE)),new Wt(e.OINKOLOGNE,"","",18,null,new ls(at.MALE))],[e.TAROUNTULA]:[new V(e.SPIDOPS,15,null,null)],[e.NYMBLE]:[new V(e.LOKIX,24,null,null)],[e.PAWMI]:[new V(e.PAWMO,18,null,null)],[e.PAWMO]:[new V(e.PAWMOT,32,null,null)],[e.TANDEMAUS]:[new Wt(e.MAUSHOLD,"","three",25,null,new u1),new V(e.MAUSHOLD,25,null,null)],[e.FIDOUGH]:[new V(e.DACHSBUN,26,null,null)],[e.SMOLIV]:[new V(e.DOLLIV,25,null,null)],[e.DOLLIV]:[new V(e.ARBOLIVA,35,null,null)],[e.NACLI]:[new V(e.NACLSTACK,24,null,null)],[e.NACLSTACK]:[new V(e.GARGANACL,38,null,null)],[e.WATTREL]:[new V(e.KILOWATTREL,25,null,null)],[e.MASCHIFF]:[new V(e.MABOSSTIFF,30,null,null)],[e.SHROODLE]:[new V(e.GRAFAIAI,28,null,null)],[e.BRAMBLIN]:[new V(e.BRAMBLEGHAST,30,null,null)],[e.TOEDSCOOL]:[new V(e.TOEDSCRUEL,30,null,null)],[e.RELLOR]:[new V(e.RABSCA,29,null,null)],[e.FLITTLE]:[new V(e.ESPATHRA,35,null,null)],[e.TINKATINK]:[new V(e.TINKATUFF,24,null,null)],[e.TINKATUFF]:[new V(e.TINKATON,38,null,null)],[e.WIGLETT]:[new V(e.WUGTRIO,26,null,null)],[e.FINIZEN]:[new V(e.PALAFIN,38,null,null)],[e.VAROOM]:[new V(e.REVAVROOM,40,null,null)],[e.GLIMMET]:[new V(e.GLIMMORA,35,null,null)],[e.GREAVARD]:[new V(e.HOUNDSTONE,30,null,new pA("night"))],[e.FRIGIBAX]:[new V(e.ARCTIBAX,35,null,null)],[e.ARCTIBAX]:[new V(e.BAXCALIBUR,54,null,null)],[e.PALDEA_WOOPER]:[new V(e.CLODSIRE,20,null,null)],[e.PIKACHU]:[new Wt(e.ALOLA_RAICHU,"","",1,11,null,3),new Wt(e.ALOLA_RAICHU,"partner","",1,11,null,3),new Wt(e.RAICHU,"","",1,7,null,3),new Wt(e.RAICHU,"partner","",1,7,null,3)],[e.NIDORINA]:[new V(e.NIDOQUEEN,1,3,null,3)],[e.NIDORINO]:[new V(e.NIDOKING,1,3,null,3)],[e.CLEFAIRY]:[new V(e.CLEFABLE,1,3,null,3)],[e.VULPIX]:[new V(e.NINETALES,1,5,null,3)],[e.JIGGLYPUFF]:[new V(e.WIGGLYTUFF,1,3,null,3)],[e.GLOOM]:[new V(e.VILEPLUME,1,4,null,3),new V(e.BELLOSSOM,1,2,null,3)],[e.GROWLITHE]:[new V(e.ARCANINE,1,5,null,3)],[e.POLIWHIRL]:[new V(e.POLIWRATH,1,6,null,3),new V(e.POLITOED,1,1,null,4)],[e.WEEPINBELL]:[new V(e.VICTREEBEL,1,4,null,3)],[e.MAGNETON]:[new V(e.MAGNEZONE,1,7,null,3)],[e.SHELLDER]:[new V(e.CLOYSTER,1,6,null,3)],[e.EXEGGCUTE]:[new V(e.ALOLA_EXEGGUTOR,1,2,null,3),new V(e.EXEGGUTOR,1,4,null,3)],[e.TANGELA]:[new V(e.TANGROWTH,34,null,new ps(t.ANCIENT_POWER),3)],[e.LICKITUNG]:[new V(e.LICKILICKY,32,null,new ps(t.ROLLOUT),3)],[e.STARYU]:[new V(e.STARMIE,1,6,null,3)],[e.EEVEE]:[new Wt(e.SYLVEON,"","",1,null,new wD(120,I.FAIRY),3),new Wt(e.SYLVEON,"partner","",1,null,new wD(120,I.FAIRY),3),new Wt(e.ESPEON,"","",1,null,new an(120,"day"),3),new Wt(e.ESPEON,"partner","",1,null,new an(120,"day"),3),new Wt(e.UMBREON,"","",1,null,new an(120,"night"),3),new Wt(e.UMBREON,"partner","",1,null,new an(120,"night"),3),new Wt(e.VAPOREON,"","",1,6,null,3),new Wt(e.VAPOREON,"partner","",1,6,null,3),new Wt(e.JOLTEON,"","",1,7,null,3),new Wt(e.JOLTEON,"partner","",1,7,null,3),new Wt(e.FLAREON,"","",1,5,null,3),new Wt(e.FLAREON,"partner","",1,5,null,3),new Wt(e.LEAFEON,"","",1,4,null,3),new Wt(e.LEAFEON,"partner","",1,4,null,3),new Wt(e.GLACEON,"","",1,8,null,3),new Wt(e.GLACEON,"partner","",1,8,null,3)],[e.TOGETIC]:[new V(e.TOGEKISS,1,11,null,4)],[e.AIPOM]:[new V(e.AMBIPOM,32,null,new ps(t.DOUBLE_HIT),3)],[e.SUNKERN]:[new V(e.SUNFLORA,1,2,null,3)],[e.YANMA]:[new V(e.YANMEGA,33,null,new ps(t.ANCIENT_POWER),3)],[e.MURKROW]:[new V(e.HONCHKROW,1,9,null,4)],[e.MISDREAVUS]:[new V(e.MISMAGIUS,1,9,null,4)],[e.GIRAFARIG]:[new V(e.FARIGIRAF,32,null,new ps(t.TWIN_BEAM),3)],[e.DUNSPARCE]:[new Wt(e.DUDUNSPARCE,"","three-segment",32,null,new U1,3),new V(e.DUDUNSPARCE,32,null,new ps(t.HYPER_DRILL),3)],[e.GLIGAR]:[new V(e.GLISCOR,1,22,new pA("night"),4)],[e.SNEASEL]:[new V(e.WEAVILE,1,21,new pA("night"),4)],[e.URSARING]:[new V(e.URSALUNA,1,52,null,4)],[e.PILOSWINE]:[new V(e.MAMOSWINE,1,null,new ps(t.ANCIENT_POWER),4)],[e.STANTLER]:[new V(e.WYRDEER,25,null,new ps(t.PSYSHIELD_BASH),4)],[e.LOMBRE]:[new V(e.LUDICOLO,1,6,null,3)],[e.NUZLEAF]:[new V(e.SHIFTRY,1,4,null,3)],[e.NOSEPASS]:[new V(e.PROBOPASS,1,7,null,3)],[e.SKITTY]:[new V(e.DELCATTY,1,3,null,3)],[e.ROSELIA]:[new V(e.ROSERADE,1,11,null,4)],[e.BONSLY]:[new V(e.SUDOWOODO,1,null,new ps(t.MIMIC),2)],[e.MIME_JR]:[new V(e.GALAR_MR_MIME,1,null,new bD(t.MIMIC,"night"),2),new V(e.MR_MIME,1,null,new bD(t.MIMIC,"day"),2)],[e.PANSAGE]:[new V(e.SIMISAGE,1,4,null,3)],[e.PANSEAR]:[new V(e.SIMISEAR,1,5,null,3)],[e.PANPOUR]:[new V(e.SIMIPOUR,1,6,null,3)],[e.MUNNA]:[new V(e.MUSHARNA,1,3,null,3)],[e.COTTONEE]:[new V(e.WHIMSICOTT,1,2,null,3)],[e.PETILIL]:[new V(e.HISUI_LILLIGANT,1,11,null,3),new V(e.LILLIGANT,1,2,null,3)],[e.BASCULIN]:[new Wt(e.BASCULEGION,"white-striped","female",40,null,new ls(at.FEMALE),4),new Wt(e.BASCULEGION,"white-striped","male",40,null,new ls(at.MALE),4)],[e.MINCCINO]:[new V(e.CINCCINO,1,11,null,3)],[e.EELEKTRIK]:[new V(e.EELEKTROSS,1,7,null,4)],[e.LAMPENT]:[new V(e.CHANDELURE,1,9,null,4)],[e.FLOETTE]:[new V(e.FLORGES,1,11,null,3)],[e.DOUBLADE]:[new V(e.AEGISLASH,1,9,null,3)],[e.HELIOPTILE]:[new V(e.HELIOLISK,1,2,null,3)],[e.CHARJABUG]:[new V(e.VIKAVOLT,1,7,null,3)],[e.CRABRAWLER]:[new V(e.CRABOMINABLE,1,8,null,3)],[e.ROCKRUFF]:[new Wt(e.LYCANROC,"own-tempo","dusk",25,null,null),new Wt(e.LYCANROC,"","midday",25,null,new pA("day")),new Wt(e.LYCANROC,"","midnight",25,null,new pA("night"))],[e.STEENEE]:[new V(e.TSAREENA,28,null,new ps(t.STOMP),3)],[e.POIPOLE]:[new V(e.NAGANADEL,1,null,new ps(t.DRAGON_PULSE),3)],[e.ALOLA_SANDSHREW]:[new V(e.ALOLA_SANDSLASH,1,8,null,3)],[e.ALOLA_VULPIX]:[new V(e.ALOLA_NINETALES,1,8,null,3)],[e.APPLIN]:[new V(e.DIPPLIN,1,29,null,3),new V(e.FLAPPLE,1,14,null,3),new V(e.APPLETUN,1,13,null,3)],[e.CLOBBOPUS]:[new V(e.GRAPPLOCT,35,null,new ps(t.TAUNT))],[e.SINISTEA]:[new Wt(e.POLTEAGEIST,"phony","phony",1,12,null,3),new Wt(e.POLTEAGEIST,"antique","antique",1,30,null,3)],[e.MILCERY]:[new Wt(e.ALCREMIE,"","vanilla-cream",1,15,new mO([T.TOWN,T.PLAINS,T.GRASS,T.TALL_GRASS,T.METROPOLIS]),3),new Wt(e.ALCREMIE,"","ruby-cream",1,15,new mO([T.BADLANDS,T.VOLCANO,T.GRAVEYARD,T.FACTORY,T.SLUM]),3),new Wt(e.ALCREMIE,"","matcha-cream",1,15,new mO([T.FOREST,T.SWAMP,T.MEADOW,T.JUNGLE]),3),new Wt(e.ALCREMIE,"","mint-cream",1,15,new mO([T.SEA,T.BEACH,T.LAKE,T.SEABED]),3),new Wt(e.ALCREMIE,"","lemon-cream",1,15,new mO([T.DESERT,T.POWER_PLANT,T.DOJO,T.RUINS,T.CONSTRUCTION_SITE]),3),new Wt(e.ALCREMIE,"","salted-cream",1,15,new mO([T.MOUNTAIN,T.CAVE,T.ICE_CAVE,T.FAIRY_CAVE,T.SNOWY_FOREST]),3),new Wt(e.ALCREMIE,"","ruby-swirl",1,15,new mO([T.WASTELAND,T.LABORATORY]),3),new Wt(e.ALCREMIE,"","caramel-swirl",1,15,new mO([T.TEMPLE,T.ISLAND]),3),new Wt(e.ALCREMIE,"","rainbow-swirl",1,15,new mO([T.ABYSS,T.SPACE,T.END]),3)],[e.DURALUDON]:[new Wt(e.ARCHALUDON,"","",1,53,null,4)],[e.KUBFU]:[new Wt(e.URSHIFU,"","single-strike",1,54,null,4),new Wt(e.URSHIFU,"","rapid-strike",1,55,null,4)],[e.GALAR_DARUMAKA]:[new V(e.GALAR_DARMANITAN,1,8,null,3)],[e.HISUI_GROWLITHE]:[new V(e.HISUI_ARCANINE,1,5,null,3)],[e.HISUI_VOLTORB]:[new V(e.HISUI_ELECTRODE,1,4,null,3)],[e.HISUI_QWILFISH]:[new V(e.OVERQWIL,28,null,new ps(t.BARB_BARRAGE),3)],[e.HISUI_SNEASEL]:[new V(e.SNEASLER,1,21,new pA("day"),4)],[e.CHARCADET]:[new V(e.ARMAROUGE,1,33,null,3),new V(e.CERULEDGE,1,34,null,3)],[e.TADBULB]:[new V(e.BELLIBOLT,1,7,null,3)],[e.CAPSAKID]:[new V(e.SCOVILLAIN,1,5,null,3)],[e.CETODDLE]:[new V(e.CETITAN,1,8,null,3)],[e.POLTCHAGEIST]:[new Wt(e.SINISTCHA,"counterfeit","unremarkable",1,16,null,3),new Wt(e.SINISTCHA,"artisan","masterpiece",1,35,null,3)],[e.DIPPLIN]:[new V(e.HYDRAPPLE,1,null,new ps(t.DRAGON_CHEER),4)],[e.KADABRA]:[new V(e.ALAKAZAM,1,1,null,4)],[e.MACHOKE]:[new V(e.MACHAMP,1,1,null,4)],[e.GRAVELER]:[new V(e.GOLEM,1,1,null,4)],[e.HAUNTER]:[new V(e.GENGAR,1,1,null,4)],[e.ONIX]:[new V(e.STEELIX,1,1,new VD(I.STEEL),4)],[e.RHYDON]:[new V(e.RHYPERIOR,1,26,null,4)],[e.SEADRA]:[new V(e.KINGDRA,1,19,null,4)],[e.SCYTHER]:[new V(e.SCIZOR,1,1,new VD(I.STEEL),4),new V(e.KLEAVOR,1,51,null,4)],[e.ELECTABUZZ]:[new V(e.ELECTIVIRE,1,24,null,4)],[e.MAGMAR]:[new V(e.MAGMORTAR,1,25,null,4)],[e.PORYGON]:[new V(e.PORYGON2,1,17,null,3)],[e.PORYGON2]:[new V(e.PORYGON_Z,1,18,null,4)],[e.FEEBAS]:[new V(e.MILOTIC,1,20,null,4)],[e.DUSCLOPS]:[new V(e.DUSKNOIR,1,23,null,4)],[e.CLAMPERL]:[new V(e.HUNTAIL,1,1,new ls(at.MALE),4),new V(e.GOREBYSS,1,1,new ls(at.FEMALE),4)],[e.BOLDORE]:[new V(e.GIGALITH,1,1,null,4)],[e.GURDURR]:[new V(e.CONKELDURR,1,1,null,4)],[e.KARRABLAST]:[new V(e.ESCAVALIER,1,1,new lN(e.SHELMET),4)],[e.SHELMET]:[new V(e.ACCELGOR,1,1,new lN(e.KARRABLAST),4)],[e.SPRITZEE]:[new V(e.AROMATISSE,1,27,null,4)],[e.SWIRLIX]:[new V(e.SLURPUFF,1,28,null,4)],[e.PHANTUMP]:[new V(e.TREVENANT,1,1,null,4)],[e.PUMPKABOO]:[new V(e.GOURGEIST,1,1,null,4)],[e.ALOLA_GRAVELER]:[new V(e.ALOLA_GOLEM,1,1,null,4)],[e.PRIMEAPE]:[new V(e.ANNIHILAPE,35,null,new ps(t.RAGE_FIST),4)],[e.GOLBAT]:[new V(e.CROBAT,1,null,new Ws(120),4)],[e.CHANSEY]:[new V(e.BLISSEY,1,null,new Ws(200),3)],[e.PICHU]:[new Wt(e.PIKACHU,"spiky","partner",1,null,new Ws(90),1),new Wt(e.PIKACHU,"","",1,null,new Ws(90),1)],[e.CLEFFA]:[new V(e.CLEFAIRY,1,null,new Ws(160),1)],[e.IGGLYBUFF]:[new V(e.JIGGLYPUFF,1,null,new Ws(70),1)],[e.TOGEPI]:[new V(e.TOGETIC,1,null,new Ws(70),1)],[e.AZURILL]:[new V(e.MARILL,1,null,new Ws(70),1)],[e.BUDEW]:[new V(e.ROSELIA,1,null,new an(70,"day"),1)],[e.BUNEARY]:[new V(e.LOPUNNY,1,null,new Ws(70),2)],[e.CHINGLING]:[new V(e.CHIMECHO,1,null,new an(90,"night"),2)],[e.HAPPINY]:[new V(e.CHANSEY,1,null,new Ws(160),1)],[e.MUNCHLAX]:[new V(e.SNORLAX,1,null,new Ws(120),3)],[e.RIOLU]:[new V(e.LUCARIO,1,null,new an(120,"day"),3)],[e.WOOBAT]:[new V(e.SWOOBAT,1,null,new Ws(90),2)],[e.SWADLOON]:[new V(e.LEAVANNY,1,null,new Ws(120),3)],[e.TYPE_NULL]:[new V(e.SILVALLY,1,null,new Ws(100),3)],[e.ALOLA_MEOWTH]:[new V(e.ALOLA_PERSIAN,1,null,new Ws(120),3)],[e.SNOM]:[new V(e.FROSMOTH,1,null,new an(90,"night"),2)],[e.GIMMIGHOUL]:[new Wt(e.GHOLDENGO,"chest","",1,null,new xD,4),new Wt(e.GHOLDENGO,"roaming","",1,null,new xD,4)]},yA={};function r$(){const E=[Ue.MEGA,"",Ue.MEGA_X,"",Ue.MEGA_Y].map(s=>s);Object.keys(bt).forEach(s=>{const R=bt[s];for(const a of R)a.evoFormKey&&E.indexOf(a.evoFormKey)>-1||(yA[a.speciesId]=parseInt(s))})}N(r$,"initPokemonPrevolutions");function TL(E){if(E===-1)return u.t("biome:unknownLocation");switch(E){case T.GRASS:return u.t("biome:GRASS");case T.RUINS:return u.t("biome:RUINS");case T.END:return u.t("biome:END");default:return u.t(`biome:${T[E].toUpperCase()}`)}}N(TL,"getBiomeName");const Ln={[T.TOWN]:T.PLAINS,[T.PLAINS]:[T.GRASS,T.METROPOLIS,T.LAKE],[T.GRASS]:T.TALL_GRASS,[T.TALL_GRASS]:[T.FOREST,T.CAVE],[T.SLUM]:[T.CONSTRUCTION_SITE,[T.SWAMP,2]],[T.FOREST]:[T.JUNGLE,T.MEADOW],[T.SEA]:[T.SEABED,T.ICE_CAVE],[T.SWAMP]:[T.GRAVEYARD,T.TALL_GRASS],[T.BEACH]:[T.SEA,[T.ISLAND,2]],[T.LAKE]:[T.BEACH,T.SWAMP,T.CONSTRUCTION_SITE],[T.SEABED]:[T.CAVE,[T.VOLCANO,3]],[T.MOUNTAIN]:[T.VOLCANO,[T.WASTELAND,2],[T.SPACE,3]],[T.BADLANDS]:[T.DESERT,T.MOUNTAIN],[T.CAVE]:[T.BADLANDS,T.LAKE,[T.LABORATORY,2]],[T.DESERT]:[T.RUINS,[T.CONSTRUCTION_SITE,2]],[T.ICE_CAVE]:T.SNOWY_FOREST,[T.MEADOW]:[T.PLAINS,T.FAIRY_CAVE],[T.POWER_PLANT]:T.FACTORY,[T.VOLCANO]:[T.BEACH,[T.ICE_CAVE,3]],[T.GRAVEYARD]:T.ABYSS,[T.DOJO]:[T.PLAINS,[T.JUNGLE,2],[T.TEMPLE,2]],[T.FACTORY]:[T.PLAINS,[T.LABORATORY,2]],[T.RUINS]:[T.MOUNTAIN,[T.FOREST,2]],[T.WASTELAND]:T.BADLANDS,[T.ABYSS]:[T.CAVE,[T.SPACE,2],[T.WASTELAND,2]],[T.SPACE]:T.RUINS,[T.CONSTRUCTION_SITE]:[T.POWER_PLANT,[T.DOJO,2]],[T.JUNGLE]:[T.TEMPLE],[T.FAIRY_CAVE]:[T.ICE_CAVE,[T.SPACE,2]],[T.TEMPLE]:[T.DESERT,[T.SWAMP,2],[T.RUINS,2]],[T.METROPOLIS]:T.SLUM,[T.SNOWY_FOREST]:[T.FOREST,[T.MOUNTAIN,2],[T.LAKE,2]],[T.ISLAND]:T.SEA,[T.LABORATORY]:T.CONSTRUCTION_SITE},wO={};var qA=(E=>(E[E.COMMON=0]="COMMON",E[E.UNCOMMON=1]="UNCOMMON",E[E.RARE=2]="RARE",E[E.SUPER_RARE=3]="SUPER_RARE",E[E.ULTRA_RARE=4]="ULTRA_RARE",E[E.BOSS=5]="BOSS",E[E.BOSS_RARE=6]="BOSS_RARE",E[E.BOSS_SUPER_RARE=7]="BOSS_SUPER_RARE",E[E.BOSS_ULTRA_RARE=8]="BOSS_ULTRA_RARE",E))(qA||{});const j8=[],KR={[T.TOWN]:{0:{[S.DAWN]:[{1:[e.CATERPIE],7:[e.METAPOD]},e.SENTRET,e.LEDYBA,e.HOPPIP,e.SUNKERN,e.STARLY,e.PIDOVE,e.COTTONEE,{1:[e.SCATTERBUG],9:[e.SPEWPA]},e.YUNGOOS,e.SKWOVET],[S.DAY]:[{1:[e.CATERPIE],7:[e.METAPOD]},e.SENTRET,e.HOPPIP,e.SUNKERN,e.SILCOON,e.STARLY,e.PIDOVE,e.COTTONEE,{1:[e.SCATTERBUG],9:[e.SPEWPA]},e.YUNGOOS,e.SKWOVET],[S.DUSK]:[{1:[e.WEEDLE],7:[e.KAKUNA]},e.POOCHYENA,e.PATRAT,e.PURRLOIN,e.BLIPBUG],[S.NIGHT]:[{1:[e.WEEDLE],7:[e.KAKUNA]},e.HOOTHOOT,e.SPINARAK,e.POOCHYENA,e.CASCOON,e.PATRAT,e.PURRLOIN,e.BLIPBUG],[S.ALL]:[e.PIDGEY,e.RATTATA,e.SPEAROW,e.ZIGZAGOON,e.WURMPLE,e.TAILLOW,e.BIDOOF,e.LILLIPUP,e.FLETCHLING,e.WOOLOO,e.LECHONK]},1:{[S.DAWN]:[e.BELLSPROUT,e.POOCHYENA,e.LOTAD,e.SKITTY,e.COMBEE,e.CHERUBI,e.PATRAT,e.MINCCINO,e.PAWMI],[S.DAY]:[e.NIDORAN_F,e.NIDORAN_M,e.BELLSPROUT,e.POOCHYENA,e.LOTAD,e.SKITTY,e.COMBEE,e.CHERUBI,e.PATRAT,e.MINCCINO,e.PAWMI],[S.DUSK]:[e.EKANS,e.ODDISH,e.MEOWTH,e.SPINARAK,e.SEEDOT,e.SHROOMISH,e.KRICKETOT,e.VENIPEDE],[S.NIGHT]:[e.EKANS,e.ODDISH,e.PARAS,e.VENONAT,e.MEOWTH,e.SEEDOT,e.SHROOMISH,e.KRICKETOT,e.VENIPEDE],[S.ALL]:[e.NINCADA,e.WHISMUR,e.FIDOUGH]},2:{[S.DAWN]:[e.TANDEMAUS],[S.DAY]:[e.TANDEMAUS],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ABRA,e.SURSKIT,e.ROOKIDEE]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.EEVEE,e.RALTS]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.DITTO]},5:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]}},[T.PLAINS]:{0:{[S.DAWN]:[{1:[e.SENTRET],15:[e.FURRET]},{1:[e.YUNGOOS],30:[e.GUMSHOOS]},{1:[e.SKWOVET],24:[e.GREEDENT]}],[S.DAY]:[{1:[e.SENTRET],15:[e.FURRET]},{1:[e.YUNGOOS],30:[e.GUMSHOOS]},{1:[e.SKWOVET],24:[e.GREEDENT]}],[S.DUSK]:[{1:[e.MEOWTH],28:[e.PERSIAN]},{1:[e.POOCHYENA],18:[e.MIGHTYENA]}],[S.NIGHT]:[{1:[e.ZUBAT],22:[e.GOLBAT]},{1:[e.MEOWTH],28:[e.PERSIAN]},{1:[e.POOCHYENA],18:[e.MIGHTYENA]}],[S.ALL]:[{1:[e.ZIGZAGOON],20:[e.LINOONE]},{1:[e.BIDOOF],15:[e.BIBAREL]},{1:[e.LECHONK],18:[e.OINKOLOGNE]}]},1:{[S.DAWN]:[{1:[e.DODUO],31:[e.DODRIO]},{1:[e.POOCHYENA],18:[e.MIGHTYENA]},{1:[e.STARLY],14:[e.STARAVIA],34:[e.STARAPTOR]},{1:[e.PIDOVE],21:[e.TRANQUILL],32:[e.UNFEZANT]},{1:[e.PAWMI],18:[e.PAWMO],32:[e.PAWMOT]}],[S.DAY]:[{1:[e.DODUO],31:[e.DODRIO]},{1:[e.POOCHYENA],18:[e.MIGHTYENA]},{1:[e.STARLY],14:[e.STARAVIA],34:[e.STARAPTOR]},{1:[e.PIDOVE],21:[e.TRANQUILL],32:[e.UNFEZANT]},{1:[e.ROCKRUFF],25:[e.LYCANROC]},{1:[e.PAWMI],18:[e.PAWMO],32:[e.PAWMOT]}],[S.DUSK]:[{1:[e.MANKEY],28:[e.PRIMEAPE],75:[e.ANNIHILAPE]}],[S.NIGHT]:[{1:[e.MANKEY],28:[e.PRIMEAPE],75:[e.ANNIHILAPE]}],[S.ALL]:[{1:[e.PIDGEY],18:[e.PIDGEOTTO],36:[e.PIDGEOT]},{1:[e.SPEAROW],20:[e.FEAROW]},e.PIKACHU,{1:[e.FLETCHLING],17:[e.FLETCHINDER],35:[e.TALONFLAME]}]},2:{[S.DAWN]:[e.PALDEA_TAUROS],[S.DAY]:[e.PALDEA_TAUROS],[S.DUSK]:[{1:[e.SHINX],15:[e.LUXIO],30:[e.LUXRAY]}],[S.NIGHT]:[{1:[e.SHINX],15:[e.LUXIO],30:[e.LUXRAY]}],[S.ALL]:[{1:[e.ABRA],16:[e.KADABRA]},{1:[e.BUNEARY],20:[e.LOPUNNY]},{1:[e.ROOKIDEE],18:[e.CORVISQUIRE],38:[e.CORVIKNIGHT]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.FARFETCHD,e.LICKITUNG,e.CHANSEY,e.EEVEE,e.SNORLAX,{1:[e.DUNSPARCE],62:[e.DUDUNSPARCE]}]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.DITTO,e.LATIAS,e.LATIOS]},5:{[S.DAWN]:[e.DODRIO,e.FURRET,e.GUMSHOOS,e.GREEDENT],[S.DAY]:[e.DODRIO,e.FURRET,e.GUMSHOOS,e.GREEDENT],[S.DUSK]:[e.PERSIAN,e.MIGHTYENA],[S.NIGHT]:[e.PERSIAN,e.MIGHTYENA],[S.ALL]:[e.LINOONE,e.BIBAREL,e.LOPUNNY,e.OINKOLOGNE]},6:{[S.DAWN]:[e.PAWMOT,e.PALDEA_TAUROS],[S.DAY]:[e.LYCANROC,e.PAWMOT,e.PALDEA_TAUROS],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.FARFETCHD,e.SNORLAX,e.LICKILICKY,e.DUDUNSPARCE]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.LATIAS,e.LATIOS]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]}},[T.GRASS]:{0:{[S.DAWN]:[{1:[e.HOPPIP],18:[e.SKIPLOOM]},e.SUNKERN,e.COTTONEE,e.PETILIL],[S.DAY]:[{1:[e.HOPPIP],18:[e.SKIPLOOM]},e.SUNKERN,e.COTTONEE,e.PETILIL],[S.DUSK]:[{1:[e.SEEDOT],14:[e.NUZLEAF]},{1:[e.SHROOMISH],23:[e.BRELOOM]}],[S.NIGHT]:[{1:[e.SEEDOT],14:[e.NUZLEAF]},{1:[e.SHROOMISH],23:[e.BRELOOM]}],[S.ALL]:[]},1:{[S.DAWN]:[{1:[e.COMBEE],21:[e.VESPIQUEN]},{1:[e.CHERUBI],25:[e.CHERRIM]}],[S.DAY]:[{1:[e.COMBEE],21:[e.VESPIQUEN]},{1:[e.CHERUBI],25:[e.CHERRIM]}],[S.DUSK]:[{1:[e.FOONGUS],39:[e.AMOONGUSS]}],[S.NIGHT]:[{1:[e.FOONGUS],39:[e.AMOONGUSS]}],[S.ALL]:[]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.BULBASAUR],16:[e.IVYSAUR],32:[e.VENUSAUR]},e.GROWLITHE,{1:[e.TURTWIG],18:[e.GROTLE],32:[e.TORTERRA]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.SUDOWOODO]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.VIRIZION]},5:{[S.DAWN]:[e.JUMPLUFF,e.SUNFLORA,e.WHIMSICOTT],[S.DAY]:[e.JUMPLUFF,e.SUNFLORA,e.WHIMSICOTT],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.VENUSAUR,e.SUDOWOODO,e.TORTERRA]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.VIRIZION]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]}},[T.TALL_GRASS]:{0:{[S.DAWN]:[{1:[e.BOUNSWEET],18:[e.STEENEE],58:[e.TSAREENA]}],[S.DAY]:[{1:[e.NIDORAN_F],16:[e.NIDORINA]},{1:[e.NIDORAN_M],16:[e.NIDORINO]},{1:[e.BOUNSWEET],18:[e.STEENEE],58:[e.TSAREENA]}],[S.DUSK]:[{1:[e.ODDISH],21:[e.GLOOM]},{1:[e.KRICKETOT],10:[e.KRICKETUNE]}],[S.NIGHT]:[{1:[e.ODDISH],21:[e.GLOOM]},{1:[e.KRICKETOT],10:[e.KRICKETUNE]}],[S.ALL]:[{1:[e.NINCADA],20:[e.NINJASK]},{1:[e.FOMANTIS],44:[e.LURANTIS]},{1:[e.NYMBLE],24:[e.LOKIX]}]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[{1:[e.PARAS],24:[e.PARASECT]},{1:[e.VENONAT],31:[e.VENOMOTH]},{1:[e.SPINARAK],22:[e.ARIADOS]}],[S.ALL]:[e.VULPIX]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.PINSIR,{1:[e.CHIKORITA],16:[e.BAYLEEF],32:[e.MEGANIUM]},{1:[e.GIRAFARIG],62:[e.FARIGIRAF]},e.ZANGOOSE,e.KECLEON,e.TROPIUS]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.SCYTHER,e.SHEDINJA,e.ROTOM]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},5:{[S.DAWN]:[e.TSAREENA],[S.DAY]:[e.NIDOQUEEN,e.NIDOKING,e.TSAREENA],[S.DUSK]:[e.VILEPLUME,e.KRICKETUNE],[S.NIGHT]:[e.VILEPLUME,e.KRICKETUNE],[S.ALL]:[e.NINJASK,e.ZANGOOSE,e.KECLEON,e.LURANTIS,e.LOKIX]},6:{[S.DAWN]:[e.BELLOSSOM],[S.DAY]:[e.BELLOSSOM],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.PINSIR,e.MEGANIUM,e.FARIGIRAF]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ROTOM]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]}},[T.METROPOLIS]:{0:{[S.DAWN]:[{1:[e.YAMPER],25:[e.BOLTUND]}],[S.DAY]:[{1:[e.YAMPER],25:[e.BOLTUND]}],[S.DUSK]:[{1:[e.PATRAT],20:[e.WATCHOG]}],[S.NIGHT]:[{1:[e.HOUNDOUR],24:[e.HOUNDOOM]},{1:[e.PATRAT],20:[e.WATCHOG]}],[S.ALL]:[{1:[e.RATTATA],20:[e.RATICATE]},{1:[e.ZIGZAGOON],20:[e.LINOONE]},{1:[e.LILLIPUP],16:[e.HERDIER],32:[e.STOUTLAND]}]},1:{[S.DAWN]:[{1:[e.PATRAT],20:[e.WATCHOG]},e.INDEEDEE],[S.DAY]:[{1:[e.PATRAT],20:[e.WATCHOG]},e.INDEEDEE],[S.DUSK]:[{1:[e.ESPURR],25:[e.MEOWSTIC]}],[S.NIGHT]:[{1:[e.ESPURR],25:[e.MEOWSTIC]}],[S.ALL]:[e.PIKACHU,{1:[e.GLAMEOW],38:[e.PURUGLY]},e.FURFROU,{1:[e.FIDOUGH],26:[e.DACHSBUN]},e.SQUAWKABILLY]},2:{[S.DAWN]:[{1:[e.TANDEMAUS],25:[e.MAUSHOLD]}],[S.DAY]:[{1:[e.TANDEMAUS],25:[e.MAUSHOLD]}],[S.DUSK]:[e.MORPEKO],[S.NIGHT]:[e.MORPEKO],[S.ALL]:[{1:[e.VAROOM],40:[e.REVAVROOM]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.DITTO,e.EEVEE,e.SMEARGLE]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.CASTFORM]},5:{[S.DAWN]:[e.BOLTUND],[S.DAY]:[e.BOLTUND],[S.DUSK]:[e.MEOWSTIC],[S.NIGHT]:[e.MEOWSTIC],[S.ALL]:[e.STOUTLAND,e.FURFROU,e.DACHSBUN]},6:{[S.DAWN]:[e.MAUSHOLD],[S.DAY]:[e.MAUSHOLD],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.CASTFORM,e.REVAVROOM]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]}},[T.FOREST]:{0:{[S.DAWN]:[e.BUTTERFREE,{1:[e.BELLSPROUT],21:[e.WEEPINBELL]},{1:[e.COMBEE],21:[e.VESPIQUEN]},e.PETILIL,{1:[e.DEERLING],34:[e.SAWSBUCK]},e.VIVILLON],[S.DAY]:[e.BUTTERFREE,{1:[e.BELLSPROUT],21:[e.WEEPINBELL]},e.BEAUTIFLY,{1:[e.COMBEE],21:[e.VESPIQUEN]},e.PETILIL,{1:[e.DEERLING],34:[e.SAWSBUCK]},e.VIVILLON],[S.DUSK]:[e.BEEDRILL,{1:[e.PINECO],31:[e.FORRETRESS]},{1:[e.SEEDOT],14:[e.NUZLEAF]},{1:[e.SHROOMISH],23:[e.BRELOOM]},{1:[e.VENIPEDE],22:[e.WHIRLIPEDE],30:[e.SCOLIPEDE]}],[S.NIGHT]:[e.BEEDRILL,{1:[e.VENONAT],31:[e.VENOMOTH]},{1:[e.SPINARAK],22:[e.ARIADOS]},{1:[e.PINECO],31:[e.FORRETRESS]},e.DUSTOX,{1:[e.SEEDOT],14:[e.NUZLEAF]},{1:[e.SHROOMISH],23:[e.BRELOOM]},{1:[e.VENIPEDE],22:[e.WHIRLIPEDE],30:[e.SCOLIPEDE]}],[S.ALL]:[{1:[e.TAROUNTULA],15:[e.SPIDOPS]},{1:[e.NYMBLE],24:[e.LOKIX]},{1:[e.SHROODLE],28:[e.GRAFAIAI]}]},1:{[S.DAWN]:[e.ROSELIA,e.MOTHIM,{1:[e.SEWADDLE],20:[e.SWADLOON],30:[e.LEAVANNY]}],[S.DAY]:[e.ROSELIA,e.MOTHIM,{1:[e.SEWADDLE],20:[e.SWADLOON],30:[e.LEAVANNY]}],[S.DUSK]:[{1:[e.SPINARAK],22:[e.ARIADOS]},{1:[e.DOTTLER],30:[e.ORBEETLE]}],[S.NIGHT]:[{1:[e.HOOTHOOT],20:[e.NOCTOWL]},{1:[e.ROCKRUFF],25:[e.LYCANROC]},{1:[e.DOTTLER],30:[e.ORBEETLE]}],[S.ALL]:[{1:[e.EKANS],22:[e.ARBOK]},{1:[e.TEDDIURSA],30:[e.URSARING]},{1:[e.BURMY],20:[e.WORMADAM]},{1:[e.PANSAGE],30:[e.SIMISAGE]}]},2:{[S.DAWN]:[e.EXEGGCUTE,e.STANTLER],[S.DAY]:[e.EXEGGCUTE,e.STANTLER],[S.DUSK]:[e.SCYTHER],[S.NIGHT]:[e.SCYTHER],[S.ALL]:[e.HERACROSS,{1:[e.TREECKO],16:[e.GROVYLE],36:[e.SCEPTILE]},e.TROPIUS,e.KARRABLAST,e.SHELMET,{1:[e.CHESPIN],16:[e.QUILLADIN],36:[e.CHESNAUGHT]},{1:[e.ROWLET],17:[e.DARTRIX],34:[e.DECIDUEYE]},e.SQUAWKABILLY,{1:[e.TOEDSCOOL],30:[e.TOEDSCRUEL]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[e.BLOODMOON_URSALUNA],[S.ALL]:[e.DURANT]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.KARTANA,e.WO_CHIEN]},5:{[S.DAWN]:[e.VICTREEBEL,e.MOTHIM,e.VESPIQUEN,e.LILLIGANT,e.SAWSBUCK],[S.DAY]:[e.VICTREEBEL,e.BEAUTIFLY,e.MOTHIM,e.VESPIQUEN,e.LILLIGANT,e.SAWSBUCK],[S.DUSK]:[e.ARIADOS,e.FORRETRESS,e.SHIFTRY,e.BRELOOM,e.SCOLIPEDE,e.ORBEETLE],[S.NIGHT]:[e.VENOMOTH,e.NOCTOWL,e.ARIADOS,e.FORRETRESS,e.DUSTOX,e.SHIFTRY,e.BRELOOM,e.SCOLIPEDE,e.ORBEETLE],[S.ALL]:[e.WORMADAM,e.SIMISAGE,e.SPIDOPS,e.LOKIX,e.GRAFAIAI]},6:{[S.DAWN]:[e.STANTLER],[S.DAY]:[e.STANTLER],[S.DUSK]:[],[S.NIGHT]:[e.LYCANROC,e.BLOODMOON_URSALUNA],[S.ALL]:[e.HERACROSS,e.SCEPTILE,e.ESCAVALIER,e.ACCELGOR,e.DURANT,e.CHESNAUGHT,e.DECIDUEYE,e.TOEDSCRUEL]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.KARTANA,e.WO_CHIEN]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.CALYREX]}},[T.SEA]:{0:{[S.DAWN]:[{1:[e.SLOWPOKE],37:[e.SLOWBRO]},{1:[e.WINGULL],25:[e.PELIPPER]},e.CRAMORANT,{1:[e.FINIZEN],38:[e.PALAFIN]}],[S.DAY]:[{1:[e.SLOWPOKE],37:[e.SLOWBRO]},{1:[e.WINGULL],25:[e.PELIPPER]},e.CRAMORANT,{1:[e.FINIZEN],38:[e.PALAFIN]}],[S.DUSK]:[{1:[e.INKAY],30:[e.MALAMAR]}],[S.NIGHT]:[{1:[e.FINNEON],31:[e.LUMINEON]},{1:[e.INKAY],30:[e.MALAMAR]}],[S.ALL]:[{1:[e.TENTACOOL],30:[e.TENTACRUEL]},{1:[e.MAGIKARP],20:[e.GYARADOS]},{1:[e.BUIZEL],26:[e.FLOATZEL]}]},1:{[S.DAWN]:[{1:[e.STARYU],30:[e.STARMIE]}],[S.DAY]:[{1:[e.STARYU],30:[e.STARMIE]}],[S.DUSK]:[{1:[e.SLOWPOKE],37:[e.SLOWBRO]},e.SHELLDER,{1:[e.CARVANHA],30:[e.SHARPEDO]}],[S.NIGHT]:[{1:[e.SLOWPOKE],37:[e.SLOWBRO]},e.SHELLDER,{1:[e.CHINCHOU],27:[e.LANTURN]},{1:[e.CARVANHA],30:[e.SHARPEDO]}],[S.ALL]:[{1:[e.POLIWAG],25:[e.POLIWHIRL]},{1:[e.HORSEA],32:[e.SEADRA]},{1:[e.GOLDEEN],33:[e.SEAKING]},{1:[e.WAILMER],40:[e.WAILORD]},{1:[e.PANPOUR],30:[e.SIMIPOUR]},{1:[e.WATTREL],25:[e.KILOWATTREL]}]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.LAPRAS,{1:[e.PIPLUP],16:[e.PRINPLUP],36:[e.EMPOLEON]},{1:[e.POPPLIO],17:[e.BRIONNE],34:[e.PRIMARINA]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.KINGDRA,e.ROTOM,{1:[e.TIRTOUGA],37:[e.CARRACOSTA]}]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},5:{[S.DAWN]:[e.PELIPPER,e.CRAMORANT,e.PALAFIN],[S.DAY]:[e.PELIPPER,e.CRAMORANT,e.PALAFIN],[S.DUSK]:[e.SHARPEDO,e.MALAMAR],[S.NIGHT]:[e.SHARPEDO,e.LUMINEON,e.MALAMAR],[S.ALL]:[e.TENTACRUEL,e.FLOATZEL,e.SIMIPOUR,e.KILOWATTREL]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.KINGDRA,e.EMPOLEON,e.PRIMARINA]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ROTOM]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.LUGIA]}},[T.SWAMP]:{0:{[S.DAWN]:[{1:[e.WOOPER],20:[e.QUAGSIRE]},{1:[e.LOTAD],14:[e.LOMBRE]}],[S.DAY]:[{1:[e.WOOPER],20:[e.QUAGSIRE]},{1:[e.LOTAD],14:[e.LOMBRE]}],[S.DUSK]:[{1:[e.EKANS],22:[e.ARBOK]},{1:[e.PALDEA_WOOPER],20:[e.CLODSIRE]}],[S.NIGHT]:[{1:[e.EKANS],22:[e.ARBOK]},{1:[e.PALDEA_WOOPER],20:[e.CLODSIRE]}],[S.ALL]:[{1:[e.POLIWAG],25:[e.POLIWHIRL]},{1:[e.GULPIN],26:[e.SWALOT]},{1:[e.SHELLOS],30:[e.GASTRODON]},{1:[e.TYMPOLE],25:[e.PALPITOAD],36:[e.SEISMITOAD]}]},1:{[S.DAWN]:[{1:[e.EKANS],22:[e.ARBOK]}],[S.DAY]:[{1:[e.EKANS],22:[e.ARBOK]}],[S.DUSK]:[{1:[e.CROAGUNK],37:[e.TOXICROAK]}],[S.NIGHT]:[{1:[e.CROAGUNK],37:[e.TOXICROAK]}],[S.ALL]:[{1:[e.PSYDUCK],33:[e.GOLDUCK]},{1:[e.BARBOACH],30:[e.WHISCASH]},{1:[e.SKORUPI],40:[e.DRAPION]},e.STUNFISK,{1:[e.MAREANIE],38:[e.TOXAPEX]}]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.TOTODILE],18:[e.CROCONAW],30:[e.FERALIGATR]},{1:[e.MUDKIP],16:[e.MARSHTOMP],36:[e.SWAMPERT]}]},3:{[S.DAWN]:[{1:[e.GALAR_SLOWPOKE],40:[e.GALAR_SLOWBRO]},{1:[e.HISUI_SLIGGOO],80:[e.HISUI_GOODRA]}],[S.DAY]:[{1:[e.GALAR_SLOWPOKE],40:[e.GALAR_SLOWBRO]},{1:[e.HISUI_SLIGGOO],80:[e.HISUI_GOODRA]}],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.POLITOED,e.GALAR_STUNFISK]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.AZELF,e.POIPOLE]},5:{[S.DAWN]:[e.QUAGSIRE,e.LUDICOLO],[S.DAY]:[e.QUAGSIRE,e.LUDICOLO],[S.DUSK]:[e.ARBOK,e.CLODSIRE],[S.NIGHT]:[e.ARBOK,e.CLODSIRE],[S.ALL]:[e.POLIWRATH,e.SWALOT,e.WHISCASH,e.GASTRODON,e.SEISMITOAD,e.STUNFISK,e.TOXAPEX]},6:{[S.DAWN]:[e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.HISUI_GOODRA],[S.DAY]:[e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.HISUI_GOODRA],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.FERALIGATR,e.POLITOED,e.SWAMPERT,e.GALAR_STUNFISK]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.AZELF,e.NAGANADEL]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]}},[T.BEACH]:{0:{[S.DAWN]:[{1:[e.STARYU],30:[e.STARMIE]}],[S.DAY]:[{1:[e.STARYU],30:[e.STARMIE]}],[S.DUSK]:[e.SHELLDER],[S.NIGHT]:[e.SHELLDER],[S.ALL]:[{1:[e.KRABBY],28:[e.KINGLER]},{1:[e.CORPHISH],30:[e.CRAWDAUNT]},{1:[e.DWEBBLE],34:[e.CRUSTLE]},{1:[e.BINACLE],39:[e.BARBARACLE]},{1:[e.MAREANIE],38:[e.TOXAPEX]},{1:[e.WIGLETT],26:[e.WUGTRIO]}]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.BURMY],20:[e.WORMADAM]},{1:[e.CLAUNCHER],37:[e.CLAWITZER]},{1:[e.SANDYGAST],42:[e.PALOSSAND]}]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.QUAXLY],16:[e.QUAXWELL],36:[e.QUAQUAVAL]},e.TATSUGIRI]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.TIRTOUGA],37:[e.CARRACOSTA]}]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.CRESSELIA,e.KELDEO,e.TAPU_FINI]},5:{[S.DAWN]:[e.STARMIE],[S.DAY]:[e.STARMIE],[S.DUSK]:[e.CLOYSTER],[S.NIGHT]:[e.CLOYSTER],[S.ALL]:[e.KINGLER,e.CRAWDAUNT,e.WORMADAM,e.CRUSTLE,e.BARBARACLE,e.CLAWITZER,e.TOXAPEX,e.PALOSSAND]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.CARRACOSTA,e.QUAQUAVAL]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.CRESSELIA,e.KELDEO,e.TAPU_FINI]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]}},[T.LAKE]:{0:{[S.DAWN]:[{1:[e.LOTAD],14:[e.LOMBRE]},{1:[e.DUCKLETT],35:[e.SWANNA]}],[S.DAY]:[{1:[e.LOTAD],14:[e.LOMBRE]},{1:[e.DUCKLETT],35:[e.SWANNA]}],[S.DUSK]:[{1:[e.MARILL],18:[e.AZUMARILL]}],[S.NIGHT]:[{1:[e.MARILL],18:[e.AZUMARILL]}],[S.ALL]:[{1:[e.PSYDUCK],33:[e.GOLDUCK]},{1:[e.GOLDEEN],33:[e.SEAKING]},{1:[e.MAGIKARP],20:[e.GYARADOS]},{1:[e.CHEWTLE],22:[e.DREDNAW]}]},1:{[S.DAWN]:[{1:[e.DEWPIDER],22:[e.ARAQUANID]}],[S.DAY]:[{1:[e.DEWPIDER],22:[e.ARAQUANID]}],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.SLOWPOKE],37:[e.SLOWBRO]},{1:[e.WOOPER],20:[e.QUAGSIRE]},{1:[e.SURSKIT],22:[e.MASQUERAIN]},e.WISHIWASHI,e.FLAMIGO]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.SQUIRTLE],16:[e.WARTORTLE],36:[e.BLASTOISE]},{1:[e.OSHAWOTT],17:[e.DEWOTT],36:[e.SAMUROTT]},{1:[e.FROAKIE],16:[e.FROGADIER],36:[e.GRENINJA]},{1:[e.SOBBLE],16:[e.DRIZZILE],35:[e.INTELEON]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.VAPOREON,e.SLOWKING]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.SUICUNE,e.MESPRIT]},5:{[S.DAWN]:[e.SWANNA,e.ARAQUANID],[S.DAY]:[e.SWANNA,e.ARAQUANID],[S.DUSK]:[e.AZUMARILL],[S.NIGHT]:[e.AZUMARILL],[S.ALL]:[e.GOLDUCK,e.SLOWBRO,e.SEAKING,e.GYARADOS,e.MASQUERAIN,e.WISHIWASHI,e.DREDNAW]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.BLASTOISE,e.VAPOREON,e.SLOWKING,e.SAMUROTT,e.GRENINJA,e.INTELEON]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.SUICUNE,e.MESPRIT]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]}},[T.SEABED]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.CHINCHOU],27:[e.LANTURN]},e.REMORAID,e.CLAMPERL,e.BASCULIN,{1:[e.FRILLISH],40:[e.JELLICENT]},{1:[e.ARROKUDA],26:[e.BARRASKEWDA]},e.VELUZA]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.TENTACOOL],30:[e.TENTACRUEL]},e.SHELLDER,{1:[e.WAILMER],40:[e.WAILORD]},e.LUVDISC,{1:[e.SHELLOS],30:[e.GASTRODON]},{1:[e.SKRELP],48:[e.DRAGALGE]},e.PINCURCHIN,e.DONDOZO]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.QWILFISH,e.CORSOLA,e.OCTILLERY,{1:[e.MANTYKE],52:[e.MANTINE]},e.ALOMOMOLA,{1:[e.TYNAMO],39:[e.EELEKTRIK]},e.DHELMISE]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.OMANYTE],40:[e.OMASTAR]},{1:[e.KABUTO],40:[e.KABUTOPS]},e.RELICANTH,e.PYUKUMUKU,{1:[e.GALAR_CORSOLA],38:[e.CURSOLA]},e.ARCTOVISH,e.HISUI_QWILFISH]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.FEEBAS,e.NIHILEGO]},5:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.LANTURN,e.QWILFISH,e.CORSOLA,e.OCTILLERY,e.MANTINE,e.WAILORD,e.HUNTAIL,e.GOREBYSS,e.LUVDISC,e.JELLICENT,e.ALOMOMOLA,e.DRAGALGE,e.BARRASKEWDA,e.DONDOZO]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.OMASTAR,e.KABUTOPS,e.RELICANTH,e.EELEKTROSS,e.PYUKUMUKU,e.DHELMISE,e.CURSOLA,e.ARCTOVISH,e.BASCULEGION,e.OVERQWIL]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.MILOTIC,e.NIHILEGO]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.KYOGRE]}},[T.MOUNTAIN]:{0:{[S.DAWN]:[{1:[e.TAILLOW],22:[e.SWELLOW]},{1:[e.SWABLU],35:[e.ALTARIA]},{1:[e.STARLY],14:[e.STARAVIA],34:[e.STARAPTOR]},{1:[e.PIDOVE],21:[e.TRANQUILL],32:[e.UNFEZANT]},{1:[e.FLETCHLING],17:[e.FLETCHINDER],35:[e.TALONFLAME]}],[S.DAY]:[{1:[e.TAILLOW],22:[e.SWELLOW]},{1:[e.SWABLU],35:[e.ALTARIA]},{1:[e.STARLY],14:[e.STARAVIA],34:[e.STARAPTOR]},{1:[e.PIDOVE],21:[e.TRANQUILL],32:[e.UNFEZANT]},{1:[e.FLETCHLING],17:[e.FLETCHINDER],35:[e.TALONFLAME]}],[S.DUSK]:[{1:[e.RHYHORN],42:[e.RHYDON]},{1:[e.ARON],32:[e.LAIRON],42:[e.AGGRON]},{1:[e.ROGGENROLA],25:[e.BOLDORE]}],[S.NIGHT]:[{1:[e.RHYHORN],42:[e.RHYDON]},{1:[e.ARON],32:[e.LAIRON],42:[e.AGGRON]},{1:[e.ROGGENROLA],25:[e.BOLDORE]}],[S.ALL]:[{1:[e.PIDGEY],18:[e.PIDGEOTTO],36:[e.PIDGEOT]},{1:[e.SPEAROW],20:[e.FEAROW]},{1:[e.SKIDDO],32:[e.GOGOAT]}]},1:{[S.DAWN]:[{1:[e.RHYHORN],42:[e.RHYDON]},{1:[e.ARON],32:[e.LAIRON],42:[e.AGGRON]},{1:[e.ROGGENROLA],25:[e.BOLDORE]},{1:[e.RUFFLET],54:[e.BRAVIARY]},{1:[e.ROOKIDEE],18:[e.CORVISQUIRE],38:[e.CORVIKNIGHT]},{1:[e.FLITTLE],35:[e.ESPATHRA]},e.BOMBIRDIER],[S.DAY]:[{1:[e.RHYHORN],42:[e.RHYDON]},{1:[e.ARON],32:[e.LAIRON],42:[e.AGGRON]},{1:[e.ROGGENROLA],25:[e.BOLDORE]},{1:[e.RUFFLET],54:[e.BRAVIARY]},{1:[e.ROOKIDEE],18:[e.CORVISQUIRE],38:[e.CORVIKNIGHT]},{1:[e.FLITTLE],35:[e.ESPATHRA]},e.BOMBIRDIER],[S.DUSK]:[{1:[e.VULLABY],54:[e.MANDIBUZZ]}],[S.NIGHT]:[{1:[e.VULLABY],54:[e.MANDIBUZZ]}],[S.ALL]:[{1:[e.MACHOP],28:[e.MACHOKE]},{1:[e.GEODUDE],25:[e.GRAVELER]},{1:[e.NATU],25:[e.XATU]},{1:[e.SLUGMA],38:[e.MAGCARGO]},{1:[e.NACLI],24:[e.NACLSTACK],38:[e.GARGANACL]}]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[e.MURKROW],[S.ALL]:[e.SKARMORY,{1:[e.TORCHIC],16:[e.COMBUSKEN],36:[e.BLAZIKEN]},{1:[e.SPOINK],32:[e.GRUMPIG]},e.HAWLUCHA,e.KLAWF]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.LARVITAR],30:[e.PUPITAR]},{1:[e.CRANIDOS],30:[e.RAMPARDOS]},{1:[e.SHIELDON],30:[e.BASTIODON]},{1:[e.GIBLE],24:[e.GABITE],48:[e.GARCHOMP]},e.ROTOM,e.ARCHEOPS,{1:[e.AXEW],38:[e.FRAXURE]}]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.TORNADUS,e.TING_LU,e.OGERPON]},5:{[S.DAWN]:[e.SWELLOW,e.ALTARIA,e.STARAPTOR,e.UNFEZANT,e.BRAVIARY,e.TALONFLAME,e.CORVIKNIGHT,e.ESPATHRA],[S.DAY]:[e.SWELLOW,e.ALTARIA,e.STARAPTOR,e.UNFEZANT,e.BRAVIARY,e.TALONFLAME,e.CORVIKNIGHT,e.ESPATHRA],[S.DUSK]:[e.MANDIBUZZ],[S.NIGHT]:[e.MANDIBUZZ],[S.ALL]:[e.PIDGEOT,e.FEAROW,e.SKARMORY,e.AGGRON,e.GOGOAT,e.GARGANACL]},6:{[S.DAWN]:[e.HISUI_BRAVIARY],[S.DAY]:[e.HISUI_BRAVIARY],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.BLAZIKEN,e.RAMPARDOS,e.BASTIODON,e.HAWLUCHA]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ROTOM,e.TORNADUS,e.TING_LU,e.OGERPON]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.HO_OH]}},[T.BADLANDS]:{0:{[S.DAWN]:[{1:[e.PHANPY],25:[e.DONPHAN]}],[S.DAY]:[{1:[e.PHANPY],25:[e.DONPHAN]}],[S.DUSK]:[],[S.NIGHT]:[{1:[e.CUBONE],28:[e.MAROWAK]}],[S.ALL]:[{1:[e.DIGLETT],26:[e.DUGTRIO]},{1:[e.GEODUDE],25:[e.GRAVELER]},{1:[e.RHYHORN],42:[e.RHYDON]},{1:[e.DRILBUR],31:[e.EXCADRILL]},{1:[e.MUDBRAY],30:[e.MUDSDALE]}]},1:{[S.DAWN]:[{1:[e.SIZZLIPEDE],28:[e.CENTISKORCH]},{1:[e.CAPSAKID],30:[e.SCOVILLAIN]}],[S.DAY]:[{1:[e.SIZZLIPEDE],28:[e.CENTISKORCH]},{1:[e.CAPSAKID],30:[e.SCOVILLAIN]}],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.SANDSHREW],22:[e.SANDSLASH]},{1:[e.NUMEL],33:[e.CAMERUPT]},{1:[e.ROGGENROLA],25:[e.BOLDORE]},{1:[e.CUFANT],34:[e.COPPERAJAH]}]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ONIX,e.GLIGAR,{1:[e.POLTCHAGEIST],30:[e.SINISTCHA]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.LANDORUS,e.OKIDOGI]},5:{[S.DAWN]:[e.DONPHAN,e.CENTISKORCH,e.SCOVILLAIN],[S.DAY]:[e.DONPHAN,e.CENTISKORCH,e.SCOVILLAIN],[S.DUSK]:[],[S.NIGHT]:[e.MAROWAK],[S.ALL]:[e.DUGTRIO,e.GOLEM,e.RHYPERIOR,e.GLISCOR,e.EXCADRILL,e.MUDSDALE,e.COPPERAJAH]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.STEELIX,e.SINISTCHA]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.LANDORUS,e.OKIDOGI]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.GROUDON]}},[T.CAVE]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.ZUBAT],22:[e.GOLBAT]},{1:[e.PARAS],24:[e.PARASECT]},{1:[e.TEDDIURSA],30:[e.URSARING]},{1:[e.WHISMUR],20:[e.LOUDRED],40:[e.EXPLOUD]},{1:[e.ROGGENROLA],25:[e.BOLDORE]},{1:[e.WOOBAT],20:[e.SWOOBAT]},{1:[e.BUNNELBY],20:[e.DIGGERSBY]},{1:[e.NACLI],24:[e.NACLSTACK],38:[e.GARGANACL]}]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[{1:[e.ROCKRUFF],25:[e.LYCANROC]}],[S.NIGHT]:[],[S.ALL]:[{1:[e.GEODUDE],25:[e.GRAVELER]},{1:[e.MAKUHITA],24:[e.HARIYAMA]},e.NOSEPASS,{1:[e.NOIBAT],48:[e.NOIVERN]},{1:[e.WIMPOD],30:[e.GOLISOPOD]}]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ONIX,{1:[e.FERROSEED],40:[e.FERROTHORN]},e.CARBINK,{1:[e.GLIMMET],35:[e.GLIMMORA]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.SHUCKLE]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.UXIE]},5:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.PARASECT,e.ONIX,e.CROBAT,e.URSARING,e.EXPLOUD,e.PROBOPASS,e.GIGALITH,e.SWOOBAT,e.DIGGERSBY,e.NOIVERN,e.GOLISOPOD,e.GARGANACL]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[e.LYCANROC],[S.NIGHT]:[],[S.ALL]:[e.SHUCKLE,e.FERROTHORN,e.GLIMMORA]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.UXIE]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.TERAPAGOS]}},[T.DESERT]:{0:{[S.DAWN]:[e.TRAPINCH,{1:[e.HIPPOPOTAS],34:[e.HIPPOWDON]},{1:[e.RELLOR],29:[e.RABSCA]}],[S.DAY]:[e.TRAPINCH,{1:[e.HIPPOPOTAS],34:[e.HIPPOWDON]},{1:[e.RELLOR],29:[e.RABSCA]}],[S.DUSK]:[{1:[e.CACNEA],32:[e.CACTURNE]},{1:[e.SANDILE],29:[e.KROKOROK],40:[e.KROOKODILE]}],[S.NIGHT]:[{1:[e.CACNEA],32:[e.CACTURNE]},{1:[e.SANDILE],29:[e.KROKOROK],40:[e.KROOKODILE]}],[S.ALL]:[{1:[e.SANDSHREW],22:[e.SANDSLASH]},{1:[e.SKORUPI],40:[e.DRAPION]},{1:[e.SILICOBRA],36:[e.SANDACONDA]}]},1:{[S.DAWN]:[{1:[e.SANDILE],29:[e.KROKOROK],40:[e.KROOKODILE]},e.HELIOPTILE],[S.DAY]:[{1:[e.SANDILE],29:[e.KROKOROK],40:[e.KROOKODILE]},e.HELIOPTILE],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.MARACTUS,{1:[e.BRAMBLIN],30:[e.BRAMBLEGHAST]},e.ORTHWORM]},2:{[S.DAWN]:[{1:[e.VIBRAVA],45:[e.FLYGON]}],[S.DAY]:[{1:[e.VIBRAVA],45:[e.FLYGON]}],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.DARUMAKA],35:[e.DARMANITAN]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.LILEEP],40:[e.CRADILY]},{1:[e.ANORITH],40:[e.ARMALDO]}]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.REGIROCK,e.TAPU_BULU,e.PHEROMOSA]},5:{[S.DAWN]:[e.HIPPOWDON,e.HELIOLISK,e.RABSCA],[S.DAY]:[e.HIPPOWDON,e.HELIOLISK,e.RABSCA],[S.DUSK]:[e.CACTURNE,e.KROOKODILE],[S.NIGHT]:[e.CACTURNE,e.KROOKODILE],[S.ALL]:[e.SANDSLASH,e.DRAPION,e.DARMANITAN,e.MARACTUS,e.SANDACONDA,e.BRAMBLEGHAST]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.CRADILY,e.ARMALDO]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.REGIROCK,e.TAPU_BULU,e.PHEROMOSA]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]}},[T.ICE_CAVE]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.SEEL],34:[e.DEWGONG]},{1:[e.SWINUB],33:[e.PILOSWINE]},{1:[e.SNOVER],40:[e.ABOMASNOW]},{1:[e.VANILLITE],35:[e.VANILLISH],47:[e.VANILLUXE]},{1:[e.CUBCHOO],37:[e.BEARTIC]},{1:[e.BERGMITE],37:[e.AVALUGG]},e.CRABRAWLER,{1:[e.SNOM],20:[e.FROSMOTH]}]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.SNEASEL,{1:[e.SNORUNT],42:[e.GLALIE]},{1:[e.SPHEAL],32:[e.SEALEO],44:[e.WALREIN]},e.EISCUE,{1:[e.CETODDLE],30:[e.CETITAN]}]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.JYNX,e.LAPRAS,e.FROSLASS,e.CRYOGONAL]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.DELIBIRD,e.ROTOM,{1:[e.AMAURA],59:[e.AURORUS]}]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ARTICUNO,e.REGICE]},5:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.DEWGONG,e.GLALIE,e.WALREIN,e.WEAVILE,e.MAMOSWINE,e.FROSLASS,e.VANILLUXE,e.BEARTIC,e.CRYOGONAL,e.AVALUGG,e.CRABOMINABLE,e.CETITAN]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.JYNX,e.LAPRAS,e.GLACEON,e.AURORUS]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ARTICUNO,e.REGICE,e.ROTOM]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.KYUREM]}},[T.MEADOW]:{0:{[S.DAWN]:[{1:[e.LEDYBA],18:[e.LEDIAN]},e.ROSELIA,e.COTTONEE,e.MINCCINO],[S.DAY]:[e.ROSELIA,e.COTTONEE,e.MINCCINO],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.BLITZLE],27:[e.ZEBSTRIKA]},{1:[e.FLABEBE],19:[e.FLOETTE]},{1:[e.CUTIEFLY],25:[e.RIBOMBEE]},{1:[e.GOSSIFLEUR],20:[e.ELDEGOSS]},{1:[e.WOOLOO],24:[e.DUBWOOL]}]},1:{[S.DAWN]:[{1:[e.PONYTA],40:[e.RAPIDASH]},{1:[e.SNUBBULL],23:[e.GRANBULL]},{1:[e.SKITTY],30:[e.DELCATTY]},e.BOUFFALANT,{1:[e.SMOLIV],25:[e.DOLLIV],35:[e.ARBOLIVA]}],[S.DAY]:[{1:[e.PONYTA],40:[e.RAPIDASH]},{1:[e.SNUBBULL],23:[e.GRANBULL]},{1:[e.SKITTY],30:[e.DELCATTY]},e.BOUFFALANT,{1:[e.SMOLIV],25:[e.DOLLIV],35:[e.ARBOLIVA]}],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.JIGGLYPUFF],30:[e.WIGGLYTUFF]},{1:[e.MAREEP],15:[e.FLAAFFY],30:[e.AMPHAROS]},{1:[e.RALTS],20:[e.KIRLIA],30:[e.GARDEVOIR]},{1:[e.GLAMEOW],38:[e.PURUGLY]},e.ORICORIO]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[e.VOLBEAT,e.ILLUMISE],[S.ALL]:[e.TAUROS,e.EEVEE,e.MILTANK,e.SPINDA,{1:[e.APPLIN],30:[e.DIPPLIN]},{1:[e.SPRIGATITO],16:[e.FLORAGATO],36:[e.MEOWSCARADA]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.CHANSEY,e.SYLVEON]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.MELOETTA]},5:{[S.DAWN]:[e.LEDIAN,e.GRANBULL,e.DELCATTY,e.ROSERADE,e.CINCCINO,e.BOUFFALANT,e.ARBOLIVA],[S.DAY]:[e.GRANBULL,e.DELCATTY,e.ROSERADE,e.CINCCINO,e.BOUFFALANT,e.ARBOLIVA],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.TAUROS,e.MILTANK,e.GARDEVOIR,e.PURUGLY,e.ZEBSTRIKA,e.FLORGES,e.RIBOMBEE,e.DUBWOOL]},6:{[S.DAWN]:[e.HISUI_LILLIGANT],[S.DAY]:[e.HISUI_LILLIGANT],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.BLISSEY,e.SYLVEON,e.FLAPPLE,e.APPLETUN,e.MEOWSCARADA,e.HYDRAPPLE]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.MELOETTA]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.SHAYMIN]}},[T.POWER_PLANT]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.PIKACHU,{1:[e.MAGNEMITE],30:[e.MAGNETON]},{1:[e.VOLTORB],30:[e.ELECTRODE]},{1:[e.ELECTRIKE],26:[e.MANECTRIC]},{1:[e.SHINX],15:[e.LUXIO],30:[e.LUXRAY]},e.DEDENNE,{1:[e.GRUBBIN],20:[e.CHARJABUG]},{1:[e.PAWMI],18:[e.PAWMO],32:[e.PAWMOT]},{1:[e.TADBULB],30:[e.BELLIBOLT]}]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ELECTABUZZ,e.PLUSLE,e.MINUN,e.PACHIRISU,e.EMOLGA,e.TOGEDEMARU]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.MAREEP],15:[e.FLAAFFY]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.JOLTEON,e.HISUI_VOLTORB]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.RAIKOU,e.THUNDURUS,e.XURKITREE,e.ZERAORA,e.REGIELEKI]},5:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.RAICHU,e.MANECTRIC,e.LUXRAY,e.MAGNEZONE,e.ELECTIVIRE,e.DEDENNE,e.VIKAVOLT,e.TOGEDEMARU,e.PAWMOT,e.BELLIBOLT]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.JOLTEON,e.AMPHAROS,e.HISUI_ELECTRODE]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ZAPDOS,e.RAIKOU,e.THUNDURUS,e.XURKITREE,e.ZERAORA,e.REGIELEKI]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ZEKROM]}},[T.VOLCANO]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.VULPIX,e.GROWLITHE,{1:[e.PONYTA],40:[e.RAPIDASH]},{1:[e.SLUGMA],38:[e.MAGCARGO]},{1:[e.NUMEL],33:[e.CAMERUPT]},{1:[e.SALANDIT],33:[e.SALAZZLE]},{1:[e.ROLYCOLY],18:[e.CARKOL],34:[e.COALOSSAL]}]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.MAGMAR,e.TORKOAL,{1:[e.PANSEAR],30:[e.SIMISEAR]},e.HEATMOR,e.TURTONATOR]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.CHARMANDER],16:[e.CHARMELEON],36:[e.CHARIZARD]},{1:[e.CYNDAQUIL],14:[e.QUILAVA],36:[e.TYPHLOSION]},{1:[e.CHIMCHAR],14:[e.MONFERNO],36:[e.INFERNAPE]},{1:[e.TEPIG],17:[e.PIGNITE],36:[e.EMBOAR]},{1:[e.FENNEKIN],16:[e.BRAIXEN],36:[e.DELPHOX]},{1:[e.LITTEN],17:[e.TORRACAT],34:[e.INCINEROAR]},{1:[e.SCORBUNNY],16:[e.RABOOT],35:[e.CINDERACE]},{1:[e.CHARCADET],30:[e.ARMAROUGE]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.FLAREON,e.ROTOM,{1:[e.LARVESTA],59:[e.VOLCARONA]},e.HISUI_GROWLITHE]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ENTEI,e.HEATRAN,e.VOLCANION,e.CHI_YU]},5:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.NINETALES,e.ARCANINE,e.RAPIDASH,e.MAGCARGO,e.CAMERUPT,e.TORKOAL,e.MAGMORTAR,e.SIMISEAR,e.HEATMOR,e.SALAZZLE,e.TURTONATOR,e.COALOSSAL]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.CHARIZARD,e.FLAREON,e.TYPHLOSION,e.INFERNAPE,e.EMBOAR,e.VOLCARONA,e.DELPHOX,e.INCINEROAR,e.CINDERACE,e.ARMAROUGE,e.HISUI_ARCANINE]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.MOLTRES,e.ENTEI,e.ROTOM,e.HEATRAN,e.VOLCANION,e.CHI_YU]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.RESHIRAM]}},[T.GRAVEYARD]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.GASTLY],25:[e.HAUNTER]},{1:[e.SHUPPET],37:[e.BANETTE]},{1:[e.DUSKULL],37:[e.DUSCLOPS]},{1:[e.DRIFLOON],28:[e.DRIFBLIM]},{1:[e.LITWICK],41:[e.LAMPENT]},e.PHANTUMP,e.PUMPKABOO,{1:[e.GREAVARD],60:[e.HOUNDSTONE]}]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.CUBONE],28:[e.MAROWAK]},{1:[e.YAMASK],34:[e.COFAGRIGUS]},{1:[e.SINISTEA],30:[e.POLTEAGEIST]}]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.MISDREAVUS,e.MIMIKYU,{1:[e.FUECOCO],16:[e.CROCALOR],36:[e.SKELEDIRGE]},e.CERULEDGE]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.SPIRITOMB]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.MARSHADOW,e.SPECTRIER]},5:{[S.DAWN]:[e.MAROWAK],[S.DAY]:[e.MAROWAK],[S.DUSK]:[e.MAROWAK],[S.NIGHT]:[],[S.ALL]:[e.GENGAR,e.BANETTE,e.DRIFBLIM,e.MISMAGIUS,e.DUSKNOIR,e.CHANDELURE,e.TREVENANT,e.GOURGEIST,e.MIMIKYU,e.POLTEAGEIST,e.HOUNDSTONE]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.SKELEDIRGE,e.CERULEDGE,e.HISUI_TYPHLOSION]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.MARSHADOW,e.SPECTRIER]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.GIRATINA]}},[T.DOJO]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.MANKEY],28:[e.PRIMEAPE],75:[e.ANNIHILAPE]},{1:[e.MAKUHITA],24:[e.HARIYAMA]},{1:[e.MEDITITE],37:[e.MEDICHAM]},{1:[e.STUFFUL],27:[e.BEWEAR]},{1:[e.CLOBBOPUS],55:[e.GRAPPLOCT]}]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.CROAGUNK],37:[e.TOXICROAK]},{1:[e.SCRAGGY],39:[e.SCRAFTY]},{1:[e.MIENFOO],50:[e.MIENSHAO]}]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.HITMONLEE,e.HITMONCHAN,e.LUCARIO,e.THROH,e.SAWK,{1:[e.PANCHAM],52:[e.PANGORO]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.HITMONTOP,e.GALLADE,e.GALAR_FARFETCHD]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.TERRAKION,e.KUBFU,e.GALAR_ZAPDOS]},5:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.HITMONLEE,e.HITMONCHAN,e.HARIYAMA,e.MEDICHAM,e.LUCARIO,e.TOXICROAK,e.THROH,e.SAWK,e.SCRAFTY,e.MIENSHAO,e.BEWEAR,e.GRAPPLOCT,e.ANNIHILAPE]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.HITMONTOP,e.GALLADE,e.PANGORO,e.SIRFETCHD,e.HISUI_DECIDUEYE]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.TERRAKION,e.URSHIFU]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ZAMAZENTA,e.GALAR_ZAPDOS]}},[T.FACTORY]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.MACHOP],28:[e.MACHOKE]},{1:[e.MAGNEMITE],30:[e.MAGNETON]},{1:[e.VOLTORB],30:[e.ELECTRODE]},{1:[e.TIMBURR],25:[e.GURDURR]},{1:[e.KLINK],38:[e.KLANG],49:[e.KLINKLANG]}]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.BRONZOR],33:[e.BRONZONG]},e.KLEFKI]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.PORYGON],30:[e.PORYGON2]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.BELDUM],20:[e.METANG],45:[e.METAGROSS]}]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.GENESECT,e.MAGEARNA]},5:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.KLINKLANG,e.KLEFKI]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.GENESECT,e.MAGEARNA]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]}},[T.RUINS]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.DROWZEE],26:[e.HYPNO]},{1:[e.NATU],25:[e.XATU]},e.UNOWN,{1:[e.SPOINK],32:[e.GRUMPIG]},{1:[e.BALTOY],36:[e.CLAYDOL]},{1:[e.ELGYEM],42:[e.BEHEEYEM]}]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.ABRA],16:[e.KADABRA]},e.SIGILYPH,{1:[e.TINKATINK],24:[e.TINKATUFF],38:[e.TINKATON]}]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.MR_MIME,e.WOBBUFFET,{1:[e.GOTHITA],32:[e.GOTHORITA],41:[e.GOTHITELLE]},e.STONJOURNER]},3:{[S.DAWN]:[],[S.DAY]:[e.ESPEON],[S.DUSK]:[{1:[e.GALAR_YAMASK],34:[e.RUNERIGUS]}],[S.NIGHT]:[{1:[e.GALAR_YAMASK],34:[e.RUNERIGUS]}],[S.ALL]:[{1:[e.ARCHEN],37:[e.ARCHEOPS]}]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.REGISTEEL,e.FEZANDIPITI]},5:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ALAKAZAM,e.HYPNO,e.XATU,e.GRUMPIG,e.CLAYDOL,e.SIGILYPH,e.GOTHITELLE,e.BEHEEYEM,e.TINKATON]},6:{[S.DAWN]:[],[S.DAY]:[e.ESPEON],[S.DUSK]:[e.RUNERIGUS],[S.NIGHT]:[e.RUNERIGUS],[S.ALL]:[e.MR_MIME,e.WOBBUFFET,e.ARCHEOPS]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.REGISTEEL,e.FEZANDIPITI]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.KORAIDON]}},[T.WASTELAND]:{0:{[S.DAWN]:[{1:[e.BAGON],30:[e.SHELGON],50:[e.SALAMENCE]},{1:[e.GOOMY],40:[e.SLIGGOO],80:[e.GOODRA]},{1:[e.JANGMO_O],35:[e.HAKAMO_O],45:[e.KOMMO_O]}],[S.DAY]:[{1:[e.BAGON],30:[e.SHELGON],50:[e.SALAMENCE]},{1:[e.GOOMY],40:[e.SLIGGOO],80:[e.GOODRA]},{1:[e.JANGMO_O],35:[e.HAKAMO_O],45:[e.KOMMO_O]}],[S.DUSK]:[{1:[e.LARVITAR],30:[e.PUPITAR],55:[e.TYRANITAR]}],[S.NIGHT]:[{1:[e.LARVITAR],30:[e.PUPITAR],55:[e.TYRANITAR]}],[S.ALL]:[{1:[e.VIBRAVA],45:[e.FLYGON]},{1:[e.GIBLE],24:[e.GABITE],48:[e.GARCHOMP]},{1:[e.AXEW],38:[e.FRAXURE],48:[e.HAXORUS]}]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[{1:[e.DEINO],50:[e.ZWEILOUS],64:[e.HYDREIGON]}],[S.NIGHT]:[{1:[e.DEINO],50:[e.ZWEILOUS],64:[e.HYDREIGON]}],[S.ALL]:[{1:[e.SWABLU],35:[e.ALTARIA]},e.DRAMPA,e.CYCLIZAR]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[{1:[e.DREEPY],50:[e.DRAKLOAK],60:[e.DRAGAPULT]}],[S.NIGHT]:[{1:[e.DREEPY],50:[e.DRAKLOAK],60:[e.DRAGAPULT]}],[S.ALL]:[{1:[e.DRATINI],30:[e.DRAGONAIR],55:[e.DRAGONITE]},{1:[e.FRIGIBAX],35:[e.ARCTIBAX],54:[e.BAXCALIBUR]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.AERODACTYL,e.DRUDDIGON,{1:[e.TYRUNT],59:[e.TYRANTRUM]},e.DRACOZOLT,e.DRACOVISH]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.REGIDRAGO]},5:{[S.DAWN]:[e.SALAMENCE,e.GOODRA,e.KOMMO_O],[S.DAY]:[e.SALAMENCE,e.GOODRA,e.KOMMO_O],[S.DUSK]:[e.TYRANITAR,e.DRAGAPULT],[S.NIGHT]:[e.TYRANITAR,e.DRAGAPULT],[S.ALL]:[e.DRAGONITE,e.FLYGON,e.GARCHOMP,e.HAXORUS,e.DRAMPA,e.BAXCALIBUR]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.AERODACTYL,e.DRUDDIGON,e.TYRANTRUM,e.DRACOZOLT,e.DRACOVISH]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.REGIDRAGO]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.DIALGA]}},[T.ABYSS]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.MURKROW,{1:[e.HOUNDOUR],24:[e.HOUNDOOM]},e.SABLEYE,{1:[e.PURRLOIN],20:[e.LIEPARD]},{1:[e.PAWNIARD],52:[e.BISHARP],64:[e.KINGAMBIT]},{1:[e.NICKIT],18:[e.THIEVUL]},{1:[e.IMPIDIMP],32:[e.MORGREM],42:[e.GRIMMSNARL]},{1:[e.MASCHIFF],30:[e.MABOSSTIFF]}]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ABSOL,e.SPIRITOMB,{1:[e.ZORUA],30:[e.ZOROARK]},{1:[e.DEINO],50:[e.ZWEILOUS],64:[e.HYDREIGON]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.UMBREON]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.DARKRAI,e.GALAR_MOLTRES]},5:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.HOUNDOOM,e.SABLEYE,e.ABSOL,e.HONCHKROW,e.SPIRITOMB,e.LIEPARD,e.ZOROARK,e.HYDREIGON,e.THIEVUL,e.GRIMMSNARL,e.MABOSSTIFF,e.KINGAMBIT]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.UMBREON,e.HISUI_SAMUROTT]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.DARKRAI]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.PALKIA,e.YVELTAL,e.GALAR_MOLTRES]}},[T.SPACE]:{0:{[S.DAWN]:[],[S.DAY]:[e.SOLROCK],[S.DUSK]:[],[S.NIGHT]:[e.LUNATONE],[S.ALL]:[e.CLEFAIRY,{1:[e.BRONZOR],33:[e.BRONZONG]},{1:[e.MUNNA],30:[e.MUSHARNA]},e.MINIOR]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.BALTOY],36:[e.CLAYDOL]},{1:[e.ELGYEM],42:[e.BEHEEYEM]}]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.BELDUM],20:[e.METANG],45:[e.METAGROSS]},e.SIGILYPH,{1:[e.SOLOSIS],32:[e.DUOSION],41:[e.REUNICLUS]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.PORYGON],30:[e.PORYGON2]}]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.COSMOG],43:[e.COSMOEM]},e.CELESTEELA]},5:{[S.DAWN]:[],[S.DAY]:[e.SOLROCK],[S.DUSK]:[],[S.NIGHT]:[e.LUNATONE],[S.ALL]:[e.CLEFABLE,e.BRONZONG,e.MUSHARNA,e.REUNICLUS,e.MINIOR]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.METAGROSS,e.PORYGON_Z]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.CELESTEELA]},8:{[S.DAWN]:[],[S.DAY]:[e.SOLGALEO],[S.DUSK]:[],[S.NIGHT]:[e.LUNALA],[S.ALL]:[e.RAYQUAZA,e.NECROZMA]}},[T.CONSTRUCTION_SITE]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.MACHOP],28:[e.MACHOKE]},{1:[e.MAGNEMITE],30:[e.MAGNETON]},{1:[e.DRILBUR],31:[e.EXCADRILL]},{1:[e.TIMBURR],25:[e.GURDURR]}]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.GRIMER],38:[e.MUK]},{1:[e.KOFFING],35:[e.WEEZING]},{1:[e.RHYHORN],42:[e.RHYDON]},{1:[e.SCRAGGY],39:[e.SCRAFTY]}]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[{1:[e.GALAR_MEOWTH],28:[e.PERRSERKER]}],[S.NIGHT]:[],[S.ALL]:[e.ONIX,e.HITMONLEE,e.HITMONCHAN,e.DURALUDON]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.DITTO,e.HITMONTOP]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.COBALION,e.STAKATAKA]},5:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.MACHAMP,e.CONKELDURR]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[e.PERRSERKER],[S.NIGHT]:[],[S.ALL]:[e.ARCHALUDON]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.COBALION,e.STAKATAKA]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]}},[T.JUNGLE]:{0:{[S.DAWN]:[e.VESPIQUEN,{1:[e.CHERUBI],25:[e.CHERRIM]},{1:[e.SEWADDLE],20:[e.SWADLOON],30:[e.LEAVANNY]}],[S.DAY]:[e.VESPIQUEN,{1:[e.CHERUBI],25:[e.CHERRIM]},{1:[e.SEWADDLE],20:[e.SWADLOON],30:[e.LEAVANNY]}],[S.DUSK]:[e.SHROOMISH,{1:[e.PURRLOIN],20:[e.LIEPARD]},{1:[e.FOONGUS],39:[e.AMOONGUSS]}],[S.NIGHT]:[{1:[e.SPINARAK],22:[e.ARIADOS]},e.SHROOMISH,{1:[e.PURRLOIN],20:[e.LIEPARD]},{1:[e.FOONGUS],39:[e.AMOONGUSS]}],[S.ALL]:[e.AIPOM,{1:[e.BLITZLE],27:[e.ZEBSTRIKA]},{1:[e.PIKIPEK],14:[e.TRUMBEAK],28:[e.TOUCANNON]}]},1:{[S.DAWN]:[e.EXEGGCUTE,e.TROPIUS,e.COMBEE,e.KOMALA],[S.DAY]:[e.EXEGGCUTE,e.TROPIUS,e.COMBEE,e.KOMALA],[S.DUSK]:[e.TANGELA,{1:[e.SPINARAK],22:[e.ARIADOS]},{1:[e.PANCHAM],52:[e.PANGORO]}],[S.NIGHT]:[e.TANGELA,{1:[e.PANCHAM],52:[e.PANGORO]}],[S.ALL]:[{1:[e.PANSAGE],30:[e.SIMISAGE]},{1:[e.PANSEAR],30:[e.SIMISEAR]},{1:[e.PANPOUR],30:[e.SIMIPOUR]},{1:[e.JOLTIK],36:[e.GALVANTULA]},{1:[e.LITLEO],35:[e.PYROAR]},{1:[e.FOMANTIS],44:[e.LURANTIS]},e.FALINKS]},2:{[S.DAWN]:[{1:[e.FOONGUS],39:[e.AMOONGUSS]},e.PASSIMIAN,{1:[e.GALAR_PONYTA],40:[e.GALAR_RAPIDASH]}],[S.DAY]:[{1:[e.FOONGUS],39:[e.AMOONGUSS]},e.PASSIMIAN],[S.DUSK]:[e.ORANGURU],[S.NIGHT]:[e.ORANGURU],[S.ALL]:[e.SCYTHER,e.YANMA,{1:[e.SLAKOTH],18:[e.VIGOROTH],36:[e.SLAKING]},e.SEVIPER,e.CARNIVINE,{1:[e.SNIVY],17:[e.SERVINE],36:[e.SERPERIOR]},{1:[e.GROOKEY],16:[e.THWACKEY],35:[e.RILLABOOM]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.KANGASKHAN,e.CHATOT,e.KLEAVOR]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.TAPU_LELE,e.BUZZWOLE,e.ZARUDE,e.MUNKIDORI]},5:{[S.DAWN]:[e.EXEGGUTOR,e.TROPIUS,e.CHERRIM,e.LEAVANNY,e.KOMALA],[S.DAY]:[e.EXEGGUTOR,e.TROPIUS,e.CHERRIM,e.LEAVANNY,e.KOMALA],[S.DUSK]:[e.BRELOOM,e.TANGROWTH,e.AMOONGUSS,e.PANGORO],[S.NIGHT]:[e.BRELOOM,e.TANGROWTH,e.AMOONGUSS,e.PANGORO],[S.ALL]:[e.SEVIPER,e.AMBIPOM,e.CARNIVINE,e.YANMEGA,e.GALVANTULA,e.PYROAR,e.TOUCANNON,e.LURANTIS,e.FALINKS]},6:{[S.DAWN]:[e.AMOONGUSS,e.GALAR_RAPIDASH],[S.DAY]:[e.AMOONGUSS],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.KANGASKHAN,e.SCIZOR,e.SLAKING,e.LEAFEON,e.SERPERIOR,e.RILLABOOM]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.TAPU_LELE,e.BUZZWOLE,e.ZARUDE,e.MUNKIDORI]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.KLEAVOR]}},[T.FAIRY_CAVE]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.JIGGLYPUFF],30:[e.WIGGLYTUFF]},{1:[e.MARILL],18:[e.AZUMARILL]},e.MAWILE,{1:[e.SPRITZEE],40:[e.AROMATISSE]},{1:[e.SWIRLIX],40:[e.SLURPUFF]},{1:[e.CUTIEFLY],25:[e.RIBOMBEE]},{1:[e.MORELULL],24:[e.SHIINOTIC]},{1:[e.MILCERY],30:[e.ALCREMIE]}]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.CLEFAIRY,e.TOGETIC,{1:[e.RALTS],20:[e.KIRLIA],30:[e.GARDEVOIR]},e.CARBINK,e.COMFEY,{1:[e.HATENNA],32:[e.HATTREM],42:[e.HATTERENE]}]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.AUDINO,e.ETERNAL_FLOETTE]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.DIANCIE,e.ENAMORUS]},5:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.WIGGLYTUFF,e.MAWILE,e.TOGEKISS,e.AUDINO,e.AROMATISSE,e.SLURPUFF,e.CARBINK,e.RIBOMBEE,e.SHIINOTIC,e.COMFEY,e.HATTERENE,e.ALCREMIE]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ETERNAL_FLOETTE]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.DIANCIE,e.ENAMORUS]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.XERNEAS]}},[T.TEMPLE]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.GASTLY],25:[e.HAUNTER]},{1:[e.NATU],25:[e.XATU]},{1:[e.DUSKULL],37:[e.DUSCLOPS]},{1:[e.YAMASK],34:[e.COFAGRIGUS]},{1:[e.GOLETT],43:[e.GOLURK]},{1:[e.HONEDGE],35:[e.DOUBLADE]}]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.CUBONE],28:[e.MAROWAK]},{1:[e.BALTOY],36:[e.CLAYDOL]},{1:[e.CHINGLING],20:[e.CHIMECHO]},{1:[e.SKORUPI],40:[e.DRAPION]},{1:[e.LITWICK],41:[e.LAMPENT]}]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.GIMMIGHOUL],40:[e.GHOLDENGO]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.HOOPA,e.TAPU_KOKO]},5:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.CHIMECHO,e.COFAGRIGUS,e.GOLURK,e.AEGISLASH]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.GHOLDENGO]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.HOOPA,e.TAPU_KOKO]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.REGIGIGAS]}},[T.SLUM]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[{1:[e.PATRAT],20:[e.WATCHOG]}],[S.NIGHT]:[{1:[e.PATRAT],20:[e.WATCHOG]}],[S.ALL]:[{1:[e.RATTATA],20:[e.RATICATE]},{1:[e.GRIMER],38:[e.MUK]},{1:[e.KOFFING],35:[e.WEEZING]},{1:[e.TRUBBISH],36:[e.GARBODOR]}]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[{1:[e.STUNKY],34:[e.SKUNTANK]}],[S.NIGHT]:[{1:[e.STUNKY],34:[e.SKUNTANK]}],[S.ALL]:[{1:[e.BURMY],20:[e.WORMADAM]}]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[e.TOXTRICITY,{1:[e.GALAR_LINOONE],65:[e.OBSTAGOON]},e.GALAR_ZIGZAGOON],[S.NIGHT]:[e.TOXTRICITY,{1:[e.GALAR_LINOONE],65:[e.OBSTAGOON]},e.GALAR_ZIGZAGOON],[S.ALL]:[{1:[e.VAROOM],40:[e.REVAVROOM]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.GUZZLORD]},5:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[e.SKUNTANK,e.WATCHOG],[S.NIGHT]:[e.SKUNTANK,e.WATCHOG],[S.ALL]:[e.MUK,e.WEEZING,e.WORMADAM,e.GARBODOR]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[e.TOXTRICITY,e.OBSTAGOON],[S.NIGHT]:[e.TOXTRICITY,e.OBSTAGOON],[S.ALL]:[e.REVAVROOM,e.GALAR_WEEZING]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.GUZZLORD]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]}},[T.SNOWY_FOREST]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[e.SNEASEL,{1:[e.TEDDIURSA],30:[e.URSARING]},{1:[e.SNOM],20:[e.FROSMOTH]}],[S.NIGHT]:[e.SNEASEL,{1:[e.TEDDIURSA],30:[e.URSARING]},{1:[e.SNOM],20:[e.FROSMOTH]}],[S.ALL]:[{1:[e.SWINUB],33:[e.PILOSWINE]},{1:[e.SNOVER],40:[e.ABOMASNOW]},e.EISCUE]},1:{[S.DAWN]:[e.SNEASEL,{1:[e.TEDDIURSA],30:[e.URSARING]},e.STANTLER],[S.DAY]:[e.SNEASEL,{1:[e.TEDDIURSA],30:[e.URSARING]},e.STANTLER],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},2:{[S.DAWN]:[{1:[e.GALAR_DARUMAKA],30:[e.GALAR_DARMANITAN]}],[S.DAY]:[{1:[e.GALAR_DARUMAKA],30:[e.GALAR_DARMANITAN]}],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.DELIBIRD,{1:[e.ALOLA_SANDSHREW],30:[e.ALOLA_SANDSLASH]},{1:[e.ALOLA_VULPIX],30:[e.ALOLA_NINETALES]}]},3:{[S.DAWN]:[e.HISUI_SNEASEL],[S.DAY]:[e.HISUI_SNEASEL],[S.DUSK]:[{1:[e.HISUI_ZORUA],30:[e.HISUI_ZOROARK]}],[S.NIGHT]:[{1:[e.HISUI_ZORUA],30:[e.HISUI_ZOROARK]}],[S.ALL]:[{1:[e.GALAR_MR_MIME],42:[e.MR_RIME]},e.ARCTOZOLT,e.HISUI_AVALUGG]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.GLASTRIER,e.CHIEN_PAO,e.GALAR_ARTICUNO]},5:{[S.DAWN]:[e.WYRDEER],[S.DAY]:[e.WYRDEER],[S.DUSK]:[e.FROSMOTH],[S.NIGHT]:[e.FROSMOTH],[S.ALL]:[e.ABOMASNOW,e.URSALUNA]},6:{[S.DAWN]:[e.SNEASLER,e.GALAR_DARMANITAN],[S.DAY]:[e.SNEASLER,e.GALAR_DARMANITAN],[S.DUSK]:[e.HISUI_ZOROARK],[S.NIGHT]:[e.HISUI_ZOROARK],[S.ALL]:[e.MR_RIME,e.ARCTOZOLT,e.ALOLA_SANDSLASH,e.ALOLA_NINETALES]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.GLASTRIER,e.CHIEN_PAO]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ZACIAN,e.GALAR_ARTICUNO]}},[T.ISLAND]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[{1:[e.ALOLA_RATTATA],30:[e.ALOLA_RATICATE]},{1:[e.ALOLA_MEOWTH],30:[e.ALOLA_PERSIAN]}],[S.NIGHT]:[{1:[e.ALOLA_RATTATA],30:[e.ALOLA_RATICATE]},{1:[e.ALOLA_MEOWTH],30:[e.ALOLA_PERSIAN]}],[S.ALL]:[e.ORICORIO,{1:[e.ALOLA_SANDSHREW],30:[e.ALOLA_SANDSLASH]},{1:[e.ALOLA_VULPIX],30:[e.ALOLA_NINETALES]},{1:[e.ALOLA_DIGLETT],26:[e.ALOLA_DUGTRIO]},{1:[e.ALOLA_GEODUDE],25:[e.ALOLA_GRAVELER],40:[e.ALOLA_GOLEM]},{1:[e.ALOLA_GRIMER],38:[e.ALOLA_MUK]}]},1:{[S.DAWN]:[e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR],[S.DAY]:[e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR],[S.DUSK]:[e.ALOLA_MAROWAK],[S.NIGHT]:[e.ALOLA_MAROWAK],[S.ALL]:[e.BRUXISH]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.BLACEPHALON]},5:{[S.DAWN]:[e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR],[S.DAY]:[e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR],[S.DUSK]:[e.ALOLA_RATICATE,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK],[S.NIGHT]:[e.ALOLA_RATICATE,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK],[S.ALL]:[e.ORICORIO,e.BRUXISH,e.ALOLA_SANDSLASH,e.ALOLA_NINETALES,e.ALOLA_DUGTRIO,e.ALOLA_GOLEM,e.ALOLA_MUK]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.BLACEPHALON]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]}},[T.LABORATORY]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.MAGNEMITE],30:[e.MAGNETON]},{1:[e.GRIMER],38:[e.MUK]},{1:[e.VOLTORB],30:[e.ELECTRODE]},{1:[e.BRONZOR],33:[e.BRONZONG]},{1:[e.KLINK],38:[e.KLANG],49:[e.KLINKLANG]}]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.SOLOSIS],32:[e.DUOSION],41:[e.REUNICLUS]}]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.DITTO,{1:[e.PORYGON],30:[e.PORYGON2]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ROTOM]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.TYPE_NULL]},5:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.MUK,e.ELECTRODE,e.BRONZONG,e.MAGNEZONE,e.PORYGON_Z,e.REUNICLUS,e.KLINKLANG]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ROTOM,e.ZYGARDE,e.SILVALLY]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.MEWTWO,e.MIRAIDON]}},[T.END]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ROARING_MOON,e.IRON_VALIANT]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.WALKING_WAKE,e.IRON_LEAVES,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},5:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ETERNATUS]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]}}},Vi={[T.TOWN]:{0:[U.YOUNGSTER],1:[],2:[],3:[],4:[],5:[],6:[],7:[],8:[]},[T.PLAINS]:{0:[U.BREEDER,U.TWINS],1:[U.ACE_TRAINER,U.CYCLIST],2:[U.BLACK_BELT],3:[],4:[],5:[U.CILAN,U.CHILI,U.CRESS,U.CHEREN],6:[],7:[],8:[]},[T.GRASS]:{0:[U.BREEDER,U.SCHOOL_KID],1:[U.ACE_TRAINER],2:[U.BLACK_BELT],3:[],4:[],5:[U.ERIKA],6:[],7:[],8:[]},[T.TALL_GRASS]:{0:[],1:[U.ACE_TRAINER,U.BREEDER,U.RANGER],2:[],3:[],4:[],5:[U.GARDENIA,U.VIOLA,U.BRASSIUS],6:[],7:[],8:[]},[T.METROPOLIS]:{0:[U.CLERK,U.CYCLIST,U.OFFICER,U.WAITER],1:[U.BREEDER,U.DEPOT_AGENT,U.GUITARIST],2:[U.ARTIST],3:[],4:[],5:[U.WHITNEY,U.NORMAN,U.IONO,U.LARRY],6:[],7:[],8:[]},[T.FOREST]:{0:[U.RANGER],1:[],2:[],3:[],4:[],5:[U.BUGSY,U.BURGH,U.KATY],6:[],7:[],8:[]},[T.SEA]:{0:[U.SWIMMER,U.SAILOR],1:[],2:[],3:[],4:[],5:[U.MARLON],6:[],7:[],8:[]},[T.SWAMP]:{0:[],1:[U.ACE_TRAINER],2:[U.BLACK_BELT],3:[],4:[],5:[U.JANINE,U.ROXIE],6:[],7:[],8:[]},[T.BEACH]:{0:[U.FISHERMAN,U.PARASOL_LADY,U.SAILOR],1:[U.ACE_TRAINER,U.BREEDER],2:[U.BLACK_BELT],3:[],4:[],5:[U.MISTY,U.KOFU],6:[],7:[],8:[]},[T.LAKE]:{0:[U.BREEDER,U.FISHERMAN],1:[U.ACE_TRAINER],2:[U.BLACK_BELT],3:[],4:[],5:[U.CRASHER_WAKE],6:[],7:[],8:[]},[T.SEABED]:{0:[],1:[],2:[],3:[],4:[],5:[U.JUAN],6:[],7:[],8:[]},[T.MOUNTAIN]:{0:[U.BACKPACKER,U.BLACK_BELT,U.HIKER],1:[U.ACE_TRAINER],2:[],3:[],4:[],5:[U.FALKNER,U.WINONA,U.SKYLA],6:[],7:[],8:[]},[T.BADLANDS]:{0:[U.BACKPACKER,U.HIKER],1:[U.ACE_TRAINER],2:[],3:[],4:[],5:[U.CLAY,U.GRANT],6:[],7:[],8:[]},[T.CAVE]:{0:[U.BACKPACKER,U.HIKER],1:[U.ACE_TRAINER,U.BLACK_BELT],2:[],3:[],4:[],5:[U.BROCK,U.ROXANNE,U.ROARK],6:[],7:[],8:[]},[T.DESERT]:{0:[U.SCIENTIST],1:[],2:[],3:[],4:[],5:[U.GORDIE],6:[],7:[],8:[]},[T.ICE_CAVE]:{0:[U.SNOW_WORKER],1:[],2:[],3:[],4:[],5:[U.PRYCE,U.BRYCEN,U.WULFRIC,U.GRUSHA],6:[],7:[],8:[]},[T.MEADOW]:{0:[U.PARASOL_LADY],1:[U.ACE_TRAINER,U.BREEDER],2:[],3:[],4:[],5:[U.LENORA,U.MILO],6:[],7:[],8:[]},[T.POWER_PLANT]:{0:[U.GUITARIST,U.WORKER],1:[],2:[],3:[],4:[],5:[U.VOLKNER,U.ELESA,U.CLEMONT],6:[],7:[],8:[]},[T.VOLCANO]:{0:[U.FIREBREATHER],1:[],2:[],3:[],4:[],5:[U.BLAINE,U.FLANNERY,U.KABU],6:[],7:[],8:[]},[T.GRAVEYARD]:{0:[U.PSYCHIC],1:[U.HEX_MANIAC],2:[],3:[],4:[],5:[U.MORTY,U.ALLISTER,U.RYME],6:[],7:[],8:[]},[T.DOJO]:{0:[U.BLACK_BELT],1:[],2:[],3:[],4:[],5:[U.BRAWLY,U.MAYLENE,U.KORRINA,U.BEA],6:[],7:[],8:[]},[T.FACTORY]:{0:[U.WORKER],1:[],2:[],3:[],4:[],5:[U.JASMINE,U.BYRON],6:[],7:[],8:[]},[T.RUINS]:{0:[U.PSYCHIC,U.SCIENTIST],1:[U.ACE_TRAINER,U.BLACK_BELT],2:[],3:[],4:[],5:[U.SABRINA,U.TATE,U.LIZA,U.TULIP],6:[],7:[],8:[]},[T.WASTELAND]:{0:[U.VETERAN],1:[],2:[],3:[],4:[],5:[U.CLAIR,U.DRAYDEN,U.RAIHAN],6:[],7:[],8:[]},[T.ABYSS]:{0:[],1:[U.ACE_TRAINER],2:[],3:[],4:[],5:[U.MARNIE],6:[],7:[],8:[]},[T.SPACE]:{0:[],1:[],2:[],3:[],4:[],5:[U.OLYMPIA],6:[],7:[],8:[]},[T.CONSTRUCTION_SITE]:{0:[U.OFFICER,U.WORKER],1:[],2:[],3:[],4:[],5:[U.LT_SURGE,U.CHUCK,U.WATTSON],6:[],7:[],8:[]},[T.JUNGLE]:{0:[U.BACKPACKER,U.RANGER],1:[],2:[],3:[],4:[],5:[U.RAMOS],6:[],7:[],8:[]},[T.FAIRY_CAVE]:{0:[U.BEAUTY],1:[U.ACE_TRAINER,U.BREEDER],2:[],3:[],4:[],5:[U.VALERIE,U.OPAL,U.BEDE],6:[],7:[],8:[]},[T.TEMPLE]:{0:[],1:[U.ACE_TRAINER],2:[],3:[],4:[],5:[U.FANTINA],6:[],7:[],8:[]},[T.SLUM]:{0:[U.BIKER,U.OFFICER,U.ROUGHNECK],1:[U.BAKER],2:[],3:[],4:[],5:[U.PIERS],6:[],7:[],8:[]},[T.SNOWY_FOREST]:{0:[U.SNOW_WORKER],1:[],2:[],3:[],4:[],5:[U.CANDICE,U.MELONY],6:[],7:[],8:[]},[T.ISLAND]:{0:[],1:[],2:[],3:[],4:[],5:[U.NESSA],6:[],7:[],8:[]},[T.LABORATORY]:{0:[],1:[],2:[],3:[],4:[],5:[U.GIOVANNI],6:[],7:[],8:[]},[T.END]:{0:[],1:[],2:[],3:[],4:[],5:[],6:[],7:[],8:[]}};function L$(){const E=[[e.BULBASAUR,I.GRASS,I.POISON,[[T.GRASS,2]]],[e.IVYSAUR,I.GRASS,I.POISON,[[T.GRASS,2]]],[e.VENUSAUR,I.GRASS,I.POISON,[[T.GRASS,2],[T.GRASS,6]]],[e.CHARMANDER,I.FIRE,-1,[[T.VOLCANO,2]]],[e.CHARMELEON,I.FIRE,-1,[[T.VOLCANO,2]]],[e.CHARIZARD,I.FIRE,I.FLYING,[[T.VOLCANO,2],[T.VOLCANO,6]]],[e.SQUIRTLE,I.WATER,-1,[[T.LAKE,2]]],[e.WARTORTLE,I.WATER,-1,[[T.LAKE,2]]],[e.BLASTOISE,I.WATER,-1,[[T.LAKE,2],[T.LAKE,6]]],[e.CATERPIE,I.BUG,-1,[[T.TOWN,0,[S.DAWN,S.DAY]]]],[e.METAPOD,I.BUG,-1,[[T.TOWN,0,[S.DAWN,S.DAY]]]],[e.BUTTERFREE,I.BUG,I.FLYING,[[T.FOREST,0,[S.DAWN,S.DAY]]]],[e.WEEDLE,I.BUG,I.POISON,[[T.TOWN,0,[S.DUSK,S.NIGHT]]]],[e.KAKUNA,I.BUG,I.POISON,[[T.TOWN,0,[S.DUSK,S.NIGHT]]]],[e.BEEDRILL,I.BUG,I.POISON,[[T.FOREST,0,[S.DUSK,S.NIGHT]]]],[e.PIDGEY,I.NORMAL,I.FLYING,[[T.TOWN,0],[T.PLAINS,1],[T.MOUNTAIN,0]]],[e.PIDGEOTTO,I.NORMAL,I.FLYING,[[T.PLAINS,1],[T.MOUNTAIN,0]]],[e.PIDGEOT,I.NORMAL,I.FLYING,[[T.PLAINS,1],[T.MOUNTAIN,0],[T.MOUNTAIN,5]]],[e.RATTATA,I.NORMAL,-1,[[T.TOWN,0],[T.METROPOLIS,0],[T.SLUM,0]]],[e.RATICATE,I.NORMAL,-1,[[T.METROPOLIS,0],[T.SLUM,0]]],[e.SPEAROW,I.NORMAL,I.FLYING,[[T.TOWN,0],[T.PLAINS,1],[T.MOUNTAIN,0]]],[e.FEAROW,I.NORMAL,I.FLYING,[[T.PLAINS,1],[T.MOUNTAIN,0],[T.MOUNTAIN,5]]],[e.EKANS,I.POISON,-1,[[T.TOWN,1,[S.DUSK,S.NIGHT]],[T.FOREST,1],[T.SWAMP,1,[S.DAWN,S.DAY]],[T.SWAMP,0,[S.DUSK,S.NIGHT]]]],[e.ARBOK,I.POISON,-1,[[T.FOREST,1],[T.SWAMP,1,[S.DAWN,S.DAY]],[T.SWAMP,0,[S.DUSK,S.NIGHT]],[T.SWAMP,5,[S.DUSK,S.NIGHT]]]],[e.PIKACHU,I.ELECTRIC,-1,[[T.PLAINS,1],[T.METROPOLIS,1],[T.POWER_PLANT,0]]],[e.RAICHU,I.ELECTRIC,-1,[[T.POWER_PLANT,5]]],[e.SANDSHREW,I.GROUND,-1,[[T.BADLANDS,1],[T.DESERT,0]]],[e.SANDSLASH,I.GROUND,-1,[[T.BADLANDS,1],[T.DESERT,0],[T.DESERT,5]]],[e.NIDORAN_F,I.POISON,-1,[[T.TOWN,1,S.DAY],[T.TALL_GRASS,0,S.DAY]]],[e.NIDORINA,I.POISON,-1,[[T.TALL_GRASS,0,S.DAY]]],[e.NIDOQUEEN,I.POISON,I.GROUND,[[T.TALL_GRASS,5,S.DAY]]],[e.NIDORAN_M,I.POISON,-1,[[T.TOWN,1,S.DAY],[T.TALL_GRASS,0,S.DAY]]],[e.NIDORINO,I.POISON,-1,[[T.TALL_GRASS,0,S.DAY]]],[e.NIDOKING,I.POISON,I.GROUND,[[T.TALL_GRASS,5,S.DAY]]],[e.CLEFAIRY,I.FAIRY,-1,[[T.FAIRY_CAVE,1],[T.SPACE,0]]],[e.CLEFABLE,I.FAIRY,-1,[[T.SPACE,5]]],[e.VULPIX,I.FIRE,-1,[[T.TALL_GRASS,1],[T.VOLCANO,0]]],[e.NINETALES,I.FIRE,-1,[[T.VOLCANO,5]]],[e.JIGGLYPUFF,I.NORMAL,I.FAIRY,[[T.MEADOW,1],[T.FAIRY_CAVE,0]]],[e.WIGGLYTUFF,I.NORMAL,I.FAIRY,[[T.MEADOW,1],[T.FAIRY_CAVE,0],[T.FAIRY_CAVE,5]]],[e.ZUBAT,I.POISON,I.FLYING,[[T.PLAINS,0,S.NIGHT],[T.CAVE,0]]],[e.GOLBAT,I.POISON,I.FLYING,[[T.PLAINS,0,S.NIGHT],[T.CAVE,0]]],[e.ODDISH,I.GRASS,I.POISON,[[T.TOWN,1,[S.DUSK,S.NIGHT]],[T.TALL_GRASS,0,[S.DUSK,S.NIGHT]]]],[e.GLOOM,I.GRASS,I.POISON,[[T.TALL_GRASS,0,[S.DUSK,S.NIGHT]]]],[e.VILEPLUME,I.GRASS,I.POISON,[[T.TALL_GRASS,5,[S.DUSK,S.NIGHT]]]],[e.PARAS,I.BUG,I.GRASS,[[T.TOWN,1,S.NIGHT],[T.TALL_GRASS,1,S.NIGHT],[T.CAVE,0]]],[e.PARASECT,I.BUG,I.GRASS,[[T.TALL_GRASS,1,S.NIGHT],[T.CAVE,0],[T.CAVE,5]]],[e.VENONAT,I.BUG,I.POISON,[[T.TOWN,1,S.NIGHT],[T.TALL_GRASS,1,S.NIGHT],[T.FOREST,0,S.NIGHT]]],[e.VENOMOTH,I.BUG,I.POISON,[[T.TALL_GRASS,1,S.NIGHT],[T.FOREST,0,S.NIGHT],[T.FOREST,5,S.NIGHT]]],[e.DIGLETT,I.GROUND,-1,[[T.BADLANDS,0]]],[e.DUGTRIO,I.GROUND,-1,[[T.BADLANDS,0],[T.BADLANDS,5]]],[e.MEOWTH,I.NORMAL,-1,[[T.TOWN,1,[S.DUSK,S.NIGHT]],[T.PLAINS,0,[S.DUSK,S.NIGHT]]]],[e.PERSIAN,I.NORMAL,-1,[[T.PLAINS,0,[S.DUSK,S.NIGHT]],[T.PLAINS,5,[S.DUSK,S.NIGHT]]]],[e.PSYDUCK,I.WATER,-1,[[T.SWAMP,1],[T.LAKE,0]]],[e.GOLDUCK,I.WATER,-1,[[T.SWAMP,1],[T.LAKE,0],[T.LAKE,5]]],[e.MANKEY,I.FIGHTING,-1,[[T.PLAINS,1,[S.DUSK,S.NIGHT]],[T.DOJO,0]]],[e.PRIMEAPE,I.FIGHTING,-1,[[T.PLAINS,1,[S.DUSK,S.NIGHT]],[T.DOJO,0]]],[e.GROWLITHE,I.FIRE,-1,[[T.GRASS,2],[T.VOLCANO,0]]],[e.ARCANINE,I.FIRE,-1,[[T.VOLCANO,5]]],[e.POLIWAG,I.WATER,-1,[[T.SEA,1],[T.SWAMP,0]]],[e.POLIWHIRL,I.WATER,-1,[[T.SEA,1],[T.SWAMP,0]]],[e.POLIWRATH,I.WATER,I.FIGHTING,[[T.SWAMP,5]]],[e.ABRA,I.PSYCHIC,-1,[[T.TOWN,2],[T.PLAINS,2],[T.RUINS,1]]],[e.KADABRA,I.PSYCHIC,-1,[[T.PLAINS,2],[T.RUINS,1]]],[e.ALAKAZAM,I.PSYCHIC,-1,[[T.RUINS,5]]],[e.MACHOP,I.FIGHTING,-1,[[T.MOUNTAIN,1],[T.FACTORY,0],[T.CONSTRUCTION_SITE,0]]],[e.MACHOKE,I.FIGHTING,-1,[[T.MOUNTAIN,1],[T.FACTORY,0],[T.CONSTRUCTION_SITE,0]]],[e.MACHAMP,I.FIGHTING,-1,[[T.CONSTRUCTION_SITE,5]]],[e.BELLSPROUT,I.GRASS,I.POISON,[[T.TOWN,1,[S.DAWN,S.DAY]],[T.FOREST,0,[S.DAWN,S.DAY]]]],[e.WEEPINBELL,I.GRASS,I.POISON,[[T.FOREST,0,[S.DAWN,S.DAY]]]],[e.VICTREEBEL,I.GRASS,I.POISON,[[T.FOREST,5,[S.DAWN,S.DAY]]]],[e.TENTACOOL,I.WATER,I.POISON,[[T.SEA,0],[T.SEABED,1]]],[e.TENTACRUEL,I.WATER,I.POISON,[[T.SEA,0],[T.SEA,5],[T.SEABED,1]]],[e.GEODUDE,I.ROCK,I.GROUND,[[T.MOUNTAIN,1],[T.BADLANDS,0],[T.CAVE,1]]],[e.GRAVELER,I.ROCK,I.GROUND,[[T.MOUNTAIN,1],[T.BADLANDS,0],[T.CAVE,1]]],[e.GOLEM,I.ROCK,I.GROUND,[[T.BADLANDS,5]]],[e.PONYTA,I.FIRE,-1,[[T.MEADOW,1,[S.DAWN,S.DAY]],[T.VOLCANO,0]]],[e.RAPIDASH,I.FIRE,-1,[[T.MEADOW,1,[S.DAWN,S.DAY]],[T.VOLCANO,0],[T.VOLCANO,5]]],[e.SLOWPOKE,I.WATER,I.PSYCHIC,[[T.SEA,0,[S.DAWN,S.DAY]],[T.SEA,1,[S.DUSK,S.NIGHT]],[T.LAKE,1]]],[e.SLOWBRO,I.WATER,I.PSYCHIC,[[T.SEA,0,[S.DAWN,S.DAY]],[T.SEA,1,[S.DUSK,S.NIGHT]],[T.LAKE,1],[T.LAKE,5]]],[e.MAGNEMITE,I.ELECTRIC,I.STEEL,[[T.POWER_PLANT,0],[T.FACTORY,0],[T.CONSTRUCTION_SITE,0],[T.LABORATORY,0]]],[e.MAGNETON,I.ELECTRIC,I.STEEL,[[T.POWER_PLANT,0],[T.FACTORY,0],[T.CONSTRUCTION_SITE,0],[T.LABORATORY,0]]],[e.FARFETCHD,I.NORMAL,I.FLYING,[[T.PLAINS,3],[T.PLAINS,6]]],[e.DODUO,I.NORMAL,I.FLYING,[[T.PLAINS,1,[S.DAWN,S.DAY]]]],[e.DODRIO,I.NORMAL,I.FLYING,[[T.PLAINS,1,[S.DAWN,S.DAY]],[T.PLAINS,5,[S.DAWN,S.DAY]]]],[e.SEEL,I.WATER,-1,[[T.ICE_CAVE,0]]],[e.DEWGONG,I.WATER,I.ICE,[[T.ICE_CAVE,0],[T.ICE_CAVE,5]]],[e.GRIMER,I.POISON,-1,[[T.SLUM,0],[T.CONSTRUCTION_SITE,1],[T.LABORATORY,0]]],[e.MUK,I.POISON,-1,[[T.CONSTRUCTION_SITE,1],[T.SLUM,0],[T.SLUM,5],[T.LABORATORY,0],[T.LABORATORY,5]]],[e.SHELLDER,I.WATER,-1,[[T.SEA,1,[S.DUSK,S.NIGHT]],[T.BEACH,0,[S.DUSK,S.NIGHT]],[T.SEABED,1]]],[e.CLOYSTER,I.WATER,I.ICE,[[T.BEACH,5,[S.DUSK,S.NIGHT]]]],[e.GASTLY,I.GHOST,I.POISON,[[T.GRAVEYARD,0],[T.TEMPLE,0]]],[e.HAUNTER,I.GHOST,I.POISON,[[T.GRAVEYARD,0],[T.TEMPLE,0]]],[e.GENGAR,I.GHOST,I.POISON,[[T.GRAVEYARD,5]]],[e.ONIX,I.ROCK,I.GROUND,[[T.BADLANDS,2],[T.CAVE,2],[T.CAVE,5],[T.CONSTRUCTION_SITE,2]]],[e.DROWZEE,I.PSYCHIC,-1,[[T.RUINS,0]]],[e.HYPNO,I.PSYCHIC,-1,[[T.RUINS,0],[T.RUINS,5]]],[e.KRABBY,I.WATER,-1,[[T.BEACH,0]]],[e.KINGLER,I.WATER,-1,[[T.BEACH,0],[T.BEACH,5]]],[e.VOLTORB,I.ELECTRIC,-1,[[T.POWER_PLANT,0],[T.FACTORY,0],[T.LABORATORY,0]]],[e.ELECTRODE,I.ELECTRIC,-1,[[T.POWER_PLANT,0],[T.FACTORY,0],[T.LABORATORY,0],[T.LABORATORY,5]]],[e.EXEGGCUTE,I.GRASS,I.PSYCHIC,[[T.FOREST,2,[S.DAWN,S.DAY]],[T.JUNGLE,1,[S.DAWN,S.DAY]]]],[e.EXEGGUTOR,I.GRASS,I.PSYCHIC,[[T.JUNGLE,5,[S.DAWN,S.DAY]]]],[e.CUBONE,I.GROUND,-1,[[T.BADLANDS,0,S.NIGHT],[T.GRAVEYARD,1],[T.TEMPLE,1]]],[e.MAROWAK,I.GROUND,-1,[[T.BADLANDS,0,S.NIGHT],[T.GRAVEYARD,1],[T.TEMPLE,1],[T.BADLANDS,5,S.NIGHT],[T.GRAVEYARD,5,[S.DAWN,S.DAY,S.DUSK]]]],[e.HITMONLEE,I.FIGHTING,-1,[[T.DOJO,2],[T.DOJO,5],[T.CONSTRUCTION_SITE,2]]],[e.HITMONCHAN,I.FIGHTING,-1,[[T.DOJO,2],[T.DOJO,5],[T.CONSTRUCTION_SITE,2]]],[e.LICKITUNG,I.NORMAL,-1,[[T.PLAINS,3]]],[e.KOFFING,I.POISON,-1,[[T.SLUM,0],[T.CONSTRUCTION_SITE,1]]],[e.WEEZING,I.POISON,-1,[[T.SLUM,0],[T.SLUM,5],[T.CONSTRUCTION_SITE,1]]],[e.RHYHORN,I.GROUND,I.ROCK,[[T.MOUNTAIN,0,[S.DUSK,S.NIGHT]],[T.MOUNTAIN,1,[S.DAWN,S.DAY]],[T.BADLANDS,0],[T.CONSTRUCTION_SITE,1]]],[e.RHYDON,I.GROUND,I.ROCK,[[T.MOUNTAIN,0,[S.DUSK,S.NIGHT]],[T.MOUNTAIN,1,[S.DAWN,S.DAY]],[T.BADLANDS,0],[T.CONSTRUCTION_SITE,1]]],[e.CHANSEY,I.NORMAL,-1,[[T.PLAINS,3],[T.MEADOW,3]]],[e.TANGELA,I.GRASS,-1,[[T.JUNGLE,1,[S.DUSK,S.NIGHT]]]],[e.KANGASKHAN,I.NORMAL,-1,[[T.JUNGLE,3],[T.JUNGLE,6]]],[e.HORSEA,I.WATER,-1,[[T.SEA,1]]],[e.SEADRA,I.WATER,-1,[[T.SEA,1]]],[e.GOLDEEN,I.WATER,-1,[[T.LAKE,0],[T.SEA,1]]],[e.SEAKING,I.WATER,-1,[[T.LAKE,0],[T.LAKE,5],[T.SEA,1]]],[e.STARYU,I.WATER,-1,[[T.BEACH,0,[S.DAWN,S.DAY]],[T.SEA,1,[S.DAWN,S.DAY]]]],[e.STARMIE,I.WATER,I.PSYCHIC,[[T.BEACH,0,[S.DAWN,S.DAY]],[T.BEACH,5,[S.DAWN,S.DAY]],[T.SEA,1,[S.DAWN,S.DAY]]]],[e.MR_MIME,I.PSYCHIC,I.FAIRY,[[T.RUINS,2],[T.RUINS,6]]],[e.SCYTHER,I.BUG,I.FLYING,[[T.TALL_GRASS,3],[T.FOREST,2,[S.DUSK,S.NIGHT]],[T.JUNGLE,2]]],[e.JYNX,I.ICE,I.PSYCHIC,[[T.ICE_CAVE,2],[T.ICE_CAVE,6]]],[e.ELECTABUZZ,I.ELECTRIC,-1,[[T.POWER_PLANT,1]]],[e.MAGMAR,I.FIRE,-1,[[T.VOLCANO,1]]],[e.PINSIR,I.BUG,-1,[[T.TALL_GRASS,2],[T.TALL_GRASS,6]]],[e.TAUROS,I.NORMAL,-1,[[T.MEADOW,2],[T.MEADOW,5]]],[e.MAGIKARP,I.WATER,-1,[[T.SEA,0],[T.LAKE,0]]],[e.GYARADOS,I.WATER,I.FLYING,[[T.SEA,0],[T.LAKE,0],[T.LAKE,5]]],[e.LAPRAS,I.WATER,I.ICE,[[T.SEA,2],[T.ICE_CAVE,2],[T.ICE_CAVE,6]]],[e.DITTO,I.NORMAL,-1,[[T.TOWN,4],[T.PLAINS,4],[T.METROPOLIS,3],[T.CONSTRUCTION_SITE,3],[T.LABORATORY,2]]],[e.EEVEE,I.NORMAL,-1,[[T.TOWN,3],[T.PLAINS,3],[T.METROPOLIS,3],[T.MEADOW,2]]],[e.VAPOREON,I.WATER,-1,[[T.LAKE,3],[T.LAKE,6]]],[e.JOLTEON,I.ELECTRIC,-1,[[T.POWER_PLANT,3],[T.POWER_PLANT,6]]],[e.FLAREON,I.FIRE,-1,[[T.VOLCANO,3],[T.VOLCANO,6]]],[e.PORYGON,I.NORMAL,-1,[[T.FACTORY,2],[T.SPACE,3],[T.LABORATORY,2]]],[e.OMANYTE,I.ROCK,I.WATER,[[T.SEABED,3]]],[e.OMASTAR,I.ROCK,I.WATER,[[T.SEABED,3],[T.SEABED,6]]],[e.KABUTO,I.ROCK,I.WATER,[[T.SEABED,3]]],[e.KABUTOPS,I.ROCK,I.WATER,[[T.SEABED,3],[T.SEABED,6]]],[e.AERODACTYL,I.ROCK,I.FLYING,[[T.WASTELAND,3],[T.WASTELAND,6]]],[e.SNORLAX,I.NORMAL,-1,[[T.PLAINS,3],[T.PLAINS,6]]],[e.ARTICUNO,I.ICE,I.FLYING,[[T.ICE_CAVE,4],[T.ICE_CAVE,7]]],[e.ZAPDOS,I.ELECTRIC,I.FLYING,[[T.POWER_PLANT,7]]],[e.MOLTRES,I.FIRE,I.FLYING,[[T.VOLCANO,7]]],[e.DRATINI,I.DRAGON,-1,[[T.WASTELAND,2]]],[e.DRAGONAIR,I.DRAGON,-1,[[T.WASTELAND,2]]],[e.DRAGONITE,I.DRAGON,I.FLYING,[[T.WASTELAND,2],[T.WASTELAND,5]]],[e.MEWTWO,I.PSYCHIC,-1,[[T.LABORATORY,8]]],[e.MEW,I.PSYCHIC,-1,[]],[e.CHIKORITA,I.GRASS,-1,[[T.TALL_GRASS,2]]],[e.BAYLEEF,I.GRASS,-1,[[T.TALL_GRASS,2]]],[e.MEGANIUM,I.GRASS,-1,[[T.TALL_GRASS,2],[T.TALL_GRASS,6]]],[e.CYNDAQUIL,I.FIRE,-1,[[T.VOLCANO,2]]],[e.QUILAVA,I.FIRE,-1,[[T.VOLCANO,2]]],[e.TYPHLOSION,I.FIRE,-1,[[T.VOLCANO,2],[T.VOLCANO,6]]],[e.TOTODILE,I.WATER,-1,[[T.SWAMP,2]]],[e.CROCONAW,I.WATER,-1,[[T.SWAMP,2]]],[e.FERALIGATR,I.WATER,-1,[[T.SWAMP,2],[T.SWAMP,6]]],[e.SENTRET,I.NORMAL,-1,[[T.TOWN,0,[S.DAWN,S.DAY]],[T.PLAINS,0,[S.DAWN,S.DAY]]]],[e.FURRET,I.NORMAL,-1,[[T.PLAINS,0,[S.DAWN,S.DAY]],[T.PLAINS,5,[S.DAWN,S.DAY]]]],[e.HOOTHOOT,I.NORMAL,I.FLYING,[[T.TOWN,0,S.NIGHT],[T.FOREST,1,S.NIGHT]]],[e.NOCTOWL,I.NORMAL,I.FLYING,[[T.FOREST,1,S.NIGHT],[T.FOREST,5,S.NIGHT]]],[e.LEDYBA,I.BUG,I.FLYING,[[T.TOWN,0,S.DAWN],[T.MEADOW,0,S.DAWN]]],[e.LEDIAN,I.BUG,I.FLYING,[[T.MEADOW,0,S.DAWN],[T.MEADOW,5,S.DAWN]]],[e.SPINARAK,I.BUG,I.POISON,[[T.TOWN,1,S.DUSK],[T.TOWN,0,S.NIGHT],[T.TALL_GRASS,1,S.NIGHT],[T.FOREST,1,S.DUSK],[T.FOREST,0,S.NIGHT],[T.JUNGLE,1,S.DUSK],[T.JUNGLE,0,S.NIGHT]]],[e.ARIADOS,I.BUG,I.POISON,[[T.TALL_GRASS,1,S.NIGHT],[T.FOREST,1,S.DUSK],[T.FOREST,0,S.NIGHT],[T.FOREST,5,[S.DUSK,S.NIGHT]],[T.JUNGLE,1,S.DUSK],[T.JUNGLE,0,S.NIGHT]]],[e.CROBAT,I.POISON,I.FLYING,[[T.CAVE,5]]],[e.CHINCHOU,I.WATER,I.ELECTRIC,[[T.SEA,1,S.NIGHT],[T.SEABED,0]]],[e.LANTURN,I.WATER,I.ELECTRIC,[[T.SEA,1,S.NIGHT],[T.SEABED,0],[T.SEABED,5]]],[e.PICHU,I.ELECTRIC,-1,[]],[e.CLEFFA,I.FAIRY,-1,[]],[e.IGGLYBUFF,I.NORMAL,I.FAIRY,[]],[e.TOGEPI,I.FAIRY,-1,[]],[e.TOGETIC,I.FAIRY,I.FLYING,[[T.FAIRY_CAVE,1]]],[e.NATU,I.PSYCHIC,I.FLYING,[[T.MOUNTAIN,1],[T.RUINS,0],[T.TEMPLE,0]]],[e.XATU,I.PSYCHIC,I.FLYING,[[T.MOUNTAIN,1],[T.RUINS,0],[T.RUINS,5],[T.TEMPLE,0]]],[e.MAREEP,I.ELECTRIC,-1,[[T.MEADOW,1],[T.POWER_PLANT,2]]],[e.FLAAFFY,I.ELECTRIC,-1,[[T.MEADOW,1],[T.POWER_PLANT,2]]],[e.AMPHAROS,I.ELECTRIC,-1,[[T.MEADOW,1],[T.POWER_PLANT,6]]],[e.BELLOSSOM,I.GRASS,-1,[[T.TALL_GRASS,6,[S.DAWN,S.DAY]]]],[e.MARILL,I.WATER,I.FAIRY,[[T.LAKE,0,[S.DUSK,S.NIGHT]],[T.FAIRY_CAVE,0]]],[e.AZUMARILL,I.WATER,I.FAIRY,[[T.LAKE,0,[S.DUSK,S.NIGHT]],[T.LAKE,5,[S.DUSK,S.NIGHT]],[T.FAIRY_CAVE,0]]],[e.SUDOWOODO,I.ROCK,-1,[[T.GRASS,3],[T.GRASS,6]]],[e.POLITOED,I.WATER,-1,[[T.SWAMP,3],[T.SWAMP,6]]],[e.HOPPIP,I.GRASS,I.FLYING,[[T.TOWN,0,[S.DAWN,S.DAY]],[T.GRASS,0,[S.DAWN,S.DAY]]]],[e.SKIPLOOM,I.GRASS,I.FLYING,[[T.GRASS,0,[S.DAWN,S.DAY]]]],[e.JUMPLUFF,I.GRASS,I.FLYING,[[T.GRASS,5,[S.DAWN,S.DAY]]]],[e.AIPOM,I.NORMAL,-1,[[T.JUNGLE,0]]],[e.SUNKERN,I.GRASS,-1,[[T.TOWN,0,[S.DAWN,S.DAY]],[T.GRASS,0,[S.DAWN,S.DAY]]]],[e.SUNFLORA,I.GRASS,-1,[[T.GRASS,5,[S.DAWN,S.DAY]]]],[e.YANMA,I.BUG,I.FLYING,[[T.JUNGLE,2]]],[e.WOOPER,I.WATER,I.GROUND,[[T.LAKE,1],[T.SWAMP,0,[S.DAWN,S.DAY]]]],[e.QUAGSIRE,I.WATER,I.GROUND,[[T.LAKE,1],[T.SWAMP,0,[S.DAWN,S.DAY]],[T.SWAMP,5,[S.DAWN,S.DAY]]]],[e.ESPEON,I.PSYCHIC,-1,[[T.RUINS,3,S.DAY],[T.RUINS,6,S.DAY]]],[e.UMBREON,I.DARK,-1,[[T.ABYSS,3],[T.ABYSS,6]]],[e.MURKROW,I.DARK,I.FLYING,[[T.MOUNTAIN,2,S.NIGHT],[T.ABYSS,0]]],[e.SLOWKING,I.WATER,I.PSYCHIC,[[T.LAKE,3],[T.LAKE,6]]],[e.MISDREAVUS,I.GHOST,-1,[[T.GRAVEYARD,2]]],[e.UNOWN,I.PSYCHIC,-1,[[T.RUINS,0]]],[e.WOBBUFFET,I.PSYCHIC,-1,[[T.RUINS,2],[T.RUINS,6]]],[e.GIRAFARIG,I.NORMAL,I.PSYCHIC,[[T.TALL_GRASS,2]]],[e.PINECO,I.BUG,-1,[[T.FOREST,0,[S.DUSK,S.NIGHT]]]],[e.FORRETRESS,I.BUG,I.STEEL,[[T.FOREST,0,[S.DUSK,S.NIGHT]],[T.FOREST,5,[S.DUSK,S.NIGHT]]]],[e.DUNSPARCE,I.NORMAL,-1,[[T.PLAINS,3]]],[e.GLIGAR,I.GROUND,I.FLYING,[[T.BADLANDS,2]]],[e.STEELIX,I.STEEL,I.GROUND,[[T.BADLANDS,6]]],[e.SNUBBULL,I.FAIRY,-1,[[T.MEADOW,1,[S.DAWN,S.DAY]]]],[e.GRANBULL,I.FAIRY,-1,[[T.MEADOW,1,[S.DAWN,S.DAY]],[T.MEADOW,5,[S.DAWN,S.DAY]]]],[e.QWILFISH,I.WATER,I.POISON,[[T.SEABED,2],[T.SEABED,5]]],[e.SCIZOR,I.BUG,I.STEEL,[[T.JUNGLE,6]]],[e.SHUCKLE,I.BUG,I.ROCK,[[T.CAVE,3],[T.CAVE,6]]],[e.HERACROSS,I.BUG,I.FIGHTING,[[T.FOREST,2],[T.FOREST,6]]],[e.SNEASEL,I.DARK,I.ICE,[[T.ICE_CAVE,1],[T.SNOWY_FOREST,0,[S.DUSK,S.NIGHT]],[T.SNOWY_FOREST,1,[S.DAWN,S.DAY]]]],[e.TEDDIURSA,I.NORMAL,-1,[[T.FOREST,1],[T.CAVE,0],[T.SNOWY_FOREST,0,[S.DUSK,S.NIGHT]],[T.SNOWY_FOREST,1,[S.DAWN,S.DAY]]]],[e.URSARING,I.NORMAL,-1,[[T.FOREST,1],[T.CAVE,0],[T.CAVE,5],[T.SNOWY_FOREST,0,[S.DUSK,S.NIGHT]],[T.SNOWY_FOREST,1,[S.DAWN,S.DAY]]]],[e.SLUGMA,I.FIRE,-1,[[T.MOUNTAIN,1],[T.VOLCANO,0]]],[e.MAGCARGO,I.FIRE,I.ROCK,[[T.MOUNTAIN,1],[T.VOLCANO,0],[T.VOLCANO,5]]],[e.SWINUB,I.ICE,I.GROUND,[[T.ICE_CAVE,0],[T.SNOWY_FOREST,0]]],[e.PILOSWINE,I.ICE,I.GROUND,[[T.ICE_CAVE,0],[T.SNOWY_FOREST,0]]],[e.CORSOLA,I.WATER,I.ROCK,[[T.SEABED,2],[T.SEABED,5]]],[e.REMORAID,I.WATER,-1,[[T.SEABED,0]]],[e.OCTILLERY,I.WATER,-1,[[T.SEABED,2],[T.SEABED,5]]],[e.DELIBIRD,I.ICE,I.FLYING,[[T.ICE_CAVE,3],[T.SNOWY_FOREST,2]]],[e.MANTINE,I.WATER,I.FLYING,[[T.SEABED,2],[T.SEABED,5]]],[e.SKARMORY,I.STEEL,I.FLYING,[[T.MOUNTAIN,2],[T.MOUNTAIN,5]]],[e.HOUNDOUR,I.DARK,I.FIRE,[[T.METROPOLIS,0,S.NIGHT],[T.ABYSS,0]]],[e.HOUNDOOM,I.DARK,I.FIRE,[[T.METROPOLIS,0,S.NIGHT],[T.ABYSS,0],[T.ABYSS,5]]],[e.KINGDRA,I.WATER,I.DRAGON,[[T.SEA,3],[T.SEA,6]]],[e.PHANPY,I.GROUND,-1,[[T.BADLANDS,0,[S.DAWN,S.DAY]]]],[e.DONPHAN,I.GROUND,-1,[[T.BADLANDS,0,[S.DAWN,S.DAY]],[T.BADLANDS,5,[S.DAWN,S.DAY]]]],[e.PORYGON2,I.NORMAL,-1,[[T.FACTORY,2],[T.SPACE,3],[T.LABORATORY,2]]],[e.STANTLER,I.NORMAL,-1,[[T.FOREST,2,[S.DAWN,S.DAY]],[T.FOREST,6,[S.DAWN,S.DAY]],[T.SNOWY_FOREST,1,[S.DAWN,S.DAY]]]],[e.SMEARGLE,I.NORMAL,-1,[[T.METROPOLIS,3]]],[e.TYROGUE,I.FIGHTING,-1,[]],[e.HITMONTOP,I.FIGHTING,-1,[[T.DOJO,3],[T.DOJO,6],[T.CONSTRUCTION_SITE,3]]],[e.SMOOCHUM,I.ICE,I.PSYCHIC,[]],[e.ELEKID,I.ELECTRIC,-1,[]],[e.MAGBY,I.FIRE,-1,[]],[e.MILTANK,I.NORMAL,-1,[[T.MEADOW,2],[T.MEADOW,5]]],[e.BLISSEY,I.NORMAL,-1,[[T.MEADOW,6]]],[e.RAIKOU,I.ELECTRIC,-1,[[T.POWER_PLANT,4],[T.POWER_PLANT,7]]],[e.ENTEI,I.FIRE,-1,[[T.VOLCANO,4],[T.VOLCANO,7]]],[e.SUICUNE,I.WATER,-1,[[T.LAKE,4],[T.LAKE,7]]],[e.LARVITAR,I.ROCK,I.GROUND,[[T.MOUNTAIN,3],[T.WASTELAND,0,[S.DUSK,S.NIGHT]]]],[e.PUPITAR,I.ROCK,I.GROUND,[[T.MOUNTAIN,3],[T.WASTELAND,0,[S.DUSK,S.NIGHT]]]],[e.TYRANITAR,I.ROCK,I.DARK,[[T.WASTELAND,0,[S.DUSK,S.NIGHT]],[T.WASTELAND,5,[S.DUSK,S.NIGHT]]]],[e.LUGIA,I.PSYCHIC,I.FLYING,[[T.SEA,8]]],[e.HO_OH,I.FIRE,I.FLYING,[[T.MOUNTAIN,8]]],[e.CELEBI,I.PSYCHIC,I.GRASS,[]],[e.TREECKO,I.GRASS,-1,[[T.FOREST,2]]],[e.GROVYLE,I.GRASS,-1,[[T.FOREST,2]]],[e.SCEPTILE,I.GRASS,-1,[[T.FOREST,2],[T.FOREST,6]]],[e.TORCHIC,I.FIRE,-1,[[T.MOUNTAIN,2]]],[e.COMBUSKEN,I.FIRE,I.FIGHTING,[[T.MOUNTAIN,2]]],[e.BLAZIKEN,I.FIRE,I.FIGHTING,[[T.MOUNTAIN,2],[T.MOUNTAIN,6]]],[e.MUDKIP,I.WATER,-1,[[T.SWAMP,2]]],[e.MARSHTOMP,I.WATER,I.GROUND,[[T.SWAMP,2]]],[e.SWAMPERT,I.WATER,I.GROUND,[[T.SWAMP,2],[T.SWAMP,6]]],[e.POOCHYENA,I.DARK,-1,[[T.TOWN,1,[S.DAWN,S.DAY]],[T.TOWN,0,[S.DUSK,S.NIGHT]],[T.PLAINS,1,[S.DAWN,S.DAY]],[T.PLAINS,0,[S.DUSK,S.NIGHT]]]],[e.MIGHTYENA,I.DARK,-1,[[T.PLAINS,1,[S.DAWN,S.DAY]],[T.PLAINS,0,[S.DUSK,S.NIGHT]],[T.PLAINS,5,[S.DUSK,S.NIGHT]]]],[e.ZIGZAGOON,I.NORMAL,-1,[[T.TOWN,0],[T.PLAINS,0],[T.METROPOLIS,0]]],[e.LINOONE,I.NORMAL,-1,[[T.PLAINS,0],[T.PLAINS,5],[T.METROPOLIS,0]]],[e.WURMPLE,I.BUG,-1,[[T.TOWN,0]]],[e.SILCOON,I.BUG,-1,[[T.TOWN,0,S.DAY]]],[e.BEAUTIFLY,I.BUG,I.FLYING,[[T.FOREST,0,S.DAY],[T.FOREST,5,S.DAY]]],[e.CASCOON,I.BUG,-1,[[T.TOWN,0,S.NIGHT]]],[e.DUSTOX,I.BUG,I.POISON,[[T.FOREST,0,S.NIGHT],[T.FOREST,5,S.NIGHT]]],[e.LOTAD,I.WATER,I.GRASS,[[T.TOWN,1,[S.DAWN,S.DAY]],[T.LAKE,0,[S.DAWN,S.DAY]],[T.SWAMP,0,[S.DAWN,S.DAY]]]],[e.LOMBRE,I.WATER,I.GRASS,[[T.LAKE,0,[S.DAWN,S.DAY]],[T.SWAMP,0,[S.DAWN,S.DAY]]]],[e.LUDICOLO,I.WATER,I.GRASS,[[T.SWAMP,5,[S.DAWN,S.DAY]]]],[e.SEEDOT,I.GRASS,-1,[[T.TOWN,1,[S.DUSK,S.NIGHT]],[T.GRASS,0,[S.DUSK,S.NIGHT]],[T.FOREST,0,[S.DUSK,S.NIGHT]]]],[e.NUZLEAF,I.GRASS,I.DARK,[[T.GRASS,0,[S.DUSK,S.NIGHT]],[T.FOREST,0,[S.DUSK,S.NIGHT]]]],[e.SHIFTRY,I.GRASS,I.DARK,[[T.FOREST,5,[S.DUSK,S.NIGHT]]]],[e.TAILLOW,I.NORMAL,I.FLYING,[[T.TOWN,0],[T.MOUNTAIN,0,[S.DAWN,S.DAY]]]],[e.SWELLOW,I.NORMAL,I.FLYING,[[T.MOUNTAIN,0,[S.DAWN,S.DAY]],[T.MOUNTAIN,5,[S.DAWN,S.DAY]]]],[e.WINGULL,I.WATER,I.FLYING,[[T.SEA,0,[S.DAWN,S.DAY]]]],[e.PELIPPER,I.WATER,I.FLYING,[[T.SEA,0,[S.DAWN,S.DAY]],[T.SEA,5,[S.DAWN,S.DAY]]]],[e.RALTS,I.PSYCHIC,I.FAIRY,[[T.TOWN,3],[T.MEADOW,1],[T.FAIRY_CAVE,1]]],[e.KIRLIA,I.PSYCHIC,I.FAIRY,[[T.MEADOW,1],[T.FAIRY_CAVE,1]]],[e.GARDEVOIR,I.PSYCHIC,I.FAIRY,[[T.MEADOW,1],[T.MEADOW,5],[T.FAIRY_CAVE,1]]],[e.SURSKIT,I.BUG,I.WATER,[[T.TOWN,2],[T.LAKE,1]]],[e.MASQUERAIN,I.BUG,I.FLYING,[[T.LAKE,1],[T.LAKE,5]]],[e.SHROOMISH,I.GRASS,-1,[[T.TOWN,1,[S.DUSK,S.NIGHT]],[T.GRASS,0,[S.DUSK,S.NIGHT]],[T.FOREST,0,[S.DUSK,S.NIGHT]],[T.JUNGLE,0,[S.DUSK,S.NIGHT]]]],[e.BRELOOM,I.GRASS,I.FIGHTING,[[T.GRASS,0,[S.DUSK,S.NIGHT]],[T.FOREST,0,[S.DUSK,S.NIGHT]],[T.FOREST,5,[S.DUSK,S.NIGHT]],[T.JUNGLE,5,[S.DUSK,S.NIGHT]]]],[e.SLAKOTH,I.NORMAL,-1,[[T.JUNGLE,2]]],[e.VIGOROTH,I.NORMAL,-1,[[T.JUNGLE,2]]],[e.SLAKING,I.NORMAL,-1,[[T.JUNGLE,2],[T.JUNGLE,6]]],[e.NINCADA,I.BUG,I.GROUND,[[T.TOWN,1],[T.TALL_GRASS,0]]],[e.NINJASK,I.BUG,I.FLYING,[[T.TALL_GRASS,0],[T.TALL_GRASS,5]]],[e.SHEDINJA,I.BUG,I.GHOST,[[T.TALL_GRASS,3]]],[e.WHISMUR,I.NORMAL,-1,[[T.TOWN,1],[T.CAVE,0]]],[e.LOUDRED,I.NORMAL,-1,[[T.CAVE,0]]],[e.EXPLOUD,I.NORMAL,-1,[[T.CAVE,0],[T.CAVE,5]]],[e.MAKUHITA,I.FIGHTING,-1,[[T.CAVE,1],[T.DOJO,0]]],[e.HARIYAMA,I.FIGHTING,-1,[[T.CAVE,1],[T.DOJO,0],[T.DOJO,5]]],[e.AZURILL,I.NORMAL,I.FAIRY,[]],[e.NOSEPASS,I.ROCK,-1,[[T.CAVE,1]]],[e.SKITTY,I.NORMAL,-1,[[T.TOWN,1,[S.DAWN,S.DAY]],[T.MEADOW,1,[S.DAWN,S.DAY]]]],[e.DELCATTY,I.NORMAL,-1,[[T.MEADOW,1,[S.DAWN,S.DAY]],[T.MEADOW,5,[S.DAWN,S.DAY]]]],[e.SABLEYE,I.DARK,I.GHOST,[[T.ABYSS,0],[T.ABYSS,5]]],[e.MAWILE,I.STEEL,I.FAIRY,[[T.FAIRY_CAVE,0],[T.FAIRY_CAVE,5]]],[e.ARON,I.STEEL,I.ROCK,[[T.MOUNTAIN,1,[S.DAWN,S.DAY]],[T.MOUNTAIN,0,[S.DUSK,S.NIGHT]]]],[e.LAIRON,I.STEEL,I.ROCK,[[T.MOUNTAIN,1,[S.DAWN,S.DAY]],[T.MOUNTAIN,0,[S.DUSK,S.NIGHT]]]],[e.AGGRON,I.STEEL,I.ROCK,[[T.MOUNTAIN,1,[S.DAWN,S.DAY]],[T.MOUNTAIN,0,[S.DUSK,S.NIGHT]],[T.MOUNTAIN,5]]],[e.MEDITITE,I.FIGHTING,I.PSYCHIC,[[T.DOJO,0]]],[e.MEDICHAM,I.FIGHTING,I.PSYCHIC,[[T.DOJO,0],[T.DOJO,5]]],[e.ELECTRIKE,I.ELECTRIC,-1,[[T.POWER_PLANT,0]]],[e.MANECTRIC,I.ELECTRIC,-1,[[T.POWER_PLANT,0],[T.POWER_PLANT,5]]],[e.PLUSLE,I.ELECTRIC,-1,[[T.POWER_PLANT,1]]],[e.MINUN,I.ELECTRIC,-1,[[T.POWER_PLANT,1]]],[e.VOLBEAT,I.BUG,-1,[[T.MEADOW,2,S.NIGHT]]],[e.ILLUMISE,I.BUG,-1,[[T.MEADOW,2,S.NIGHT]]],[e.ROSELIA,I.GRASS,I.POISON,[[T.FOREST,1,[S.DAWN,S.DAY]],[T.MEADOW,0,[S.DAWN,S.DAY]]]],[e.GULPIN,I.POISON,-1,[[T.SWAMP,0]]],[e.SWALOT,I.POISON,-1,[[T.SWAMP,0],[T.SWAMP,5]]],[e.CARVANHA,I.WATER,I.DARK,[[T.SEA,1,[S.DUSK,S.NIGHT]]]],[e.SHARPEDO,I.WATER,I.DARK,[[T.SEA,1,[S.DUSK,S.NIGHT]],[T.SEA,5,[S.DUSK,S.NIGHT]]]],[e.WAILMER,I.WATER,-1,[[T.SEA,1],[T.SEABED,1]]],[e.WAILORD,I.WATER,-1,[[T.SEA,1],[T.SEABED,1],[T.SEABED,5]]],[e.NUMEL,I.FIRE,I.GROUND,[[T.BADLANDS,1],[T.VOLCANO,0]]],[e.CAMERUPT,I.FIRE,I.GROUND,[[T.BADLANDS,1],[T.VOLCANO,0],[T.VOLCANO,5]]],[e.TORKOAL,I.FIRE,-1,[[T.VOLCANO,1],[T.VOLCANO,5]]],[e.SPOINK,I.PSYCHIC,-1,[[T.MOUNTAIN,2],[T.RUINS,0]]],[e.GRUMPIG,I.PSYCHIC,-1,[[T.MOUNTAIN,2],[T.RUINS,0],[T.RUINS,5]]],[e.SPINDA,I.NORMAL,-1,[[T.MEADOW,2]]],[e.TRAPINCH,I.GROUND,-1,[[T.DESERT,0,[S.DAWN,S.DAY]]]],[e.VIBRAVA,I.GROUND,I.DRAGON,[[T.DESERT,2,[S.DAWN,S.DAY]],[T.WASTELAND,0]]],[e.FLYGON,I.GROUND,I.DRAGON,[[T.DESERT,2,[S.DAWN,S.DAY]],[T.WASTELAND,0],[T.WASTELAND,5]]],[e.CACNEA,I.GRASS,-1,[[T.DESERT,0,[S.DUSK,S.NIGHT]]]],[e.CACTURNE,I.GRASS,I.DARK,[[T.DESERT,0,[S.DUSK,S.NIGHT]],[T.DESERT,5,[S.DUSK,S.NIGHT]]]],[e.SWABLU,I.NORMAL,I.FLYING,[[T.MOUNTAIN,0,[S.DAWN,S.DAY]],[T.WASTELAND,1]]],[e.ALTARIA,I.DRAGON,I.FLYING,[[T.MOUNTAIN,0,[S.DAWN,S.DAY]],[T.MOUNTAIN,5,[S.DAWN,S.DAY]],[T.WASTELAND,1]]],[e.ZANGOOSE,I.NORMAL,-1,[[T.TALL_GRASS,2],[T.TALL_GRASS,5]]],[e.SEVIPER,I.POISON,-1,[[T.JUNGLE,2],[T.JUNGLE,5]]],[e.LUNATONE,I.ROCK,I.PSYCHIC,[[T.SPACE,0,S.NIGHT],[T.SPACE,5,S.NIGHT]]],[e.SOLROCK,I.ROCK,I.PSYCHIC,[[T.SPACE,0,S.DAY],[T.SPACE,5,S.DAY]]],[e.BARBOACH,I.WATER,I.GROUND,[[T.SWAMP,1]]],[e.WHISCASH,I.WATER,I.GROUND,[[T.SWAMP,1],[T.SWAMP,5]]],[e.CORPHISH,I.WATER,-1,[[T.BEACH,0]]],[e.CRAWDAUNT,I.WATER,I.DARK,[[T.BEACH,0],[T.BEACH,5]]],[e.BALTOY,I.GROUND,I.PSYCHIC,[[T.RUINS,0],[T.SPACE,1],[T.TEMPLE,1]]],[e.CLAYDOL,I.GROUND,I.PSYCHIC,[[T.RUINS,0],[T.RUINS,5],[T.SPACE,1],[T.TEMPLE,1]]],[e.LILEEP,I.ROCK,I.GRASS,[[T.DESERT,3]]],[e.CRADILY,I.ROCK,I.GRASS,[[T.DESERT,3],[T.DESERT,6]]],[e.ANORITH,I.ROCK,I.BUG,[[T.DESERT,3]]],[e.ARMALDO,I.ROCK,I.BUG,[[T.DESERT,3],[T.DESERT,6]]],[e.FEEBAS,I.WATER,-1,[[T.SEABED,4]]],[e.MILOTIC,I.WATER,-1,[[T.SEABED,7]]],[e.CASTFORM,I.NORMAL,-1,[[T.METROPOLIS,4],[T.METROPOLIS,6]]],[e.KECLEON,I.NORMAL,-1,[[T.TALL_GRASS,2],[T.TALL_GRASS,5]]],[e.SHUPPET,I.GHOST,-1,[[T.GRAVEYARD,0]]],[e.BANETTE,I.GHOST,-1,[[T.GRAVEYARD,0],[T.GRAVEYARD,5]]],[e.DUSKULL,I.GHOST,-1,[[T.GRAVEYARD,0],[T.TEMPLE,0]]],[e.DUSCLOPS,I.GHOST,-1,[[T.GRAVEYARD,0],[T.TEMPLE,0]]],[e.TROPIUS,I.GRASS,I.FLYING,[[T.TALL_GRASS,2],[T.FOREST,2],[T.JUNGLE,1,[S.DAWN,S.DAY]],[T.JUNGLE,5,[S.DAWN,S.DAY]]]],[e.CHIMECHO,I.PSYCHIC,-1,[[T.TEMPLE,1],[T.TEMPLE,5]]],[e.ABSOL,I.DARK,-1,[[T.ABYSS,2],[T.ABYSS,5]]],[e.WYNAUT,I.PSYCHIC,-1,[]],[e.SNORUNT,I.ICE,-1,[[T.ICE_CAVE,1]]],[e.GLALIE,I.ICE,-1,[[T.ICE_CAVE,1],[T.ICE_CAVE,5]]],[e.SPHEAL,I.ICE,I.WATER,[[T.ICE_CAVE,1]]],[e.SEALEO,I.ICE,I.WATER,[[T.ICE_CAVE,1]]],[e.WALREIN,I.ICE,I.WATER,[[T.ICE_CAVE,1],[T.ICE_CAVE,5]]],[e.CLAMPERL,I.WATER,-1,[[T.SEABED,0]]],[e.HUNTAIL,I.WATER,-1,[[T.SEABED,5]]],[e.GOREBYSS,I.WATER,-1,[[T.SEABED,5]]],[e.RELICANTH,I.WATER,I.ROCK,[[T.SEABED,3],[T.SEABED,6]]],[e.LUVDISC,I.WATER,-1,[[T.SEABED,1],[T.SEABED,5]]],[e.BAGON,I.DRAGON,-1,[[T.WASTELAND,0,[S.DAWN,S.DAY]]]],[e.SHELGON,I.DRAGON,-1,[[T.WASTELAND,0,[S.DAWN,S.DAY]]]],[e.SALAMENCE,I.DRAGON,I.FLYING,[[T.WASTELAND,0,[S.DAWN,S.DAY]],[T.WASTELAND,5,[S.DAWN,S.DAY]]]],[e.BELDUM,I.STEEL,I.PSYCHIC,[[T.FACTORY,3],[T.SPACE,2]]],[e.METANG,I.STEEL,I.PSYCHIC,[[T.FACTORY,3],[T.SPACE,2]]],[e.METAGROSS,I.STEEL,I.PSYCHIC,[[T.FACTORY,3],[T.SPACE,2],[T.SPACE,6]]],[e.REGIROCK,I.ROCK,-1,[[T.DESERT,4],[T.DESERT,7]]],[e.REGICE,I.ICE,-1,[[T.ICE_CAVE,4],[T.ICE_CAVE,7]]],[e.REGISTEEL,I.STEEL,-1,[[T.RUINS,4],[T.RUINS,7]]],[e.LATIAS,I.DRAGON,I.PSYCHIC,[[T.PLAINS,4],[T.PLAINS,7]]],[e.LATIOS,I.DRAGON,I.PSYCHIC,[[T.PLAINS,4],[T.PLAINS,7]]],[e.KYOGRE,I.WATER,-1,[[T.SEABED,8]]],[e.GROUDON,I.GROUND,-1,[[T.BADLANDS,8]]],[e.RAYQUAZA,I.DRAGON,I.FLYING,[[T.SPACE,8]]],[e.JIRACHI,I.STEEL,I.PSYCHIC,[]],[e.DEOXYS,I.PSYCHIC,-1,[]],[e.TURTWIG,I.GRASS,-1,[[T.GRASS,2]]],[e.GROTLE,I.GRASS,-1,[[T.GRASS,2]]],[e.TORTERRA,I.GRASS,I.GROUND,[[T.GRASS,2],[T.GRASS,6]]],[e.CHIMCHAR,I.FIRE,-1,[[T.VOLCANO,2]]],[e.MONFERNO,I.FIRE,I.FIGHTING,[[T.VOLCANO,2]]],[e.INFERNAPE,I.FIRE,I.FIGHTING,[[T.VOLCANO,2],[T.VOLCANO,6]]],[e.PIPLUP,I.WATER,-1,[[T.SEA,2]]],[e.PRINPLUP,I.WATER,-1,[[T.SEA,2]]],[e.EMPOLEON,I.WATER,I.STEEL,[[T.SEA,2],[T.SEA,6]]],[e.STARLY,I.NORMAL,I.FLYING,[[T.TOWN,0,[S.DAWN,S.DAY]],[T.PLAINS,1,[S.DAWN,S.DAY]],[T.MOUNTAIN,0,[S.DAWN,S.DAY]]]],[e.STARAVIA,I.NORMAL,I.FLYING,[[T.PLAINS,1,[S.DAWN,S.DAY]],[T.MOUNTAIN,0,[S.DAWN,S.DAY]]]],[e.STARAPTOR,I.NORMAL,I.FLYING,[[T.PLAINS,1,[S.DAWN,S.DAY]],[T.MOUNTAIN,0,[S.DAWN,S.DAY]],[T.MOUNTAIN,5,[S.DAWN,S.DAY]]]],[e.BIDOOF,I.NORMAL,-1,[[T.TOWN,0],[T.PLAINS,0]]],[e.BIBAREL,I.NORMAL,I.WATER,[[T.PLAINS,0],[T.PLAINS,5]]],[e.KRICKETOT,I.BUG,-1,[[T.TOWN,1,[S.DUSK,S.NIGHT]],[T.TALL_GRASS,0,[S.DUSK,S.NIGHT]]]],[e.KRICKETUNE,I.BUG,-1,[[T.TALL_GRASS,0,[S.DUSK,S.NIGHT]],[T.TALL_GRASS,5,[S.DUSK,S.NIGHT]]]],[e.SHINX,I.ELECTRIC,-1,[[T.PLAINS,2,[S.DUSK,S.NIGHT]],[T.POWER_PLANT,0]]],[e.LUXIO,I.ELECTRIC,-1,[[T.PLAINS,2,[S.DUSK,S.NIGHT]],[T.POWER_PLANT,0]]],[e.LUXRAY,I.ELECTRIC,-1,[[T.PLAINS,2,[S.DUSK,S.NIGHT]],[T.POWER_PLANT,0],[T.POWER_PLANT,5]]],[e.BUDEW,I.GRASS,I.POISON,[]],[e.ROSERADE,I.GRASS,I.POISON,[[T.MEADOW,5,[S.DAWN,S.DAY]]]],[e.CRANIDOS,I.ROCK,-1,[[T.MOUNTAIN,3]]],[e.RAMPARDOS,I.ROCK,-1,[[T.MOUNTAIN,3],[T.MOUNTAIN,6]]],[e.SHIELDON,I.ROCK,I.STEEL,[[T.MOUNTAIN,3]]],[e.BASTIODON,I.ROCK,I.STEEL,[[T.MOUNTAIN,3],[T.MOUNTAIN,6]]],[e.BURMY,I.BUG,-1,[[T.FOREST,1],[T.BEACH,1],[T.SLUM,1]]],[e.WORMADAM,I.BUG,I.GRASS,[[T.FOREST,1],[T.FOREST,5],[T.BEACH,1],[T.BEACH,5],[T.SLUM,1],[T.SLUM,5]]],[e.MOTHIM,I.BUG,I.FLYING,[[T.FOREST,1,[S.DAWN,S.DAY]],[T.FOREST,5,[S.DAWN,S.DAY]]]],[e.COMBEE,I.BUG,I.FLYING,[[T.TOWN,1,[S.DAWN,S.DAY]],[T.GRASS,1,[S.DAWN,S.DAY]],[T.FOREST,0,[S.DAWN,S.DAY]],[T.JUNGLE,1,[S.DAWN,S.DAY]]]],[e.VESPIQUEN,I.BUG,I.FLYING,[[T.GRASS,1,[S.DAWN,S.DAY]],[T.FOREST,0,[S.DAWN,S.DAY]],[T.FOREST,5,[S.DAWN,S.DAY]],[T.JUNGLE,0,[S.DAWN,S.DAY]]]],[e.PACHIRISU,I.ELECTRIC,-1,[[T.POWER_PLANT,1]]],[e.BUIZEL,I.WATER,-1,[[T.SEA,0]]],[e.FLOATZEL,I.WATER,-1,[[T.SEA,0],[T.SEA,5]]],[e.CHERUBI,I.GRASS,-1,[[T.TOWN,1,[S.DAWN,S.DAY]],[T.GRASS,1,[S.DAWN,S.DAY]],[T.JUNGLE,0,[S.DAWN,S.DAY]]]],[e.CHERRIM,I.GRASS,-1,[[T.GRASS,1,[S.DAWN,S.DAY]],[T.JUNGLE,0,[S.DAWN,S.DAY]],[T.JUNGLE,5,[S.DAWN,S.DAY]]]],[e.SHELLOS,I.WATER,-1,[[T.SWAMP,0],[T.SEABED,1]]],[e.GASTRODON,I.WATER,I.GROUND,[[T.SWAMP,0],[T.SWAMP,5],[T.SEABED,1]]],[e.AMBIPOM,I.NORMAL,-1,[[T.JUNGLE,5]]],[e.DRIFLOON,I.GHOST,I.FLYING,[[T.GRAVEYARD,0]]],[e.DRIFBLIM,I.GHOST,I.FLYING,[[T.GRAVEYARD,0],[T.GRAVEYARD,5]]],[e.BUNEARY,I.NORMAL,-1,[[T.PLAINS,2]]],[e.LOPUNNY,I.NORMAL,-1,[[T.PLAINS,2],[T.PLAINS,5]]],[e.MISMAGIUS,I.GHOST,-1,[[T.GRAVEYARD,5]]],[e.HONCHKROW,I.DARK,I.FLYING,[[T.ABYSS,5]]],[e.GLAMEOW,I.NORMAL,-1,[[T.METROPOLIS,1],[T.MEADOW,1]]],[e.PURUGLY,I.NORMAL,-1,[[T.METROPOLIS,1],[T.MEADOW,1],[T.MEADOW,5]]],[e.CHINGLING,I.PSYCHIC,-1,[[T.TEMPLE,1]]],[e.STUNKY,I.POISON,I.DARK,[[T.SLUM,1,[S.DUSK,S.NIGHT]]]],[e.SKUNTANK,I.POISON,I.DARK,[[T.SLUM,1,[S.DUSK,S.NIGHT]],[T.SLUM,5,[S.DUSK,S.NIGHT]]]],[e.BRONZOR,I.STEEL,I.PSYCHIC,[[T.FACTORY,1],[T.SPACE,0],[T.LABORATORY,0]]],[e.BRONZONG,I.STEEL,I.PSYCHIC,[[T.FACTORY,1],[T.SPACE,0],[T.SPACE,5],[T.LABORATORY,0],[T.LABORATORY,5]]],[e.BONSLY,I.ROCK,-1,[]],[e.MIME_JR,I.PSYCHIC,I.FAIRY,[]],[e.HAPPINY,I.NORMAL,-1,[]],[e.CHATOT,I.NORMAL,I.FLYING,[[T.JUNGLE,3]]],[e.SPIRITOMB,I.GHOST,I.DARK,[[T.GRAVEYARD,3],[T.ABYSS,2],[T.ABYSS,5]]],[e.GIBLE,I.DRAGON,I.GROUND,[[T.MOUNTAIN,3],[T.WASTELAND,0]]],[e.GABITE,I.DRAGON,I.GROUND,[[T.MOUNTAIN,3],[T.WASTELAND,0]]],[e.GARCHOMP,I.DRAGON,I.GROUND,[[T.MOUNTAIN,3],[T.WASTELAND,0],[T.WASTELAND,5]]],[e.MUNCHLAX,I.NORMAL,-1,[]],[e.RIOLU,I.FIGHTING,-1,[]],[e.LUCARIO,I.FIGHTING,I.STEEL,[[T.DOJO,2],[T.DOJO,5]]],[e.HIPPOPOTAS,I.GROUND,-1,[[T.DESERT,0,[S.DAWN,S.DAY]]]],[e.HIPPOWDON,I.GROUND,-1,[[T.DESERT,0,[S.DAWN,S.DAY]],[T.DESERT,5,[S.DAWN,S.DAY]]]],[e.SKORUPI,I.POISON,I.BUG,[[T.SWAMP,1],[T.DESERT,0],[T.TEMPLE,1]]],[e.DRAPION,I.POISON,I.DARK,[[T.SWAMP,1],[T.DESERT,0],[T.DESERT,5],[T.TEMPLE,1]]],[e.CROAGUNK,I.POISON,I.FIGHTING,[[T.SWAMP,1,[S.DUSK,S.NIGHT]],[T.DOJO,1]]],[e.TOXICROAK,I.POISON,I.FIGHTING,[[T.SWAMP,1,[S.DUSK,S.NIGHT]],[T.DOJO,1],[T.DOJO,5]]],[e.CARNIVINE,I.GRASS,-1,[[T.JUNGLE,2],[T.JUNGLE,5]]],[e.FINNEON,I.WATER,-1,[[T.SEA,0,S.NIGHT]]],[e.LUMINEON,I.WATER,-1,[[T.SEA,0,S.NIGHT],[T.SEA,5,S.NIGHT]]],[e.MANTYKE,I.WATER,I.FLYING,[[T.SEABED,2]]],[e.SNOVER,I.GRASS,I.ICE,[[T.ICE_CAVE,0],[T.SNOWY_FOREST,0]]],[e.ABOMASNOW,I.GRASS,I.ICE,[[T.ICE_CAVE,0],[T.SNOWY_FOREST,0],[T.SNOWY_FOREST,5]]],[e.WEAVILE,I.DARK,I.ICE,[[T.ICE_CAVE,5]]],[e.MAGNEZONE,I.ELECTRIC,I.STEEL,[[T.POWER_PLANT,5],[T.LABORATORY,5]]],[e.LICKILICKY,I.NORMAL,-1,[[T.PLAINS,6]]],[e.RHYPERIOR,I.GROUND,I.ROCK,[[T.BADLANDS,5]]],[e.TANGROWTH,I.GRASS,-1,[[T.JUNGLE,5,[S.DUSK,S.NIGHT]]]],[e.ELECTIVIRE,I.ELECTRIC,-1,[[T.POWER_PLANT,5]]],[e.MAGMORTAR,I.FIRE,-1,[[T.VOLCANO,5]]],[e.TOGEKISS,I.FAIRY,I.FLYING,[[T.FAIRY_CAVE,5]]],[e.YANMEGA,I.BUG,I.FLYING,[[T.JUNGLE,5]]],[e.LEAFEON,I.GRASS,-1,[[T.JUNGLE,6]]],[e.GLACEON,I.ICE,-1,[[T.ICE_CAVE,6]]],[e.GLISCOR,I.GROUND,I.FLYING,[[T.BADLANDS,5]]],[e.MAMOSWINE,I.ICE,I.GROUND,[[T.ICE_CAVE,5]]],[e.PORYGON_Z,I.NORMAL,-1,[[T.SPACE,6],[T.LABORATORY,5]]],[e.GALLADE,I.PSYCHIC,I.FIGHTING,[[T.DOJO,3],[T.DOJO,6]]],[e.PROBOPASS,I.ROCK,I.STEEL,[[T.CAVE,5]]],[e.DUSKNOIR,I.GHOST,-1,[[T.GRAVEYARD,5]]],[e.FROSLASS,I.ICE,I.GHOST,[[T.ICE_CAVE,2],[T.ICE_CAVE,5]]],[e.ROTOM,I.ELECTRIC,I.GHOST,[[T.LABORATORY,3],[T.LABORATORY,7],[T.VOLCANO,3],[T.VOLCANO,7],[T.SEA,3],[T.SEA,7],[T.ICE_CAVE,3],[T.ICE_CAVE,7],[T.MOUNTAIN,3],[T.MOUNTAIN,7],[T.TALL_GRASS,3],[T.TALL_GRASS,7]]],[e.UXIE,I.PSYCHIC,-1,[[T.CAVE,4],[T.CAVE,7]]],[e.MESPRIT,I.PSYCHIC,-1,[[T.LAKE,4],[T.LAKE,7]]],[e.AZELF,I.PSYCHIC,-1,[[T.SWAMP,4],[T.SWAMP,7]]],[e.DIALGA,I.STEEL,I.DRAGON,[[T.WASTELAND,8]]],[e.PALKIA,I.WATER,I.DRAGON,[[T.ABYSS,8]]],[e.HEATRAN,I.FIRE,I.STEEL,[[T.VOLCANO,4],[T.VOLCANO,7]]],[e.REGIGIGAS,I.NORMAL,-1,[[T.TEMPLE,8]]],[e.GIRATINA,I.GHOST,I.DRAGON,[[T.GRAVEYARD,8]]],[e.CRESSELIA,I.PSYCHIC,-1,[[T.BEACH,4],[T.BEACH,7]]],[e.PHIONE,I.WATER,-1,[]],[e.MANAPHY,I.WATER,-1,[]],[e.DARKRAI,I.DARK,-1,[[T.ABYSS,4],[T.ABYSS,7]]],[e.SHAYMIN,I.GRASS,-1,[[T.MEADOW,8]]],[e.ARCEUS,I.NORMAL,-1,[]],[e.VICTINI,I.PSYCHIC,I.FIRE,[]],[e.SNIVY,I.GRASS,-1,[[T.JUNGLE,2]]],[e.SERVINE,I.GRASS,-1,[[T.JUNGLE,2]]],[e.SERPERIOR,I.GRASS,-1,[[T.JUNGLE,2],[T.JUNGLE,6]]],[e.TEPIG,I.FIRE,-1,[[T.VOLCANO,2]]],[e.PIGNITE,I.FIRE,I.FIGHTING,[[T.VOLCANO,2]]],[e.EMBOAR,I.FIRE,I.FIGHTING,[[T.VOLCANO,2],[T.VOLCANO,6]]],[e.OSHAWOTT,I.WATER,-1,[[T.LAKE,2]]],[e.DEWOTT,I.WATER,-1,[[T.LAKE,2]]],[e.SAMUROTT,I.WATER,-1,[[T.LAKE,2],[T.LAKE,6]]],[e.PATRAT,I.NORMAL,-1,[[T.TOWN,1,[S.DAWN,S.DAY]],[T.TOWN,0,[S.DUSK,S.NIGHT]],[T.METROPOLIS,1,[S.DAWN,S.DAY]],[T.METROPOLIS,0,[S.DUSK,S.NIGHT]],[T.SLUM,0,[S.DUSK,S.NIGHT]]]],[e.WATCHOG,I.NORMAL,-1,[[T.METROPOLIS,1,[S.DAWN,S.DAY]],[T.METROPOLIS,0,[S.DUSK,S.NIGHT]],[T.SLUM,0,[S.DUSK,S.NIGHT]],[T.SLUM,5,[S.DUSK,S.NIGHT]]]],[e.LILLIPUP,I.NORMAL,-1,[[T.TOWN,0],[T.METROPOLIS,0]]],[e.HERDIER,I.NORMAL,-1,[[T.METROPOLIS,0]]],[e.STOUTLAND,I.NORMAL,-1,[[T.METROPOLIS,0],[T.METROPOLIS,5]]],[e.PURRLOIN,I.DARK,-1,[[T.TOWN,0,[S.DUSK,S.NIGHT]],[T.ABYSS,0],[T.JUNGLE,0,[S.DUSK,S.NIGHT]]]],[e.LIEPARD,I.DARK,-1,[[T.ABYSS,0],[T.ABYSS,5],[T.JUNGLE,0,[S.DUSK,S.NIGHT]]]],[e.PANSAGE,I.GRASS,-1,[[T.FOREST,1],[T.JUNGLE,1]]],[e.SIMISAGE,I.GRASS,-1,[[T.FOREST,1],[T.FOREST,5],[T.JUNGLE,1]]],[e.PANSEAR,I.FIRE,-1,[[T.VOLCANO,1],[T.JUNGLE,1]]],[e.SIMISEAR,I.FIRE,-1,[[T.VOLCANO,1],[T.VOLCANO,5],[T.JUNGLE,1]]],[e.PANPOUR,I.WATER,-1,[[T.SEA,1],[T.JUNGLE,1]]],[e.SIMIPOUR,I.WATER,-1,[[T.SEA,1],[T.SEA,5],[T.JUNGLE,1]]],[e.MUNNA,I.PSYCHIC,-1,[[T.SPACE,0]]],[e.MUSHARNA,I.PSYCHIC,-1,[[T.SPACE,0],[T.SPACE,5]]],[e.PIDOVE,I.NORMAL,I.FLYING,[[T.TOWN,0,[S.DAWN,S.DAY]],[T.PLAINS,1,[S.DAWN,S.DAY]],[T.MOUNTAIN,0,[S.DAWN,S.DAY]]]],[e.TRANQUILL,I.NORMAL,I.FLYING,[[T.PLAINS,1,[S.DAWN,S.DAY]],[T.MOUNTAIN,0,[S.DAWN,S.DAY]]]],[e.UNFEZANT,I.NORMAL,I.FLYING,[[T.PLAINS,1,[S.DAWN,S.DAY]],[T.MOUNTAIN,0,[S.DAWN,S.DAY]],[T.MOUNTAIN,5,[S.DAWN,S.DAY]]]],[e.BLITZLE,I.ELECTRIC,-1,[[T.MEADOW,0],[T.JUNGLE,0]]],[e.ZEBSTRIKA,I.ELECTRIC,-1,[[T.MEADOW,0],[T.MEADOW,5],[T.JUNGLE,0]]],[e.ROGGENROLA,I.ROCK,-1,[[T.MOUNTAIN,1,[S.DAWN,S.DAY]],[T.MOUNTAIN,0,[S.DUSK,S.NIGHT]],[T.BADLANDS,1],[T.CAVE,0]]],[e.BOLDORE,I.ROCK,-1,[[T.MOUNTAIN,1,[S.DAWN,S.DAY]],[T.MOUNTAIN,0,[S.DUSK,S.NIGHT]],[T.BADLANDS,1],[T.CAVE,0]]],[e.GIGALITH,I.ROCK,-1,[[T.CAVE,5]]],[e.WOOBAT,I.PSYCHIC,I.FLYING,[[T.CAVE,0]]],[e.SWOOBAT,I.PSYCHIC,I.FLYING,[[T.CAVE,0],[T.CAVE,5]]],[e.DRILBUR,I.GROUND,-1,[[T.BADLANDS,0],[T.CONSTRUCTION_SITE,0]]],[e.EXCADRILL,I.GROUND,I.STEEL,[[T.BADLANDS,0],[T.BADLANDS,5],[T.CONSTRUCTION_SITE,0]]],[e.AUDINO,I.NORMAL,-1,[[T.FAIRY_CAVE,2],[T.FAIRY_CAVE,5]]],[e.TIMBURR,I.FIGHTING,-1,[[T.FACTORY,0],[T.CONSTRUCTION_SITE,0]]],[e.GURDURR,I.FIGHTING,-1,[[T.FACTORY,0],[T.CONSTRUCTION_SITE,0]]],[e.CONKELDURR,I.FIGHTING,-1,[[T.CONSTRUCTION_SITE,5]]],[e.TYMPOLE,I.WATER,-1,[[T.SWAMP,0]]],[e.PALPITOAD,I.WATER,I.GROUND,[[T.SWAMP,0]]],[e.SEISMITOAD,I.WATER,I.GROUND,[[T.SWAMP,0],[T.SWAMP,5]]],[e.THROH,I.FIGHTING,-1,[[T.DOJO,2],[T.DOJO,5]]],[e.SAWK,I.FIGHTING,-1,[[T.DOJO,2],[T.DOJO,5]]],[e.SEWADDLE,I.BUG,I.GRASS,[[T.FOREST,1,[S.DAWN,S.DAY]],[T.JUNGLE,0,[S.DAWN,S.DAY]]]],[e.SWADLOON,I.BUG,I.GRASS,[[T.FOREST,1,[S.DAWN,S.DAY]],[T.JUNGLE,0,[S.DAWN,S.DAY]]]],[e.LEAVANNY,I.BUG,I.GRASS,[[T.FOREST,1,[S.DAWN,S.DAY]],[T.JUNGLE,0,[S.DAWN,S.DAY]],[T.JUNGLE,5,[S.DAWN,S.DAY]]]],[e.VENIPEDE,I.BUG,I.POISON,[[T.TOWN,1,[S.DUSK,S.NIGHT]],[T.FOREST,0,[S.DUSK,S.NIGHT]]]],[e.WHIRLIPEDE,I.BUG,I.POISON,[[T.FOREST,0,[S.DUSK,S.NIGHT]]]],[e.SCOLIPEDE,I.BUG,I.POISON,[[T.FOREST,0,[S.DUSK,S.NIGHT]],[T.FOREST,5,[S.DUSK,S.NIGHT]]]],[e.COTTONEE,I.GRASS,I.FAIRY,[[T.TOWN,0,[S.DAWN,S.DAY]],[T.GRASS,0,[S.DAWN,S.DAY]],[T.MEADOW,0,[S.DAWN,S.DAY]]]],[e.WHIMSICOTT,I.GRASS,I.FAIRY,[[T.GRASS,5,[S.DAWN,S.DAY]]]],[e.PETILIL,I.GRASS,-1,[[T.GRASS,0,[S.DAWN,S.DAY]],[T.FOREST,0,[S.DAWN,S.DAY]]]],[e.LILLIGANT,I.GRASS,-1,[[T.FOREST,5,[S.DAWN,S.DAY]]]],[e.BASCULIN,I.WATER,-1,[[T.SEABED,0]]],[e.SANDILE,I.GROUND,I.DARK,[[T.DESERT,1,[S.DAWN,S.DAY]],[T.DESERT,0,[S.DUSK,S.NIGHT]]]],[e.KROKOROK,I.GROUND,I.DARK,[[T.DESERT,1,[S.DAWN,S.DAY]],[T.DESERT,0,[S.DUSK,S.NIGHT]]]],[e.KROOKODILE,I.GROUND,I.DARK,[[T.DESERT,1,[S.DAWN,S.DAY]],[T.DESERT,0,[S.DUSK,S.NIGHT]],[T.DESERT,5,[S.DUSK,S.NIGHT]]]],[e.DARUMAKA,I.FIRE,-1,[[T.DESERT,2]]],[e.DARMANITAN,I.FIRE,-1,[[T.DESERT,2],[T.DESERT,5]]],[e.MARACTUS,I.GRASS,-1,[[T.DESERT,1],[T.DESERT,5]]],[e.DWEBBLE,I.BUG,I.ROCK,[[T.BEACH,0]]],[e.CRUSTLE,I.BUG,I.ROCK,[[T.BEACH,0],[T.BEACH,5]]],[e.SCRAGGY,I.DARK,I.FIGHTING,[[T.DOJO,1],[T.CONSTRUCTION_SITE,1]]],[e.SCRAFTY,I.DARK,I.FIGHTING,[[T.DOJO,1],[T.DOJO,5],[T.CONSTRUCTION_SITE,1]]],[e.SIGILYPH,I.PSYCHIC,I.FLYING,[[T.RUINS,1],[T.RUINS,5],[T.SPACE,2]]],[e.YAMASK,I.GHOST,-1,[[T.GRAVEYARD,1],[T.TEMPLE,0]]],[e.COFAGRIGUS,I.GHOST,-1,[[T.GRAVEYARD,1],[T.TEMPLE,0],[T.TEMPLE,5]]],[e.TIRTOUGA,I.WATER,I.ROCK,[[T.SEA,3],[T.BEACH,3]]],[e.CARRACOSTA,I.WATER,I.ROCK,[[T.SEA,3],[T.BEACH,3],[T.BEACH,6]]],[e.ARCHEN,I.ROCK,I.FLYING,[[T.RUINS,3]]],[e.ARCHEOPS,I.ROCK,I.FLYING,[[T.MOUNTAIN,3],[T.RUINS,3],[T.RUINS,6]]],[e.TRUBBISH,I.POISON,-1,[[T.SLUM,0]]],[e.GARBODOR,I.POISON,-1,[[T.SLUM,0],[T.SLUM,5]]],[e.ZORUA,I.DARK,-1,[[T.ABYSS,2]]],[e.ZOROARK,I.DARK,-1,[[T.ABYSS,2],[T.ABYSS,5]]],[e.MINCCINO,I.NORMAL,-1,[[T.TOWN,1,[S.DAWN,S.DAY]],[T.MEADOW,0,[S.DAWN,S.DAY]]]],[e.CINCCINO,I.NORMAL,-1,[[T.MEADOW,5,[S.DAWN,S.DAY]]]],[e.GOTHITA,I.PSYCHIC,-1,[[T.RUINS,2]]],[e.GOTHORITA,I.PSYCHIC,-1,[[T.RUINS,2]]],[e.GOTHITELLE,I.PSYCHIC,-1,[[T.RUINS,2],[T.RUINS,5]]],[e.SOLOSIS,I.PSYCHIC,-1,[[T.SPACE,2],[T.LABORATORY,1]]],[e.DUOSION,I.PSYCHIC,-1,[[T.SPACE,2],[T.LABORATORY,1]]],[e.REUNICLUS,I.PSYCHIC,-1,[[T.SPACE,2],[T.SPACE,5],[T.LABORATORY,1],[T.LABORATORY,5]]],[e.DUCKLETT,I.WATER,I.FLYING,[[T.LAKE,0,[S.DAWN,S.DAY]]]],[e.SWANNA,I.WATER,I.FLYING,[[T.LAKE,0,[S.DAWN,S.DAY]],[T.LAKE,5,[S.DAWN,S.DAY]]]],[e.VANILLITE,I.ICE,-1,[[T.ICE_CAVE,0]]],[e.VANILLISH,I.ICE,-1,[[T.ICE_CAVE,0]]],[e.VANILLUXE,I.ICE,-1,[[T.ICE_CAVE,0],[T.ICE_CAVE,5]]],[e.DEERLING,I.NORMAL,I.GRASS,[[T.FOREST,0,[S.DAWN,S.DAY]]]],[e.SAWSBUCK,I.NORMAL,I.GRASS,[[T.FOREST,0,[S.DAWN,S.DAY]],[T.FOREST,5,[S.DAWN,S.DAY]]]],[e.EMOLGA,I.ELECTRIC,I.FLYING,[[T.POWER_PLANT,1]]],[e.KARRABLAST,I.BUG,-1,[[T.FOREST,2]]],[e.ESCAVALIER,I.BUG,I.STEEL,[[T.FOREST,6]]],[e.FOONGUS,I.GRASS,I.POISON,[[T.GRASS,1,[S.DUSK,S.NIGHT]],[T.JUNGLE,2,[S.DAWN,S.DAY]],[T.JUNGLE,0,[S.DUSK,S.NIGHT]]]],[e.AMOONGUSS,I.GRASS,I.POISON,[[T.GRASS,1,[S.DUSK,S.NIGHT]],[T.JUNGLE,2,[S.DAWN,S.DAY]],[T.JUNGLE,0,[S.DUSK,S.NIGHT]],[T.JUNGLE,6,[S.DAWN,S.DAY]],[T.JUNGLE,5,[S.DUSK,S.NIGHT]]]],[e.FRILLISH,I.WATER,I.GHOST,[[T.SEABED,0]]],[e.JELLICENT,I.WATER,I.GHOST,[[T.SEABED,0],[T.SEABED,5]]],[e.ALOMOMOLA,I.WATER,-1,[[T.SEABED,2],[T.SEABED,5]]],[e.JOLTIK,I.BUG,I.ELECTRIC,[[T.JUNGLE,1]]],[e.GALVANTULA,I.BUG,I.ELECTRIC,[[T.JUNGLE,1],[T.JUNGLE,5]]],[e.FERROSEED,I.GRASS,I.STEEL,[[T.CAVE,2]]],[e.FERROTHORN,I.GRASS,I.STEEL,[[T.CAVE,2],[T.CAVE,6]]],[e.KLINK,I.STEEL,-1,[[T.FACTORY,0],[T.LABORATORY,0]]],[e.KLANG,I.STEEL,-1,[[T.FACTORY,0],[T.LABORATORY,0]]],[e.KLINKLANG,I.STEEL,-1,[[T.FACTORY,0],[T.FACTORY,5],[T.LABORATORY,0],[T.LABORATORY,5]]],[e.TYNAMO,I.ELECTRIC,-1,[[T.SEABED,2]]],[e.EELEKTRIK,I.ELECTRIC,-1,[[T.SEABED,2]]],[e.EELEKTROSS,I.ELECTRIC,-1,[[T.SEABED,6]]],[e.ELGYEM,I.PSYCHIC,-1,[[T.RUINS,0],[T.SPACE,1]]],[e.BEHEEYEM,I.PSYCHIC,-1,[[T.RUINS,0],[T.RUINS,5],[T.SPACE,1]]],[e.LITWICK,I.GHOST,I.FIRE,[[T.GRAVEYARD,0],[T.TEMPLE,1]]],[e.LAMPENT,I.GHOST,I.FIRE,[[T.GRAVEYARD,0],[T.TEMPLE,1]]],[e.CHANDELURE,I.GHOST,I.FIRE,[[T.GRAVEYARD,5]]],[e.AXEW,I.DRAGON,-1,[[T.MOUNTAIN,3],[T.WASTELAND,0]]],[e.FRAXURE,I.DRAGON,-1,[[T.MOUNTAIN,3],[T.WASTELAND,0]]],[e.HAXORUS,I.DRAGON,-1,[[T.WASTELAND,0],[T.WASTELAND,5]]],[e.CUBCHOO,I.ICE,-1,[[T.ICE_CAVE,0]]],[e.BEARTIC,I.ICE,-1,[[T.ICE_CAVE,0],[T.ICE_CAVE,5]]],[e.CRYOGONAL,I.ICE,-1,[[T.ICE_CAVE,2],[T.ICE_CAVE,5]]],[e.SHELMET,I.BUG,-1,[[T.FOREST,2]]],[e.ACCELGOR,I.BUG,-1,[[T.FOREST,6]]],[e.STUNFISK,I.GROUND,I.ELECTRIC,[[T.SWAMP,1],[T.SWAMP,5]]],[e.MIENFOO,I.FIGHTING,-1,[[T.DOJO,1]]],[e.MIENSHAO,I.FIGHTING,-1,[[T.DOJO,1],[T.DOJO,5]]],[e.DRUDDIGON,I.DRAGON,-1,[[T.WASTELAND,3],[T.WASTELAND,6]]],[e.GOLETT,I.GROUND,I.GHOST,[[T.TEMPLE,0]]],[e.GOLURK,I.GROUND,I.GHOST,[[T.TEMPLE,0],[T.TEMPLE,5]]],[e.PAWNIARD,I.DARK,I.STEEL,[[T.ABYSS,0]]],[e.BISHARP,I.DARK,I.STEEL,[[T.ABYSS,0]]],[e.BOUFFALANT,I.NORMAL,-1,[[T.MEADOW,1,[S.DAWN,S.DAY]],[T.MEADOW,5,[S.DAWN,S.DAY]]]],[e.RUFFLET,I.NORMAL,I.FLYING,[[T.MOUNTAIN,1,[S.DAWN,S.DAY]]]],[e.BRAVIARY,I.NORMAL,I.FLYING,[[T.MOUNTAIN,1,[S.DAWN,S.DAY]],[T.MOUNTAIN,5,[S.DAWN,S.DAY]]]],[e.VULLABY,I.DARK,I.FLYING,[[T.MOUNTAIN,1,[S.DUSK,S.NIGHT]]]],[e.MANDIBUZZ,I.DARK,I.FLYING,[[T.MOUNTAIN,1,[S.DUSK,S.NIGHT]],[T.MOUNTAIN,5,[S.DUSK,S.NIGHT]]]],[e.HEATMOR,I.FIRE,-1,[[T.VOLCANO,1],[T.VOLCANO,5]]],[e.DURANT,I.BUG,I.STEEL,[[T.FOREST,3],[T.FOREST,6]]],[e.DEINO,I.DARK,I.DRAGON,[[T.WASTELAND,1,[S.DUSK,S.NIGHT]],[T.ABYSS,2]]],[e.ZWEILOUS,I.DARK,I.DRAGON,[[T.WASTELAND,1,[S.DUSK,S.NIGHT]],[T.ABYSS,2]]],[e.HYDREIGON,I.DARK,I.DRAGON,[[T.WASTELAND,1,[S.DUSK,S.NIGHT]],[T.ABYSS,2],[T.ABYSS,5]]],[e.LARVESTA,I.BUG,I.FIRE,[[T.VOLCANO,3]]],[e.VOLCARONA,I.BUG,I.FIRE,[[T.VOLCANO,3],[T.VOLCANO,6]]],[e.COBALION,I.STEEL,I.FIGHTING,[[T.CONSTRUCTION_SITE,4],[T.CONSTRUCTION_SITE,7]]],[e.TERRAKION,I.ROCK,I.FIGHTING,[[T.DOJO,4],[T.DOJO,7]]],[e.VIRIZION,I.GRASS,I.FIGHTING,[[T.GRASS,4],[T.GRASS,7]]],[e.TORNADUS,I.FLYING,-1,[[T.MOUNTAIN,4],[T.MOUNTAIN,7]]],[e.THUNDURUS,I.ELECTRIC,I.FLYING,[[T.POWER_PLANT,4],[T.POWER_PLANT,7]]],[e.RESHIRAM,I.DRAGON,I.FIRE,[[T.VOLCANO,8]]],[e.ZEKROM,I.DRAGON,I.ELECTRIC,[[T.POWER_PLANT,8]]],[e.LANDORUS,I.GROUND,I.FLYING,[[T.BADLANDS,4],[T.BADLANDS,7]]],[e.KYUREM,I.DRAGON,I.ICE,[[T.ICE_CAVE,8]]],[e.KELDEO,I.WATER,I.FIGHTING,[[T.BEACH,4],[T.BEACH,7]]],[e.MELOETTA,I.NORMAL,I.PSYCHIC,[[T.MEADOW,4],[T.MEADOW,7]]],[e.GENESECT,I.BUG,I.STEEL,[[T.FACTORY,4],[T.FACTORY,7]]],[e.CHESPIN,I.GRASS,-1,[[T.FOREST,2]]],[e.QUILLADIN,I.GRASS,-1,[[T.FOREST,2]]],[e.CHESNAUGHT,I.GRASS,I.FIGHTING,[[T.FOREST,2],[T.FOREST,6]]],[e.FENNEKIN,I.FIRE,-1,[[T.VOLCANO,2]]],[e.BRAIXEN,I.FIRE,-1,[[T.VOLCANO,2]]],[e.DELPHOX,I.FIRE,I.PSYCHIC,[[T.VOLCANO,2],[T.VOLCANO,6]]],[e.FROAKIE,I.WATER,-1,[[T.LAKE,2]]],[e.FROGADIER,I.WATER,-1,[[T.LAKE,2]]],[e.GRENINJA,I.WATER,I.DARK,[[T.LAKE,2],[T.LAKE,6]]],[e.BUNNELBY,I.NORMAL,-1,[[T.CAVE,0]]],[e.DIGGERSBY,I.NORMAL,I.GROUND,[[T.CAVE,0],[T.CAVE,5]]],[e.FLETCHLING,I.NORMAL,I.FLYING,[[T.TOWN,0],[T.PLAINS,1],[T.MOUNTAIN,0,[S.DAWN,S.DAY]]]],[e.FLETCHINDER,I.FIRE,I.FLYING,[[T.PLAINS,1],[T.MOUNTAIN,0,[S.DAWN,S.DAY]]]],[e.TALONFLAME,I.FIRE,I.FLYING,[[T.PLAINS,1],[T.MOUNTAIN,0,[S.DAWN,S.DAY]],[T.MOUNTAIN,5,[S.DAWN,S.DAY]]]],[e.SCATTERBUG,I.BUG,-1,[[T.TOWN,0,[S.DAWN,S.DAY]]]],[e.SPEWPA,I.BUG,-1,[[T.TOWN,0,[S.DAWN,S.DAY]]]],[e.VIVILLON,I.BUG,I.FLYING,[[T.FOREST,0,[S.DAWN,S.DAY]]]],[e.LITLEO,I.FIRE,I.NORMAL,[[T.JUNGLE,1]]],[e.PYROAR,I.FIRE,I.NORMAL,[[T.JUNGLE,1],[T.JUNGLE,5]]],[e.FLABEBE,I.FAIRY,-1,[[T.MEADOW,0]]],[e.FLOETTE,I.FAIRY,-1,[[T.MEADOW,0]]],[e.FLORGES,I.FAIRY,-1,[[T.MEADOW,5]]],[e.SKIDDO,I.GRASS,-1,[[T.MOUNTAIN,0]]],[e.GOGOAT,I.GRASS,-1,[[T.MOUNTAIN,0],[T.MOUNTAIN,5]]],[e.PANCHAM,I.FIGHTING,-1,[[T.DOJO,2],[T.JUNGLE,1,[S.DUSK,S.NIGHT]]]],[e.PANGORO,I.FIGHTING,I.DARK,[[T.DOJO,2],[T.DOJO,6],[T.JUNGLE,1,[S.DUSK,S.NIGHT]],[T.JUNGLE,5,[S.DUSK,S.NIGHT]]]],[e.FURFROU,I.NORMAL,-1,[[T.METROPOLIS,1],[T.METROPOLIS,5]]],[e.ESPURR,I.PSYCHIC,-1,[[T.METROPOLIS,1,[S.DUSK,S.NIGHT]]]],[e.MEOWSTIC,I.PSYCHIC,-1,[[T.METROPOLIS,1,[S.DUSK,S.NIGHT]],[T.METROPOLIS,5,[S.DUSK,S.NIGHT]]]],[e.HONEDGE,I.STEEL,I.GHOST,[[T.TEMPLE,0]]],[e.DOUBLADE,I.STEEL,I.GHOST,[[T.TEMPLE,0]]],[e.AEGISLASH,I.STEEL,I.GHOST,[[T.TEMPLE,5]]],[e.SPRITZEE,I.FAIRY,-1,[[T.FAIRY_CAVE,0]]],[e.AROMATISSE,I.FAIRY,-1,[[T.FAIRY_CAVE,0],[T.FAIRY_CAVE,5]]],[e.SWIRLIX,I.FAIRY,-1,[[T.FAIRY_CAVE,0]]],[e.SLURPUFF,I.FAIRY,-1,[[T.FAIRY_CAVE,0],[T.FAIRY_CAVE,5]]],[e.INKAY,I.DARK,I.PSYCHIC,[[T.SEA,0,[S.DUSK,S.NIGHT]]]],[e.MALAMAR,I.DARK,I.PSYCHIC,[[T.SEA,0,[S.DUSK,S.NIGHT]],[T.SEA,5,[S.DUSK,S.NIGHT]]]],[e.BINACLE,I.ROCK,I.WATER,[[T.BEACH,0]]],[e.BARBARACLE,I.ROCK,I.WATER,[[T.BEACH,0],[T.BEACH,5]]],[e.SKRELP,I.POISON,I.WATER,[[T.SEABED,1]]],[e.DRAGALGE,I.POISON,I.DRAGON,[[T.SEABED,1],[T.SEABED,5]]],[e.CLAUNCHER,I.WATER,-1,[[T.BEACH,1]]],[e.CLAWITZER,I.WATER,-1,[[T.BEACH,1],[T.BEACH,5]]],[e.HELIOPTILE,I.ELECTRIC,I.NORMAL,[[T.DESERT,1,[S.DAWN,S.DAY]]]],[e.HELIOLISK,I.ELECTRIC,I.NORMAL,[[T.DESERT,5,[S.DAWN,S.DAY]]]],[e.TYRUNT,I.ROCK,I.DRAGON,[[T.WASTELAND,3]]],[e.TYRANTRUM,I.ROCK,I.DRAGON,[[T.WASTELAND,3],[T.WASTELAND,6]]],[e.AMAURA,I.ROCK,I.ICE,[[T.ICE_CAVE,3]]],[e.AURORUS,I.ROCK,I.ICE,[[T.ICE_CAVE,3],[T.ICE_CAVE,6]]],[e.SYLVEON,I.FAIRY,-1,[[T.MEADOW,3],[T.MEADOW,6]]],[e.HAWLUCHA,I.FIGHTING,I.FLYING,[[T.MOUNTAIN,2],[T.MOUNTAIN,6]]],[e.DEDENNE,I.ELECTRIC,I.FAIRY,[[T.POWER_PLANT,0],[T.POWER_PLANT,5]]],[e.CARBINK,I.ROCK,I.FAIRY,[[T.CAVE,2],[T.FAIRY_CAVE,1],[T.FAIRY_CAVE,5]]],[e.GOOMY,I.DRAGON,-1,[[T.WASTELAND,0,[S.DAWN,S.DAY]]]],[e.SLIGGOO,I.DRAGON,-1,[[T.WASTELAND,0,[S.DAWN,S.DAY]]]],[e.GOODRA,I.DRAGON,-1,[[T.WASTELAND,0,[S.DAWN,S.DAY]],[T.WASTELAND,5,[S.DAWN,S.DAY]]]],[e.KLEFKI,I.STEEL,I.FAIRY,[[T.FACTORY,1],[T.FACTORY,5]]],[e.PHANTUMP,I.GHOST,I.GRASS,[[T.GRAVEYARD,0]]],[e.TREVENANT,I.GHOST,I.GRASS,[[T.GRAVEYARD,5]]],[e.PUMPKABOO,I.GHOST,I.GRASS,[[T.GRAVEYARD,0]]],[e.GOURGEIST,I.GHOST,I.GRASS,[[T.GRAVEYARD,5]]],[e.BERGMITE,I.ICE,-1,[[T.ICE_CAVE,0]]],[e.AVALUGG,I.ICE,-1,[[T.ICE_CAVE,0],[T.ICE_CAVE,5]]],[e.NOIBAT,I.FLYING,I.DRAGON,[[T.CAVE,1]]],[e.NOIVERN,I.FLYING,I.DRAGON,[[T.CAVE,1],[T.CAVE,5]]],[e.XERNEAS,I.FAIRY,-1,[[T.FAIRY_CAVE,8]]],[e.YVELTAL,I.DARK,I.FLYING,[[T.ABYSS,8]]],[e.ZYGARDE,I.DRAGON,I.GROUND,[[T.LABORATORY,7]]],[e.DIANCIE,I.ROCK,I.FAIRY,[[T.FAIRY_CAVE,4],[T.FAIRY_CAVE,7]]],[e.HOOPA,I.PSYCHIC,I.GHOST,[[T.TEMPLE,4],[T.TEMPLE,7]]],[e.VOLCANION,I.FIRE,I.WATER,[[T.VOLCANO,4],[T.VOLCANO,7]]],[e.ROWLET,I.GRASS,I.FLYING,[[T.FOREST,2]]],[e.DARTRIX,I.GRASS,I.FLYING,[[T.FOREST,2]]],[e.DECIDUEYE,I.GRASS,I.GHOST,[[T.FOREST,2],[T.FOREST,6]]],[e.LITTEN,I.FIRE,-1,[[T.VOLCANO,2]]],[e.TORRACAT,I.FIRE,-1,[[T.VOLCANO,2]]],[e.INCINEROAR,I.FIRE,I.DARK,[[T.VOLCANO,2],[T.VOLCANO,6]]],[e.POPPLIO,I.WATER,-1,[[T.SEA,2]]],[e.BRIONNE,I.WATER,-1,[[T.SEA,2]]],[e.PRIMARINA,I.WATER,I.FAIRY,[[T.SEA,2],[T.SEA,6]]],[e.PIKIPEK,I.NORMAL,I.FLYING,[[T.JUNGLE,0]]],[e.TRUMBEAK,I.NORMAL,I.FLYING,[[T.JUNGLE,0]]],[e.TOUCANNON,I.NORMAL,I.FLYING,[[T.JUNGLE,0],[T.JUNGLE,5]]],[e.YUNGOOS,I.NORMAL,-1,[[T.TOWN,0,[S.DAWN,S.DAY]],[T.PLAINS,0,[S.DAWN,S.DAY]]]],[e.GUMSHOOS,I.NORMAL,-1,[[T.PLAINS,0,[S.DAWN,S.DAY]],[T.PLAINS,5,[S.DAWN,S.DAY]]]],[e.GRUBBIN,I.BUG,-1,[[T.POWER_PLANT,0]]],[e.CHARJABUG,I.BUG,I.ELECTRIC,[[T.POWER_PLANT,0]]],[e.VIKAVOLT,I.BUG,I.ELECTRIC,[[T.POWER_PLANT,5]]],[e.CRABRAWLER,I.FIGHTING,-1,[[T.ICE_CAVE,0]]],[e.CRABOMINABLE,I.FIGHTING,I.ICE,[[T.ICE_CAVE,5]]],[e.ORICORIO,I.FIRE,I.FLYING,[[T.MEADOW,1],[T.ISLAND,0],[T.ISLAND,5]]],[e.CUTIEFLY,I.BUG,I.FAIRY,[[T.MEADOW,0],[T.FAIRY_CAVE,0]]],[e.RIBOMBEE,I.BUG,I.FAIRY,[[T.MEADOW,0],[T.MEADOW,5],[T.FAIRY_CAVE,0],[T.FAIRY_CAVE,5]]],[e.ROCKRUFF,I.ROCK,-1,[[T.PLAINS,1,S.DAY],[T.FOREST,1,S.NIGHT],[T.CAVE,1,S.DUSK]]],[e.LYCANROC,I.ROCK,-1,[[T.PLAINS,1,S.DAY],[T.PLAINS,6,S.DAY],[T.FOREST,1,S.NIGHT],[T.FOREST,6,S.NIGHT],[T.CAVE,1,S.DUSK],[T.CAVE,6,S.DUSK]]],[e.WISHIWASHI,I.WATER,-1,[[T.LAKE,1],[T.LAKE,5]]],[e.MAREANIE,I.POISON,I.WATER,[[T.BEACH,0],[T.SWAMP,1]]],[e.TOXAPEX,I.POISON,I.WATER,[[T.BEACH,0],[T.BEACH,5],[T.SWAMP,1],[T.SWAMP,5]]],[e.MUDBRAY,I.GROUND,-1,[[T.BADLANDS,0]]],[e.MUDSDALE,I.GROUND,-1,[[T.BADLANDS,0],[T.BADLANDS,5]]],[e.DEWPIDER,I.WATER,I.BUG,[[T.LAKE,1,[S.DAWN,S.DAY]]]],[e.ARAQUANID,I.WATER,I.BUG,[[T.LAKE,1,[S.DAWN,S.DAY]],[T.LAKE,5,[S.DAWN,S.DAY]]]],[e.FOMANTIS,I.GRASS,-1,[[T.TALL_GRASS,0],[T.JUNGLE,1]]],[e.LURANTIS,I.GRASS,-1,[[T.TALL_GRASS,0],[T.TALL_GRASS,5],[T.JUNGLE,1],[T.JUNGLE,5]]],[e.MORELULL,I.GRASS,I.FAIRY,[[T.FAIRY_CAVE,0]]],[e.SHIINOTIC,I.GRASS,I.FAIRY,[[T.FAIRY_CAVE,0],[T.FAIRY_CAVE,5]]],[e.SALANDIT,I.POISON,I.FIRE,[[T.VOLCANO,0]]],[e.SALAZZLE,I.POISON,I.FIRE,[[T.VOLCANO,0],[T.VOLCANO,5]]],[e.STUFFUL,I.NORMAL,I.FIGHTING,[[T.DOJO,0]]],[e.BEWEAR,I.NORMAL,I.FIGHTING,[[T.DOJO,0],[T.DOJO,5]]],[e.BOUNSWEET,I.GRASS,-1,[[T.TALL_GRASS,0,[S.DAWN,S.DAY]]]],[e.STEENEE,I.GRASS,-1,[[T.TALL_GRASS,0,[S.DAWN,S.DAY]]]],[e.TSAREENA,I.GRASS,-1,[[T.TALL_GRASS,0,[S.DAWN,S.DAY]],[T.TALL_GRASS,5,[S.DAWN,S.DAY]]]],[e.COMFEY,I.FAIRY,-1,[[T.FAIRY_CAVE,1],[T.FAIRY_CAVE,5]]],[e.ORANGURU,I.NORMAL,I.PSYCHIC,[[T.JUNGLE,2,[S.DUSK,S.NIGHT]]]],[e.PASSIMIAN,I.FIGHTING,-1,[[T.JUNGLE,2,[S.DAWN,S.DAY]]]],[e.WIMPOD,I.BUG,I.WATER,[[T.CAVE,1]]],[e.GOLISOPOD,I.BUG,I.WATER,[[T.CAVE,1],[T.CAVE,5]]],[e.SANDYGAST,I.GHOST,I.GROUND,[[T.BEACH,1]]],[e.PALOSSAND,I.GHOST,I.GROUND,[[T.BEACH,1],[T.BEACH,5]]],[e.PYUKUMUKU,I.WATER,-1,[[T.SEABED,3],[T.SEABED,6]]],[e.TYPE_NULL,I.NORMAL,-1,[[T.LABORATORY,4]]],[e.SILVALLY,I.NORMAL,-1,[[T.LABORATORY,7]]],[e.MINIOR,I.ROCK,I.FLYING,[[T.SPACE,0],[T.SPACE,5]]],[e.KOMALA,I.NORMAL,-1,[[T.JUNGLE,1,[S.DAWN,S.DAY]],[T.JUNGLE,5,[S.DAWN,S.DAY]]]],[e.TURTONATOR,I.FIRE,I.DRAGON,[[T.VOLCANO,1],[T.VOLCANO,5]]],[e.TOGEDEMARU,I.ELECTRIC,I.STEEL,[[T.POWER_PLANT,1],[T.POWER_PLANT,5]]],[e.MIMIKYU,I.GHOST,I.FAIRY,[[T.GRAVEYARD,2],[T.GRAVEYARD,5]]],[e.BRUXISH,I.WATER,I.PSYCHIC,[[T.ISLAND,1],[T.ISLAND,5]]],[e.DRAMPA,I.NORMAL,I.DRAGON,[[T.WASTELAND,1],[T.WASTELAND,5]]],[e.DHELMISE,I.GHOST,I.GRASS,[[T.SEABED,2],[T.SEABED,6]]],[e.JANGMO_O,I.DRAGON,-1,[[T.WASTELAND,0,[S.DAWN,S.DAY]]]],[e.HAKAMO_O,I.DRAGON,I.FIGHTING,[[T.WASTELAND,0,[S.DAWN,S.DAY]]]],[e.KOMMO_O,I.DRAGON,I.FIGHTING,[[T.WASTELAND,0,[S.DAWN,S.DAY]],[T.WASTELAND,5,[S.DAWN,S.DAY]]]],[e.TAPU_KOKO,I.ELECTRIC,I.FAIRY,[[T.TEMPLE,4],[T.TEMPLE,7]]],[e.TAPU_LELE,I.PSYCHIC,I.FAIRY,[[T.JUNGLE,4],[T.JUNGLE,7]]],[e.TAPU_BULU,I.GRASS,I.FAIRY,[[T.DESERT,4],[T.DESERT,7]]],[e.TAPU_FINI,I.WATER,I.FAIRY,[[T.BEACH,4],[T.BEACH,7]]],[e.COSMOG,I.PSYCHIC,-1,[[T.SPACE,4]]],[e.COSMOEM,I.PSYCHIC,-1,[[T.SPACE,4]]],[e.SOLGALEO,I.PSYCHIC,I.STEEL,[[T.SPACE,8,S.DAY]]],[e.LUNALA,I.PSYCHIC,I.GHOST,[[T.SPACE,8,S.NIGHT]]],[e.NIHILEGO,I.ROCK,I.POISON,[[T.SEABED,4],[T.SEABED,7]]],[e.BUZZWOLE,I.BUG,I.FIGHTING,[[T.JUNGLE,4],[T.JUNGLE,7]]],[e.PHEROMOSA,I.BUG,I.FIGHTING,[[T.DESERT,4],[T.DESERT,7]]],[e.XURKITREE,I.ELECTRIC,-1,[[T.POWER_PLANT,4],[T.POWER_PLANT,7]]],[e.CELESTEELA,I.STEEL,I.FLYING,[[T.SPACE,4],[T.SPACE,7]]],[e.KARTANA,I.GRASS,I.STEEL,[[T.FOREST,4],[T.FOREST,7]]],[e.GUZZLORD,I.DARK,I.DRAGON,[[T.SLUM,4],[T.SLUM,7]]],[e.NECROZMA,I.PSYCHIC,-1,[[T.SPACE,8]]],[e.MAGEARNA,I.STEEL,I.FAIRY,[[T.FACTORY,4],[T.FACTORY,7]]],[e.MARSHADOW,I.FIGHTING,I.GHOST,[[T.GRAVEYARD,4],[T.GRAVEYARD,7]]],[e.POIPOLE,I.POISON,-1,[[T.SWAMP,4]]],[e.NAGANADEL,I.POISON,I.DRAGON,[[T.SWAMP,7]]],[e.STAKATAKA,I.ROCK,I.STEEL,[[T.CONSTRUCTION_SITE,4],[T.CONSTRUCTION_SITE,7]]],[e.BLACEPHALON,I.FIRE,I.GHOST,[[T.ISLAND,4],[T.ISLAND,7]]],[e.ZERAORA,I.ELECTRIC,-1,[[T.POWER_PLANT,4],[T.POWER_PLANT,7]]],[e.MELTAN,I.STEEL,-1,[]],[e.MELMETAL,I.STEEL,-1,[]],[e.GROOKEY,I.GRASS,-1,[[T.JUNGLE,2]]],[e.THWACKEY,I.GRASS,-1,[[T.JUNGLE,2]]],[e.RILLABOOM,I.GRASS,-1,[[T.JUNGLE,2],[T.JUNGLE,6]]],[e.SCORBUNNY,I.FIRE,-1,[[T.VOLCANO,2]]],[e.RABOOT,I.FIRE,-1,[[T.VOLCANO,2]]],[e.CINDERACE,I.FIRE,-1,[[T.VOLCANO,2],[T.VOLCANO,6]]],[e.SOBBLE,I.WATER,-1,[[T.LAKE,2]]],[e.DRIZZILE,I.WATER,-1,[[T.LAKE,2]]],[e.INTELEON,I.WATER,-1,[[T.LAKE,2],[T.LAKE,6]]],[e.SKWOVET,I.NORMAL,-1,[[T.TOWN,0,[S.DAWN,S.DAY]],[T.PLAINS,0,[S.DAWN,S.DAY]]]],[e.GREEDENT,I.NORMAL,-1,[[T.PLAINS,0,[S.DAWN,S.DAY]],[T.PLAINS,5,[S.DAWN,S.DAY]]]],[e.ROOKIDEE,I.FLYING,-1,[[T.TOWN,2],[T.PLAINS,2],[T.MOUNTAIN,1,[S.DAWN,S.DAY]]]],[e.CORVISQUIRE,I.FLYING,-1,[[T.PLAINS,2],[T.MOUNTAIN,1,[S.DAWN,S.DAY]]]],[e.CORVIKNIGHT,I.FLYING,I.STEEL,[[T.PLAINS,2],[T.MOUNTAIN,1,[S.DAWN,S.DAY]],[T.MOUNTAIN,5,[S.DAWN,S.DAY]]]],[e.BLIPBUG,I.BUG,-1,[[T.TOWN,0,[S.DUSK,S.NIGHT]]]],[e.DOTTLER,I.BUG,I.PSYCHIC,[[T.FOREST,1,[S.DUSK,S.NIGHT]]]],[e.ORBEETLE,I.BUG,I.PSYCHIC,[[T.FOREST,1,[S.DUSK,S.NIGHT]],[T.FOREST,5,[S.DUSK,S.NIGHT]]]],[e.NICKIT,I.DARK,-1,[[T.ABYSS,0]]],[e.THIEVUL,I.DARK,-1,[[T.ABYSS,0],[T.ABYSS,5]]],[e.GOSSIFLEUR,I.GRASS,-1,[[T.MEADOW,0]]],[e.ELDEGOSS,I.GRASS,-1,[[T.MEADOW,0]]],[e.WOOLOO,I.NORMAL,-1,[[T.TOWN,0],[T.MEADOW,0]]],[e.DUBWOOL,I.NORMAL,-1,[[T.MEADOW,0],[T.MEADOW,5]]],[e.CHEWTLE,I.WATER,-1,[[T.LAKE,0]]],[e.DREDNAW,I.WATER,I.ROCK,[[T.LAKE,0],[T.LAKE,5]]],[e.YAMPER,I.ELECTRIC,-1,[[T.METROPOLIS,0,[S.DAWN,S.DAY]]]],[e.BOLTUND,I.ELECTRIC,-1,[[T.METROPOLIS,0,[S.DAWN,S.DAY]],[T.METROPOLIS,5,[S.DAWN,S.DAY]]]],[e.ROLYCOLY,I.ROCK,-1,[[T.VOLCANO,0]]],[e.CARKOL,I.ROCK,I.FIRE,[[T.VOLCANO,0]]],[e.COALOSSAL,I.ROCK,I.FIRE,[[T.VOLCANO,0],[T.VOLCANO,5]]],[e.APPLIN,I.GRASS,I.DRAGON,[[T.MEADOW,2]]],[e.FLAPPLE,I.GRASS,I.DRAGON,[[T.MEADOW,6]]],[e.APPLETUN,I.GRASS,I.DRAGON,[[T.MEADOW,6]]],[e.SILICOBRA,I.GROUND,-1,[[T.DESERT,0]]],[e.SANDACONDA,I.GROUND,-1,[[T.DESERT,0],[T.DESERT,5]]],[e.CRAMORANT,I.FLYING,I.WATER,[[T.SEA,0,[S.DAWN,S.DAY]],[T.SEA,5,[S.DAWN,S.DAY]]]],[e.ARROKUDA,I.WATER,-1,[[T.SEABED,0]]],[e.BARRASKEWDA,I.WATER,-1,[[T.SEABED,0],[T.SEABED,5]]],[e.TOXEL,I.ELECTRIC,I.POISON,[]],[e.TOXTRICITY,I.ELECTRIC,I.POISON,[[T.SLUM,2,[S.DUSK,S.NIGHT]],[T.SLUM,6,[S.DUSK,S.NIGHT]]]],[e.SIZZLIPEDE,I.FIRE,I.BUG,[[T.BADLANDS,1,[S.DAWN,S.DAY]]]],[e.CENTISKORCH,I.FIRE,I.BUG,[[T.BADLANDS,1,[S.DAWN,S.DAY]],[T.BADLANDS,5,[S.DAWN,S.DAY]]]],[e.CLOBBOPUS,I.FIGHTING,-1,[[T.DOJO,0]]],[e.GRAPPLOCT,I.FIGHTING,-1,[[T.DOJO,0],[T.DOJO,5]]],[e.SINISTEA,I.GHOST,-1,[[T.GRAVEYARD,1]]],[e.POLTEAGEIST,I.GHOST,-1,[[T.GRAVEYARD,1],[T.GRAVEYARD,5]]],[e.HATENNA,I.PSYCHIC,-1,[[T.FAIRY_CAVE,1]]],[e.HATTREM,I.PSYCHIC,-1,[[T.FAIRY_CAVE,1]]],[e.HATTERENE,I.PSYCHIC,I.FAIRY,[[T.FAIRY_CAVE,1],[T.FAIRY_CAVE,5]]],[e.IMPIDIMP,I.DARK,I.FAIRY,[[T.ABYSS,0]]],[e.MORGREM,I.DARK,I.FAIRY,[[T.ABYSS,0]]],[e.GRIMMSNARL,I.DARK,I.FAIRY,[[T.ABYSS,0],[T.ABYSS,5]]],[e.OBSTAGOON,I.DARK,I.NORMAL,[[T.SLUM,2,[S.DUSK,S.NIGHT]],[T.SLUM,6,[S.DUSK,S.NIGHT]]]],[e.PERRSERKER,I.STEEL,-1,[[T.CONSTRUCTION_SITE,2,S.DUSK],[T.CONSTRUCTION_SITE,6,S.DUSK]]],[e.CURSOLA,I.GHOST,-1,[[T.SEABED,3],[T.SEABED,6]]],[e.SIRFETCHD,I.FIGHTING,-1,[[T.DOJO,6]]],[e.MR_RIME,I.ICE,I.PSYCHIC,[[T.SNOWY_FOREST,3],[T.SNOWY_FOREST,6]]],[e.RUNERIGUS,I.GROUND,I.GHOST,[[T.RUINS,3,[S.DUSK,S.NIGHT]],[T.RUINS,6,[S.DUSK,S.NIGHT]]]],[e.MILCERY,I.FAIRY,-1,[[T.FAIRY_CAVE,0]]],[e.ALCREMIE,I.FAIRY,-1,[[T.FAIRY_CAVE,0],[T.FAIRY_CAVE,5]]],[e.FALINKS,I.FIGHTING,-1,[[T.JUNGLE,1],[T.JUNGLE,5]]],[e.PINCURCHIN,I.ELECTRIC,-1,[[T.SEABED,1]]],[e.SNOM,I.ICE,I.BUG,[[T.ICE_CAVE,0],[T.SNOWY_FOREST,0,[S.DUSK,S.NIGHT]]]],[e.FROSMOTH,I.ICE,I.BUG,[[T.ICE_CAVE,0],[T.SNOWY_FOREST,0,[S.DUSK,S.NIGHT]],[T.SNOWY_FOREST,5,[S.DUSK,S.NIGHT]]]],[e.STONJOURNER,I.ROCK,-1,[[T.RUINS,2]]],[e.EISCUE,I.ICE,-1,[[T.ICE_CAVE,1],[T.SNOWY_FOREST,0]]],[e.INDEEDEE,I.PSYCHIC,I.NORMAL,[[T.METROPOLIS,1,[S.DAWN,S.DAY]]]],[e.MORPEKO,I.ELECTRIC,I.DARK,[[T.METROPOLIS,2,[S.DUSK,S.NIGHT]]]],[e.CUFANT,I.STEEL,-1,[[T.BADLANDS,1]]],[e.COPPERAJAH,I.STEEL,-1,[[T.BADLANDS,1],[T.BADLANDS,5]]],[e.DRACOZOLT,I.ELECTRIC,I.DRAGON,[[T.WASTELAND,3],[T.WASTELAND,6]]],[e.ARCTOZOLT,I.ELECTRIC,I.ICE,[[T.SNOWY_FOREST,3],[T.SNOWY_FOREST,6]]],[e.DRACOVISH,I.WATER,I.DRAGON,[[T.WASTELAND,3],[T.WASTELAND,6]]],[e.ARCTOVISH,I.WATER,I.ICE,[[T.SEABED,3],[T.SEABED,6]]],[e.DURALUDON,I.STEEL,I.DRAGON,[[T.CONSTRUCTION_SITE,2]]],[e.DREEPY,I.DRAGON,I.GHOST,[[T.WASTELAND,2,[S.DUSK,S.NIGHT]]]],[e.DRAKLOAK,I.DRAGON,I.GHOST,[[T.WASTELAND,2,[S.DUSK,S.NIGHT]]]],[e.DRAGAPULT,I.DRAGON,I.GHOST,[[T.WASTELAND,2,[S.DUSK,S.NIGHT]],[T.WASTELAND,5,[S.DUSK,S.NIGHT]]]],[e.ZACIAN,I.FAIRY,-1,[[T.SNOWY_FOREST,8]]],[e.ZAMAZENTA,I.FIGHTING,-1,[[T.DOJO,8]]],[e.ETERNATUS,I.POISON,I.DRAGON,[[T.END,5]]],[e.KUBFU,I.FIGHTING,-1,[[T.DOJO,4]]],[e.URSHIFU,I.FIGHTING,I.DARK,[[T.DOJO,7]]],[e.ZARUDE,I.DARK,I.GRASS,[[T.JUNGLE,4],[T.JUNGLE,7]]],[e.REGIELEKI,I.ELECTRIC,-1,[[T.POWER_PLANT,4],[T.POWER_PLANT,7]]],[e.REGIDRAGO,I.DRAGON,-1,[[T.WASTELAND,4],[T.WASTELAND,7]]],[e.GLASTRIER,I.ICE,-1,[[T.SNOWY_FOREST,4],[T.SNOWY_FOREST,7]]],[e.SPECTRIER,I.GHOST,-1,[[T.GRAVEYARD,4],[T.GRAVEYARD,7]]],[e.CALYREX,I.PSYCHIC,I.GRASS,[[T.FOREST,8]]],[e.WYRDEER,I.NORMAL,I.PSYCHIC,[[T.SNOWY_FOREST,5,[S.DAWN,S.DAY]]]],[e.KLEAVOR,I.BUG,I.ROCK,[[T.JUNGLE,3],[T.JUNGLE,8]]],[e.URSALUNA,I.GROUND,I.NORMAL,[[T.SNOWY_FOREST,5]]],[e.BASCULEGION,I.WATER,I.GHOST,[[T.SEABED,6]]],[e.SNEASLER,I.FIGHTING,I.POISON,[[T.SNOWY_FOREST,6,[S.DAWN,S.DAY]]]],[e.OVERQWIL,I.DARK,I.POISON,[[T.SEABED,6]]],[e.ENAMORUS,I.FAIRY,I.FLYING,[[T.FAIRY_CAVE,4],[T.FAIRY_CAVE,7]]],[e.SPRIGATITO,I.GRASS,-1,[[T.MEADOW,2]]],[e.FLORAGATO,I.GRASS,-1,[[T.MEADOW,2]]],[e.MEOWSCARADA,I.GRASS,I.DARK,[[T.MEADOW,2],[T.MEADOW,6]]],[e.FUECOCO,I.FIRE,-1,[[T.GRAVEYARD,2]]],[e.CROCALOR,I.FIRE,-1,[[T.GRAVEYARD,2]]],[e.SKELEDIRGE,I.FIRE,I.GHOST,[[T.GRAVEYARD,2],[T.GRAVEYARD,6]]],[e.QUAXLY,I.WATER,-1,[[T.BEACH,2]]],[e.QUAXWELL,I.WATER,-1,[[T.BEACH,2]]],[e.QUAQUAVAL,I.WATER,I.FIGHTING,[[T.BEACH,2],[T.BEACH,6]]],[e.LECHONK,I.NORMAL,-1,[[T.TOWN,0],[T.PLAINS,0]]],[e.OINKOLOGNE,I.NORMAL,-1,[[T.PLAINS,0],[T.PLAINS,5]]],[e.TAROUNTULA,I.BUG,-1,[[T.FOREST,0]]],[e.SPIDOPS,I.BUG,-1,[[T.FOREST,0],[T.FOREST,5]]],[e.NYMBLE,I.BUG,-1,[[T.TALL_GRASS,0],[T.FOREST,0]]],[e.LOKIX,I.BUG,I.DARK,[[T.TALL_GRASS,0],[T.TALL_GRASS,5],[T.FOREST,0],[T.FOREST,5]]],[e.PAWMI,I.ELECTRIC,-1,[[T.TOWN,1,[S.DAWN,S.DAY]],[T.PLAINS,1,[S.DAWN,S.DAY]],[T.POWER_PLANT,0]]],[e.PAWMO,I.ELECTRIC,I.FIGHTING,[[T.PLAINS,1,[S.DAWN,S.DAY]],[T.POWER_PLANT,0]]],[e.PAWMOT,I.ELECTRIC,I.FIGHTING,[[T.PLAINS,1,[S.DAWN,S.DAY]],[T.PLAINS,6,[S.DAWN,S.DAY]],[T.POWER_PLANT,0],[T.POWER_PLANT,5]]],[e.TANDEMAUS,I.NORMAL,-1,[[T.TOWN,2,[S.DAWN,S.DAY]],[T.METROPOLIS,2,[S.DAWN,S.DAY]]]],[e.MAUSHOLD,I.NORMAL,-1,[[T.METROPOLIS,2,[S.DAWN,S.DAY]],[T.METROPOLIS,6,[S.DAWN,S.DAY]]]],[e.FIDOUGH,I.FAIRY,-1,[[T.TOWN,1],[T.METROPOLIS,1]]],[e.DACHSBUN,I.FAIRY,-1,[[T.METROPOLIS,1],[T.METROPOLIS,5]]],[e.SMOLIV,I.GRASS,I.NORMAL,[[T.MEADOW,1,[S.DAWN,S.DAY]]]],[e.DOLLIV,I.GRASS,I.NORMAL,[[T.MEADOW,1,[S.DAWN,S.DAY]]]],[e.ARBOLIVA,I.GRASS,I.NORMAL,[[T.MEADOW,1,[S.DAWN,S.DAY]],[T.MEADOW,5,[S.DAWN,S.DAY]]]],[e.SQUAWKABILLY,I.NORMAL,I.FLYING,[[T.METROPOLIS,1],[T.FOREST,2]]],[e.NACLI,I.ROCK,-1,[[T.MOUNTAIN,1],[T.CAVE,0]]],[e.NACLSTACK,I.ROCK,-1,[[T.MOUNTAIN,1],[T.CAVE,0]]],[e.GARGANACL,I.ROCK,-1,[[T.MOUNTAIN,1],[T.MOUNTAIN,5],[T.CAVE,0],[T.CAVE,5]]],[e.CHARCADET,I.FIRE,-1,[[T.VOLCANO,2]]],[e.ARMAROUGE,I.FIRE,I.PSYCHIC,[[T.VOLCANO,2],[T.VOLCANO,6]]],[e.CERULEDGE,I.FIRE,I.GHOST,[[T.GRAVEYARD,2],[T.GRAVEYARD,6]]],[e.TADBULB,I.ELECTRIC,-1,[[T.POWER_PLANT,0]]],[e.BELLIBOLT,I.ELECTRIC,-1,[[T.POWER_PLANT,0],[T.POWER_PLANT,5]]],[e.WATTREL,I.ELECTRIC,I.FLYING,[[T.SEA,1]]],[e.KILOWATTREL,I.ELECTRIC,I.FLYING,[[T.SEA,1],[T.SEA,5]]],[e.MASCHIFF,I.DARK,-1,[[T.ABYSS,0]]],[e.MABOSSTIFF,I.DARK,-1,[[T.ABYSS,0],[T.ABYSS,5]]],[e.SHROODLE,I.POISON,I.NORMAL,[[T.FOREST,0]]],[e.GRAFAIAI,I.POISON,I.NORMAL,[[T.FOREST,0],[T.FOREST,5]]],[e.BRAMBLIN,I.GRASS,I.GHOST,[[T.DESERT,1]]],[e.BRAMBLEGHAST,I.GRASS,I.GHOST,[[T.DESERT,1],[T.DESERT,5]]],[e.TOEDSCOOL,I.GROUND,I.GRASS,[[T.FOREST,2]]],[e.TOEDSCRUEL,I.GROUND,I.GRASS,[[T.FOREST,2],[T.FOREST,6]]],[e.KLAWF,I.ROCK,-1,[[T.MOUNTAIN,2]]],[e.CAPSAKID,I.GRASS,-1,[[T.BADLANDS,1,[S.DAWN,S.DAY]]]],[e.SCOVILLAIN,I.GRASS,I.FIRE,[[T.BADLANDS,1,[S.DAWN,S.DAY]],[T.BADLANDS,5,[S.DAWN,S.DAY]]]],[e.RELLOR,I.BUG,-1,[[T.DESERT,0,[S.DAWN,S.DAY]]]],[e.RABSCA,I.BUG,I.PSYCHIC,[[T.DESERT,0,[S.DAWN,S.DAY]],[T.DESERT,5,[S.DAWN,S.DAY]]]],[e.FLITTLE,I.PSYCHIC,-1,[[T.MOUNTAIN,1,[S.DAWN,S.DAY]]]],[e.ESPATHRA,I.PSYCHIC,-1,[[T.MOUNTAIN,1,[S.DAWN,S.DAY]],[T.MOUNTAIN,5,[S.DAWN,S.DAY]]]],[e.TINKATINK,I.FAIRY,I.STEEL,[[T.RUINS,1]]],[e.TINKATUFF,I.FAIRY,I.STEEL,[[T.RUINS,1]]],[e.TINKATON,I.FAIRY,I.STEEL,[[T.RUINS,1],[T.RUINS,5]]],[e.WIGLETT,I.WATER,-1,[[T.BEACH,0]]],[e.WUGTRIO,I.WATER,-1,[[T.BEACH,0]]],[e.BOMBIRDIER,I.FLYING,I.DARK,[[T.MOUNTAIN,1,[S.DAWN,S.DAY]]]],[e.FINIZEN,I.WATER,-1,[[T.SEA,0,[S.DAWN,S.DAY]]]],[e.PALAFIN,I.WATER,-1,[[T.SEA,0,[S.DAWN,S.DAY]],[T.SEA,5,[S.DAWN,S.DAY]]]],[e.VAROOM,I.STEEL,I.POISON,[[T.METROPOLIS,2],[T.SLUM,2]]],[e.REVAVROOM,I.STEEL,I.POISON,[[T.METROPOLIS,2],[T.METROPOLIS,6],[T.SLUM,2],[T.SLUM,6]]],[e.CYCLIZAR,I.DRAGON,I.NORMAL,[[T.WASTELAND,1]]],[e.ORTHWORM,I.STEEL,-1,[[T.DESERT,1]]],[e.GLIMMET,I.ROCK,I.POISON,[[T.CAVE,2]]],[e.GLIMMORA,I.ROCK,I.POISON,[[T.CAVE,2],[T.CAVE,6]]],[e.GREAVARD,I.GHOST,-1,[[T.GRAVEYARD,0]]],[e.HOUNDSTONE,I.GHOST,-1,[[T.GRAVEYARD,0],[T.GRAVEYARD,5]]],[e.FLAMIGO,I.FLYING,I.FIGHTING,[[T.LAKE,1]]],[e.CETODDLE,I.ICE,-1,[[T.ICE_CAVE,1]]],[e.CETITAN,I.ICE,-1,[[T.ICE_CAVE,1],[T.ICE_CAVE,5]]],[e.VELUZA,I.WATER,I.PSYCHIC,[[T.SEABED,0]]],[e.DONDOZO,I.WATER,-1,[[T.SEABED,1],[T.SEABED,5]]],[e.TATSUGIRI,I.DRAGON,I.WATER,[[T.BEACH,2]]],[e.ANNIHILAPE,I.FIGHTING,I.GHOST,[[T.PLAINS,1,[S.DUSK,S.NIGHT]],[T.DOJO,0],[T.DOJO,5]]],[e.CLODSIRE,I.POISON,I.GROUND,[[T.SWAMP,0,[S.DUSK,S.NIGHT]],[T.SWAMP,5,[S.DUSK,S.NIGHT]]]],[e.FARIGIRAF,I.NORMAL,I.PSYCHIC,[[T.TALL_GRASS,2],[T.TALL_GRASS,6]]],[e.DUDUNSPARCE,I.NORMAL,-1,[[T.PLAINS,3],[T.PLAINS,6]]],[e.KINGAMBIT,I.DARK,I.STEEL,[[T.ABYSS,0],[T.ABYSS,5]]],[e.GREAT_TUSK,I.GROUND,I.FIGHTING,[[T.END,0]]],[e.SCREAM_TAIL,I.FAIRY,I.PSYCHIC,[[T.END,0]]],[e.BRUTE_BONNET,I.GRASS,I.DARK,[[T.END,0]]],[e.FLUTTER_MANE,I.GHOST,I.FAIRY,[[T.END,0]]],[e.SLITHER_WING,I.BUG,I.FIGHTING,[[T.END,0]]],[e.SANDY_SHOCKS,I.ELECTRIC,I.GROUND,[[T.END,0]]],[e.IRON_TREADS,I.GROUND,I.STEEL,[[T.END,0]]],[e.IRON_BUNDLE,I.ICE,I.WATER,[[T.END,0]]],[e.IRON_HANDS,I.FIGHTING,I.ELECTRIC,[[T.END,0]]],[e.IRON_JUGULIS,I.DARK,I.FLYING,[[T.END,0]]],[e.IRON_MOTH,I.FIRE,I.POISON,[[T.END,0]]],[e.IRON_THORNS,I.ROCK,I.ELECTRIC,[[T.END,0]]],[e.FRIGIBAX,I.DRAGON,I.ICE,[[T.WASTELAND,2]]],[e.ARCTIBAX,I.DRAGON,I.ICE,[[T.WASTELAND,2]]],[e.BAXCALIBUR,I.DRAGON,I.ICE,[[T.WASTELAND,2],[T.WASTELAND,5]]],[e.GIMMIGHOUL,I.GHOST,-1,[[T.TEMPLE,2]]],[e.GHOLDENGO,I.STEEL,I.GHOST,[[T.TEMPLE,2],[T.TEMPLE,6]]],[e.WO_CHIEN,I.DARK,I.GRASS,[[T.FOREST,4],[T.FOREST,7]]],[e.CHIEN_PAO,I.DARK,I.ICE,[[T.SNOWY_FOREST,4],[T.SNOWY_FOREST,7]]],[e.TING_LU,I.DARK,I.GROUND,[[T.MOUNTAIN,4],[T.MOUNTAIN,7]]],[e.CHI_YU,I.DARK,I.FIRE,[[T.VOLCANO,4],[T.VOLCANO,7]]],[e.ROARING_MOON,I.DRAGON,I.DARK,[[T.END,1]]],[e.IRON_VALIANT,I.FAIRY,I.FIGHTING,[[T.END,1]]],[e.KORAIDON,I.FIGHTING,I.DRAGON,[[T.RUINS,8]]],[e.MIRAIDON,I.ELECTRIC,I.DRAGON,[[T.LABORATORY,8]]],[e.WALKING_WAKE,I.WATER,I.DRAGON,[[T.END,2]]],[e.IRON_LEAVES,I.GRASS,I.PSYCHIC,[[T.END,2]]],[e.DIPPLIN,I.GRASS,I.DRAGON,[[T.MEADOW,2]]],[e.POLTCHAGEIST,I.GRASS,I.GHOST,[[T.BADLANDS,2]]],[e.SINISTCHA,I.GRASS,I.GHOST,[[T.BADLANDS,2],[T.BADLANDS,6]]],[e.OKIDOGI,I.POISON,I.FIGHTING,[[T.BADLANDS,4],[T.BADLANDS,7]]],[e.MUNKIDORI,I.POISON,I.PSYCHIC,[[T.JUNGLE,4],[T.JUNGLE,7]]],[e.FEZANDIPITI,I.POISON,I.FAIRY,[[T.RUINS,4],[T.RUINS,7]]],[e.OGERPON,I.GRASS,-1,[[T.MOUNTAIN,4],[T.MOUNTAIN,7]]],[e.ARCHALUDON,I.STEEL,I.DRAGON,[[T.CONSTRUCTION_SITE,6]]],[e.HYDRAPPLE,I.GRASS,I.DRAGON,[[T.MEADOW,6]]],[e.GOUGING_FIRE,I.FIRE,I.DRAGON,[[T.END,2]]],[e.RAGING_BOLT,I.ELECTRIC,I.DRAGON,[[T.END,2]]],[e.IRON_BOULDER,I.ROCK,I.PSYCHIC,[[T.END,2]]],[e.IRON_CROWN,I.STEEL,I.PSYCHIC,[[T.END,2]]],[e.TERAPAGOS,I.NORMAL,-1,[[T.CAVE,8]]],[e.PECHARUNT,I.POISON,I.GHOST,[]],[e.ALOLA_RATTATA,I.DARK,I.NORMAL,[[T.ISLAND,0,[S.DUSK,S.NIGHT]]]],[e.ALOLA_RATICATE,I.DARK,I.NORMAL,[[T.ISLAND,0,[S.DUSK,S.NIGHT]],[T.ISLAND,5,[S.DUSK,S.NIGHT]]]],[e.ALOLA_RAICHU,I.ELECTRIC,I.PSYCHIC,[[T.ISLAND,1,[S.DAWN,S.DAY]],[T.ISLAND,5,[S.DAWN,S.DAY]]]],[e.ALOLA_SANDSHREW,I.ICE,I.STEEL,[[T.ISLAND,0],[T.SNOWY_FOREST,2]]],[e.ALOLA_SANDSLASH,I.ICE,I.STEEL,[[T.ISLAND,0],[T.ISLAND,5],[T.SNOWY_FOREST,2],[T.SNOWY_FOREST,6]]],[e.ALOLA_VULPIX,I.ICE,-1,[[T.ISLAND,0],[T.SNOWY_FOREST,2]]],[e.ALOLA_NINETALES,I.ICE,I.FAIRY,[[T.ISLAND,0],[T.ISLAND,5],[T.SNOWY_FOREST,2],[T.SNOWY_FOREST,6]]],[e.ALOLA_DIGLETT,I.GROUND,I.STEEL,[[T.ISLAND,0]]],[e.ALOLA_DUGTRIO,I.GROUND,I.STEEL,[[T.ISLAND,0],[T.ISLAND,5]]],[e.ALOLA_MEOWTH,I.DARK,-1,[[T.ISLAND,0,[S.DUSK,S.NIGHT]]]],[e.ALOLA_PERSIAN,I.DARK,-1,[[T.ISLAND,0,[S.DUSK,S.NIGHT]],[T.ISLAND,5,[S.DUSK,S.NIGHT]]]],[e.ALOLA_GEODUDE,I.ROCK,I.ELECTRIC,[[T.ISLAND,0]]],[e.ALOLA_GRAVELER,I.ROCK,I.ELECTRIC,[[T.ISLAND,0]]],[e.ALOLA_GOLEM,I.ROCK,I.ELECTRIC,[[T.ISLAND,0],[T.ISLAND,5]]],[e.ALOLA_GRIMER,I.POISON,I.DARK,[[T.ISLAND,0]]],[e.ALOLA_MUK,I.POISON,I.DARK,[[T.ISLAND,0],[T.ISLAND,5]]],[e.ALOLA_EXEGGUTOR,I.GRASS,I.DRAGON,[[T.ISLAND,1,[S.DAWN,S.DAY]],[T.ISLAND,5,[S.DAWN,S.DAY]]]],[e.ALOLA_MAROWAK,I.FIRE,I.GHOST,[[T.ISLAND,1,[S.DUSK,S.NIGHT]],[T.ISLAND,5,[S.DUSK,S.NIGHT]]]],[e.ETERNAL_FLOETTE,I.FAIRY,-1,[[T.FAIRY_CAVE,2],[T.FAIRY_CAVE,6]]],[e.GALAR_MEOWTH,I.STEEL,-1,[[T.CONSTRUCTION_SITE,2,S.DUSK]]],[e.GALAR_PONYTA,I.PSYCHIC,-1,[[T.JUNGLE,2,S.DAWN]]],[e.GALAR_RAPIDASH,I.PSYCHIC,I.FAIRY,[[T.JUNGLE,2,S.DAWN],[T.JUNGLE,6,S.DAWN]]],[e.GALAR_SLOWPOKE,I.PSYCHIC,-1,[[T.SWAMP,3,[S.DAWN,S.DAY]]]],[e.GALAR_SLOWBRO,I.POISON,I.PSYCHIC,[[T.SWAMP,3,[S.DAWN,S.DAY]],[T.SWAMP,6,[S.DAWN,S.DAY]]]],[e.GALAR_FARFETCHD,I.FIGHTING,-1,[[T.DOJO,3]]],[e.GALAR_WEEZING,I.POISON,I.FAIRY,[[T.SLUM,6]]],[e.GALAR_MR_MIME,I.ICE,I.PSYCHIC,[[T.SNOWY_FOREST,3]]],[e.GALAR_ARTICUNO,I.PSYCHIC,I.FLYING,[[T.SNOWY_FOREST,4],[T.SNOWY_FOREST,8]]],[e.GALAR_ZAPDOS,I.FIGHTING,I.FLYING,[[T.DOJO,4],[T.DOJO,8]]],[e.GALAR_MOLTRES,I.DARK,I.FLYING,[[T.ABYSS,4],[T.ABYSS,8]]],[e.GALAR_SLOWKING,I.POISON,I.PSYCHIC,[[T.SWAMP,6,[S.DAWN,S.DAY]]]],[e.GALAR_CORSOLA,I.GHOST,-1,[[T.SEABED,3]]],[e.GALAR_ZIGZAGOON,I.DARK,I.NORMAL,[[T.SLUM,2,[S.DUSK,S.NIGHT]]]],[e.GALAR_LINOONE,I.DARK,I.NORMAL,[[T.SLUM,2,[S.DUSK,S.NIGHT]]]],[e.GALAR_DARUMAKA,I.ICE,-1,[[T.SNOWY_FOREST,2,[S.DAWN,S.DAY]]]],[e.GALAR_DARMANITAN,I.ICE,-1,[[T.SNOWY_FOREST,2,[S.DAWN,S.DAY]],[T.SNOWY_FOREST,6,[S.DAWN,S.DAY]]]],[e.GALAR_YAMASK,I.GROUND,I.GHOST,[[T.RUINS,3,[S.DUSK,S.NIGHT]]]],[e.GALAR_STUNFISK,I.GROUND,I.STEEL,[[T.SWAMP,3],[T.SWAMP,6]]],[e.HISUI_GROWLITHE,I.FIRE,I.ROCK,[[T.VOLCANO,3]]],[e.HISUI_ARCANINE,I.FIRE,I.ROCK,[[T.VOLCANO,6]]],[e.HISUI_VOLTORB,I.ELECTRIC,I.GRASS,[[T.POWER_PLANT,3]]],[e.HISUI_ELECTRODE,I.ELECTRIC,I.GRASS,[[T.POWER_PLANT,6]]],[e.HISUI_TYPHLOSION,I.FIRE,I.GHOST,[[T.GRAVEYARD,6]]],[e.HISUI_QWILFISH,I.DARK,I.POISON,[[T.SEABED,3]]],[e.HISUI_SNEASEL,I.FIGHTING,I.POISON,[[T.SNOWY_FOREST,3,[S.DAWN,S.DAY]]]],[e.HISUI_SAMUROTT,I.WATER,I.DARK,[[T.ABYSS,6]]],[e.HISUI_LILLIGANT,I.GRASS,I.FIGHTING,[[T.MEADOW,6,[S.DAWN,S.DAY]]]],[e.HISUI_ZORUA,I.NORMAL,I.GHOST,[[T.SNOWY_FOREST,3,[S.DUSK,S.NIGHT]]]],[e.HISUI_ZOROARK,I.NORMAL,I.GHOST,[[T.SNOWY_FOREST,3,[S.DUSK,S.NIGHT]],[T.SNOWY_FOREST,6,[S.DUSK,S.NIGHT]]]],[e.HISUI_BRAVIARY,I.PSYCHIC,I.FLYING,[[T.MOUNTAIN,6,[S.DAWN,S.DAY]]]],[e.HISUI_SLIGGOO,I.STEEL,I.DRAGON,[[T.SWAMP,3,[S.DAWN,S.DAY]]]],[e.HISUI_GOODRA,I.STEEL,I.DRAGON,[[T.SWAMP,3,[S.DAWN,S.DAY]],[T.SWAMP,6,[S.DAWN,S.DAY]]]],[e.HISUI_AVALUGG,I.ICE,I.ROCK,[[T.SNOWY_FOREST,3]]],[e.HISUI_DECIDUEYE,I.GRASS,I.FIGHTING,[[T.DOJO,6]]],[e.PALDEA_TAUROS,I.FIGHTING,-1,[[T.PLAINS,2,[S.DAWN,S.DAY]],[T.PLAINS,6,[S.DAWN,S.DAY]]]],[e.PALDEA_WOOPER,I.POISON,I.GROUND,[[T.SWAMP,0,[S.DUSK,S.NIGHT]]]],[e.BLOODMOON_URSALUNA,I.GROUND,I.NORMAL,[[T.FOREST,3,S.NIGHT],[T.FOREST,6,S.NIGHT]]]],A=[[U.ACE_TRAINER,[[T.PLAINS,1],[T.GRASS,1],[T.TALL_GRASS,1],[T.SWAMP,1],[T.BEACH,1],[T.LAKE,1],[T.MOUNTAIN,1],[T.BADLANDS,1],[T.CAVE,1],[T.MEADOW,1],[T.RUINS,1],[T.ABYSS,1],[T.FAIRY_CAVE,1],[T.TEMPLE,1]]],[U.ARTIST,[[T.METROPOLIS,2]]],[U.BACKERS,[]],[U.BACKPACKER,[[T.MOUNTAIN,0],[T.CAVE,0],[T.BADLANDS,0],[T.JUNGLE,0]]],[U.BAKER,[[T.SLUM,1]]],[U.BEAUTY,[[T.FAIRY_CAVE,0]]],[U.BIKER,[[T.SLUM,0]]],[U.BLACK_BELT,[[T.DOJO,0],[T.PLAINS,2],[T.GRASS,2],[T.SWAMP,2],[T.BEACH,2],[T.LAKE,2],[T.MOUNTAIN,0],[T.CAVE,1],[T.RUINS,1]]],[U.BREEDER,[[T.PLAINS,0],[T.GRASS,0],[T.TALL_GRASS,1],[T.METROPOLIS,1],[T.BEACH,1],[T.LAKE,0],[T.MEADOW,1],[T.FAIRY_CAVE,1]]],[U.CLERK,[[T.METROPOLIS,0]]],[U.CYCLIST,[[T.PLAINS,1],[T.METROPOLIS,0]]],[U.DANCER,[]],[U.DEPOT_AGENT,[[T.METROPOLIS,1]]],[U.DOCTOR,[]],[U.FISHERMAN,[[T.LAKE,0],[T.BEACH,0]]],[U.RICH,[]],[U.GUITARIST,[[T.METROPOLIS,1],[T.POWER_PLANT,0]]],[U.HARLEQUIN,[]],[U.HIKER,[[T.MOUNTAIN,0],[T.CAVE,0],[T.BADLANDS,0]]],[U.HOOLIGANS,[]],[U.HOOPSTER,[]],[U.INFIELDER,[]],[U.JANITOR,[]],[U.LINEBACKER,[]],[U.MAID,[]],[U.MUSICIAN,[]],[U.NURSERY_AIDE,[]],[U.OFFICER,[[T.METROPOLIS,0],[T.CONSTRUCTION_SITE,0],[T.SLUM,0]]],[U.PARASOL_LADY,[[T.BEACH,0],[T.MEADOW,0]]],[U.PILOT,[]],[U.POKEFAN,[]],[U.PRESCHOOLER,[]],[U.PSYCHIC,[[T.GRAVEYARD,0],[T.RUINS,0]]],[U.RANGER,[[T.TALL_GRASS,1],[T.FOREST,0],[T.JUNGLE,0]]],[U.RICH_KID,[]],[U.ROUGHNECK,[[T.SLUM,0]]],[U.SCIENTIST,[[T.DESERT,0],[T.RUINS,0]]],[U.SMASHER,[]],[U.SNOW_WORKER,[[T.ICE_CAVE,0],[T.SNOWY_FOREST,0]]],[U.STRIKER,[]],[U.SCHOOL_KID,[[T.GRASS,0]]],[U.SWIMMER,[[T.SEA,0]]],[U.TWINS,[[T.PLAINS,0]]],[U.VETERAN,[[T.WASTELAND,0]]],[U.WAITER,[[T.METROPOLIS,0]]],[U.WORKER,[[T.POWER_PLANT,0],[T.FACTORY,0],[T.CONSTRUCTION_SITE,0]]],[U.YOUNGSTER,[[T.TOWN,0]]],[U.HEX_MANIAC,[[T.GRAVEYARD,1]]],[U.FIREBREATHER,[[T.VOLCANO,0]]],[U.SAILOR,[[T.SEA,0],[T.BEACH,0]]],[U.BROCK,[[T.CAVE,5]]],[U.MISTY,[[T.BEACH,5]]],[U.LT_SURGE,[[T.CONSTRUCTION_SITE,5]]],[U.ERIKA,[[T.GRASS,5]]],[U.JANINE,[[T.SWAMP,5]]],[U.SABRINA,[[T.RUINS,5]]],[U.GIOVANNI,[[T.LABORATORY,5]]],[U.BLAINE,[[T.VOLCANO,5]]],[U.FALKNER,[[T.MOUNTAIN,5]]],[U.BUGSY,[[T.FOREST,5]]],[U.WHITNEY,[[T.METROPOLIS,5]]],[U.MORTY,[[T.GRAVEYARD,5]]],[U.CHUCK,[[T.CONSTRUCTION_SITE,5]]],[U.JASMINE,[[T.FACTORY,5]]],[U.PRYCE,[[T.ICE_CAVE,5]]],[U.CLAIR,[[T.WASTELAND,5]]],[U.ROXANNE,[[T.CAVE,5]]],[U.BRAWLY,[[T.DOJO,5]]],[U.WATTSON,[[T.CONSTRUCTION_SITE,5]]],[U.FLANNERY,[[T.VOLCANO,5]]],[U.NORMAN,[[T.METROPOLIS,5]]],[U.WINONA,[[T.MOUNTAIN,5]]],[U.TATE,[[T.RUINS,5]]],[U.LIZA,[[T.RUINS,5]]],[U.JUAN,[[T.SEABED,5]]],[U.ROARK,[[T.CAVE,5]]],[U.GARDENIA,[[T.TALL_GRASS,5]]],[U.CRASHER_WAKE,[[T.LAKE,5]]],[U.MAYLENE,[[T.DOJO,5]]],[U.FANTINA,[[T.TEMPLE,5]]],[U.BYRON,[[T.FACTORY,5]]],[U.CANDICE,[[T.SNOWY_FOREST,5]]],[U.VOLKNER,[[T.POWER_PLANT,5]]],[U.CILAN,[[T.PLAINS,5]]],[U.CHILI,[[T.PLAINS,5]]],[U.CRESS,[[T.PLAINS,5]]],[U.CHEREN,[[T.PLAINS,5]]],[U.LENORA,[[T.MEADOW,5]]],[U.ROXIE,[[T.SWAMP,5]]],[U.BURGH,[[T.FOREST,5]]],[U.ELESA,[[T.POWER_PLANT,5]]],[U.CLAY,[[T.BADLANDS,5]]],[U.SKYLA,[[T.MOUNTAIN,5]]],[U.BRYCEN,[[T.ICE_CAVE,5]]],[U.DRAYDEN,[[T.WASTELAND,5]]],[U.MARLON,[[T.SEA,5]]],[U.VIOLA,[[T.TALL_GRASS,5]]],[U.GRANT,[[T.BADLANDS,5]]],[U.KORRINA,[[T.DOJO,5]]],[U.RAMOS,[[T.JUNGLE,5]]],[U.CLEMONT,[[T.POWER_PLANT,5]]],[U.VALERIE,[[T.FAIRY_CAVE,5]]],[U.OLYMPIA,[[T.SPACE,5]]],[U.WULFRIC,[[T.ICE_CAVE,5]]],[U.MILO,[[T.MEADOW,5]]],[U.NESSA,[[T.ISLAND,5]]],[U.KABU,[[T.VOLCANO,5]]],[U.BEA,[[T.DOJO,5]]],[U.ALLISTER,[[T.GRAVEYARD,5]]],[U.OPAL,[[T.FAIRY_CAVE,5]]],[U.BEDE,[[T.FAIRY_CAVE,5]]],[U.GORDIE,[[T.DESERT,5]]],[U.MELONY,[[T.SNOWY_FOREST,5]]],[U.PIERS,[[T.SLUM,5]]],[U.MARNIE,[[T.ABYSS,5]]],[U.RAIHAN,[[T.WASTELAND,5]]],[U.KATY,[[T.FOREST,5]]],[U.BRASSIUS,[[T.TALL_GRASS,5]]],[U.IONO,[[T.METROPOLIS,5]]],[U.KOFU,[[T.BEACH,5]]],[U.LARRY,[[T.METROPOLIS,5]]],[U.RYME,[[T.GRAVEYARD,5]]],[U.TULIP,[[T.RUINS,5]]],[U.GRUSHA,[[T.ICE_CAVE,5]]],[U.LORELEI,[]],[U.BRUNO,[]],[U.AGATHA,[]],[U.LANCE,[]],[U.WILL,[]],[U.KOGA,[]],[U.KAREN,[]],[U.SIDNEY,[]],[U.PHOEBE,[]],[U.GLACIA,[]],[U.DRAKE,[]],[U.AARON,[]],[U.BERTHA,[]],[U.FLINT,[]],[U.LUCIAN,[]],[U.SHAUNTAL,[]],[U.MARSHAL,[]],[U.GRIMSLEY,[]],[U.CAITLIN,[]],[U.MALVA,[]],[U.SIEBOLD,[]],[U.WIKSTROM,[]],[U.DRASNA,[]],[U.HALA,[]],[U.MOLAYNE,[]],[U.OLIVIA,[]],[U.ACEROLA,[]],[U.KAHILI,[]],[U.RIKA,[]],[U.POPPY,[]],[U.LARRY_ELITE,[]],[U.HASSEL,[]],[U.CRISPIN,[]],[U.AMARYS,[]],[U.LACEY,[]],[U.DRAYTON,[]],[U.BLUE,[]],[U.RED,[]],[U.LANCE_CHAMPION,[]],[U.STEVEN,[]],[U.WALLACE,[]],[U.CYNTHIA,[]],[U.ALDER,[]],[U.IRIS,[]],[U.DIANTHA,[]],[U.HAU,[]],[U.GEETA,[]],[U.NEMONA,[]],[U.KIERAN,[]],[U.LEON,[]],[U.RIVAL,[]]];wO[T.TOWN]=[0,1];const s=N((R,a)=>{if(R===T.END){const r=Object.keys(T).filter(o=>!isNaN(Number(o)));r.pop();const L=ce(r.length,1);R=T[r[L]]}const i=Array.isArray(Ln[R])?Ln[R]:[Ln[R]];for(const r of i){const L=Array.isArray(r)?r[0]:r,o=Array.isArray(r)?r[1]:1;(!wO.hasOwnProperty(L)||o<wO[L][1]||a<wO[L][0]&&o===wO[L][1])&&(wO[L]=[a+1,o],s(L,a+1))}},"traverseBiome");s(T.TOWN,0),wO[T.END]=[Object.values(wO).map(R=>R[0]).reduce((R,a)=>Math.max(R,a),0)+1,1];for(const R of DE(T)){KR[R]={},Vi[R]={};for(const a of DE(qA)){KR[R][a]={},Vi[R][a]=[];for(const i of DE(S))KR[R][a][i]=[]}}for(const R of E){const a=R[0],i=R[3],r=bt.hasOwnProperty(a)?bt[a]:[];!i.filter(L=>L[0]!==T.END).length&&!r.filter(L=>!!E.find(o=>o[0]===L.speciesId)[3].filter(o=>o[0]!==T.END).length).length&&j8.push(a);for(const L of i){const o=L[0],l=L[1],C=L.length>2?Array.isArray(L[2])?L[2]:[L[2]]:[S.ALL];for(const M of C){if(!KR.hasOwnProperty(o)||!KR[o].hasOwnProperty(l)||!KR[o][l].hasOwnProperty(M))continue;const D=KR[o][l][M];let _=-1,P=0;for(let h=0;h<D.length;h++){const H=D[h];for(let d=0;d<H.length;d++){const f=H[d];if(bt.hasOwnProperty(f)&&bt[f].find(B=>B.speciesId===a)){_=h,P=d+1;break}else if(r&&r.find(B=>B.speciesId===f)){_=h,P=d;break}}if(_>-1)break}_>-1?D[_].splice(P,0,a):D.push([a])}}}for(const R of Object.keys(KR))for(const a of Object.keys(KR[R])){const i=parseInt(a);for(const r of Object.keys(KR[R][a])){const L=KR[R][a][r];for(let o=0;o<L.length;o++){const l=L[o];if(l.length===1)L[o]=l[0];else{const C={1:[l[0]]};for(let M=1;M<l.length;M++){const D=l[M],_=l.map(h=>bt[h]).flat().find(h=>h&&h.speciesId===D),P=_.level-(_.level===1?1:0)+_.wildDelay*10-(i>=5?10:0);C.hasOwnProperty(P)?C[P].push(D):C[P]=[D]}L[o]=C}}}}for(const R of A){const a=R[0],i=R[1];for(const r of i){const L=r[0],o=r[1];if(!Vi.hasOwnProperty(L)||!Vi[L].hasOwnProperty(o))continue;Vi[L][o].push(a)}}}N(L$,"initBiomes");const Tx=class Tx{constructor(A,s){this.eventTarget=new EventTarget,this.biomeType=A,this.tags=[],this.bgm=s,this.trainerPool=Vi[A],this.updatePoolsForTimeOfDay()}init(){const A=Qo(this.biomeType);n.arenaPlayer.setBiome(this.biomeType),n.arenaPlayerTransition.setBiome(this.biomeType),n.arenaEnemy.setBiome(this.biomeType),n.arenaNextEnemy.setBiome(this.biomeType),n.arenaBg.setTexture(`${A}_bg`),n.arenaBgTransition.setTexture(`${A}_bg`),this.updatePoolsForTimeOfDay()}updatePoolsForTimeOfDay(){const A=this.getTimeOfDay();if(A!==this.lastTimeOfDay){this.pokemonPool={};for(const s of Object.keys(KR[this.biomeType]))this.pokemonPool[s]=Object.assign([],KR[this.biomeType][s][S.ALL]).concat(KR[this.biomeType][s][A]);this.lastTimeOfDay=A}}randomSpecies(A,s,R,a,i){const r=n.gameMode.getOverrideSpecies(A);if(r)return r;const L=!!n.getEncounterBossSegments(A,s)&&!!this.pokemonPool[qA.BOSS].length&&(this.biomeType!==T.END||n.gameMode.isClassic||n.gameMode.isWaveFinal(A)),o=L?64:512;let l=0;typeof a<"u"&&(l=a*(L?.5:2));const C=ce(o-l);let M=L?C>=20?qA.BOSS:C>=6?qA.BOSS_RARE:C>=1?qA.BOSS_SUPER_RARE:qA.BOSS_ULTRA_RARE:C>=156?qA.COMMON:C>=32?qA.UNCOMMON:C>=6?qA.RARE:C>=1?qA.SUPER_RARE:qA.ULTRA_RARE;for(console.log(qA[M]);!this.pokemonPool[M].length;)console.log(`Downgraded rarity tier from ${qA[M]} to ${qA[M-1]}`),M--;const D=this.pokemonPool[M];let _,P=!1;if(!D.length)_=n.randomSpecies(A,s);else{const H=D[ce(D.length)];let d;if(typeof H=="number")d=H;else{const f=Object.keys(H);for(let B=f.length-1;B>=0;B--){const F=parseInt(f[B]);if(s>=F){const W=H[F];W.length>1?d=W[ce(W.length)]:d=W[0];break}}}if(_=ke(d),_.subLegendary||_.legendary||_.mythical)switch(!0){case _.baseTotal>=720:P=s<90;break;case _.baseTotal>=670:P=s<70;break;case _.baseTotal>=580:P=s<50;break;default:P=s<30;break}}if(P&&(R||0)<10)return console.log("Incompatible level: regenerating..."),this.randomSpecies(A,s,(R||0)+1);const h=_.getWildSpeciesForLevel(s,!0,i??L,n.gameMode);return h!==_.speciesId&&(console.log("Replaced",e[_.speciesId],"with",e[h]),_=ke(h)),_}randomTrainerType(A,s=!1){const R=!!this.trainerPool[qA.BOSS].length&&(n.gameMode.isTrainerBoss(A,this.biomeType,n.offsetGym)||s);console.log(s,this.trainerPool);const a=ce(R?64:512);let i=R?a>=20?qA.BOSS:a>=6?qA.BOSS_RARE:a>=1?qA.BOSS_SUPER_RARE:qA.BOSS_ULTRA_RARE:a>=156?qA.COMMON:a>=32?qA.UNCOMMON:a>=6?qA.RARE:a>=1?qA.SUPER_RARE:qA.ULTRA_RARE;for(console.log(qA[i]);i&&!this.trainerPool[i].length;)console.log(`Downgraded trainer rarity tier from ${qA[i]} to ${qA[i-1]}`),i--;const r=this.trainerPool[i]||[];return r.length?r[ce(r.length)]:U.BREEDER}getSpeciesFormIndex(A){switch(A.speciesId){case e.BURMY:case e.WORMADAM:switch(this.biomeType){case T.BEACH:return 1;case T.SLUM:return 2}break;case e.ROTOM:switch(this.biomeType){case T.VOLCANO:return 1;case T.SEA:return 2;case T.ICE_CAVE:return 3;case T.MOUNTAIN:return 4;case T.TALL_GRASS:return 5}break;case e.LYCANROC:switch(this.getTimeOfDay()){case S.DAY:case S.DAWN:return 0;case S.DUSK:return 2;case S.NIGHT:return 1}break}return 0}getBgTerrainColorRatioForBiome(){switch(this.biomeType){case T.SPACE:return 1;case T.END:return 0}return 131/180}trySetWeatherOverride(A){return this.weather=new XT(A,0),n.unshiftPhase(new Ns(void 0,void 0,lA.SUNNY+(A-1))),n.queueMessage(Bx(A)),!0}trySetWeather(A,s){var a,i,r,L;if(Ye.WEATHER_OVERRIDE)return this.trySetWeatherOverride(Ye.WEATHER_OVERRIDE);if(((a=this.weather)==null?void 0:a.weatherType)===(A||void 0))return!1;const R=((i=this.weather)==null?void 0:i.weatherType)||Oe.NONE;return this.weather=A?new XT(A,s?5:0):null,this.eventTarget.dispatchEvent(new FI(R,(r=this.weather)==null?void 0:r.weatherType,(L=this.weather)==null?void 0:L.turnsLeft)),this.weather?(n.unshiftPhase(new Ns(void 0,void 0,lA.SUNNY+(A-1),!0)),n.queueMessage(Bx(A))):n.queueMessage(yk(R)),n.getField(!0).filter(o=>o.isOnField()).map(o=>{o.findAndRemoveTags(l=>"weatherTypes"in l&&!l.weatherTypes.find(C=>C===A)),mJ(mS,o,A)}),!0}triggerWeatherBasedFormChanges(){n.getField(!0).forEach(A=>{const s=A.hasAbility(O.FORECAST)&&A.species.speciesId===e.CASTFORM,R=A.hasAbility(O.FLOWER_GIFT)&&A.species.speciesId===e.CHERRIM;(s||R)&&(new jn(A.getBattlerIndex()),n.triggerPokemonFormChange(A,mR))})}triggerWeatherBasedFormChangesToNormal(){n.getField(!0).forEach(A=>{const s=A.hasAbility(O.FORECAST,!1,!0)&&A.species.speciesId===e.CASTFORM,R=A.hasAbility(O.FLOWER_GIFT,!1,!0)&&A.species.speciesId===e.CHERRIM;if(s||R)return new jn(A.getBattlerIndex()),n.triggerPokemonFormChange(A,xn)})}trySetTerrain(A,s,R=!1){var i,r,L,o;if(((i=this.terrain)==null?void 0:i.terrainType)===(A||void 0))return!1;const a=((r=this.terrain)==null?void 0:r.terrainType)||Tt.NONE;return this.terrain=A?new LC(A,s?5:0):null,this.eventTarget.dispatchEvent(new zT(a,(L=this.terrain)==null?void 0:L.terrainType,(o=this.terrain)==null?void 0:o.turnsLeft)),this.terrain?(R||n.unshiftPhase(new Ns(void 0,void 0,lA.MISTY_TERRAIN+(A-1))),n.queueMessage(wk(A))):n.queueMessage(vk(a)),n.getField(!0).filter(l=>l.isOnField()).map(l=>{l.findAndRemoveTags(C=>"terrainTypes"in C&&!C.terrainTypes.find(M=>M===A)),pJ(yU,l,A),ut(su,l,null,!1)}),!0}isMoveWeatherCancelled(A,s){return!!this.weather&&!this.weather.isEffectSuppressed()&&this.weather.isMoveWeatherCancelled(A,s)}isMoveTerrainCancelled(A,s,R){return!!this.terrain&&this.terrain.isMoveTerrainCancelled(A,s,R)}getTerrainType(){var A;return((A=this.terrain)==null?void 0:A.terrainType)??Tt.NONE}getAttackTypeMultiplier(A,s){let R=1;this.weather&&!this.weather.isEffectSuppressed()&&(R=this.weather.getAttackTypeMultiplier(A));let a=1;return this.terrain&&s&&(a=this.terrain.getAttackTypeMultiplier(A)),R*a}getTrainerChance(){switch(this.biomeType){case T.METROPOLIS:return 2;case T.SLUM:case T.BEACH:case T.DOJO:case T.CONSTRUCTION_SITE:return 4;case T.PLAINS:case T.GRASS:case T.LAKE:case T.CAVE:return 6;case T.TALL_GRASS:case T.FOREST:case T.SEA:case T.SWAMP:case T.MOUNTAIN:case T.BADLANDS:case T.DESERT:case T.MEADOW:case T.POWER_PLANT:case T.GRAVEYARD:case T.FACTORY:case T.SNOWY_FOREST:return 8;case T.ICE_CAVE:case T.VOLCANO:case T.RUINS:case T.WASTELAND:case T.JUNGLE:case T.FAIRY_CAVE:return 12;case T.SEABED:case T.ABYSS:case T.SPACE:case T.TEMPLE:return 16;default:return 0}}getTimeOfDay(){var s;switch(this.biomeType){case T.ABYSS:return S.NIGHT}const A=((((s=n.currentBattle)==null?void 0:s.waveIndex)||0)+n.waveCycleOffset)%40;return A<15?S.DAY:A<20?S.DUSK:A<35?S.NIGHT:S.DAWN}isOutside(){switch(this.biomeType){case T.SEABED:case T.CAVE:case T.ICE_CAVE:case T.POWER_PLANT:case T.DOJO:case T.FACTORY:case T.ABYSS:case T.FAIRY_CAVE:case T.TEMPLE:case T.LABORATORY:return!1;default:return!0}}overrideTint(){switch(Ye.ARENA_TINT_OVERRIDE){case S.DUSK:return[98,48,73].map(A=>Math.round((A+128)/2));case S.NIGHT:return[64,64,64];case S.DAWN:case S.DAY:default:return[128,128,128]}}getDayTint(){if(Ye.ARENA_TINT_OVERRIDE!==null)return this.overrideTint();switch(this.biomeType){case T.ABYSS:return[64,64,64];default:return[128,128,128]}}getDuskTint(){if(Ye.ARENA_TINT_OVERRIDE)return this.overrideTint();if(!this.isOutside())return[0,0,0];switch(this.biomeType){default:return[98,48,73].map(A=>Math.round((A+128)/2))}}getNightTint(){if(Ye.ARENA_TINT_OVERRIDE)return this.overrideTint();switch(this.biomeType){case T.ABYSS:case T.SPACE:case T.END:return this.getDayTint()}if(!this.isOutside())return[64,64,64];switch(this.biomeType){default:return[48,48,98]}}setIgnoreAbilities(A,s=null){this.ignoreAbilities=A,this.ignoringEffectSource=A?s:null}applyTagsForSide(A,s,R,...a){let i=typeof A=="string"?this.tags.filter(r=>r.tagType===A):this.tags.filter(r=>r instanceof A);s!==St.BOTH&&(i=i.filter(r=>r.side===s)),i.forEach(r=>r.apply(this,R,...a))}applyTags(A,s,...R){this.applyTagsForSide(A,St.BOTH,s,...R)}addTag(A,s,R,a,i=St.BOTH,r=!1,L){const o=this.getTagOnSide(A,i);if(o){if(o.onOverlap(this),o instanceof nO){const{tagType:C,side:M,turnCount:D,layers:_,maxLayers:P}=o;this.eventTarget.dispatchEvent(new Ai(C,M,D,_,P))}return!1}const l=Y8(A,s||0,R,a,L,i);if(l){this.tags.push(l),l.onAdd(this,r);const{layers:C=0,maxLayers:M=0}=l instanceof nO?l:{};this.eventTarget.dispatchEvent(new Ai(l.tagType,l.side,l.turnCount,C,M))}return!0}getTag(A){return this.getTagOnSide(A,St.BOTH)}hasTag(A){return!!this.getTag(A)}getTagOnSide(A,s){return typeof A=="string"?this.tags.find(R=>R.tagType===A&&(s===St.BOTH||R.side===St.BOTH||R.side===s)):this.tags.find(R=>R instanceof A&&(s===St.BOTH||R.side===St.BOTH||R.side===s))}findTags(A){return this.findTagsOnSide(A,St.BOTH)}findTagsOnSide(A,s){return this.tags.filter(R=>A(R)&&(s===St.BOTH||R.side===St.BOTH||R.side===s))}lapseTags(){this.tags.filter(A=>!A.lapse(this)).forEach(A=>{A.onRemove(this),this.tags.splice(this.tags.indexOf(A),1),this.eventTarget.dispatchEvent(new Ba(A.tagType,A.side,A.turnCount))})}removeTag(A){const s=this.tags,R=s.find(a=>a.tagType===A);return R&&(R.onRemove(this),s.splice(s.indexOf(R),1),this.eventTarget.dispatchEvent(new Ba(R.tagType,R.side,R.turnCount))),!!R}removeTagOnSide(A,s,R=!1){const a=this.getTagOnSide(A,s);return a&&(a.onRemove(this,R),this.tags.splice(this.tags.indexOf(a),1),this.eventTarget.dispatchEvent(new Ba(a.tagType,a.side,a.turnCount))),!!a}removeAllTags(){for(;this.tags.length;)this.tags[0].onRemove(this),this.eventTarget.dispatchEvent(new Ba(this.tags[0].tagType,this.tags[0].side,this.tags[0].turnCount)),this.tags.splice(0,1)}resetArenaEffects(){var A;((A=this.weather)==null?void 0:A.turnsLeft)!==0&&this.trySetWeather(Oe.NONE,!1),this.trySetTerrain(Tt.NONE,!1,!0),this.removeAllTags()}preloadBgm(){n.loadBgm(this.bgm)}getBgmLoopPoint(){switch(this.biomeType){case T.TOWN:return 7.288;case T.PLAINS:return 17.485;case T.GRASS:return 1.995;case T.TALL_GRASS:return 9.608;case T.METROPOLIS:return 141.47;case T.FOREST:return .341;case T.SEA:return .024;case T.SWAMP:return 4.461;case T.BEACH:return 3.462;case T.LAKE:return 7.215;case T.SEABED:return 2.6;case T.MOUNTAIN:return 4.018;case T.BADLANDS:return 17.79;case T.CAVE:return 14.24;case T.DESERT:return 1.143;case T.ICE_CAVE:return 0;case T.MEADOW:return 3.891;case T.POWER_PLANT:return 9.447;case T.VOLCANO:return 17.637;case T.GRAVEYARD:return 13.711;case T.DOJO:return 6.205;case T.FACTORY:return 4.985;case T.RUINS:return 0;case T.WASTELAND:return 6.336;case T.ABYSS:return 5.13;case T.SPACE:return 20.036;case T.CONSTRUCTION_SITE:return 1.222;case T.JUNGLE:return 0;case T.FAIRY_CAVE:return 4.542;case T.TEMPLE:return 2.547;case T.ISLAND:return 2.751;case T.LABORATORY:return 114.862;case T.SLUM:return 0;case T.SNOWY_FOREST:return 3.047;default:return console.warn(`missing bgm loop-point for biome "${T[this.biomeType]}" (=${this.biomeType})`),0}}};N(Tx,"Arena");let kD=Tx;function Qo(E){return T[E].toLowerCase()}N(Qo,"getBiomeKey");function e7(E){switch(E){case T.METROPOLIS:case T.BEACH:case T.LAKE:case T.SEABED:case T.MOUNTAIN:case T.BADLANDS:case T.CAVE:case T.DESERT:case T.ICE_CAVE:case T.MEADOW:case T.POWER_PLANT:case T.VOLCANO:case T.GRAVEYARD:case T.FACTORY:case T.RUINS:case T.WASTELAND:case T.ABYSS:case T.CONSTRUCTION_SITE:case T.JUNGLE:case T.FAIRY_CAVE:case T.TEMPLE:case T.SNOWY_FOREST:case T.ISLAND:case T.LABORATORY:case T.END:return!0}return!1}N(e7,"getBiomeHasProps");const Sx=class Sx extends Phaser.GameObjects.Container{constructor(A){super(n,0,0),this.player=A,this.base=n.addFieldSprite(0,0,"plains_a",void 0,1),this.base.setOrigin(0,0),this.props=A?[]:new Array(3).fill(null).map(()=>{const s=n.addFieldSprite(0,0,"plains_b",void 0,1);return s.setOrigin(0,0),s.setVisible(!1),s})}setBiome(A,s){var r;const R=e7(A),a=Qo(A),i=`${a}_${this.player?"a":"b"}`;if(A!==this.biome){if(this.base.setTexture(i),this.base.texture.frameTotal>1){const L=n.anims.generateFrameNames(i,{zeroPad:4,suffix:".png",start:1,end:this.base.texture.frameTotal-1});n.anims.exists(i)||n.anims.create({key:i,frames:L,frameRate:12,repeat:-1}),this.base.play(i)}else this.base.stop();this.add(this.base)}this.player||n.executeWithSeedOffset(()=>{this.propValue=s===void 0?R?ce(8):0:s,this.props.forEach((L,o)=>{const l=`${a}_b${R?`_${o+1}`:""}`;if(L.setTexture(l),R&&L.texture.frameTotal>1){const C=n.anims.generateFrameNames(l,{zeroPad:4,suffix:".png",start:1,end:L.texture.frameTotal-1});n.anims.exists(l)||n.anims.create({key:l,frames:C,frameRate:12,repeat:-1}),L.play(l)}else L.stop();L.setVisible(R&&!!(this.propValue&1<<o)),this.add(L)})},((r=n.currentBattle)==null?void 0:r.waveIndex)||0,n.waveSeed)}};N(Sx,"ArenaBase");let Er=Sx,Ml;const ox=class ox extends Phaser.Loader.LoaderPlugin{constructor(A){super(A)}get manifest(){return Ml}set manifest(A){Ml=A}addFile(A){Array.isArray(A)||(A=[A]),A.forEach(s=>{if(Ml){const R=Ml[`/${s.url.replace(/\/\//g,"/")}`];R&&(s.url+=`?t=${R}`)}}),super.addFile(A)}};N(ox,"CacheBustedLoaderPlugin");let D1=ox;const Ga=class Ga extends Fl{constructor(){super(Ga.KEY),this.LOAD_EVENTS=Phaser.Loader.Events,Phaser.Plugins.PluginCache.register("Loader",D1,"load")}preload(){B7(),this.load.manifest=this.game.manifest,this.loadImage("loading_bg","arenas"),this.loadImage("logo",""),this.loadAtlas("bg","ui"),this.loadAtlas("prompt","ui"),this.loadImage("candy","ui"),this.loadImage("candy_overlay","ui"),this.loadImage("friendship","ui"),this.loadImage("friendship_overlay","ui"),this.loadImage("cursor","ui"),this.loadImage("cursor_reverse","ui");for(const R of DE(sO))for(let a=1;a<=5;a++)this.loadImage(`window_${a}${KL(R)}`,"ui/windows");this.loadAtlas("namebox","ui"),this.loadImage("pbinfo_player","ui"),this.loadImage("pbinfo_player_stats","ui"),this.loadImage("pbinfo_player_mini","ui"),this.loadImage("pbinfo_player_mini_stats","ui"),this.loadAtlas("pbinfo_player_type","ui"),this.loadAtlas("pbinfo_player_type1","ui"),this.loadAtlas("pbinfo_player_type2","ui"),this.loadImage("pbinfo_enemy_mini","ui"),this.loadImage("pbinfo_enemy_mini_stats","ui"),this.loadImage("pbinfo_enemy_boss","ui"),this.loadImage("pbinfo_enemy_boss_stats","ui"),this.loadAtlas("pbinfo_enemy_type","ui"),this.loadAtlas("pbinfo_enemy_type1","ui"),this.loadAtlas("pbinfo_enemy_type2","ui"),this.loadAtlas("pbinfo_stat","ui"),this.loadAtlas("pbinfo_stat_numbers","ui"),this.loadImage("overlay_lv","ui"),this.loadAtlas("numbers","ui"),this.loadAtlas("numbers_red","ui"),this.loadAtlas("overlay_hp","ui"),this.loadAtlas("overlay_hp_boss","ui"),this.loadImage("overlay_exp","ui"),this.loadImage("icon_owned","ui"),this.loadImage("icon_egg_move","ui"),this.loadImage("ability_bar_left","ui"),this.loadImage("bgm_bar","ui"),this.loadImage("party_exp_bar","ui"),this.loadImage("achv_bar","ui"),this.loadImage("achv_bar_2","ui"),this.loadImage("achv_bar_3","ui"),this.loadImage("achv_bar_4","ui"),this.loadImage("achv_bar_5","ui"),this.loadImage("shiny_star","ui","shiny.png"),this.loadImage("shiny_star_1","ui","shiny_1.png"),this.loadImage("shiny_star_2","ui","shiny_2.png"),this.loadImage("shiny_star_small","ui","shiny_small.png"),this.loadImage("shiny_star_small_1","ui","shiny_small_1.png"),this.loadImage("shiny_star_small_2","ui","shiny_small_2.png"),this.loadImage("favorite","ui","favorite.png"),this.loadImage("passive_bg","ui","passive_bg.png"),this.loadAtlas("shiny_icons","ui"),this.loadImage("ha_capsule","ui","ha_capsule.png"),this.loadImage("champion_ribbon","ui","champion_ribbon.png"),this.loadImage("icon_spliced","ui"),this.loadImage("icon_lock","ui","icon_lock.png"),this.loadImage("icon_stop","ui","icon_stop.png"),this.loadImage("icon_tera","ui"),this.loadImage("type_tera","ui"),this.loadAtlas("type_bgs","ui"),this.loadImage("dawn_icon_fg","ui"),this.loadImage("dawn_icon_mg","ui"),this.loadImage("dawn_icon_bg","ui"),this.loadImage("day_icon_fg","ui"),this.loadImage("day_icon_mg","ui"),this.loadImage("day_icon_bg","ui"),this.loadImage("dusk_icon_fg","ui"),this.loadImage("dusk_icon_mg","ui"),this.loadImage("dusk_icon_bg","ui"),this.loadImage("night_icon_fg","ui"),this.loadImage("night_icon_mg","ui"),this.loadImage("night_icon_bg","ui"),this.loadImage("pb_tray_overlay_player","ui"),this.loadImage("pb_tray_overlay_enemy","ui"),this.loadAtlas("pb_tray_ball","ui"),this.loadImage("party_bg","ui"),this.loadImage("party_bg_double","ui"),this.loadAtlas("party_slot_main","ui"),this.loadAtlas("party_slot","ui"),this.loadImage("party_slot_overlay_lv","ui"),this.loadImage("party_slot_hp_bar","ui"),this.loadAtlas("party_slot_hp_overlay","ui"),this.loadAtlas("party_pb","ui"),this.loadAtlas("party_cancel","ui"),this.loadImage("summary_bg","ui"),this.loadImage("summary_overlay_shiny","ui"),this.loadImage("summary_profile","ui"),this.loadImage("summary_profile_prompt_z","ui"),this.loadImage("summary_profile_prompt_a","ui"),this.loadImage("summary_profile_ability","ui"),this.loadImage("summary_profile_passive","ui"),this.loadImage("summary_status","ui"),this.loadImage("summary_stats","ui"),this.loadImage("summary_stats_overlay_exp","ui"),this.loadImage("summary_moves","ui"),this.loadImage("summary_moves_effect","ui"),this.loadImage("summary_moves_overlay_row","ui"),this.loadImage("summary_moves_overlay_pp","ui"),this.loadAtlas("summary_moves_cursor","ui");for(let R=1;R<=3;R++)this.loadImage(`summary_tabs_${R}`,"ui");this.loadImage("scroll_bar","ui"),this.loadImage("scroll_bar_handle","ui"),this.loadImage("starter_container_bg","ui"),this.loadImage("starter_select_bg","ui"),this.loadImage("select_cursor","ui"),this.loadImage("select_cursor_highlight","ui"),this.loadImage("select_cursor_highlight_thick","ui"),this.loadImage("select_cursor_pokerus","ui"),this.loadImage("select_gen_cursor","ui"),this.loadImage("select_gen_cursor_highlight","ui"),this.loadImage("saving_icon","ui"),this.loadImage("discord","ui"),this.loadImage("google","ui"),this.loadImage("settings_icon","ui"),this.loadImage("link_icon","ui"),this.loadImage("unlink_icon","ui"),this.loadImage("default_bg","arenas"),DE(T).map(R=>{const a=T[R].toLowerCase(),i=a==="end",r=`${a}_a`,L=`${a}_b`;if(this.loadImage(`${a}_bg`,"arenas"),i?this.loadAtlas(r,"arenas"):this.loadImage(r,"arenas"),i?this.loadAtlas(L,"arenas"):this.loadImage(L,"arenas"),e7(R))for(let o=1;o<=3;o++){const l=o===3&&["power_plant","end"].find(M=>M===a),C=`${a}_b_${o}`;l?this.loadAtlas(C,"arenas"):this.loadImage(C,"arenas")}}),this.load.bitmapFont("item-count","fonts/item-count.png","fonts/item-count.xml"),this.loadAtlas("trainer_m_back","trainer"),this.loadAtlas("trainer_m_back_pb","trainer"),this.loadAtlas("trainer_f_back","trainer"),this.loadAtlas("trainer_f_back_pb","trainer"),this.loadAtlas("c_rival_m","character","rival_m"),this.loadAtlas("c_rival_f","character","rival_f"),this.loadImage("pkmn__back__sub","pokemon/back","sub.png"),this.loadImage("pkmn__sub","pokemon","sub.png"),this.loadAtlas("battle_stats","effects"),this.loadAtlas("shiny","effects"),this.loadAtlas("shiny_2","effects"),this.loadAtlas("shiny_3","effects"),this.loadImage("tera","effects"),this.loadAtlas("pb_particles","effects"),this.loadImage("evo_sparkle","effects"),this.loadAtlas("tera_sparkle","effects"),this.load.video("evo_bg","images/effects/evo_bg.mp4",!0),this.loadAtlas("pb",""),this.loadAtlas("items",""),this.loadAtlas("types","");const A=u.resolvedLanguage;A!=="en"?g7(A)?(this.loadAtlas(`statuses_${A}`,""),this.loadAtlas(`types_${A}`,"")):(this.loadAtlas("statuses",""),this.loadAtlas("types","")):(this.loadAtlas("statuses",""),this.loadAtlas("types","")),A&&["en","de","it","fr","ja","ko","es-ES","pt-BR","zh-CN"].includes(A)?this.loadImage("yearofthesnakeevent-"+A,"events"):this.loadImage("yearofthesnakeevent-en","events"),this.loadAtlas("statuses",""),this.loadAtlas("categories",""),this.loadAtlas("egg","egg"),this.loadAtlas("egg_crack","egg"),this.loadAtlas("egg_icons","egg"),this.loadAtlas("egg_shard","egg"),this.loadAtlas("egg_lightrays","egg"),lO(mn).forEach(R=>{const a=R.toLowerCase();this.loadImage(`gacha_${a}`,"egg"),this.loadAtlas(`gacha_underlay_${a}`,"egg")}),this.loadImage("gacha_glass","egg"),this.loadImage("gacha_eggs","egg"),this.loadAtlas("gacha_hatch","egg"),this.loadImage("gacha_knob","egg"),this.loadImage("egg_list_bg","ui"),this.loadImage("egg_summary_bg","ui"),this.loadImage("end_m","cg"),this.loadImage("end_f","cg");for(let R=0;R<10;R++)this.loadAtlas(`pokemon_icons_${R}`,""),R&&this.loadAtlas(`pokemon_icons_${R}v`,"");this.loadImage("encounter_radar","mystery-encounters"),this.loadAtlas("dualshock","inputs"),this.loadAtlas("xbox","inputs"),this.loadAtlas("keyboard","inputs"),this.loadSe("select","ui"),this.loadSe("menu_open","ui"),this.loadSe("error","ui"),this.loadSe("hit"),this.loadSe("hit_strong"),this.loadSe("hit_weak"),this.loadSe("stat_up"),this.loadSe("stat_down"),this.loadSe("faint"),this.loadSe("flee"),this.loadSe("low_hp"),this.loadSe("exp"),this.loadSe("level_up"),this.loadSe("sparkle"),this.loadSe("restore"),this.loadSe("shine"),this.loadSe("shing"),this.loadSe("charge"),this.loadSe("beam"),this.loadSe("upgrade"),this.loadSe("buy"),this.loadSe("achv"),this.loadSe("pb_rel"),this.loadSe("pb_throw"),this.loadSe("pb_bounce_1"),this.loadSe("pb_bounce_2"),this.loadSe("pb_move"),this.loadSe("pb_catch"),this.loadSe("pb_lock"),this.loadSe("crit_throw"),this.loadSe("pb_tray_enter"),this.loadSe("pb_tray_ball"),this.loadSe("pb_tray_empty"),this.loadSe("egg_crack"),this.loadSe("egg_hatch"),this.loadSe("gacha_dial"),this.loadSe("gacha_running"),this.loadSe("gacha_dispense"),this.loadSe("PRSFX- Transform","battle_anims"),this.loadBgm("menu"),this.loadBgm("level_up_fanfare","bw/level_up_fanfare.mp3"),this.loadBgm("item_fanfare","bw/item_fanfare.mp3"),this.loadBgm("minor_fanfare","bw/minor_fanfare.mp3"),this.loadBgm("heal","bw/heal.mp3"),this.loadBgm("victory_trainer","bw/victory_trainer.mp3"),this.loadBgm("victory_team_plasma","bw/victory_team_plasma.mp3"),this.loadBgm("victory_gym","bw/victory_gym.mp3"),this.loadBgm("victory_champion","bw/victory_champion.mp3"),this.loadBgm("evolution","bw/evolution.mp3"),this.loadBgm("evolution_fanfare","bw/evolution_fanfare.mp3"),this.load.plugin("rextexteditplugin","https://raw.githubusercontent.com/rexrainbow/phaser3-rex-notes/master/dist/rextexteditplugin.min.js",!0),this.loadLoadingScreen(),Mk(),_k(),zQ(),r$(),L$(),rk(),n9(),ik(),I$(),yJ(),FQ(),mQ()}loadLoadingScreen(){const A=K7(),s=[],R=this.add.image(0,0,"");R.setOrigin(0,0),R.setScale(6),R.setVisible(!1);const a=this.add.graphics();a.lineStyle(4,16711935,1).setDepth(10);const i=this.add.graphics(),r=this.add.graphics();r.lineStyle(5,16711935,1),r.fillStyle(2236962,.8);const L=this.cameras.main.width,o=this.cameras.main.height,l=L/2,C=o/2,M=this.add.image(l,240,"");M.setVisible(!1),M.setOrigin(.5,.5),M.setScale(4);const D=this.make.text({x:l,y:C-24,text:"0%",style:{font:"72px emerald",color:"#ffffff"}});D.setOrigin(.5,.5);const _=this.make.text({x:l,y:C+48,text:"",style:{font:"48px emerald",color:"#ffffff"}});_.setOrigin(.5,.5);const P=this.make.text({x:l,y:_.y+152,text:u.t("menu:disclaimer"),style:{font:"72px emerald",color:"#DA3838"}});P.setOrigin(.5,.5);const h=this.make.text({x:l,y:P.y+120,text:u.t("menu:disclaimerDescription"),style:{font:"48px emerald",color:"#ffffff",align:"center"}});h.setOrigin(.5,.5),s.push(R,a,i,r,M,D,_,P,h),A||s.map(d=>d.setVisible(!1));const H=this.add.video(0,0);H.once(Phaser.GameObjects.Events.VIDEO_COMPLETE,d=>{this.tweens.add({targets:H,duration:500,alpha:0,ease:"Sine.easeIn",onComplete:N(()=>d.destroy(),"onComplete")}),s.forEach(f=>f.setVisible(!0))}),H.setOrigin(0,0),H.setScale(3),this.load.once(this.LOAD_EVENTS.START,()=>{var d,f;H.loadURL("images/intro_dark.mp4",!0),A&&((d=H.video)==null||d.setAttribute("webkit-playsinline","webkit-playsinline"),(f=H.video)==null||f.setAttribute("playsinline","playsinline")),H.play()}),this.load.on(this.LOAD_EVENTS.PROGRESS,d=>{D.setText(`${Math.floor(d*100)}%`),i.clear(),i.fillStyle(16777215,.8),i.fillRect(l-320,360,640*d,64)}),this.load.on(this.LOAD_EVENTS.FILE_COMPLETE,d=>{switch(_.setText(u.t("menu:loadingAsset",{assetName:d})),d){case"loading_bg":R.setTexture("loading_bg"),A&&R.setVisible(!0);break;case"logo":M.setTexture("logo"),A&&M.setVisible(!0);break}}),this.load.on(this.LOAD_EVENTS.COMPLETE,()=>{s.forEach(d=>d.destroy()),H.destroy()})}get gameHeight(){return this.game.config.height}get gameWidth(){return this.game.config.width}async create(){this.events.once(Phaser.Scenes.Events.DESTROY,()=>this.handleDestroy()),this.scene.start("battle")}handleDestroy(){console.debug(`Destroying ${Ga.KEY} scene`),this.load.off(this.LOAD_EVENTS.PROGRESS),this.load.off(this.LOAD_EVENTS.FILE_COMPLETE),this.load.off(this.LOAD_EVENTS.COMPLETE),this.children.removeAll(!0),console.debug(`Destroyed ${Ga.KEY} scene`)}};N(Ga,"LoadingScene"),Ga.KEY="loading";let ZD=Ga;const o$=Object.freeze(Object.defineProperty({__proto__:null,LoadingScene:ZD},Symbol.toStringTag,{value:"Module"}));export{S$ as b,o$ as l};
